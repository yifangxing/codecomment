file_path,Name,full_name,Start Line,End Line,Comment,Pre_Comment,child Name,domain,inner_method,node_level
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,<init>,org.apache.pdfbox.Loader:<init>(),45,47,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorName.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorName:<init>(),114,116,"/**
 * Private constructor for OperatorName class.
 */",* private constructor,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes an OperatorProcessor with a given PDFStreamEngine.
 * @param context the PDF processing context
 */","* Creates a new OperatorProcessor.
     * 
     * @param context the processing context to be used",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBase.java,<init>,org.apache.pdfbox.cos.COSBase:<init>(),37,39,"/**
 * Constructs an empty COSBase instance.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,<init>,org.apache.pdfbox.cos.COSUpdateState:<init>(org.apache.pdfbox.cos.COSUpdateInfo),53,56,"/**
 * Constructs a new COSUpdateState with the given update information.
 * @param updateInfo the COSUpdateInfo object containing update details
 */","* Creates a new {@link COSUpdateState} for the given {@link COSUpdateInfo}.
     *
     * @param updateInfo The {@link COSUpdateInfo}, that shall be managed by this {@link COSUpdateState}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<init>,org.apache.pdfbox.cos.PDFDocEncoding:<init>(),108,110,"/**
 * Private constructor to prevent instantiation of the class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream$Code:<init>(int,int)",272,275,"/**
 * Initializes a new Code instance.
 * @param code numeric code value
 * @param length number of digits in the code
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(),44,47,"/**
 * Default constructor for DecodeOptions.
 */",* Constructs an empty DecodeOptions instance,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(java.awt.Rectangle),55,58,"/**
 * Initializes new DecodeOptions with specified source region.
 * @param sourceRegion rectangle defining the area to decode
 */","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param sourceRegion Region of the source image that should be decoded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(int),81,85,"/**
 * Initializes decode options with uniform subsampling.
 * @param subsampling factor for both X and Y dimensions
 */","* Constructs an instance specifying the image should be decoded using subsampling. The
     * subsampling will be the same for the X and Y axes.
     *
     * @param subsampling The number of rows and columns to advance in the source for each pixel in
     * the decoded image.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary),36,39,"/**
 * Initializes DecodeResult with given parameters.
 * @param parameters COSDictionary containing decode parameters
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,"org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)",41,45,"/**
 * Constructs a DecodeResult with given parameters and color space.
 * @param parameters dictionary containing decode parameters
 * @param colorSpace the JPX color space associated with the result
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<init>,org.apache.pdfbox.filter.Filter:<init>(),66,68,"/**
* Constructs a new Filter instance.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,org.apache.pdfbox.filter.Predictor:<init>(),33,35,"/**
* Private constructor to prevent instantiation.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$LayoutPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,short)",289,295,"/**
* Initializes a new LayoutPage with specified parameters.
* @param mediaBox dimensions of the page
* @param contentStream stream containing page content
* @param resources dictionary of page resources
* @param rotation page orientation in degrees
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,"org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)",54,59,"/**
* Initializes a PageExtractor with a document and page range.
* @param sourceDocument the PDF document to extract pages from
* @param startPage the starting page index (inclusive)
* @param endPage the ending page index (exclusive)
*/","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.
     * @param startPage The first page you want extracted (1-based, inclusive)
     * @param endPage The last page you want extracted (1-based, inclusive)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<init>,org.apache.pdfbox.pdfparser.XrefParser:<init>(org.apache.pdfbox.pdfparser.COSParser),64,68,"/**
 * Initializes XrefParser with a COSParser.
 * @param cosParser the COSParser instance to use
 */","* Default constructor.
     *
     * @param cosParser the parser to be used to read the pdf.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,<init>,org.apache.pdfbox.pdfparser.xref.AbstractXReference:<init>(org.apache.pdfbox.pdfparser.xref.XReferenceType),37,40,"/**
 * Initializes an XReference with a specified type.
 * @param type the XReferenceType to be assigned
 */","* Creates a crossreference stream entry of the given {@link XReferenceType}.
     *
     * @param type The {@link XReferenceType} of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,<init>,org.apache.pdfbox.pdfwriter.ContentStreamWriter:<init>(java.io.OutputStream),59,62,"/**
 * Initializes a new instance of ContentStreamWriter.
 * @param out the OutputStream to write content to
 */","* This will create a new content stream writer.
     *
     * @param out The stream to write the data to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(boolean),42,45,"/**
 * Initializes cache creation with stable cache option.
 * @param enableStableCache flag to enable or disable stable caching
 */","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,93,"/**
* Initializes a new PDDocumentCatalog.
* @param doc the PDDocument associated with this catalog
* @param rootDictionary the root dictionary of the catalog
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.
     * @param rootDictionary The root dictionary that this object wraps.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes document information with a dictionary.
 * @param dic dictionary containing document metadata
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),41,44,"/**
 * Initializes a new PDDocumentNameDestinationDictionary with a given COSDictionary.
 * @param dict the underlying COSDictionary to use
 */","* Constructor.
     *
     * @param dict The dictionary of names and corresponding destinations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.cos.COSDictionary)",56,60,"/**
 * Initializes a new PDDocumentNameDictionary with a document catalog and a COS dictionary.
 * @param cat the document catalog to associate with this dictionary
 * @param names the COS dictionary containing the names entries
 */","* Constructor.
     *
     * @param cat The document that this dictionary is part of.
     * @param names The names dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary),104,107,"/**
 * Constructs a new PDPage from a COSDictionary.
 * @param pageDictionary dictionary containing page information
 */","* Creates a new instance of PDPage for reading.
     * 
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,"org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",114,118,"/**
* Initializes a new PDF page.
* @param pageDictionary dictionary representing the page
* @param resourceCache cache for resources used in the page
*/","* Creates a new instance of PDPage for reading.
     *
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,<init>,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:<init>(java.util.Map,org.apache.pdfbox.cos.COSDictionary)",50,54,"/**
* Initializes a new COSDictionaryMap with provided maps.
* @param actualsMap the actual values map
* @param dicMap the COS dictionary map
*/","* Constructor for this map.
     *
     * @param actualsMap The map with standard java objects as values.
     * @param dicMap The map with COSBase objects as values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a new PDDictionaryWrapper with the given COSDictionary.
 * @param dictionary the underlying COSDictionary to wrap
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Initializes a PDNameTreeNode with a given dictionary.
 * @param dict The COSDictionary to initialize the node with.
 */","* Constructor.
     *
     * @param dict The dictionary that holds the name information.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,"org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)",66,70,"/**
* Initializes a PDNumberTreeNode with a dictionary and value class.
* @param dict the COSDictionary representing the node
* @param valueClass the class of values stored in the node
*/","* Constructor.
     *
     * @param dict The dictionary that holds the number information.
     * @param valueClass The PD Model type of object that is the value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(org.apache.pdfbox.cos.COSDictionary),83,86,"/**
 * Initializes a PDPageLabelRange with a given dictionary.
 * @param dict COSDictionary containing page label information
 */","* Creates a new page label range object from the given dictionary.
     * 
     * @param dict
     *            the base dictionary for the new object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:<init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)",301,306,"/**
* Initializes a new LabelGenerator with page labels and total pages.
* @param label PDPageLabelRange object defining the page labels
* @param pages total number of pages to be labeled
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDRange from a COSArray.
 * @param range array representing the range values
 */","* Constructor assumes a starting index of 0.
     *
     * @param range The array that describes the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray,int)",64,68,"/**
 * Initializes a PDRange with a given COSArray and index.
 * @param range the COSArray containing range data
 * @param index the starting index within the array
 */","* Constructor with an index into an array.  Because some arrays specify
     * multiple ranges ie [ 0,1,  0,2,  2,3 ] It is convenient for this
     * class to take an index into an array.  So if you want this range to
     * represent 0,2 in the above example then you would say <code>new PDRange( array, 1 )</code>.
     *
     * @param range The array that describes the index
     * @param index The range index into the array for the start of the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSStream),81,84,"/**
 * Initializes a new PDStream with the given COSStream.
 * @param str the underlying COSStream object
 */","* Creates a PDStream which wraps the given COSStream.
     * 
     * @param str The stream parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators:<init>(),28,31,"/**
 * Private default constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators:<init>(),28,31,"/**
 * Prevents instantiation of this utility class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators:<init>(),28,31,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser:<init>(),33,36,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators:<init>(),28,31,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators:<init>(),30,33,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes PDMarkInfo with a COSDictionary.
 * @param dic the COSDictionary to initialize with
 */","* Constructor for an existing MarkInfo element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Initializes a new instance with a COSDictionary.
 * @param dictionary the COSDictionary to use
 */","* Constructor for an existing marked content reference.
     * 
     * @param dictionary the page dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Initializes a PDObjectReference with a COSDictionary.
 * @param theDictionary the underlying COSDictionary object
 */","* Constructor for an existing object reference.
     *
     * @param theDictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSArray),37,40,"/**
 * Constructs a PDParentTreeValue from a COSArray.
 * @param obj the underlying COSArray object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Constructs a PDParentTreeValue with the given COSDictionary.
 * @param obj the COSDictionary to be used
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Initializes a PDStructureNode with a given COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor for an existing structure node.
     *
     * @param dictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:<init>(),37,39,"/**
 * Constructs a new instance of Revisions.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(org.apache.pdfbox.cos.COSDictionary),71,74,"/**
 * Initializes a new instance with the given COS dictionary.
 * @param dict COSDictionary to initialize with
 */","* Constructor for subclasses.
     * 
     * @param dict the dictionary to be used to create an instance of PDPropertyList",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Initializes a PDBoxStyle with a given COSDictionary.
 * @param dic COSDictionary representing the box style
 */","* Constructor for an existing BoxStyle element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<init>(),317,319,"/**
* Private constructor to prevent instantiation of utility class.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(),70,73,"/**
 * Initializes an AccessPermission with default permissions.
 */","* Create a new access permission object.
     * By default, all permissions are granted.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(byte[]),82,92,"/**
 * Constructs an AccessPermission from a byte array.
 * @param b 4-byte array representing the permission level
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(int),99,102,"/**
 * Initializes an AccessPermission with specified permissions.
 * @param permissions integer representing access permissions
 */","* Creates a new access permission object from a single integer.
     *
     * @param permissions The permission bits.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,<init>,org.apache.pdfbox.pdmodel.encryption.MessageDigests:<init>(),28,30,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new instance with a given dictionary.
 * @param d COSDictionary containing cryptographic filter settings
 */","* creates a new crypt filter dictionary from the low level dictionary provided.
     * @param d the low level dictionary that will be managed by the newly created object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,<init>,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:<init>(),37,40,"/**
* Initializes the RC4Cipher with a 256-element salt array.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,<init>,org.apache.pdfbox.pdmodel.encryption.SaslPrep:<init>(),32,34,"/**
 * Initializes a new instance of SaslPrep.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:<init>(),31,33,"/**
 * Private constructor to prevent instantiation of SecurityProvider class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),118,121,"/**
 * Initializes an annotation with a given dictionary.
 * @param a COSDictionary representing the annotation
 */","* Constructor.
     *
     * @param a The FDF annotation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes FDFCatalog with a COSDictionary.
 * @param cat COSDictionary representing the catalog
 */","* Constructor.
     *
     * @param cat The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Initializes a new FDFDictionary with the given COSDictionary.
 * @param fdfDictionary the underlying COS dictionary to use
 */","* Constructor.
     *
     * @param fdfDictionary The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Constructs an FDFField from a COSDictionary.
 * @param f COSDictionary representing the field data
 */","* Constructor.
     *
     * @param f The FDF field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(org.apache.pdfbox.cos.COSDictionary),73,76,"/**
 * Constructs an FDFIconFit with a given COSDictionary.
 * @param f dictionary representing icon fit settings
 */","* Constructor.
     *
     * @param f The icon fit dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a new FDFJavaScript instance.
 * @param javaScript COSDictionary containing JavaScript data
 */","* Constructor.
     *
     * @param javaScript The FDF java script.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs an FDFNamedPageReference with a COSDictionary.
 * @param r COSDictionary representing the page reference
 */","* Constructor.
     *
     * @param r The FDF named page reference dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs an FDFOptionElement with a given COSArray.
 * @param o COSArray representing the option element
 */","* Constructor.
     *
     * @param o The option element.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a new FDFPage with a given COSDictionary.
 * @param p COSDictionary representing the page
 */","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a new FDFPageInfo with the given COSDictionary.
 * @param p COSDictionary representing page information
 */","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs an FDFTemplate with a given COSDictionary.
 * @param t COSDictionary representing the template
 */","* Constructor.
     *
     * @param t The FDF page template.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AbstractFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AbstractFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
* Initializes an AbstractFixup with a PDDocument.
* @param document PDF document to be fixed up
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AbstractProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AbstractProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes the processor with a PDDocument.
 * @param document the PDF document to process
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",31,36,"/**
* Initializes a new CIDSystemInfo instance.
* @param registry registry string
* @param ordering ordering string
* @param supplement supplement integer
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<init>,org.apache.pdfbox.pdmodel.font.CMapManager:<init>(),35,37,"/**
 * Private constructor to prevent instantiation of CMapManager.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:<init>(org.apache.pdfbox.pdmodel.font.FontInfo),720,723,"/**
 * Initializes a FontMatch with given font info.
 * @param info FontInfo object containing font details
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers:<init>(),29,31,"/**
 * Private constructor to prevent instantiation of FontMappers.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes PDCIDSystemInfo with a COSDictionary.
 * @param dictionary the COSDictionary to initialize with
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Initializes a font descriptor with a given dictionary.
 * @param desc COSDictionary containing font descriptor information
 */","* Creates a PDFontDescriptor from a COS dictionary.
     *
     * @param desc The wrapped COS Dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",90,94,"/**
* Constructs a FontType with specified type and subtype.
* @param type font type identifier
* @param subtype specific font subtype
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<init>(),48,50,"/**
 * Private constructor to prevent instantiation of PDFontFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanose:<init>(byte[]),37,40,"/**
 * Constructs a PDPanose object from byte array.
 * @param bytes byte array containing PDPanose data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:<init>(byte[]),35,38,"/**
 * Initializes PDPanoseClassification with byte array.
 * @param bytes byte array containing classification data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:<init>(org.apache.pdfbox.pdmodel.font.PDType3Font,org.apache.pdfbox.cos.COSStream)",54,58,"/**
* Initializes a new instance of PDType3CharProc.
* @param font associated PDType3Font object
* @param charStream character stream for the type 3 font
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<init>(),118,120,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,<init>,org.apache.pdfbox.pdmodel.font.UniUtil:<init>(),27,29,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(org.apache.pdfbox.cos.COSArray),57,60,"/**
 * Initializes a new PDFontSetting with a COSArray.
 * @param fs COSArray representing font settings
 */","* Constructs a font setting from an existing array.
     *
     * @param fs The new font setting value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(),41,45,"/**
* Initializes an empty line dash pattern.
* @param none
* @return none
*/","* Creates a new line dash pattern, with no dashes and a phase of 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",80,84,"/**
* Initializes a new BlendComposite with specified mode and alpha.
* @param blendMode blending mode to apply
* @param constantAlpha constant alpha value for blending
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendChannelFunction,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendFunction)",201,207,"/**
* Initializes a new BlendMode with specified parameters.
* @param name the blend mode name
* @param blendChannel the channel blending function
* @param blend the overall blending function
*/","* Private constructor due to the limited set of possible blend modes.
     * 
     * @param name the corresponding COSName of the blend mode
     * @param blendChannel the blend function for separable blend modes
     * @param blend the blend function for non-separable blend modes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",121,126,"/**
* Initializes a PDColor with a pattern name and color space.
* @param patternName the name of the pattern
* @param colorSpace the color space to use
*/","* Creates a PDColor containing the given pattern name.
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern is defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes PDDeviceNAttributes with given COSDictionary.
 * @param attributes the COSDictionary containing device N attributes
 */","* Creates a new DeviceN colour space attributes dictionary from the given dictionary.
     * @param attributes a dictionary that has all of the attributes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(org.apache.pdfbox.cos.COSDictionary),57,60,"/**
 * Constructs a PDDeviceNProcess with given attributes.
 * @param attributes COSDictionary containing process attributes
 */","* Creates a new  DeviceN Process Dictionary from the given attributes.
     * @param attributes a DeviceN attributes dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(org.apache.pdfbox.cos.COSArray),51,54,"/**
 * Constructs a PDGamma from a COSArray.
 * @param array the COSArray containing gamma values
 */","* Creates a new gamma from a COS array.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDOutputIntent from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes PDTristimulus with a COSArray.
 * @param array containing tristimulus values
 */","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes PDTransparencyGroupAttributes with a COSDictionary.
 * @param dic the COSDictionary to be used
 */","* Creates a group object from a given dictionary
     * @param dic {@link COSDictionary} object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of the class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<init>(),66,68,"/**
 * Private constructor to prevent instantiation of JPEGFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:<init>(),58,60,"/**
 * Private constructor to prevent instantiation of LosslessFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<init>(),98,100,"/**
 * Private constructor to prevent instantiation of PNGConverter.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<init>(),50,52,"/**
 * Constructs a new instance of SampledImageReader.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(org.apache.pdfbox.cos.COSDictionary),103,106,"/**
 * Initializes optional content properties from a COS dictionary.
 * @param props COS dictionary containing properties
 */","* Creates a new instance based on a given {@link COSDictionary}.
     * @param props the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Initializes a pattern with a given COSDictionary.
 * @param dictionary the COSDictionary representing the pattern
 */","* Creates a new Pattern dictionary from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(org.apache.pdfbox.cos.COSDictionary),94,97,"/**
 * Constructs a PDShading with the given COSDictionary.
 * @param shadingDictionary the COSDictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,org.apache.pdfbox.util.Matrix)",34,38,"/**
* Constructs a ShadingPaint with specified shading and transformation.
* @param shading the shading pattern to apply
* @param matrix the transformation matrix for the paint
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",69,73,"/**
* Initializes a new instance of PDExtendedGraphicsState.
* @param dictionary COSDictionary containing graphics state properties
* @param resourceCache ResourceCache for managing resources
*/","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",117,121,"/**
* Initializes a new PDSoftMask with given dictionary and resource cache.
* @param dictionary COSDictionary containing mask properties
* @param resourceCache ResourceCache for managing resources
*/","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:<init>(java.lang.String),135,138,"/**
 * Constructs a new Paragraph with the given text.
 * @param text content of the paragraph
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Word:<init>(java.lang.String),305,308,"/**
* Constructs a new Word with the given text content.
* @param text the word's text
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),72,75,"/**
 * Initializes a new Builder with specified PDAppearanceContentStream.
 * @param contents PDAppearanceContentStream object to be used
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:<init>(org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder),127,137,"/**
 * Constructs a PlainTextFormatter using a Builder.
 * @param builder Builder containing formatter configuration
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Initializes a PDAction with a COSDictionary.
 * @param a COSDictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of utility class.
 */",* Utility Class.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes PDAdditionalActions with a dictionary.
 * @param a COSDictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional actions from a dictionary.
 * @param a COSDictionary containing action settings
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes a new instance with a given dictionary.
 * @param a COSDictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional form field actions.
 * @param a dictionary containing action details
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional page actions from a dictionary.
 * @param a COSDictionary containing action definitions
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a PDTargetDirectory with a given COSDictionary.
 * @param dictionary the COSDictionary to use
 */","* Create a target directory from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a new PDURIDictionary with the given COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Initializes PDWindowsLaunchParams with given dictionary.
 * @param p COSDictionary containing parameters
 */","* Constructor.
     *
     * @param p The params dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDAppearanceCharacteristicsDictionary from a COSDictionary.
 * @param dict the underlying COS dictionary
 */","* Constructor.
     * 
     * @param dict dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDAppearanceDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor for reading.
     *
     * @param dictionary The annotations dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(),37,39,"/**
 * Default constructor for PDAppearanceEntry.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDAppearanceEntry with a given COSDictionary.
 * @param entry the COSDictionary representing the appearance entry
 */","* Constructor for reading.
     * 
     * @param entry the dictionary of the appearance entry",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes a border effect dictionary from a COSDictionary.
 * @param dict the COSDictionary representing the border effect
 */","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),79,82,"/**
 * Initializes a border style dictionary from a COSDictionary.
 * @param dict the underlying COSDictionary to use
 */","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDExternalDataDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor.
     * 
     * @param dictionary Dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,double,double,org.apache.pdfbox.pdmodel.common.PDRectangle)",66,73,"/**
* Initializes a CloudyBorder with specified parameters.
* @param stream content stream for drawing
* @param intensity visual intensity of the border
* @param lineWidth width of the border line
* @param rect bounding rectangle for the border
*/","* Creates a new <code>CloudyBorder</code> that writes to the specified
     * content stream.
     *
     * @param stream content stream
     * @param intensity intensity of cloudy effect (entry <code>I</code>); typically 1.0 or 2.0
     * @param lineWidth line width for annotation border (entry <code>W</code>)
     * @param rect annotation rectangle (entry <code>Rect</code>)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,80,"/**
* Initializes appearance handler with annotation and document.
* @param annotation PDF annotation object
* @param document PDF document object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(org.apache.pdfbox.cos.COSDictionary),52,56,"/**
* Initializes a PDPropBuild with a given COSDictionary.
* @param dict the COSDictionary to be used
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(org.apache.pdfbox.cos.COSDictionary),49,54,"/**
* Initializes PDPropBuildDataDict with a COSDictionary.
* @param dict the underlying COSDictionary
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(org.apache.pdfbox.cos.COSDictionary),95,99,"/**
* Initializes PDSeedValue with a COSDictionary.
* @param dict the COSDictionary to initialize with
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(org.apache.pdfbox.cos.COSDictionary),83,87,"/**
 * Initializes a new PDSeedValueCertificate with the given COSDictionary.
 * @param dict the COSDictionary to use
 */","* Constructor.
     *
     * @param dict The certificate seed value dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes a PDSeedValueMDP with a given COSDictionary.
 * @param dict the COSDictionary to initialize with
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes PDSeedValueTimeStamp with a given COSDictionary.
 * @param dict the COSDictionary to be used
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(org.apache.pdfbox.cos.COSDictionary),101,104,"/**
 * Initializes a PDSignature with a given COSDictionary.
 * @param dict the COSDictionary to initialize the signature with
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:<init>(),49,52,"/**
* Initializes a new instance of SignatureOptions.
* Sets default page number to 0.
*/",* Creates the default signature options.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:<init>(org.apache.pdfbox.pdfwriter.COSWriter),34,37,"/**
 * Initializes SigningSupport with a COSWriter.
 * @param cosWriter an instance of COSWriter used for signing
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<init>(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateBuilder),54,57,"/**
* Initializes PDFTemplateCreator with a builder.
* @param templateBuilder PDFTemplateBuilder instance to use
*/","* Constructor.
     * 
     * @param templateBuilder the template builder",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:<init>(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),33,36,"/**
 * Initializes iterator with a starting outline item.
 * @param startingItem the first item in the outline
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:<init>(java.lang.String,java.lang.String)",49,53,"/**
* Constructs a new KeyValue pair.
* @param theKey key of the pair
* @param theValue value associated with the key
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<init>(),75,77,"/**
 * Private constructor to prevent instantiation of utility class.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",62,67,"/**
* Constructs a PDField with specified parameters.
* @param acroForm the form containing the field
* @param field the COSDictionary representing the field
* @param parent the parent non-terminal field
*/","* Constructor.
     *  @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:<init>(),38,40,"/**
 * Private constructor to prevent instantiation of PDFieldFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:<init>(org.apache.pdfbox.cos.COSBase),45,48,"/**
 * Initializes a new PDXFA resource.
 * @param xfaBase the underlying COS base object
 */","* Constructor.
     *
     * @param xfaBase The xfa resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a new PDMeasureDictionary with the given COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),77,80,"/**
 * Initializes a new instance with the given COSDictionary.
 * @param dictionary the COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDViewportDictionary with a given COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDThread with a given dictionary.
 * @param t COSDictionary representing the thread
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param t The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(org.apache.pdfbox.cos.COSDictionary),43,46,"/**
 * Constructs a PDThreadBead with a given COSDictionary.
 * @param b the COSDictionary representing the thread bead
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param b The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(org.apache.pdfbox.cos.COSDictionary),146,149,"/**
 * Initializes PDViewerPreferences with given dictionary.
 * @param dic PDF dictionary containing viewer preferences
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawerParameters.java,<init>,"org.apache.pdfbox.rendering.PageDrawerParameters:<init>(org.apache.pdfbox.rendering.PDFRenderer,org.apache.pdfbox.pdmodel.PDPage,boolean,org.apache.pdfbox.rendering.RenderDestination,java.awt.RenderingHints,float)",43,53,"/**
* Initializes PageDrawerParameters for PDF rendering.
* @param renderer PDFRenderer instance
* @param page PDPage to be rendered
* @param subsamplingAllowed flag for allowing image subsampling
* @param destination RenderDestination for output
* @param renderingHints RenderingHints for customization
* @param imageDownscalingOptimizationThreshold threshold for image downscaling optimization
*/",* Package-private constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(),2148,2151,"/**
 * Initializes a new LineItem with no text position.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(org.apache.pdfbox.text.TextPosition),2153,2156,"/**
 * Constructs a new LineItem with the specified text position.
 * @param textPosition the position of the text in the document
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper:<init>(org.apache.pdfbox.text.TextPosition),2222,2225,"/**
 * Wraps a TextPosition object.
 * @param position TextPosition to be wrapped
 */","* Constructs a PositionWrapper around the specified TextPosition object.
         *
         * @param position the text position.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,"org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions:<init>(java.lang.String,java.util.List)",2180,2184,"/**
* Initializes a WordWithTextPositions object.
* @param word the word as a String
* @param positions list of TextPosition objects
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<init>,org.apache.pdfbox.util.DateConverter:<init>(),69,71,"/**
 * Private constructor to prevent instantiation of DateConverter.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<init>,org.apache.pdfbox.util.Hex:<init>(),45,45,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,<init>,org.apache.pdfbox.util.IterativeMergeSort:<init>(),47,50,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(),41,51,"/**
* Initializes a 3x3 identity transformation matrix.
*/",* Constructor. This produces an identity matrix.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(float[]),57,60,"/**
 * Initializes a Matrix with a source array.
 * @param src source float array representing matrix elements
 */","* Constructor. This produces a matrix with the given array as data.
     * The source array is not copied or cloned.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,"org.apache.pdfbox.util.Matrix:<init>(float,float,float,float,float,float)",101,111,"/**
* Initializes a 3x3 transformation matrix.
* @param a, b, c, d, e, f matrix elements
*/","* Creates a transformation matrix with the given 6 elements. Transformation matrices are
     * discussed in 8.3.3, ""Common Transformations"" and 8.3.4, ""Transformation Matrices"" of the PDF
     * specification. For simple purposes (rotate, scale, translate) it is recommended to use the
     * static methods below.
     *
     * Produces the following matrix:
     * a b 0
     * c d 0
     * e f 1
     *
     * @see Matrix#getRotateInstance(double, float, float)
     * @see Matrix#getScaleInstance(float, float)
     * @see Matrix#getTranslateInstance(float, float)
     *
     * @param a the X coordinate scaling element (m00) of the 3x3 matrix
     * @param b the Y coordinate shearing element (m10) of the 3x3 matrix
     * @param c the X coordinate shearing element (m01) of the 3x3 matrix
     * @param d the Y coordinate scaling element (m11) of the 3x3 matrix
     * @param e the X coordinate translation element (m02) of the 3x3 matrix
     * @param f the Y coordinate translation element (m12) of the 3x3 matrix",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,<init>,org.apache.pdfbox.util.NumberFormatUtil:<init>(),55,57,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,<init>,"org.apache.pdfbox.util.Vector:<init>(float,float)",28,32,"/**
 * Initializes a new 2D vector.
 * @param x horizontal component
 * @param y vertical component
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<init>,org.apache.pdfbox.util.Version:<init>(),38,41,"/**
 * Private constructor to prevent instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,<init>,org.apache.pdfbox.util.XMLUtil:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of utility class.
 */","* Utility class, should not be instantiated.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<init>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<init>(),73,75,"/**
 * Private constructor to prevent instantiation of FileTypeDetector.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFStreamEngine:<init>(),103,105,"/**
 * Constructs a new instance of PDFStreamEngine.
 */",* Creates a new PDFStreamEngine.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,addOperator,org.apache.pdfbox.contentstream.PDFStreamEngine:addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor),112,115,"/**
 * Applies mask operation using processor.
 * @param op OperatorProcessor instance containing operation details
 */","* Adds an operator processor to the engine.
     *
     * @param op operator processor",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,createBlendModeMap,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:createBlendModeMap(),165,187,"/**
* Creates a mapping of COSName to BlendMode for PDF blending functions.
* @return Map containing blend mode mappings
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,setTerminator,org.apache.pdfbox.filter.ASCII85OutputStream:setTerminator(char),71,78,"/**
* Sets the terminator character for masking.
* @param term character code for termination (must be 118-126 excluding 'z')
*/","* This will set the terminating character.
     *
     * @param term The terminating character.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setSplitAtPage,org.apache.pdfbox.multipdf.Splitter:setSplitAtPage(int),632,639,"/**
* Sets the number of pages for splitting.
* @param split number of pages, must be greater than zero
*/","* This will tell the splitting algorithm where to split the pages.  The default
     * is 1, so every page will become a new document.  If it was two then each document would
     * contain 2 pages.  If the source document had 5 pages it would split into
     * 3 new documents, 2 documents containing 2 pages and 1 document containing one
     * page.
     *
     * @param split The number of pages each split document should contain.
     * @throws IllegalArgumentException if the page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setStartPage,org.apache.pdfbox.multipdf.Splitter:setStartPage(int),647,654,"/**
* Sets the starting page number.
* @param start the starting page index, must be greater than zero
*/","* This will set the start page.
     *
     * @param start the 1-based start page
     * @throws IllegalArgumentException if the start page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setEndPage,org.apache.pdfbox.multipdf.Splitter:setEndPage(int),662,669,"/**
 * Sets the end page.
 * @param end page number, must be greater than zero
 */","* This will set the end page.
     *
     * @param end the 1-based end page
     * @throws IllegalArgumentException if the end page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,setLenient,org.apache.pdfbox.pdfparser.COSParser:setLenient(boolean),419,426,"/**
* Sets leniency mode.
* @param lenient true for lenient parsing, false otherwise
* @throws IllegalArgumentException if called after initial parse
*/","* Change the parser leniency flag.
     *
     * This method can only be called before the parsing of the file.
     *
     * @param lenient try to handle malformed PDFs.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(int),46,53,"/**
* Initializes CompressParameters with object stream size.
* @param objectStreamSize the size of the object stream, must be non-negative
*/","* Sets the number of objects, that can be contained in compressed object streams. Higher object stream sizes may
     * cause PDF readers to slow down during the rendering of PDF documents, therefore a reasonable value should be
     * selected. A value of 0 disables the compression.
     *
     * @param objectStreamSize The number of objects, that can be contained in compressed object streams.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache,java.util.Map)",109,123,"/**
* Initializes PDResources with dictionaries and caches.
* @param resourceDictionary PDF resource dictionary
* @param resourceCache shared resource cache
* @param directFontCache cache for direct fonts
* Throws IllegalArgumentException if any parameter is null
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.
     * @param directFontCache The document's direct font cache. Must be mutable",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),307,314,"/**
* Sets the blending mode.
* @param blendMode the blending mode to apply, must not be null
*/","* Sets the blend mode in the current graphics state
     *
     * @param blendMode blend mode
     * @throws IllegalArgumentException if blendMode is null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,53,"/**
* Initializes a PDFieldTree with an AcroForm.
* @param acroForm the root AcroForm object, cannot be null
*/","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getLength,org.apache.pdfbox.cos.COSStream:getLength(),331,340,"/**
 * Returns the length of the COSStream.
 * Throws IllegalStateException if there's an open OutputStream.
 * @return Length of the stream as a long
 */","* Returns the length of the encoded stream.
     *
     * @return length in bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setValue,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:setValue(java.lang.Object),45,52,"/**
* Sets the value for this trie node.
* @param value the value to be set
* @throws IllegalStateException if a value is already set
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,org.apache.pdfbox.multipdf.PDFMergerUtility:<init>(),147,150,"/**
 * Initializes a new instance of PDFMergerUtility with an empty list of sources.
 */",* Instantiate a new PDFMergerUtility.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<init>(org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool),69,72,"/**
 * Initializes a COSWriterObjectStream with a given compression pool.
 * @param compressionPool pool used for managing compression resources
 */","* Creates an object stream for compressible objects from the given {@link COSWriterCompressionPool}. The objects
     * must first be prepared for this object stream, by adding them via calling
     * {@link COSWriterObjectStream#prepareStreamObject(COSObjectKey, COSBase)} and will be written to this
     * {@link COSStream}, when {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @param compressionPool The compression pool an object stream shall be created for.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObjects,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObjects(),41,48,"/**
 * Returns the list of objects, initializing it if null.
 * @return List of T objects
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumbers,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumbers(),50,57,"/**
* Returns the list of revision numbers.
* Initializes the list if it's null.
* @return List of revision numbers
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:<init>(),68,70,"/**
 * Constructs a new instance of PublicKeyProtectionPolicy.
 */",* Creates a new PublicKeyProtectionPolicy with an empty recipients list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginTextClip,org.apache.pdfbox.rendering.PageDrawer:beginTextClip(),465,469,"/**
* Initializes text clippings list.
*/","* Begin buffering the text clipping path, if any.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,equals,org.apache.pdfbox.cos.COSName:equals(java.lang.Object),737,741,"/**
* Checks if the given object is a COSName and matches its name.
* @param object the object to check
* @return true if object is COSName and names match, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,fromString,org.apache.pdfbox.pdmodel.PageLayout:fromString(java.lang.String),54,64,"/**
* Retrieves a PageLayout instance by value.
* @param value the layout value to match
* @return matching PageLayout instance or throws IllegalArgumentException if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,fromString,org.apache.pdfbox.pdmodel.PageMode:fromString(java.lang.String),45,55,"/**
* Retrieves PageMode by matching value.
* @param value string to match against PageMode values
* @return corresponding PageMode or throws IllegalArgumentException if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,fromString,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:fromString(java.lang.String),47,59,"/**
* Finds a RenderingIntent by its value.
* @param value the string representation of the rendering intent
* @return the corresponding RenderingIntent or RELATIVE_COLORIMETRIC if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.io.File),308,311,"/**
 * Masks a file by calling m1 on it.
 * @param source File to be masked
 * @throws FileNotFoundException if the file is not found
 */","* Add a source file to the list of files to merge.
     *
     * @param source File representing source document
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(org.apache.pdfbox.io.RandomAccessRead),319,322,"/**
 * Masks data from a given source.
 * @param source RandomAccessRead object containing input data
 */","* Add a source to the list of documents to merge.
     *
     * @param source RandomAccessRead representing source document. To pass an InputStream, wrap it
     * into a {@link RandomAccessReadBuffer}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addName,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addName(java.lang.String),35,38,"/**
 * Masks a given name using an internal instruction.
 * @param name the name to be masked
 */","* Add a name (ex. an operator)
     * @param name the name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addProc,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence),71,74,"/**
 * Masks an instruction sequence.
 * @param child InstructionSequence to be masked
 */","* Adds a proc (sub-sequence of instructions).
     * @param child the child proc",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,addRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),76,79,"/**
 * Adds a public key recipient.
 * @param recipient the recipient to add
 */","* Adds a new recipient to the recipients list.
     * @param recipient A new recipient.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,addWord,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:addWord(org.apache.pdfbox.pdmodel.interactive.PlainText$Word),288,291,"/**
 * Masks a given Word using m1 method.
 * @param word the Word to be masked
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,addRegion,"org.apache.pdfbox.text.PDFTextStripperByArea:addRegion(java.lang.String,java.awt.geom.Rectangle2D)",68,72,"/**
* Masks a region with a rectangle.
* @param regionName name of the region to mask
* @param rect rectangle defining the mask area
*/","* Add a new region to group text by.
     *
     * @param regionName The name of the region.
     * @param rect The rectangle area to retrieve the text from. The y-coordinates are java
     * coordinates (y == 0 is top), not PDF coordinates (y == 0 is bottom).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ClosePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,52,"/**
 * Masks a path operation.
 * @param operator the operation to apply
 * @param operands list of operands for the operation
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setTrailer(org.apache.pdfbox.cos.COSDictionary),197,206,"/**
* Sets the trailer for the current XRef.
* @param trailer dictionary containing trailer information
*/","* Adds trailer information for current XRef object.
     *
     * @param trailer the current document trailer dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(),296,300,"/**
 * Returns an input stream for the decoded data.
 * @return InputStream containing decoded data
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getObject(org.apache.pdfbox.cos.COSObjectKey),126,129,"/**
 * Retrieves a COSBase object from the pool using a key.
 * @param key unique identifier for the COSBase object
 * @return COSBase object or null if not found
 */","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.
     *
     * @param key The {@link COSObjectKey} a registered {@link COSBase} shall be found for.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,getOperator,org.apache.pdfbox.pdmodel.common.function.type4.Operators:getOperator(java.lang.String),136,139,"/**
 * Retrieves an operator by name.
 * @param operatorName the name of the operator to find
 * @return Operator object or null if not found
 */","* Returns the operator for the given operator name.
     * @param operatorName the operator name
     * @return the operator (or null if there's no such operator",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,sequenceToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:sequenceToName(java.lang.String),197,205,"/**
 * Converts Unicode sequence to font glyph name.
 * @param unicodeSequence Unicode character sequence
 * @return Glyph name or "".notdef"" if not found
 */","* Returns the name for a given sequence of Unicode characters.
     *
     * @param unicodeSequence sequence of Unicode characters
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getStreamCache,org.apache.pdfbox.cos.COSDocument:getStreamCache(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),140,165,"/**
* Creates a RandomAccessStreamCache using provided function or fallback.
* @param streamCacheCreateFunction function to create stream cache
* @return RandomAccessStreamCache object or null if creation fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,operatorException,"org.apache.pdfbox.contentstream.PDFStreamEngine:operatorException(org.apache.pdfbox.contentstream.operator.Operator,java.util.List,java.io.IOException)",959,986,"/**
* Handles exceptions based on operator and operands.
* Logs specific exceptions; rethrows others.
*/","* Called when an exception is thrown by an operator.
     *
     * @param operator The unknown operator.
     * @param operands The list of operands.
     * @param exception the excpetion which occured when processing the operator
     * 
     * @throws IOException if there is an error processing the operator exception",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsState(),1039,1042,"/**
 * Retrieves the current mask state from the graphics stack.
 * @return PDGraphicsState object representing the mask state
 */",* @return Returns the graphicsState.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,restoreGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:restoreGraphicsState(),999,1002,"/**
 * Calls m1 on graphicsStack.
 */",* Pops the current graphics state from the stack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsStackSize,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsStackSize(),1031,1034,"/**
 * Returns mask value from graphics stack.
 * @return integer mask value
 */",* @return Returns the size of the graphicsStack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transformPoint,"org.apache.pdfbox.util.Matrix:transformPoint(float,float)",345,354,"/**
* Applies 2D transformation to coordinates.
* @param x original x-coordinate
* @param y original y-coordinate
* @return transformed Point2D.Float
*/","* Transforms the given point by this matrix.
     *
     * @param x x-coordinate
     * @param y y-coordinate
     *
     * @return the transformed point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,decreaseLevel,org.apache.pdfbox.contentstream.PDFStreamEngine:decreaseLevel(),1170,1177,"/**
* Decreases the current level by one.
* Logs an error if level goes below zero.
*/","* Decrease the level. Call this after running a potentially recursive operation. A log message
     * is shown if the level is below 0. This can happen if the level is not decreased after an
     * operation is done, e.g. by using a ""finally"" block.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addInteger,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addInteger(int),44,47,"/**
 * Masks a value using instruction m1.
 * @param value the integer value to mask
 */","* Adds an int value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,createDiacritics,org.apache.pdfbox.text.TextPosition:createDiacritics(),125,160,"/**
* Initializes a mapping of integer keys to Unicode diacritical marks.
* @return Map with integer keys and corresponding diacritical mark strings
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:isDataEmpty(),83,87,"/**
 * Checks if patch list is masked.
 * @return true if masked, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:setExportValues(java.util.List),64,71,"/**
* Validates button entries; throws exception if ""Opt"" is used.
* @param values list of button entries
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toString,org.apache.pdfbox.pdmodel.font.PDFont:toString(),666,670,"/**
 * Constructs a masked string using methods from other components.
 * @return concatenated result of m1(), m2(), and m3()
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toString,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:toString(),65,69,"/**
 * Returns a string representation of key-value pair.
 * @return formatted string with key and value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/MissingOperandException.java,<init>,"org.apache.pdfbox.contentstream.operator.MissingOperandException:<init>(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",29,32,"/**
* Constructs an exception indicating missing operands for an operator.
* @param operator the operator that requires more operands
* @param operands list of operands provided, which is insufficient
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/EmptyGraphicsStackException.java,<init>,org.apache.pdfbox.contentstream.operator.state.EmptyGraphicsStackException:<init>(),32,35,"/**
 * Constructs an exception indicating the graphics stack is empty.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,checkClosed,org.apache.pdfbox.cos.COSStream:checkClosed(),105,114,"/**
* Checks if COSStream is open and throws IOException if closed.
*/","* Throws if the random access backing store has been closed. Helpful for catching cases where
     * a user tries to use a COSStream which has outlived its COSDocument.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,reset,org.apache.pdfbox.filter.ASCII85InputStream:reset(),269,273,"/**
 * Throws an exception indicating reset operation is unsupported.
 * @throws IOException with message ""Reset is not supported""
 */","* Unsupported.
     *
     * @throws IOException telling that this is an unsupported action.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,reset,org.apache.pdfbox.filter.CCITTFaxDecoderStream:reset(),492,495,"/**
 * Throws an IOException indicating mark/reset is unsupported.
 * @throws IOException always thrown with message ""mark/reset not supported""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,reset,org.apache.pdfbox.filter.FlateFilterDecoderStream:reset(),239,243,"/**
 * Throws an exception indicating reset operation is unsupported.
 * @throws IOException always thrown with message ""reset is not supported""
 */","* Unsupported.
     *
     * @throws IOException always throw as reset is an unsupported feature.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/MissingImageReaderException.java,<init>,org.apache.pdfbox.filter.MissingImageReaderException:<init>(java.lang.String),33,36,"/**
 * Constructs a new MissingImageReaderException with the specified detail message.
 * @param message the detail message of the exception
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getEncryption,org.apache.pdfbox.pdfparser.COSParser:getEncryption(),1164,1172,"/**
* Retrieves encryption details of the parsed PDF document.
* @throws IOException if the document is not parsed yet
* @return PDEncryption object containing encryption information
*/","* This will get the encryption dictionary. The document must be parsed before this is called.
     *
     * @return The encryption dictionary of the document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getAccessPermission,org.apache.pdfbox.pdfparser.COSParser:getAccessPermission(),1181,1189,"/**
* Retrieves access permissions.
* @throws IOException if document is not parsed
* @return AccessPermission object
*/","* This will get the AccessPermission. The document must be parsed before this is called.
     *
     * @return The access permission of document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/MissingResourceException.java,<init>,org.apache.pdfbox.pdmodel.MissingResourceException:<init>(java.lang.String),27,30,"/**
 * Constructs a MissingResourceException with the specified detail message.
 * @param message the detail message
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/InvalidPasswordException.java,<init>,org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException:<init>(java.lang.String),31,34,"/**
 * Constructs an InvalidPasswordException with a specified detail message.
 * @param message the detail message
 */","* Creates a new InvalidPasswordException.
     * @param message A msg to go with this exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<init>,org.apache.pdfbox.contentstream.operator.Operator:<init>(java.lang.String),44,51,"/**
 * Initializes an Operator object.
 * @param aOperator the operator string, must not start with '/'
 * @throws IllegalArgumentException if the operator starts with '/'
 */","* Constructor.
     *
     * @param aOperator The operator that this object will represent.
     * @throws IllegalArgumentException if the operator starts with ""/"".",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,toString,org.apache.pdfbox.contentstream.operator.Operator:toString(),102,106,"/**
 * Returns string representation of PDFOperator.
 * @return formatted operator string
 */","* This will print a string rep of this class.
     *
     * @return A string rep of this class.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toString,org.apache.pdfbox.cos.COSArray:toString(),516,520,"/**
 * Returns string representation of COSArray.
 * @return formatted string including array contents
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,toString,org.apache.pdfbox.cos.COSName:toString(),731,735,"/**
 * Returns string representation of COSName.
 * @return formatted string with name enclosed in curly braces
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,toString,org.apache.pdfbox.cos.COSObject:toString(),148,152,"/**
 * Returns string representation of COSObject.
 * @return formatted string with object details
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(org.apache.pdfbox.cos.COSName),88,96,"/**
* Retrieves a filter by name.
* @param filterName the name of the filter to retrieve
* @return the Filter object associated with the given name
* @throws IOException if the filter is not found or invalid
*/","* Returns a filter instance given its COSName.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,checkArrayTypesClass,"org.apache.pdfbox.contentstream.operator.OperatorProcessor:checkArrayTypesClass(java.util.List,java.lang.Class)",77,80,"/**
* Checks if any operand is an instance of given class.
* @param operands list of COSBase objects
* @param clazz class to check against
* @return true if any operand matches the class, false otherwise
*/","* Check whether all operands list elements are an instance of a specific class.
     *
     * @param operands The operands list.
     * @param clazz The expected class.
     * @return true if all operands list elements are an instance of the given class",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addReal(float),53,56,"/**
 * Masks a float value using instruction m1.
 * @param value the float value to mask
 */","* Adds a real value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,width,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:width(float),361,366,"/**
 * Sets the image width and updates formatter rectangle.
 * @param width the new width for the image
 * @return PDVisibleSignDesigner instance with updated settings
 */","* 
     * @param width signature image width
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,height,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:height(float),382,387,"/**
* Sets image height and updates rectangle parameters.
* @param height desired image height
* @return this PDVisibleSignDesigner instance
*/","* 
     * @param height signature image height
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getLen,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:getLen(java.awt.geom.Point2D,java.awt.geom.Point2D)",130,135,"/**
* Calculates distance between two points.
* @param ps starting point
* @param pe ending point
* @return Euclidean distance
*/","* Calculate the distance from point ps to point pe.
     *
     * @param ps one end of a line
     * @param pe the other end of the line
     * @return length of the line",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",162,165,"/**
* Computes the determinant of a 2x2 matrix formed by points.
* @param p point to evaluate
* @param p1 first corner point
* @param p2 second corner point
* @return determinant value indicating orientation
*/","* A line from point p1 to point p2 defines an equation, adjust the form of
     * the equation to let the rhs equals 0, then calculate the lhs value by
     * plugging the coordinate of p in the lhs expression.
     *
     * @param p target point
     * @param p1 one end of a line
     * @param p2 the other end of a line
     * @return calculated value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",213,217,"/**
* Calculates the determinant of a 2x2 matrix formed by points.
* @param p point for which to calculate the mask
* @param p1 first corner point
* @param p2 second corner point
* @return determinant value indicating orientation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",64,69,"/**
 * Initializes a PDMarkedContent object.
 * @param tag the content tag name
 * @param properties dictionary containing content properties
 */","* Creates a new marked content object.
     * 
     * @param tag the tag
     * @param properties the properties",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getName(),59,63,"/**
 * Returns the name of the color space.
 * @return Name of the color space as a string
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getName(),53,57,"/**
 * Returns the name of the color space.
 * @return ""DeviceRGB"" as defined in PDF specification
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getName(),116,120,"/**
 * Returns the string representation of DEVICECMYK.
 * @return ""DeviceCMYK""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:getName(),42,46,"/**
 * Returns the string representation of DEVICEGRAY.
 * @return ""DeviceGray"" as defined in PDF specification
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getName(),442,446,"/**
 * Returns the name of the DeviceN color space.
 * @return ""DeviceN"" as a string
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:getName(),43,47,"/**
 * Returns the name of the DeviceRGB color space.
 * @return ""DeviceRGB"" as a string
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getName(),146,150,"/**
 * Returns the string representation of ICCBASED.
 * @return ""ICCBASED""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getName(),98,102,"/**
 * Calls m1 on COSName.INDEXED.
 * @return Result of COSName.INDEXED.m1()
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getName(),55,59,"/**
 * Returns the string representation of LAB color space.
 * @return ""Lab""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getName(),68,72,"/**
 * Returns the name of the PATTERN constant.
 * @return String representation of the PATTERN constant
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getName(),100,104,"/**
 * Calls m1 method on COSName.SEPARATION.
 * @return Result of COSName.SEPARATION's m1 method
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getType(),109,112,"/**
 * Returns the mask string for pattern.
 * @return Mask string for pattern
 */","* This will return the paint type.
     * @return The type of object that this is.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getType(),115,118,"/**
 * Returns the string representation of SHADING.
 * @return String value of SHADING
 */","* This will return the type.
     *
     * @return the type of object that this is",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getDefaultValue(),198,209,"/**
 * Masks a function by retrieving and converting its name.
 * @return Masked function name or empty string if not applicable
 */","* Returns the default value, if any.
     *
     * @return A non-null string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,unCheck,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:unCheck(),84,87,"/**
 * Masks functionality by invoking helper method.
 * @throws IOException if an I/O error occurs
 */","* Unchecks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(java.util.List),356,365,"/**
* Masks terminal fields in a list.
* @param fields list of PDField objects to process
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of the specified fields.
     * 
     * @param fields a list of fields to be refreshed
     * @throws IOException if the appearance streams could not be refreshed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,53,"/**
* Masks content with a specified tag.
* @param operator the PDF operator
* @param arguments list of COSBase arguments
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,44,"/**
 * Masks operation with given operator and arguments.
 * @param operator the operator to apply
 * @param arguments list of COSBase arguments for the operation
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,isWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:isWhitePoint(),71,76,"/**
* Checks if all coordinates (wpX, wpY, wpZ) are zero.
* @return true if all coordinates are zero, false otherwise
*/","* Tests if the current point is the white point.
     *
     * @return true if the current point is the white point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:calcColorTable(),138,156,"/**
* Generates an array mapping for shading.
* @return int array representing the mapping
* @throws IOException if an I/O error occurs
*/","* Calculate the color on the axial line and store them in an array.
     *
     * @return an array, index denotes the relative position, the corresponding
     * value is the color on the axial line
     * @throws IOException if the color conversion fails.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calcColorTable(),143,161,"/**
* Generates a mask array based on shading calculations.
* @return int array representing the mask
* @throws IOException if an I/O error occurs during processing
*/","* Calculate the color on the line that connects two circles' centers and store the result in an
     * array.
     *
     * @return an array, index denotes the relative position, the corresponding value the color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createInitialCodeTable,org.apache.pdfbox.filter.LZWFilter:createInitialCodeTable(),261,271,"/**
* Generates a code table for masking.
* @return List of byte arrays representing mask codes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createCodeTable,org.apache.pdfbox.filter.LZWFilter:createCodeTable(),252,257,"/**
* Initializes and returns the code table.
* @return List of byte arrays representing the code table
*/",* Init the code table with 1 byte entries and the EOD and CLEAR_TABLE markers.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSources,org.apache.pdfbox.multipdf.PDFMergerUtility:addSources(java.util.List),329,332,"/**
 * Masks data from list of RandomAccessRead sources.
 * @param sourcesList list of source objects to process
 */","* Add a list of sources to the list of documents to merge.
     *
     * @param sourcesList List of RandomAccessRead objects representing source documents",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,get,org.apache.pdfbox.cos.COSArray:get(int),294,297,"/**
 * Retrieves an object from the underlying collection.
 * @param index position of the object in the collection
 * @return COSBase object at the specified index
 */","* This will get an object from the array.  This will NOT dereference
     * the COS object.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,get,org.apache.pdfbox.pdmodel.common.COSArrayList:get(int),450,455,"/**
 * Retrieves element at specified index.
 * @param index position of the element to retrieve
 * @return element at the given index
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,size,org.apache.pdfbox.cos.COSArray:size(),437,440,"/**
 * Calls m1 method on objects.
 * @return result of objects.m1()
 */","* This will get the size of this array.
     *
     * @return The number of elements in the array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,size,org.apache.pdfbox.pdmodel.common.COSArrayList:size(),132,136,"/**
 * Delegates the call to the underlying implementation.
 * @return result from the actual method invocation
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getNumberOfRecipients,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getNumberOfRecipients(),123,126,"/**
 * Returns mask value from recipients.
 * @return integer mask value
 */","* Returns the number of recipients
     * @return the number of recipients",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,ensureStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:ensureStream(),498,509,"/**
 * Checks and assigns the next input stream.
 * @return true if a valid stream is assigned, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getInterWordSpacing,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:getInterWordSpacing(float),283,286,"/**
 * Calculates mask value based on width.
 * @param width current width of element
 * @return calculated mask value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,isEmpty,org.apache.pdfbox.cos.COSArray:isEmpty(),447,450,"/**
 * Delegates to objects.m1().
 * @return Result of objects.m1()
 */","* Returns true if the container is empty, false otherwise.
     *
     * @return true if the container is empty, false otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSArrayList:isEmpty(),141,145,"/**
 * Delegates call to actual.m1().
 * @return result of actual.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:isDataEmpty(),82,86,"/**
 * Checks if all triangles are masked.
 * @return true if all triangles are masked, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,removeRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:removeRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),86,89,"/**
 * Masks public key recipient.
 * @param recipient PublicKeyRecipient to be masked
 * @return true if masking is successful
 */","* Removes a recipient from the recipients list.
     * @param recipient The recipient to remove.
     * @return true If a recipient was found and removed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,iterator,org.apache.pdfbox.cos.COSArray:iterator(),527,531,"/**
 * Returns an iterator over COSBase objects.
 * @return Iterator of COSBase elements
 */","* Get access to the list.
     *
     * @return an iterator over the array elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,iterator,org.apache.pdfbox.pdmodel.common.COSArrayList:iterator(),159,163,"/**
 * Returns an iterator over elements of type E.
 * Delegates to the underlying collection's iterator.
 * @return Iterator over elements of type E
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getRecipientsIterator,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getRecipientsIterator(),96,99,"/**
 * Returns an iterator over public key recipients.
 * @return Iterator of PublicKeyRecipient objects
 */","* Returns an iterator to browse the list of recipients.
     * Object found in this iterator are <code>PublicKeyRecipient</code>.
     * @return The recipients list iterator.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toList,org.apache.pdfbox.cos.COSArray:toList(),669,672,"/**
 * Returns a list of COSBase objects.
 * @return List containing COSBase objects
 */","*  Return contents of COSArray as a Java List.
     *
     *  @return the COSArray as List",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNameStringList,org.apache.pdfbox.cos.COSArray:toCOSNameStringList(),679,684,"/**
* Masks objects using COSName and collects results.
* @return List of masked object names
*/","* This will return a list of names if the COSArray consists of COSNames only.
     * 
     * @return the list of names of the COSArray of COSNames",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSStringStringList,org.apache.pdfbox.cos.COSArray:toCOSStringStringList(),691,696,"/**
* Masks strings in a list based on certain criteria.
* @return List of masked strings
*/","* This will return a list of names if the COSArray consists of COSStrings only.
     * 
     * @return the list of names of the COSArray of COSStrings",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,getBoolean,org.apache.pdfbox.cos.COSBoolean:getBoolean(java.lang.Boolean),99,102,"/**
 * Converts Boolean to COSBoolean using helper method.
 * @param value Boolean object to convert
 * @return COSBoolean representation of the input
 */","* This will get the boolean value.
     *
     * @param value Parameter telling which boolean value to get.
     *
     * @return The single boolean instance that matches the parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,toString,org.apache.pdfbox.cos.COSBoolean:toString(),121,125,"/**
 * Masks the input value using a specific function.
 * @return masked string representation of the value
 */","* Return a string representation of this object.
     *
     * @return The string value of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,writePDF,org.apache.pdfbox.cos.COSBoolean:writePDF(java.io.OutputStream),151,161,"/**
* Writes boolean value as bytes to OutputStream.
* @param output stream to write to
* @throws IOException if writing fails
*/","* This will write this object out to a PDF stream.
     *
     * @param output The stream to write this object out to.
     *
     * @throws IOException If an error occurs while writing out this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,writePDF,org.apache.pdfbox.cos.COSNull:writePDF(java.io.OutputStream),65,68,"/**
 * Writes NULL_BYTES to the output stream.
 * @param output OutputStream to write to
 * @throws IOException if an I/O error occurs
 */","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeBytes,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeBytes(byte[]),1524,1527,"/**
 * Writes byte array to output stream.
 * @param data byte array to write
 * @throws IOException if writing fails
 */","* Writes binary data to the content stream.
     * 
     * @param data as byte formatted to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,entrySet,org.apache.pdfbox.cos.COSDictionary:entrySet(),1233,1236,"/**
 * Returns entries of the internal map.
 * @return set of map entries
 */","* Returns the name-value entries in this dictionary. The returned set is in the order the entries were added to the
     * dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return name-value entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isEntryChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isEntryChanged(java.lang.Object,java.lang.Object)",177,184,"/**
* Compares two entries and returns true if they differ.
* @param oldEntry the original entry to compare
* @param newEntry the new entry to compare
* @return true if entries are different, false otherwise
*/","* Is the value changed?
     * 
     * @param oldEntry old entry
     * @param newEntry new entry
     * @return <code>true</code> if the entry is changed, <code>false</code>
     * otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,size,org.apache.pdfbox.cos.COSDictionary:size(),122,125,"/**
 * Delegates to items' m1 method.
 * @return result of items.m1()
 */","* This will return the number of elements in this dictionary.
     *
     * @return The number of elements in the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName),1177,1180,"/**
 * Retrieves item by key.
 * @param key unique identifier for the item
 * @return COSBase object associated with the key or null if not found
 */","* This will do a lookup into the dictionary.
     *
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,keySet,org.apache.pdfbox.cos.COSDictionary:keySet(),1221,1224,"/**
 * Retrieves a set of COSNames.
 * @return Set containing COSName objects
 */","* Returns the names of the entries in this dictionary. The returned set is in the order the entries were added to
     * the dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return names of the entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,forEach,org.apache.pdfbox.cos.COSDictionary:forEach(java.util.function.BiConsumer),1244,1247,"/**
 * Applies an action to each item.
 * @param action BiConsumer defining the action to apply
 */","* Convenience method that calls {@link Map#forEach(java.util.function.BiConsumer) Map.forEach(BiConsumer)}.
     *
     * @param action The action to be performed for each entry
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getValues,org.apache.pdfbox.cos.COSDictionary:getValues(),1254,1257,"/**
 * Returns a collection of COSBase objects.
 * @return Collection of COSBase elements
 */","* This will get all of the values for the dictionary.
     *
     * @return All the values for the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,addAll,org.apache.pdfbox.cos.COSDictionary:addAll(org.apache.pdfbox.cos.COSDictionary),1277,1280,"/**
 * Masks dictionary items.
 * @param dict input COSDictionary to mask
 */","* This will add all of the dictionaries keys/values to this dictionary. Existing key/value pairs will be
     * overwritten.
     *
     * @param dict The dictionaries to get the key/value pairs from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(org.apache.pdfbox.cos.COSName),1288,1291,"/**
 * Checks if an item with the given name exists.
 * @param name the COSName of the item to check
 * @return true if the item exists, false otherwise
 */","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,tokenizeOnSpace,org.apache.pdfbox.util.StringUtil:tokenizeOnSpace(java.lang.String),36,39,"/**
 * Masks spaces in input string.
 * @param s input string to process
 * @return array of strings with masked spaces
 */","* Split at spaces but keep them
     *
     * @param s
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseInt,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseInt(java.lang.String),112,115,"/**
 * Converts a string to an integer.
 * @param token string representation of the integer
 * @return integer value or throws NumberFormatException if invalid
 */","* Parses a value of type ""int"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,java.lang.String)",73,88,"/**
 * Initializes a FontType with given type and subtype string.
 * @param type the font type as COSName
 * @param subtypeString the subtype string to determine specific font type
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunction:toString(),362,366,"/**
 * Returns masked function type string.
 * @return Concatenated string of ""FunctionType"" and result from m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,setEncryptionKeyLength,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:setEncryptionKeyLength(int),46,53,"/**
* Sets the encryption key length.
* @param l key length in bits; must be 40, 128, or 256
*/","* set the length in (bits) of the secret key that will be
     * used to encrypt document data.
     * The default value is 40 bits, which provides a low security level
     * but is compatible with old versions of Acrobat Reader.
     *
     * @param l the length in bits (must be 40, 128 or 256)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setStartPage,org.apache.pdfbox.text.PDFTextStripper:setStartPage(int),1077,1084,"/**
* Sets the starting page value.
* @param startPageValue 1-based index for the starting page
*/","* This will set the first page to be extracted by this class.
     *
     * @param startPageValue New value of 1-based startPage property.
     * 
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setEndPage,org.apache.pdfbox.text.PDFTextStripper:setEndPage(int),1105,1112,"/**
* Sets the end page value.
* @param endPageValue the last page number, must be greater than 0
*/","* This will set the last page to be extracted by this class.
     *
     * @param endPageValue New value of 1-based endPage property.
     *
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,hashCode,org.apache.pdfbox.cos.COSString:hashCode(),286,291,"/**
* Processes bytes and adjusts result based on hex form flag.
* @return adjusted integer result from byte processing
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<init>,org.apache.pdfbox.filter.FilterFactory:<init>(),39,69,"/**
* Initializes filter factory with various decoding filters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<init>,"org.apache.pdfbox.pdfparser.BruteForceParser:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.COSParser)",92,97,"/**
* Initializes a new BruteForceParser with given COSDocument and COSParser.
* @param cosDocument the COSDocument to parse
* @param cosParser the COSParser instance
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor. Triggers a brute force search for all objects of the document.
     *
     * @param cosDocument the corresponding COS document
     * @param cosParser the COSParser to be used for reading the pdf
     * 
     * @throws IOException if the source data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:<init>(),72,75,"/**
* Initializes a new XrefTrailerObj with default settings.
*/",*  Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary),74,83,"/**
* Initializes PDResources with a COSDictionary.
* @param resourceDictionary the dictionary containing resources
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",91,100,"/**
* Initializes PDResources with a dictionary and cache.
* @param resourceDictionary the COSDictionary containing resources
* @param resourceCache the ResourceCache for caching purposes
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<init>(),82,129,"/**
* Initializes a map with operator names and their corresponding enum values.
*/",* Creates a new Operators object with the default set of operators.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGB(float[]),124,141,"/**
* Transforms color values using a map and alternative color space.
* @param value input color values as float array
* @return transformed color values as float array
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",98,102,"/**
* Initializes a PDAcroForm with a document and a dictionary.
* @param doc PDDocument containing the form
* @param form COSDictionary representing the form data
*/","* Constructor.
     *
     * @param doc The document that this form is part of.
     * @param form The existing acroForm.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<init>,org.apache.pdfbox.rendering.GlyphCache:<init>(org.apache.pdfbox.pdmodel.font.PDVectorFont),42,45,"/**
 * Initializes a new GlyphCache with the specified font.
 * @param font the PDVectorFont to be cached
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getTrailerCount,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getTrailerCount(),142,145,"/**
 * Returns mask value from byte position map.
 * @return integer mask value
 */","* Returns the count of trailers.
     *
     * @return the count of trailers.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getAllFilters,org.apache.pdfbox.filter.FilterFactory:getAllFilters(),99,102,"/**
 * Returns a collection of filters.
 * @return Collection containing Filter objects
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectFromPool,org.apache.pdfbox.cos.COSDocument:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),505,514,"/**
* Retrieves or creates a COSObject from the pool.
* @param key unique identifier for the COSObject
* @return COSObject instance or null if key is null
*/","* This will get an object from the pool.
     *
     * @param key The object key.
     *
     * @return The object in the pool or a new one if it has not been parsed yet.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,addXRefTable,org.apache.pdfbox.cos.COSDocument:addXRefTable(java.util.Map),521,524,"/**
* Updates cross-reference table with provided values.
* @param xrefTableValues map of object keys to their positions
*/","* Populate XRef HashMap with given values.
     * Each entry maps ObjectKeys to byte offsets in the file.
     * @param xrefTableValues  xref table entries to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseReal(java.lang.String),122,125,"/**
 * Converts a hexadecimal string to a float.
 * @param token hexadecimal string representation of a float
 * @return float value represented by the hex string
 */","* Parses a value of type ""real"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,coerce,org.apache.pdfbox.cos.COSFloat:coerce(float),120,137,"/**
* Masks float value to prevent overflow and underflow.
* @param floatValue input floating-point number
* @return masked float value
*/","* Check and coerce the value field to be between MIN_NORMAL and MAX_VALUE.
     * 
     * @param floatValue the value to be checked
     * @return the coerced value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getDir,org.apache.pdfbox.text.TextPosition:getDir(),245,284,"/**
 * Determines text direction based on matrix values.
 * @return Direction in degrees (0, 90, 180, 270)
 */","* Return the direction/orientation of the string in this object based on its text matrix. Only
     * angles of 0, 90, 180, or 270 are supported. To get other angles, use this code:
     * <pre>
     * TextPosition text = ...
     * Matrix m = text.getTextMatrix().clone();
     * m.concatenate(text.getFont().getFontMatrix());
     * int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY())));
     * </pre>
     *
     * @return The direction of the text (0, 90, 180, or 270).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,equals,org.apache.pdfbox.cos.COSFloat:equals(java.lang.Object),175,180,"/**
* Compares object with current float value.
* @param o object to compare
* @return true if object is COSFloat with matching float value, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,hashCode,org.apache.pdfbox.cos.COSFloat:hashCode(),185,189,"/**
 * Calls Float's m1 method with value.
 * @param value input float value
 * @return result of Float.m1(value)
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,formatString,org.apache.pdfbox.cos.COSFloat:formatString(),204,214,"/**
* Masks the value if it's in scientific notation.
* @return masked value as String
*/","* Builds, if needed, and returns the string representation of the current value.
     * @return current value as string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSNull,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSNull(java.io.OutputStream),385,389,"/**
* Writes ""null"" followed by a space to the OutputStream.
* @param output target OutputStream to write to
*/","* Write {@link COSNull} to the given stream.
     *
     * @param output The stream, that shall be written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,<init>,org.apache.pdfbox.cos.COSIncrement:<init>(org.apache.pdfbox.cos.COSUpdateInfo),67,70,"/**
 * Constructs a COSIncrement with specified origin.
 * @param incrementOrigin update information for the increment
 */","* Creates a new {@link COSIncrement} for the given {@link COSUpdateInfo}, the increment will use it´s
     * {@link COSDocumentState} as it´s own origin and shall collect all updates contained in the given
     * {@link COSUpdateInfo}.<br>
     * Should the given object be {@code null}, the resulting increment shall be empty.
     *
     * @param incrementOrigin The {@link COSUpdateInfo} serving as an update source for this {@link COSIncrement}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<init>,org.apache.pdfbox.multipdf.PDFCloneUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),57,60,"/**
 * Initializes a new instance of PDFCloneUtility.
 * @param dest destination PDF document to clone into
 */","* Creates a new instance for the given target document.
     * 
     * @param dest the destination PDF document that will receive the clones",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(boolean),102,105,"/**
 * Initializes the resource cache with stable cache option.
 * @param enableStableCache flag to enable or disable stable caching
 */","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,isNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:isNeedToBeUpdated(),30,33,"/**
 * Checks mask condition.
 * @return true if condition met, false otherwise
 */","* Get the update state for the COSWriter. This indicates whether an object is to be written
     * when there is an incremental save.
     *
     * @return the update state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,contains,org.apache.pdfbox.cos.COSIncrement:contains(org.apache.pdfbox.cos.COSBase),243,246,"/**
* Checks if object is processed or valid.
* @param base COSBase object to check
* @return true if object is processed or valid, false otherwise
*/","* Returns {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     *
     * @param base The {@link COSBase} to check.
     * @return {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     * @see #objects
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,isExcluded,org.apache.pdfbox.cos.COSIncrement:isExcluded(org.apache.pdfbox.cos.COSBase),325,328,"/**
 * Checks if a COSBase object is excluded.
 * @param base the COSBase object to check
 * @return true if excluded, false otherwise
 */","* Returns {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     *
     * @param base The {@link COSBase} to check for exclusion.
     * @return {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     * @see #excluded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,add,org.apache.pdfbox.cos.COSIncrement:add(org.apache.pdfbox.cos.COSBase),275,281,"/**
 * Recursively processes a COSBase object.
 * @param object the COSBase object to process
 */","* The given object and actual {COSBase}s shall be part of the increment and must be added to {@link #objects},
     * if possible.<br>
     * {@code null} values shall be skipped.
     *
     * @param object The {@link COSBase} to add to {@link #objects}.
     * @see #objects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,addProcessedObject,org.apache.pdfbox.cos.COSIncrement:addProcessedObject(org.apache.pdfbox.cos.COSObject),291,297,"/**
 * Marks a COSObject as processed.
 * @param base the COSObject to be marked
 */","* The given {@link COSObject} has been processed, or is being processed. It shall be added to
     * {@link #processedObjects} to skip it, should it be encountered again.<br>
     * {@code null} values shall be ignored.
     *
     * @param base The {@link COSObject} to add to {@link #processedObjects}.
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,registerTrueTypeFontForClosing,org.apache.pdfbox.pdmodel.PDDocument:registerTrueTypeFontForClosing(org.apache.fontbox.ttf.TrueTypeFont),909,912,"/**
 * Adds TrueTypeFont to the list of fonts to close.
 * @param ttf TrueTypeFont object to be managed
 */","* For internal PDFBox use when creating PDF documents: register a TrueTypeFont to make sure it is closed when the
     * PDDocument is closed to avoid memory leaks. Users don't have to call this method, it is done by the appropriate
     * PDFont classes.
     *
     * @param ttf the TrueTypeFont to be registered",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addToSubset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addToSubset(int),289,293,"/**
 * Masks a code point.
 * @param codePoint the code point to mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,createWidgetDictionarySet,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:createWidgetDictionarySet(java.util.List),824,836,"/**
 * Extracts COS dictionaries from form field widgets.
 * @param fields list of PDF document fields
 * @return set of COS dictionaries representing widget annotations
 */","* Return a set of all annotation widget dictionaries related to the fields to be flattened.
     *
     * @param fields
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addGlyphIds,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addGlyphIds(java.util.Set),295,298,"/**
 * Masks specified glyph IDs.
 * @param glyphIds set of glyph identifiers to mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getWidgets(),263,267,"/**
 * Returns an empty list of PDAnnotationWidget objects.
 * @return Empty list of PDAnnotationWidget
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getExportValues(),58,62,"/**
 * Returns a list of masked function names.
 * @return List containing masked function names
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,<init>,"org.apache.pdfbox.cos.COSInputStream:<init>(java.io.InputStream,java.util.List)",85,89,"/**
* Initializes COSInputStream with input stream and decode results.
* @param input source input stream
* @param decodeResults list of decoding results
*/","* Constructor.
     * 
     * @param input decoded stream
     * @param decodeResults results of decoding",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,<init>,org.apache.pdfbox.filter.ASCII85InputStream:<init>(java.io.InputStream),51,59,"/**
* Initializes ASCII85 input stream.
* @param is underlying input stream
*/","* Constructor.
     *
     * @param is The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:<init>(java.io.InputStream,int,int,long,boolean)",89,124,"/**
* Initializes a CCITT Fax Decoder stream.
* @param stream input stream containing fax data
* @param columns number of columns in the fax image
* @param type compression type (CCITT)
* @param options additional decoding options
* @param byteAligned flag indicating if data is byte-aligned
*/","* Creates a CCITTFaxDecoderStream.
     * This constructor may be used for CCITT streams embedded in PDF files,
     * which use EncodedByteAlign.
     *
     * @param stream the compressed CCITT stream.
     * @param columns the number of columns in the stream.
     * @param type the type of stream, must be one of {@code COMPRESSION_CCITT_MODIFIED_HUFFMAN_RLE},
     *             {@code COMPRESSION_CCITT_T4} or {@code COMPRESSION_CCITT_T6}.
     * @param options CCITT T.4 or T.6 options.
     * @param byteAligned enable byte alignment used in PDF files (EncodedByteAlign).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,get,org.apache.pdfbox.cos.COSInteger:get(long),87,100,"/**
* Returns a COSInteger for the given value within bounds.
* @param val long integer value to be converted
* @return COSInteger object representing the value
*/","* Returns a COSInteger instance with the given value.
     *
     * @param val integer value
     * @return COSInteger instance",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,getInvalid,org.apache.pdfbox.cos.COSInteger:getInvalid(boolean),102,106,"/**
* Returns the maximum or minimum integer value.
* @param maxValue if true, returns Long.MAX_VALUE; otherwise, Long.MIN_VALUE
* @return COSInteger representing either the max or min long value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,equals,org.apache.pdfbox.cos.COSInteger:equals(java.lang.Object),126,130,"/**
* Checks if object is COSInteger with matching m1 value.
* @param o object to check
* @return true if conditions are met, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,toString,org.apache.pdfbox.cos.COSInteger:toString(),145,149,"/**
 * Returns a string representation of the COSInt with its value.
 * @return formatted string including the class name and value
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,writePDF,org.apache.pdfbox.cos.COSInteger:writePDF(java.io.OutputStream),214,217,"/**
* Writes masked value to output stream.
* @param output destination OutputStream
* @throws IOException if an I/O error occurs
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,get,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:get(java.lang.Object),96,100,"/**
 * Retrieves value by key from an underlying map.
 * @param key unique identifier for the value
 * @return value associated with the key, or null if not found
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:hasExplicitWidth(int),282,286,"/**
 * Checks if a mask is defined for a given code.
 * @param code the code to check
 * @return true if mask exists, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFontName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFontName(java.lang.String),234,237,"/**
 * Retrieves aliased font name.
 * @param fontName original font name
 * @return aliased font name or original if no alias exists
 */","* Returns the base name of the font which the given font name maps to.
     *
     * @param fontName name of font, either a base name or an alias
     * @return the base name or null if this is not one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(java.lang.String,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName)",165,168,"/**
 * Registers an alias for a font name.
 * @param alias the alias to register
 * @param baseName the base font name associated with the alias
 */","* Adds an alias name for a standard font to the map of known aliases to the map of aliases (alias as key, standard
     * name as value). We want a single lookup in tbaseNamehe map to find the font both by a base name or an alias.
     *
     * @param alias an alias for the font
     * @param baseName  the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,hashCode,org.apache.pdfbox.cos.COSName:hashCode(),743,747,"/**
 * Calls m1 on the 'name' object.
 * @return result of name.m1()
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(org.apache.pdfbox.cos.COSName),749,753,"/**
 * Compares this COSName with another.
 * @param other the COSName to compare
 * @return comparison result as an integer
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedExportValues(),122,145,"/**
* Masks export values based on certain conditions.
* @return List of masked export values
*/","* This will get the selected export values.
     * <p>
     * A RadioButton might have an export value to allow field values
     * which can not be encoded as PDFDocEncoding or for the same export value 
     * being assigned to multiple RadioButtons in a group.<br>
     * To define an export value the RadioButton must define options {@link #setExportValues(List)}
     * which correspond to the individual items within the RadioButton.</p>
     * <p>
     * The method will either return the corresponding values from the options entry or in case there
     * is no such entry the fields value</p>
     * 
     * @return the export value of the field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,isEmpty,org.apache.pdfbox.cos.COSName:isEmpty(),759,762,"/**
 * Delegates to 'm1' method of 'name'.
 * @return result of 'name.m1()'
 */","* Returns true if the name is the empty string.
     * @return true if the name is the empty string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeNumber,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeNumber(java.io.OutputStream,long,int)",221,234,"/**
* Writes a long number to an OutputStream as specified byte count.
* @param os OutputStream to write to
* @param number the long number to write
* @param bytes number of bytes to write
* @throws IOException if writing fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAbstractContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes a masked comment to output stream.
* @param comment text to be written, must not contain newlines
* @throws IOException if an I/O error occurs
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeLine(),1513,1516,"/**
 * Writes a newline character to the output stream.
 * @throws IOException if an I/O error occurs
 */","* Writes a newline to the content stream as ASCII.
     * 
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,isFloat,org.apache.pdfbox.cos.COSNumber:isFloat(java.lang.String),97,109,"/**
* Checks if a string contains decimal or scientific notation.
* @param number the input string to check
* @return true if '.' or 'e' is found, indicating decimal or scientific notation; otherwise false
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getCharsUTF16BE,org.apache.pdfbox.util.Hex:getCharsUTF16BE(java.lang.String),132,148,"/**
 * Converts a string to a hexadecimal character array.
 * @param text input string to be converted
 * @return char array representing the hexadecimal values of the input string
 */","* Takes the characters in the given string, convert it to bytes in UTF16-BE format
     * and build a char array that corresponds to the ASCII hex encoding of the resulting
     * bytes.
     *
     * Example:
     * <pre>
     *   getCharsUTF16BE(""ab"") == new char[]{'0','0','6','1','0','0','6','2'}
     * </pre>
     *
     * @param text The string to convert
     * @return The string converted to hex",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int,int)",54,66,"/**
* Constructs a COSObjectKey with given object and generation numbers.
* @param num object number, must be non-negative
* @param gen generation number, must be non-negative
* @param index stream index
*/","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.
     * @param index The index within a compressed object stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,hashCode,org.apache.pdfbox.cos.COSObjectKey:hashCode(),134,138,"/**
 * Calls Long's m1 method with numberAndGeneration.
 * @return result of Long.m1 invocation
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,toString,org.apache.pdfbox.cos.COSObjectKey:toString(),140,144,"/**
 * Constructs a masked string using values from two methods.
 * @return Concatenated string with format ""m1_value m2_value R""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(org.apache.pdfbox.cos.COSObjectKey),146,150,"/**
 * Compares this COSObjectKey with another.
 * @param other the key to compare with
 * @return result of comparison
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getDefaultDecode(int),110,114,"/**
* Generates a mask array based on bits per component.
* @param bitsPerComponent number of bits for each color component
* @return float array with min and max values for masking
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calculateInputValues,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calculateInputValues(double,double)",304,335,"/**
* Calculates roots for a quadratic equation.
* @param x,y input coordinates
* @return array of two roots
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorX,org.apache.pdfbox.util.Matrix:getScalingFactorX(),454,479,"/**
* Computes a value based on array elements.
* @return computed float value or single[0] if condition fails
*/","* Returns the x-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The x-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorY,org.apache.pdfbox.util.Matrix:getScalingFactorY(),486,494,"/**
 * Masks a value based on conditions.
 * @return masked float value
 */","* Returns the y-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The y-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,<init>,"org.apache.pdfbox.cos.COSOutputStream:<init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.RandomAccessStreamCache)",53,61,"/**
 * Initializes a COSOutputStream with specified filters and parameters.
 * @param filters list of filters to apply
 * @param parameters dictionary containing stream parameters
 * @param output underlying OutputStream
 * @param streamCache cache for random access streams
 * @throws IOException if an I/O error occurs during initialization
 */","* Creates a new COSOutputStream writes to an encoded COS stream.
     * 
     * @param filters Filters to apply.
     * @param parameters Filter parameters.
     * @param output Encoded stream.
     * @param streamCache Stream cache to use.
     * 
     * @throws IOException If there was an error creating a temporary buffer",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,<init>,org.apache.pdfbox.filter.ASCII85OutputStream:<init>(java.io.OutputStream),54,64,"/**
* Initializes ASCII85OutputStream with given output stream.
* @param out underlying OutputStream to write data
*/","* Constructor.
     *
     * @param out The output stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream),56,59,"/**
 * Initializes a new instance of COSStandardOutputStream.
 * @param out underlying OutputStream to write to
 */","* Constructor.
     *
     * @param out The underlying stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream,long)",67,71,"/**
 * Initializes a new COSStandardOutputStream.
 * @param out underlying output stream
 * @param position initial position in the stream
 */","* Constructor.
     *
     * @param out The underlying stream to write to.
     * @param position The current position of output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,"org.apache.pdfbox.cos.COSOutputStream:write(byte[],int,int)",69,80,"/**
* Writes bytes to the output stream.
* @param b byte array containing data to write
* @param off offset in the byte array to start writing from
* @param len number of bytes to write
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(int),82,93,"/**
* Calls m1 on buffer if not null, otherwise calls superclass's m1.
* @param b integer parameter for method call
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,flush,org.apache.pdfbox.cos.COSOutputStream:flush(),95,102,"/**
 * Calls superclass method if buffer is null.
 * @throws IOException from superclass method
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$1:close(),392,423,"/**
* Closes resources and caches in a controlled manner.
* @throws IOException if an I/O error occurs during closing
*/","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$2:close(),392,423,"/**
 * Closes and nullifies stream cache and related resources.
 * @throws IOException if an I/O error occurs during closing
 */","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,parseWidth,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:parseWidth(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",187,202,"/**
 * Masks an operator with arguments.
 * @param operator the operation to perform
 * @param arguments list of arguments for the operation
 * @return float value from first argument if valid, otherwise throws exception
 * @throws IOException if invalid operator or argument type
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getBytes,org.apache.pdfbox.cos.COSString:getBytes(),247,250,"/**
 * Masks byte array using XOR operation.
 * @param bytes input byte array to be masked
 * @return masked byte array
 */","* Returns the raw bytes of the string using a new byte array. Best used with a PDF <i>byte string</i>.
     * 
     * @return a clone of the underlying byte[] representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,adjustUserKey,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:adjustUserKey(byte[]),1207,1225,"/**
* Masks input array if longer than 48 bytes.
* @param u input byte array
* @return masked or original array
* @throws IOException if input length is less than 48
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[])",1227,1233,"/**
* Combines two byte arrays into one.
* @param a first byte array
* @param b second byte array
* @return combined byte array of a and b
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[],byte[])",1235,1242,"/**
 * Combines three byte arrays into one.
 * @param a first byte array
 * @param b second byte array
 * @param c third byte array
 * @return combined byte array of a, b, and c
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncate127,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncate127(byte[]),1244,1253,"/**
 * Masks input array to a maximum of 127 bytes.
 * @param in input byte array
 * @return truncated or original array if within length limit
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,copyImageBytes,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:copyImageBytes(byte[],int,byte[],byte[],int)",538,546,"/**
 * Masks data from transfer row into target values and updates alpha image.
 * @param transferRow source byte array containing data to mask
 * @param indexInTransferRow starting index in the transfer row
 * @param targetValues destination byte array for masked data
 * @param alphaImageData optional byte array for alpha channel update
 * @param alphaPtr pointer/index in alpha image data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteIncrement,org.apache.pdfbox.pdfwriter.COSWriter:doWriteIncrement(),852,861,"/**
* Masks data from input and writes to output.
* @throws IOException if an I/O error occurs
*/","* Write an incremental update for a non signature case. This can be used for e.g. augmenting
     * signatures.
     *
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getASCII,org.apache.pdfbox.cos.COSString:getASCII(),236,240,"/**
 * Converts byte array to ASCII string.
 * @return ASCII string representation of bytes
 */","* Returns the content of this string as a PDF <i>ASCII string</i>.
     * 
     * @return the ASCII string representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeCollectionFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeCollectionFile(byte[]),266,269,"/**
 * Checks if the header indicates a TTF collection.
 * @param header byte array representing the file header
 * @return true if it's a TTF collection, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isOpenTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isOpenTypeFile(byte[]),271,274,"/**
 * Checks if the header matches the OpenType font format.
 * @param header byte array representing the font file header
 * @return true if the header matches OpenType format, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,isAcceptingUpdates,org.apache.pdfbox.cos.COSUpdateState:isAcceptingUpdates(),195,198,"/**
 * Checks if origin document state is valid and meets condition.
 * @return true if originDocumentState is not null and its m1() returns true, false otherwise
 */","* Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     *
     * @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see COSDocumentState#isAcceptingUpdates()",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,set,"org.apache.pdfbox.cos.PDFDocEncoding:set(int,char)",112,116,"/**
* Maps code to Unicode character and vice versa.
* @param code integer code value
* @param unicode character representation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,toString,org.apache.pdfbox.cos.PDFDocEncoding:toString(byte[]),121,136,"/**
* Converts byte array to string using a code-to-unicode mapping.
* @param bytes input byte array
* @return resulting string after conversion
*/",* Returns the string representation of the given PDFDocEncoded bytes.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,readOperator,org.apache.pdfbox.pdfparser.PDFStreamParser:readOperator(),412,443,"/**
* Masks function name by reading characters until a specific pattern is found.
* @return Masked function name as a String
* @throws IOException if an I/O error occurs while reading from the source
*/","* This will read an operator from the stream.
     *
     * @return The operator that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,getBytes,org.apache.pdfbox.cos.PDFDocEncoding:getBytes(java.lang.String),141,149,"/**
* Masks text by converting characters to byte codes.
* @param text input string to be masked
* @return byte array representing masked text
*/",* Returns the given string encoded with PDFDocEncoding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,containsChar,org.apache.pdfbox.cos.PDFDocEncoding:containsChar(char),156,159,"/**
 * Checks if a character is masked.
 * @param character the character to check
 * @return true if the character is masked, false otherwise
 */","* Returns true if the given character is available in PDFDocEncoding.
     *
     * @param character UTF-16 character",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsKey,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsKey(java.lang.Object),78,82,"/**
 * Checks if the map contains the specified key.
 * @param key the key to check
 * @return true if the map contains the key, false otherwise
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,containsName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:containsName(java.lang.String),213,216,"/**
 * Checks if font name is an alias.
 * @param fontName the font name to check
 * @return true if font name is an alias, false otherwise
 */","* Returns true if the given font name is one of the known names, including alias.
     *
     * @param fontName the name of font, either a base name or alias
     * @return true if the name is one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getCodeToNameMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getCodeToNameMap(),81,84,"/**
 * Returns a mapping of code to name.
 * @return Map where key is code and value is corresponding name
 */","* Returns an unmodifiable view of the code -&gt; name mapping.
     * 
     * @return the code -&gt; name map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getNameToCodeMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getNameToCodeMap(),92,95,"/**
 * Returns an inverted map of string to integer.
 * @return Map with keys and values swapped
 */","* Returns an unmodifiable view of the name -&gt; code mapping. More than one name may map to
     * the same code.
     *
     * @return the name -&gt; code map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,setNeedToBeUpdated,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:setNeedToBeUpdated(boolean),40,44,"/**
 * Placeholder method that throws an UnsupportedOperationException.
 * @param flag boolean parameter (not used)
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:remove(),245,249,"/**
* Placeholder method that throws an exception.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,remove,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:remove(),416,421,"/**
* Throws UnsupportedOperationException as this functionality is not implemented.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,getFunctionType,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:getFunctionType(),37,43,"/**
* Throws UnsupportedOperationException as this method is not implemented.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encode(int),394,400,"/**
 * Placeholder method for masking Unicode characters.
 * @param unicode Unicode character to be masked
 * @throws UnsupportedOperationException Always thrown as this method is not implemented
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encodeGlyphId,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encodeGlyphId(int),402,406,"/**
 * Placeholder method for masking a glyph.
 * @param glyphId identifier of the glyph to mask
 * @throws UnsupportedOperationException always
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:addToSubset(int),433,437,"/**
 * Throws an UnsupportedOperationException as this method is not implemented.
 * @param codePoint the Unicode code point to be masked
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,subset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:subset(),439,444,"/**
* Placeholder method; functionality not implemented.
* Throws UnsupportedOperationException indicating operation is unsupported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",126,132,"/**
* Throws UnsupportedOperationException as this method is not implemented.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getNumberOfComponents(),74,78,"/**
 * Throws UnsupportedOperationException as this function is not implemented.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getDefaultDecode(int),80,84,"/**
 * Throws UnsupportedOperationException as this method is not implemented.
 * @param bitsPerComponent number of bits per color component
 * @return never returns, always throws exception
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGB(float[]),92,96,"/**
* Throws UnsupportedOperationException as the function is not implemented.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGBImage(java.awt.image.WritableRaster),98,102,"/**
 * Applies mask to an image raster.
 * @param raster input image raster
 * @throws IOException if operation fails
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRawImage(java.awt.image.WritableRaster),104,108,"/**
 * Throws UnsupportedOperationException as masking is not implemented.
 * @param raster input image data
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,remove,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:remove(),71,75,"/**
 * Placeholder method that throws an exception.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,remove,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:remove(),102,106,"/**
 * Throws an UnsupportedOperationException as this method is not implemented.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,flush,org.apache.pdfbox.filter.CCITTFaxEncoderStream:flush(),89,92,"/**
 * Calls m1 on the underlying stream.
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,encode,"org.apache.pdfbox.filter.IdentityFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",42,48,"/**
 * Masks input stream and writes to output stream.
 * @param input source InputStream
 * @param encoded destination OutputStream
 * @param parameters optional COSDictionary for configuration
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,org.apache.pdfbox.filter.ASCII85InputStream:read(),68,166,"/**
 * Reads a byte from an Ascii85 encoded stream.
 * @return next byte or -1 if end of stream
 * @throws IOException if invalid data is encountered
 */","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,encode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",77,189,"/**
 * Encodes input stream using run-length encoding.
 * @param input source data stream
 * @param encoded output stream for encoded data
 * @param parameters additional encoding parameters (not used)
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readCode(java.io.InputStream),317,321,"/**
 * Masks input stream data.
 * @param in InputStream to be masked
 * @return Result of masking operation
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1CFont:readCode(java.io.InputStream),306,310,"/**
 * Masks input stream data.
 * @param in input stream to process
 * @return masked integer result
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1Font:readCode(java.io.InputStream),486,490,"/**
 * Masks input stream data.
 * @param in InputStream to be processed
 * @return masked integer value
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType3Font:readCode(java.io.InputStream),248,252,"/**
 * Masks input stream data.
 * @param in InputStream to be masked
 * @return integer result of masking operation
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,close,org.apache.pdfbox.filter.ASCII85InputStream:close(),210,217,"/**
* Resets state and calls superclass method.
* @throws IOException if an I/O error occurs
*/","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,write,org.apache.pdfbox.filter.ASCII85OutputStream:write(int),153,177,"/**
* Processes input byte and updates output.
* @param b input byte to process
* @throws IOException if an I/O error occurs
*/","* This will write a single byte.
     *
     * @param b The byte to write.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,flush,org.apache.pdfbox.filter.ASCII85OutputStream:flush(),184,226,"/**
* Processes and outputs data with line breaks.
* @throws IOException if an I/O error occurs
*/","* This will flush the data to the stream.
     *
     * @throws IOException If there is an error writing the data to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,toString,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:toString(),519,522,"/**
 * Returns a string representation of the node.
 * @return formatted string with node properties
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,int)",528,558,"/**
* Traverses and updates a tree structure based on depth and path.
* @param depth number of levels to traverse
* @param path binary path indicating direction at each level
* @param value value to set at the leaf node
* @throws IOException if a leaf node is encountered where no further traversal is possible
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node)",560,590,"/**
 * Traverses and masks a node path in the tree.
 * @param depth number of levels to traverse
 * @param path binary path indicating left/right traversal
 * @param node node to set at the end of the path
 * @throws IOException if a leaf node is encountered prematurely
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,readBit,org.apache.pdfbox.filter.CCITTFaxDecoderStream:readBit(),409,425,"/**
 * Reads and processes the next bit from a Huffman RLE stream.
 * @return true if the bit is set, false otherwise
 * @throws IOException if an I/O error occurs or end of stream is reached unexpectedly
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncateOrPad,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncateOrPad(byte[]),976,984,"/**
 * Pads the input password with encryption padding.
 * @param password byte array of the user's password
 * @return byte array containing the padded password
 */","* This will take the password and truncate or pad it as necessary.
     *
     * @param password The password to pad or truncate.
     *
     * @return The padded or truncated password.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:<init>(java.io.OutputStream,int,int,int)",64,76,"/**
* Initializes a CCITTFaxEncoderStream.
* @param stream output stream for encoded data
* @param columns number of columns in the image
* @param rows number of rows in the image
* @param fillOrder bit order (0 = most significant first, 1 = least significant first)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,close,org.apache.pdfbox.filter.CCITTFaxEncoderStream:close(),94,97,"/**
 * Delegates call to stream's m1 method.
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAbstractContentStream:close(),1550,1558,"/**
* Ends text mode and writes output.
* Logs a warning if endText() wasn't called.
* @throws IOException on I/O error
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,importXMPMetadata,org.apache.pdfbox.pdmodel.common.PDMetadata:importXMPMetadata(byte[]),96,103,"/**
* Masks data using OutputStream.
* @param xmp input byte array to be masked
*/","* Import an XMP stream into the PDF document.
     *
     * @param xmp The XMP data.
     *
     * @throws IOException If there is an error generating the XML document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,appendRawCommands,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:appendRawCommands(java.io.OutputStream,java.lang.String)",376,380,"/**
 * Masks and writes commands to output stream.
 * @param os OutputStream to write to
 * @param commands Commands string to be masked
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int,int)",236,253,"/**
 * Processes and writes a code to the output stream.
 * @param code integer representation of the code to process
 * @param codeLength length of the code in bits
 * @throws IOException if an I/O error occurs during writing
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,fill,org.apache.pdfbox.filter.CCITTFaxEncoderStream:fill(),259,264,"/**
* Writes any remaining bits in the buffer and finalizes output.
* @throws IOException if an I/O error occurs during writing
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,splitAtPage,org.apache.pdfbox.multipdf.Splitter:splitAtPage(int),732,735,"/**
* Determines if a page number is at a mask boundary.
* @param pageNumber current page number
* @return true if page is at a mask boundary, false otherwise
*/","* Check if it is necessary to create a new document.
     * By default a split occurs at every page.  If you wanted to split
     * based on some complex logic then you could override this method.  For example.
     * <code>
     * protected void splitAtPage()
     * {
     *     // will split at pages with prime numbers only
     *     return isPrime(pageNumber);
     * }
     * </code>
     * @param pageNumber the 0-based page number to be checked as splitting page
     * 
     * @return true If a new document should be created.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransform,org.apache.pdfbox.filter.DCTFilter:getAdobeTransform(javax.imageio.metadata.IIOMetadata),182,201,"/**
* Extracts transform value from JPEG metadata.
* @param metadata image metadata object
* @return transform value or 0 if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransformByBruteForce,org.apache.pdfbox.filter.DCTFilter:getAdobeTransformByBruteForce(javax.imageio.stream.ImageInputStream),205,245,"/**
 * Reads and processes image data to extract specific metadata.
 * @param iis input stream containing image data
 * @return extracted metadata value or 0 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromYCCKtoCMYK,org.apache.pdfbox.filter.DCTFilter:fromYCCKtoCMYK(java.awt.image.Raster),250,286,"/**
* Converts a raster from CMYK to RGB and masks it.
* @param raster input raster in CMYK format
* @return WritableRaster with converted RGB values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromBGRtoRGB,org.apache.pdfbox.filter.DCTFilter:fromBGRtoRGB(java.awt.image.Raster),289,310,"/**
* Applies a mask to the input raster by swapping red and blue channels.
* @param raster input image raster
* @return modified WritableRaster with swapped color channels
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getNumChannels,org.apache.pdfbox.filter.DCTFilter:getNumChannels(javax.imageio.ImageReader),313,335,"/**
* Reads image metadata to get number of channels.
* @param reader ImageReader instance
* @return Number of channels as a String, or empty if unavailable
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,encode,"org.apache.pdfbox.filter.DCTFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",343,348,"/**
 * Throws exception as DCTFilter encoding is unsupported.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSourceRegion,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSourceRegion(java.awt.Rectangle),228,232,"/**
 * Throws an exception as the instance cannot be modified.
 * @param sourceRegion region to mask (not used)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingX(int),234,238,"/**
 * Throws an exception as this instance cannot be modified.
 * @param ssX parameter that is not used
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingY(int),240,244,"/**
 * Throws an exception indicating modification is unsupported.
 * @param ssY input parameter (not used)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetX(int),246,250,"/**
 * Throws an exception as modification is not supported.
 * @param ssOffsetX offset value (unused)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetY(int),252,256,"/**
 * Throws an exception as modification is unsupported.
 * @param ssOffsetY offset value (unused)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,encode,"org.apache.pdfbox.filter.JBIG2Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",148,153,"/**
 * Throws exception as JBIG2 encoding is unsupported.
 * @param input InputStream to read data from
 * @param encoded OutputStream to write encoded data to
 * @param parameters COSDictionary containing encoding parameters
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,encode,"org.apache.pdfbox.filter.JPXFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",208,213,"/**
* Throws exception as JPX encoding is not supported.
* @param input source InputStream
* @param encoded destination OutputStream
* @param parameters encoding parameters
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(int),361,365,"/**
 * Throws UnsupportedOperationException as the operation is not supported.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,putAll,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:putAll(java.util.Map),127,131,"/**
 * Throws UnsupportedOperationException as method is not implemented.
 * @param t map to be processed (not used)
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightY(float),39,43,"/**
* Throws an exception as the class is immutable.
* @param value float value to be masked (unused)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightX(float),48,52,"/**
 * Throws an exception as the class is immutable.
 * @param value unused parameter
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftY(float),57,61,"/**
 * Throws an exception as the class is immutable.
 * @param value the float value to be masked (not used)
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftX(float),66,70,"/**
* Throws UnsupportedOperationException as the class is immutable.
* @param value float value to be masked (not used)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDFont:getPositionVector(int),236,240,"/**
 * Throws exception as horizontal fonts do not support position vectors.
 * @param code font identifier
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDType0Font:getStandard14Width(int),517,521,"/**
 * Throws an exception as the operation is unsupported.
 * @param code identifier for the operation
 * @throws UnsupportedOperationException always thrown
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncodingFromFont(),115,120,"/**
 * Throws an exception as mask function is unsupported.
 * @throws IOException if operation not supported
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType3Font:getPath(java.lang.String),128,133,"/**
 * Throws an exception as mask function is unsupported.
 * @param name font name
 * @throws IOException always thrown as operation is not supported
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBoxFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBoxFont(),142,147,"/**
 * Throws an exception as mask functionality is unsupported.
 * @return nothing (method signature requires FontBoxFont)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType3Font:encode(int),242,246,"/**
 * Throws UnsupportedOperationException for Type3.
 * @param unicode Unicode character to process
 * @throws IOException if an I/O error occurs (not applicable here)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:getCOSObject(),40,44,"/**
* Throws exception as built-in encodings cannot be serialized.
* @return nothing (throws exception)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getInitialColor(),70,74,"/**
 * Throws exception as JPX color spaces do not support drawing.
 * @throws UnsupportedOperationException always thrown
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:toRGB(float[]),76,80,"/**
 * Throws an exception as JPX color spaces do not support drawing.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getCOSObject(),94,98,"/**
 * Throws an exception as JPX color spaces do not support COS objects.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getSignatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getSignatureText(),555,558,"/**
 * Placeholder method that throws an exception indicating it's not implemented.
 */","* returns visible signature text
     * @return the visible signature's text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureText(java.lang.String),565,568,"/**
 * Placeholder for mask creation.
 * @param signatureText text to be masked
 * @return PDVisibleSignDesigner object (not yet implemented)
 */","* 
     * @param signatureText - adds the text on visible signature
     * @return the signature design",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(java.lang.String),118,123,"/**
* Throws exception as mask operations are unsupported.
* @param value input string value
*/","* <b>This will throw an UnsupportedOperationException if used as the signature fields
     * value can't be set using a String</b>
     * 
     * @param value the plain text value.
     * 
     * @throws UnsupportedOperationException in all cases!",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,clipRegion,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",141,155,"/**
* Creates a mask rectangle for an image.
* @param pdImage the source PDImage
* @param region optional specified region; if null, uses full image bounds
* @return adjusted Rectangle for masking
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getCompressionLevel,org.apache.pdfbox.filter.Filter:getCompressionLevel(),204,216,"/**
* Retrieves and validates the deflate level for compression.
* @return Compression level between -1 and Deflater.BEST_COMPRESSION
*/",* @return the ZIP compression level configured for PDFBox,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,contains,org.apache.pdfbox.pdmodel.common.COSArrayList:contains(java.lang.Object),150,154,"/**
 * Delegates call to actual.m1.
 * @param o the object to process
 * @return result of actual.m1 invocation
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,encode,"org.apache.pdfbox.filter.FlateFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",50,62,"/**
 * Compresses data from input stream to output stream using DEFLATE algorithm.
 * @param input source InputStream containing data to compress
 * @param encoded OutputStream where compressed data will be written
 * @param parameters COSDictionary with compression settings (unused in this method)
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<init>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<init>(java.io.InputStream),54,60,"/**
 * Initializes a new FlateFilterDecoderStream.
 * @param inputStream source input stream
 * @throws IOException if an I/O error occurs while reading the zlib header
 */","* Constructor.
     *
     * @param inputStream The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,fetch,org.apache.pdfbox.filter.FlateFilterDecoderStream:fetch(),62,116,"/**
* Processes compressed data and updates decoding state.
* @return true if processing is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,close,org.apache.pdfbox.filter.FlateFilterDecoderStream:close(),182,187,"/**
 * Calls m1 on inflater and then invokes superclass's m2.
 * @throws IOException if an I/O error occurs
 */","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,logLevigoDonated,org.apache.pdfbox.filter.JBIG2Filter:logLevigoDonated(),52,61,"/**
* Logs donation and update message for Levigo JBIG2 plugin once.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<init>(),61,65,"/**
* Initializes PDF structure and logs creation.
*/","* Constructor, creates PDF template structure.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,setImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:setImage(java.awt.image.BufferedImage),455,462,"/**
* Sets the image and updates dimensions.
* @param image BufferedImage to process
*/","* Set image and its height and width.
     *
     * @param image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRawImage(java.awt.image.WritableRaster),245,249,"/**
 * Converts WritableRaster to BufferedImage using specified color space.
 * @param raster input image data
 * @return BufferedImage representation of the raster
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)",146,151,"/**
 * Draws an image at specified coordinates.
 * @param img the image to be drawn
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @param observer the ImageObserver object
 * @return true if the image is completely loaded and drawn, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,dispose,org.apache.pdfbox.rendering.GroupGraphics:dispose(),125,130,"/**
 * Delegates method call to both groupG2D and alphaG2D.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,checkIndexBounds,"org.apache.pdfbox.filter.LZWFilter:checkIndexBounds(java.util.List,long,javax.imageio.stream.MemoryCacheImageInputStream)",130,144,"/**
* Validates index for code table access.
* @param codeTable list of byte arrays
* @param index position to check
* @param in input stream for error context
* @throws IOException if index is out of bounds
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,findPatternCode,"org.apache.pdfbox.filter.LZWFilter:findPatternCode(java.util.List,byte[])",229,247,"/**
 * Searches for a pattern in the code table.
 * @param codeTable list of byte arrays representing codes
 * @param pattern byte array to search for
 * @return index of matching code or -1 if not found
 */","* Find a matching pattern in the code table.
     *
     * @param codeTable The LZW code table.
     * @param pattern The pattern to be searched for.
     * @return The index of the matching pattern or -1 if nothing is found.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeFile(byte[]),260,264,"/**
 * Checks if the byte array matches TTF header or ASCII font string.
 * @param header byte array to check
 * @return true if matches, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:<init>(java.io.OutputStream,int,int,int,int)",278,289,"/**
* Initializes a PredictorOutputStream with specified parameters.
* @param out underlying output stream
* @param predictor prediction algorithm type
* @param colors number of color channels
* @param bitsPerComponent bits per color component
* @param columns number of columns in the image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodePredictorRow,"org.apache.pdfbox.filter.Predictor:decodePredictorRow(int,int,int,int,byte[],byte[])",49,202,"/**
 * Applies PNG filter based on predictor type.
 * @param predictor filter type identifier
 * @param colors number of color channels
 * @param bitsPerComponent bits per color component
 * @param columns number of image columns
 * @param actline current row data to be filtered
 * @param lastline previous row data for filtering
 */","* Decodes a single line of data in-place.
     * @param predictor Predictor value for the current line
     * @param colors Number of color components, from decode parameters.
     * @param bitsPerComponent Number of bits per components, from decode parameters.
     * @param columns Number samples in a row, from decode parameters.
     * @param actline Current (active) line to decode. Data will be decoded in-place,
     *                i.e. - the contents of this buffer will be modified.
     * @param lastline The previous decoded line. When decoding the first line, this
     *                 parameter should be an empty byte array of the same length as
     *                 <code>actline</code>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterPaeth,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterPaeth(int,int,int,int)",680,702,"/**
 * Computes byte result based on input values.
 * @param x input value
 * @param a first reference value
 * @param b second reference value
 * @param c third reference value
 * @return computed byte value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,estCompressSum,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:estCompressSum(byte[]),704,713,"/**
* Calculates the sum of Math.m1 applied to each byte in the array.
* @param dataRawRowSub input byte array
* @return long sum of transformed bytes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,equals,org.apache.pdfbox.pdmodel.PDPage:equals(java.lang.Object),805,809,"/**
* Checks if this object is equal to another PDPage based on m1 value.
* @param other object to compare with
* @return true if equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree$SearchContext:<init>(org.apache.pdfbox.pdmodel.PDPage),422,425,"/**
 * Initializes search context with a PDF page.
 * @param page PDPage object representing the PDF page to search
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,subsetDesignatedFonts,org.apache.pdfbox.pdmodel.PDDocument:subsetDesignatedFonts(),1062,1070,"/**
* Processes fonts to subset them.
* @throws IOException if an I/O error occurs during processing
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:reset(),77,80,"/**
 * Calls m1 method on xrefTable.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,resetEngine,org.apache.pdfbox.text.PDFTextStripper:resetEngine(),223,229,"/**
* Resets page number and document, then processes article and character mappings.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,"org.apache.pdfbox.multipdf.Overlay:getLayoutPage(int,int)",466,499,"/**
* Determines the LayoutPage for a given page number.
* @param pageNumber current page number
* @param numberOfPages total number of pages
* @return LayoutPage object based on overlay rules or null if none apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSObjectKey),113,116,"/**
 * Checks if a COSObjectKey is present in the pool.
 * @param key the COSObjectKey to check
 * @return true if key is in the pool, false otherwise
 */","* Returns true, if a {@link COSBase} is registered for the given {@link COSObjectKey}.
     *
     * @param key The {@link COSObjectKey} that shall be checked for a registered {@link COSBase}.
     * @return True, if a {@link COSBase} is registered for the given {@link COSObjectKey}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,registerHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",66,77,"/**
* Registers a security handler with a protection policy.
* @param name unique identifier for the security handler
* @param securityHandler class implementing SecurityHandler interface
* @param protectionPolicy class implementing ProtectionPolicy interface
* @throws IllegalStateException if the handler name is already registered
*/","* Registers a security handler.
     *
     * If the security handler was already registered an exception is thrown.
     * If another handler was previously registered for the same filter name or
     * for the same policy name, an exception is thrown
     *
     * @param name the name of the filter
     * @param securityHandler security handler class to register
     * @param protectionPolicy protection policy class to register",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(java.lang.String),143,146,"/**
* Checks if the given name is masked.
* @param name the name to check
* @return true if name is masked, false otherwise
*/","* Determines if the encoding has a mapping for the given name value.
     * 
     * @param name PostScript glyph name
     * @return true if the encoding has a mapping for the given name value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(int),155,158,"/**
 * Checks if a code is masked.
 * @param code the code to check
 * @return true if code is masked, false otherwise
 */","* Determines if the encoding has a mapping for the given code value.
     * 
     * @param code character code
     * @return if the encoding has a mapping for the given code value
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:<init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",132,136,"/**
* Initializes a new tokenizer with input text and syntax handler.
* @param text the input sequence to tokenize
* @param syntaxHandler the handler for syntax events
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,escapeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:escapeXML(java.lang.String),787,822,"/**
* Escapes XML special characters in input string.
* @param input original string to be processed
* @return escaped string safe for XML use
*/","* Escape special characters.
     *
     * @param input the string to be escaped.
     *
     * @return the resulting string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),219,229,"/**
* Sets the bounding box for a PDF element.
* @param bbox rectangle defining the bounds or null to clear it
*/","* This will set the BBox (bounding box) for this form.
     * @param bbox The new BBox for this form.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,float2String,org.apache.pdfbox.multipdf.Overlay:float2String(float),585,600,"/**
* Masks a float value to remove trailing zeros after the decimal point.
* @param floatValue the float number to be masked
* @return string representation of the masked float value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeHex,org.apache.pdfbox.util.Hex:decodeHex(java.lang.String),219,245,"/**
 * Converts a hexadecimal string to a byte array.
 * @param s input hexadecimal string
 * @return byte array representation of the input string
 */","* Decodes a hex String into a byte array.
     *
     * @param s A String with ASCII hex.
     * @return decoded byte array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,close,org.apache.pdfbox.pdmodel.PDDocument:close(),1266,1305,"/**
 * Closes resources and throws an exception if any fail.
 * @throws IOException if closing fails
 */","* This will close the underlying COSDocument object.
     * 
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,close,org.apache.pdfbox.pdmodel.fdf.FDFDocument:close(),262,284,"/**
* Masks document and FDF source if not already masked.
* @throws IOException if an I/O error occurs during masking
*/","* This will close the underlying COSDocument object.
     *
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getOnValues(),91,95,"/**
 * Returns an empty set of strings.
 * @return Empty Set<String>
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,hasNext,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:hasNext(),38,51,"/**
* Checks if the current item is a valid mask.
* @return true if current item is not starting and has no matching sibling, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getCOSObject,org.apache.pdfbox.pdmodel.common.function.PDFunction:getCOSObject(),84,95,"/**
* Returns the COSDictionary associated with the function.
* @return COSDictionary object, either from functionStream or directly
*/","* Returns the stream.
     * @return The stream for this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",112,118,"/**
* Initializes a PDXObject with a given stream and subtype.
* @param stream the PDStream associated with this object
* @param subtype the COSName representing the subtype of the XObject
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject:getCOSObject(),136,140,"/**
 * Returns the underlying COSStream.
 * @return COSStream object
 */","* Returns the stream.
     * {@inheritDoc}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getMetadata(),455,458,"/**
 * Retrieves metadata stream from document.
 * @return COSStream containing metadata or null if not found
 */","* Returns the metadata stream for this object, or null if there is no metadata stream.
     * @return the metadata stream, or null if there is none",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setMetadata(org.apache.pdfbox.cos.COSStream),533,536,"/**
 * Sets metadata in the stream.
 * @param metadata COSStream containing metadata to be set
 */","* Sets the metadata stream that is associated with this color space.
     * @param metadata the new metadata stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureAnnotation,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",530,540,"/**
* Checks if any annotation matches the given widget.
* @param annotations list of PDAnnotation objects
* @param widget PDAnnotationWidget object to match against
* @return true if a matching annotation is found, false otherwise
*/","* Check if the widget already exists in the annotation list.
     *
     * @param annotations the list of PDAnnotation fields.
     * @param widget the annotation widget.
     * @return true if the widget already existed in the annotation list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,equals,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:equals(java.lang.Object),201,216,"/**
* Checks equality with another annotation.
* @param o object to compare
* @return true if equal, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,keySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:keySet(),146,150,"/**
 * Returns the set of keys from the underlying collection.
 * @return Set of keys
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",509,521,"/**
* Checks if a signature field matches any in the iterator.
* @param fieldIterator iterator over PDField objects
* @param signatureField PDSignatureField to match
* @return true if a match is found, false otherwise
*/","* Check if the field already exists in the field list.
     *
     * @param fieldIterator iterator on all fields.
     * @param signatureField the signature field.
     * @return true if the field already existed in the field list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,values,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:values(),155,159,"/**
 * Returns all values from the underlying collection.
 * @return Collection of values
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,fillPagesAnnotationMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",838,852,"/**
* Adds a widget to the annotations map for a given page.
* @param pagesAnnotationsMap mapping of pages to their annotations
* @param page PDF page where the widget is located
* @param widget annotation widget to be added
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<init>,org.apache.pdfbox.pdfparser.BaseParser:<init>(org.apache.pdfbox.io.RandomAccessRead),173,176,"/**
 * Initializes a new instance of BaseParser with a PDF source.
 * @param pdfSource the RandomAccessRead object representing the PDF file
 */",* Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isHexDigit,org.apache.pdfbox.pdfparser.BaseParser:isHexDigit(char),178,183,"/**
* Checks if character is a valid mask or hexadecimal digit.
* @param ch the character to check
* @return true if valid, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isDigit,org.apache.pdfbox.pdfparser.BaseParser:isDigit(),1298,1301,"/**
 * Calls m2 with result from source.m1().
 * @throws IOException if an I/O error occurs
 * @return true if successful, false otherwise
 */","* This will tell if the next byte is a digit or not.
     *
     * @return true if the next byte in the stream is a digit.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,compareCOSObjects,"org.apache.pdfbox.pdfparser.BruteForceParser:compareCOSObjects(org.apache.pdfbox.cos.COSObject,java.lang.Long,org.apache.pdfbox.cos.COSObject)",499,517,"/**
 * Compares two COSObjects and returns the one with the higher offset.
 * @param newObject the object to compare against
 * @param newOffset the offset of the new object
 * @param currentObject the current object in comparison
 * @return the object with the higher offset
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectNumbers(),174,191,"/**
* Maps object numbers to offsets.
* @return Map of object numbers to their respective offsets
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setXRef,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",175,190,"/**
* Adds an XRef entry for a given object key and offset.
* @param objKey the COSObjectKey to add
* @param offset the byte offset of the object in the file
*/","* Populate XRef HashMap of current XRef object.
     * Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file.
     * @param objKey The objkey, with id and gen numbers
     * @param offset The byte offset in this file",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,add,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:add(int,java.lang.String)",106,110,"/**
 * Maps code to name and vice versa.
 * @param code unique identifier
 * @param name associated with the code
 */","* This will add a character encoding. An already existing mapping is preserved when creating
     * the reverse mapping. Should only be used during construction of the class.
     * 
     * @see #overwrite(int, String)
     * 
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isSpace,org.apache.pdfbox.pdfparser.BaseParser:isSpace(),1275,1278,"/**
 * Calls m2 with source's m1 result.
 * @throws IOException if an I/O error occurs
 */","* This will tell if the next byte is a space or not.
     *
     * @return true if the next byte in the stream is a space character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(int),454,470,"/**
 * Masks a line by checking and processing conditions.
 * @param linebreak the line to be processed
 * @return true if masking is successful, false otherwise
 */","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @param linebreak the first character to be checked.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,checkForEndOfString,org.apache.pdfbox.pdfparser.BaseParser:checkForEndOfString(int),485,519,"/**
* Processes input parameter and checks byte sequence.
* @param bracesParameter input integer parameter
* @return processed integer or original if conditions not met
*/","* This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this
     * format: /Title ( (5) /Creator which was patched in 1 place.
     *
     * However it missed the case where the number of opening and closing parenthesis isn't balanced
     *
     * The second bug was in this format /Title (c:\) /Producer
     *
     * @param bracesParameter the number of braces currently open.
     *
     * @return the corrected value of the brace counter
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isEOL,org.apache.pdfbox.pdfparser.BaseParser:isEOL(int),1207,1210,"/**
 * Checks if character is masked by either function.
 * @param c character to check
 * @return true if masked, false otherwise
 */","* This will tell if the next byte to be read is an end of line byte.
     *
     * @param c The character to check against end of line
     * @return true if the next byte is 0x0A or 0x0D.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readStringNumber,org.apache.pdfbox.pdfparser.BaseParser:readStringNumber(),1443,1461,"/**
 * Reads and masks characters from the source until a condition fails.
 * @throws IOException if number exceeds MAX_LENGTH_LONG or read error occurs
 * @return StringBuilder containing masked characters
 */","* This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid
     * delimiters are any non digit values.
     *
     * @return the token to parse as integer or long by the calling method.
     * @throws IOException throws by the {@link #source} methods.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:toString(),94,107,"/**
* Generates a string representation of cubic Bezier curve control points.
* @return formatted string with control points
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,decodeBuffer,org.apache.pdfbox.pdfparser.BaseParser:decodeBuffer(java.io.ByteArrayOutputStream),926,939,"/**
* Masks a buffer's content.
* @param buffer ByteArrayOutputStream containing data to mask
* @return masked string representation of the buffer
*/","* Tries to decode the buffer content to an UTF-8 String. If that fails, tries the alternative Encoding.
     * 
     * @param buffer the {@link ByteArrayOutputStream} containing the bytes to decode
     * @return the decoded String",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedChar,org.apache.pdfbox.pdfparser.BaseParser:readExpectedChar(char),1098,1106,"/**
 * Reads a character and checks it against the expected value.
 * @param ec expected character to match
 * @throws IOException if characters do not match or an I/O error occurs
 */","* Read one char and throw an exception if it is not the expected value.
     *
     * @param ec the char value that is expected.
     * @throws IOException if the read char is not the expected value or if an
     * I/O error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isWhitespace,org.apache.pdfbox.pdfparser.BaseParser:isWhitespace(),1241,1244,"/**
 * Calls m2 with result from source.m1().
 * @throws IOException if an I/O error occurs
 */","* This will tell if the next byte is whitespace or not.
     *
     * @return true if the next byte in the stream is a whitespace character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseStartXref,org.apache.pdfbox.pdfparser.XrefParser:parseStartXref(),557,568,"/**
 * Parses and retrieves the start XRef value from a PDF file.
 * @return the start XRef position or -1 if not found
 * @throws IOException if an I/O error occurs during parsing
 */","* This will parse the startxref section from the stream. The startxref value is ignored.
     *
     * @return the startxref value or -1 on parsing error
     * @throws IOException If an IO error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchNearestValue,"org.apache.pdfbox.pdfparser.BruteForceParser:searchNearestValue(java.util.List,long)",271,294,"/**
 * Finds the value in the list closest to the offset.
 * @param values List of Long values to search through
 * @param offset The target offset value
 * @return The value from the list closest to the offset, or -1 if not found
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForLastEOFMarker,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForLastEOFMarker(),524,560,"/**
 * Finds the last EOF marker in the source.
 * @return The offset of the last EOF marker or Long.MAX_VALUE if not found
 * @throws IOException if an I/O error occurs during processing
 */","* Brute force search for the last EOF marker.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefTables,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefTables(),641,660,"/**
* Searches for XREF table offsets and adds them to a list.
* @return List of Long containing offsets or empty if none found
*/","* Brute force search for all xref entries (tables).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getNumberOfColorComponents(),115,124,"/**
* Determines number of color components.
* @return int value representing the number of color components
* @throws IOException if an I/O error occurs during processing
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefStreams(),667,735,"/**
* Searches for XRef stream offsets and fixes references.
* @return List of fixed offsets or empty list if none found
*/","* Brute force search for all /XRef entries (streams).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,getXrefTable,org.apache.pdfbox.pdfparser.XrefParser:getXrefTable(),75,78,"/**
* Retrieves cross-reference trailer information.
* @return Map of COSObjectKey to Long representing object numbers
*/","* Returns the resulting cross reference table.
     * 
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getStartxrefOffset,org.apache.pdfbox.pdfparser.COSParser:getStartxrefOffset(),305,360,"/**
 * Reads and processes the file trailer to find the xref offset.
 * @return xref offset within the file
 * @throws IOException if an I/O error occurs or markers are missing
 */","* Looks for and parses startxref. We first look for last '%%EOF' marker (within last
     * {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find
     * <code>startxref</code>.
     * 
     * @return the offset of StartXref
     * @throws IOException If something went wrong.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,readUntilEndStream,org.apache.pdfbox.pdfparser.COSParser:readUntilEndStream(org.apache.pdfbox.pdfparser.EndstreamFilterStream),793,885,"/**
 * Processes input stream to detect endstream or endobj markers.
 * @param out output stream for processed content
 * @return length of processed content
 * @throws IOException if an I/O error occurs
 */","* This method will read through the current stream object until
     * we find the keyword ""endstream"" meaning we're at the end of this
     * object. Some pdf files, however, forget to write some endstream tags
     * and just close off objects with an ""endobj"" tag so we have to handle
     * this case as well.
     * 
     * This method is optimized using buffered IO and reduced number of
     * byte compare operations.
     * 
     * @param out  stream we write out to.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,validateStreamLength,org.apache.pdfbox.pdfparser.COSParser:validateStreamLength(long),887,921,"/**
* Validates and processes stream based on given length.
* @param streamLength length of the stream to process
* @return true if processing is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseHeader,"org.apache.pdfbox.pdfparser.COSParser:parseHeader(java.lang.String,java.lang.String)",1074,1155,"/**
* Parses and validates a header for a specific marker, setting default version if needed.
* @param headerMarker the marker to search for in the header
* @param defaultVersion the default version to use if none found
* @return true if parsing is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,<init>,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:<init>(),49,52,"/**
 * Initializes a new instance of ToUnicodeWriter with mode set to 0.
 */",* Creates a new ToUnicode CMap writer.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectOffsets,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectOffsets(),193,212,"/**
* Populates a map of object offsets.
* @return Map with integer keys and Long values representing object positions
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,setLabelItem,"org.apache.pdfbox.pdmodel.common.PDPageLabels:setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",168,175,"/**
* Sets a label for a range of pages starting from startPage.
* @param startPage the starting page index (must be >= 0)
* @param item the page label range to apply
*/","* Sets the page label range beginning at the specified start page.
     * 
     * @param startPage
     *            the 0-based index of the page representing the start of the
     *            page label range.
     * @param item
     *            the page label item to set.
     * @throws IllegalArgumentException if the startPage parameter is &lt; 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,add,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:add(int,java.lang.String)",70,83,"/**
* Masks text with CID.
* @param cid character identifier, must be between 0 and 65535
* @param text string to mask, cannot be null or empty
*/","* Adds the given CID to Unicode mapping.
     *
     * @param cid CID
     * @param text Unicode text, up to 512 bytes.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNoFollowingBinData,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNoFollowingBinData(),331,403,"/**
* Checks for binary data and logs if non-binary content found.
* @return true if no binary data detected, false otherwise
*/","* Looks up an amount of bytes if they contain only ASCII characters (no
     * control sequences etc.), and that these ASCII characters begin with a
     * sequence of 1-3 non-blank characters between blanks
     *
     * @return <code>true</code> if next bytes are probably printable ASCII
     * characters starting with a PDF operator, otherwise <code>false</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNextSpaceOrReturn,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNextSpaceOrReturn(),457,460,"/**
 * Checks source condition.
 * @throws IOException if I/O error occurs
 * @return true if condition met, false otherwise
 */","* Checks if the next char is a space or a return.
     * 
     * @return true if the next char is a space or a return
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:addEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),140,148,"/**
* Masks an XReferenceEntry if already processed.
* @param entry the XReferenceEntry to process
*/","* Add an new entry to the XRef stream.
     * 
     * @param entry new entry to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getWEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getWEntry(),155,175,"/**
* Computes mask values from stream data.
* @return int array containing computed mask values
*/","* determines the minimal length required for all the lengths.
     * 
     * @return the length information",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:<init>(long),46,50,"/**
* Initializes object pool with highest XRef object number.
* @param highestXRefObjectNumber the highest XRef object number to set
*/","* Creates a map of {@link COSBase} instances to {@link COSObjectKey}s, allowing bidirectional lookups. This
     * constructor can be used for pre - initialized structures to start the assignment of new object numbers starting
     * from the hereby given offset.
     *
     * @param highestXRefObjectNumber The highest known object number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getIndexEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getIndexEntry(),187,219,"/**
* Masks object numbers into ranges.
* @return List of Long where each pair represents a range start and length
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,next,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:next(),224,238,"/**
* Returns the next number in a sequence, advancing to the next range if necessary.
* @return next number in the sequence
* @throws NoSuchElementException if no more numbers are available
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getFirstTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getFirstTrailer(),110,119,"/**
* Retrieves COSDictionary from XRef map.
* @return COSDictionary object or null if conditions not met
*/","* Returns the first trailer if at least one exists.
     * 
     * @return the first trailer or null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getLastTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getLastTrailer(),126,135,"/**
* Retrieves COSDictionary from XREF map.
* @return COSDictionary or null if conditions are not met
*/","* Returns the last trailer if at least one exists.
     * 
     * @return the last trailer ir null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getContainedObjectNumbers,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getContainedObjectNumbers(int),339,356,"/**
* Retrieves object numbers referencing a given object.
* @param objstmObjNr the object number to check references for
* @return set of object numbers that reference the given object, or null if trailer is unresolved
*/","Returns object numbers which are referenced as contained
     *  in object stream with specified object number.
     *  
     *  This will scan resolved xref table for all entries having negated
     *  stream object number as value.
     *
     *  @param objstmObjNr  object number of object stream for which contained object numbers
     *                      should be returned
     *                       
     *  @return set of object numbers referenced for given object stream
     *          or <code>null</code> if {@link #setStartxref(long)} was not
     *          called before so that no resolved xref table exists",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,getFirstColumnValue,org.apache.pdfbox.pdfparser.xref.AbstractXReference:getFirstColumnValue(),59,63,"/**
 * Returns a masked value.
 * @return long representing the masked result
 */","* Returns the value for the first column of the crossreference stream entry. (The numeric representation of this
     * entry's (The numeric representation of this entry's {@link XReferenceType}.)
     *
     * @return The value for the first column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.FreeXReference:getThirdColumnValue(),77,81,"/**
 * Returns a masked value.
 * @return long representing the masked result from nested methods
 */","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set next free {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,toString,org.apache.pdfbox.pdfparser.xref.FreeXReference:toString(),88,93,"/**
* Generates a string representation of FreeReference.
* @return formatted string with key, nextFreeObject, and type information
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getSecondColumnValue(),111,115,"/**
 * Returns the result of calling m1().
 * @return The value returned by m1()
 */","* Returns the value for the second column of the crossreference stream entry. (This is byte offset of the
     * {@link COSObject} in the PDF file - for entries of this type.)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getThirdColumnValue(),123,127,"/**
 * Returns the result of calling m2 on the object returned by m1.
 * @return The result of m1().m2()
 */","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,toString,org.apache.pdfbox.pdfparser.xref.NormalXReference:toString(),134,139,"/**
* Returns a string representation of the object.
* @return formatted string with object details
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getSecondColumnValue(),104,108,"/**
 * Returns the masked value from nested methods.
 * @return long value obtained by calling m2 on the result of m1()
 */","* Returns the value for the second column of the crossreference stream entry. (This is object number from the
     * {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries
     * of this type..)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getThirdColumnValue(),116,120,"/**
 * Returns the mask value from function m1.
 * @return long value representing the mask
 */","* Returns the value for the third column of the crossreference stream entry. (This is index of the
     * {@link COSObject} in the containing object stream - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,toString,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:toString(),127,132,"/**
 * Generates a string representation of the ObjectStreamEntry.
 * @return formatted string with key, type, index, and parent information
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(byte[],int,int)",111,117,"/**
 * Writes bytes to output stream.
 * @param b byte array containing data to write
 * @param off starting offset in the byte array
 * @param len number of bytes to write
 * @throws IOException if an I/O error occurs
 */","* This will write some byte to the stream.
     *
     * @param b The source byte array.
     * @param off The offset into the array to start writing.
     * @param len The number of bytes to write.
     *
     * @throws IOException If the underlying stream throws an exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(int),126,132,"/**
 * Calls m1 with false and processes m2 on output.
 * @param b integer parameter for processing
 * @throws IOException if an I/O error occurs
 */","* This will write a single byte to the stream.
     *
     * @param b The byte to write to the stream.
     *
     * @throws IOException If there is an error writing to the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,writeEOL,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:writeEOL(),149,156,"/**
* Masks data based on condition.
* Throws IOException if an I/O error occurs.
*/","* This will write an EOL to the stream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isCompress,org.apache.pdfbox.pdfwriter.COSWriter:isCompress(),314,317,"/**
 * Checks if compressParameters is non-null and calls its m1 method.
 * @return true if both conditions are met, false otherwise
 */","* Returns true, if the resulting document shall be compressed.
     *
     * @return True, if the resulting document shall be compressed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addXRefEntry,org.apache.pdfbox.pdfwriter.COSWriter:addXRefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),345,348,"/**
 * Masks an XReferenceEntry.
 * @param entry the entry to be masked
 */","* add an entry in the x ref table for later dump.
     *
     * @param entry The new entry to add.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1570,1581,"/**
* Sets the stroking color space.
* @param colorSpace the new color space to set
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1583,1594,"/**
* Sets the non-stroking color space.
* @param colorSpace the new color space to set
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,hasNext,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:hasNext(),224,228,"/**
 * Checks if queue operation m1 is not successful.
 * @return true if m1 fails, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,hasNext,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:hasNext(),85,89,"/**
 * Checks if the queue is not in mask mode.
 * @return true if not in mask mode, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFMarkedContentExtractor:endMarkedContentSequence(),125,132,"/**
* Marks contents if not already marked.
* @param none
* @return void
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectReference,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectReference(java.io.OutputStream,org.apache.pdfbox.cos.COSObjectKey)",367,378,"/**
 * Writes indirect object reference to OutputStream.
 * @param output stream to write to
 * @param indirectReference COSObjectKey of the object
 */","* Write the given {@link COSObjectKey} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param indirectReference The content, that shall be written.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefEntry,org.apache.pdfbox.pdfwriter.COSWriter:writeXrefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),995,1005,"/**
* Writes XReferenceEntry details to output.
* @param entry XReferenceEntry object to process
* @throws IOException if writing fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getXRefRanges,org.apache.pdfbox.pdfwriter.COSWriter:getXRefRanges(java.util.List),1025,1058,"/**
* Masks reference entries into ranges.
* @param xRefEntriesList list of XReferenceEntry objects
* @return array of Long representing masked ranges
*/","* check the xref entries and write out the ranges.  The format of the
     * returned array is exactly the same as the pdf specification.  See section
     * 7.5.4 of ISO32000-1:2008, example 1 (page 40) for reference.
     * <p>
     * example: 0 1 2 5 6 7 8 10
     * <p>
     * will create a array with follow ranges
     * <p>
     * 0 3 5 4 10 1
     * <p>
     * this mean that the element 0 is followed by two other related numbers 
     * that represent a cluster of the size 3. 5 is follow by three other
     * related numbers and create a cluster of size 4. etc.
     * 
     * @param xRefEntriesList list with the xRef entries that was written
     * @return a integer array with the ranges",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getMD5,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getMD5(),35,46,"/**
* Creates and returns an MD5 MessageDigest instance.
* @return MessageDigest object for MD5 hashing
*/",* @return MD5 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA1,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA1(),51,62,"/**
* Initializes SHA-1 MessageDigest instance.
* @return MessageDigest object for SHA-1 algorithm
* @throws RuntimeException if SHA-1 algorithm is unavailable
*/",* @return SHA-1 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA256,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA256(),67,78,"/**
* Creates a SHA-256 MessageDigest instance.
* @return MessageDigest object for SHA-256 hashing
* @throws RuntimeException if SHA-256 algorithm is not available
*/",* @return SHA-256 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.fdf.FDFDocument),1602,1613,"/**
 * Masks FDF document and processes objects for encryption.
 * @param doc FDFDocument to be processed
 */","* This will write the fdf document.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getHighestXRefObjectNumber,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getHighestXRefObjectNumber(),289,292,"/**
 * Delegates call to retrieve an object from the pool.
 * @return the retrieved object's identifier
 */","* Returns the highest object number, that is registered in this compression pool.
     *
     * @return The highest object number, that is registered in this compression pool.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,getPreparedKeys,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:getPreparedKeys(),97,100,"/**
 * Returns a list of prepared COSObject keys.
 * @return List of COSObjectKey objects
 */","* Returns all {@link COSObjectKey}s, that shall be added to the object stream, when
     * {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @return All {@link COSObjectKey}s, that shall be added to the object stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:getFont(org.apache.pdfbox.cos.COSObject),107,112,"/**
* Retrieves a PDFont from cache by COSObject.
* @param indirect COSObject representing the font
* @return PDFont object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:getColorSpace(org.apache.pdfbox.cos.COSObject),147,152,"/**
* Retrieves a cached color space for the given COS object.
* @param indirect COS object key
* @return PDColorSpace instance or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getExtGState,org.apache.pdfbox.pdmodel.DefaultResourceCache:getExtGState(org.apache.pdfbox.cos.COSObject),187,192,"/**
* Retrieves an extended graphics state from cache.
* @param indirect COSObject representing the graphics state
* @return PDExtendedGraphicsState object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:getShading(org.apache.pdfbox.cos.COSObject),227,232,"/**
* Retrieves a PDShading object by its COSObject.
* @param indirect the COSObject representing the shading
* @return PDShading object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getPattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:getPattern(org.apache.pdfbox.cos.COSObject),267,272,"/**
* Retrieves a pattern from cache by COS object.
* @param indirect COSObject representing the pattern
* @return PDAbstractPattern instance or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:getProperties(org.apache.pdfbox.cos.COSObject),307,312,"/**
* Retrieves a property list from an indirect COS object.
* @param indirect the COS object to retrieve the property list from
* @return PDPropertyList object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:getXObject(org.apache.pdfbox.cos.COSObject),347,352,"/**
* Retrieves a PDXObject by its COSObject.
* @param indirect the COSObject key
* @return the PDXObject or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",114,118,"/**
* Registers a font with an object.
* @param indirect COSObject representing the font
* @param font PDFont to be registered
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",154,158,"/**
* Registers color space with indirect object.
* @param indirect COSObject reference
* @param colorSpace PDColorSpace to register
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",194,198,"/**
* Adds extended graphics state to map.
* @param indirect COS object reference
* @param extGState graphics state to add
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",234,238,"/**
* Adds shading to the internal map.
* @param indirect COSObject representing the shading
* @param shading PDShading object to be added
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",274,278,"/**
* Adds pattern to internal storage.
* @param indirect COSObject reference
* @param pattern PDAbstractPattern instance
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",314,318,"/**
* Updates object properties with a soft reference.
* @param indirect COSObject to update
* @param propertyList PDPropertyList containing properties
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",354,358,"/**
 * Adds an XObject with soft reference.
 * @param indirect COSObject representing the indirect object
 * @param xobject PDXObject to be added
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeFont(org.apache.pdfbox.cos.COSObject),120,145,"/**
* Fetches and caches a PDFont from a COSObject.
* @param indirect the COSObject representing the font
* @return cached PDFont or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeColorSpace(org.apache.pdfbox.cos.COSObject),160,185,"/**
* Retrieves a PDColorSpace from cache or creates a new one.
* @param indirect COSObject representing the color space
* @return PDColorSpace object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeExtState,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeExtState(org.apache.pdfbox.cos.COSObject),200,225,"/**
 * Fetches and manages extended graphics state by object.
 * @param indirect COSObject representing the graphics state
 * @return PDExtendedGraphicsState object or null if not found
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeShading(org.apache.pdfbox.cos.COSObject),240,265,"/**
* Retrieves a PDShading object with caching and removal logic.
* @param indirect COSObject representing the shading
* @return PDShading object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removePattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:removePattern(org.apache.pdfbox.cos.COSObject),280,305,"/**
* Retrieves and manages a PDF pattern, handling caching and removal logic.
* @param indirect COSObject representing the pattern
* @return PDAbstractPattern object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeProperties(org.apache.pdfbox.cos.COSObject),320,345,"/**
* Retrieves or processes a PDPropertyList from the cache.
* @param indirect COSObject to process
* @return PDPropertyList object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeXObject(org.apache.pdfbox.cos.COSObject),360,386,"/**
 * Retrieves or processes a PDXObject based on given COSObject.
 * @param indirect the COSObject to process
 * @return PDXObject if found, otherwise null
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,overwrite,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:overwrite(int,java.lang.String)",121,135,"/**
 * Updates mapping for a code and its corresponding name.
 * @param code unique identifier
 * @param name associated name for the code
 */","* This will add a character encoding. An already existing mapping is overwritten when creating
     * the reverse mapping. Should only be used during construction of the class.
     *
     * @see Encoding#add(int, String)
     *
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,removeRegion,org.apache.pdfbox.text.PDFTextStripperByArea:removeRegion(java.lang.String),79,83,"/**
 * Masks specified region by name.
 * @param regionName name of the region to mask
 */","* Delete a region to group text by. If the region does not exist, this method does nothing.
     *
     * @param regionName The name of the region to delete.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMaximumFractionDigits,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMaximumFractionDigits(int),122,125,"/**
 * Formats decimal with specified number of fraction digits.
 * @param fractionDigitsNumber number of fraction digits to use
 */","* Sets the maximum number of digits allowed for fractional numbers.
     * 
     * @see NumberFormat#setMaximumFractionDigits(int)
     * @param fractionDigitsNumber the maximum number of digits allowed for fractional numbers",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.OutputStream,org.apache.pdfbox.pdmodel.PDResources)",106,114,"/**
 * Initializes a new content stream for PDF document.
 * @param document the PDDocument to write to
 * @param outputStream where the content will be written
 * @param resources resources for the content stream
 */","* Create a new appearance stream.
     *
     * @param document may be null
     * @param outputStream The appearances output stream to write to.
     * @param resources The resources to use",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getVerticalDisplacementVectorY,org.apache.pdfbox.pdmodel.font.PDCIDFont:getVerticalDisplacementVectorY(int),306,315,"/**
* Computes a float value based on an input code.
* @param code input integer code
* @return computed float value or default if not found
*/","* Returns the y-component of the vertical displacement vector (w1).
     *
     * @param code character code
     * @return w1y",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,defaultIfNull,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:defaultIfNull(java.lang.Float,float)",201,204,"/**
 * Returns the standard value if not null, otherwise returns the default value.
 * @param standardValue the primary value to check
 * @param defaultValue the fallback value
 * @return the non-null value between standardValue and defaultValue
 */","* Returns the provided default value in case 'standard' value is <code>null</code>. To be used
     * in cases unboxing may lead to a NPE.
     *
     * @param standardValue 'standard' value
     * @param defaultValue default value
     *
     * @return 'standard' value if not <code>null</code> otherwise default value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,zoom,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:zoom(float),285,292,"/**
* Increases image dimensions by a percentage.
* @param percent increase in size as a percentage
* @return PDVisibleSignDesigner instance with updated dimensions
*/","* Zoom signature image with some percent.
     * 
     * @param percent increase (positive value) or decrease (negative value) image with x percent.
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getWidth,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getWidth(),351,354,"/**
 * Returns the width of the image.
 * @return image width as a float
 */","* 
     * @return signature image width",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getHeight(),372,375,"/**
 * Returns the height of the image.
 * @return image height as a float
 */","* 
     * @return signature image height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addToSubset(int),278,286,"/**
* Embeds character by code point.
* @param codePoint Unicode code point of the character to embed
* @throws IllegalStateException if font creation had subsetting disabled
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addGlyphsToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addGlyphsToSubset(java.util.Set),288,295,"/**
* Masks glyphs by IDs.
* @param glyphIds set of glyph identifiers to mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,adjustForRotation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:adjustForRotation(),216,261,"/**
* Rotates and adjusts image position based on rotation angle.
* @return PDVisibleSignDesigner instance with updated transformations
*/","* Adjust signature for page rotation. This is optional, call this after all x and y coordinates
     * have been set if you want the signature to be positioned regardless of page orientation.
     *
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createAffineTransform,org.apache.pdfbox.util.Matrix:createAffineTransform(),169,175,"/**
* Creates an AffineTransform from an array.
* @return AffineTransform object constructed from the array elements
*/","* Create an affine transform from this matrix's values.
     *
     * @return An affine transform with this matrix's values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.Vertex:toString(),37,50,"/**
* Generates a string representation of the vertex with formatted colors.
* @return Formatted vertex string including point and color values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,checkFloatValues,org.apache.pdfbox.util.Matrix:checkFloatValues(float[]),295,302,"/**
* Validates and returns input float array.
* @param values array of 9 floats to be validated
* @return same array if valid, throws exception otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,encode,org.apache.pdfbox.pdmodel.font.PDFont:encode(java.lang.String),329,344,"/**
* Encodes a string into a byte array.
* @param text input string to encode
* @return encoded byte array
* @throws IOException if encoding fails
*/","* Encodes the given string for use in a PDF content stream.
     *
     * @param text Any Unicode text.
     * @return Array of PDF content stream bytes.
     * @throws IOException If the text could not be encoded.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,codePointToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:codePointToName(int),181,189,"/**
* Masks Unicode code point to its name.
* @param codePoint Unicode code point value
* @return Name of the Unicode character or "".notdef"" if unknown
*/","* Returns the name for the given Unicode code point.
     *
     * @param codePoint Unicode code point
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(org.apache.pdfbox.cos.COSName),77,84,"/**
* Retrieves render state by COSName.
* @param state COSName representing the state
* @return RenderState object or null if state is null
*/","* Returns the base state represented by the given {@link COSName}.
         *
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(org.apache.pdfbox.cos.COSName),71,78,"/**
* Retrieves BaseState based on COSName.
* @param state COSName representing the state
* @return BaseState corresponding to the input or default ON if null
*/","* Returns the base state represented by the given {@link COSName}.
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,applyGSUBRules,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:applyGSUBRules(org.apache.fontbox.ttf.gsub.GsubWorker,java.io.ByteArrayOutputStream,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1715,1755,"/**
 * Processes a word to find and write its glyphs.
 * @param gsubWorker worker for applying GSUB rules
 * @param out stream to write the glyphs
 * @param font font containing glyph information
 * @param word input text to process
 * @return list of glyph IDs after GSUB processing
 */","* Retrieve the glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules. The encoded glyph IDs are also written to the specified output stream.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param out The output stream to write the glyph IDs to.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param word The word which is being converted from characters to glyph IDs.
     * @return The glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified word.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",226,232,"/**
* Constructs a new PDF document.
* @param doc underlying COSDocument object
* @param source RandomAccessRead source of the PDF
* @param permission AccessPermission for the PDF
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf
     * @param permission he access permissions of the pdf
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,"org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",81,86,"/**
 * Initializes a new FDFDocument from a COSDocument and source.
 * @param doc the underlying COSDocument
 * @param source the RandomAccessRead source for the FDF data
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     *
     * @param doc The COSDocument that this document wraps.
     * @param source The source that will be closed when this document gets closed, can be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,initRgbColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:initRgbColorTable(),125,165,"/**
 * Masks colors and creates RGB color table.
 * @throws IOException if raster creation fails
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(),168,172,"/**
 * Delegates call to actual implementation.
 * @return result from actual.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(java.lang.Object[]),177,182,"/**
 * Delegates array processing to another method.
 * @param a input array of generic type X
 * @return processed array of generic type X
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,indexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:indexOf(java.lang.Object),534,538,"/**
* Delegates call to actual.m1.
* @param o input object
* @return result of actual.m1
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,containsAll,org.apache.pdfbox.pdmodel.common.COSArrayList:containsAll(java.util.Collection),242,246,"/**
 * Delegates to actual.m1 to check collection.
 * @param c the collection to check
 * @return true if condition met in actual.m1, false otherwise
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:isEqual(java.lang.Object,java.lang.Object)",46,60,"/**
* Compares two objects using specific methods.
* @param op1 first object to compare
* @param op2 second object to compare
* @return true if objects are equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:compare(java.lang.Number,java.lang.Number)",87,91,"/**
* Compares two numbers based on their m1 values.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's m1 value is greater than or equal to num2's, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:compare(java.lang.Number,java.lang.Number)",99,103,"/**
* Compares two numbers based on their m1 value.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's m1 is greater than num2's m1, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:compare(java.lang.Number,java.lang.Number)",111,115,"/**
* Compares two numbers using their m1 values.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's m1 value is less than or equal to num2's m1 value, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:compare(java.lang.Number,java.lang.Number)",123,127,"/**
* Compares two numbers' m1 values.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's m1 is less than num2's m1, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toCOSObjectList,org.apache.pdfbox.pdmodel.common.COSArrayList:toCOSObjectList(java.util.Collection),351,367,"/**
 * Converts a collection of objects to a list of COSBase objects.
 * @param list the input collection of objects
 * @return a list of COSBase objects
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,removeAll,org.apache.pdfbox.pdmodel.common.COSArrayList:removeAll(java.util.Collection),372,389,"/**
* Processes collection items, removing matches from array.
* @param c collection of COSObjectable items
* @return true if processing is successful
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,retainAll,org.apache.pdfbox.pdmodel.common.COSArrayList:retainAll(java.util.Collection),394,411,"/**
* Filters and processes items in collection.
* @param c collection of COSObjectable items
* @return result of processing by actual object
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,equals,org.apache.pdfbox.pdmodel.common.COSArrayList:equals(java.lang.Object),432,436,"/**
 * Delegates call to actual.m1.
 * @param o object to be processed
 * @return result of actual.m1
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,hashCode,org.apache.pdfbox.pdmodel.common.COSArrayList:hashCode(),441,445,"/**
 * Delegates call to actual.m1().
 * @return Result of actual.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,lastIndexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:lastIndexOf(java.lang.Object),543,548,"/**
 * Delegates call to actual.m1.
 * @param o object to be passed
 * @return result of actual.m1
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(),553,557,"/**
 * Returns a list iterator over the elements in this collection.
 * @return a ListIterator over the elements of this collection
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(int),562,566,"/**
 * Returns a list iterator over the elements in this list starting at the specified position.
 * @param index index of the first element to be returned from the list iterator (by a call to next)
 * @return a ListIterator of the elements in this list starting at the specified position
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,subList,"org.apache.pdfbox.pdmodel.common.COSArrayList:subList(int,int)",571,575,"/**
* Retrieves elements from index 'fromIndex' to 'toIndex'.
* @param fromIndex starting index (inclusive)
* @param toIndex ending index (exclusive)
* @return list of elements within the specified range
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsValue,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsValue(java.lang.Object),87,91,"/**
 * Delegates call to actuals.m1.
 * @param value object to be processed
 * @return result of actuals.m1
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,entrySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:entrySet(),164,168,"/**
* Returns entry set of actuals.
* @return Set of map entries from actuals
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getNames,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getNames(),223,226,"/**
 * Returns a set of masked aliases.
 * @return Set containing masked alias strings
 */","* Returns the set of known font names, including aliases.
     * 
     * @return the set of known font names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,toString,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:toString(),188,192,"/**
 * Delegates call to actuals' m1 method.
 * @return result from actuals.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,equals,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:equals(java.lang.Object),196,224,"/**
* Compares this object with another for equality.
* @param obj the object to compare
* @return true if equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,hashCode,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:hashCode(),186,194,"/**
* Overrides to include user attribute hash in calculation.
* @return combined hash code including user attributes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandler(java.lang.Class,java.lang.Class[],java.lang.Object[])",122,137,"/**
* Creates a SecurityHandler instance using reflection.
* @param handlerClass the class of the SecurityHandler to instantiate
* @param argsClasses array of argument classes for constructor
* @param args corresponding arguments for constructor
* @return SecurityHandler instance or throws RuntimeException on error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),215,226,"/**
* Creates a COSObjectable from a COSBase.
* @param base the input COSBase object
* @return COSObjectable created from the base object
* @throws IOException if an error occurs during creation
*/","* Method to convert the COS value in the number tree to the PD Model object. The default
     * implementation will simply use reflection to create the correct object type. Subclasses can
     * do whatever they want.
     *
     * @param base The COS object to convert.
     * @return The converted PD Model object.
     * @throws IOException If there is an error during creation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeRomanLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeRomanLabel(int),376,398,"/**
 * Masks pageIndex using Roman numerals and 'm'.
 * @param pageIndex the index to mask
 * @return masked string representation
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeLetterLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeLetterLabel(int),404,414,"/**
* Converts a number to a letter mask.
* @param num input number
* @return String representation of the letter mask
*/","* a..z, aa..zz, aaa..zzz ... labeling as described in PDF32000-1:2008,
         * Table 159, Page 375.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageRangeCount,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageRangeCount(),138,141,"/**
 * Returns mask value from labels.
 * @return integer mask value
 */","* Returns the number of page label ranges.
     * 
     * <p>
     * This will be always &gt;= 1, as the required default entry for the page
     * range starting at the first page is added automatically by this
     * implementation (see PDF32000-1:2008, p. 375).
     * </p>
     * 
     * @return the number of page label ranges.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageLabelRange,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageLabelRange(int),153,156,"/**
 * Creates a page label range starting from a given page.
 * @param startPage the starting page number
 * @return PDPageLabelRange object representing the page range
 */","* Returns the page label range starting at the given page, or {@code null}
     * if no such range is defined.
     * 
     * @param startPage
     *            the 0-based page index representing the start page of the page
     *            range the item is defined for.
     * @return the page label range or {@code null} if no label range is defined
     *         for the given start page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndices(),242,245,"/**
 * Returns a navigable set of labels.
 * @return NavigableSet containing label integers from m1()
 */","* Get an ordered set of page indices having a page label range.
     *
     * @return set of page indices.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,toString,org.apache.pdfbox.util.Vector:toString(),65,69,"/**
 * Returns a string representation of coordinates.
 * @return formatted coordinate string ""(x, y)""
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,closePath,org.apache.pdfbox.rendering.PageDrawer:closePath(),1005,1009,"/**
 * Delegates call to linePath's m1 method.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,moveTo,"org.apache.pdfbox.rendering.PageDrawer:moveTo(float,float)",981,985,"/**
 * Moves the current path position to (x, y).
 * @param x the new x-coordinate
 * @param y the new y-coordinate
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,appendRectangle,"org.apache.pdfbox.rendering.PageDrawer:appendRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",589,602,"/**
* Draws a cubic Bezier curve using four points.
* @param p0 Starting point
* @param p1 First control point
* @param p2 Second control point
* @param p3 Ending point
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,lineTo,"org.apache.pdfbox.rendering.PageDrawer:lineTo(float,float)",987,991,"/**
 * Delegates to linePath's m1 method.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getDashArray,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getDashArray(),101,104,"/**
 * Returns an array of floats from mask operation.
 * @return float array result of m1 method
 */","* Returns the dash array.
     * @return the dash array, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",102,114,"/**
* Initializes a PDColor with specified components and colorspace.
* @param components array of color components
* @param colorSpace the colorspace to use
*/","* Creates a PDColor containing the given color component values.
     * @param components array of color component values
     * @param colorSpace color space in which the components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:getComponents(),155,166,"/**
* Applies mask based on color space.
* @return float array representing masked components
*/","* Returns the components of this color value.
     * @return the components of this color value, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoordinateColorPair.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:<init>(java.awt.geom.Point2D,float[])",37,41,"/**
 * Initializes a CoordinateColorPair with a point and a color.
 * @param p the 2D coordinate point
 * @param c the color array (RGB values)
 */","* Constructor.
     *
     * @param p point
     * @param c color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Vertex:<init>(java.awt.geom.Point2D,float[])",31,35,"/**
 * Constructs a Vertex with a given point and color.
 * @param p Point2D representing the vertex position
 * @param c Array of floats representing the vertex color
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,get255Value,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:get255Value(float),281,284,"/**
* Applies mask to float value.
* @param val input floating-point number
* @return integer result of masking operation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:toString(),137,144,"/**
* Generates a formatted string representing function type.
* @return String with concatenated values from methods m1, m2, and m3
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),112,117,"/**
* Masks execution by setting flag to false.
* @param context execution context containing stack operations
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),170,175,"/**
* Executes mask operation on execution context.
* @param context current execution context
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getBoundary,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getBoundary(),122,138,"/**
* Calculates boundary values from corner coordinates.
* @return int array containing calculated boundaries
*/","* get the boundary of a triangle.
     *
     * @return {xmin, xmax, ymin, ymax}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),89,105,"/**
* Performs bitwise shift operation on an integer.
* @param context execution context containing the stack
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popNumber,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popNumber(),63,66,"/**
 * Retrieves a number from the stack.
 * @return Number object from the stack
 */","* Pops a number (int or real) from the stack. If it's neither data type, a
     * ClassCastException is thrown.
     * @return the number",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popInt,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popInt(),73,76,"/**
* Retrieves an integer value from the stack.
* @return masked integer value from the stack's m1 method
*/","* Pops a value of type int from the stack. If the value is not of type int, a
     * ClassCastException is thrown.
     * @return the int value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popReal,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popReal(),83,86,"/**
 * Retrieves a masked value from the stack.
 * @return The masked float value from the stack.
 */","* Pops a number from the stack and returns it as a real value. If the value is not of a
     * numeric type, a ClassCastException is thrown.
     * @return the real value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),70,78,"/**
* Masks values on the stack.
* @param context execution context containing the stack
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,108,"/**
 * Masks data using execution context.
 * @param context execution environment containing data to mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addBoolean,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addBoolean(boolean),62,65,"/**
 * Masks an instruction with a boolean value.
 * @param value the boolean mask to apply
 */","* Adds a bool value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),67,77,"/**
* Masks a number based on two operands from the stack.
* @param context execution context containing the stack
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDType3Font:isFontSymbolic(),122,126,"/**
 * Always returns false.
 * @return Boolean value indicating mask status
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,60,"/**
* Performs bitwise OR operation on top two elements of the stack.
* @param context execution context containing the stack
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),124,145,"/**
 * Masks the top operand on the stack.
 * @param context execution context containing the stack
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:<init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators),35,38,"/**
 * Initializes execution context with given operators.
 * @param operatorSet set of available operators
 */","* Creates a new execution context.
     * @param operatorSet the operator set",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<init>(),35,38,"/**
 * Initializes an InstructionSequenceBuilder with main sequence.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,getCurrentSequence,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:getCurrentSequence(),62,65,"/**
 * Retrieves an instruction sequence from the stack.
 * @return InstructionSequence object from the stack
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),58,63,"/**
* Masks data in execution context.
* @param context current execution context
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getListItemPatterns,org.apache.pdfbox.text.PDFTextStripper:getListItemPatterns(),1813,1825,"/**
* Initializes and returns a list of compiled patterns.
* @return List of compiled regex patterns
*/","* returns a list of regular expression Patterns representing different common list item formats. For example
     * numbered items of form:
     * <ol>
     * <li>some text</li>
     * <li>more text</li>
     * </ol>
     * or
     * <ul>
     * <li>some text</li>
     * <li>more text</li>
     * </ul>
     * etc., all begin with some character pattern. The pattern ""\\d+\."" (matches ""1."", ""2."", ...) or ""\[\\d+\]""
     * (matches ""[1]"", ""[2]"", ...).
     * <p>
     * This method returns a list of such regular expression Patterns.
     * 
     * @return a list of Pattern objects.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,hasMore,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:hasMore(),138,141,"/**
* Checks if current index is less than mask length.
* @return true if index is within bounds, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,currentChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:currentChar(),143,146,"/**
 * Retrieves character from input at specified index.
 * @return character at 'index' position in 'input'
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,peek,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:peek(),161,171,"/**
 * Returns the next character in the input or EOT if at the end.
 * @return next character or EOT
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),38,51,"/**
 * Adjusts stack based on numeric value.
 * @param context execution environment
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),85,96,"/**
* Masks elements in the stack based on index.
* @param context execution context containing stack operations
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),115,162,"/**
 * Masks elements in the stack based on given indices.
 * @param context execution context containing the stack
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<init>(),206,212,"/**
* Initializes encoding map with MAC expert table entries.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<init>(),254,260,"/**
* Initializes MacRomanEncoding with character mappings.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<init>(),194,200,"/**
* Initializes standard character encodings.
* Iterates over encoding table and adds entries to the encoding map.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<init>(),230,236,"/**
* Initializes symbol encoding by iterating over a table.
* Adds each character code and name to the encoding map.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<init>(),264,280,"/**
* Initializes WinAnsiEncoding with standard and default mappings.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<init>(),229,235,"/**
* Initializes the Zapf Dingbats encoding by populating a map.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(java.lang.Object[]),205,213,"/**
* Masks elements of an array.
* @param array input array of objects
* @return string representation of masked array
*/","* Creates a String representation of an Object array.
     * 
     * @param array the Object array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(float[]),221,229,"/**
* Masks float array elements.
* @param array input float array
* @return string representation of masked array
*/","* Creates a String representation of a float array.
     * 
     * @param array the float array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addText(org.apache.pdfbox.text.TextPosition),167,170,"/**
 * Masks a given text position.
 * @param text TextPosition to be masked
 */","* Adds a text position to the contents.
     * 
     * @param text the text position",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addMarkedContent,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),177,180,"/**
 * Masks content using specified PDMarkedContent.
 * @param markedContent content to be masked
 */","* Adds a marked content to the contents.
     * 
     * @param markedContent the marked content",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addXObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),187,190,"/**
 * Masks an XObject.
 * @param xobject the XObject to be masked
 */","* Adds an XObject to the contents.
     * 
     * @param xobject the XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:toString(),193,199,"/**
* Generates a string representation of the object.
* @return formatted string with tag, properties, and contents
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:toString(),267,271,"/**
* Returns a formatted string of corner coordinates.
* @return Concatenated string of corner values separated by spaces
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:toString(),127,136,"/**
* Constructs a formatted string based on superclass method and list numbering.
* @return formatted string representation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:toString(),158,175,"/**
* Builds a string representation with optional attributes.
* @return String with concatenated values based on conditions
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:toString(),193,218,"/**
* Constructs a string representation of the object.
* @return formatted string with properties if applicable
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getPermissionBytesForPublicKey,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getPermissionBytesForPublicKey(),176,186,"/**
* Sets mask bits and returns byte value.
* Calls m1 with specific parameters to set bits.
* @return integer representing byte value after masking
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrint(boolean),217,223,"/**
 * Sets printing permission.
 * @param allowPrinting flag to enable or disable printing
 */","* Set if the user can print.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowPrinting A boolean determining if the user can print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModify(boolean),242,248,"/**
* Sets modification permissions.
* @param allowModifications flag to enable or disable modifications
*/","* Set if the user can modify the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowModifications A boolean determining if the user can modify the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractContent(boolean),269,275,"/**
* Masks extraction based on permission.
* @param allowExtraction flag to enable or disable extraction
*/","* Set if the user can extract content from the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModifyAnnotations(boolean),302,308,"/**
* Modifies annotation permission based on input.
* @param allowAnnotationModification flag to enable or disable annotation modification
*/","* Set if the user can add or modify text annotations and fill in interactive forms fields and,
     * if {@link #canModify() canModify()} returns true, create or modify interactive form fields
     * (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns
     * true, it is still possible to fill in interactive forms (including signature fields) even the
     * parameter here is false.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAnnotationModification A boolean determining the new setting.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanFillInForm(boolean),331,337,"/**
* Toggles form filling permission.
* @param allowFillingInForm flag to enable or disable form filling
*/","* Set if the user can fill in interactive form fields (including signature fields) even if
     * {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want
     * to prevent a user from filling in interactive form fields, you need to call
     * {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well.
     *<p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowFillingInForm A boolean determining if the user can fill in interactive forms.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractForAccessibility(boolean),359,365,"/**
* Masks extraction based on read-only status.
* @param allowExtraction flag to enable or disable extraction
*/","* Set if the user can extract content from the document for accessibility purposes.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanAssembleDocument(boolean),384,390,"/**
 * Sets document assembly permission.
 * @param allowAssembly flag to enable or disable assembly
 */","* Set if the user can insert/rotate/delete pages.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAssembly A boolean determining if the user can assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrintFaithful(boolean),413,419,"/**
* Updates print setting for faithful data.
* @param canPrintFaithful flag to enable or disable printing
*/","* Set if the user can print the document in a faithful format or in a degraded format (if print
     * is enabled). The PDF version must be 1.5 or higher.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param canPrintFaithful A boolean determining if the user can print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrint(),205,208,"/**
 * Checks if PRINT_BIT is masked.
 * @return true if PRINT_BIT is masked, false otherwise
 */","* This will tell if the user can print.
     *
     * @return true If supplied with the user password they are allowed to print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModify(),230,233,"/**
* Checks if modification bit is set.
* @return true if modification bit is set, false otherwise
*/","* This will tell if the user can modify contents of the document.
     *
     * @return true If supplied with the user password they are allowed to modify the document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractContent(),256,259,"/**
 * Masks a bit using m1 function.
 * @return result of masking operation
 */","* This will tell if the user can extract text and images from the PDF document.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModifyAnnotations(),286,289,"/**
 * Checks if annotations can be modified.
 * @return true if annotations are modifiable, false otherwise
 */","* This will tell if the user can add or modify text annotations and fill in interactive forms
     * fields and, if {@link #canModify() canModify()} returns true, create or modify interactive
     * form fields (including signature fields). Note that if
     * {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in
     * interactive forms (including signature fields) even if this method here returns false.
     *
     * @return true If supplied with the user password they are allowed to modify annotations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canFillInForm(),316,319,"/**
* Checks if form bit is set.
* @return true if form bit is set, false otherwise
*/","* This will tell if the user can fill in interactive form fields (including signature fields)
     * even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false.
     *
     * @return true If supplied with the user password they are allowed to fill in form fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractForAccessibility(),346,349,"/**
 * Checks if accessibility bit is set.
 * @return true if accessibility bit is enabled, false otherwise
 */","* This will tell if the user can extract text and images from the PDF document
     * for accessibility purposes.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canAssembleDocument(),372,375,"/**
 * Checks document assembly status.
 * @return true if document is assembled, false otherwise
 */","* This will tell if the user can insert/rotate/delete pages.
     *
     * @return true If supplied with the user password they are allowed to assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrintFaithful(),399,402,"/**
 * Checks if FAITHFUL_PRINT_BIT is set.
 * @return true if bit is set, false otherwise
 */","* This will tell if the user can print the document in a faithful format or in a degraded
     * format (if print is enabled).
     *
     * @return true If supplied with the user password they are allowed to print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getCertificate,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getCertificate(),74,90,"/**
* Retrieves an X509 certificate from the keystore.
* @return X509Certificate object or throws KeyStoreException if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getPrivateKey,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getPrivateKey(),108,135,"/**
* Retrieves a key from the keystore.
* @return Key object if found, otherwise throws KeyStoreException
*/","* returns The private key that will be used to open the document protection.
     * @return The private key.
     * @throws KeyStoreException If there is an error accessing the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,appendCertInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)",291,313,"/**
* Compares RID and certificate serial numbers, issuers.
* @param extraInfo StringBuilder to append comparison results
* @param ktRid KeyTransRecipientId object
* @param certificate X509Certificate for comparison
* @param materialCert X509CertificateHolder for issuer check
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,getSecureRandom,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:getSecureRandom(),435,442,"/**
* Returns a SecureRandom instance.
* @return existing customSecureRandom if set, otherwise a new SecureRandom instance
*/","* Returns a SecureRandom If customSecureRandom is not defined, instantiate a new SecureRandom
     * 
     * @return SecureRandom",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,setKey,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:setKey(byte[]),47,70,"/**
* Initializes encryption with a key.
* @param key byte array of length 1-32 bytes
*/","* This will reset the key to be used.
     *
     * @param key The RC4 key used during encryption.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte,java.io.OutputStream)",106,113,"/**
* Encrypts a byte using a modified stream cipher.
* @param aByte the byte to encrypt
* @param output the OutputStream for encrypted data
* @throws IOException if an I/O error occurs
*/","* This will encrypt and write the next byte.
     *
     * @param aByte The byte to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,combineDiacritic,org.apache.pdfbox.text.TextPosition:combineDiacritic(java.lang.String),794,808,"/**
* Masks diacritics in a string; normalizes otherwise.
* @param str input string to process
* @return masked or normalized string
*/","* Combine the diacritic, for example, convert non-combining diacritic characters to their
     * combining counterparts.
     *
     * @param str String to normalize
     * @return Normalized string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,prohibited,org.apache.pdfbox.pdmodel.encryption.SaslPrep:prohibited(int),146,158,"/**
* Checks if a Unicode code point matches any of 10 mask conditions.
* @param codepoint Unicode code point to check
* @return true if any condition is met, false otherwise
*/","* Return true if the given {@code codepoint} is a prohibited character
     * as defined by
     * <a href=""https://tools.ietf.org/html/rfc4013#section-2.3"">RFC 4013,
     * Section 2.3</a>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,createCipher,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:createCipher(byte[],byte[],boolean)",392,401,"/**
 * Initializes AES/CBC/PKCS5Padding cipher.
 * @param key encryption/decryption key
 * @param iv initialization vector
 * @param decrypt true for decryption mode, false for encryption
 * @return Cipher instance configured with the specified parameters
 * @throws GeneralSecurityException if cipher initialization fails
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,computeVersionNumber,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:computeVersionNumber(),812,827,"/**
* Determines mask value based on key length and policy.
* @return int representing mask value
*/","* Computes the version number of the {@link SecurityHandler} based on the encryption key
     * length. See PDF Spec 1.6 p 93 and
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf"">PDF
     * 1.7 Supplement ExtensionLevel: 3</a> and
     * <a href=""http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf"">PDF
     * Spec 2.0</a>.
     *
     * @return The computed version number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,getProvider,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:getProvider(),40,48,"/**
 * Returns a singleton instance of the Bouncy Castle provider.
 * @return Provider object initialized with Bouncy Castle
 */","* Returns the provider to be used for advanced encrypting/decrypting. Default is the BouncyCastleProvider.
     * 
     * @return the security provider",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,logIfStrongEncryptionMissing,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:logIfStrongEncryptionMissing(),1255,1268,"/**
* Checks AES availability and logs if JCE unlimited strength is missing.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getNumComponentsFromImageMetadata,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getNumComponentsFromImageMetadata(javax.imageio.ImageReader),187,215,"/**
* Extracts the number of frame components from image metadata.
* @param reader ImageReader instance for image processing
* @return Number of frame components or 0 if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,richContentsToString,"org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:richContentsToString(org.w3c.dom.Node,boolean)",956,1001,"/**
 * Recursively converts a Node to its XML string representation.
 * @param node the current XML node to process
 * @param root indicates if the processing is at the root level
 * @return XML string representation of the node and its children
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,getNodeValue,org.apache.pdfbox.util.XMLUtil:getNodeValue(org.w3c.dom.Element),99,113,"/**
* Extracts text content from child nodes of a given element.
* @param node the parent XML element
* @return concatenated text content of all child nodes
*/","* This will get the text value of an element.
     *
     * @param node The node to get the text value for.
     * @return The text of the node.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String),845,848,"/**
 * Masks and outputs given text.
 * @param text input string to be masked
 */","* Write a Java string to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.CIDSystemInfo:toString(),53,57,"/**
 * Combines results of three methods with hyphens.
 * @return Concatenated string from m1, m2, and m3
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,getPredefinedCMap,org.apache.pdfbox.pdmodel.font.CMapManager:getPredefinedCMap(java.lang.String),46,59,"/**
 * Retrieves or parses a CMap by name.
 * @param cMapName the name of the CMap to fetch or parse
 * @return the CMap object
 * @throws IOException if an error occurs during parsing
 */","* Fetches the predefined CMap from disk (or cache).
     *
     * @param cMapName CMap name
     * @return The predefined CMap, never null.
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,parseCMap,org.apache.pdfbox.pdmodel.font.CMapManager:parseCMap(org.apache.pdfbox.io.RandomAccessRead),67,75,"/**
* Parses a CMap from the given RandomAccessRead.
* @param randomAccessRead source of data to parse
* @return parsed CMap object or null if parsing fails
*/","* Parse the given CMap.
     *
     * @param randomAccessRead the source of the CMap to be read
     * @return the parsed CMap",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,readTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:readTrueTypeFont(java.lang.String,java.io.File)",216,246,"/**
* Loads TrueType font from file or TTC collection.
* @param postScriptName font name to load
* @param file font file or TTC collection
* @return TrueTypeFont object
* @throws IOException if font not found or error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getParser,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",505,526,"/**
* Determines parser type based on file header.
* @param randomAccessRead input stream for reading the font file
* @param isEmbedded indicates if the font is embedded in another document
* @return OTFParser or TTFParser instance
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getParser,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",762,783,"/**
* Determines and returns the appropriate parser for a font file.
* @param randomAccessRead source of font data
* @param isEmbedded flag indicating if the font is embedded
* @return OTFParser or TTFParser based on file signature
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getOTFFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getOTFFont(java.lang.String,java.io.File)",248,288,"/**
* Loads OpenTypeFont from a file or TTC collection.
* @param postScriptName font's PostScript name
* @param file font file or TTC collection
* @return OpenTypeFont object or null on error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getType1Font,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getType1Font(java.lang.String,java.io.File)",290,303,"/**
* Loads a Type1Font from a file.
* @param postScriptName the PostScript name of the font
* @param file the font file to load
* @return Type1Font object or null if loading fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,isBadPath,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:isBadPath(java.lang.String),402,405,"/**
* Checks if file at given path is valid.
* @param path file path to check
* @return false if file is null or does not meet conditions, true otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeLine,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeLine(java.io.BufferedWriter,java.lang.String)",178,182,"/**
* Writes masked text to BufferedWriter.
* @param writer destination for output
* @param text text to write, possibly masked
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,writeFontInfo,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:writeFontInfo(java.io.BufferedWriter,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)",436,488,"/**
 * Writes font information to a BufferedWriter.
 * @param writer destination for writing font data
 * @param fontInfo font metadata to write
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getPostScriptNames,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getPostScriptNames(java.lang.String),188,199,"/**
* Generates a set of masked names from the given post script name.
* @param postScriptName original post script name
* @return set containing original and masked names
*/","* Gets alternative names, as seen in some PDFs, e.g. PDFBOX-142.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,calcLine,"org.apache.pdfbox.pdmodel.graphics.shading.Line:calcLine(int,int,int,int)",66,94,"/**
* Generates a set of points on the line from (x0, y0) to (x1, y1).
* @param x0 starting x-coordinate
* @param y0 starting y-coordinate
* @param x1 ending x-coordinate
* @param y1 ending y-coordinate
* @return Set of Point objects representing the line
*/","* Calculate the points of a line with Bresenham's line algorithm
     * <a
     * href=""http://en.wikipedia.org/wiki/Bresenham's_line_algorithm"">Bresenham's
     * line algorithm</a>
     *
     * @param x0 coordinate
     * @param y0 coordinate
     * @param x1 coordinate
     * @param y1 coordinate
     * @return all the points on the rasterized line from (x0, y0) to (x1, y1)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcDeg,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcDeg(java.awt.geom.Point2D[]),101,110,"/**
* Generates a mask value from an array of points.
* @param p array of Point2D objects
* @return integer mask value
*/","* Calculate the degree value of a triangle.
     *
     * @param p 3 vertices coordinates
     * @return number of unique points in the 3 vertices of a triangle, 3, 2 or
     * 1",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toDebugString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:toDebugString(),827,841,"/**
 * Generates a masked string representation of font information.
 * @return Masked string containing font details
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,computeHash,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:computeHash(java.io.InputStream),851,867,"/**
* Computes CRC32 checksum of input stream.
* @param is InputStream to compute checksum on
* @return Hex string representation of the checksum
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,addFont,"org.apache.pdfbox.pdmodel.font.FontCache:addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",41,44,"/**
 * Caches font information with a soft reference.
 * @param info FontInfo object containing font details
 * @param font FontBoxFont object representing the font
 */","* Adds the given FontBox font to the cache.
     * 
     * @param info the FontInfo to be used as key
     * @param font the font to be cached",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,getFont,org.apache.pdfbox.pdmodel.font.FontCache:getFont(org.apache.pdfbox.pdmodel.font.FontInfo),53,57,"/**
 * Retrieves cached FontBoxFont by FontInfo.
 * @param info font information
 * @return FontBoxFont object or null if not found
 */","* Returns the FontBox font associated with the given FontInfo.
     * 
     * @param info the FontInfo of the cached font
     * 
     * @return the cached font if available, otherwise null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,toString,org.apache.pdfbox.pdmodel.font.FontInfo:toString(),140,147,"/**
* Generates a formatted string with device info.
* @return String containing masked information from various methods
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,toString,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:toString(),159,164,"/**
* Generates a string representation of the TilingPaintParameter object.
* @return formatted string with parameter values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch),725,729,"/**
 * Compares font match scores.
 * @param match FontMatch object to compare
 * @return result of score comparison
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cosine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cosine(double,double)",203,210,"/**
* Computes ratio of dx to hypotenuse.
* @param dx change in x
* @param hypot hypotenuse length
* @return normalized value or 0 if hypot is zero
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,sine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:sine(double,double)",212,219,"/**
* Computes ratio of dy to hypotenuse.
* @param dy vertical distance
* @param hypot hypotenuse length
* @return ratio or 0 if hypotenuse is zero
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),153,156,"/**
 * Registers font alias.
 * @param baseName the base font name to alias
 */","* Adds a standard font name to the map of known aliases, to simplify the logic of finding
     * font metrics by name. We want a single lookup in the map to find the font both by a base name or
     * an alias.
     *
     * @see #getAFM
     * @param baseName the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitute,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitute(java.lang.String,java.lang.String)",207,211,"/**
* Replaces matches in a case-insensitive manner.
* @param match pattern to search for
* @param replace string to replace matches with
*/","* Adds a top-priority substitute for the given font.
     *
     * @param match PostScript name of the font to match
     * @param replace PostScript name of the font to use as a replacement",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitutes,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitutes(java.lang.String,java.util.List)",213,216,"/**
 * Masks text using provided substitutions.
 * @param match Pattern to match in text
 * @param replacements List of replacement strings
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",469,485,"/**
 * Retrieves font info by format and PostScript name.
 * @param format font format
 * @param postScriptName PostScript name of the font
 * @return FontInfo object or null if not found
 */",* Finds the named font with the given format.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getSubstitutes,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getSubstitutes(java.lang.String),221,226,"/**
* Masks the given PostScript name.
* @param postScriptName original PostScript name to mask
* @return List of masked strings
*/",* Returns the substitutes for a given font.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getName,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getName(int),166,169,"/**
 * Converts code to name using m1 method.
 * @param code numeric code to convert
 * @return corresponding name or "".notdef"" if not found
 */","* This will take a character code and get the name from the code.
     * 
     * @param code character code
     * @return PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,printMatches,org.apache.pdfbox.pdmodel.font.FontMapperImpl:printMatches(java.util.PriorityQueue),735,750,"/**
* Retrieves and logs the best font match from a priority queue.
* @param queue priority queue of FontMatch objects
* @return best FontMatch object
*/",* For debugging. Prints all matches and returns the best match.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,findFontOrSubstitute,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:findFontOrSubstitute(),157,183,"/**
 * Retrieves a TrueType font, using a fallback if necessary.
 * @return TrueTypeFont object
 * @throws IOException if true type font retrieval fails
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getType2CharString,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getType2CharString(int),286,300,"/**
* Converts CID to character string.
* @param cid character identifier
* @return Type2CharString or null if conversion fails
*/","* Returns the Type 2 charstring for the given CID, or null if the substituted font does not contain Type 2
     * charstrings.
     *
     * @param cid CID
     * @return the Type 2 charstring for the given CID or null
     * 
     * @throws IOException if the charstring could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToCID(int),371,375,"/**
 * Masks function code using parent's m1 and m2 methods.
 * @param code input function code to be masked
 * @return masked function code
 */","* Returns the CID for the given character code. If not found then CID 0 is returned.
     *
     * @param code character code
     * @return CID",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getAverageFontWidth(),461,469,"/**
 * Returns the average width value.
 * @return float representing the average width, calculated or retrieved
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,subset,org.apache.pdfbox.pdmodel.font.PDType0Font:subset(),297,310,"/**
 * Ensures font is subsettable, then processes embedding and cleanup.
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToCID(int),224,240,"/**
* Masks a code using CMap functions.
* @param code input code to be masked
* @return masked code or result of alternative function
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getHeight(int),335,341,"/**
* Calculates a masked value based on TTF metrics.
* @param code input code for calculation
* @return computed float value from TTF metrics
* @throws IOException if an I/O error occurs during processing
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:encode(int),356,407,"/**
 * Retrieves byte array for a given Unicode character.
 * @param unicode the Unicode code point of the character
 * @return byte array representing the character or throws exception if not found
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toRGB(),192,202,"/**
* Converts color components to RGB value.
* @return integer representing RGB color
* @throws IOException if an I/O error occurs
*/","* Returns the packed RGB value for this color, if any.
     * @return RGB
     * @throws IOException if the color conversion fails
     * @throws UnsupportedOperationException if this color value is a pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGB(float[]),170,186,"/**
* Applies mask to color value.
* @param value single-element array with color index
* @return float array of RGB values normalized to [0, 1]
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,backdropRemoval,"org.apache.pdfbox.rendering.GroupGraphics:backdropRemoval(int,int,int,float)",723,729,"/**
* Adjusts color channel value based on group and backdrop colors.
* @param groupRGB color value of the group
* @param backdropRGB color value of the backdrop
* @param shift bit shift for target color channel
* @param alphaFactor blending factor
* @return adjusted color channel value clamped between 0 and 255
*/","* Computes the backdrop removal equation.
     * <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,multiplyFloat,"org.apache.pdfbox.text.PDFTextStripper:multiplyFloat(float,float)",1689,1694,"/**
* Multiplies two values and applies Math.m1.
* @param value1 first input value
* @param value2 second input value
* @return result of Math.m1 applied to scaled product
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,equals,org.apache.pdfbox.pdmodel.font.PDFont:equals(java.lang.Object),654,658,"/**
* Checks equality based on font type and mask value.
* @param other object to compare
* @return true if both are PDFont with matching mask values, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,hashCode,org.apache.pdfbox.pdmodel.font.PDFont:hashCode(),660,664,"/**
 * Calls m2 on the result of m1.
 * @return Result of m2 called on the object returned by m1
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getData,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:getData(),717,720,"/**
 * Masks bytes in the given array.
 * @param bytes input byte array
 * @param start starting index
 * @param length number of bytes to mask
 * @return masked byte array
 */","* Get the data of this chunk as a byte array
         *
         * @return a byte-array with only the data of the chunk",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,toString,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:toString(),95,108,"/**
* Generates a formatted string with font attributes.
* @return String representation of font attributes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,getGlyphList,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:getGlyphList(),166,169,"/**
 * Returns a GlyphList with mask applied.
 * @return GlyphList instance with mask processing
 */",* Returns the font's glyph list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,assignGlyphList,org.apache.pdfbox.pdmodel.font.PDSimpleFont:assignGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),466,477,"/**
* Sets glyph list based on font name.
* @param fontName the font name to determine the glyph list
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphList,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),309,313,"/**
 * Returns a GlyphList based on the font name.
 * @param baseName the base font name
 * @return GlyphList.m2 if baseName is ZAPF_DINGBATS, else GlyphList.m1
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(java.lang.String),502,538,"/**
* Retrieves a GeneralPath for the given font name.
* @param name font name
* @return GeneralPath object representing the glyph or an empty path if not found
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(java.lang.String),581,586,"/**
 * Checks if a font name is valid.
 * @param name font name to validate
 * @return true if valid, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,extractCmapTable,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:extractCmapTable(),715,760,"/**
* Initializes character mapping tables for font processing.
* Sets up Windows Unicode, Symbol, Mac Roman, and Unicode 1.0/2.0 BMP mappings.
*/","* extract all useful ""cmap"" subtables.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,isVertical,org.apache.pdfbox.pdmodel.font.PDType0Font:isVertical(),461,465,"/**
 * Checks if cMap is not null and its m1() equals 1.
 * @return true if conditions are met, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType0Font:readCode(java.io.InputStream),626,634,"/**
* Processes input stream using character map.
* @param in input stream to process
* @return result of processing
* @throws IOException if cmap is null or other I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(java.lang.String),242,246,"/**
 * Checks if a font with the given name exists.
 * @param name font name to check
 * @return true if font exists, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getAverageFontWidth(),438,446,"/**
* Returns average width, calculating if not already set.
* @return float representing average width
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1Font:getAverageFontWidth(),473,484,"/**
* Calls m3 on result of m1 if not null, otherwise calls superclass's m2.
* @return float value from m3 or superclass's m2
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,loadMetrics,org.apache.pdfbox.pdmodel.font.Standard14Fonts:loadMetrics(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),129,143,"/**
 * Parses and registers font metrics for a given font name.
 * @param fontName the font name to process
 * @throws IOException if resource is not found or parsing fails
 */","* Loads the metrics for the base font specified by name. Metric file must exist in the pdfbox jar under
     * /org/apache/pdfbox/resources/afm/
     *
     * @param fontName one of the standard 14 font names for which to load the metrics.
     * @throws IOException if no metrics exist for that font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowDestinationRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowDestinationRange(java.lang.String,java.lang.String)",214,227,"/**
* Compares two strings and checks specific conditions.
* @param prev first string to compare
* @param next second string to compare
* @return true if both conditions are met, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isEmbeddingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isEmbeddingPermitted(org.apache.fontbox.ttf.TrueTypeFont),140,160,"/**
* Checks if a TrueTypeFont can be embedded.
* @param ttf the TrueTypeFont to check
* @return true if embedding is allowed, false otherwise
*/",* Returns true if the fsType in the OS/2 table permits embedding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isSubsettingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isSubsettingPermitted(org.apache.fontbox.ttf.TrueTypeFont),165,177,"/**
 * Checks if font subsetting is allowed.
 * @param ttf TrueTypeFont object
 * @return true if subsetting is allowed, false otherwise
 */",* Returns true if the fsType in the OS/2 table permits subsetting.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,getTag,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:getTag(java.util.Map),371,394,"/**
 * Encodes a map of group IDs to category IDs into a string.
 * @param gidToCid mapping from group ID to category ID
 * @return encoded string representation
 */",* Returns an uppercase 6-character unique tag for the given subset.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,getUniNameOfCodePoint,org.apache.pdfbox.pdmodel.font.UniUtil:getUniNameOfCodePoint(int),32,46,"/**
 * Converts a Unicode code point to a hexadecimal string.
 * @param codePoint Unicode code point value
 * @return Hexadecimal string prefixed with 'uni'
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,getEncodingName,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:getEncodingName(),203,212,"/**
* Checks encoding and appends ""differences"".
* @return Result string based on encoding presence
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,loadList,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:loadList(java.io.InputStream),121,173,"/**
 * Processes an input stream to map glyph names to Unicode values.
 * @param input the input stream containing glyph list data
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,toUnicode,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:toUnicode(java.lang.String),213,264,"/**
* Converts name to Unicode string.
* @param name input name string
* @return Unicode representation or null if conversion fails
*/","* Returns the Unicode character sequence for the given glyph name, or null if there isn't any.
     *
     * @param name PostScript glyph name
     * @return Unicode character(s), or null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(org.apache.fontbox.afm.FontMetrics),57,63,"/**
* Initializes encoding with character metrics.
* @param fontMetrics FontMetrics object containing character data
*/","* Creates an encoding from the given AFM font metrics.
     *
     * @param fontMetrics AFM font metrics.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,toString,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:toString(),106,110,"/**
* Returns string representation of PDLineDashPattern.
* @return formatted string with array and phase details
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toString(),228,232,"/**
* Returns string representation of PDColor.
* @return formatted string with components, pattern name, and color space
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:toRGBImage(java.awt.image.WritableRaster),80,103,"/**
 * Converts a grayscale raster to an RGB BufferedImage.
 * @param raster input WritableRaster containing grayscale data
 * @return BufferedImage with converted RGB values
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:toRGBImage(java.awt.image.WritableRaster),76,88,"/**
* Creates a buffered image from a writable raster.
* @param raster source raster data
* @return BufferedImage object created from the raster
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGBImage(java.awt.image.WritableRaster),191,215,"/**
 * Converts a WritableRaster to a BufferedImage using a color table.
 * @param raster input raster data
 * @return BufferedImage with RGB pixel values
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,convXYZtoRGB,"org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:convXYZtoRGB(float,float,float)",85,106,"/**
 * Applies a mask to color values.
 * @param x red component value
 * @param y green component value
 * @param z blue component value
 * @return masked color components as float array
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,compose,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)",110,269,"/**
 * Applies a blend operation between two rasters.
 * @param src source raster
 * @param dstIn destination input raster
 * @param dstOut destination output raster
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,toString,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:toString(),390,394,"/**
 * Returns string representation of BlendMode.
 * @return formatted string with mode details
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage2,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage2(java.awt.image.WritableRaster),200,232,"/**
* Converts raster data to RGB image.
* @param raster input raster data
* @return BufferedImage object representing the converted image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:toRGBImage(java.awt.image.WritableRaster),35,73,"/**
* Converts a raster to an RGB image.
* @param raster input raster data
* @return BufferedImage object representing the converted image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,applyColorKeyMask,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:applyColorKeyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage)",706,738,"/**
* Applies a mask to an image.
* @param image source image to be masked
* @param mask image used as mask
* @return new BufferedImage with applied mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",134,149,"/**
 * Constructs a PDColor with specified components, pattern name, and color space.
 * @param components array of color components
 * @param patternName the name of the pattern
 * @param colorSpace the color space for this color
 */","* Creates a PDColor containing the given color component values and pattern name.
     * @param components array of color component values
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern/components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRawImage,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRawImage(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",333,338,"/**
* Creates a buffered image from a writable raster and color space.
* @param raster the source raster data
* @param awtColorSpace the color space for the image
* @return a buffered image with the specified raster and color model
*/","* Returns the given raster as BufferedImage with the given awtColorSpace using a
     * ComponentColorModel.
     * @param raster the source raster
     * @param awtColorSpace the AWT colorspace
     * @return a BufferedImage in this colorspace",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",347,377,"/**
* Applies mask to raster using specified color space.
* @param raster source image data
* @param colorSpace color space for conversion
* @return masked BufferedImage
*/","* Returns the (A)RGB equivalent of the given raster, using the given AWT color space
     * to perform the conversion.
     * @param raster the source raster
     * @param colorSpace the AWT
     * @return an (A)RGB buffered image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getICCProfile(),97,114,"/**
 * Loads an ICC profile from a resource.
 * @return ICC_Profile object representing the loaded profile
 * @throws IOException if the resource cannot be accessed or read
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",162,214,"/**
* Converts raster image to BufferedImage using CMYK conversion.
* @param raster source image raster
* @param colorSpace target color space
* @return converted BufferedImage
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,equals,org.apache.pdfbox.util.Matrix:equals(java.lang.Object),596,612,"/**
* Checks equality with another object.
* @param obj the object to compare
* @return true if equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setBackground,org.apache.pdfbox.rendering.GroupGraphics:setBackground(java.awt.Color),505,510,"/**
* Applies color to both group and alpha graphics.
* @param color the color to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clearRect,"org.apache.pdfbox.rendering.GroupGraphics:clearRect(int,int,int,int)",90,95,"/**
 * Delegates drawing to two graphics handlers.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width drawable width
 * @param height drawable height
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),937,943,"/**
* Updates mask with given color space.
* @param cs Color space to apply or null
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,fallbackToAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:fallbackToAlternateColorSpace(java.lang.Exception),226,240,"/**
* Handles exception and sets alternative color space.
* @param e the exception to handle, may be null
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,is_sRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:is_sRGB(java.awt.color.ICC_Profile),246,252,"/**
* Checks if ICC profile represents sRGB color model.
* @param profile ICC_Profile object to check
* @return true if profile is for sRGB, false otherwise
*/","* Returns true if the given profile represents sRGB.
     * (unreliable on the data of ColorSpace.CS_sRGB in openjdk)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,ensureDisplayProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:ensureDisplayProfile(java.awt.color.ICC_Profile),256,270,"/**
 * Adjusts ICC profile if not of display class.
 * @param profile the ICC profile to process
 * @return adjusted or original ICC profile
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,clampColors,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:clampColors(java.awt.color.ICC_ColorSpace,float[])",299,309,"/**
* Clamps color values within ICC_ColorSpace range.
* @param cs ICC_ColorSpace object defining min and max values
* @param value array of color component values to clamp
* @return clamped array with values within specified range
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getNumberOfComponents(),334,355,"/**
* Returns the number of color components.
* Uses ICC profile if available and differs from /N entry.
* @return Number of color components
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getColorSpaceType,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getColorSpaceType(),469,489,"/**
* Determines color space type.
* @return Color space type or -1 if not recognized
*/","* Returns the type of the color space in the ICC profile. If the ICC profile is invalid, the
     * type of the alternate colorspace is returned, which will be one of
     * {@link ColorSpace#TYPE_GRAY TYPE_GRAY}, {@link ColorSpace#TYPE_RGB TYPE_RGB},
     * {@link ColorSpace#TYPE_CMYK TYPE_CMYK}, or -1 if that one is invalid.
     *
     * @return an ICC color space type. See {@link ColorSpace#getType()} and the static values of
     * {@link ColorSpace} for more details.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRawImage(java.awt.image.WritableRaster),217,238,"/**
* Creates a BufferedImage from WritableRaster with an ICC-based color space.
* @param raster input image data
* @return BufferedImage or null if baseColorSpace is not ICC-based or condition fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getNumberOfComponents(),51,55,"/**
 * Returns mask value from AWT color space.
 * @return Integer representing the mask value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGB(float[]),121,137,"/**
* Applies a mask transformation to color values.
* @param value array of color components [L*, a*, b*]
* @return transformed color values [x, y, z]
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,isGrayImage,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:isGrayImage(java.awt.image.BufferedImage),118,133,"/**
* Checks if an image is maskable.
* @param image the input BufferedImage to check
* @return true if image meets mask conditions, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",229,233,"/**
* Creates an image XObject with default quality.
* @param document PDDocument to add the image
* @param image BufferedImage to convert
* @return PDImageXObject created from the image
* @throws IOException if creation fails
*/","* Creates a new JPEG PDImageXObject from a BufferedImage.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getAlphaImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getAlphaImage(java.awt.image.BufferedImage),281,302,"/**
 * Applies a mask to an image.
 * @param image source image to process
 * @return masked image or null if unsupported
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorImage(java.awt.image.BufferedImage),416,438,"/**
 * Converts image to RGB if not already.
 * @param image input image to be converted
 * @return RGB BufferedImage
 * @throws UnsupportedOperationException if color space is not RGB
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getJPEGImageWriter,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getJPEGImageWriter(),331,349,"/**
* Retrieves an ImageWriter for JPEG format.
* @return ImageWriter object capable of handling JPEG format
* @throws IOException if no suitable ImageWriter is found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorSpaceFromAWT,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorSpaceFromAWT(java.awt.image.BufferedImage),387,413,"/**
* Converts AWT BufferedImage to PDF color space.
* @param awtImage the source image
* @return PDColorSpace corresponding to the image's color space
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",289,335,"/**
* Initializes PredictorEncoder with a PDF document and image.
* @param document PDDocument to be associated
* @param image BufferedImage to encode
*/",* Initialize the encoder and set all final fields,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterUp,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterUp(int,int)",669,673,"/**
 * Applies mask to integer.
 * @param x input integer
 * @param b mask value
 * @return masked result as byte
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHint,"org.apache.pdfbox.rendering.GroupGraphics:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)",526,531,"/**
* Sets a rendering hint for both group and alpha graphics.
* @param hintKey the key of the hint to be set
* @param hintValue the value of the hint to be set
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,scaleImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:scaleImage(java.awt.image.BufferedImage,int,int,int,boolean)",762,796,"/**
 * Resizes an image with optional interpolation.
 * @param image source BufferedImage to resize
 * @param width new width of the image
 * @param height new height of the image
 * @param type image type (e.g., TYPE_BYTE_GRAY)
 * @param interpolate true for smooth scaling, false for nearest neighbor
 * @return resized BufferedImage or original if an error occurs
 */",* High-quality image scaling.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)",176,182,"/**
 * Draws an image with specified transformations.
 * @param img the source image to draw
 * @param dx1 destination upper-left x coordinate
 * @param dy1 destination upper-left y coordinate
 * @param dx2 destination lower-right x coordinate
 * @param dy2 destination lower-right y coordinate
 * @param sx1 source upper-left x coordinate
 * @param sy1 source upper-left y coordinate
 * @param sx2 source lower-right x coordinate
 * @param sy2 source lower-right y coordinate
 * @param observer image observer for notification
 * @return true if the drawing was successful, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImage.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.image.PDImage:getCOSObject(),250,251,"/**
 * Returns a COSDictionary representing mask settings.
 * @return COSDictionary with mask configuration
 */","* Convert this image to a COS object.
     *
     * @return The cos object that matches this image object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,readPNGFloat,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:readPNGFloat(byte[],int)",752,756,"/**
 * Applies mask function to byte array at given offset.
 * @param bytes input byte array
 * @param offset starting index in the byte array
 * @return masked value as float
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,parsePNGChunks,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:parsePNGChunks(byte[]),765,891,"/**
* Parses PNG image data and initializes converter state.
* @param imageData byte array containing PNG data
* @return PNGConverterState object or null if parsing fails
*/","* Parse the PNG structure into the PNGConverterState. If we can't handle
     * something, this method will return null.
     *
     * @param imageData the byte array with the PNG data
     * @return null or the converter state with all relevant chunks",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getIDATInputStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),480,489,"/**
* Combines IDAT chunks into a single input stream.
* @param state PNG conversion state containing IDAT chunks
* @return Combined InputStream of all IDAT data
*/","* Build an input stream for the IDAT data. May need to concat multiple IDAT
     * chunks.
     *
     * @param state the converter state.
     * @return a input stream with the IDAT data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,crc,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:crc(byte[],int,int)",933,936,"/**
* Applies bitwise NOT to result of m1 function.
* @param buf byte array input
* @param offset starting index in buf
* @param len length of data to process
* @return bitwise NOT of m1's result
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaint,org.apache.pdfbox.rendering.GroupGraphics:setPaint(java.awt.Paint),519,524,"/**
* Applies painting to both group and alpha graphics.
* @param paint the Paint object to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRect(int,int,int,int)",254,259,"/**
* Calls m1 on both groupG2D and alphaG2D.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:dispose(),158,163,"/**
* Overrides m1 to reset axial shading type.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:dispose(),163,168,"/**
 * Calls superclass method and resets radial shading type.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:dispose(),84,89,"/**
 * Overrides base method and resets type1ShadingType.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:getRaster(int,int,int,int)",165,251,"/**
 * Generates a raster mask based on input parameters.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param w width of the raster
 * @param h height of the raster
 * @return Raster object representing the mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:getRaster(int,int,int,int)",91,157,"/**
* Generates a raster mask based on specified dimensions and coordinates.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return Raster object representing the mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getFlag1Edge,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getFlag1Edge(),134,138,"/**
 * Retrieves mask points from control point.
 * @return array of Point2D representing mask points
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,getPoints,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:getPoints(int),58,82,"/**
* Generates points for a cubic Bezier curve.
* @param l level of detail (number of segments)
* @return array of Point2D representing the curve
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:calcPixelTableArray(java.awt.Rectangle),62,73,"/**
 * Generates a mask array based on device bounds.
 * @param deviceBounds dimensions of the device
 * @return 2D integer array representing the mask
 * @throws IOException if an I/O error occurs
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:calcPixelTableArray(java.awt.Rectangle),60,74,"/**
* Generates a mask array based on device bounds and patches.
* @param deviceBounds dimensions of the device
* @return 2D integer array representing the mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Computes the bounding rectangle for shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty Float rectangle if no triangles
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.Patch:<init>(float[][]),46,49,"/**
 * Sets corner colors.
 * @param color 2D array of colors to be applied
 */","* Constructor of Patch.
     *
     * @param color 4 corner's colors",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",228,231,"/**
* Checks if two points are approximately equal.
* @param p0 first point
* @param p1 second point
* @return true if both coordinates differ by less than 0.001, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",203,206,"/**
* Checks if two points are approximately equal.
* @param p0 first point
* @param p1 second point
* @return true if both coordinates differ by less than 0.001, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getArea,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getArea(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",220,224,"/**
* Calculates the area of a triangle using determinant method.
* @param a first vertex of the triangle
* @param b second vertex of the triangle
* @param c third vertex of the triangle
* @return absolute value of the triangle's area
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,removeZeroLengthSegments,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:removeZeroLengthSegments(java.awt.geom.Point2D$Double[]),954,995,"/**
 * Removes points within a tolerance from a polygon.
 * @param polygon array of Points representing the polygon
 * @return simplified polygon with redundant points removed
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,clonedPoint2DArray,org.apache.pdfbox.pdmodel.graphics.shading.Patch:clonedPoint2DArray(java.awt.geom.Point2D[]),233,241,"/**
* Applies mask transformation to array of points.
* @param input array of Point2D objects
* @return new array with masked points
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,calcLevel,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:calcLevel(),67,148,"/**
* Determines mask levels based on control points.
* @return int array with two elements representing mask levels
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:getRaster(int,int,int,int)",174,201,"/**
 * Creates a mask raster from pixel values.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param w width of the raster
 * @param h height of the raster
 * @return Raster object representing the mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:clone(),221,233,"/**
* Overrides and returns cloned text state.
* @return PDTextState object
* @throws RuntimeException if cloning fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,"org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Path2D,boolean)",592,605,"/**
 * Updates clipping paths with a new path.
 * @param path the Path2D object to add or clone
 * @param clonePath true if the path should be cloned before adding
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getCurrentClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getCurrentClippingPath(),622,653,"/**
 * Creates a clipped area based on paths.
 * @return Clipped Area object
 */","* This will get the current clipping path. Do not modify this Area object!
     *
     * @return The current clipping path.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<init>(java.lang.String),116,119,"/**
 * Constructs a TextAttribute with the specified name.
 * @param name the attribute's name
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.util.List),82,86,"/**
* Constructs a PlainText object from a list of strings.
* @param listValue List of string parts to be converted into paragraphs
*/","* Construct the text block from a list of values.
     * 
     * Constructs the text block from a list of values treating each
     * entry as an individual {@link Paragraph}.
     * 
     * @param listValue the text block string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(int),35,45,"/**
* Converts an integer to a TextAlign enum value.
* @param alignment integer representing the alignment
* @return corresponding TextAlign or LEFT if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,hashCode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:hashCode(),221,225,"/**
 * Returns the mask value from the dictionary.
 * @return integer mask value
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getMatrix(),175,178,"/**
 * Creates an affine transform with specified translation.
 * @return AffineTransform object with translation set to (-bboxMinX, -bboxMinY)
 */","* Returns the <code>Matrix</code> entry for the appearance stream form XObject.
     *
     * @return Matrix for appearance stream form XObject.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsPolygon,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsPolygon(double,double,double,double,double,double[])",398,423,"/**
* Calculates mask parameters for given dimensions.
* @param advInterm intermediate advancement distance
* @param advCorner corner advancement distance
* @param k curvature factor
* @param r radius
* @param length total length
* @param array output array to store alpha and dx
* @return number of segments or -1 if invalid length
*/","* Computes parameters for a cloudy polygon: n, alpha, and dx.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsEllipse(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,double)",940,952,"/**
 * Calculates masked angle for point transition.
 * @param pt current point
 * @param ptNext next point
 * @param r radius factor
 * @param curlAdv advance curl adjustment
 * @return calculated angle or 0 if out of bounds
 */",* Computes the alpha parameter for an ellipse curl.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getPositivePolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getPositivePolygon(java.awt.geom.Point2D$Double[]),556,562,"/**
 * Adjusts point array based on slope condition.
 * @param points array of Double Points to process
 */","* Makes a polygon whose direction is the same as the positive angle
     * direction in the coordinate system.
     * The polygon must not intersect itself.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,flattenEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:flattenEllipse(double,double,double,double)",705,738,"/**
* Generates points defining an ellipse's boundary.
* @param left x-coordinate of the left edge
* @param bottom y-coordinate of the bottom edge
* @param right x-coordinate of the right edge
* @param top y-coordinate of the top edge
* @return array of Point2D.Double representing ellipse boundary
*/",* Flattens an ellipse into a polygon.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,updateBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:updateBBox(double,double)",1021,1027,"/**
 * Updates bounding box coordinates.
 * @param x new X coordinate
 * @param y new Y coordinate
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createShortStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createShortStyles(),434,443,"/**
* Returns a set of line end styles for annotations.
* @return Set containing line end style constants
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createInteriorColorStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createInteriorColorStyles(),445,454,"/**
* Returns a set of line end styles for annotations.
* @return Set containing specific line end style constants
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createAngledStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createAngledStyles(),456,466,"/**
* Returns a set of line end styles for annotations.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isRectangular,org.apache.pdfbox.rendering.PageDrawer:isRectangular(java.awt.geom.GeneralPath),888,940,"/**
* Checks if a path is a simple quadrilateral.
* @param path the GeneralPath to check
* @return true if the path forms a simple quadrilateral, false otherwise
*/",* Returns true if the given path is rectangular.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(java.io.InputStream,int[])",38,42,"/**
* Initializes COSFilterInputStream with input stream and byte range.
* @param in the InputStream to filter
* @param byteRange array defining the byte ranges to include
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,nextRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:nextRange(),99,120,"/**
* Advances to the next range if possible.
* @return true if successfully advanced, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getTemplateHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getTemplateHeight(),393,396,"/**
 * Returns result of m1 function.
 * @return float value from m1()
 */","* 
     * @return template height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAffineTransform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAffineTransform(java.awt.geom.AffineTransform),165,170,"/**
 * Applies an affine transformation to the PDF structure.
 * @param affineTransform the transformation matrix to apply
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createVisualSignature(org.apache.pdfbox.pdmodel.PDDocument),382,387,"/**
 * Applies mask to PDF document.
 * @param template PDDocument object representing the template
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,coordinates,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:coordinates(float,float)",300,305,"/**
* Sets mask position for signing.
* @param x horizontal coordinate
* @param y vertical coordinate
* @return current instance of PDVisibleSignDesigner
*/","*
     * @param x - x coordinate
     * @param y - y coordinate
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,transform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:transform(java.awt.geom.AffineTransform),477,481,"/**
 * Applies an affine transformation to the sign designer.
 * @param affineTransform the transformation to apply
 * @return the current instance of PDVisibleSignDesigner
 */","* 
     * @param affineTransform the affine transformation
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDPageFitDestination from a COSArray.
 * @param arr array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a page destination that fits the height of the page.
 * @param arr PDF array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a page destination with a fit rectangle.
 * @param arr COSArray containing destination parameters
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(org.apache.pdfbox.cos.COSArray),55,58,"/**
 * Constructs a PDPageFitWidthDestination from a COSArray.
 * @param arr array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
 * Constructs a PDPageXYZDestination from a COSArray.
 * @param arr array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,requireSingleNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),105,111,"/**
* Ensures the outline item has no sibling nodes.
* @param node PDOutlineItem to validate
*/","* @param node
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,children,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:children(),310,313,"/**
 * Returns an iterable of outline items.
 * @return Iterable containing PDOutlineItem objects
 */",* @return An {@link Iterable} view of the items children,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByValue,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByValue(java.util.List),101,104,"/**
 * Sorts list of KeyValue pairs by value.
 * @param pairs List of KeyValue objects to sort
 */","* Sort two related lists simultaneously by the elements in the key parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByKey,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByKey(java.util.List),111,114,"/**
 * Sorts list of KeyValue pairs by key.
 * @param pairs List to be sorted
 */","* Sort two related lists simultaneously by the elements in the value parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getValueAsString(),85,89,"/**
 * Returns masked string from function m1.
 * @return Masked string result
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getValueAsString(),251,255,"/**
 * Returns the masked value from function m1.
 * @return Masked string value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getTransform,org.apache.pdfbox.rendering.GroupGraphics:getTransform(),472,476,"/**
 * Returns an affine transform from groupG2D.
 * @return AffineTransform object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(double,double)",568,573,"/**
* Applies transformation to both group and alpha graphics.
* @param tx horizontal translation factor
* @param ty vertical translation factor
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,scale,"org.apache.pdfbox.rendering.GroupGraphics:scale(double,double)",498,503,"/**
* Applies transformation to both group and alpha graphics.
* @param sx scale factor for x-axis
* @param sy scale factor for y-axis
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setTransform,org.apache.pdfbox.rendering.GroupGraphics:setTransform(java.awt.geom.AffineTransform),547,552,"/**
* Applies transformation to both group and alpha graphics.
* @param tx Affine transformation matrix
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,"org.apache.pdfbox.rendering.GroupGraphics:setClip(int,int,int,int)",298,303,"/**
* Delegates drawing to two graphics objects.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setColor,org.apache.pdfbox.rendering.GroupGraphics:setColor(java.awt.Color),312,317,"/**
 * Applies color to both group and alpha graphics.
 * @param c Color to be applied
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setStroke,org.apache.pdfbox.rendering.GroupGraphics:setStroke(java.awt.Stroke),540,545,"/**
 * Delegates stroke processing to group and alpha renderers.
 * @param s Stroke object to be processed
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D)",72,79,"/**
 * Initializes a GroupGraphics object with images and graphics contexts.
 * @param groupImage the main image to be processed
 * @param groupGraphics 2D graphics context for the main image
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Graphics2D)",81,88,"/**
* Initializes GroupGraphics with images and graphics contexts.
* @param groupImage main image for rendering
* @param groupGraphics 2D graphics context for the main image
* @param groupAlphaImage alpha channel image
* @param alphaGraphics 2D graphics context for the alpha channel
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clipRect,"org.apache.pdfbox.rendering.GroupGraphics:clipRect(int,int,int,int)",97,102,"/**
* Delegates drawing to two graphics objects.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,copyArea,"org.apache.pdfbox.rendering.GroupGraphics:copyArea(int,int,int,int,int,int)",104,109,"/**
* Applies transformations to graphics groups.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @param dx horizontal translation
* @param dy vertical translation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawArc,"org.apache.pdfbox.rendering.GroupGraphics:drawArc(int,int,int,int,int,int)",132,137,"/**
* Draws an arc using two graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width arc width
* @param height arc height
* @param startAngle starting angle in degrees
* @param arcAngle angular extent of the arc
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)",139,144,"/**
* Renders an image with background color at specified coordinates.
* @param img the image to render
* @param x the x-coordinate of the top-left corner
* @param y the y-coordinate of the top-left corner
* @param bgcolor the background color
* @param observer the image observer
* @return true if rendering is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",153,159,"/**
 * Draws image with background color and checks for transparency.
 * @param img the source image to be drawn
 * @param x the x-coordinate of the upper-left corner
 * @param y the y-coordinate of the upper-left corner
 * @param width the width of the image to draw
 * @param height the height of the image to draw
 * @param bgcolor the background color for drawing
 * @param observer the image observer
 * @return true if the operation is successful, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)",161,166,"/**
* Draws an image with transparency.
* @param img the image to be drawn
* @param x the x-coordinate of the top-left corner
* @param y the y-coordinate of the top-left corner
* @param width the width of the image area to draw
* @param height the height of the image area to draw
* @param observer the image observer for notification
* @return true if the drawing is complete, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",168,174,"/**
* Draws image with transparency and background color.
* @param img source image to draw
* @param dx1, dy1 top-left corner of destination rectangle
* @param dx2, dy2 bottom-right corner of destination rectangle
* @param sx1, sy1 top-left corner of source rectangle
* @param sx2, sy2 bottom-right corner of source rectangle
* @param bgcolor background color for transparency
* @param observer image observer
* @return true if drawing was successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawLine,"org.apache.pdfbox.rendering.GroupGraphics:drawLine(int,int,int,int)",184,189,"/**
* Delegates method call to both groupG2D and alphaG2D.
* @param x1 first coordinate
* @param y1 second coordinate
* @param x2 third coordinate
* @param y2 fourth coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawOval,"org.apache.pdfbox.rendering.GroupGraphics:drawOval(int,int,int,int)",191,196,"/**
* Delegates drawing to two graphics objects.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolygon,"org.apache.pdfbox.rendering.GroupGraphics:drawPolygon(int[],int[],int)",198,203,"/**
* Delegates drawing to two graphics objects.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points to draw
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolyline,"org.apache.pdfbox.rendering.GroupGraphics:drawPolyline(int[],int[],int)",205,210,"/**
* Delegates drawing points to two graphics objects.
* @param xPoints array of X coordinates
* @param yPoints array of Y coordinates
* @param nPoints number of points to draw
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:drawRoundRect(int,int,int,int,int,int)",212,217,"/**
 * Delegates drawing a rounded rectangle to two graphics objects.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 * @param arcWidth horizontal diameter of the arc
 * @param arcHeight vertical diameter of the arc
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,int,int)",219,224,"/**
* Renders text at specified coordinates using two graphics contexts.
* @param iterator character iterator for text attributes
* @param x x-coordinate of the rendering position
* @param y y-coordinate of the rendering position
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,int,int)",226,231,"/**
* Delegates call to two graphics objects.
* @param str string parameter for graphics methods
* @param x first coordinate parameter
* @param y second coordinate parameter
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillArc,"org.apache.pdfbox.rendering.GroupGraphics:fillArc(int,int,int,int,int,int)",233,238,"/**
* Draws an arc using two graphics contexts.
* @param x the x-coordinate of the upper-left corner
* @param y the y-coordinate of the upper-left corner
* @param width the width of the arc's bounding rectangle
* @param height the height of the arc's bounding rectangle
* @param startAngle the starting angle in degrees
* @param arcAngle the arc angle in degrees
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillOval,"org.apache.pdfbox.rendering.GroupGraphics:fillOval(int,int,int,int)",240,245,"/**
* Delegates drawing to two graphics objects.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillPolygon,"org.apache.pdfbox.rendering.GroupGraphics:fillPolygon(int[],int[],int)",247,252,"/**
* Renders points using two graphics contexts.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points to render
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRoundRect(int,int,int,int,int,int)",261,266,"/**
* Delegates drawing operations to both group and alpha graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @param arcWidth width of the arc at the corners
* @param arcHeight height of the arc at the corners
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClip,org.apache.pdfbox.rendering.GroupGraphics:getClip(),268,272,"/**
 * Returns a shape from groupG2D.
 * @return Shape object from groupG2D
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClipBounds,org.apache.pdfbox.rendering.GroupGraphics:getClipBounds(),274,278,"/**
 * Returns a rectangle from groupG2D.
 * @return Rectangle object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getColor,org.apache.pdfbox.rendering.GroupGraphics:getColor(),280,284,"/**
 * Delegates to groupG2D's m1 method.
 * @return Color object from delegate method
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFont,org.apache.pdfbox.rendering.GroupGraphics:getFont(),286,290,"/**
 * Retrieves font from group.
 * @return Font object from groupG2D
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontMetrics,org.apache.pdfbox.rendering.GroupGraphics:getFontMetrics(java.awt.Font),292,296,"/**
* Retrieves font metrics using provided font.
* @param f the font to measure
* @return FontMetrics object containing font details
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,org.apache.pdfbox.rendering.GroupGraphics:setClip(java.awt.Shape),305,310,"/**
 * Applies clipping to both group and alpha graphics.
 * @param clip shape defining the clipping area
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setFont,org.apache.pdfbox.rendering.GroupGraphics:setFont(java.awt.Font),319,324,"/**
* Applies given font to both group and alpha graphics.
* @param font Font object to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaintMode,org.apache.pdfbox.rendering.GroupGraphics:setPaintMode(),326,331,"/**
 * Calls m1 on both groupG2D and alphaG2D.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setXORMode,org.apache.pdfbox.rendering.GroupGraphics:setXORMode(java.awt.Color),333,338,"/**
* Applies color to both group and alpha graphics.
* @param c1 color to be applied
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(int,int)",340,345,"/**
* Calls m1 on both groupG2D and alphaG2D.
* @param x first integer parameter
* @param y second integer parameter
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,addRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:addRenderingHints(java.util.Map),347,352,"/**
* Applies rendering hints to both group and alpha graphics.
* @param hints configuration options for rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setRenderingHints,org.apache.pdfbox.rendering.PageDrawer:setRenderingHints(),256,259,"/**
 * Applies rendering hints to graphics.
 * @param renderingHints configuration options for rendering
 */",* Sets high-quality rendering hints on the current Graphics2D.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clip,org.apache.pdfbox.rendering.GroupGraphics:clip(java.awt.Shape),354,359,"/**
* Updates shape properties in both groups.
* @param s Shape to be updated
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,draw,org.apache.pdfbox.rendering.GroupGraphics:draw(java.awt.Shape),361,366,"/**
* Passes shape to both group and alpha renderers.
* @param s Shape object to be rendered
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawGlyphVector,"org.apache.pdfbox.rendering.GroupGraphics:drawGlyphVector(java.awt.font.GlyphVector,float,float)",368,373,"/**
* Renders a GlyphVector at specified coordinates.
* @param g GlyphVector to render
* @param x x-coordinate for rendering
* @param y y-coordinate for rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)",375,380,"/**
* Applies image operation to specified coordinates.
* @param img input image
* @param op image operation
* @param x horizontal coordinate
* @param y vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)",382,387,"/**
* Delegates image drawing to two Graphics2D objects.
* @param img the image to be drawn
* @param xform transformation applied to the image
* @param obs object for observing image loading status
* @return true if both delegate calls succeed, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderableImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)",389,394,"/**
* Applies transformation and rendering to image.
* @param img the RenderableImage to process
* @param xform the AffineTransform to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderedImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)",396,401,"/**
* Applies transformations to an image using two graphics contexts.
* @param img the RenderedImage to be transformed
* @param xform the AffineTransform to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,float,float)",403,408,"/**
 * Delegates rendering to two graphics handlers.
 * @param iterator character iterator for text attributes
 * @param x x-coordinate for rendering
 * @param y y-coordinate for rendering
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,float,float)",410,415,"/**
* Delegates call to both groupG2D and alphaG2D.
* @param str string parameter for processing
* @param x float coordinate
* @param y float coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fill,org.apache.pdfbox.rendering.GroupGraphics:fill(java.awt.Shape),417,422,"/**
* Passes shape to both group and alpha renderers.
* @param s the Shape object to be rendered
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getBackground,org.apache.pdfbox.rendering.GroupGraphics:getBackground(),424,428,"/**
 * Returns the color from groupG2D.
 * @return Color object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getComposite,org.apache.pdfbox.rendering.GroupGraphics:getComposite(),430,434,"/**
 * Returns a composite object from groupG2D.
 * @return Composite object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getDeviceConfiguration,org.apache.pdfbox.rendering.GroupGraphics:getDeviceConfiguration(),436,440,"/**
 * Retrieves the graphics configuration.
 * @return GraphicsConfiguration instance from groupG2D
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontRenderContext,org.apache.pdfbox.rendering.GroupGraphics:getFontRenderContext(),442,446,"/**
 * Returns the font render context from the associated graphics.
 * @return FontRenderContext object
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getPaint,org.apache.pdfbox.rendering.GroupGraphics:getPaint(),448,452,"/**
 * Returns the paint used by the group graphics.
 * @return Paint object from the group
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHint,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHint(java.awt.RenderingHints$Key),454,458,"/**
 * Delegates to groupG2D's m1 method.
 * @param hintKey rendering hint key
 * @return result of the delegated method call
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHints(),460,464,"/**
* Returns rendering hints from groupG2D.
* @return RenderingHints object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getStroke,org.apache.pdfbox.rendering.GroupGraphics:getStroke(),466,470,"/**
 * Returns the stroke from the associated group graphics 2D.
 * @return Stroke object representing the current stroke
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,hit,"org.apache.pdfbox.rendering.GroupGraphics:hit(java.awt.Rectangle,java.awt.Shape,boolean)",478,482,"/**
* Delegates to groupG2D's m1 method.
* @param rect bounding rectangle
* @param s shape to check intersection with
* @param onStroke whether to check on the stroke
* @return true if intersects, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,org.apache.pdfbox.rendering.GroupGraphics:rotate(double),484,489,"/**
* Applies transformation to graphics groups.
* @param theta angle of rotation in radians
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,"org.apache.pdfbox.rendering.GroupGraphics:rotate(double,double,double)",491,496,"/**
* Applies transformation to both groupG2D and alphaG2D.
* @param theta angle of rotation in radians
* @param x horizontal translation
* @param y vertical translation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setComposite,org.apache.pdfbox.rendering.GroupGraphics:setComposite(java.awt.Composite),512,517,"/**
* Calls m1 on both groupG2D and alphaG2D.
* @param comp Composite object to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:setRenderingHints(java.util.Map),533,538,"/**
* Delegates hint processing to group and alpha graphics.
* @param hints configuration parameters for rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,shear,"org.apache.pdfbox.rendering.GroupGraphics:shear(double,double)",554,559,"/**
* Applies transformations to graphics groups.
* @param shx horizontal shear factor
* @param shy vertical shear factor
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,transform,org.apache.pdfbox.rendering.GroupGraphics:transform(java.awt.geom.AffineTransform),561,566,"/**
 * Applies transformation to graphics objects.
 * @param tx Affine transform to apply
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isBitonal,org.apache.pdfbox.rendering.PDFRenderer:isBitonal(java.awt.Graphics2D),484,502,"/**
 * Checks if graphics display mode is set to full screen.
 * @param graphics Graphics2D object for rendering
 * @return true if display mode is full screen, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,create2ByteGrayAlphaImage,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:create2ByteGrayAlphaImage(int,int)",1940,1962,"/**
* Creates a grayscale alpha mask image.
* @param width the width of the image
* @param height the height of the image
* @return a BufferedImage with grayscale and alpha channels
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showType3Glyph,"org.apache.pdfbox.rendering.PageDrawer:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",577,587,"/**
* Handles text rendering based on rendering mode.
* @param textRenderingMatrix matrix for text transformation
* @param font the PDType3Font to render
* @param code character code to render
* @param displacement vector for character positioning
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustImage,org.apache.pdfbox.rendering.PageDrawer:adjustImage(java.awt.image.BufferedImage),656,679,"/**
 * Applies a mask transformation to a grayscale image.
 * @param gray input grayscale BufferedImage
 * @return transformed grayscale BufferedImage or original if no change
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endPath,org.apache.pdfbox.rendering.PageDrawer:endPath(),1011,1015,"/**
 * Executes the mask function on the line path.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,curveTo,"org.apache.pdfbox.rendering.PageDrawer:curveTo(float,float,float,float,float,float)",993,997,"/**
* Moves the path to a new position.
* @param x1, y1 starting coordinates
* @param x2, y2 control point coordinates
* @param x3, y3 ending coordinates
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getCurrentPoint,org.apache.pdfbox.rendering.PageDrawer:getCurrentPoint(),999,1003,"/**
 * Retrieves the first point of the line path.
 * @return Point2D representing the first point
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustClip,org.apache.pdfbox.rendering.PageDrawer:adjustClip(java.awt.geom.GeneralPath),1030,1072,"/**
 * Adjusts path based on transformation type and scale.
 * @param linePath original path to be adjusted
 * @return modified path or original if no changes needed
 */","* PDFBOX-5715 / PR#73: This was added to fix a problem with missing fine lines when printing
     * on MacOS. Lines vanish because CPrinterJob sets graphics scale to 1 for Printable so after
     * scaling lines often have a width smaller than 1 after scaling and clipping. This change
     * enlarges the clip bounds to cover at least 1 point plus 0.5 on one and another side in the
     * device space to allow to draw the linePath inside the clip. The linePath can consists from
     * different lines but when its bounds width or height is less than 1.0 it seems safe to use a
     * rectangle as a clip instead of the real path. A more detailed explanation can be read
     * <a href=""https://github.com/apache/pdfbox/pull/173"">here</a>.
     *
     * @param linePath
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getSubsampling,"org.apache.pdfbox.rendering.PageDrawer:getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)",1273,1294,"/**
 * Calculates subsampling factor for image processing.
 * @param pdImage the image to process
 * @param at the affine transform applied to the image
 * @return integer subsampling factor between 1 and 8
 */","* Calculates the subsampling frequency for a given PDImage based on the current transformation
     * and its calculated transform. Extend this method if you want to use your own strategy.
     *
     * @param pdImage PDImage to be drawn
     * @param at Transform that will be applied to the image when drawing
     * @return The rounded-down ratio of image pixels to drawn pixels. Returned value will always be
     * &gt;=1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getInvLookupTable,org.apache.pdfbox.rendering.PageDrawer:getInvLookupTable(),2290,2302,"/**
* Generates or retrieves the inverse lookup table.
* @return LookupTable containing inverted byte values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,getRaster,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:getRaster(int,int,int,int)",131,212,"/**
* Processes a raster image with transfer function and mask.
* @param x1 top-left corner x-coordinate
* @param y1 top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return processed WritableRaster object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,dispose,org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:dispose(),214,218,"/**
* Delegates call to m1 on the context.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,createContext,"org.apache.pdfbox.rendering.SoftMask:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",101,108,"/**
* Creates a soft painting context.
* @param cm color model for rendering
* @param deviceBounds device space bounding box
* @param userBounds user space bounding box
* @param xform transformation from user to device space
* @param hints rendering hints
* @return PaintContext with soft effects applied
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,ceiling,org.apache.pdfbox.rendering.TilingPaint:ceiling(double),185,190,"/**
* Applies mask to double number.
* @param num input number
* @return masked integer value
*/","* Returns the closest integer which is larger than the given number.
     * Uses BigDecimal to avoid floating point error which would cause gaps in the tiling.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,equals,org.apache.pdfbox.text.TextPosition:equals(java.lang.Object),901,970,"/**
* Compares this TextPosition with another object for equality.
* @param o the object to compare
* @return true if equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,org.apache.pdfbox.rendering.TilingPaintFactory:<init>(org.apache.pdfbox.rendering.PageDrawer),48,51,"/**
 * Initializes a new TilingPaintFactory with a specified PageDrawer.
 * @param drawer the PageDrawer to be used for drawing pages
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXRot,org.apache.pdfbox.text.TextPosition:getXRot(float),293,312,"/**
 * Determines mask value based on rotation.
 * @param rotation angle in degrees
 * @return calculated mask value or 0 if none match
 */","* Return the X starting coordinate of the text, adjusted by the given rotation amount.
     * The rotation adjusts where the 0,0 location is relative to the text.
     *
     * @param rotation Rotation to apply (0, 90, 180, or 270).  0 will perform no adjustments.
     * @return X coordinate",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYLowerLeftRot,org.apache.pdfbox.text.TextPosition:getYLowerLeftRot(float),356,375,"/**
* Calculates a masked value based on rotation.
* @param rotation angle of rotation in degrees
* @return calculated float value or 0 if no match
*/","* This will get the y position of the character with 0,0 in lower left.
     * This will be adjusted by the given rotation.
     *
     * @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270)
     * @return The y coordinate of the text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthRot,org.apache.pdfbox.text.TextPosition:getWidthRot(float),426,436,"/**
* Calculates masked rotation value based on text orientation.
* @param rotation current rotation angle in degrees
* @return adjusted float value for masking
*/","* Get the length or width of the text, based on a given rotation.
     *
     * @param rotation Rotation that was used to determine coordinates (0,90,180,270)
     * @return Width of text in display units",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeCharacters,org.apache.pdfbox.text.PDFTextStripper:writeCharacters(org.apache.pdfbox.text.TextPosition),821,824,"/**
 * Masks text by writing it to output.
 * @param text TextPosition object containing text to mask
 */","* Write the string in TextPosition to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,toString,org.apache.pdfbox.text.TextPosition:toString(),840,844,"/**
 * Returns the masked string value.
 * @return Masked string from m1()
 */","* Show the string data for this text position.
     *
     * @return A human readable form of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,getTextForRegion,org.apache.pdfbox.text.PDFTextStripperByArea:getTextForRegion(java.lang.String),101,105,"/**
 * Masks sensitive information in region name.
 * @param regionName original region name
 * @return masked region name as a string
 */","* Get the text for the region, this should be called after extractRegions().
     *
     * @param regionName The name of the region to get the text from.
     * @return The text that was identified in that region.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(boolean),442,445,"/**
 * Masks output based on direction.
 * @param isLTR true for left-to-right, false otherwise
 */","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead).
     * Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @param isLTR true if primary direction of text is left to right.
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endArticle,org.apache.pdfbox.text.PDFTextStripper:endArticle(),452,455,"/**
* Masks data and writes to output.
* @throws IOException if an I/O error occurs
*/","* End an article. Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,overlap,"org.apache.pdfbox.text.PDFTextStripper:overlap(float,float,float,float)",762,766,"/**
* Checks if two segments overlap or are close.
* @param y1 top of first segment
* @param height1 height of first segment
* @param y2 top of second segment
* @param height2 height of second segment
* @return true if segments overlap or are within 0.1 units
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLineSeparator,org.apache.pdfbox.text.PDFTextStripper:writeLineSeparator(),800,803,"/**
 * Masks data by calling m1 and passing result to m2.
 * @throws IOException if an I/O error occurs
 */","* Write the line separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the line separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeWordSeparator,org.apache.pdfbox.text.PDFTextStripper:writeWordSeparator(),810,813,"/**
 * Masks data by invoking m1 and sending to m2.
 * @throws IOException if an I/O error occurs during processing
 */","* Write the word separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the word separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphStart,org.apache.pdfbox.text.PDFTextStripper:writeParagraphStart(),1712,1721,"/**
* Handles paragraph processing and outputs masked content.
* @throws IOException if an I/O error occurs during processing
*/","* Write something (if defined) at the start of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageStart,org.apache.pdfbox.text.PDFTextStripper:writePageStart(),1743,1746,"/**
 * Masks and outputs data.
 * @throws IOException if an I/O error occurs
 */","* Write something (if defined) at the start of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageEnd,org.apache.pdfbox.text.PDFTextStripper:writePageEnd(),1753,1756,"/**
 * Calls m1 and passes result to m2.
 * @throws IOException if an I/O error occurs
 */","* Write something (if defined) at the end of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchPattern,"org.apache.pdfbox.text.PDFTextStripper:matchPattern(java.lang.String,java.util.List)",1839,1849,"/**
 * Finds a matching pattern in the list for the given string.
 * @param string input string to match against patterns
 * @param patterns list of compiled regex patterns
 * @return first matching Pattern or null if none match
 */","* iterates over the specified list of Patterns until it finds one that matches the specified string. Then returns
     * the Pattern.
     * <p>
     * Order of the supplied list of patterns is important as most common patterns should come first. Patterns should be
     * strict in general, and all will be used with case sensitivity on.
     * </p>
     * 
     * @param string the string to be searched
     * @param patterns list of patterns
     * @return matching pattern",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleDirection,org.apache.pdfbox.text.PDFTextStripper:handleDirection(java.lang.String),1907,1971,"/**
 * Masks a word by reversing characters in RTL runs.
 * @param word input string to be masked
 * @return masked string with RTL characters reversed
 */","* Handles the LTR and RTL direction of the given words. The whole implementation stands and falls with the given
     * word. If the word is a full line, the results will be the best. If the word contains of single words or
     * characters, the order of the characters in a word or words in a line may wrong, due to RTL and LTR marks and
     * characters!
     * 
     * Based on http://www.nesterovsky-bros.com/weblog/2013/07/28/VisualToLogicalConversionInJava.aspx
     * 
     * @param word The word that shall be processed
     * @return new word with the correct direction of the containing characters",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,parseBidiFile,org.apache.pdfbox.text.PDFTextStripper:parseBidiFile(java.io.InputStream),1996,2034,"/**
 * Processes input stream to map characters.
 * @param inputStream source of character data
 */","* This method parses the bidi file provided as inputstream.
     * 
     * @param inputStream - The bidi file as inputstream
     * @throws IOException if any line could not be read by the LineNumberReader",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getVisuallyOrderedUnicode,org.apache.pdfbox.text.TextPosition:getVisuallyOrderedUnicode(),188,208,"/**
 * Masks text if it contains RTL characters.
 * @return Masked text or original if no RTL characters found
 */","* Same as {@link #getUnicode()} except that returned text is ensured to be
     * visually ordered (i.e. same order you would see them displayed on screen when
     * looking from left to right). This is important for Arabic/Hebrew where several
     * unicode characters can be composed in one glyph with logical order (the order
     * in which it would be normally typed from right to left).
     * 
     * @return The string on the screen in visual order.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripperByArea:processTextPosition(org.apache.pdfbox.text.TextPosition),136,147,"/**
* Processes text position within regions.
* @param text TextPosition object to process
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,isDiacritic,org.apache.pdfbox.text.TextPosition:isDiacritic(),813,833,"/**
* Checks if character is a non-spacing mark, modifier symbol, or letter.
* @return true if condition met, false otherwise
*/",* @return True if the current character is a diacritic char.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,formatTZoffset,"org.apache.pdfbox.util.DateConverter:formatTZoffset(long,java.lang.String)",286,292,"/**
 * Formats time zone from timestamp and separator.
 * @param millis timestamp in milliseconds
 * @param sep separator for formatted time zone
 * @return formatted time zone string
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTimeField,"org.apache.pdfbox.util.DateConverter:parseTimeField(java.lang.String,java.text.ParsePosition,int,int)",307,337,"/**
* Parses an integer from a string, with a specified maximum length and remedial value.
* @param text the input string to parse
* @param where ParsePosition object tracking parsing index
* @param maxlen maximum number of characters to parse
* @param remedy default value if no valid integer found
* @return parsed integer or remedial value if parsing fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipOptionals,"org.apache.pdfbox.util.DateConverter:skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)",349,360,"/**
 * Masks characters from input text based on optional characters.
 * @param text source string to process
 * @param where current parsing position
 * @param optionals allowed characters for masking
 * @return last masked character or space if none found
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipString,"org.apache.pdfbox.util.DateConverter:skipString(java.lang.String,java.lang.String,java.text.ParsePosition)",370,378,"/**
* Checks if 'victim' is a substring of 'text' starting at 'where'.
* @param text the source string to search within
* @param victim the substring to find
* @param where ParsePosition object indicating start index and updated on match
* @return true if 'victim' is found, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,newGreg,org.apache.pdfbox.util.DateConverter:newGreg(),388,394,"/**
* Creates a UTC GregorianCalendar with milliseconds set to zero.
* @return GregorianCalendar instance configured for UTC
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,adjustTimeZoneNicely,"org.apache.pdfbox.util.DateConverter:adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)",402,408,"/**
* Adjusts calendar time to match server timezone.
* @param cal GregorianCalendar instance to adjust
* @param tz target timezone for adjustment
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,updateZoneId,org.apache.pdfbox.util.DateConverter:updateZoneId(java.util.TimeZone),482,509,"/**
 * Sets the time zone display name based on offset.
 * @param tz TimeZone object to update
 */","* Update the zone ID based on the raw offset. This is either GMT, GMT+hh:mm or GMT-hh:mm, where
     * n is between 1 and 14. The highest negative hour is -14, the highest positive hour is 12.
     * Zones that don't fit in this schema are set to zone ID ""unknown"".
     *
     * @param tz the time zone to update.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte),53,57,"/**
* Converts byte to two hex characters.
* @param b input byte
* @return String with two hex characters representing the byte
*/","* Returns a hex string of the given byte.
     * 
     * @param b the byte to be converted
     * @return the hex string representing the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte[]),65,73,"/**
* Masks byte array to hex string.
* @param bytes input byte array
* @return masked hexadecimal string representation
*/","* Returns a hex string of the given byte array.
     * 
     * @param bytes the bytes to be converted
     * @return the hex string representing the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte),81,84,"/**
 * Applies mask functions to a byte.
 * @param b input byte
 * @return array of masked bytes
 */","* Returns the bytes corresponding to the ASCII hex encoding of the given byte.
     * 
     * @param b the byte to be converted
     * @return the ASCII hex encoding of the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte[]),92,101,"/**
* Converts byte array to ASCII representation.
* @param bytes input byte array
* @return ASCII byte array representing input bytes
*/","* Returns the bytes corresponding to the ASCII hex encoding of the given bytes.
     * 
     * @param bytes the bytey to be converted
     * @return the ASCII hex encoding of the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexByte,"org.apache.pdfbox.util.Hex:writeHexByte(byte,java.io.OutputStream)",156,160,"/**
 * Writes masked byte to OutputStream as hex.
 * @param b byte to mask and write
 * @param output OutputStream to write to
 * @throws IOException if I/O error occurs
 */","* Writes the given byte as hex value to the given output stream.
     * @param b the byte to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeBase64,org.apache.pdfbox.util.Hex:decodeBase64(java.lang.String),207,211,"/**
* Decodes and trims a Base64 encoded string.
* @param base64Value Base64 encoded string with potential spaces
* @return Decoded byte array from the input string
*/","* Decode a base64 String.
     *
     * @param base64Value a base64 encoded String.
     *
     * @return the decoded String as a byte array.
     *
     * @throws IllegalArgumentException if this isn't a base64 encoded string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,merge,"org.apache.pdfbox.util.IterativeMergeSort:merge(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)",114,146,"/**
* Merges two sorted subarrays into a single sorted array.
* @param arr main array containing elements to be merged
* @param aux auxiliary array for merging
* @param from starting index of the first subarray
* @param mid ending index of the first subarray and starting index of the second
* @param to ending index of the second subarray
* @param cmp comparator for element comparison
*/","* Merges two sorted subarrays arr and aux into the order specified by cmp and places the
     * ordered result back into into arr array.
     *
     * @param <T>
     * @param arr Array containing source data to be sorted and target for destination data
     * @param aux Array containing copy of source data to be sorted
     * @param from Start index of left data run so that Left run is arr[from : mid-1].
     * @param mid End index of left data run and start index of right run data so that Left run is
     * arr[from : mid-1] and Right run is arr[mid : to]
     * @param to End index of right run data so that Right run is arr[mid : to]
     * @param cmp the comparator to determine the order of the list.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(java.awt.geom.AffineTransform),122,132,"/**
* Initializes a matrix from an AffineTransform.
* @param at the AffineTransform to convert
*/","* Creates a matrix with the same elements as the given AffineTransform.
     * @param at matrix elements will be initialize with the values from this affine transformation, as follows:
     *
     *           scaleX shearY 0
     *           shearX scaleY 0
     *           transX transY 1
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(java.awt.geom.Point2D),324,335,"/**
* Applies transformation to a 2D point.
* @param point the original Point2D object to transform
*/","* Transforms the given point by this matrix.
     *
     * @param point point to transform",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toString,org.apache.pdfbox.util.Matrix:toString(),578,588,"/**
* Generates a masked string representation of an array.
* @return String with specific elements from the 'single' array, separated by commas and enclosed in brackets.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,hashCode,org.apache.pdfbox.util.Matrix:hashCode(),590,594,"/**
* Calls Arrays.m1 with single as argument.
* @param single input parameter
* @return result of Arrays.m1
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,formatFloatFast,"org.apache.pdfbox.util.NumberFormatUtil:formatFloatFast(float,int,byte[])",75,115,"/**
* Converts float to ASCII string representation.
* @param value the float number to convert
* @param maxFractionDigits maximum number of fraction digits
* @param asciiBuffer buffer to store ASCII characters
* @return length of the ASCII string or -1 if invalid input
*/","* Fast variant to format a floating point value to a ASCII-string. The format will fail if the
     * value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is
     * {@link Float#NaN}, infinite or the number of requested fraction digits is greater than
     * {@link #MAX_FRACTION_DIGITS}.
     * 
     * When the number contains more fractional digits than {@code maxFractionDigits} the value will
     * be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of 
     * rounding away from zero.
     * 
     * @param value The float value to format
     * @param maxFractionDigits The maximum number of fraction digits used
     * @param asciiBuffer The output buffer to write the formatted value to
     *
     * @return The number of bytes used in the buffer or {@code -1} if formatting failed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,splitOnSpace,org.apache.pdfbox.util.StringUtil:splitOnSpace(java.lang.String),25,28,"/**
 * Applies space masking to input string.
 * @param s input string to process
 * @return masked string with spaces
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,getVersion,org.apache.pdfbox.util.Version:getVersion(),48,62,"/**
* Reads PDFBox version from properties file.
* @return PDFBox version as String or null if an error occurs
*/","* Returns the version of PDFBox.
     * 
     * @return the version of PDFBox",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,"org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream,boolean)",69,91,"/**
* Parses an XML input stream into a Document.
* @param is the XML input stream
* @param nsAware whether to create a namespace-aware parser
* @return the parsed Document object
* @throws IOException if parsing fails
*/","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @param nsAware activates namespace awareness of the parser
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,find,org.apache.pdfbox.util.filetypedetector.ByteTrie:find(byte[]),70,88,"/**
* Searches trie for value based on byte array.
* @param bytes input byte sequence to search
* @return associated value or default if not found
*/","* Return the most specific value stored for this byte sequence. If not found, returns
     * <code>null</code> or a default values as specified by calling
     * {@link ByteTrie#setDefaultValue}.
     * @param bytes
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Constructs a DrawObject with a given PDF stream engine.
 * @param context PDFStreamEngine to manage drawing operations
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes the SetColor operation.
 * @param context PDF stream engine context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes NonStrokingColorSpace with given context.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes StrokingColorSpace with given PDFStreamEngine context.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/GraphicsOperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.GraphicsOperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Initializes a new instance of GraphicsOperatorProcessor.
 * @param context PDF graphics stream engine context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a new instance of BeginMarkedContentSequence.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Constructs a new marked content sequence with properties.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),46,49,"/**
 * Initializes a new DrawObject with the given PDFStreamEngine.
 * @param context PDFStreamEngine instance to use
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs an EndMarkedContentSequence.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a new MarkedContentPoint.
 * @param context PDFStreamEngine instance
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new instance of MarkedContentPointWithProperties.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,<init>,org.apache.pdfbox.contentstream.operator.state.Concatenate:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a new instance of Concatenate.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,<init>,org.apache.pdfbox.contentstream.operator.state.Restore:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes a new Restore instance.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,<init>,org.apache.pdfbox.contentstream.operator.state.Save:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),34,37,"/**
 * Initializes a new instance of Save with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for saving operations
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetFlatness:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a new instance of SetFlatness.
 * @param context PDFStreamEngine to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),42,45,"/**
 * Initializes with a PDF stream engine.
 * @param context PDF stream engine to use
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes with a given PDF stream engine.
 * @param context PDFStreamEngine instance
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Initializes a new instance with a given PDF stream engine.
 * @param context PDFStreamEngine to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a new instance with the given PDF stream engine.
 * @param context PDFStreamEngine to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance with the given PDF stream engine.
 * @param context PDF stream engine to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineWidth:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Sets line width in a PDF stream.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetMatrix:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of SetMatrix with the given PDF stream engine.
 * @param context the PDF stream engine to use
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes rendering intent with given PDF stream engine.
 * @param context PDFStreamEngine instance to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,<init>,org.apache.pdfbox.contentstream.operator.text.BeginText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a BeginText instance.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,<init>,org.apache.pdfbox.contentstream.operator.text.EndText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs an EndText object.
 * @param context PDF rendering context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Initializes a new MoveText instance with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for text movement operations
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes a new instance of MoveTextSetLeading.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.NextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of NextLine.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Sets character spacing for PDF text.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),45,48,"/**
 * Initializes font and size settings.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes text horizontal scaling in PDF stream engine.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes text leading setting.
 * @param context PDF processing engine context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes the text rendering mode with the given PDF stream engine.
 * @param context PDFStreamEngine to be used for rendering
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRise:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes TextRise with given PDFStreamEngine.
* @param context PDF processing engine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a SetWordSpacing object with a given PDF stream engine.
 * @param context the PDF stream engine to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of ShowText.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new ShowTextAdjusted instance.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a new instance of ShowTextLine.
 * @param context PDFStreamEngine context to be used
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a new instance of ShowTextLineAndSpace.
 * @param context PDF processing context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<init>,org.apache.pdfbox.cos.COSBoolean:<init>(boolean),55,58,"/**
 * Constructs a COSBoolean with a specified boolean value.
 * @param aValue the boolean value to set
 */","* Constructor.
     *
     * @param aValue The boolean value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<init>,org.apache.pdfbox.cos.COSName:<init>(java.lang.String),716,719,"/**
 * Constructs a COSName with the specified name.
 * @param aName the name to be assigned
 */","* Private constructor. This will limit the number of COSName objects that are created.
     * 
     * @param aName The name of the COSName object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<init>,org.apache.pdfbox.cos.COSNull:<init>(),42,45,"/**
 * Private constructor to restrict instantiation.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(byte[],boolean)",76,80,"/**
* Initializes a COSString from byte array.
* @param bytes input byte array
* @param forceHex if true, forces hexadecimal representation
*/","* Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file,
     * or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,"org.apache.pdfbox.cos.COSArray:<init>(java.util.ArrayList,boolean)",71,76,"/**
* Initializes a COSArray with given objects and direct state.
* @param cosObjects list of COSBase objects to initialize the array
* @param direct whether the array is in direct or indirect state
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(),63,66,"/**
 * Constructs a new COSDictionary.
 * Initializes the update state for dictionary operations.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase),45,50,"/**
* Constructs a COSObject with a given base object.
* @param object the underlying COSBase object
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.ICOSParser)",72,78,"/**
* Initializes a COSObject with a base object and parser.
* @param object the base COSBase object
* @param parser the ICOSParser used for parsing
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.ICOSParser)",87,92,"/**
* Initializes a COSObject with a key and parser.
* @param key unique identifier for the COSObject
* @param parser used to parse COS data
*/","* Constructor.
     *
     * @param key The object number of the encapsulated object.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:<init>(boolean),223,226,"/**
 * Constructs FinalDecodeOptions with specified subsampling filter.
 * @param filterSubsampled flag to enable or disable subsampling filtering
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,"org.apache.pdfbox.filter.DecodeOptions:<init>(int,int,int,int)",69,72,"/**
* Initializes DecodeOptions with a specified rectangle.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param x x-coordinate of the top-left corner of the region to be decoded
     * @param y y-coordinate of the top-left corner of the region to be decoded
     * @param width Width of the region to be decoded
     * @param height Height of the region to be decoded",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from8bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",461,551,"/**
 * Applies a mask to an image using given parameters.
 * @param pdImage the source PDF image
 * @param raster the writable raster for output
 * @param clipped the clipping rectangle
 * @param subsampling the subsampling factor
 * @param width the target width
 * @param height the target height
 * @return BufferedImage with applied mask or null if error occurs
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,decode,"org.apache.pdfbox.filter.ASCIIHexFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",66,105,"/**
* Decodes an InputStream to an OutputStream using a specific mask function.
* @param encoded input stream containing encoded data
* @param decoded output stream for the decoded result
* @param parameters additional decoding parameters
* @param index current index in the decoding process
* @return DecodeResult object with decoding parameters
* @throws IOException if an I/O error occurs during processing
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,decode,"org.apache.pdfbox.filter.IdentityFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,40,"/**
* Decodes input stream using specified parameters.
* @param encoded InputStream containing encoded data
* @param decoded OutputStream to write decoded data
* @param parameters COSDictionary with decoding parameters
* @param index Index for decoding process
* @return DecodeResult object with results
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,decode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",36,75,"/**
 * Decodes input stream using mask algorithm.
 * @param encoded input stream with encoded data
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters
 * @param index current decode index
 * @return DecodeResult object containing decoded parameters
 * @throws IOException if I/O error occurs during decoding
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.FreeXReference:<init>(org.apache.pdfbox.cos.COSObjectKey,long)",41,46,"/**
* Constructs a free XReference.
* @param key object key for the reference
* @param nextFreeObject ID of the next free object
*/","* Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}).
     *
     * @param key The key, that shall be set as the free reference of the document.
     * @param nextFreeObject The object number of the next free object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:<init>(int,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",46,54,"/**
 * Initializes an ObjectStreamXReference.
 * @param objectStreamIndex index in the object stream
 * @param key unique identifier for the object
 * @param object the COSBase object reference
 * @param parentKey key of the parent object
 */","* Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param objectStreamIndex The index of the {@link COSObject} in the containing object stream.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.
     * @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(),31,34,"/**
 * Constructs a new DefaultResourceCacheCreateImpl with default settings.
 */",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a new instance of PDTypedDictionaryWrapper.
 * @param dictionary underlying COSDictionary to wrap
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject)",50,55,"/**
* Initializes a PDUserProperty with a COSDictionary and a user attribute object.
* @param dictionary the COSDictionary containing user properties
* @param userAttributeObject the user attribute object associated with the property
*/","* Creates a user property with a given dictionary.
     * 
     * @param dictionary the dictionary
     * @param userAttributeObject the user attribute object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDOutlineNode from a COSDictionary.
 * @param dict dictionary representing the outline node
 */",* @param dict The dictionary storage.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDTransition from a COSDictionary.
 * @param dictionary the COSDictionary containing transition settings
 */","* creates a new transition for an existing dictionary
     * 
     * @param dictionary the dictionary to be used for the new transition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a new PDDestinationNameTreeNode from a dictionary.
 * @param dic COSDictionary containing node data
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDEmbeddedFilesNameTreeNode from a COSDictionary.
 * @param dic dictionary containing node data
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDJavascriptNameTreeNode from a COSDictionary.
 * @param dic dictionary containing node information
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDStructureElementNameTreeNode from a COSDictionary.
 * @param dic dictionary representing the node
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),234,237,"/**
 * Creates a PDNumberTreeNode from a dictionary.
 * @param dic COSDictionary containing node data
 * @return PDNumberTreeNode instance
 */","* Create a child node object.
     *
     * @param dic The dictionary for the child node object to refer to.
     * @return The new child node object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.cos.COSStream),71,74,"/**
 * Constructs a PDMetadata instance from a COSStream.
 * @param str the underlying COS stream containing metadata
 */","* Constructor. This will <b>not</b> set up the /Type and /Subtype entries.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDObjectStream:<init>(org.apache.pdfbox.cos.COSStream),40,43,"/**
 * Constructs a PDObjectStream from a COSStream.
 * @param str underlying COS stream
 */","* Constructor.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.cos.COSStream),49,52,"/**
 * Constructs a PDEmbeddedFile from a COSStream.
 * @param str the underlying COSStream
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunction:<init>(org.apache.pdfbox.cos.COSBase),53,64,"/**
 * Initializes a PDFunction with a given COSBase.
 * @param function the underlying COS object for the function
 */","* Constructor.
     *
     * @param function The function stream.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentStream,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentStream(),71,74,"/**
 * Creates and returns a PDStream from charStream.
 * @return PDStream object initialized with charStream
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",98,104,"/**
* Initializes a PDXObject with a given stream and subtype.
* @param stream the underlying COSStream
* @param subtype the subtype of the XObject
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentStream(),152,155,"/**
 * Creates and returns a PDStream using m1().
 * @return PDStream instance
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentStream(),169,172,"/**
 * Creates a PDStream from a COSStream.
 * @return PDStream object
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a PDStructureElement using a COSDictionary.
 * @param dic dictionary containing structure element data
 */","* Constructor for an existing structure element.
     *
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Constructs a PDStructureTreeRoot from a COSDictionary.
 * @param dic dictionary representing the structure tree root
 */","* Constructor for an existing structure element.
     * 
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(),118,120,"/**
 * Default constructor for SecurityHandler.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),127,131,"/**
* Initializes the security handler with a specified policy.
* @param protectionPolicy encryption policy to be applied
*/","* Constructor used for encryption.
     *
     * @param protectionPolicy The protection policy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Constructs an FDFAnnotationCaret from a COSDictionary.
* @param a dictionary containing annotation properties
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a circle annotation from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs an FDF annotation with file attachment.
 * @param a COSDictionary containing annotation details
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Initializes a new FDFAnnotationFreeText instance.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs an FDFAnnotationInk from a COSDictionary.
 * @param a COSDictionary containing annotation data
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Constructs a new FDF annotation line from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs an FDF annotation link.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Constructs a polygon annotation from a COS dictionary.
* @param a COS dictionary representing the annotation
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a new polyline annotation from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a sound annotation from a COS dictionary.
 * @param a COS dictionary containing sound annotation data
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),55,58,"/**
 * Constructs an FDF annotation square from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs an FDF annotation stamp from a COS dictionary.
 * @param a COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs an FDFAnnotationText from a COSDictionary.
 * @param a dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a text markup annotation from a COS dictionary.
 * @param a COS dictionary containing annotation details
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),27,30,"/**
 * Constructs an AcroFormDefaultFixup instance.
 * @param document PDDocument to be processed
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),41,44,"/**
 * Initializes an AcroFormDefaultsProcessor with a PDDocument.
 * @param document PDF document to process
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),31,34,"/**
 * Constructs an AcroFormGenerateAppearancesProcessor.
 * @param document PDDocument to process
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),55,58,"/**
 * Initializes a processor for orphan widgets in an AcroForm.
 * @param document PDF document to process
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName),96,99,"/**
 * Constructs a FontType with specified type and null subtype.
 * @param type the font type as COSName
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:<init>(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String,org.apache.pdfbox.pdmodel.font.CIDSystemInfo,int,int,int,int,int,byte[],org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,long)",86,105,"/**
 * Initializes a FSFontInfo object with font details.
 * @param file font file reference
 * @param format font format type
 * @param postScriptName PostScript name of the font
 * @param cidSystemInfo CID system information
 * @param usWeightClass weight class of the font
 * @param sFamilyClass family class of the font
 * @param ulCodePageRange1 code page range 1
 * @param ulCodePageRange2 code page range 2
 * @param macStyle Mac style flags
 * @param panose PANOSE classification array
 * @param parent parent font provider
 * @param hash unique font hash
 * @param lastModified last modified timestamp
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,getPanose,org.apache.pdfbox.pdmodel.font.PDPanose:getPanose(),63,67,"/**
* Extracts and classifies PANOSE data from font bytes.
* @return PDPanoseClassification object containing extracted data
*/","* Ten bytes for the PANOSE classification number for the font.
     * 
     * @see <a href=""http://www.monotype.com/services/pan1"">http://www.monotype.com/services/pan1</a>
     * 
     * @return the PANOSE classification number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,getInstance,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",51,75,"/**
* Creates a Composite object based on blend mode and alpha.
* @param blendMode blending mode to apply
* @param constantAlpha opacity level (clamped between 0 and 1)
* @return Composite object for rendering
*/","* Creates a blend composite
     *
     * @param blendMode Desired blend mode
     * @param constantAlpha Constant alpha, must be in the inclusive range
     * [0.0...1.0] or it will be clipped.
     * @return a blend composite.
     * @throws IllegalArgumentException if blendMode is null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getGroup,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getGroup(),128,139,"/**
* Retrieves transparency group attributes.
* @return PDTransparencyGroupAttributes object or null if not present
*/","* Returns the transparency group attributes dictionary.
     *
     * @return the transparency group attributes dictionary, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDShadingPattern from a COSDictionary.
 * @param resourceDictionary dictionary containing pattern resources
 */","* Creates a new shading pattern from the given COS dictionary.
     * @param resourceDictionary The COSDictionary for this pattern resource.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",84,88,"/**
* Initializes a PDTilingPattern with a dictionary and resource cache.
* @param dictionary containing pattern settings
* @param resourceCache for managing resources
*/","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.
     * @param resourceCache The resource cache, may be null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDShadingType1 from a COSDictionary.
 * @param shadingDictionary dictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDShadingType2 from a COSDictionary.
 * @param shadingDictionary dictionary containing shading details
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDTriangleBasedShadingType instance.
 * @param shadingDictionary the dictionary containing shading details
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,org.apache.pdfbox.util.Matrix)",45,48,"/**
* Constructs an axial shading paint.
* @param shadingType2 specifies the shading type
* @param matrix transformation matrix for the shading
*/","* Constructor.
     *
     * @param shadingType2 the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a RadialShadingPaint with specified shading and matrix.
 * @param shading PDShadingType3 object defining the radial gradient
 * @param matrix transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type1ShadingPaint with specified shading and transformation.
 * @param shading PDShadingType1 object representing the shading
 * @param matrix transformation matrix for the paint
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type4ShadingPaint with specified shading and transformation.
 * @param shading PDShadingType4 object representing the shading pattern
 * @param matrix transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type5ShadingPaint with specified shading and matrix.
 * @param shading PDShadingType5 object representing the shading
 * @param matrix transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a Type6ShadingPaint with specified shading and transformation matrix.
 * @param shading PDShadingType6 object representing the shading
 * @param matrix transformation matrix to apply
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a Type7ShadingPaint using given shading and transformation matrix.
 * @param shading PDShadingType7 object representing the shading pattern
 * @param matrix  transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a PDExtendedGraphicsState from a COSDictionary.
 * @param dictionary the COSDictionary containing graphics state settings
 */","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary),106,109,"/**
 * Constructs a PDSoftMask from a COSDictionary.
 * @param dictionary PDF dictionary containing mask properties
 */","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.lang.String),51,72,"/**
* Constructs a PlainText object from a given text value.
* @param textValue the input text to be processed
*/","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,build,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:build(),121,124,"/**
 * Creates and returns a new PlainTextFormatter.
 * @return PlainTextFormatter instance initialized with current context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a new PDActionEmbeddedGoTo from a COS dictionary.
 * @param a the COS dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes a new PDActionGoTo with a given dictionary.
* @param a COSDictionary representing the action
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a new instance of PDActionHide.
 * @param a COSDictionary containing action properties
 */","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionImportData from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDActionJavaScript from a COSDictionary.
 * @param a dictionary representing the JavaScript action
 */","* Constructor #2.
     *
     *  @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes a new instance of PDActionLaunch.
 * @param a dictionary containing action properties
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDActionMovie from a COSDictionary.
 * @param a dictionary containing action details
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDActionNamed from a COSDictionary.
 * @param a dictionary containing action attributes
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes a new PDActionRemoteGoTo action.
 * @param a dictionary containing action details
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDActionResetForm from a COSDictionary.
 * @param a dictionary containing action attributes
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionSound from a COSDictionary.
 * @param a dictionary representing the sound action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Constructs a PDActionSubmitForm from a COSDictionary.
* @param a dictionary representing the action
*/","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionThread from a COSDictionary.
 * @param a dictionary representing the action thread
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionURI from a COSDictionary.
 * @param a dictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAppearanceDictionary,"org.apache.pdfbox.pdmodel.PDDocument:assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",614,620,"/**
 * Masks annotations by setting appearance and flags.
 * @param firstWidget the widget to mask
 * @param apDict appearance dictionary for the widget
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Constructs an appearance handler for a given annotation.
 * @param annotation the annotation to handle
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",44,47,"/**
 * Initializes PDCaretAppearanceHandler with given annotation and document.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Initializes a new appearance handler for a PDF circle annotation.
 * @param annotation the PDF annotation to handle
 * @param document the PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",43,46,"/**
 * Constructs an appearance handler for PDF file attachments.
 * @param annotation the attachment annotation
 * @param document the containing PDF document
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",66,69,"/**
 * Constructs a PDF text appearance handler.
 * @param annotation PDF annotation to handle
 * @param document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",48,51,"/**
 * Constructs a PDHighlightAppearanceHandler.
 * @param annotation the PDF annotation to handle
 * @param document the PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",42,45,"/**
 * Constructs a new PDInkAppearanceHandler.
 * @param annotation the annotation to handle
 * @param document the document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",46,49,"/**
 * Initializes line appearance handler with annotation and document.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Constructs a PDLinkAppearanceHandler.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Initializes a new PDPolygonAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 * @param document the PDDocument associated with the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",45,48,"/**
 * Constructs a polyline appearance handler.
 * @param annotation PDAnnotation object representing the annotation
 * @param document PDDocument object associated with the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",28,31,"/**
 * Constructs a PDSoundAppearanceHandler.
 * @param annotation sound annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Initializes a new PDSquareAppearanceHandler.
 * @param annotation PDAnnotation object representing the annotation
 * @param document PDDocument object where the annotation is located
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",52,55,"/**
* Initializes a new PDSquigglyAppearanceHandler.
* @param annotation PDF annotation to handle
* @param document PDF document containing the annotation
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Initializes a strikeout appearance handler.
 * @param annotation PDF annotation to handle
 * @param document associated PDF document
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,79,"/**
 * Constructs a text appearance handler for an annotation in a PDF document.
 * @param annotation the annotation to handle
 * @param document the PDF document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Initializes an underline appearance handler.
 * @param annotation PDF annotation to handle
 * @param document containing the annotation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toKeyValueList,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:toKeyValueList(java.util.List,java.util.List)",86,94,"/**
* Creates a list of KeyValue objects from two lists.
* @param key list of keys
* @param value list of values
* @return List of KeyValue objects
*/","* Return two related lists as a single list with key value pairs.
     * 
     * @param key the key elements
     * @param value the value elements
     * @return a sorted list of KeyValue elements.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
* Constructs a PDNonTerminalField.
* @param acroForm the form containing this field
* @param field the dictionary representing the field
* @param parent the parent of this field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Constructs a PDTerminalField.
* @param acroForm the form containing the field
* @param field the dictionary representing the field
* @param parent the parent field, if any
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDRectlinearMeasureDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMatrix,org.apache.pdfbox.pdmodel.PDPage:getMatrix(),387,392,"/**
 * Creates and returns a new empty matrix.
 * @return an instance of Matrix
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,clone,org.apache.pdfbox.util.Matrix:clone(),443,447,"/**
 * Creates a new Matrix from the result of single.m1().
 * @return a new Matrix instance
 */","* Clones this object.
     * @return cloned matrix as an object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getFontMatrix(),168,203,"/**
* Returns the font matrix.
* @return Font matrix as a Matrix object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getFontMatrix(),185,194,"/**
* Returns the font matrix, initializing it if necessary.
* @return Matrix representing the font transformation
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1CFont:getFontMatrix(),312,341,"/**
* Returns the font matrix, initializing if necessary.
* @return Matrix object representing the font matrix
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1Font:getFontMatrix(),662,693,"/**
* Returns the font matrix.
* @return Matrix object representing the font matrix, or default if unavailable
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScaleInstance,"org.apache.pdfbox.util.Matrix:getScaleInstance(float,float)",388,391,"/**
* Creates a scaling matrix.
* @param x scale factor on X-axis
* @param y scale factor on Y-axis
* @return Matrix representing the scaling transformation
*/","* Convenience method to create a scaled instance.
     *
     * Produces the following matrix:
     * x 0 0
     * 0 y 0
     * 0 0 1
     *
     * @param x The xscale operator.
     * @param y The yscale operator.
     * @return A new matrix with just the x/y scaling",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getTranslateInstance,"org.apache.pdfbox.util.Matrix:getTranslateInstance(float,float)",405,408,"/**
* Creates a translation matrix.
* @param x horizontal translation
* @param y vertical translation
* @return Matrix representing the translation
*/","* Convenience method to create a translating instance.
     *
     * Produces the following matrix:
     * 1 0 0
     * 0 1 0
     * x y 1
     *
     * @param x The x translating operator.
     * @param y The y translating operator.
     * @return A new matrix with just the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getRotateInstance,"org.apache.pdfbox.util.Matrix:getRotateInstance(double,float,float)",418,424,"/**
* Creates a transformation matrix for rotation and translation.
* @param theta angle of rotation in radians
* @param tx horizontal translation
* @param ty vertical translation
* @return Matrix representing the transformation
*/","* Convenience method to create a rotated instance.
     *
     * @param theta The angle of rotation measured in radians
     * @param tx The x translation.
     * @param ty The y translation.
     * @return A new matrix with the rotation and the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(org.apache.pdfbox.util.Vector),363,374,"/**
* Applies a transformation matrix to a 2D vector.
* @param vector input 2D vector
* @return transformed 2D vector
*/","* Transforms the given vector by this matrix.
     *
     * @param vector 2D vector
     *
     * @return the transformed vector.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,scale,org.apache.pdfbox.util.Vector:scale(float),60,63,"/**
* Scales vector by scalar.
* @param sxy scaling factor
* @return scaled Vector object
*/","* Returns a new vector scaled by both x and y.
     *
     * @param sxy x and y scale
     * @return a new vector scaled by both x and y",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(),33,36,"/**
 * Constructs a new instance with default object stream size.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldTree,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldTree(),429,432,"/**
 * Creates and returns a PDFieldTree instance.
 * @return PDFieldTree object initialized with this instance
 */","* Return the field tree representing all form fields
     * 
     * @return the field tree representing all form fields",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,isEmpty,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:isEmpty(),931,935,"/**
 * Checks if condition is met by evaluating chain of methods.
 * @return true if result equals zero, false otherwise
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setDefaultValue,org.apache.pdfbox.util.filetypedetector.ByteTrie:setDefaultValue(java.lang.Object),121,124,"/**
 * Masks the root with a default value.
 * @param defaultValue value to mask the root with
 */","* Sets the default value to use in {@link ByteTrie#find(byte[])} when no path matches.
     * @param defaultValue",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObject(int),66,69,"/**
 * Retrieves an element from a collection using an index.
 * @param index position of the element in the collection
 * @return element at the specified index or null if out of bounds
 */","* Returns the object at the specified position.
     * 
     * @param index the position
     * @return the object
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,size,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:size(),115,118,"/**
 * Calls m1 and then m2 on its result.
 * @return the integer result of calling m2 on the object returned by m1
 */","* Returns the size.
     * 
     * @return the size",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumber(int),78,81,"/**
 * Masks an index using m2 function from m1 module.
 * @param index the index to be masked
 * @return the masked result as an integer
 */","* Returns the revision number at the specified position.
     * 
     * @param index the position
     * @return the revision number
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,addObject,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:addObject(java.lang.Object,int)",89,93,"/**
 * Applies masking to an object and updates its revision number.
 * @param object the object to be masked
 * @param revisionNumber the new revision number for the object
 */","* Adds an object with a specified revision number.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,setRevisionNumber,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:setRevisionNumber(java.lang.Object,int)",101,108,"/**
 * Masks an object by setting its revision number.
 * @param object the object to mask
 * @param revisionNumber the revision number to set
 */","* Sets the revision number of a specified object.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isCIDSubtype,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:isCIDSubtype(org.apache.pdfbox.cos.COSName),106,113,"/**
* Checks if the CID subtype matches.
* @param cidSubtype the CID subtype to check
* @return true if types match and subtype is valid, else false
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getInstance,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getInstance(org.apache.pdfbox.cos.COSName),42,64,"/**
 * Determines the encoding based on the given COSName.
 * @param name the COSName to check
 * @return Encoding instance or null if not recognized
 */","* This will get an encoding by name. May return null.
     *
     * @param name The name of the encoding to get.
     * @return The encoding that matches the name.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,toLongName,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:toLongName(org.apache.pdfbox.cos.COSBase),151,166,"/**
 * Masks color space to device-specific color spaces.
 * @param cs input color space
 * @return device-specific color space or original if not matched
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.ResourceCache)",62,85,"/**
* Creates a PDSoftMask from a COSBase object.
* @param dictionary the source COSBase object
* @param resourceCache cache for resources
* @return PDSoftMask object or null if invalid
*/","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * @param resourceCache Resource cache, may be null.
     * 
     * @return the newly created instance of PDSoftMask",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedIndex,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedIndex(),94,106,"/**
* Finds the index of the first non-off annotation widget.
* @return Index of the widget or -1 if all are off
*/","* This will get the selected index.
     * <p>
     * A RadioButton might have multiple same value options which are not selected jointly if
     * they are not set in unison {@link #isRadiosInUnison()}.</p>
     * 
     * <p>
     * The method will return the first selected index or -1 if no option is selected.</p>
     * 
     * @return the first selected index or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.lang.String),296,299,"/**
 * Calls m1 with a File object created from the given path.
 * @param source file path as a string
 * @throws FileNotFoundException if the file does not exist
 */","* Add a source file to the list of files to merge.
     *
     * @param source Full path and file name of source document.
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseTrailer,org.apache.pdfbox.pdfparser.XrefParser:parseTrailer(),206,258,"/**
 * Parses and processes the trailer section of a PDF file.
 * @throws IOException if an I/O error occurs during parsing
 * @return true if trailer is successfully processed, false otherwise
 */","* This will parse the trailer from the stream and add it to the state.
     *
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(org.apache.pdfbox.filter.DecodeOptions),302,307,"/**
 * Retrieves input stream using specified decode options.
 * @param options configuration for decoding process
 * @return InputStream object containing decoded data
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getObject(org.apache.pdfbox.cos.COSObjectKey),279,282,"/**
 * Retrieves an object from the pool by its key.
 * @param key unique identifier for the object
 * @return COSBase object or null if not found
 */","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool.
     *
     * @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if
     * such an object is contained.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),80,110,"/**
* Executes a sequence of instructions using the provided context.
* @param context execution environment for commands and data
*/","* Executes the instruction sequence.
     * @param context the execution context",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,"org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.cos.ICOSParser)",134,138,"/**
* Initializes a COSDocument with a stream cache and parser.
* @param streamCacheCreateFunction function to create stream cache
* @param parser ICOSParser instance for parsing operations
*/","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     * @param parser Parser to be used to parse the document on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",916,935,"/**
* Processes a PDF operator with given operands.
* @param operator the PDF operator to process
* @param operands list of COSBase operands for the operator
* @throws IOException if an I/O error occurs during processing
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextLineMatrix(),1047,1050,"/**
 * Returns the result of calling m2 on the matrix returned by m1.
 * @return Matrix object resulting from nested m2 calls
 */",* @return Returns the textLineMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextLineMatrix(org.apache.pdfbox.util.Matrix),1055,1058,"/**
 * Delegates call to nested method with given matrix.
 * @param value Matrix object to process
 */",* @param value The textLineMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextMatrix(),1063,1066,"/**
 * Retrieves a matrix by calling m2 on the result of m1.
 * @return Matrix object resulting from m1().m2()
 */",* @return Returns the textMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextMatrix(org.apache.pdfbox.util.Matrix),1071,1074,"/**
 * Delegates Matrix processing to another method.
 * @param value Matrix object to process
 */",* @param value The textMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformWidth,org.apache.pdfbox.contentstream.PDFStreamEngine:transformWidth(float),1138,1144,"/**
* Calculates masked width based on transformation matrix.
* @param width original width value
* @return adjusted width after applying mask formula
*/","* Transforms a width using the CTM.
     * 
     * @param width the width to be transformed
     * 
     * @return the transformed width",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColor(),40,44,"/**
 * Returns a masked color.
 * @return PDColor object from chained methods
 */","* Returns the non-stroking color.
     * @return The non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
 * Applies a mask with specified color.
 * @param color PDColor object to be used as the mask
 */","* Sets the non-stroking color.
     * @param color The new non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColorSpace(),60,64,"/**
 * Returns the color space from nested methods.
 * @return PDColorSpace object
 */","* Returns the non-stroking color space.
     * @return The non-stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColor(),40,44,"/**
 * Returns a masked color.
 * @return PDColor instance representing the masked color
 */","* Returns the stroking color.
     * @return The stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
 * Applies a mask with the specified color.
 * @param color PDColor to be used for masking
 */","* Sets the stroking color.
     * @param color The new stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColorSpace(),60,64,"/**
 * Returns the color space mask.
 * @return PDColorSpace object from chained methods
 */","* Returns the stroking color space.
     * @return The stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRise:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
 * Masks a function with an operator and list of arguments.
 * @param operator the operator to apply
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,54,"/**
 * Handles the FUNC_MASK operation.
 * @param operator the operator for the function
 * @param arguments list of COSBase arguments
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,74,"/**
* Draws a masked rectangle on the PDF.
* @param operator current operation
* @param operands list of operands (must have at least 4 elements)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,80,"/**
 * Handles a mask operation with three control points.
 * @param operator the PDF operator
 * @param operands list of COSBase operands
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,66,"/**
* Applies a mask operation to PDF graphics.
* @param operator the mask operator
* @param operands list of operands for the mask operation
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Draws a cubic Bezier curve.
* @param operator the PDF operator
* @param operands list of operands including control points and endpoint
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.LineTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Draws a line to the specified coordinates.
* @param operator the PDF operator
* @param operands list of operands (must contain at least two numbers)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.MoveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,65,"/**
 * Applies mask operation at specified coordinates.
 * @param operator the operator performing the mask operation
 * @param operands list of COSBase operands
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Masks a PDF operator with a given operand.
* @param operator the operator to mask
* @param operands list of operands for the operator
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
 * Masks an operator with a given operand.
 * @param operator the operator to mask
 * @param operands list of operands for the operator
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,process,"org.apache.pdfbox.contentstream.operator.state.SetFlatness:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
 * Processes a mask operation with given operator and operands.
 * @param operator the operation to be performed
 * @param operands list of operands for the operation
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Sets line cap style for graphics context.
* @param operator the PDF operator
* @param arguments list of operands including line cap style
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Sets line join style for PDF graphics.
* @param operator the operator being processed
* @param arguments list of operands, must include a COSNumber
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,55,"/**
* Applies mask operation with given operator and arguments.
* @param operator the operator to apply the mask
* @param arguments list of COSBase arguments for the mask operation
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineWidth:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Applies a mask operation with given parameters.
* @param operator the operation to be performed
* @param arguments list of operands for the operation
* @throws IOException if an I/O error occurs during processing
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,process,"org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,58,"/**
 * Masks an operator with a given operand.
 * @param operator the operation to be masked
 * @param operands list of operands for the operation
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,60,"/**
* Sets character spacing for text.
* @param operator the PDF operator
* @param arguments list of operands
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,57,"/**
* Applies a mask to an operator with scaling.
* @param operator the operation to apply the mask to
* @param arguments list of operands, must contain at least one COSNumber
* @throws IOException if there's an error during processing
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
* Applies mask operation with given operator and arguments.
* @param operator the operator to apply
* @param arguments list of arguments for the operation
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
 * Sets the rendering mode based on the given argument.
 * @param operator the operator used in the PDF document
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,process,"org.apache.pdfbox.contentstream.operator.state.Restore:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
* Executes a mask function with given operator and arguments.
* @param operator the operation to perform
* @param arguments list of COSBase objects as arguments
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawInputStream,org.apache.pdfbox.cos.COSStream:createRawInputStream(),132,156,"/**
* Creates an InputStream for reading.
* Throws IllegalStateException if writing is in progress.
* Throws IOException if no data has been written.
*/","* Returns a new InputStream which reads the encoded PDF stream data. Experts only!
     * 
     * @return InputStream containing raw, encoded PDF stream data.
     * @throws IOException If the stream could not be read.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawOutputStream,org.apache.pdfbox.cos.COSStream:createRawOutputStream(),261,290,"/**
 * Opens a stream for writing.
 * @return OutputStream for writing data
 * @throws IOException if an I/O error occurs
 */","* Returns a new OutputStream for writing encoded PDF data. Experts only!
     * 
     * @return OutputStream for raw PDF stream data.
     * @throws IOException If the output stream could not be created.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findImageReader,"org.apache.pdfbox.filter.Filter:findImageReader(java.lang.String,java.lang.String)",159,172,"/**
 * Retrieves an ImageReader for the specified format.
 * @param formatName name of the image format
 * @param errorCause cause of any potential error
 * @return ImageReader instance if available, throws MissingImageReaderException otherwise
 */","* Finds a suitable image reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findRasterReader,"org.apache.pdfbox.filter.Filter:findRasterReader(java.lang.String,java.lang.String)",182,199,"/**
 * Retrieves an ImageReader for a specified image format.
 * @param formatName the name of the image format
 * @param errorCause description of the error causing failure
 * @return ImageReader instance if available, otherwise throws exception
 * @throws MissingImageReaderException if no suitable reader is found
 */","* Finds a suitable image raster reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,getOperator,org.apache.pdfbox.contentstream.operator.Operator:getOperator(java.lang.String),60,85,"/**
* Creates or retrieves an Operator based on the input string.
* @param operator string representation of the operator
* @return Operator object created or retrieved
*/","* This is used to create/cache operators in the system.
     *
     * @param operator The operator for the system.
     *
     * @return The operator that matches the operator keyword.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toString,org.apache.pdfbox.pdmodel.common.COSArrayList:toString(),580,584,"/**
 * Returns string representation of COSArrayList.
 * @return formatted string with inner array's m1 result
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,isEdgeALine,org.apache.pdfbox.pdmodel.graphics.shading.Patch:isEdgeALine(java.awt.geom.Point2D[]),143,150,"/**
* Determines if control points are within bounds.
* @param ctl array of Point2D control points
* @return true if points satisfy mask condition, false otherwise
*/","* Whether the for control points are on a line.
     *
     * @param ctl an edge's control points, the size of ctl is 4
     * @return true when 4 control points are on a line, otherwise false",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Constructs a PDArtifactMarkedContent instance.
* @param properties dictionary containing artifact properties
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftX(),215,218,"/**
 * Retrieves a masked value from the rectangle array.
 * @return The masked float value from the first element of the array.
 */","* This will get the lower left x coordinate.
     *
     * @return The lower left x.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftY(),235,238,"/**
 * Retrieves the y-coordinate from the first element of rectArray.
 * @return float value representing the y-coordinate
 */","* This will get the lower left y coordinate.
     *
     * @return The lower left y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightX(),255,258,"/**
 * Retrieves the third element from the second row of rectArray as a float.
 * @return The float value of the specified array element.
 */","* This will get the upper right x coordinate.
     *
     * @return The upper right x .",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightY(),275,278,"/**
 * Retrieves a masked value from the rectangle array.
 * @return The masked float value from the specified position in the array.
 */","* This will get the upper right y coordinate.
     *
     * @return The upper right y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFontSize(),104,108,"/**
* Retrieves font size from settings.
* @return Font size as a float value
*/","* This will get the size of the font.
     *
     * @return The size of the font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,initComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:initComponents(org.apache.pdfbox.cos.COSArray),81,95,"/**
* Masks color components from COSArray.
* @param array containing color component values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getR(),79,82,"/**
 * Retrieves the mask value from COSNumber.
 * @return float value of the mask
 */","* Returns the r value of the tristimulus.
     * @return the R value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getG(),97,100,"/**
 * Returns the masked value from matrix element.
 * @return float value after masking
 */","* Returns the g value of the tristimulus.
     * @return the g value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getB(),115,118,"/**
 * Retrieves and returns the masked value from COSNumber.
 * @return The masked value as a float.
 */","* Returns the b value of the tristimulus.
     * @return the B value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getX(),82,85,"/**
 * Retrieves the mask value from COSNumber.
 * @return float representing the mask value
 */","* Returns the x value of the tristimulus.
     * @return the X value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getY(),100,103,"/**
 * Retrieves a float value from matrix element m1(1).
 * @return float value from specified matrix position
 */","* Returns the y value of the tristimulus.
     * @return the Y value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getZ(),118,121,"/**
 * Returns the mask value from COSArray.
 * @return float representing the mask value
 */","* Returns the z value of the tristimulus.
     * @return the Z value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,"org.apache.pdfbox.cos.COSArray:getInt(int,int)",318,330,"/**
 * Masks value at index with default.
 * @param index position in array
 * @param defaultValue value to use if index is out of bounds or not a COSNumber
 * @return masked value or default
 */","* Get the value of the array as an integer, return the default if it does not exist.
     *
     * @param index The value of the array.
     * @param defaultValue The value to return if the value is null.
     * @return The value at the index or the defaultValue.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,"org.apache.pdfbox.cos.COSArray:getName(int,java.lang.String)",370,382,"/**
* Retrieves a string value based on index, defaulting to defaultValue.
* @param index position in the list
* @param defaultValue fallback value if not found
* @return retrieved string or defaultValue
*/","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOf,org.apache.pdfbox.cos.COSArray:indexOf(org.apache.pdfbox.cos.COSBase),539,557,"/**
* Finds index of matching object or first null slot.
* @param object to search for
* @return index of match or first null, -1 if not found
*/","* This will return the index of the entry or -1 if it is not found.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getFilterList,org.apache.pdfbox.cos.COSStream:getFilterList(),295,324,"/**
 * Retrieves a list of filters.
 * @return List of Filter objects
 * @throws IOException if an I/O error occurs or invalid filter type is found
 */",* Returns the list of filters.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.util.List,org.apache.pdfbox.cos.COSArray)",75,85,"/**
 * Initializes a COSArrayList with an actual list and a COSArray.
 * @param actualList the underlying list of elements
 * @param cosArray the associated COSArray
 */","* Create the COSArrayList specifying the List and the backing COSArray.
     * 
     * <p>User of this constructor need to ensure that the entries in the List and
     * the backing COSArray are matching i.e. the COSObject of the List entry is
     * included in the COSArray.
     *   
     * <p>If the number of entries in the List and the COSArray differ
     * it is assumed that the List has been filtered. In that case the COSArrayList
     * shall only be used for reading purposes and no longer for updating.
     * 
     * @param actualList The list of standard java objects
     * @param cosArray The COS array object to sync to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:eval(float[]),87,102,"/**
* Applies a mask function to input array.
* @param input input float array
* @return transformed float array after applying mask
* @throws IOException if an I/O error occurs
*/","* Performs exponential interpolation
     *
     * {@inheritDoc}",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(),511,525,"/**
* Calls method m2 on current stream, retries if -1 is returned.
* @return result of m2 or -1 if operation fails
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,available,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:available(),527,535,"/**
* Determines mask value based on condition.
* @return 1 if m1() is true, otherwise 0
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(byte[],int,int)",537,551,"/**
 * Reads bytes from the current stream.
 * @param b byte array to store read data
 * @param off offset in the byte array
 * @param len number of bytes to read
 * @return number of bytes read or -1 if end of stream
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:<init>(org.apache.pdfbox.cos.COSArray),182,212,"/**
* Parses an index array to initialize object numbers.
* @param indexArray COSArray containing start and size integers
* @throws IOException if non-integer values are found in the array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFilters(),238,250,"/**
* Retrieves a list of COSName objects from the stream.
* @return List of COSName objects or empty list if none found
*/","* This will get the list of filters that are associated with this stream.
     * 
     * @return A (possibly empty) list of all encoding filters to apply to this stream, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFileFilters(),358,371,"/**
* Retrieves filter names from a PDF stream.
* @return List of filter names or empty list if none found
*/","* This will get the list of filters that are associated with this stream. The list is empty if there are none.
     * 
     * @return A list of all encoding filters to apply to this stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromBoolean,org.apache.pdfbox.pdfwriter.COSWriter:visitFromBoolean(org.apache.pdfbox.cos.COSBoolean),1180,1184,"/**
 * Masks a COSBoolean object.
 * @param obj the boolean object to mask
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSBoolean,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSBoolean(java.io.OutputStream,org.apache.pdfbox.cos.COSBoolean)",294,298,"/**
* Writes boolean value to output stream.
* @param output target OutputStream
* @param cosBoolean COSBoolean instance to write
* @throws IOException if writing fails
*/","* Write the given {@link COSBoolean} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosBoolean The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromNull,org.apache.pdfbox.pdfwriter.COSWriter:visitFromNull(org.apache.pdfbox.cos.COSNull),1368,1372,"/**
 * Masks an object by invoking specific methods.
 * @param obj the COSNull object to be masked
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,write,org.apache.pdfbox.pdmodel.PDAbstractContentStream:write(java.lang.String),1503,1506,"/**
 * Masks text using ASCII encoding.
 * @param text input string to be masked
 */","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSDictionary,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSDictionary(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",342,359,"/**
* Writes COSDictionary to OutputStream.
* @param output stream to write dictionary to
* @param cosDictionary dictionary to write
*/","* Write the given {@link COSDictionary} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosDictionary The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:potentiallyNotifyChanged(java.lang.Object,java.lang.Object)",161,167,"/**
* Masks an entry by replacing it with a new one.
* @param oldEntry the entry to be masked
* @param newEntry the new entry to replace the old one
*/","* Notifies the user attribute object if the user property is changed.
     * 
     * @param oldEntry old entry
     * @param newEntry new entry",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,size,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:size(),60,64,"/**
 * Delegates call to map's m1 method.
 * @return result of map's m1 method
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSObject,org.apache.pdfbox.cos.COSDictionary:getCOSObject(org.apache.pdfbox.cos.COSName),535,543,"/**
* Retrieves COSObject by key.
* @param key the COSName key to search for
* @return COSObject if found, otherwise null
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSObject.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,"org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1204,1212,"/**
* Retrieves a COSBase object by key.
* @param firstKey primary key to search
* @param secondKey fallback key if first key not found
* @return COSBase object or null if both keys are invalid
*/","* This is a special case of getItem that takes multiple keys, it will handle the situation
     * where multiple keys could get the same value, ie if either CS or ColorSpace is used to get
     * the colorspace. This will get an object from this dictionary.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientsLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientsLength(),446,450,"/**
* Retrieves the mask value from the recipients array in the dictionary.
* @return integer representing the mask value
*/","* Returns the number of recipients contained in the Recipients field of the dictionary.
     *
     * @return the number of recipients contained in the Recipients field.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientStringAt,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientStringAt(int),459,463,"/**
* Retrieves a masked string from an array in a dictionary.
* @param i index of the string to retrieve
* @return COSString object at specified index or null if not found
*/","* returns the COSString contained in the Recipients field at position i.
     *
     * @param i the position in the Recipients field array.
     *
     * @return a COSString object containing information about the recipient number i.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDirection(),122,130,"/**
 * Retrieves an item from a PDF dictionary.
 * @return COSBase object or zero if not found
 */","* @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger}
     * or {@link COSName#NONE}. Default to {@link COSInteger#ZERO}
     * @see PDTransitionDirection",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getMetadataKeys,org.apache.pdfbox.pdmodel.PDDocumentInformation:getMetadataKeys(),262,270,"/**
* Retrieves and masks keys from info object.
* @return Sorted set of masked keys
*/","* This will get the keys of all metadata information fields for the document.
     *
     * @return all metadata key strings.
     * @since Apache PDFBox 1.3.0",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeNames(),58,66,"/**
* Masks attributes and returns a list of names.
* @return List of attribute names after masking
*/","* Gets the attribute names.
     * 
     * @return the attribute names",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addTrailerInfo,org.apache.pdfbox.pdfparser.PDFXRefStream:addTrailerInfo(org.apache.pdfbox.cos.COSDictionary),123,133,"/**
 * Masks specified entries in the trailer dictionary.
 * @param trailerDict dictionary containing PDF trailer information
 */","* Copy all Trailer Information to this file.
     * 
     * @param trailerDict dictionary to be added as trailer info",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),73,77,"/**
 * Constructs a COSDictionary by copying entries from another dictionary.
 * @param dict source dictionary to copy entries from
 */","* Copy Constructor. This will make a shallow copy of this dictionary.
     *
     * @param dict The dictionary to copy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isInfo,org.apache.pdfbox.pdfparser.BruteForceParser:isInfo(org.apache.pdfbox.cos.COSDictionary),743,757,"/**
* Checks if a PDF dictionary should be masked.
* @param dictionary the COSDictionary to check
* @return true if dictionary contains certain keys, false otherwise
*/","* Tell if the dictionary is an info dictionary.
     * 
     * @param dictionary the dictionary to be checked
     * @return true if the given dictionary is an info dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasWidths,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasWidths(),661,664,"/**
* Checks dictionary for WIDTHS or MISSING_WIDTH keys.
* @return true if either key is present, false otherwise
*/","* Returns true if widths are present in the font descriptor.
     * 
     * @return true if widths are present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasMissingWidth(),671,674,"/**
 * Checks if the dictionary contains the ""MissingWidth"" key.
 * @return true if ""MissingWidth"" is present, false otherwise
 */","* Returns true if the missing widths entry is present in the font descriptor.
     * 
     * @return true if the missing widths entry is present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,hasXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:hasXFA(),564,567,"/**
 * Checks if XFA is masked in the dictionary.
 * @return true if XFA is masked, false otherwise
 */","* This will tell if the AcroForm has XFA content.
     *
     * @return true if the AcroForm is an XFA form",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getBruteForceParser,org.apache.pdfbox.pdfparser.COSParser:getBruteForceParser(),923,930,"/**
* Returns an instance of BruteForceParser.
* @return BruteForceParser object initialized with document and this context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,nextXrefObj,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",152,157,"/**
* Masks a function with an XRef trailer.
* @param startBytePos starting position of the byte
* @param type type of cross-reference
*/","* Signals that a new XRef object (table or stream) starts.
     * @param startBytePos the offset to start at
     * @param type the type of the Xref object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(float[]),361,414,"/**
* Applies color mask to input values.
* @param value input color values array
* @return RGB values after applying mask
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectFromPool,org.apache.pdfbox.pdfparser.BaseParser:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),263,271,"/**
* Retrieves a COSBase object by key.
* @param key the COSObjectKey to look up
* @return the COSBase object or throws IOException if document is null
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(java.lang.String),67,112,"/**
* Constructs a COSFloat from a string representation.
* @param aFloat string representing the float value
* @throws IOException if the input cannot be parsed as a float
*/","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.
     *
     * @throws IOException If aFloat is not a float.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,toString,org.apache.pdfbox.cos.COSFloat:toString(),194,198,"/**
 * Returns a string representation of a COSFloat.
 * @return formatted string with mask value
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,writePDF,org.apache.pdfbox.cos.COSFloat:writePDF(java.io.OutputStream),234,237,"/**
* Writes masked data to an OutputStream.
* @param output destination stream for writing data
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,toIncrement,org.apache.pdfbox.cos.COSUpdateState:toIncrement(),339,342,"/**
 * Creates and returns a new COSIncrement instance.
 * @param updateInfo information used to update the increment
 * @return COSIncrement object initialized with updateInfo
 */","* Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on the managed {@link #updateInfo}.
     * @see COSUpdateInfo
     * @see COSIncrement",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<init>,org.apache.pdfbox.multipdf.LayerUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,71,"/**
* Initializes LayerUtility with a target document.
* @param targetDoc PDDocument to be manipulated
*/","* Creates a new instance.
     * @param targetDoc the PDF document to modify",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(),91,94,"/**
 * Constructs a new DefaultResourceCache with default settings.
 * @param enabled whether caching is enabled
 */",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,create,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:create(),47,51,"/**
 * Creates and returns a new resource cache.
 * @return ResourceCache instance configured with stable cache enabled
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isNeedToBeUpdated,org.apache.pdfbox.pdfwriter.COSWriter:isNeedToBeUpdated(org.apache.pdfbox.cos.COSBase),613,620,"/**
* Checks if COSBase is an instance of COSUpdateInfo and calls its m1 method.
* @param base the COSBase object to check
* @return true if base is COSUpdateInfo and m1 returns true, otherwise false
*/","* Convenience method, so that we get false for types that can't be updated.
     * 
     * @param base
     * @return",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(int),620,627,"/**
* Validates and processes MCID.
* @param mcid Media Content Identifier to process
*/","* Appends a marked-content sequence kid.
     * 
     * @param mcid the marked-content id (MCID).
     * @throws IllegalArgumentException if the mcid is negative.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,getCOSBase,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:getCOSBase(),69,72,"/**
 * Returns a COSInteger representing the mask value.
 * @param degrees input angle in degrees
 * @return COSBase object with mask value
 */",* @return the value for this direction,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromInt,org.apache.pdfbox.pdfwriter.COSWriter:visitFromInt(org.apache.pdfbox.cos.COSInteger),1356,1360,"/**
 * Applies mask to COSInteger.
 * @param obj the COSInteger to be masked
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSInteger,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSInteger(java.io.OutputStream,org.apache.pdfbox.cos.COSInteger)",282,286,"/**
* Writes an integer to the output stream and appends a space.
* @param output stream to write to
* @param cosInteger integer value to write
*/","* Write the given {@link COSInteger} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosInteger The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:hasExplicitWidth(int),479,483,"/**
 * Delegates to descendantFont's m1 method.
 * @param code input code to process
 * @return result of descendantFont's m1 method
 * @throws IOException if an I/O error occurs
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes a masked comment to the output stream.
* @param comment user-provided comment string
* @throws IOException if an I/O error occurs during writing
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDFormContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes a masked comment to the output stream.
* @param comment text to be written, must not contain newlines
* @throws IOException if an I/O error occurs
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPageContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes a masked comment to the output stream.
* @param comment text to be written, must not contain newlines
* @throws IOException if an I/O error occurs
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPatternContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes a masked comment to the output stream.
* @param comment user-provided comment string
* @throws IOException if an I/O error occurs
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int)",42,45,"/**
 * Constructs a COSObjectKey with a given number and generation.
 * @param num object number
 * @param gen object generation
 */","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),73,86,"/**
* Compares current entry with another.
* @param xReferenceEntry reference to compare against
* @return -1 if current is null, 1 if other is null or invalid, otherwise delegates comparison
*/","* Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer
     * as this object is less than, equal to, or greater than the specified object.
     *
     * @param xReferenceEntry the object to be compared.
     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than
     * the specified object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:getRaster(int,int,int,int)",170,302,"/**
 * Creates a masked raster based on input parameters.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param w width of the raster
 * @param h height of the raster
 * @return Raster object with applied mask
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXScale,org.apache.pdfbox.text.TextPosition:getXScale(),534,537,"/**
 * Returns the first element of the text matrix.
 * @return float value representing m1 element
 */","* This will get the X scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The X scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYScale,org.apache.pdfbox.text.TextPosition:getYScale(),546,549,"/**
 * Retrieves the mask value from the text matrix.
 * @return float representing the mask value
 */","* This will get the Y scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The Y scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",248,253,"/**
* Initializes COSWriter with output stream and compression parameters.
* @param outputStream destination for writing data
* @param compressParameters configuration for data compression
*/","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.
     * @param compressParameters The configuration for the document's compression.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead)",265,275,"/**
* Initializes a COSWriter for incremental PDF updates.
* @param outputStream destination for updated content
* @param inputData source of original PDF data
* @throws IOException if I/O error occurs
*/","* COSWriter constructor for incremental updates. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(byte[]),63,67,"/**
 * Calls overloaded m1 method with full byte array.
 * @param b byte array to process
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getListOfByteArraysFromCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray),627,638,"/**
* Masks strings in a COSArray.
* @param array input COSArray containing items to mask
* @return List of masked byte arrays
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(boolean),233,239,"/**
* Updates 'updated' status conditionally.
* @param updated new status to set
*/","* Sets the {@link #updated} state of the managed {@link #updateInfo} to the given state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @param updated The state to set for {@link #updated}.
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getString,org.apache.pdfbox.cos.COSString:getString(),210,229,"/**
 * Decodes a byte array to a string based on BOM.
 * @param bytes input byte array
 * @return decoded string or default encoding if no BOM found
 */","* Returns the content of this string as a PDF <i>text string</i>.
     * 
     * @return the PDF string representation of the COSString",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(java.lang.String,boolean)",99,127,"/**
* Constructs a COSString from text.
* @param text the input string
* @param forceHex if true, forces hexadecimal encoding
*/","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDFont:isStandard14(),619,631,"/**
* Checks conditions and returns result of font processing.
* @return true if conditions are met, otherwise false
*/","* Returns true if this font is one of the ""Standard 14"" fonts and receives special handling.
     * 
     * @return true if this font is one of the ""Standard 14"" fonts",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,"org.apache.pdfbox.filter.ASCII85InputStream:read(byte[],int,int)",179,203,"/**
* Reads bytes into buffer.
* @param data target byte array
* @param offset start position in the array
* @param len number of bytes to read
* @return actual number of bytes read or -1 if end of stream
* @throws IOException on I/O error
*/","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param len The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,decode,"org.apache.pdfbox.filter.ASCII85Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",31,41,"/**
* Decodes data using ASCII85 encoding.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded data
* @param parameters dictionary of decoding parameters
* @param index current filter index
* @return DecodeResult with parameters
* @throws IOException if I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,close,org.apache.pdfbox.filter.ASCII85OutputStream:close(),233,245,"/**
* Calls m1 and parent's m2, then resets data streams.
*/","* This will close the stream.
     *
     * @throws IOException If there is an error closing the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRun,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree),374,400,"/**
* Decodes a value from a Huffman RLE stream.
* @param tree Huffman tree used for decoding
* @return decoded integer value or column count based on conditions
* @throws IOException if an unknown code is encountered in the stream
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:close(),1550,1558,"/**
* Ends text mode and writes to output stream.
* @throws IOException if an I/O error occurs
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDFormContentStream:close(),1550,1558,"/**
* Ends text mode and writes to output stream.
* Logs a warning if text mode was not properly ended.
* @throws IOException if an I/O error occurs
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPageContentStream:close(),1550,1558,"/**
* Ends text mode and logs a warning if not explicitly called.
* @throws IOException if an I/O error occurs
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPatternContentStream:close(),1550,1558,"/**
* Ends text mode and writes to output stream.
* Logs warning if text mode wasn't ended properly.
* @throws IOException if an I/O error occurs during writing
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeRun,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeRun(int,boolean)",149,165,"/**
 * Encodes a run of pixels using specified codes.
 * @param runLength length of the pixel run
 * @param white true if encoding white pixels, false for black
 * @throws IOException if an I/O error occurs during encoding
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeEOL,org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeEOL(),255,257,"/**
* Calls function m1 with specific parameters.
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,readImageRaster,"org.apache.pdfbox.filter.DCTFilter:readImageRaster(javax.imageio.ImageReader,javax.imageio.ImageReadParam)",136,172,"/**
* Reads a raster from an image reader.
* @param reader ImageReader instance
* @param irp ImageReadParam for reading options
* @return Raster object representing the image data
* @throws IOException if reading fails
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,org.apache.pdfbox.filter.FlateFilterDecoderStream:read(),125,137,"/**
 * Reads a masked byte from the input.
 * @return next masked byte or -1 if end of data is reached
 * @throws IOException if an I/O error occurs
 */","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,"org.apache.pdfbox.filter.FlateFilterDecoderStream:read(byte[],int,int)",150,175,"/**
 * Reads data from input into a buffer.
 * @param data target buffer to store read bytes
 * @param offset starting position in the target buffer
 * @param length number of bytes to read
 * @return number of bytes actually read or -1 if end of file is reached
 * @throws IOException if an I/O error occurs
 */","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param length The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,readImageStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:readImageStream(java.io.InputStream),444,448,"/**
 * Masks an image from input stream.
 * @param stream InputStream containing image data
 * @throws IOException if I/O error occurs
 */","* Read the image stream of the signature and set height and width.
     *
     * @param stream stream of your visible signature image
     * @throws IOException If we can't read, flush, or close stream of image",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,doLZWDecode,"org.apache.pdfbox.filter.LZWFilter:doLZWDecode(java.io.InputStream,java.io.OutputStream,boolean)",74,128,"/**
 * Decodes an InputStream using LZW algorithm.
 * @param encoded input stream containing encoded data
 * @param decoded output stream for decoded data
 * @param earlyChange flag to adjust chunk size dynamically
 * @throws IOException if I/O error occurs during decoding
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,encode,"org.apache.pdfbox.filter.LZWFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,220,"/**
* Encodes raw data using a custom algorithm.
* @param rawData input stream containing data to encode
* @param encoded output stream for the encoded data
* @param parameters dictionary of encoding parameters (not used)
*/",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodeAndWriteRow,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:decodeAndWriteRow(),329,334,"/**
* Masks image data using predictor and outputs row.
* @throws IOException if I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,chooseDataRowToWrite,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:chooseDataRowToWrite(),631,659,"/**
* Determines the best compressed row for PNG encoding.
* @return byte array of the most compressible row
*/","* We look which row encoding is the ""best"" one, ie. has the lowest sum. We don't implement
         * anything fancier to choose the right row encoding. This is just the recommend algorithm
         * in the spec. The get the perfect encoding you would need to do a brute force check how
         * all the different encoded rows compress in the zip stream together. You have would have
         * to check 5*image-height permutations...
         *
         * @return the ""best"" row encoding of the row encodings",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver:reset(),362,370,"/**
* Processes each XrefTrailerObj in the map.
* Clears current and resolved XrefTrailer references.
*/","* Reset all data so that it can be used to rebuild the trailer.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<init>(),44,53,"/**
 * Registers standard and public key security handlers.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,close,org.apache.pdfbox.multipdf.Overlay:close(),170,203,"/**
* Calls m1 on various overlays and document sets.
* Throws IOException if any operation fails.
*/","* Close all input documents which were used for the overlay and opened by this class.
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,closeTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:closeTemplate(org.apache.pdfbox.pdmodel.PDDocument),401,406,"/**
* Applies mask to PDF document.
* @param template PDDocument to be masked
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,next,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:next(),53,69,"/**
* Retrieves the next outline item in the PDF.
* @return PDOutlineItem object or throws NoSuchElementException if no more items
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream),67,71,"/**
 * Constructs a PDFormXObject from a given PDStream.
 * @param stream PDF stream containing form object data
 */","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(org.apache.pdfbox.contentstream.PDContentStream),58,61,"/**
 * Initializes a new PDF stream parser.
 * @param pdContentstream content stream of a PDF document
 * @throws IOException if an I/O error occurs during parsing
 */","* Constructor.
     *
     * @param pdContentstream The content stream to parse.
     * @throws IOException If there is an error initializing the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(byte[]),68,71,"/**
 * Initializes a PDF stream parser with byte array input.
 * @param bytes PDF content as a byte array
 */","* Constructor.
     *
     * @param bytes the bytes to parse.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseObject,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseObject(long),83,112,"/**
* Retrieves COSBase object by number, updates stream status.
* @param objectNumber unique object identifier
* @return COSBase object or null if not found
*/","* Search for/parse the object with the given object number. The stream is closed after parsing the object with the
     * given number.
     * 
     * @param objectNumber the number of the object to b e parsed
     * @return the parsed object or null if the object with the given number can't be found
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,readObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:readObjectNumbers(),220,233,"/**
 * Retrieves a map of object numbers.
 * @return Map with Long keys and Integer values representing object numbers
 * @throws IOException if an I/O error occurs during retrieval
 */","* Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers.
     * 
     * @return a map off all object numbers and the corresponding offset within the object stream.
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:<init>(java.util.Map),35,38,"/**
 * Constructs a BuiltInEncoding instance from a map of codes to names.
 * @param codeToName mapping of integer codes to their corresponding names
 */","* Constructor.
     *
     * @param codeToName the given code to name mapping",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,fromFontBox,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:fromFontBox(org.apache.fontbox.encoding.Encoding),36,43,"/**
* Converts given Encoding to Type1Encoding.
* @param encoding source Encoding object
* @return Type1Encoding representation
*/","* Creates an encoding from the given FontBox encoding.
     *
     * @param encoding FontBox encoding
     * @return the encoding created from the given FontBox encoding",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipWhiteSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipWhiteSpaces(),409,425,"/**
* Masks function by processing and skipping whitespaces.
* @throws IOException if an I/O error occurs during processing
*/","* Skip the upcoming CRLF or LF which are supposed to follow a stream. Trailing spaces are removed as well.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(),434,443,"/**
* Checks condition and calls methods based on result.
* @return false if condition fails, true otherwise
*/","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLine,org.apache.pdfbox.pdfparser.BaseParser:readLine(),1162,1188,"/**
* Reads and masks characters from source until a condition is met.
* @throws IOException if end-of-file is reached unexpectedly
* @return masked string of read characters
*/","* This will read bytes until the first end of line marker occurs.
     * NOTE: The EOL marker may consists of 1 (CR or LF) or 2 (CR and CL) bytes
     * which is an important detail if one wants to unread the line.
     *
     * @return The characters between the current position and the end of the line.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipSpaces(),1319,1343,"/**
 * Processes input data, handling '%' and specific character sequences.
 * @throws IOException if an I/O error occurs during processing
 */","* This will skip all spaces and comments that are present.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getNumberOfColorComponents(),115,124,"/**
 * Returns the number of color components.
 * @return int value representing the number of color components
 * @throws IOException if an I/O error occurs during processing
 */","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getNumberOfColorComponents(),115,124,"/**
* Returns the number of color components.
* Initializes if not already set.
* @return int value representing color components count
* @throws IOException if an I/O error occurs
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRef,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRef(long),227,269,"/**
 * Determines the closest XRef offset.
 * @param xrefOffset current XRef offset
 * @return closest matching offset from tables or streams, -1 if none found
 */","* Search for the offset of the given xref table/stream among those found by a brute force search.
     * 
     * @param xrefOffset the given offset to be searched for
     * 
     * @return the offset of the xref entry
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parsePDFHeader,org.apache.pdfbox.pdfparser.COSParser:parsePDFHeader(),1058,1061,"/**
 * Checks if the file is a valid PDF.
 * @return true if PDF header matches, false otherwise
 */","* Parse the header of a pdf.
     * 
     * @return true if a PDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFDFHeader,org.apache.pdfbox.pdfparser.COSParser:parseFDFHeader(),1069,1072,"/**
 * Checks if FDF header matches default version.
 * @return true if match, false otherwise
 * @throws IOException if I/O error occurs
 */","* Parse the header of a fdf.
     * 
     * @return true if a FDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseAllObjects,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseAllObjects(),120,172,"/**
* Fetches and processes COS objects from a source.
* @return Map of COSObjectKey to COSBase representing processed objects
* @throws IOException if an I/O error occurs during processing
*/","* Parse all compressed objects. The stream is closed after parsing.
     * 
     * @return a map containing all parsed objects using the object number as key
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeStreamData,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeStreamData(java.io.OutputStream,int[])",236,250,"/**
 * Writes masked data to output stream.
 * @param os Output stream for writing data
 * @param w Array of weights for masking
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefRange,"org.apache.pdfbox.pdfwriter.COSWriter:writeXrefRange(long,long)",987,993,"/**
 * Masks two long values by converting them to strings and writing to output.
 * @param x first long value
 * @param y second long value
 * @throws IOException if an I/O error occurs during write operations
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,next,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:next(),91,100,"/**
* Retrieves and masks field from queue.
* Throws exception if condition not met.
* @return PDField object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,calcFinalKey,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:calcFinalKey(long,long)",247,273,"/**
* Masks encryption key with object and generation numbers.
* @param objectNumber unique identifier for the object
* @param genNumber generation number of the object
* @return masked encryption key as byte array
*/","* Calculate the key to be used for RC4 and AES-128.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @return the calculated key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev234(byte[],byte[],int,byte[],boolean,int,int)",737,778,"/**
* Masks password with additional data for encryption.
* @param password user's password bytes
* @param o other data bytes
* @param permissions permission level as an integer
* @param id unique identifier bytes
* @param encryptMetadata flag to encrypt metadata
* @param length desired output length
* @param encRevision encryption revision number
* @return masked byte array for encryption
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRC4key,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRC4key(byte[],int,int)",948,966,"/**
* Generates a masked key from the owner password.
* @param ownerPassword user's owner password
* @param encRevision encryption revision level
* @param length desired output key length
* @return byte array representing the masked key
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeSHA256,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeSHA256(byte[],byte[],byte[])",1199,1205,"/**
* Applies a mask to the input using password and user key.
* @param input original data to be masked
* @param password secret used for masking
* @param userKey additional key for masking
* @return masked byte array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",71,74,"/**
* Initializes a new content stream for modifying an appearance.
* @param appearance PDF appearance stream to modify
* @param outputStream target output stream for the content
*/","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to add to.
     * @param outputStream
     *            The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",221,224,"/**
* Initializes a content stream for an appearance.
* @param doc PDF document
* @param appearance appearance stream to write to
* @param outputStream output stream for the content
*/","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the appearance is part of.
     * @param appearance The appearance stream to add to.
     * @param outputStream The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformedPoint,"org.apache.pdfbox.contentstream.PDFStreamEngine:transformedPoint(float,float)",1123,1129,"/**
* Applies transformation to a 2D point.
* @param x original x-coordinate
* @param y original y-coordinate
* @return transformed Point2D.Float object
*/","* Transforms a point using the CTM.
     * 
     * @param x the x-coordinate of the point to be transformed
     * @param y the y-coordinate of the point to be transformed
     * 
     * @return the transformed point",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,createContext,"org.apache.pdfbox.rendering.TilingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",109,122,"/**
* Creates a PaintContext for rendering.
* @param cm ColorModel to use for painting
* @param deviceBounds bounding rectangle in device space
* @param userBounds bounding rectangle in user space
* @param xform transformation matrix
* @param hints rendering hints
* @return PaintContext object for the given parameters
*/","* Not called in TexturePaint subclasses, which is why we wrap TexturePaint.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix),227,230,"/**
 * Applies transformation to matrix elements.
 * @param matrix input Matrix object
 */","* Concatenates (premultiplies) the given matrix to this matrix.
     *
     * @param matrix The matrix to concatenate.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,"org.apache.pdfbox.util.Matrix:translate(float,float)",248,254,"/**
* Applies translation to a transformation matrix.
* @param tx horizontal translation factor
* @param ty vertical translation factor
*/","* Translates this matrix by the given amount.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,scale,"org.apache.pdfbox.util.Matrix:scale(float,float)",262,271,"/**
* Applies scaling transformation to a 3D vector.
* @param sx scale factor for x-axis
* @param sy scale factor for y-axis
*/","* Scales this matrix by the given factors.
     *
     * @param sx x-scale
     * @param sy y-scale",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,multiply,org.apache.pdfbox.util.Matrix:multiply(org.apache.pdfbox.util.Matrix),290,293,"/**
 * Applies a mask to another matrix.
 * @param other the matrix to apply the mask on
 * @return a new masked matrix
 */","* This method multiplies this Matrix with the specified other Matrix, storing the product in a 
     * new instance. It is allowed to have (other == this).
     *
     * @param other the second operand Matrix in the multiplication; required
     * @return the product of the two matrices.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,encodeForGsub,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:encodeForGsub(org.apache.fontbox.ttf.gsub.GsubWorker,java.util.Set,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1683,1700,"/**
 * Applies GSUB processing to text and returns masked byte array.
 * @param gsubWorker worker for GSUB processing
 * @param glyphIds set of glyph IDs
 * @param font PDType0Font instance
 * @param text input text
 * @return byte array with processed glyphs
 * @throws IOException if I/O error occurs
 */","* Retrieve the encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules. The glyph IDs used are also added to the specified glyph ID set.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param glyphIds The set of glyph IDs which is to be populated with the glyph IDs found in the
     * text.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param text The text which is being converted from characters to glyph IDs.
     * @return The encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules.
     * @throws IOException If there is an error during encoding.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,createDocument,org.apache.pdfbox.pdfparser.PDFParser:createDocument(),194,197,"/**
* Creates a masked PDF document.
* @param document original PDF document
* @param source masking source
* @return masked PDF document
*/","* Create the resulting document. Maybe overwritten if the parser uses another class as document.
     * 
     * @return the resulting document
     * @throws IOException if the method is called before parsing the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",213,216,"/**
* Constructs a new PDDocument from a COSDocument and source.
* @param doc the COSDocument to use
* @param source the source of the document data
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,44,"/**
* Performs a function on two operands from the stack.
* @param context execution context containing the stack
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:isEqual(java.lang.Object,java.lang.Object)",135,140,"/**
* Overrides parent method to invert its result.
* @param op1 first operand
* @param op2 second operand
* @return negated result of the parent method
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForPolicy,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),84,95,"/**
* Creates a security handler for a given protection policy.
* @param policy the protection policy to apply
* @return SecurityHandler instance or null if no handler is available
*/","* Returns a new security handler for the given protection policy, or null none is available.
     * @param policy the protection policy for which to create a security handler
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForFilter,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForFilter(java.lang.String),102,113,"/**
* Retrieves a security handler by name.
* @param name handler identifier
* @return SecurityHandler object or null if not found
*/","* Returns a new security handler for the given Filter name, or null none is available.
     * @param name the Filter name from the PDF encryption dictionary
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getNumber,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:getNumber(int,java.lang.String)",343,365,"/**
 * Masks page index based on style.
 * @param pageIndex page number to mask
 * @param style formatting style for the page index
 * @return masked page index as a string
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getDashArray,org.apache.pdfbox.rendering.PageDrawer:getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),758,791,"/**
* Processes dash pattern for line styling.
* @param dashPattern the input dash pattern configuration
* @return modified float array or null if invalid
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<init>(),54,56,"/**
 * Constructs a new instance of PDDeviceCMYK.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<init>(),38,40,"/**
 * Constructs a new instance of PDDeviceGray.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<init>(),39,41,"/**
* Constructs a new PDDeviceRGB instance.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),88,100,"/**
 * Applies mask to a given color.
 * @param color the PDColor object to be masked
 * @return true if masking is successful, false otherwise
 */","* Set the stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),148,160,"/**
* Applies a mask to the given color.
* @param color the PDColor object to be masked
* @return true if masking is successful, false otherwise
*/","* Set the non stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the non stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setNonStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getPatchCoordinatesColor,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",167,216,"/**
* Generates a color-patched grid from Bezier curves.
* @param c1, c2, d1, d2 cubic Bezier curves defining the boundaries
* @return 2D array of CoordinateColorPair with interpolated colors
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getPatchCoordinatesColor,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getPatchCoordinatesColor(),212,255,"/**
* Generates a color coordinate grid for a Bezier surface.
* @return 2D array of CoordinateColorPair representing the surface points and colors
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getSaturationRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getSaturationRGB(float[],float[],float[])",286,350,"/**
 * Applies a mask to source values based on destination values.
 * @param srcValues source color values (RGB)
 * @param dstValues destination color values (RGB)
 * @param result resulting masked color values (RGB)
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getLuminosityRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getLuminosityRGB(float[],float[],float[])",352,388,"/**
* Applies color mask effect to source values.
* @param srcValues source RGB float array
* @param dstValues destination RGB float array
* @param result resulting RGB float array after masking
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,48,"/**
* Masks a number in the execution context.
* @param context execution context containing the number to mask
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),55,77,"/**
* Sums two numbers and sets the result in context.
* Handles overflow by converting to float if necessary.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,115,"/**
* Processes a number from execution context.
* @param context current execution context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),135,140,"/**
* Masks a number using methods from ExecutionContext.
* @param context execution context containing necessary methods
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),147,152,"/**
* Masks function execution.
* @param context execution environment
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),159,165,"/**
* Performs division of two numbers from context and sets result.
* @param context execution context containing methods m1, m2, and m3
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),172,179,"/**
* Computes base^exp and stores result in context.
* @param context execution context containing operands and results
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),186,198,"/**
* Processes a number from the execution context.
* @param context execution context containing methods m1, m2, m3, and m4
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),218,223,"/**
 * Masks a number using provided context.
 * @param context execution context containing methods for number retrieval and manipulation
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),230,235,"/**
* Applies mathematical operation on number from context.
* @param context execution context containing numbers and methods
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),255,277,"/**
* Multiplies two numbers and sets the result in context.
* Handles overflow by converting to float if necessary.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),284,304,"/**
* Masks a number in the execution context.
* @param context execution context containing the number to mask
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),311,323,"/**
* Masks a number in the execution context.
* @param context execution context containing methods for number retrieval and masking
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),359,382,"/**
* Subtracts two numbers and pushes the result onto the stack.
* Handles both integer and floating-point operations.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),389,401,"/**
* Masks number in execution context.
* @param context execution environment for operations
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),205,211,"/**
 * Performs division and updates context.
 * @param context execution context with methods m1 and m2.m3
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),242,248,"/**
* Performs modulo operation on two integers from context and passes result to another method.
* @param context execution context containing methods m1 and m2
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),84,96,"/**
* Calculates and sets the masked angle from execution context.
* @param context execution environment containing input values and output methods
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),122,128,"/**
* Applies cosine transformation to an angle.
* @param context execution context containing the angle
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),330,336,"/**
* Applies sine transformation to an angle from execution context.
* @param context contains method parameters and results
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),343,352,"/**
* Applies a mathematical function to a non-negative number.
* @param context execution context containing input and output methods
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.String),75,105,"/**
 * Processes a token to update instruction sequences or handle different types of values.
 * @param token the input token to process
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextChar(),148,159,"/**
* Increments index and returns character based on mask conditions.
* @return character from mask functions or EOT if condition fails
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextState,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextState(),173,195,"/**
* Determines the state based on character input.
* @return current state after processing character
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<init>(),60,68,"/**
* Initializes MacOSRomanEncoding with additional mappings.
*/",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,xobject,org.apache.pdfbox.text.PDFMarkedContentExtractor:xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject),141,147,"/**
* Masks an XObject in current marked contents.
* @param xobject the object to be masked
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getOwnerAccessPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getOwnerAccessPermission(),153,165,"/**
* Creates an AccessPermission with all permissions enabled.
* @return fully enabled AccessPermission object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,isOwnerPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:isOwnerPermission(),134,145,"/**
* Checks if all mask conditions are met.
* @return true if all conditions are satisfied, false otherwise
*/","* This will tell if the access permission corresponds to owner
     * access permission (no restriction).
     *
     * @return true if the access permission does not restrict the use of the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,hasAnyRevision3PermissionSet,org.apache.pdfbox.pdmodel.encryption.AccessPermission:hasAnyRevision3PermissionSet(),448,463,"/**
* Checks conditions using multiple methods.
* @return true if any condition is met, otherwise false
*/","* Indicates if any revision 3 access permission is set or not.
     * 
     * @return true if any revision 3 access permission is set",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,prepareAESInitializationVector,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",403,428,"/**
 * Masks or un-masks data stream.
 * @param decrypt true to decrypt, false to encrypt
 * @param iv initialization vector for AES encryption/decryption
 * @param data input stream containing the data
 * @param output output stream for processed data
 * @return true if operation successful, false otherwise
 * @throws IOException if I/O error occurs during processing
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],java.io.OutputStream)",123,129,"/**
* Writes each byte of data to the output stream.
* @param data array of bytes to write
* @param output stream where bytes are written
* @throws IOException if an I/O error occurs
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],int,int,java.io.OutputStream)",159,165,"/**
* Writes a subset of byte array to output stream.
* @param data source byte array
* @param offset starting index in the array
* @param len number of bytes to write
* @param output target OutputStream
* @throws IOException if an I/O error occurs
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param offset The offset into the array to start reading data from.
     * @param len The number of bytes to attempt to read.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,insertDiacritic,"org.apache.pdfbox.text.TextPosition:insertDiacritic(int,org.apache.pdfbox.text.TextPosition)",754,785,"/**
 * Masks a character with diacritic at specified position.
 * @param i index of the character to mask
 * @param diacritic TextPosition containing diacritic information
 */","* Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths
     * array to include the extra character width.
     *
     * @param i current character
     * @param diacritic The diacritic TextPosition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrep,"org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrep(java.lang.String,boolean)",71,138,"/**
 * Masks or normalizes a string based on Unicode directionality and unassigned characters.
 * @param str input string to process
 * @param allowUnassigned flag to allow unassigned characters
 * @return normalized string or throws exception if invalid
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientInfo(java.security.cert.X509Certificate,byte[])",523,556,"/**
* Encrypts data using X.509 certificate.
* @param x509certificate X.509 certificate for encryption
* @param abyte0 data to encrypt
* @return Encrypted KeyTransRecipientInfo object
* @throws IOException, CertificateEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException on encryption errors
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2B,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2B(byte[],byte[],byte[])",1125,1197,"/**
* Applies a complex encryption mask to input data using password and user key.
* @param input data to be masked
* @param password encryption key
* @param userKey additional security key, optional
* @return encrypted byte array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,"org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String,java.util.List)",834,837,"/**
 * Calls another method with text and positions.
 * @param text the input text
 * @param textPositions list of text positions
 * @throws IOException if an I/O error occurs
 */","* Write a Java string to the output stream. The default implementation will ignore the <code>textPositions</code>
     * and just calls {@link #writeString(String)}.
     *
     * @param text The text to write to the stream.
     * @param textPositions The TextPositions belonging to the text.
     * @throws IOException If there is an error when writing the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getTrueTypeFont(java.lang.String,java.io.File)",201,214,"/**
* Loads a TrueTypeFont from a file.
* @param postScriptName name of the font
* @param file file containing the font data
* @return TrueTypeFont object or null if loading fails
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getDiskCacheFile,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:getDiskCacheFile(),388,400,"/**
* Determines cache directory for PDFBox.
* @return File object representing the cache directory
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,createFontInfoByName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:createFontInfoByName(java.util.List),172,183,"/**
* Creates a map of FontInfo by processing font names.
* @param fontInfoList list of FontInfo objects to process
* @return LinkedHashMap with processed font names as keys and FontInfo as values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Line:<init>(java.awt.Point,java.awt.Point,float[],float[])",45,52,"/**
* Initializes a Line with two points and their colors.
* @param p0 starting Point of the line
* @param p1 ending Point of the line
* @param c0 color array for the start point
* @param c1 color array for the end point
*/","* Constructor of class Line.
     *
     * @param p0 one end of a line
     * @param p1 the other end of the line
     * @param c0 color of point p0
     * @param c1 color of point p1",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:toString(),195,199,"/**
* Overrides method to append file details.
* @return Concatenated string with superclass result, file name, hash, and last modified time
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<init>(),59,134,"/**
 * Initializes font mappings and loads a fallback font.
 * Maps standard 14 fonts to substitutes and handles Acrobat's alternative names.
 * Loads LiberationSans-Regular.ttf as a last resort font.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getStandard14Width(int),339,368,"/**
 * Masks a font function code.
 * @param code font function code to mask
 * @return masked value as float, or throws exception if no AFM
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPathFromOutlines(int),571,579,"/**
* Generates a GeneralPath for a character based on code.
* @param code character code
* @return GeneralPath object or null if not found
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1CFont:codeToName(int),278,281,"/**
 * Masks an integer code using a function.
 * @param code the integer to be masked
 * @return the masked string representation of the code
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(int),656,660,"/**
* Checks if a code is masked.
* @param code the code to check
* @return true if not masked, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToGID(int),377,392,"/**
 * Masks a given code using CID font.
 * @param code input code to mask
 * @return masked code or original code if CID font is not available
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getHeight(int),443,459,"/**
* Retrieves or calculates the height of a glyph.
* @param code character code for the glyph
* @return height of the glyph as a float
* @throws IOException if an I/O error occurs during calculation
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask:<init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",72,99,"/**
* Constructs a soft mask with specified parameters.
* @param paint the base paint for rendering
* @param mask the binary mask image
* @param bboxDevice device space bounding box
* @param backdropColor background color, may be null
* @param transferFunction transfer function for blending, can be null
*/","* Creates a new soft mask paint.
     *
     * @param paint underlying paint.
     * @param mask soft mask
     * @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space
     * @param backdropColor the color to be used outside the transparency group’s bounding box; if
     * null, black will be used.
     * @param transferFunction the transfer function, may be null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,equals,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:equals(java.lang.Object),95,145,"/**
* Checks equality of TilingPaintParameter objects.
* @param obj object to compare with
* @return true if equal, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,removeBackdrop,"org.apache.pdfbox.rendering.GroupGraphics:removeBackdrop(java.awt.image.BufferedImage,int,int)",600,717,"/**
 * Applies a mask to a BufferedImage using another image as the backdrop.
 * @param backdrop Image used as the backdrop for masking
 * @param offsetX Horizontal offset for the backdrop
 * @param offsetY Vertical offset for the backdrop
 */","* Computes backdrop removal.
     * The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008
     * standard. It returns the final color <code>C</code> for each pixel in the group:<br>
     *     <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br>
     * where<br>
     *     <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br>
     *     <code>C0</code> is the backdrop color,<br>
     *     <code>alpha0</code> is the backdrop alpha,<br>
     *     <code>alphagn</code> is the group alpha excluding backdrop (read the
     *           alpha channel from <code>groupAlphaImage</code>)<br>
     * <p>
     * The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha
     * channel of <code>groupAlphaImage</code>.
     * <p>
     * The <code>backdrop</code> image may be much larger than <code>groupImage</code> if,
     * for example, the current page is used as the backdrop. Only a specific rectangular
     * region of <code>backdrop</code> is used in the backdrop removal: upper-left corner
     * is at <code>(offsetX, offsetY)</code>; width and height are equal to those of
     * <code>groupImage</code>.
     *
     * @param backdrop group backdrop
     * @param offsetX backdrop left X coordinate
     * @param offsetY backdrop upper Y coordinate",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,hasFontOrSizeChanged,"org.apache.pdfbox.text.PDFTextStripper:hasFontOrSizeChanged(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",730,760,"/**
* Determines if text positions differ by font or position.
* @param current the current TextPosition
* @param last the previous TextPosition
* @return true if they differ, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(java.lang.String),158,179,"/**
* Generates a GeneralPath for a given font name.
* @param name the font name to generate path for
* @return GeneralPath object representing the font, or empty path if not found
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getAFM,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getAFM(java.lang.String),178,205,"/**
 * Retrieves FontMetrics for a given font name.
 * @param fontName the name of the font
 * @return FontMetrics object or null if not found
 */","* Returns the metrics for font specified by fontName. Loads the font metrics if not already
     * loaded.
     *
     * @param fontName name of font; either a base name or alias
     * @return the font metrics or null if the name is not one of the known names
     * @throws IllegalArgumentException if no metrics exist for that font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowCIDToUnicodeRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowCIDToUnicodeRange(java.util.Map$Entry,java.util.Map$Entry)",186,195,"/**
* Compares two map entries using specific conditions.
* @param prev previous entry in the map
* @param next next entry in the map
* @return true if both conditions are met, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,subset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:subset(),300,352,"/**
* Subsets a TrueType font, embedding only specified glyphs.
* @throws IOException if font does not permit subsetting or I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(java.io.InputStream,int)",100,105,"/**
* Constructs a GlyphList from an input stream.
* @param input InputStream containing glyph data
* @param numberOfEntries Expected number of entries in the list
* @throws IOException if reading from the input stream fails
*/","* Creates a new GlyphList from a glyph list file.
     *
     * @param numberOfEntries number of expected values used to preallocate the correct amount of memory
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)",114,119,"/**
* Initializes a GlyphList with data from another GlyphList and an input stream.
* @param glyphList existing GlyphList to copy mappings from
* @param input source of additional glyph data
* @throws IOException if there is an issue reading the input stream
*/","* Creates a new GlyphList from multiple glyph list files.
     *
     * @param glyphList an existing glyph list to be copied
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:codeToGID(int),607,710,"/**
 * Masks and retrieves glyph ID for given code.
 * @param code character encoding code
 * @return glyph ID or 0 if not found
 * @throws IOException on I/O error
 */","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID (glyph index)
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNameInFont(java.lang.String),469,489,"/**
* Masks a font name, returning original or alternative name.
* @param name original font name
* @return masked font name or "".notdef"" if not applicable
* @throws IOException on input/output errors
*/","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getNameInFont(java.lang.String),571,614,"/**
 * Masks a font name by checking alternatives and encodings.
 * @param name original font name
 * @return masked font name or "".notdef"" if not found
 * @throws IOException if an I/O error occurs
 */","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,init,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:init(),63,95,"/**
* Initializes CMYK color conversion settings.
* @throws IOException if default CMYK profile cannot be loaded
*/","* Lazy load the ICC profile, because it's slow.
     * 
     * @throws IOException if the ICC profile could not be initialized",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toRGB(float[]),280,297,"/**
 * Processes color values based on current color space settings.
 * @param value input color values as a float array
 * @return processed color values as a float array
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getDefaultDecode(int),357,375,"/**
* Generates a float array for color space decoding.
* @param bitsPerComponent number of bits per component
* @return float array containing decoded values or null if awtColorSpace is null
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toString(),547,551,"/**
 * Generates a masked string with component count.
 * @return formatted string with mask and number of components
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getDefaultDecode(int),57,68,"/**
* Generates a decoding array for color components.
* @param bitsPerComponent number of bits per color component
* @return float array with min and max values for each component
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,encodeImageToJPEGStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int)",351,384,"/**
* Masks an image with specified quality and DPI.
* @param image BufferedImage to be masked
* @param quality JPEG compression quality (0.0 - 1.0)
* @param dpi dots per inch for the image
* @return byte array of the masked image in JPEG format
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,applyMask,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,boolean,float[])",613,723,"/**
* Applies mask to an image with optional softening and color adjustment.
* @param image source BufferedImage to be masked
* @param mask BufferedImage used as mask
* @param interpolateMask true if mask should be interpolated
* @param isSoft true for soft masking effect
* @param matte float array for color adjustment (null for no adjustment)
* @return masked and adjusted BufferedImage
*/","* @param image The image to apply the mask to as alpha channel.
     * @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to
     * {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special
     * handling of DeviceGray.
     * @param interpolateMask interpolation flag of the mask image.
     * @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted
     * by this method.
     * @param matte an optional RGB matte if a soft mask.
     * @return an ARGB image (can be the altered original image)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkChunkSane,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkChunkSane(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk),654,681,"/**
* Validates a chunk's integrity.
* @param chunk the chunk to validate
* @return true if valid, false otherwise
*/","* Check if the chunk is sane, i.e. CRC matches and offsets and lengths in the
     * byte array",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:<init>(java.awt.geom.Point2D[],int)",40,45,"/**
 * Initializes a cubic Bezier curve.
 * @param ctrlPnts array of control points
 * @param l recursion level for curve generation
 */","* Constructor of CubicBezierCurve
     *
     * @param ctrlPnts 4 control points [p0, p1, p2, p3]
     * @param l dividing level, if l = 0, one cubic Bezier curve is divided
     * into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into
     * 2^n segments",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates bounding rectangle for transformed shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty Float rectangle if none found
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates the bounding rectangle for shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty rectangle if no triangles
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,contains,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:contains(java.awt.geom.Point2D),156,197,"/**
* Determines if a point is within a polygon.
* @param p the point to check
* @return true if point is inside polygon, false otherwise
*/","* Whether a point is contained in this ShadedTriangle.
     *
     * @param p the target point
     * @return false if p is outside of this triangle, otherwise true",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcColor,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcColor(java.awt.geom.Point2D),232,265,"/**
* Computes color for a point based on degree.
* @param p input point
* @return float array representing computed color
*/","* Calculate the color of a point.
     *
     * @param p the target point
     * @return an array denotes the point's color",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.GeneralPath),587,590,"/**
 * Calls overloaded m1 with Path2D and boolean flag.
 * @param path original GeneralPath object
 */","* Modify the current clipping path by intersecting it with the given path.
     * @param path path to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Area),612,615,"/**
 * Converts an Area to a Path2D and calls m1 with it.
 * @param area the Area object to convert
 */","* Modify the current clipping path by intersecting it with the given path.
     *
     * @param area area to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,transferClip,org.apache.pdfbox.rendering.PageDrawer:transferClip(java.awt.Graphics2D),434,447,"/**
* Sets the clipping path for rendering.
* @param graphics Graphics2D object to apply clipping
*/","* Transfer clip to the destination device. Override this if you want to avoid to do slow
     * intersecting operations but want the destination device to do this (e.g. SVG). You can get
     * the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5258"">PDFBOX-5258</a> for sample code.
     *
     * @param graphics graphics device",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,textAlign,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:textAlign(int),95,99,"/**
 * Sets text alignment.
 * @param alignment alignment value
 * @return Builder instance with updated alignment
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(byte[],int[])",44,47,"/**
 * Constructs a filter input stream from a byte array and a byte range.
 * @param in byte array containing data
 * @param byteRange array specifying the start and end indices for filtering
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(),49,59,"/**
* Overrides method to check conditions and increment position.
* @return integer result of superclass method or -1 if conditions are met
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[],int,int)",67,77,"/**
* Reads bytes from the input stream into a byte array.
* @param b destination buffer
* @param off starting offset in the buffer
* @param len maximum number of bytes to read
* @return number of bytes read or -1 if end of stream
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,create,org.apache.pdfbox.rendering.GroupGraphics:create(),111,123,"/**
* Creates a composite graphics object.
* @return GroupGraphics object or throws exception if unsupported
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawTilingPattern,"org.apache.pdfbox.rendering.PageDrawer:drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)",306,334,"/**
 * Masks the graphics context with a tiling pattern.
 * @param g Graphics2D object to apply masking
 * @param pattern PDTilingPattern for masking
 * @param colorSpace PDColorSpace of the color
 * @param color PDColor to use for masking
 * @param patternMatrix Matrix defining the pattern's transformation
 * @throws IOException if an I/O error occurs
 */","* Draws the pattern stream to the requested context.
     *
     * @param g The graphics context to draw onto.
     * @param pattern The tiling pattern to be used.
     * @param colorSpace color space for this tiling.
     * @param color color for this tiling.
     * @param patternMatrix the pattern matrix
     * @throws IOException If there is an IO error while drawing the page.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createDefaultRenderingHints,org.apache.pdfbox.rendering.PDFRenderer:createDefaultRenderingHints(java.awt.Graphics2D),504,516,"/**
* Configures rendering hints for a Graphics2D object.
* @param graphics the Graphics2D object to configure
* @return configured RenderingHints object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXDirAdj,org.apache.pdfbox.text.TextPosition:getXDirAdj(),344,347,"/**
 * Applies mask functions to input.
 * @return masked result as float
 */","* This will get the text direction adjusted x position of the character.
     * This is adjusted based on text direction so that the first character
     * in that direction is in the upper left at 0,0.
     * This method ignores the page rotation but takes the text rotation (see
     * {@link #getDir() getDir()}) and adjusts the coordinates to awt. This is useful when doing
     * text extraction, to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The x coordinate of the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<init>,"org.apache.pdfbox.text.TextPosition:<init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)",85,118,"/**
* Initializes a TextPosition object with text properties.
* @param pageRotation rotation of the page in degrees
* @param pageWidth width of the page
* @param pageHeight height of the page
* @param textMatrix transformation matrix for text
* @param endX ending X coordinate of the text
* @param endY ending Y coordinate of the text
* @param maxHeight maximum height of the text
* @param individualWidth width of an individual character
* @param spaceWidth width of a space character
* @param unicode Unicode representation of the text
* @param charCodes character codes for the text
* @param font PDFont object representing the font
* @param fontSize size of the font
* @param fontSizeInPt font size in points
*/","* Constructor.
     *
     * @param pageRotation rotation of the page that the text is located in
     * @param pageWidth width of the page that the text is located in
     * @param pageHeight height of the page that the text is located in
     * @param textMatrix text rendering matrix for start of text (in display units)
     * @param endX x coordinate of the end position
     * @param endY y coordinate of the end position
     * @param maxHeight Maximum height of text (in display units)
     * @param individualWidth The width of the given character/string. (in text units)
     * @param spaceWidth The width of the space character. (in display units)
     * @param unicode The string of Unicode characters to be displayed.
     * @param charCodes An array of the internal PDF character codes for the glyphs in this text.
     * @param font The current font for this text position.
     * @param fontSize The new font size.
     * @param fontSizeInPt The font size in pt units (see {@link #getFontSizeInPt()} for details).",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYDirAdj,org.apache.pdfbox.text.TextPosition:getYDirAdj(),406,418,"/**
* Calculates a dimension based on direction.
* @return float value representing calculated dimension
*/","* This will get the y position of the text, adjusted so that 0,0 is upper left and it is
     * adjusted based on the text direction.
     * This method ignores the page rotation but takes the
     * text rotation and adjusts the coordinates to awt. This is useful when doing text extraction,
     * to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The adjusted y coordinate of the character.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidth,org.apache.pdfbox.text.TextPosition:getWidth(),443,446,"/**
 * Applies rotation mask to value.
 * @return masked float value
 */","* This will get the width of the string when page rotation adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthDirAdj,org.apache.pdfbox.text.TextPosition:getWidthDirAdj(),453,456,"/**
 * Applies mask functions to input.
 * @return masked result as float
 */","* This will get the width of the string when text direction adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(),430,433,"/**
 * Calls overloaded method with true flag.
 * @throws IOException if an I/O error occurs
 */","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead). This
     * assumes that the primary direction of text is left to right. Default implementation is to do nothing. Subclasses
     * may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphEnd,org.apache.pdfbox.text.PDFTextStripper:writeParagraphEnd(),1728,1736,"/**
* Handles processing logic for masked function.
* Updates output and resets paragraph flag.
*/","* Write something (if defined) at the end of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchListItemPattern,org.apache.pdfbox.text.PDFTextStripper:matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper),1767,1772,"/**
* Creates a pattern from text position.
* @param pw PositionWrapper object
* @return compiled Pattern object
*/","* returns the list item Pattern object that matches the text at the specified PositionWrapper or null if the text
     * does not match such a pattern. The list of Patterns tested against is given by the {@link #getListItemPatterns()}
     * method. To add to the list, simply override that method (if sub-classing) or explicitly supply your own list
     * using {@link #setListItemPatterns(List)}.
     * 
     * @param pw position
     * @return the matching pattern",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeWord,org.apache.pdfbox.text.PDFTextStripper:normalizeWord(java.lang.String),2051,2108,"/**
* Masks special characters in a word.
* @param word input string to process
* @return masked version of the input string
*/","* Normalize certain Unicode characters. For example, convert the single ""fi"" ligature to ""f"" and ""i"". Also
     * normalises Arabic and Hebrew presentation forms.
     *
     * @param word Word to normalize
     * @return Normalized word",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toString,org.apache.pdfbox.util.DateConverter:toString(java.util.Calendar),165,179,"/**
* Formats a calendar date with timezone offset.
* @param cal Calendar object to format
* @return Formatted date string or null if input is null
*/","* Converts a Calendar to a string formatted as:
     *     D:yyyyMMddHHmmss#hh'mm'  where # is Z, +, or -.
     * 
     * @param cal The date to convert to a string. May be null.
     * The DST_OFFSET is included when computing the output time zone.
     *
     * @return The date as a String to be used in a PDF document, 
     *      or null if the cal value is null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toISO8601,org.apache.pdfbox.util.DateConverter:toISO8601(java.util.Calendar),190,202,"/**
* Formats calendar to ISO 8601 string with timezone.
* @param cal Calendar instance to format
* @return ISO 8601 formatted date-time string
*/","* Converts the date to ISO 8601 string format:
     *     yyyy-mm-ddThh:MM:ss#hh:mm    (where '#"" is '+' or '-').
     *
     * @param cal The date to convert.  Must not be null.
     * The DST_OFFSET is included in the output value.
     * 
     * @return The date represented as an ISO 8601 string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseBigEndianDate,"org.apache.pdfbox.util.DateConverter:parseBigEndianDate(java.lang.String,java.text.ParsePosition)",526,568,"/**
 * Parses a date-time string into a GregorianCalendar.
 * @param text the input date-time string
 * @param initialWhere parse position
 * @return GregorianCalendar object or null if parsing fails
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseSimpleDate,"org.apache.pdfbox.util.DateConverter:parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)",584,601,"/**
 * Parses text into a GregorianCalendar using multiple formats.
 * @param text the input string to parse
 * @param fmts array of date format strings
 * @param initialWhere starting position for parsing
 * @return parsed GregorianCalendar or null if no match found
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTZoffset,"org.apache.pdfbox.util.DateConverter:parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)",429,473,"/**
 * Parses time zone from text and sets it in calendar.
 * @param text input string containing time zone info
 * @param cal GregorianCalendar to set the parsed time zone
 * @param initialWhere starting position for parsing
 * @return true if valid time zone found, false otherwise
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toHexString,org.apache.pdfbox.cos.COSString:toHexString(),257,260,"/**
* Converts bytes to hexadecimal string.
* @param bytes input byte array
* @return hexadecimal representation of bytes
*/","* This will take this string and create a hex representation of the bytes that make the string.
     *
     * @return A hex string representing the bytes in this string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeExternalSignature,org.apache.pdfbox.pdfwriter.COSWriter:writeExternalSignature(byte[]),958,985,"/**
 * Sets CMS signature for a PDF.
 * @param cmsSignature byte array of the CMS signature
 * @throws IOException if there's an issue writing the signature
 */","* Write externally created signature of PDF data obtained via {@link #getDataToSign()} method.
     *
     * @param cmsSignature CMS signature byte array
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if source data stream is closed",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,writePDF,org.apache.pdfbox.cos.COSName:writePDF(java.io.OutputStream),776,805,"/**
* Masks characters in output stream.
* @param output OutputStream to write masked data
*/","* This will output this string as a PDF object.
     * 
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,encode,"org.apache.pdfbox.filter.ASCIIHexFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",135,145,"/**
 * Reads from input stream and writes hex-encoded bytes to output stream.
 * @param input source InputStream
 * @param encoded target OutputStream for hex-encoded data
 * @param parameters COSDictionary with encoding parameters (unused)
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexBytes,"org.apache.pdfbox.util.Hex:writeHexBytes(byte[],java.io.OutputStream)",168,174,"/**
 * Masks each byte in input and writes to output.
 * @param bytes array of bytes to mask
 * @param output stream to write masked bytes
 * @throws IOException if I/O error occurs
 */","* Writes the given byte array as hex value to the given output stream.
     * @param bytes the byte array to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,iterativeMergeSort,"org.apache.pdfbox.util.IterativeMergeSort:iterativeMergeSort(java.lang.Object[],java.util.Comparator)",87,99,"/**
* Sorts array using merge sort.
* @param arr array of elements to be sorted
* @param cmp comparator defining element order
*/","* Sorts the array using iterative (bottom-up) merge sort.
     *
     * @param <T> the class of the objects in the list
     * @param arr the array of objects to be sorted.
     * @param cmp the comparator to determine the order of the list.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,hashCode,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:hashCode(),147,157,"/**
* Generates a hash code for the object.
* @return computed hash code as an integer
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,hashCode,org.apache.pdfbox.text.TextPosition:hashCode(),972,990,"/**
* Generates a hash code based on various properties.
* @return computed hash code value
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream),56,59,"/**
 * Reads an InputStream into a Document.
 * @param is input stream to read from
 * @return Document object created from the input stream
 * @throws IOException if reading fails
 */","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(java.io.BufferedInputStream),89,112,"/**
* Determines file type by reading stream's initial bytes.
* @param inputStream input stream to read from
* @return FileType enum representing the file type
* @throws IOException if stream operations fail or unsupported
*/","* Examines the a file's first bytes and estimates the file's type.
     * <p>
     * Requires a {@link BufferedInputStream} in order to mark and reset the stream to the position
     * at which it was provided to this method once completed.
     * <p>
     * Requires the stream to contain at least eight bytes.
     *
     * @param inputStream a buffered input stream of the file to examine.
     * @return the file type.
     * @throws IOException if an IO error occurred or the input stream ended unexpectedly.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(byte[]),114,117,"/**
 * Determines file type based on bytes.
 * @param fileBytes array of file bytes
 * @return FileType enum representing detected file type
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes the non-stroking color setting.
 * @param context PDF processing context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes the stroking color setting.
 * @param context PDF processing context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),39,42,"/**
 * Initializes an engine to append rectangles to a PDF path.
 * @param context graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of BeginInlineImage.
 * @param context the PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of ClipEvenOddRule.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of ClipNonZeroRule with the given graphics context.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of CloseAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of the CloseFillEvenOddAndStrokePath class.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of CloseFillNonZeroAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a ClosePath object.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new instance of CurveTo.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a new instance of CurveToReplicateFinalPoint.
 * @param context the PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new instance of CurveToReplicateInitialPoint.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),46,49,"/**
 * Initializes a new DrawObject with the given PDF graphics stream engine.
 * @param context PDFGraphicsStreamEngine used for drawing operations
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/EndPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.EndPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),34,37,"/**
 * Constructs an EndPath instance.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes the FillEvenOddAndStrokePath with a PDF graphics stream engine.
 * @param context the PDF graphics stream engine to use
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of FillEvenOddRule.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),37,40,"/**
 * Initializes a new instance of FillNonZeroAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of FillNonZeroRule.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new LineTo operation.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.MoveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Initializes a new instance of MoveTo.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new ShadingFill instance.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/StrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.StrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new StrokePath with the given context.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<init>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<init>(),106,130,"/**
* Initializes LegacyPDFStreamEngine with various PDF operators.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,getPDFName,org.apache.pdfbox.cos.COSName:getPDFName(java.lang.String),685,709,"/**
 * Retrieves or creates a COSName instance by name.
 * @param aName the name of the COSName
 * @return the COSName object associated with the given name
 */","* This will get a COSName object with that name.
     * 
     * @param aName The name of the object.
     * 
     * @return A COSName with the specified name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(byte[]),63,66,"/**
* Constructs a COSString from byte array.
* @param bytes input byte array
*/","* Creates a new PDF string from a byte array. This method can be used to read a string from
     * an existing PDF file, or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(),51,54,"/**
 * Initializes an empty COSArray with default settings.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(java.util.List),61,69,"/**
* Constructs a COSArray from a list of COSObjectable.
* @param cosObjectables list of COSObjectable objects
*/","* Use the given list to initialize the COSArray.
     * 
     * @param cosObjectables the initial list of COSObjectables",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache),79,83,"/**
* Initializes a COSStream with a given cache.
* @param streamCache cache for storing stream data
*/","* Creates a new stream with an empty dictionary. Data is stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,<init>,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),31,35,"/**
 * Creates an unmodifiable dictionary from the given COSDictionary.
 * @param dict the original COSDictionary to wrap
 */",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,createDefault,org.apache.pdfbox.filter.DecodeResult:createDefault(),52,55,"/**
 * Creates and returns a DecodeResult with an empty COSDictionary.
 * @return DecodeResult containing an initialized COSDictionary
 */","* Return a default DecodeResult.
     *
     * @return a default instance of DecodeResult",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(),44,47,"/**
 * Initializes a new PDF document information.
 * Sets up an empty COS dictionary for storing metadata.
 */",* Default Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(),62,67,"/**
* Initializes PDResources with a COSDictionary and caches.
*/",* Constructor for embedding.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convert,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convert(java.util.Map),211,220,"/**
* Converts a map to a COSDictionary.
* @param someMap input map with String keys and Object values
* @return COSDictionary representation of the input map
*/","* This will take a map&lt;java.lang.String,org.apache.pdfbox.pdmodel.COSObjectable&gt;
     * and convert it into a COSDictionary.
     *
     * @param someMap A map containing COSObjectables
     *
     * @return A proper COSDictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(),35,38,"/**
 * Initializes a new PDDictionaryWrapper with an empty dictionary.
 */",* Default constructor,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(),52,55,"/**
 * Initializes a new PDNameTreeNode with an empty dictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(java.lang.Class),54,58,"/**
* Initializes a PDNumberTreeNode with a specified value class.
* @param valueClass the type of values in the tree nodes
*/","* Constructor.
     *
     * @param valueClass The PD Model type of object that is the value.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(),72,75,"/**
 * Constructs a PDPageLabelRange using an empty dictionary.
 */",* Creates a new empty page label range object.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(),36,39,"/**
 * Initializes a new PDMarkInfo with an empty COSDictionary.
 */","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(),61,64,"/**
 * Initializes a new instance of PDPropertyList.
 * Sets up an empty COSDictionary for property storage.
 */",* Constructor for subclasses.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(),53,56,"/**
 * Initializes a new PDBoxStyle with an empty COSDictionary.
 */","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(),43,46,"/**
* Initializes a new PDCryptFilterDictionary with an empty COSDictionary.
*/",* creates a new empty crypt filter dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(),84,87,"/**
* Initializes a new instance of PDEncryption with an empty dictionary.
*/",* creates a new empty encryption dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(),40,43,"/**
 * Initializes a new instance of FDFCatalog.
 * Creates an empty COSDictionary for the catalog.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(),54,57,"/**
 * Initializes a new FDFDictionary.
 * Constructs an FDFDictionary using a new COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(),54,57,"/**
 * Initializes a new FDFField with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(),63,66,"/**
* Initializes a new FDFIconFit with an empty dictionary.
* @return none
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(),44,47,"/**
 * Initializes a new FDF JavaScript instance with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(),38,41,"/**
 * Initializes a new instance of FDFNamedPageReference.
 * Sets up the reference dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(),40,43,"/**
 * Initializes a new FDFPage with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(),35,38,"/**
 * Initializes a new instance of FDFPageInfo with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(),40,43,"/**
* Initializes a new FDFTemplate with an empty COSDictionary.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(),51,54,"/**
* Initializes a new PDDeviceNAttributes with an empty dictionary.
*/",* Creates a new DeviceN colour space attributes dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(),48,51,"/**
* Initializes a new PDDeviceNProcess with an empty dictionary.
*/",* Creates a new DeviceN Process Dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(),84,87,"/**
 * Constructs a PDShading with an empty dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(),35,38,"/**
 * Initializes a new instance of PDAdditionalActions with an empty dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDAnnotationAdditionalActions.
 * Sets up an empty COSDictionary for storing annotation actions.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDDocumentCatalogAdditionalActions.
 * Sets up an empty COSDictionary for storing actions.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDFormFieldAdditionalActions.
 * Constructs a COSDictionary to store field action properties.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDPageAdditionalActions with an empty dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(),40,43,"/**
 * Initializes a new PDTargetDirectory with an empty COSDictionary.
 */","* Default constructor, creates target directory.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(),35,38,"/**
 * Initializes a new PDURIDictionary with an empty COSDictionary.
 */","* Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(),48,51,"/**
* Initializes a new instance of PDWindowsLaunchParams.
* Sets up the internal dictionary for storing parameters.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(),50,53,"/**
* Initializes a new PDBorderEffectDictionary with an empty COSDictionary.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(),69,72,"/**
 * Initializes a new instance of PDBorderStyleDictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(),41,45,"/**
* Initializes a new PDPropBuild with an empty direct COSDictionary.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(),37,42,"/**
* Initializes a PDPropBuildDataDict with an empty COSDictionary.
* Sets the dictionary to use direct objects as specified.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(),35,39,"/**
* Initializes a new PDSeedValueMDP object with an empty COSDictionary set to direct.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(),35,39,"/**
* Initializes a PDSeedValueTimeStamp with an empty COSDictionary.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDField with an empty dictionary.
 * @param acroForm parent form containing the field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(),42,45,"/**
 * Initializes a new instance of PDViewportDictionary.
 * Constructs an empty COSDictionary to represent the viewport dictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(),136,139,"/**
 * Initializes a new PDViewerPreferences with an empty COSDictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",58,63,"/**
* Initializes a COSObject with a base object and key.
* @param object the underlying COSBase object
* @param objectKey unique identifier for the COSObject
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param objectKey The COSObjectKey of the encapsulated object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDDefaultAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a default attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Initializes a PDUserAttributeObject with a given COSDictionary.
 * @param dictionary the COSDictionary to initialize with
 */","* Constructor
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDStandardAttributeObject from a COSDictionary.
 * @param dictionary the COSDictionary to use
 */","* Creates a new standard attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Constructs a new PDOutlineItem from a COSDictionary.
 * @param dic dictionary representing the outline item
 */","* Constructor for an existing outline item.
     *
     * @param dic The storage dictionary.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),71,75,"/**
* Creates a destination name tree node.
* @param dic dictionary containing destination information
* @return PDNameTreeNode for page destinations
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),59,63,"/**
* Creates a PDEmbeddedFilesNameTreeNode from a COSDictionary.
* @param dic dictionary containing embedded file specifications
* @return PDNameTreeNode with complex file specifications
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),60,64,"/**
* Creates a PDJavascriptNameTreeNode from a COSDictionary.
* @param dic dictionary containing JavaScript action data
* @return PDJavascriptNameTreeNode instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),61,65,"/**
* Creates a structure element name tree node.
* @param dic dictionary containing structure elements
* @return PDStructureElementNameTreeNode instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getMetadata,org.apache.pdfbox.pdmodel.common.PDStream:getMetadata(),416,434,"/**
* Retrieves PDF metadata stream.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return
     * null if there is no meta data for this object.
     * 
     * @return The metadata for this object.
     * @throws IllegalStateException if the value of the metadata entry is different from a stream
     *                               or null",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMetadata(),416,424,"/**
* Retrieves PDF metadata stream.
* @return PDMetadata object or null if no metadata exists
*/","* Returns the metadata associated with this XObject, or null if there is none.
     * @return the metadata associated with this object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,getExtends,org.apache.pdfbox.pdmodel.common.PDObjectStream:getExtends(),115,119,"/**
* Retrieves an object stream from a PDF document.
* @return PDObjectStream object or null if not found
*/","* A reference to an object stream, of which the current object stream is
     * considered an extension.
     *
     * @return The object that this stream is an extension.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<init>(org.apache.pdfbox.cos.COSBase),75,78,"/**
 * Constructs a PDFunctionType0 from a COSBase.
 * @param function underlying COSBase object
 */","* Constructor.
     *
     * @param function The function.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:<init>(org.apache.pdfbox.cos.COSBase),44,47,"/**
 * Constructs a Type 3 PDF function.
 * @param functionStream COSBase object representing the function stream
 */","* Constructor.
     *
     * @param functionStream The function .",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:<init>(org.apache.pdfbox.cos.COSBase),31,35,"/**
* Constructs a PDFunctionTypeIdentity with a given COSBase.
* @param function the COS object representing the function
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDPostScriptXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:<init>(org.apache.pdfbox.cos.COSStream),34,37,"/**
 * Constructs a PDPostScriptXObject from a given COSStream.
 * @param stream the COSStream containing PS content
 */","* Creates a PostScript XObject.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream),77,81,"/**
 * Constructs a PDFormXObject from a COSStream.
 * @param stream PDF content stream representing the form object
 */","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",89,93,"/**
* Constructs a PDFormXObject from a PDF stream.
* @param stream PDF content stream
* @param cache resource cache for form objects
*/","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,59,"/**
* Creates a PDStructureElement from a COSBase.
* @param base the COSBase object to be converted
* @return a PDStructureElement instance
* @throws IOException if base is not a COSDictionary
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(),91,93,"/**
 * Constructs a new instance of PublicKeySecurityHandler.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(),86,88,"/**
 * Constructs a new instance of StandardSecurityHandler.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy),100,103,"/**
 * Initializes a new instance with a specified protection policy.
 * @param publicKeyProtectionPolicy the policy to apply for key protection
 */","* Constructor used for encryption.
     *
     * @param publicKeyProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy),95,98,"/**
 * Constructs a StandardSecurityHandler.
 * @param standardProtectionPolicy policy to be applied
 */","* Constructor used for encryption.
     *
     * @param standardProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a new FDF annotation highlight.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a new FDFAnnotationSquiggly from a COSDictionary.
 * @param a dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a strike-out annotation from a COS dictionary.
 * @param a COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs an underlined annotation.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,createFSIgnored,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:createFSIgnored(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",306,318,"/**
* Creates font info from file.
* @param file font file
* @param format font format
* @param postScriptName PostScript name of the font
* @return FSFontInfo object with font details
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getStrokingJavaComposite(),665,668,"/**
 * Creates a composite with specified blend mode and alpha.
 * @param blendMode blending mode to apply
 * @param alphaConstant opacity level (0.0f to 1.0f)
 * @return Composite object for blending operations
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getNonStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getNonStrokingJavaComposite(),670,673,"/**
 * Creates a composite using blend mode and alpha constant.
 * @return Composite object configured with specified blend mode and alpha
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDTilingPattern from a COSDictionary.
 * @param dictionary PDF dictionary containing tiling pattern details
 */","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
 * Constructs a PDShadingType3 from a COSDictionary.
 * @param shadingDictionary dictionary containing shading details
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
* Constructs a PDShadingType4 from a COSDictionary.
* @param shadingDictionary dictionary containing shading details
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDShadingType5 from a COS dictionary.
 * @param shadingDictionary the COS dictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:toPaint(org.apache.pdfbox.util.Matrix),126,130,"/**
 * Creates an axial shading paint using the current instance and matrix.
 * @param matrix transformation matrix to apply
 * @return AxialShadingPaint object
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:toPaint(org.apache.pdfbox.util.Matrix),45,49,"/**
 * Creates a radial shading paint.
 * @param matrix transformation matrix to apply
 * @return RadialShadingPaint object with applied matrix
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:toPaint(org.apache.pdfbox.util.Matrix),103,107,"/**
 * Creates a masked paint using the specified matrix.
 * @param matrix transformation matrix to apply
 * @return Paint object with masking applied
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:toPaint(org.apache.pdfbox.util.Matrix),84,88,"/**
 * Creates a shading paint with the given transformation matrix.
 * @param matrix the transformation matrix to apply
 * @return a new Type4ShadingPaint object
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:toPaint(org.apache.pdfbox.util.Matrix),80,84,"/**
 * Creates a shading paint with a transformation matrix.
 * @param matrix transformation matrix to apply
 * @return Paint object configured with the given matrix
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Creates a shading paint with the given transformation matrix.
 * @param matrix transformation matrix to apply
 * @return Paint object using Type6Shading
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Creates a shading paint with a transformation matrix.
 * @param matrix transformation matrix to apply
 * @return Paint object using Type7ShadingPaint
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),39,42,"/**
 * Initializes a new PDCaretAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
* Initializes a new PDCircleAppearanceHandler with the given annotation.
* @param annotation PDF annotation to handle
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),38,41,"/**
 * Initializes a new attachment appearance handler.
 * @param annotation the PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),61,64,"/**
 * Initializes a new instance of PDFreeTextAppearanceHandler.
 * @param annotation PDAnnotation object to be handled
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),43,46,"/**
 * Constructs a highlight appearance handler.
 * @param annotation PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),37,40,"/**
 * Initializes a new PDInkAppearanceHandler with the given annotation.
 * @param annotation the PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),41,44,"/**
 * Constructs a line appearance handler for a PDF annotation.
 * @param annotation the PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Initializes a new instance of PDLinkAppearanceHandler.
 * @param annotation the PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Initializes a new PDPolygonAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),40,43,"/**
 * Initializes a new appearance handler for a polyline annotation.
 * @param annotation PDAnnotation object representing the polyline
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),23,26,"/**
 * Constructs a new PDSoundAppearanceHandler.
 * @param annotation PDAnnotation object to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Constructs a new PDSquareAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),47,50,"/**
 * Initializes a new appearance handler for a PDF annotation.
 * @param annotation the PDAnnotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
* Initializes a new PDStrikeoutAppearanceHandler.
* @param annotation the annotation to handle
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes text appearance handler with given annotation.
 * @param annotation PDF annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Constructs a new PDUnderlineAppearanceHandler.
 * @param annotation the underline annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),114,126,"/**
* Handles PDF document appearance.
* @param document the PDF document to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),67,79,"/**
 * Handles document appearance using a circle handler or custom handler.
 * @param document the PDF document to process
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),135,147,"/**
 * Handles file attachment appearance.
 * @param document PDDocument to process
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),301,313,"/**
* Applies appearance handling to a PDF document.
* Uses custom handler if available, otherwise defaults to PDFreeTextAppearanceHandler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies highlight appearance to the document.
 * Uses custom handler if available, otherwise defaults to PDHighlightAppearanceHandler.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),125,137,"/**
* Handles document appearance using a custom handler or default.
* @param document the PDDocument to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),421,433,"/**
* Applies line appearance to PDF document.
* Uses custom handler if available, otherwise defaults to PDLineAppearanceHandler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),233,245,"/**
* Applies link appearance handling to a PDF document.
* Uses custom handler if available; otherwise, creates and uses default handler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),175,187,"/**
* Handles document appearance using a custom handler or default.
* @param document the PDF document to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),191,203,"/**
* Handles polyline appearance in a PDF document.
* Uses custom handler if available; otherwise, defaults to PDPolylineAppearanceHandler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Applies sound appearance to a PDF document.
* @param document the PDF document to modify
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Applies appearance to a PDF document.
* @param document the PDF document to modify
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies mask to PDF document using specified appearance handler.
 * @param document the PDF document to process
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies strikeout annotation to a PDF document.
 * @param document the PDDocument to modify
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),239,251,"/**
* Applies text appearance to a PDF document.
* Uses custom handler if available, otherwise defaults to standard handler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Applies underline appearance to a PDF document.
* Uses custom handler if available; otherwise, defaults to standard handler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Constructs a PDButton instance.
* @param acroForm parent PDF form
* @param field dictionary representing the button
* @param parent non-terminal field containing this button
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
* Constructs a PDSignatureField.
* @param acroForm associated form
* @param field dictionary representing the field
* @param parent parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",59,62,"/**
* Constructs a PDVariableText object.
* @param acroForm The form containing the field.
* @param field The dictionary representing the field.
* @param parent The parent non-terminal field.
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:clone(),478,501,"/**
* Clones the graphics state and updates specific attributes.
* @return a cloned PDGraphicsState with updated properties
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,"org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:<init>(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",83,91,"/**
* Initializes TilingPaintParameter with given parameters.
* @param matrix transformation matrix for tiling
* @param patternDict dictionary containing pattern details
* @param colorSpace color space for painting
* @param color paint color
* @param xform additional affine transform
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,generatePartialName,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:generatePartialName(),73,84,"/**
* Generates a unique field name by appending numbers to ""Signature"".
* @return Unique field name
*/","* Generate a unique name for the signature.
     * 
     * @return the signature's unique name",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:toString(),123,132,"/**
* Generates a formatted string of object details.
* @return String with object and revision number pairs separated by semicolons
*/",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase),49,52,"/**
 * Creates a PDSoftMask from a COSBase dictionary.
 * @param dictionary source dictionary for mask creation
 * @return PDSoftMask object
 */","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * 
     * @return the newly created instance of PDSoftMask",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,46,"/**
* Executes instructions based on a condition.
* @param context execution context containing the stack and instruction sequence
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),53,68,"/**
* Executes either proc1 or proc2 based on a boolean condition.
* @param context execution context containing the stack and sequences
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.cos.ICOSParser),111,114,"/**
 * Constructs a COSDocument using a memory-only stream cache.
 * @param parser ICOSParser instance to use for parsing
 */","* Constructor. Uses main memory to buffer PDF streams.
     * 
     * @param parser Parser to be used to parse the document on demand",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),122,125,"/**
 * Initializes with a stream cache create function.
 * @param streamCacheCreateFunction function to create stream caches
 */","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,init,org.apache.pdfbox.pdfparser.COSParser:init(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),193,210,"/**
* Initializes document with stream cache.
* @param streamCacheCreateFunction function to create stream cache
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,process,"org.apache.pdfbox.contentstream.operator.state.SetMatrix:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,66,"/**
* Applies a transformation matrix to the current graphics state.
* @param operator the operation being performed
* @param arguments list of COSBase objects representing matrix elements
* @throws MissingOperandException if required operands are missing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,process,"org.apache.pdfbox.contentstream.operator.text.BeginText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,49,"/**
 * Applies mask operation on PDF elements.
 * @param operator the operator for the mask operation
 * @param arguments list of COSBase objects as arguments
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,process,"org.apache.pdfbox.contentstream.operator.text.EndText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,47,"/**
* Masks content in a PDF using an operator and arguments.
* @param operator the operation to perform
* @param arguments list of COSBase arguments for the operation
* @throws IOException if an I/O error occurs during processing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,retrieveDimensions,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:retrieveDimensions(java.io.ByteArrayInputStream),148,185,"/**
* Extracts image dimensions from a JPEG stream.
* @param stream input stream containing JPEG data
* @return Dimensions object with width, height, and numComponents
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(java.lang.String,java.util.List)",903,907,"/**
 * Executes an operation with given arguments.
 * @param operation name of the operation to perform
 * @param arguments list of COSBase arguments for the operation
 * @throws IOException if an I/O error occurs during execution
 */","* This is used to handle an operation.
     * 
     * @param operation The operation to perform.
     * @param arguments The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,create,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",43,50,"/**
* Creates a marked content object based on the given tag.
* @param tag the COSName representing the tag
* @param properties the COSDictionary containing properties
* @return PDMarkedContent or PDArtifactMarkedContent instance
*/","* Creates a marked-content sequence.
     * 
     * @param tag the tag
     * @param properties the properties
     * @return the marked-content sequence",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getWidth,org.apache.pdfbox.pdmodel.common.PDRectangle:getWidth(),296,299,"/**
 * Calculates the difference between two values.
 * @return result of subtracting m2 from m1
 */","* This will get the width of this rectangle as calculated by
     * upperRightX - lowerLeftX.
     *
     * @return The width of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,contains,"org.apache.pdfbox.pdmodel.common.PDRectangle:contains(float,float)",173,181,"/**
* Checks if a point (x, y) is within a rectangular area defined by four coordinates.
* @param x the x-coordinate of the point
* @param y the y-coordinate of the point
* @return true if the point is inside the rectangle, false otherwise
*/","* Method to determine if the x/y point is inside this rectangle.
     * @param x The x-coordinate to test.
     * @param y The y-coordinate to test.
     * @return True if the point is inside this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getHeight,org.apache.pdfbox.pdmodel.common.PDRectangle:getHeight(),307,310,"/**
* Computes difference between two values.
* @return result of subtracting m2 from m1
*/","* This will get the height of this rectangle as calculated by
     * upperRightY - lowerLeftY.
     *
     * @return The height of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,transform,org.apache.pdfbox.pdmodel.common.PDRectangle:transform(org.apache.pdfbox.util.Matrix),319,338,"/**
* Creates a GeneralPath from a matrix transformation.
* @param matrix the transformation matrix to apply
* @return transformed GeneralPath object
*/","* Returns a path which represents this rectangle having been transformed by the given matrix. Note that the
     * resulting path need not be rectangular.
     * 
     * @param matrix the matrix to be used for the transformation
     * @return the transformed rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toGeneralPath,org.apache.pdfbox.pdmodel.common.PDRectangle:toGeneralPath(),357,370,"/**
* Creates a rectangular path using coordinates.
* @return GeneralPath object representing the rectangle
*/","* Returns a general path equivalent to this rectangle. This method avoids the problems caused by Rectangle2D not
     * working well with -ve rectangles.
     * 
     * @return a general path equivalent to this rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toString,org.apache.pdfbox.pdmodel.common.PDRectangle:toString(),377,382,"/**
 * Generates a masked string representation.
 * @return A formatted string with values from m1 to m4.
 */","* This will return a string representation of this rectangle.
     *
     * @return This object as a string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isNonZeroBoundingBox,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isNonZeroBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),395,403,"/**
* Checks if bounding box has non-zero dimensions.
* @param bbox the bounding rectangle to check
* @return true if any dimension is non-zero, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateMatrix,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateMatrix(org.apache.pdfbox.pdmodel.common.PDRectangle,int)",655,679,"/**
* Creates an AffineTransform for rotating a rectangle.
* @param bbox the bounding box of the rectangle
* @param rotation the angle to rotate in degrees (0, 90, 180, or 270)
* @return AffineTransform object representing the rotation
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,fillWhitepointCache,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),78,83,"/**
* Sets the white point values from a PDTristimulus object.
* @param whitepoint PDTristimulus object containing white point data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,org.apache.pdfbox.cos.COSArray:getInt(int),306,309,"/**
 * Calls overloaded method with default second parameter.
 * @param index array index to access
 * @return result of overloaded method call
 */","* Get the value of the array as an integer.
     *
     * @param index The index into the list.
     *
     * @return The value at that index or -1 if does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,org.apache.pdfbox.cos.COSArray:getName(int),359,362,"/**
* Calls overloaded method with default null value.
* @param index position in array
* @return result of overloaded method
*/","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The name converted to a string or null if it does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(org.apache.pdfbox.cos.COSBase),217,253,"/**
* Creates a filtered output stream for writing data.
* @param filters compression filters to apply
* @return OutputStream for writing data with applied filters
*/","* Returns a new OutputStream for writing stream data, using and the given filters.
     * 
     * @param filters COSArray or COSName of filters to be used.
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",140,149,"/**
* Constructs an image object from a PDF stream.
* @param stream the PDStream containing image data
* @param resources the PDResources for image processing
*/","* Creates an Image XObject with the given stream as its contents and current color spaces. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param stream the XObject stream to read
     * @param resources the current resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSuffix(),1011,1047,"/**
* Determines image format based on compression filters.
* @return File extension or null if format is unknown
*/","* This will get the suffix for this image type, e.g. jpg/png.
     * @return The image suffix or null if not available.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(float),1441,1459,"/**
* Masks a float value and writes it to the output stream.
* @param real the float value to mask
* @throws IOException if an I/O error occurs
*/","* Writes a real number to the content stream.
     * 
     * @param real the real number to be added to the content stream
     * 
     * @throws IOException If the underlying stream has a problem being written to.
     * @throws IllegalArgumentException if the parameter is not a finite number",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(int),1467,1471,"/**
 * Formats and writes an integer to output stream.
 * @param integer the integer to format and write
 * @throws IOException if an I/O error occurs
 */","* Writes an integer number to the content stream.
     * 
     * @param integer the integer to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperator,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperator(java.lang.String),1491,1495,"/**
 * Processes input text through two methods.
 * @param text the input string to be processed
 * @throws IOException if an I/O error occurs during processing
 */","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream followed by a newline
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:isEmpty(),69,73,"/**
 * Checks if mask condition is met.
 * @return true if condition is satisfied, false otherwise
 */",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGB(float[]),348,359,"/**
* Applies mask to input values.
* @param value array of float values to process
* @return processed float array after applying mask
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,get,org.apache.pdfbox.cos.COSNumber:get(java.lang.String),58,95,"/**
 * Converts string to COSNumber.
 * @param number input string representing a number
 * @return COSNumber object or throws IOException if invalid
 */","* This factory method will get the appropriate number object.
     *
     * @param number The string representation of the number.
     *
     * @return A number object, either float or int.
     *
     * @throws IOException If the string is not a number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromFloat,org.apache.pdfbox.pdfwriter.COSWriter:visitFromFloat(org.apache.pdfbox.cos.COSFloat),1350,1354,"/**
 * Applies mask to COSFloat object.
 * @param obj COSFloat object to be masked
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSFloat,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSFloat(java.io.OutputStream,org.apache.pdfbox.cos.COSFloat)",270,274,"/**
* Writes a float value to an OutputStream.
* @param output target OutputStream
* @param cosFloat the COSFloat value to write
* @throws IOException if writing fails
*/","* Write the given {@link COSFloat} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosFloat The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,toIncrement,org.apache.pdfbox.cos.COSUpdateInfo:toIncrement(),52,55,"/**
* Calls m2 on the result of m1().
* @return Result of calling m2 on the object returned by m1()
*/","* Uses this {@link COSUpdateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on this {@link COSUpdateInfo}.
     * @see COSIncrement",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectKey,"org.apache.pdfbox.pdfparser.BaseParser:getObjectKey(long,int)",194,213,"/**
 * Generates or retrieves a COSObjectKey.
 * @param num object number
 * @param gen generation number
 * @return COSObjectKey instance
 */","* Returns the object key for the given combination of object and generation number. The object key from the cross
     * reference table/stream will be reused if available. Otherwise a newly created object will be returned.
     * 
     * @param num the given object number
     * @param gen the given generation number
     * 
     * @return the COS object key",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjects,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjects(),132,217,"/**
 * Parses and processes PDF objects to find object keys and offsets.
 * @throws IOException if an I/O error occurs during parsing
 */","* Brute force search for every object in the pdf.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreamOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreamOffsets(),568,634,"/**
* Parses PDF to find object streams.
* @return Map of offsets to COSObjectKey for object streams
*/","* Search for all offsets of object streams within the given pdf
     * 
     * @return a map of all offsets for object streams
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:parse(org.apache.pdfbox.pdfparser.XrefTrailerResolver),119,152,"/**
* Processes XRef trailer entries.
* @param resolver object to resolve XRef entries
* @throws IOException if an I/O error occurs
*/","* Parses through the unfiltered stream and populates the xrefTable HashMap.
     * 
     * @param resolver resolver to read the xref/trailer information
     * @throws IOException If there is an error while parsing the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,findObjectKey,"org.apache.pdfbox.pdfparser.XrefParser:findObjectKey(org.apache.pdfbox.cos.COSObjectKey,long,java.util.Map)",475,549,"/**
* Masks and validates an object key based on offset.
* @param objectKey the original COSObjectKey
* @param offset the offset to check
* @param xrefOffset map of object keys to their offsets
* @return masked COSObjectKey or null if invalid
*/","* Check if the given object can be found at the given offset. Returns the provided object key if everything is ok.
     * If the generation number differs it will be fixed and a new object key is returned.
     * 
     * @param objectKey the key of object we are looking for
     * @param offset the offset where to look
     * @param xrefOffset a map with with all known xref entries
     * @return returns the found/fixed object key
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefTable,org.apache.pdfbox.pdfparser.XrefParser:parseXrefTable(long),577,691,"/**
* Parses and processes XRef table entries.
* @param startByteOffset starting byte offset of the XRef table
* @return true if parsing is successful, false otherwise
*/","* This will parse the xref table from the stream and add it to the state
     * The XrefTable contents are ignored.
     * @param startByteOffset the offset to start at
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,fillGapsWithFreeEntries,org.apache.pdfbox.pdfwriter.COSWriter:fillGapsWithFreeEntries(),801,844,"/**
* Processes and assigns free object numbers.
* Generates FreeXReference entries for unused numbers.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream),237,240,"/**
 * Initializes a COSWriter with an output stream and default compression parameters.
 * @param outputStream destination for writing COS data
 */","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead,java.util.Set)",289,307,"/**
* Initializes a COSWriter with specified output stream, input data, and objects to write.
* @param outputStream destination for writing PDF content
* @param inputData source of PDF content
* @param objectsToWrite set of COSDictionary objects to be written
* @throws IOException if an I/O error occurs
*/","* Constructor for incremental updates with a list of objects to write. This allows to
     * include objects even if there is no path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only
     * dictionaries are supported; if you need to update other objects classes, then add their
     * parent dictionary.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data.
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,setNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:setNeedToBeUpdated(boolean),41,44,"/**
 * Masks functionality based on flag.
 * @param flag indicates whether to enable masking
 */","* Set the update state of the dictionary for the COSWriter. This indicates whether an object is
     * to be written when there is an incremental save.
     *
     * @param flag the update state.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(),219,222,"/**
 * Calls overloaded version of m1 with true parameter.
 */","* Calls {@link #update(boolean)} with {@code true} as the new update state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,"org.apache.pdfbox.cos.COSArray:getString(int,java.lang.String)",418,430,"/**
* Retrieves a string value from an object at a specified index.
* @param index position of the object in the collection
* @param defaultValue default string to return if not found or not a COSString
* @return retrieved string or default value
*/","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,equals,org.apache.pdfbox.cos.COSString:equals(java.lang.Object),274,284,"/**
* Checks if object is COSString and compares properties.
* @param obj the object to check
* @return true if conditions match, otherwise false
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toString,org.apache.pdfbox.cos.COSString:toString(),293,297,"/**
 * Returns a masked string representation.
 * @return formatted string with masked content
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:getFile(),55,59,"/**
 * Returns the masked string from file.
 * @return Masked string representation
 */","* This will get the file name.
     *
     * @return The file name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:getNamedDestination(),88,101,"/**
 * Masks the named destination.
 * @return masked string or null if not applicable
 */","* This will get the name of the destination.
     *
     * @return The name of the destination.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,getPairableItems,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:getPairableItems(org.apache.pdfbox.cos.COSBase,int)",133,167,"/**
* Extracts strings from a PDF item based on index.
* @param items PDF base item (string or array)
* @param pairIdx index to access in two-element arrays (0 or 1)
* @return list of extracted strings
*/","* Return either one of a list which can have two-element arrays entries.
     * <p>
     * Some entries in a dictionary can either be an array of elements
     * or an array of two-element arrays. This method will either return
     * the elements in the array or in case of two-element arrays, the element
     * designated by the pair index
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the items contain
     * two-element arrays and the index is not 0 or 1.
     * </p>
     * 
     * @param items the array of elements or two-element arrays
     * @param pairIdx the index into the two-element array
     * @return a List of single elements",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getExportValues(),249,262,"/**
 * Retrieves and processes a list of strings from a PDF document.
 * @return List of masked strings or an empty list if not applicable
 */","* This will get the (optional) export values.
     * 
     * <p>The export values are defined in the field dictionaries /Opt key.</p>
     * 
     * <p>The option values are used to define the export values
     * for the field to 
     * <ul>
     *  <li>hold values in non-Latin writing systems as name objects, which represent the field value, are limited
     *      to PDFDocEncoding
     *  </li>
     *  <li>allow radio buttons having the same export value to be handled independently
     *  </li>
     * </ul>
     * 
     * @return List containing all possible export values. If there is no /Opt entry an empty list will be returned.
     * 
     * @see #getOnValues()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearance(),74,84,"/**
 * Retrieves the default appearance string.
 * @return the default appearance string or null if not found
 */","* Get the default appearance.
     * 
     * This is an inheritable attribute.
     * 
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     * 
     * @return the DA element of the dictionary object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(java.lang.String),87,90,"/**
 * Constructs a COSString with the given text.
 * @param text string to initialize the COSString
 */","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isStandard14(),370,393,"/**
* Checks encoding validity for DictionaryEncoding.
* @return true if valid, otherwise false
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,encode,"org.apache.pdfbox.filter.ASCII85Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",43,52,"/**
* Encodes input stream using ASCII85 and writes to output stream.
* @param input source InputStream
* @param encoded destination OutputStream
* @param parameters encoding parameters (not used)
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode1D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode1D(),152,173,"/**
 * Processes runs of white and black pixels, updating indices and row counts.
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode2D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode2D(),175,242,"/**
 * Masks changes in data by swapping row references and processing columns.
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encode2D,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encode2D(),167,220,"/**
* Processes columns with specific logic and updates indices.
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",58,134,"/**
* Decodes JPEG image from InputStream to OutputStream.
* @param encoded input stream containing encoded JPEG data
* @param decoded output stream for decoded image data
* @param parameters additional decoding parameters
* @param index not used in this method
* @param options decoding options
* @return DecodeResult with the provided parameters
* @throws IOException if an I/O error occurs during decoding
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.io.InputStream),162,166,"/**
* Initializes a visible signature designer with an image.
* @param imageStream input stream containing the signature image
* @throws IOException if there is an issue reading the input stream
*/","* Constructor usable for signing existing signature fields.
     *
     * @param imageStream image as a stream
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureImage(java.lang.String),270,277,"/**
* Applies mask to PDF signature.
* @param path file path of the signature image
* @return PDVisibleSignDesigner instance
* @throws IOException if file operations fail
*/","* Set the image for the signature.
     *
     * @param path Path of the image file.
     * @return Visible Signature Configuration Object
     * @throws IOException if the image for the signature could not be set",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[],int,int)",297,327,"/**
* Masks byte array data according to row length and predictor settings.
* @param bytes input byte array
* @param off starting offset in the byte array
* @param len number of bytes to process
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,flush,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:flush(),349,359,"/**
* Processes and resets current row data.
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.common.PDStream),36,39,"/**
 * Constructs a PDTransparencyGroup from a given stream.
 * @param stream the PDF stream containing transparency group data
 */","* Creates a Transparency Group for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",222,233,"/**
* Creates a holder form and adds it to the PDF structure.
* @param holderFormResources resources for the holder form
* @param holderFormStream stream containing the form data
* @param bbox bounding box defining the form area
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",269,279,"/**
* Creates a masked PDF form within another form.
* @param innerFormResources resources for the inner form
* @param innerFormStream stream containing the inner form data
* @param bbox bounding box defining the form's size and position
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:readEncodingFromFont(),283,304,"/**
* Determines the encoding based on font conditions.
* @return Encoding object determined by internal conditions
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:readEncodingFromFont(),492,513,"/**
 * Determines the encoding based on font conditions.
 * @return Encoding object determined by internal checks
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionary,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionary(boolean),281,328,"/**
 * Parses a COSDictionary from the input source.
 * @param isDirect flag indicating if the dictionary should be direct
 * @return the parsed COSDictionary object
 * @throws IOException if an I/O error occurs during parsing
 */","* This will parse a PDF dictionary.
     *
     * @param isDirect indicates whether the dictionary to be read is a direct object
     * @return The parsed dictionary, never null.
     *
     * @throws IOException If there is an error reading the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(),1052,1067,"/**
* Masks characters until a condition is met.
* @return masked string or empty if none masked
*/","* This will read the next string from the stream.
     *
     * @return The string that was read from the stream, never null.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedString,"org.apache.pdfbox.pdfparser.BaseParser:readExpectedString(char[],boolean)",1076,1089,"/**
* Masks input to match expected string.
* @param expectedString characters to match against
* @param skipSpaces flag to ignore spaces during matching
* @throws IOException if mismatch occurs
*/","* Reads given pattern from {@link #source}. Skipping whitespace at start and end if wanted.
     * 
     * @param expectedString pattern to be skipped
     * @param skipSpaces if set to true spaces before and after the string will be skipped
     * @throws IOException if pattern could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(int),1117,1140,"/**
 * Reads and masks characters from input up to a specified length.
 * @param length maximum number of characters to read
 * @return masked string or empty if no characters are read
 */","* This will read the next string from the stream up to a certain length.
     *
     * @param length The length to stop reading at.
     *
     * @return The string that was read from the stream of length 0 to length.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readInt,org.apache.pdfbox.pdfparser.BaseParser:readInt(),1387,1406,"/**
* Parses and returns an integer from a buffer.
* @return parsed integer value
* @throws IOException if parsing fails or invalid data encountered
*/","* This will read an integer from the stream.
     *
     * @return The integer that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLong,org.apache.pdfbox.pdfparser.BaseParser:readLong(),1416,1434,"/**
 * Masks and retrieves a long value from input.
 * @return masked long value
 * @throws IOException if parsing fails or unexpected data encountered
 */","* This will read an long from the stream.
     *
     * @return The long that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,calculateXRefFixedOffset,org.apache.pdfbox.pdfparser.XrefParser:calculateXRefFixedOffset(long),326,343,"/**
* Adjusts object offset using parser.
* @param objectOffset original object offset
* @return adjusted offset or 0 if not found
* @throws IOException on parsing errors
*/","* Try to find a fixed offset for the given xref table/stream.
     * 
     * @param objectOffset the given offset where to look at
     * @return the fixed offset
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",854,900,"/**
* Masks password using specified encryption parameters.
* @param password user's password bytes
* @param owner document owner bytes
* @param permissions access permissions
* @param id unique identifier bytes
* @param encRevision encryption revision
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to encrypt metadata
* @return masked password bytes or empty array for certain revisions
* @throws IOException if an I/O error occurs
*/","* This will compute the user password hash.
     *
     * @param password The plain text password.
     * @param owner The owner password hash.
     * @param permissions The document permissions.
     * @param id The document id.
     * @param encRevision The revision of the encryption.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return The user password.
     *
     * @throws IOException if the password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword234(byte[],byte[],int,int)",671,701,"/**
* Applies encryption mask to owner password.
* @param ownerPassword user's owner password
* @param owner owner identifier
* @param encRevision encryption revision level
* @param length key generation length
* @return masked byte array
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeOwnerPassword(byte[],byte[],int,int)",914,945,"/**
* Masks user password with owner password.
* @param ownerPassword owner's password bytes
* @param userPassword user's password bytes
* @param encRevision encryption revision number
* @param length expected length of RC4 key
* @return masked password bytes
* @throws IOException if length mismatch or encryption fails
*/","* Compute the owner entry in the encryption dictionary.
     *
     * @param ownerPassword The plaintext owner password.
     * @param userPassword The plaintext user password.
     * @param encRevision The revision number of the encryption algorithm.
     * @param length The length of the encryption key.
     *
     * @return The o entry of the encryption dictionary.
     *
     * @throws IOException if the owner password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,process,"org.apache.pdfbox.contentstream.operator.state.Concatenate:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,68,"/**
 * Applies a transformation matrix to the current graphics state.
 * @param operator the operation being performed
 * @param arguments list of COSBase arguments for the matrix
 * @throws IOException if an I/O error occurs or argument count is invalid
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,77,"/**
* Applies a transformation to the text line matrix.
* @param operator the PDF operator being executed
* @param arguments list of operands for the operator
* @throws MissingOperandException if required operands are missing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,rotate,org.apache.pdfbox.util.Matrix:rotate(double),278,281,"/**
 * Updates matrix based on angle.
 * @param theta rotation angle in radians
 */","* Rotates this matrix by the given factors.
     *
     * @param theta The angle of rotation measured in radians",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,applyTextAdjustment,"org.apache.pdfbox.contentstream.PDFStreamEngine:applyTextAdjustment(float,float)",722,726,"/**
 * Applies a translation transformation.
 * @param tx horizontal translation value
 * @param ty vertical translation value
 */","* Applies a text position adjustment from the TJ operator. May be overridden in subclasses.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,org.apache.pdfbox.util.Matrix:translate(org.apache.pdfbox.util.Vector),237,240,"/**
* Calls m3 with results from vector's m1 and m2 methods.
* @param vector source vector object
*/","* Translates this matrix by the given vector.
     *
     * @param vector 2D vector",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,"org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)",434,437,"/**
 * Applies mask matrix b to matrix a.
 * @param a input matrix
 * @param b mask matrix
 * @return result of applying mask
 */","* Produces a copy of the first matrix, with the second matrix concatenated.
     *
     * @param a The matrix to copy.
     * @param b The matrix to concatenate.
     * 
     * @return a copy of the first matrix with the second matrix concatenated",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument),202,205,"/**
 * Constructs a new PDDocument from a COSDocument.
 * @param doc The underlying COSDocument to use.
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStroke,org.apache.pdfbox.rendering.PageDrawer:getStroke(),705,740,"/**
* Creates a stroke with specified attributes from graphics state.
* @return Stroke object configured based on current graphics state
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getTriangles(),167,171,"/**
* Generates shaded triangles from coordinate-color pairs.
* @return List of ShadedTriangle objects
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.CharSequence),68,73,"/**
 * Calls m2 with the result of text.m1().
 * @param text input CharSequence
 */",{@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanNewLine,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanNewLine(),220,232,"/**
* Processes a character and updates the buffer.
* Assumes state is NEWLINE. Handles CR-LF sequences.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanWhitespace,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanWhitespace(),234,254,"/**
* Handles whitespace parsing.
* Asserts state is WHITESPACE, processes characters, and delegates to handler.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanComment,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanComment(),256,276,"/**
* Processes comment state, handling multiline comments.
* Asserts current state is COMMENT. Reads and buffers characters until end of comment.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanToken,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanToken(),278,315,"/**
 * Processes a token, handling special characters and buffering data.
 * Asserts state is TOKEN, processes character, buffers content, and handles delimiters.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getCurrentAccessPermission,org.apache.pdfbox.pdmodel.PDDocument:getCurrentAccessPermission(),1355,1362,"/**
* Returns singleton instance of AccessPermission.
* @return AccessPermission object
*/","* Returns the access permissions granted when the document was decrypted. If the document was not decrypted this
     * method returns the access permission for a document owner (ie can do everything). The returned object is in read
     * only mode so that permissions cannot be changed. Methods providing access to content should rely on this object
     * to verify if the current user is allowed to proceed.
     * 
     * @return the access permissions for the current user on the document.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRevisionNumber,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRevisionNumber(int),109,131,"/**
* Determines the appropriate version based on current policy and permissions.
* @param version current version number
* @return updated version number
*/","* Computes the revision version of the StandardSecurityHandler to
     * use regarding the version number and the permissions bits set.
     * See PDF Spec 1.6 p98
     * 
     * @param version The version number.
     *
     * @return The computed revision number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAESother,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",317,346,"/**
* Processes data stream with encryption or decryption.
* @param finalKey key for encryption/decryption
* @param data input stream containing data to process
* @param output output stream for processed data
* @param decrypt true if decrypting, false if encrypting
* @throws IOException on I/O errors or security issues
*/","* Encrypt or decrypt data with AES with key length other than 256 bits.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAES256,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",357,390,"/**
 * Encrypts or decrypts data using AES.
 * @param data input stream containing the data to process
 * @param output output stream for the processed data
 * @param decrypt true if decrypting, false if encrypting
 * @throws IOException on I/O errors or security exceptions
 */","* Encrypt or decrypt data with AES256.
     *
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],byte[],java.io.OutputStream)",300,304,"/**
* Encrypts input data using RC4 algorithm.
* @param finalKey encryption key
* @param input data to encrypt
* @param output stream for encrypted data
* @throws IOException if an I/O error occurs during encryption
*/","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(java.io.InputStream,java.io.OutputStream)",139,147,"/**
* Copies data from InputStream to OutputStream.
* @param data source InputStream
* @param output destination OutputStream
* @throws IOException on I/O error
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepQuery,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepQuery(java.lang.String),48,51,"/**
 * Masks the input string.
 * @param str the string to be masked
 * @return masked version of the input string
 */","* Return the {@code SASLPrep}-canonicalised version of the given {@code str} for use as a query
     * string. This implements the {@code SASLPrep} algorithm defined in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a query string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepStored,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepStored(java.lang.String),66,69,"/**
* Masks input string.
* @param str input string to be masked
* @return masked string
*/","* Return the {@code SASLPrep}-canonicalised version of the given
     * @code str} for use as a stored string. This implements the {@code SASLPrep} algorithm defined
     * in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a stored string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,createDERForRecipient,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:createDERForRecipient(byte[],java.security.cert.X509Certificate)",471,521,"/**
 * Encrypts data using RC2 algorithm with X.509 certificate.
 * @param in input byte array to encrypt
 * @param cert X.509 certificate for encryption
 * @return ASN1Primitive representing encrypted content info
 * @throws IOException on I/O errors during encryption
 * @throws GeneralSecurityException on security-related failures
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2A,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2A(byte[],byte[],byte[])",1116,1122,"/**
* Masks a password using key derivation functions.
* @param password user's password bytes
* @param salt cryptographic salt bytes
* @param u additional input bytes
* @return masked password bytes
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLine,org.apache.pdfbox.text.PDFTextStripper:writeLine(java.util.List),1857,1870,"/**
 * Masks text positions for words in a line.
 * @param line list of words with text positions
 * @throws IOException if an I/O error occurs
 */","* Write a list of string containing a whole line of a document.
     * 
     * @param line a list with the words of the given line
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getFont(),131,157,"/**
* Fetches or creates a FontBoxFont.
* @return cached or newly created FontBoxFont
*/","* {@inheritDoc}
         * <p>
         * The method returns null if there is there was an error opening the font.
         *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,saveDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:saveDiskCache(),410,434,"/**
* Writes font information to a cache file.
* Handles exceptions related to file writing and security.
*/",* Saves the font metadata cache to disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,loadDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:loadDiskCache(java.util.List),493,652,"/**
 * Processes font files to generate FSFontInfo list.
 * @param files list of font files to process
 * @return List of FSFontInfo objects or null if cache needs rebuilding
 */",* Loads the font metadata cache from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,setProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:setProvider(org.apache.pdfbox.pdmodel.font.FontProvider),145,149,"/**
* Updates font information and provider.
* @param fontProvider new font provider instance
*/",* Sets the font service provider.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:<init>(java.awt.geom.Point2D[],float[][])",58,92,"/**
* Initializes a shaded triangle with given points and colors.
* @param p array of three 2D points defining the triangle corners
* @param c 2D array of RGB color values for each corner
*/","* Constructor.
     *
     * @param p an array of the 3 vertices of a triangle
     * @param c an array of color corresponding the vertex array p",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1CFont:getHeight(int),367,387,"/**
* Retrieves glyph height by code.
* @param code font glyph code
* @return glyph height as float, 0 if not found and no CFF font
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeTo,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeTo(java.io.OutputStream),91,176,"/**
 * Writes CID to Unicode mapping to the specified output stream.
 * @param out OutputStream to write the CMap data
 * @throws IOException if an I/O error occurs
 */","* Writes the CMap as ASCII to the given output stream.
     *
     * @param out ASCII output stream
     * @throws IOException if the stream could not be written",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,load,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:load(java.lang.String,int)",48,64,"/**
* Loads a GlyphList from a resource file.
* @param filename name of the glyph list file
* @param numberOfEntries number of entries to expect in the file
* @return GlyphList object initialized with data from the file
*/",* Loads a glyph list from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getWidthFromFont(int),368,379,"/**
 * Calculates the masked font width.
 * @param code character code
 * @return font width in scaled units
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getHeight(int),381,391,"/**
* Retrieves and processes glyph data for a given code.
* @param code unique identifier for the glyph
* @return processed metric value or 0 if glyph is not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getGIDToCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getGIDToCode(),452,465,"/**
* Initializes a mapping from group IDs to codes.
* @return Map of group IDs to codes
* @throws IOException if an I/O error occurs during initialization
*/","* Inverts the font's code -&gt; GID mapping. Any duplicate (GID -&gt; code) mappings will be lost.
     * 
     * @return the GID for the given code
     * 
     * @throws IOException if the data could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(int),594,598,"/**
 * Checks if a function mask is set.
 * @param code function code to check
 * @return true if mask is set, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(int),181,195,"/**
 * Processes code to determine final string.
 * @param code input integer code
 * @return boolean indicating success or failure
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(int),197,215,"/**
* Generates a GeneralPath based on the input code.
* @param code numeric code for path generation
* @return GeneralPath object or empty path if conditions not met
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNormalizedPath(int),217,240,"/**
* Generates a GeneralPath based on the given code.
* @param code identifier for the path to generate
* @return GeneralPath object or default "".notdef"" if not found
* @throws IOException if an I/O error occurs during processing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getWidthFromFont(int),349,359,"/**
 * Calculates the masked font width for a given code.
 * @param code input code for font processing
 * @return masked font width as a float
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1Font:codeToName(int),561,565,"/**
* Masks the given code.
* @param code the input code to mask
* @return masked string representation of the code
* @throws IOException if an I/O error occurs during masking
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(java.lang.String),616,629,"/**
* Creates a GeneralPath for the given font name.
* @param name font name to process
* @return GeneralPath object representing the font or an empty path if conditions are met
* @throws IOException if an I/O error occurs during processing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(java.lang.String),650,654,"/**
 * Checks if a font with the given name exists.
 * @param name font name to check
 * @return true if font exists, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGB(float[]),140,145,"/**
* Processes color values using AWT Color Space.
* @param value input color values array
* @return processed color values array
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImage(java.awt.image.WritableRaster),155,160,"/**
* Applies mask to image raster.
* @param raster image data to be masked
* @return masked image as BufferedImage
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkConverterState,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),591,648,"/**
 * Validates PNG chunks in the given converter state.
 * @param state PNGConverterState object containing parsed PNG data
 * @return true if all chunks are valid, false otherwise
 */","* Check if the converter state is sane.
     *
     * @param state the parsed converter state
     * @return true if the state seems plausible",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getTriangles(),123,132,"/**
* Generates masked shaded triangles from cubic bezier curves.
* @return List of ShadedTriangle objects representing the mask
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endTextClip,org.apache.pdfbox.rendering.PageDrawer:endTextClip(),474,493,"/**
* Applies text clipping based on current rendering mode.
* Modifies graphics state if clipping is enabled and no clippings exist.
*/","* End buffering the text clipping path, if any.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,clip,org.apache.pdfbox.rendering.PageDrawer:clip(int),958,979,"/**
* Sets the winding rule for clipping and processes the line path.
* @param windingRule rule to define how to fill paths
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setClip,org.apache.pdfbox.rendering.PageDrawer:setClip(),411,424,"/**
* Updates graphics clipping based on current paths.
* @param none
*/","* Sets the clipping path using caching for performance. We track lastClip manually because
     * {@link Graphics2D#getClip()} returns a new object instead of the same one passed to
     * {@link Graphics2D#setClip(java.awt.Shape) setClip()}. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getDataToSign,org.apache.pdfbox.pdfwriter.COSWriter:getDataToSign(),931,949,"/**
* Generates input stream for PDF signing.
* @throws IOException if an I/O error occurs
*/","* Return the stream of PDF data to be signed. Clients should use this method only to create
     * signatures externally. {@link #write(PDDocument)} method should have been called prior. The
     * created signature should be set using {@link #writeExternalSignature(byte[])}.
     * <p>
     * When {@link SignatureInterface} instance is used, COSWriter obtains and writes the signature
     * itself.
     * </p>
     *
     * @return data stream to be signed
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if input data is closed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[]),61,65,"/**
 * Calls overloaded m1 method with full byte array.
 * @param b byte array to process
 * @return result of processing
 * @throws IOException if an I/O error occurs
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,mergeDiacritic,org.apache.pdfbox.text.TextPosition:mergeDiacritic(org.apache.pdfbox.text.TextPosition),667,745,"/**
* Masks a diacritic on text based on position.
* @param diacritic TextPosition object representing the diacritic
*/","* Merge a single character TextPosition into the current object. This is to be used only for
     * cases where we have a diacritic that overlaps an existing TextPosition. In a graphical
     * display, we could overlay them, but for text extraction we need to merge them. Use the
     * contains() method to test if two objects overlap.
     *
     * @param diacritic TextPosition to merge into the current TextPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",31,69,"/**
* Compares two text positions based on their properties.
* @param pos1 first TextPosition object
* @param pos2 second TextPosition object
* @return comparison result: negative if pos1 is less, positive if greater, zero if equal
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,contains,org.apache.pdfbox.text.TextPosition:contains(org.apache.pdfbox.text.TextPosition),568,608,"/**
 * Determines if two text positions overlap by more than 15%.
 * @param tp2 second TextPosition to compare
 * @return true if significant overlap exists, false otherwise
 */","* Determine if this TextPosition logically contains another (i.e. they overlap and should be
     * rendered on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained in the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,completelyContains,org.apache.pdfbox.text.TextPosition:completelyContains(org.apache.pdfbox.text.TextPosition),618,657,"/**
* Checks if the current TextPosition is fully contained within another.
* @param tp2 the other TextPosition to compare against
* @return true if fully contained, false otherwise
*/","* Determine if this TextPosition perfectly contains another (i.e. the other TextPosition
     * overlaps 100% with this one and fits entirely inside its bounding box when they are rendered
     * on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained completely inside the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphSeparator,org.apache.pdfbox.text.PDFTextStripper:writeParagraphSeparator(),1701,1705,"/**
 * Calls two methods sequentially to perform operations.
 * @throws IOException if an I/O error occurs during execution
 */","* writes the paragraph separator string to the output.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,isParagraphSeparation,"org.apache.pdfbox.text.PDFTextStripper:isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1615,1687,"/**
* Determines if a line break is needed based on position and last position.
* @param position current text position
* @param lastPosition previous text position
* @param lastLineStartPosition start of the last line
* @param maxHeightForLine maximum height for a single line
*/","* tests the relationship between the last text position, the current text position and the last text position that
     * followed a line separator to decide if the gap represents a paragraph separation. This should <i>only</i> be
     * called for consecutive text positions that first pass the line separation test.
     * <p>
     * This base implementation tests to see if the lastLineStartPosition is null OR if the current vertical position
     * has dropped below the last text vertical position by at least 2.5 times the current text height OR if the current
     * horizontal position is indented by at least 2 times the current width of a space character.
     * </p>
     * <p>
     * This also attempts to identify text that is indented under a hanging indent.
     * </p>
     * <p>
     * This method sets the isParagraphStart and isHangingIndent flags on the current position object.
     * </p>
     *
     * @param position the current text position. This may have its isParagraphStart or isHangingIndent flags set upon
     * return.
     * @param lastPosition the previous text position (should not be null).
     * @param lastLineStartPosition the last text position that followed a line separator, or null.
     * @param maxHeightForLine max height for text positions since lasLineStartPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,createWord,"org.apache.pdfbox.text.PDFTextStripper:createWord(java.lang.String,java.util.List)",2039,2042,"/**
* Creates a WordWithTextPositions object.
* @param word original word text
* @param wordPositions list of TextPosition objects
* @return WordWithTextPositions instance with processed word and positions
*/",* Used within {@link #normalize(List)} to create a single {@link WordWithTextPositions} entry.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseDate,"org.apache.pdfbox.util.DateConverter:parseDate(java.lang.String,java.text.ParsePosition)",621,690,"/**
 * Parses a date from text using specified formats.
 * @param text input string containing the date
 * @param initialWhere starting position for parsing
 * @return GregorianCalendar object representing parsed date or null if unsuccessful
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,setSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:setSignature(byte[]),45,49,"/**
 * Masks the given signature using the COS writer.
 * @param signature byte array representing the signature to be masked
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromName,org.apache.pdfbox.pdfwriter.COSWriter:visitFromName(org.apache.pdfbox.cos.COSName),1362,1366,"/**
 * Masks an object using specified COSName.
 * @param obj the COSName to be masked
 * @throws IOException if an I/O error occurs during masking
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSName,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSName(java.io.OutputStream,org.apache.pdfbox.cos.COSName)",306,310,"/**
* Writes COS name to output stream with space.
* @param output target output stream
* @param cosName COS name to write
*/","* Write the given {@link COSName} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosName The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(org.apache.pdfbox.cos.COSName),1479,1483,"/**
 * Writes a COSName to the output stream and appends a space.
 * @param name the COSName to write
 * @throws IOException if an I/O error occurs
 */","* Writes a COSName to the content stream.
     * 
     * @param name the name to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],boolean,java.io.OutputStream)",1644,1696,"/**
 * Masks byte array as ASCII or hex string.
 * @param bytes input byte array to mask
 * @param forceHex if true, always use hex representation
 * @param output OutputStream to write the masked result
 * @throws IOException if I/O error occurs during writing
 */","* This will output the given text/byte string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,sort,"org.apache.pdfbox.util.IterativeMergeSort:sort(java.util.List,java.util.Comparator)",61,78,"/**
* Sorts a list using a comparator.
* @param list the list to sort
* @param cmp the comparator to use for sorting
*/","* Sorts this list according to the order induced by the specified
     * {@link Comparator}.
     * 
     * @param  <T> the class of the objects in the list
     * @param  list the list to be sorted.
     * @param  cmp the comparator to determine the order of the list.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructor for setting non-stroking color in PDF.
 * @param context PDF stream engine context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of SetNonStrokingDeviceCMYKColor.
 * @param context PDFStreamEngine to use
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new instance of SetNonStrokingDeviceGrayColor.
 * @param context PDF rendering context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new instance with a given PDF stream engine.
 * @param context PDFStreamEngine to be used
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes stroking color setting.
 * @param context PDF processing context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes stroking device with CMYK color.
 * @param context PDF stream engine context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new StrokingDeviceGrayColor instance.
 * @param context PDF stream engine context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a new instance of StrokingDeviceRGBColor.
 * @param context PDF stream engine context
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LegacyFillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LegacyFillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Constructs a LegacyFillNonZeroRule with a given PDF graphics stream engine.
 * @param context the PDF graphics stream engine to use
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(java.lang.String),62,70,"/**
* Initializes PDF marked content extraction with specified encoding.
* @param encoding character encoding for text extraction
*/","* Constructor. Will apply encoding-specific conversions to the output text.
     *
     * @param encoding The encoding that the output will be written in.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper:<init>(),196,201,"/**
* Initializes PDFTextStripper with specific operators.
*/",* Instantiate a new PDFTextStripper object.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(java.lang.String),1189,1192,"/**
 * Retrieves a base object by key.
 * @param key string key to look up
 * @return COSBase object associated with the key
 */","* This will do a lookup into the dictionary.
     * 
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(java.lang.String),1299,1302,"/**
 * Converts a string to a COSName and checks its validity.
 * @param name input string to be converted
 * @return true if valid, false otherwise
 */","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(java.lang.String),77,80,"/**
 * Retrieves a filter by name.
 * @param filterName name of the filter
 * @return Filter object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns a filter instance given its name as a string.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSName,org.apache.pdfbox.pdfparser.BaseParser:parseCOSName(),861,918,"/**
* Parses a COS name from the source.
* @return parsed COSName object
* @throws IOException if an I/O error occurs or invalid hex digits are encountered
*/","* This will parse a PDF name from the stream.
     *
     * @return The parsed PDF name.
     * @throws IOException If there is an error reading from the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:getCOSObject(),238,242,"/**
 * Returns the ""SymbolEncoding"" COSName.
 * @return COSBase representing SymbolEncoding
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:getCOSObject(),237,241,"/**
 * Returns the ZapfDingbatsEncoding as a COSBase object.
 * @return COSBase representing the ZapfDingbats encoding
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",51,79,"/**
* Constructs a PDColor from a COSArray and a color space.
* @param array containing color components and optional pattern name
* @param colorSpace the color space for the color
*/","* Creates a PDColor containing the given color value.
     * @param array a COS array containing the color value
     * @param colorSpace color space in which the color value is defined",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:getCOSObject(),35,39,"/**
 * Returns a masked COSBase value.
 * @return COSBase instance after applying mask
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,parseHex,org.apache.pdfbox.cos.COSString:parseHex(java.lang.String),136,193,"/**
 * Converts a hexadecimal string to a COSString.
 * @param hex input hexadecimal string
 * @return COSString representation of the hex data
 * @throws IOException if invalid hex string and FORCE_PARSING is false
 */","* This will create a COS string from a string of hex characters.
     *
     * @param hex A hex string.
     * @return A cos string with the hex characters converted to their actual bytes.
     * @throws IOException If there is an error with the hex string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSIntegers,org.apache.pdfbox.cos.COSArray:ofCOSIntegers(java.util.List),751,756,"/**
* Converts a list of integers to a COSArray.
* @param integer List of Integer objects
* @return COSArray containing COSInteger elements
*/","* This will take a list of integer objects and return a COSArray of COSInteger objects.
     *
     * @param integer A list of integers
     *
     * @return An array of COSInteger objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSNames,org.apache.pdfbox.cos.COSArray:ofCOSNames(java.util.List),765,770,"/**
* Converts list of strings to COSArray.
* @param strings list of string values
* @return COSArray containing COSName objects for each string
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSStrings,org.apache.pdfbox.cos.COSArray:ofCOSStrings(java.util.List),779,784,"/**
* Converts list of strings to COSArray.
* @param strings list of string values
* @return COSArray containing COSString elements
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(),55,59,"/**
 * Initializes a COSArrayList with empty underlying COSArray and ArrayList.
 */",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",95,101,"/**
* Initializes a COSArrayList with a given dictionary and key.
* @param dictionary the parent COSDictionary
* @param dictionaryKey the key in the dictionary for this list
*/","* This constructor is to be used if the array doesn't exist, but is to be created and added to
     * the parent dictionary as soon as the first element is added to the array.
     *
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is
     * added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,convertListOfByteArraysToCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:convertListOfByteArraysToCOSArray(java.util.List),640,645,"/**
* Converts list of byte arrays to COSArray of COSStrings.
* @param strings list of byte arrays
* @return COSArray containing COSString objects
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(),43,46,"/**
 * Initializes a new PDPageDestination with an empty COSArray.
 */","* Constructor to create empty page destination.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float,float,float)",117,125,"/**
* Initializes a PDRectangle with specified coordinates and dimensions.
* @param x the x-coordinate of the rectangle's lower-left corner
* @param y the y-coordinate of the rectangle's lower-left corner
* @param width the width of the rectangle
* @param height the height of the rectangle
*/","* Constructor.
     *
     * @param x the x coordinate of the rectangle
     * @param y the y coordinate of the rectangle
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.fontbox.util.BoundingBox),132,140,"/**
* Initializes a PDRectangle from a BoundingBox.
* @param box bounding box defining rectangle corners
*/","* Constructor.
     *
     * @param box the bounding box to be used for the rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFilters(java.util.List),257,260,"/**
 * Sets the filter names for the PDF stream.
 * @param filters list of COSName representing filter types
 */","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(),37,45,"/**
* Initializes a PDFourColours object with four null values.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setAlternateColorSpaces,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setAlternateColorSpaces(java.util.List),496,504,"/**
 * Sets alternate color spaces for a PDF stream.
 * @param list of PDColorSpace objects
 */","* Sets the list of alternateColorSpace color spaces.
     *
     * @param list the list of color space objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,org.apache.pdfbox.cos.COSDocument:createCOSStream(),172,180,"/**
* Creates and returns a new COSStream.
* @return COSStream object initialized with streamCache
*/","* Creates a new COSStream using the current configuration for scratch files.
     * 
     * @return the new COSStream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(),69,72,"/**
 * Constructs a new COSStream with default settings.
 */","* Creates a new stream with an empty dictionary.
     * <p>
     * Try to avoid using this constructor because it creates a new scratch file in memory. Instead,
     * use {@link COSDocument#createCOSStream() document.getDocument().createCOSStream()} which will
     * use the existing scratch file (in memory or in temp file) of the document.
     * </p>",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)",93,99,"/**
 * Initializes a COSStream with a cache and read view.
 * @param streamCache for caching stream data
 * @param randomAccessReadView for reading stream data
 * @throws IOException if an I/O error occurs
 */","* Creates a new stream with an empty dictionary. Data is read from the given random accessview. Written data is
     * stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.
     * @param randomAccessReadView source for the data to be read
     * @throws IOException if the length of the random access view isn't available",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,asUnmodifiableDictionary,org.apache.pdfbox.cos.COSDictionary:asUnmodifiableDictionary(),1335,1338,"/**
 * Returns an unmodifiable view of this dictionary.
 * @return UnmodifiableCOSDictionary instance
 */","* Returns an unmodifiable view of this dictionary.
     * 
     * @return an unmodifiable view of this dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,getDecodeResult,org.apache.pdfbox.cos.COSInputStream:getDecodeResult(),96,106,"/**
* Determines decoding result based on mask condition.
* @return DecodeResult object determined by mask evaluation
*/","* Returns the result of the last filter, for use by repair mechanisms.
     * 
     * @return the result of the last filter",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getResources,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getResources(),174,190,"/**
* Retrieves resources for a PDF document.
* @return PDResources object or null if not available
*/","* This will get the resources for this Form XObject.
     * This will return null if no resources are available.
     * 
     * @return The resources for this Form XObject.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormResources(),213,220,"/**
* Initializes PDF resources and logs creation.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormResource,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormResource(),260,267,"/**
* Creates resources for an inner PDF form.
* Initializes and logs the creation of inner form resources.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormResources(),298,304,"/**
* Creates and initializes image form resources.
* @param none
* @return none
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(),43,45,"/**
 * Default constructor for PDAttributeObject.
 */",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject),39,42,"/**
 * Constructs a PDUserProperty with a given user attribute object.
 * @param userAttributeObject the user attribute object to be associated
 */","* Creates a new user property.
     * 
     * @param userAttributeObject the user attribute object",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(),38,40,"/**
* Default constructor for PDOutlineNode.
*/",* Default Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(),37,39,"/**
* Constructs a new PDDestinationNameTreeNode.
*/",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(),35,37,"/**
* Constructs a new instance of PDEmbeddedFilesNameTreeNode.
*/",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(),36,38,"/**
 * Constructs a new instance of PDJavascriptNameTreeNode.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(),36,39,"/**
 * Constructs a new PDStructureElementNameTreeNode.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDNonTerminalField associated with a PDAcroForm.
 * @param acroForm the form to which this field belongs
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,47,"/**
 * Initializes a new PDTerminalField with the given PDAcroForm.
 * @param acroForm the PDAcroForm to associate with this field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),365,368,"/**
 * Constructs a PDLayoutAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new Layout attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),88,91,"/**
* Constructs a PDListAttributeObject from a COSDictionary.
* @param dictionary the underlying COSDictionary to use
*/","* Creates a new List attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Constructs a PDPrintFieldAttributeObject from a COSDictionary.
 * @param dictionary the COSDictionary to initialize with
 */","* Creates a new PrintField attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Constructs a PDTableAttributeObject from a COSDictionary.
 * @param dictionary the underlying COS dictionary
 */","* Creates a new Table attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.cos.COSStream),38,41,"/**
 * Constructs a new PDAppearanceStream from a COSStream.
 * @param stream the underlying COSStream to use
 */","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",47,50,"/**
* Initializes a transparency group with a COSStream and resource cache.
* @param stream PDF stream containing transparency group data
* @param cache resource cache for managing resources
*/","* Creates a Transparency Group for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeCollection,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeCollection(java.io.File),657,670,"/**
 * Processes a TrueType Collection file.
 * @param ttcFile the TTC file to process
 */","* Adds a TTC or OTC to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFontImpl,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFontImpl(org.apache.fontbox.ttf.FontHeaders,java.io.File,java.lang.String)",705,791,"/**
 * Processes font headers to add font info to list.
 * @param fontHeaders Font header data
 * @param file Font file
 * @param hash Font hash
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addType1Font,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addType1Font(java.io.File),796,825,"/**
 * Processes a PFB font file to extract and log font information.
 * @param pfbFile the PFB font file to process
 */","* Adds a Type 1 font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructor for PDMeshBasedShadingType.
 * @param shadingDictionary COSDictionary containing shading details
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(),108,112,"/**
 * Calls overloaded method with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(),61,65,"/**
 * Calls overloaded m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(),129,133,"/**
 * Calls overloaded method m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(),295,299,"/**
 * Calls overloaded m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(),65,69,"/**
* Calls overloaded m1 with null parameter.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(),119,123,"/**
 * Calls overloaded method with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(),415,419,"/**
* Calls overloaded m1 with null parameter.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(),227,231,"/**
 * Calls overloaded method with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(),169,173,"/**
* Calls overloaded method with null parameter.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(),185,189,"/**
 * Calls overloaded method m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(),62,66,"/**
* Calls overloaded version of m1 with null parameter.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(),62,66,"/**
 * Calls overloaded m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(),65,69,"/**
 * Calls overloaded method with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(),65,69,"/**
 * Calls overloaded method m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(),233,237,"/**
 * Calls overloaded method m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(),65,69,"/**
 * Calls overloaded method m1 with null parameter.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Creates a new PDCheckBox instance.
* @param acroForm the form containing this checkbox
* @param field the dictionary representing the checkbox field
* @param parent the parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Constructs a PDPushButton.
* @param acroForm parent form containing the button
* @param field dictionary representing the button
* @param parent non-terminal field of the button
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Constructs a PDRadioButton instance.
* @param acroForm the form containing the radio button
* @param field the dictionary representing the radio button field
* @param parent the parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",65,68,"/**
 * Constructs a PDChoice instance.
 * @param acroForm the form containing this field
 * @param field the dictionary representing the choice field
 * @param parent the parent non-terminal field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",57,60,"/**
* Constructs a PDTextField instance.
* @param acroForm the form containing this field
* @param field the dictionary representing the field
* @param parent the parent field of this field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsState(),991,994,"/**
 * Masks graphics using stack operations.
 */",* Pushes the current graphics state to the stack.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsStack,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsStack(),1009,1015,"/**
 * Saves current graphics state and resets stack.
 * @return original graphics state stack
 */","* Saves the entire graphics stack.
     * 
     * @return the saved graphics state stack.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(),101,104,"/**
 * Creates a new COSDocument using a memory-only stream cache.
 */",* Constructor. Uses main memory to buffer PDF streams.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",182,191,"/**
 * Initializes a COSParser with specified parameters.
 * @param source input stream for reading PDF data
 * @param password optional password for encrypted documents
 * @param keyStore InputStream for keystore (null if not needed)
 * @param keyAlias alias for the key in the keystore
 * @param streamCacheCreateFunction function to create cache for streams
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException if the source data could not be read",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
 * Applies mask to PDF content.
 * @param operator the operator being processed
 * @param arguments list of COSBase arguments for the operation
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,46,"/**
* Applies mask operation to PDF graphics.
* @param operator the PDF operator to apply
* @param operands list of operands for the operator
* @throws IOException if an I/O error occurs during processing
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
 * Applies mask operation using given operator and operands.
 * @param operator the operator for the mask function
 * @param operands list of COSBase operands for the operation
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,66,"/**
* Handles the mask operation for PDF text manipulation.
* @param operator the operator triggering this method
* @param arguments list of COSBase elements to process
* @throws IOException if an I/O error occurs during processing
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.NextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,54,"/**
* Applies a mask to text using given operator and arguments.
* @param operator the operation to perform
* @param arguments list of COSBase objects for operation parameters
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
 * Masks content by applying text operations.
 * @param operator the operation to be performed
 * @param arguments list of COSBase arguments for the operation
 * @throws IOException if an I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
 * Applies text spacing and displays a line of text.
 * @param operator the operator to execute
 * @param arguments list containing word spacing, char spacing, and text
 * @throws IOException if an I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFMarkedContentExtractor:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",105,123,"/**
* Adds marked content with specified tag and properties.
* @param tag the COSName tag for the marked content
* @param properties dictionary containing properties of the marked content
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:constructAppearances(),193,213,"/**
* Masks function for signature fields.
* @throws IOException if an I/O error occurs
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,transform,"org.apache.pdfbox.rendering.PDFRenderer:transform(java.awt.Graphics2D,int,org.apache.pdfbox.pdmodel.common.PDRectangle,float,float)",455,482,"/**
* Applies scaling and rotation to a Graphics2D object.
* @param graphics the Graphics2D object to manipulate
* @param rotationAngle angle in degrees for rotation (90, 180, 270)
* @param cropBox rectangle defining bounds for translation
* @param scaleX scale factor along X-axis
* @param scaleY scale factor along Y-axis
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getBounds,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:getBounds(),1995,2022,"/**
* Creates a transformed Rectangle2D based on flipTG.
* @return Transformed Rectangle2D object
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,clipToRect,org.apache.pdfbox.contentstream.PDFStreamEngine:clipToRect(org.apache.pdfbox.pdmodel.common.PDRectangle),616,624,"/**
* Applies a mask to the given rectangle.
* @param rectangle area to apply the mask
*/","* Transforms the given rectangle using the CTM and then intersects it with the current
     * clipping area.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getTransformedAppearanceBBox,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getTransformedAppearanceBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),755,761,"/**
* Transforms the appearance box of a PDF annotation.
* @param appearanceStream stream containing the annotation's appearance
* @return transformed bounding box as Rectangle2D
*/","* Calculate the transformed appearance box.
     * 
     * Apply the Matrix (or an identity transform) to the BBox of
     * the appearance stream
     * 
     * @param appearanceStream
     * @return the transformed rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),85,88,"/**
 * Initializes graphics state with page boundaries.
 * @param page page dimensions and coordinates
 */","* Constructor with a given page size to initialize the clipping path.
     * @param page the size of the page",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:getLeft(),65,68,"/**
 * Returns masked value from array.
 * @return integer result of masking operation
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getLeft(),61,64,"/**
 * Returns result of applying mask to array element.
 * @return integer result from masked operation
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getBottom(),90,93,"/**
 * Returns masked value from array.
 * @return integer result of masking operation
 */","* Get the bottom y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The bottom y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getRight(),119,122,"/**
 * Returns result of masking operation on array element.
 * @return masked integer value from array at index 4
 */","* Get the right x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The right x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getTop(),149,152,"/**
 * Returns masked value from array.
 * @return integer result of masking operation
 */","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:getTop(),67,70,"/**
 * Returns masked value from array at index 2.
 * @return integer result of masking operation
 */","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getLeft(),64,67,"/**
 * Returns masked value from array.
 * @return integer result of masking operation
 */","* Get the left x coordinate.  Return values of 0 or -1 imply that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getTop(),93,96,"/**
 * Calls m1 on array with argument 3.
 * @return result of array.m1(3)
 */","* Get the top y coordinate.  Return values of 0 or -1 imply that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:fitBoundingBox(),64,67,"/**
 * Checks if the first element of the array meets a bounded condition.
 * @return true if condition is met, false otherwise
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:fitBoundingBox(),93,96,"/**
 * Checks condition using array and bounded type.
 * @return result of condition check
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:fitBoundingBox(),95,98,"/**
 * Checks condition using array and bounded type.
 * @return boolean result of the check
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(),205,208,"/**
 * Returns an OutputStream for writing data.
 * @throws IOException if an I/O error occurs
 */","* Returns a new OutputStream for writing stream data, using the current filters.
     *
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(org.apache.pdfbox.cos.COSName),170,173,"/**
 * Retrieves an output stream with specified filter.
 * @param filter name of the filter to apply
 * @return OutputStream with applied filter
 * @throws IOException if stream retrieval fails
 */","* This will get a stream that can be written to, with the given filter.
     *
     * @param filter the filter to be used.
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createThumbnail,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createThumbnail(org.apache.pdfbox.cos.COSStream),156,161,"/**
 * Creates a PDImageXObject from a COSStream.
 * @param cosStream the input COS stream
 * @return PDImageXObject created from the input stream
 */","* Creates a thumbnail Image XObject from the given COSBase and name.
     * @param cosStream the COS stream
     * @return an XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMask(),803,821,"/**
* Retrieves mask image from PDF.
* @return PDImageXObject or null if no mask is found
*/","* Returns the Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return Mask Image XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSoftMask(),837,846,"/**
* Retrieves mask image from PDF stream.
* @return PDImageXObject or null if no mask found
*/","* Returns the Soft Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return the SMask Image XObject, or null.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeAffineTransform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeAffineTransform(java.awt.geom.AffineTransform),1535,1543,"/**
* Applies transformation matrix to mask.
* @param transform Affine transformation matrix
*/","* Writes an AffineTransform to the content stream as an array.
     * 
     * @param transform AffineTransfrom to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginText(),134,142,"/**
* Begins text mode, disallows nested calls.
* @throws IOException on I/O error
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endText(),151,159,"/**
* Ends text mode and marks the end of a text block.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLeading(float),333,337,"/**
 * Sets text leading.
 * @param leading value for text spacing
 * @throws IOException if an I/O error occurs
 */","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLine(),345,352,"/**
* Ends current line in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor by specified offset.
* @param tx horizontal offset
* @param ty vertical offset
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:saveGraphicsState(),589,609,"/**
* Saves the current graphics state.
* Throws IllegalStateException if in text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, ensuring no text mode conflicts.
* Throws exception if called within text objects.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets stroking color using RGB values.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color for stroking.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float),759,768,"/**
* Sets stroking color to grayscale based on input.
* @param g grayscale value (0.0 to 1.0)
* @throws IllegalArgumentException if g is outside the valid range
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking RGB color.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Applies CMYK color mask.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float),877,886,"/**
* Sets non-stroking gray color.
* @param g gray level (must be within 0..1)
* @throws IOException if I/O error occurs
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the graphics context.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bezier curve.
* @param x1,y1 control point 1 coordinates
* @param x2,y2 control point 2 coordinates
* @param x3,y3 end point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Draws a cubic Bézier curve.
* @param x2 control point X coordinate
* @param y2 control point Y coordinate
* @param x3 end point X coordinate
* @param y3 end point Y coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Draws a cubic Bézier curve.
* @param x1 starting point X coordinate
* @param y1 starting point Y coordinate
* @param x3 control point X coordinate
* @param y3 control point Y coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the graphics cursor to specified coordinates.
 * @param x horizontal coordinate
 * @param y vertical coordinate
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the endpoint
* @param y y-coordinate of the endpoint
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:stroke(),1031,1038,"/**
* Applies stroke to path, disallowed in text mode.
* @throws IOException if an I/O error occurs
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws an exception if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fill(),1061,1068,"/**
* Masks the current area with non-zero fill.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillEvenOdd(),1076,1083,"/**
* Sets fill rule to even-odd.
* Throws exception if called in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStroke(),1093,1100,"/**
 * Masks the current path with non-zero winding rule and strokes it.
 * Throws an exception if called in text mode.
 */","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Masks the function by applying fill and stroke even-odd rule.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStroke(),1127,1134,"/**
 * Closes, fills, and strokes the current path.
 * Throws an exception if called within a text block.
 */","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Closes and fills path using even-odd rule then strokes it.
 * Throws exception if called in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closePath(),1177,1184,"/**
* Closes the current path.
* Throws IllegalStateException if in text mode.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clip(),1192,1202,"/**
* Applies clipping and ends the path.
* Throws exception if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clipEvenOdd(),1210,1220,"/**
* Masks the current path using even-odd rule.
* Throws exception if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width for drawing operations.
 * @param lineWidth desired width of the line
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style identifier (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets line cap style.
* @param lineCapStyle integer representing cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern.
* @param pattern array of float values defining the dash pattern
* @param phase offset for the start of the dash pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value (must be greater than 0)
* @throws IOException if an I/O error occurs
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing.
 * @param spacing character spacing value
 * @throws IOException if an I/O error occurs
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing for text.
 * @param spacing the spacing value to apply
 * @throws IOException if an I/O error occurs
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies text scaling and sets horizontal scaling.
* @param scale factor for text scaling
* @throws IOException if an I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm rendering mode configuration
* @throws IOException if an I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextRise(float),1662,1666,"/**
 * Masks text with specified rise.
 * @param rise vertical adjustment for text
 * @throws IOException if I/O error occurs
 */","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSNumber,org.apache.pdfbox.pdfparser.BaseParser:parseCOSNumber(),1018,1043,"/**
* Parses and returns a COSNumber from the source.
* @throws IOException if an I/O error occurs
* @return parsed COSNumber object
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,getBFCOSObjectOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:getBFCOSObjectOffsets(),117,125,"/**
* Returns COSObject key offsets map.
* Initializes search if not triggered yet.
* @return Map of COSObject keys to their offsets
* @throws IOException on I/O error during initialization
*/","* Returns all found objects of a brute force search.
     * 
     * @return map containing all found objects of a brute force search
     * 
     * @throws IOException if something went wrong
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,validateXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:validateXrefOffsets(java.util.Map),392,441,"/**
* Validates and corrects XRef offsets.
* @param xrefOffset map of object keys to their offset positions
* @return true if all offsets are valid, false otherwise
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefTable,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefTable(),753,799,"/**
* Processes XReference entries, updating or creating them based on incremental status.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.OutputStream),201,205,"/**
 * Writes this object to an OutputStream using COSWriter.
 * @param output stream to write to
 * @throws IOException if writing fails
 */","* This will save the document to an output stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,clear,org.apache.pdfbox.cos.COSArray:clear(),140,144,"/**
 * Calls methods on `objects` and chains calls to `m2()` and `m3`.
 */",* This will remove all of the objects in the collection.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeAll,org.apache.pdfbox.cos.COSArray:removeAll(java.util.Collection),151,155,"/**
 * Processes a list of COSBase objects.
 * @param objectsList collection of COSBase objects to process
 */","* This will remove all of the objects in the collection.
     *
     * @param objectsList The list of objects to remove from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,retainAll,org.apache.pdfbox.cos.COSArray:retainAll(java.util.Collection),162,168,"/**
* Processes a list of COSBase objects.
* @param objectsList collection of COSBase objects to process
*/","* This will retain all of the objects in the collection.
     *
     * @param objectsList The list of objects to retain from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,int)",242,246,"/**
* Calls methods on `objects` and `m3()` with given parameters.
* @param index index to be used in method calls
* @param intVal integer value to process through `COSInteger.m1`
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param intVal The object to set.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(int),459,464,"/**
* Removes and returns an entry from the objects collection.
* @param i index of the entry to remove
* @return removed COSBase object or null if not found
*/","* This will remove an element from the array.
     *
     * @param i The index of the object to remove.
     *
     * @return The object that was removed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(org.apache.pdfbox.cos.COSBase),474,482,"/**
* Removes an object from a collection.
* @param o the object to remove
* @return true if the object was successfully removed, false otherwise
*/","* This will remove an element from the array.
     *
     * @param o The object to remove.
     *
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,clear,org.apache.pdfbox.cos.COSDictionary:clear(),130,134,"/**
 * Calls methods on items and the result of m2().
 */",* This will clear all items in the map.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,removeItem,org.apache.pdfbox.cos.COSDictionary:removeItem(org.apache.pdfbox.cos.COSName),1164,1168,"/**
 * Masks an item by key.
 * @param key unique identifier for the item to mask
 */","* This will remove an item for the dictionary. This will do nothing of the object does not exist.
     *
     * @param key The key to the item to remove from the dictionary.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,updateDifferentOrigin,org.apache.pdfbox.cos.COSIncrement:updateDifferentOrigin(org.apache.pdfbox.cos.COSUpdateState),258,265,"/**
* Updates state based on origin and current state.
* @param updateState the state to be updated
*/","* Check whether the given {@link COSUpdateState}´s {@link COSDocumentState} differs from the {@link COSIncrement}´s
     * known {@link #incrementOrigin}.<br>
     * Should that be the case, the {@link COSUpdateState} originates from another {@link COSDocument} and must be added
     * to the {@link COSIncrement}, hence call {@link COSUpdateState#update()}.
     *
     * @param updateState The {@link COSUpdateState} that shall be updated, if it's originating from another
     *                    {@link COSDocument}.
     * @see #incrementOrigin",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,setToNull,org.apache.pdfbox.cos.COSObject:setToNull(),135,143,"/**
* Resets parsing state and marks object as processed.
*/",* Sets the referenced object to COSNull and removes the initially assigned parser.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,"org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState,boolean)",118,164,"/**
 * Updates document state and processes update info recursively.
 * @param originDocumentState the original document state
 * @param dereferencing flag to control dereferencing behavior
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     * <p>
     * Additionally to {@link #setOriginDocumentState(COSDocumentState)}, this shall also deny changing
     * {@link #updated}, should the flag {@code dereferencing} indicate, that this is caused by dereferencing a
     * {@link COSObject}.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @param dereferencing       {@code true}, if this update of the {@link COSDocumentState} is caused by
     *                            dereferencing a {@link COSObject}.
     * @see #originDocumentState
     * @see #updated",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,org.apache.pdfbox.cos.COSArray:getString(int),407,410,"/**
 * Calls overloaded method with default null value.
 * @param index array index to access
 * @return result of overloaded method
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The string or null if it does not exist.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValue(),110,140,"/**
 * Masks a value based on certain conditions.
 * @return masked value as a String
 */","* Returns the selected value.
     * 
     * <p>Off is the default value which will also be returned if the
     * value hasn't been set at all.
     * 
     * @return A non-null string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(),35,38,"/**
 * Initializes a new PDSimpleFileSpecification with an empty COSString.
 */","* Constructor.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:setFile(java.lang.String),66,70,"/**
 * Sets the file name for processing.
 * @param fileName name of the file to be processed
 */","* This will set the file name.
     *
     * @param fileName The name of the file.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(java.lang.String),67,70,"/**
 * Constructs a PDF named destination.
 * @param dest destination string
 */","* Default constructor.
     *
     * @param dest The named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:setNamedDestination(java.lang.String),110,120,"/**
* Sets the destination string.
* @param dest destination string or null to clear
*/","* Set the named destination.
     *
     * @param dest The new named destination.
     *
     * @throws IOException If there is an error setting the named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,getPathForCharacterCode,org.apache.pdfbox.rendering.GlyphCache:getPathForCharacterCode(int),47,97,"/**
 * Retrieves a glyph path by code.
 * @param code character code
 * @return GeneralPath object representing the glyph or an empty path if not found
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType2,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType2(),264,269,"/**
 * Executes functions based on alignment option.
 * @throws IOException if an I/O error occurs during execution
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType4,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType4(),271,298,"/**
 * Masks data based on options and processing nodes.
 * @throws IOException if an I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType6,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType6(),300,305,"/**
 * Executes methods based on alignment option.
 * @throws IOException if an I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRowType6,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRowType6(),130,132,"/**
 * Calls helper function m1 and handles potential IO exceptions.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",174,179,"/**
* Decodes input stream using specified parameters.
* @param encoded input stream to decode
* @param decoded output stream for decoded data
* @param parameters decoding parameters
* @param index current position in the stream
* @return DecodeResult object
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[]),291,295,"/**
 * Calls overloaded method with full byte array range.
 * @param bytes input byte array
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readGenerationNumber,org.apache.pdfbox.pdfparser.BaseParser:readGenerationNumber(),1369,1378,"/**
* Retrieves and validates a generation number.
* @return validated generation number
* @throws IOException if the number is invalid
*/","* This will read a integer from the Stream and throw an {@link IllegalArgumentException} if the integer value
     * has more than the maximum object revision (i.e. : bigger than {@link #GENERATION_NUMBER_THRESHOLD})
     * @return the generation number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readObjectNumber,org.apache.pdfbox.pdfparser.BaseParser:readObjectNumber(),1353,1361,"/**
* Retrieves masked object number.
* @return long value representing the masked object number
* @throws IOException if object number exceeds threshold or is negative
*/","* This will read a long from the Stream and throw an {@link IOException} if
     * the long value is negative or has more than 10 digits (i.e. : bigger than
     * {@link #OBJECT_NUMBER_THRESHOLD})
     *
     * @return the object number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",1021,1036,"/**
* Masks password for user based on encryption revision.
* @param password user's password bytes
* @param user user identifier bytes
* @param owner document owner bytes
* @param permissions access permissions
* @param id unique identifier bytes
* @param encRevision encryption revision number
* @param length data length
* @param encryptMetadata flag to encrypt metadata
* @return true if masking successful, false otherwise
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword(byte[],byte[],int,int)",657,669,"/**
* Masks owner password based on encryption revision.
* @param ownerPassword user-defined owner password bytes
* @param owner owner's information bytes
* @param encRevision PDF encryption revision
* @param length desired masked password length
* @return masked password bytes or empty array for rev 5/6
* @throws IOException if an I/O error occurs
*/","* Get the user password based on the owner password.
     *
     * @param ownerPassword The plaintext owner password.
     * @param owner The o entry of the encryption dictionary.
     * @param encRevision The encryption revision number.
     * @param length The key length.
     *
     * @return The u entry of the encryption dictionary.
     *
     * @throws IOException If there is an error accessing data while generating the user password.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a TensorPatch with control points and colors.
* @param tcp array of control points defining the patch
* @param color 2D array representing color data
*/","* Constructor of a patch for type 7 shading.
     *
     * @param tcp 16 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,tokenize,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:tokenize(),197,218,"/**
 * Masks characters in buffer until no more are available.
 * Uses state machine to process different character types.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)",284,289,"/**
* Applies RC4 encryption to input stream and writes to output stream.
* @param finalKey encryption key
* @param input source data stream
* @param output destination data stream
* @throws IOException on I/O errors
*/","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientsField,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientsField(byte[]),433,469,"/**
 * Generates masked data for each recipient.
 * @param seed input seed data
 * @return 2D byte array of masked data for each recipient
 * @throws GeneralSecurityException if security operations fail
 * @throws IOException if I/O operations fail
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword56(byte[],byte[],byte[],int)",619,643,"/**
 * Validates user password against owner data.
 * @param ownerPassword user's password bytes
 * @param user user identifier bytes
 * @param owner owner information bytes
 * @param encRevision encryption revision level
 * @return true if validation passes, false otherwise
 * @throws IOException if owner password is too short or other I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev56(byte[],boolean,byte[],byte[],byte[],byte[],int)",780,837,"/**
* Masks password for encryption.
* @param password user's password
* @param isOwnerPassword flag indicating if owner password
* @param o owner entry bytes
* @param u user entry bytes
* @param oe owner key encrypted bytes
* @param ue user key encrypted bytes
* @param encRevision encryption revision
* @return decrypted file key or throws IOException
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword56(byte[],byte[],int)",1038,1057,"/**
 * Masks a password using user data and encryption revision.
 * @param password the user's password bytes
 * @param user combined user hash and validation salt
 * @param encRevision encryption revision to use
 * @return true if masking is successful, false otherwise
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getProvider(),154,161,"/**
* Returns the FontProvider instance, initializing with DefaultFontProvider if necessary.
* @return FontProvider object
*/",* Returns the font service provider. Defaults to using FileSystemFontProvider.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,createShadedTriangleList,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:createShadedTriangleList(int,int,org.apache.pdfbox.pdmodel.graphics.shading.Vertex[][])",157,188,"/**
* Generates shaded triangles from a lattice array.
* @param rowNum number of rows in the lattice
* @param numPerRow number of vertices per row
* @param latticeArray 2D array of Vertex objects
* @return List of ShadedTriangle objects
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getShadedTriangles,org.apache.pdfbox.pdmodel.graphics.shading.Patch:getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][]),173,225,"/**
* Generates shaded triangles from a grid of coordinate-color pairs.
* @param patchCC 2D array of CoordinateColorPair objects
* @return List of ShadedTriangle objects representing the masked area
*/","* An assistant method to accomplish type 6 and type 7 shading.
     *
     * @param patchCC all the crossing point coordinates and color of a grid
     * @return a ShadedTriangle list which can compose the grid patch",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1Font:getHeight(int),376,391,"/**
* Calculates a value based on code.
* @param code unique identifier for calculation
* @return calculated float value
* @throws IOException if an I/O error occurs
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getWidthFromFont(int),450,465,"/**
* Computes masked function value for given code.
* @param code input code for computation
* @return computed float value or default if conditions met
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(int),631,636,"/**
* Generates a path based on a code.
* @param code identifier to process
* @return GeneralPath object representing the generated path
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getNormalizedPath(int),638,648,"/**
* Generates a GeneralPath based on the given code.
* @param code identifier for the path
* @return GeneralPath object or default '.notdef' if not found
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a CoonsPatch with given points and colors.
* @param points array of control points defining the patch
* @param color 2D array representing color data
*/","* Constructor of a patch for type 6 shading.
     *
     * @param points 12 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endText,org.apache.pdfbox.rendering.PageDrawer:endText(),456,460,"/**
 * Calls method m1.
 * Throws IOException if an I/O error occurs.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginText,org.apache.pdfbox.rendering.PageDrawer:beginText(),449,454,"/**
 * Executes masked function logic.
 * Calls helper methods m1 and m2 in sequence.
 * @throws IOException if an I/O error occurs during execution
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,getContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:getContent(),39,43,"/**
 * Retrieves an input stream from the COS writer.
 * @return InputStream from the COS writer
 * @throws IOException if an I/O error occurs
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processTextPosition,org.apache.pdfbox.text.PDFMarkedContentExtractor:processTextPosition(org.apache.pdfbox.text.TextPosition),156,249,"/**
 * Masks duplicate overlapping text positions.
 * @param text TextPosition object to process
 */","* This will process a TextPosition object and add the
     * text to the list of characters on a page.  It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripper:processTextPosition(org.apache.pdfbox.text.TextPosition),897,1056,"/**
* Processes and masks text positions based on various conditions.
* @param text TextPosition object to process
*/","* This will process a TextPosition object and add the text to the list of characters on a page. It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,removeContainedSpaces,org.apache.pdfbox.text.PDFTextStripper:removeContainedSpaces(java.util.List),771,793,"/**
 * Removes consecutive spaces from text positions.
 * @param textList list of TextPosition objects
 */",* Remove all space characters if contained within the adjacent letters,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleLineSeparation,"org.apache.pdfbox.text.PDFTextStripper:handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1563,1591,"/**
* Updates position and checks line height.
* @param current current PositionWrapper
* @param lastPosition previous PositionWrapper
* @param lastLineStartPosition start of the last line
* @param maxHeightForLine maximum allowed line height
* @return updated lastLineStartPosition
*/","* handles the line separator for a new line given the specified current and previous TextPositions.
     * 
     * @param current the current text position
     * @param lastPosition the previous text position
     * @param lastLineStartPosition the last text position that followed a line separator.
     * @param maxHeightForLine max height for positions since lastLineStartPosition
     * @return start position of the last line
     * @throws IOException if something went wrong",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeAdd,"org.apache.pdfbox.text.PDFTextStripper:normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",2115,2132,"/**
 * Processes line items, updating normalized list and building lines.
 * @param normalized list of WordWithTextPositions
 * @param lineBuilder StringBuilder for current line
 * @param wordPositions list of TextPosition objects
 * @param item current LineItem to process
 * @return updated lineBuilder
 */","* Used within {@link #normalize(List)} to handle a {@link TextPosition}.
     * 
     * @return The StringBuilder that must be used when calling this method.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(java.lang.String),719,737,"/**
 * Parses a date string and returns a Calendar object.
 * @param text input date string to parse
 * @return Calendar object representing the parsed date, or null if parsing fails
 */","* Returns the Calendar for a given string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     *
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Masks content with specified tag.
* @param tag COSName representing the mask tag
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Applies marked content with a given tag and MCID.
 * @param tag the COSName tag for marking content
 * @param mcid non-negative integer representing the mark identifier
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Applies masking to content with specified tag.
* @param tag COSName representing the content tag
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",1621,1624,"/**
 * Calls m3 with processed string values.
 * @param string input COSString object
 * @param output target OutputStream for writing
 * @throws IOException if an I/O error occurs
 */","* This will output the given byte getString as a PDF object.
     *
     * @param string COSString to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],java.io.OutputStream)",1633,1636,"/**
 * Writes byte array to output stream without closing it.
 * @param bytes data to write
 * @param output destination stream
 * @throws IOException if an I/O error occurs
 */","* This will output the given text/byte getString as a PDF object.
     *
     * @param bytes byte array representation of a string to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFGraphicsStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:<init>(org.apache.pdfbox.pdmodel.PDPage),107,176,"/**
 * Initializes graphics stream engine for a PDF page.
 * @param page PDPage to be processed
 */","* Constructor.
     * 
     * @param page the page the content stream belongs to",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(),52,55,"/**
 * Constructs a PDFMarkedContentExtractor with default settings.
 */",* Instantiate a new PDFMarkedContentExtractor object.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,<init>,org.apache.pdfbox.text.PDFTextStripperByArea:<init>(),45,48,"/**
 * Initializes PDFTextStripperByArea with beads separation disabled.
 */","* Constructor.
     * @throws IOException If there is an error loading properties.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,65,"/**
* Applies a mask to an operator with given arguments.
* @param operator the PDF operator
* @param arguments list of COSBase arguments
* @throws IOException if operation fails
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSHexString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSHexString(),693,746,"/**
* Parses a masked hexadecimal string from input source.
* @return COSString containing the parsed value or throws IOException if parsing fails
*/","* This will parse a PDF HEX string with fail fast semantic
     * meaning that we stop if a not allowed character is found.
     * This is necessary in order to detect malformed input and
     * be able to skip to next object start.
     *
     * We assume starting '&lt;' was already read.
     * 
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getConvertedContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getConvertedContents(java.io.InputStream),363,388,"/**
* Reads InputStream, trims specific byte patterns, and returns processed byte array.
* @param is input stream to process
* @return processed byte array or empty if no data
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFileFilters(java.util.List),378,382,"/**
* Applies filters to PDF stream.
* @param filters list of filter names
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(),93,96,"/**
* Constructs a new PDRectangle with default values.
*/","* Constructor.
     *
     * Initializes to 0,0,0,0",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float)",104,107,"/**
* Creates a rectangle with specified width and height.
* @param width horizontal dimension of the rectangle
* @param height vertical dimension of the rectangle
*/","* Constructor.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectangle(),164,168,"/**
* Creates a PDRectangle from bounding box coordinates.
* @return PDRectangle representing the area defined by bboxMinX, bboxMinY, bboxMaxX, bboxMaxY
*/","* Returns the updated <code>Rect</code> entry for the annotation.
     * The rectangle completely contains the cloudy border.
     *
     * @return Annotation <code>Rect</code>.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectDifference(),185,201,"/**
 * Returns a mask rectangle for annotation.
 * @return PDRectangle representing the mask bounds
 */","* Returns the updated <code>RD</code> entry for Square and Circle annotations.
     *
     * @return Annotation <code>RD</code> value.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,applyRectDiff,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",496,535,"/**
 * Adjusts rectangle dimensions based on another rectangle and a minimum value.
 * @param rd reference rectangle or null
 * @param min minimum dimension value
 * @return adjusted PDRectangle object
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getPaddedRectangle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",218,222,"/**
* Applies padding to a rectangle.
* @param rectangle original rectangle dimensions
* @param padding amount of padding to add
* @return new PDRectangle with adjusted dimensions
*/","* Get a padded rectangle.
     * 
     * <p>Creates a new rectangle with padding applied to each side.
     * .
     * @param rectangle the rectangle.
     * @param padding the padding to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,addRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",235,246,"/**
 * Adjusts rectangle dimensions based on differences.
 * @param rectangle original PDRectangle to adjust
 * @param differences array of 4 floats representing adjustments
 * @return new PDRectangle with adjusted dimensions or original if invalid input
 */","* Get a rectangle enlarged by the differences.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,applyRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",259,269,"/**
* Adjusts rectangle dimensions based on given differences.
* @param rectangle original PDRectangle object
* @param differences array of 4 floats representing adjustments
* @return new PDRectangle with adjusted dimensions or original if invalid input
*/","* Get a rectangle with the differences applied to each side.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,applyPadding,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",1045,1051,"/**
* Adjusts rectangle dimensions by adding padding.
* @param box original rectangle
* @param padding amount to add to each side
* @return new adjusted rectangle
*/","* Apply padding to a box.
     * 
     * @param box box
     * @return the padded box.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createStream,org.apache.pdfbox.multipdf.Overlay:createStream(java.lang.String),602,611,"/**
* Creates a COSStream with compressed or uncompressed content.
* @param content input string to be processed
* @return COSStream containing the processed content
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,<init>,org.apache.pdfbox.pdfparser.PDFXRefStream:<init>(org.apache.pdfbox.cos.COSDocument),57,60,"/**
 * Constructs a PDF XRef stream.
 * @param cosDocument the COS document to create the stream in
 */","* Create a fresh XRef stream like for a fresh file or an incremental update.
     * 
     * @param cosDocument the COSDocmernt to be used to create a new COSStream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,createStream,org.apache.pdfbox.pdmodel.common.PDObjectStream:createStream(org.apache.pdfbox.pdmodel.PDDocument),51,57,"/**
* Creates a PDObjectStream from the given PDDocument.
* @param document source PDF document
* @return PDObjectStream object initialized with document's stream
*/","* This will create a new PDObjectStream object.
     *
     * @param document The document that the stream will be part of.
     * @return A new stream object.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),61,64,"/**
 * Creates a new PDStream from a PDDocument.
 * @param document PDDocument to create stream from
 */","* Creates a new empty PDStream object.
     * 
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSDocument),71,74,"/**
 * Creates a PDStream from a COSDocument.
 * @param document the COSDocument to create the stream from
 */","* Creates a new empty PDStream object.
     *
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",131,138,"/**
 * Initializes a PDStream with an input stream and document.
 * @param doc PDDocument to associate the stream with
 * @param input InputStream containing data for the stream
 * @param filters COSBase representing content stream filters
 * @throws IOException if there's an I/O error during stream processing
 */","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied, if any. This method closes the InputStream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createRawStream,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",166,175,"/**
 * Creates a COSStream from an input stream.
 * @param document PDDocument to create the stream in
 * @param rawInput InputStream containing data for the stream
 * @return COSStream created from the input stream
 * @throws IOException if I/O operations fail
 */",* Creates a COS stream from raw (encoded) data.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createCOSStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createCOSStream(),106,109,"/**
 * Returns a COSStream from the document or creates a new one if document is null.
 * @return COSStream object
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,encode,"org.apache.pdfbox.filter.Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,112,"/**
 * Encodes input stream and writes to output stream using specified parameters.
 * @param input source InputStream to encode
 * @param encoded destination OutputStream for encoded data
 * @param parameters COSDictionary containing encoding parameters
 * @param index current processing index (unused in this method)
 * @throws IOException if an I/O error occurs during processing
 */","* Encodes data.
     * @param input the byte stream to encode
     * @param encoded the stream where encoded data will be written
     * @param parameters the parameters used for encoding
     * @param index the index to the filter being encoded
     * @throws IOException if the stream cannot be encoded",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(),38,40,"/**
 * Constructs a new instance of PDDefaultAttributeObject.
 */",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(),43,46,"/**
 * Constructs a new PDUserAttributeObject with OWNER_USER_PROPERTIES as the owner.
 */",* Default constructor,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(),44,46,"/**
 * Constructor for PDStandardAttributeObject.
 */",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(),53,56,"/**
 * Constructs a new PDOutlineItem.
 */",* Default Constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),47,50,"/**
 * Constructs a PDVariableText instance.
 * @param acroForm the form containing this variable text field
 */","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDExportFormatAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new ExportFormat attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getAppearanceStream(),84,91,"/**
* Creates a PDAppearanceStream from the current COSStream.
* @throws IllegalStateException if this entry is not an appearance stream
*/","* Returns the entry as an appearance stream.
     *
     * @return the entry as an appearance stream
     * 
     * @throws IllegalStateException if this entry is not an appearance stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFont(java.io.File),675,700,"/**
 * Parses a TTF/OTF font file and updates font info.
 * @param ttfFile the font file to be parsed
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
* Constructs a PDShadingType6 from a COSDictionary.
* @param shadingDictionary dictionary representing the shading
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Constructs a PDShadingType7 instance.
 * @param shadingDictionary the COS dictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Constructs a PDComboBox.
* @param acroForm parent form containing this combo box
* @param field dictionary representing the combo box field
* @param parent non-terminal field that owns this combo box
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",49,52,"/**
* Constructs a PDListBox.
* @param acroForm PDF AcroForm containing the field
* @param field dictionary representing the list box field
* @param parent non-terminal field of the list box
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,process,"org.apache.pdfbox.contentstream.operator.state.Save:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",39,43,"/**
 * Executes function with given operator and arguments.
 * @param operator the operation to perform
 * @param arguments list of arguments for the operation
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",165,169,"/**
* Initializes COSParser with specified parameters.
* @param source input stream for PDF data
* @param password decryption password for encrypted documents
* @param keyStore keystore for decryption if needed
* @param keyAlias alias for the key in the keystore
*/","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     *
     * @throws IOException if the source data could not be read",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",91,95,"/**
 * Initializes a new PDFParser instance.
 * @param source the input source for the PDF
 * @param decryptionPassword password for decrypting the PDF if encrypted
 * @param keyStore keystore used for decryption
 * @param alias alias for the key in the keystore
 * @param streamCacheCreateFunction function to create a stream cache
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException If something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(),158,161,"/**
 * Returns an output stream.
 * @throws IOException if an I/O error occurs
 */","* This will get a stream that can be written to.
     * 
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStreamElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStreamElement(org.w3c.dom.Element),185,283,"/**
* Parses a COSStream from an XML Element.
* @param streamEl XML Element representing the stream
* @return COSStream object with parsed data
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,createCOSStreamwithIccProfile,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:createCOSStreamwithIccProfile(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",409,461,"/**
 * Creates a COSStream with color space and ICC profile data.
 * @param document PDDocument object
 * @param colorSpace PDColorSpace object
 * @param state PNGConverterState object containing ICC profile data
 * @return COSStream with configured color space and ICC profile, or null if invalid data
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,writeToStream,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",875,881,"/**
* Masks data into an appearance stream.
* @param data byte array to be masked
* @param appearanceStream target appearance stream
* @throws IOException if I/O operations fail
*/","* Writes the stream to the actual stream in the COSStream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,boolean)",58,61,"/**
 * Initializes a new content stream for the given appearance.
 * @param appearance PDF appearance stream
 * @param compress whether to compress the output stream
 * @throws IOException if an I/O error occurs
 */","* Create a new appearance stream.
     *
     * @param appearance The appearance stream to write to.
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @throws IOException If there is an error writing to the content stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text transformation matrix.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
 * Applies a mask to the given matrix.
 * @param matrix the Matrix object to apply the mask to
 * @throws IOException if an I/O error occurs
 */","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginText(),134,142,"/**
 * Starts text mode by invoking BEGIN_TEXT operator.
 * Throws exception if already in text mode.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDFormContentStream:beginText(),134,142,"/**
* Begins text mode, throwing an error if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPageContentStream:beginText(),134,142,"/**
* Begins text mode.
* Throws exception if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginText(),134,142,"/**
* Starts text mode.
* Throws exception if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endText(),151,159,"/**
* Ends text mode and flushes text operations.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDFormContentStream:endText(),151,159,"/**
* Ends text mode and marks the end of a text block.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPageContentStream:endText(),151,159,"/**
* Ends text mode and marks the end of a text block.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPatternContentStream:endText(),151,159,"/**
* Ends text mode and marks the end of a text block.
* Throws an exception if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLeading(float),333,337,"/**
 * Sets text leading.
 * @param leading the leading value to set
 * @throws IOException if an I/O error occurs
 */","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDFormContentStream:setLeading(float),333,337,"/**
 * Sets text leading.
 * @param leading the leading value to apply
 * @throws IOException if an I/O error occurs
 */","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPageContentStream:setLeading(float),333,337,"/**
 * Sets text leading.
 * @param leading spacing between lines of text
 */","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLeading(float),333,337,"/**
 * Sets text leading in the document.
 * @param leading the leading value to apply
 * @throws IOException if an I/O error occurs
 */","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLine(),345,352,"/**
* Ends current line in text mode.
* Throws exception if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDFormContentStream:newLine(),345,352,"/**
* Inserts a newline in text mode.
* Throws exception if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPageContentStream:newLine(),345,352,"/**
* Advances to the next line in text mode.
* Throws exception if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPatternContentStream:newLine(),345,352,"/**
* Ends current line in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to specified offset.
* @param tx horizontal translation
* @param ty vertical translation
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDFormContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to specified offset.
* @param tx horizontal translation
* @param ty vertical translation
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPageContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor by offset.
* @param tx horizontal offset
* @param ty vertical offset
* @throws IOException if I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPatternContentStream:newLineAtOffset(float,float)",363,372,"/**
 * Moves text cursor to a new position.
 * @param tx horizontal offset
 * @param ty vertical offset
 * @throws IOException if an I/O error occurs
 */","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:saveGraphicsState(),589,609,"/**
* Saves the graphics state. Throws exception if in text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:saveGraphicsState(),589,609,"/**
* Saves the graphics state, disallowing text mode.
* Throws exception if in text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state, disallows within text mode.
* Throws IllegalStateException if in text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:saveGraphicsState(),589,609,"/**
 * Saves the current graphics state.
 * Throws IllegalStateException if in text mode.
 * Updates font, stroking color space, and non-stroking color space stacks.
 */","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, disallowed in text mode.
* Throws exception if called within text object.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, disallowed in text mode.
* Throws exception if called within text object.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, disallowed in text mode.
* Throws exception if called within text objects.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, ensuring no text mode violations.
* Throws IllegalStateException if called within text objects.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets RGB stroking color with validation.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets RGB color for stroking.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
* @throws IllegalArgumentException if any parameter is outside 0..1 range
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float)",713,725,"/**
 * Sets RGB color for stroking.
 * @param r red component (0.0 to 1.0)
 * @param g green component (0.0 to 1.0)
 * @param b blue component (0.0 to 1.0)
 * @throws IOException if an I/O error occurs
 */","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets RGB stroking color.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color with validation.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k key (black) component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values for stroking.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK stroking color.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color for stroking.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float),759,768,"/**
* Applies grayscale stroking color with validation.
* @param g grayscale value (must be within 0..1)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float),759,768,"/**
* Applies grayscale stroking color with validation.
* @param g grayscale value (must be within 0..1)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value for graphical operations.
* @param g value to process (must be within 0..1)
* @throws IOException if an I/O error occurs during processing
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float),759,768,"/**
* Applies a mask with a specified gray level.
* @param g gray level value (must be within 0..1)
* @throws IllegalArgumentException if gray level is out of bounds
* @throws IOException if an I/O error occurs during processing
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets the non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* Throws IllegalArgumentException if any parameter is out of range.
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking RGB color.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values.
* @param c Cyan component (0..1)
* @param m Magenta component (0..1)
* @param y Yellow component (0..1)
* @param k Black component (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values.
* @param c Cyan component (0.0 to 1.0)
* @param m Magenta component (0.0 to 1.0)
* @param y Yellow component (0.0 to 1.0)
* @param k Black component (0.0 to 1.0)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color with validation.
* @param c Cyan component (0..1)
* @param m Magenta component (0..1)
* @param y Yellow component (0..1)
* @param k Black component (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color with validation.
* @param c Cyan component (0-1)
* @param m Magenta component (0-1)
* @param y Yellow component (0-1)
* @param k Black component (0-1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float),877,886,"/**
 * Applies a gray mask with validation.
 * @param g gray level (must be within 0..1)
 * @throws IOException if an I/O error occurs during processing
 */","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float),877,886,"/**
* Masks a function with a given grayscale value.
* @param g grayscale value (must be within 0..1)
* @throws IOException if an I/O error occurs during processing
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float),877,886,"/**
* Validates and processes a grayscale value.
* @param g grayscale value to process (must be within 0..1)
* @throws IOException if an I/O error occurs during processing
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float),877,886,"/**
* Masks a function with a given grayscale value.
* @param g grayscale value (must be within 0..1)
* @throws IOException if an I/O error occurs during processing
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the graphics context.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDFormContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the graphics path.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPageContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the drawing.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPatternContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the document.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bézier curve.
* @param x1,y1 control point 1 coordinates
* @param x2,y2 control point 2 coordinates
* @param x3,y3 end point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bezier curve.
 * @param x1,y1 first control point coordinates
 * @param x2,y2 second control point coordinates
 * @param x3,y3 end point coordinates
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bezier curve.
* @param x1,y1 start control point coordinates
* @param x2,y2 end control point coordinates
* @param x3,y3 final point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bézier curve.
 * @param x1, y1 control point 1 coordinates
 * @param x2, y2 control point 2 coordinates
 * @param x3, y3 end point coordinates
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Draws a cubic Bezier curve.
* @param x2 control point 1 x-coordinate
* @param y2 control point 1 y-coordinate
* @param x3 control point 2 x-coordinate
* @param y3 control point 2 y-coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a cubic Bezier curve.
 * @param x2 control point x-coordinate
 * @param y2 control point y-coordinate
 * @param x3 end point x-coordinate
 * @param y3 end point y-coordinate
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a cubic Bezier curve.
 * @param x2 control point 1 X-coordinate
 * @param y2 control point 1 Y-coordinate
 * @param x3 control point 2 X-coordinate
 * @param y3 control point 2 Y-coordinate
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Draws a cubic Bézier curve.
* @param x2 control point X coordinate
* @param y2 control point Y coordinate
* @param x3 end point X coordinate
* @param y3 end point Y coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bezier curve.
 * @param x1 starting point X coordinate
 * @param y1 starting point Y coordinate
 * @param x3 end point X coordinate
 * @param y3 end point Y coordinate
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Draws a cubic Bezier curve.
* @param x1,y1 control point 1 coordinates
* @param x3,y3 end point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bezier curve.
 * @param x1 starting X coordinate
 * @param y1 starting Y coordinate
 * @param x3 ending X coordinate
 * @param y3 ending Y coordinate
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bézier curve.
 * @param x1 the x-coordinate of the first control point
 * @param y1 the y-coordinate of the first control point
 * @param x3 the x-coordinate of the second control point
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:moveTo(float,float)",995,1004,"/**
* Moves the graphics cursor to specified coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
* @throws IOException if an I/O error occurs
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the graphics cursor to specified coordinates.
 * @param x horizontal coordinate
 * @param y vertical coordinate
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the graphics cursor to specified coordinates.
 * @param x x-coordinate of the destination point
 * @param y y-coordinate of the destination point
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the graphics cursor to specified coordinates.
 * @param x horizontal coordinate
 * @param y vertical coordinate
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the endpoint
* @param y y-coordinate of the endpoint
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x destination X coordinate
* @param y destination Y coordinate
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the endpoint
* @param y y-coordinate of the endpoint
* @throws IOException if an I/O error occurs during drawing
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x x-coordinate of the endpoint
 * @param y y-coordinate of the endpoint
 * @throws IOException if an I/O error occurs
 */","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:stroke(),1031,1038,"/**
* Masks the current path.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDFormContentStream:stroke(),1031,1038,"/**
* Applies stroke to path, throws error in text mode.
* @throws IOException if I/O operation fails
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPageContentStream:stroke(),1031,1038,"/**
* Applies stroke to the current path.
* Throws exception if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:stroke(),1031,1038,"/**
* Executes stroke path operation.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws IllegalStateException if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws IllegalStateException if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws IllegalStateException if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws an exception if called within a text block.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fill(),1061,1068,"/**
* Applies non-zero fill operation.
* @throws IOException if an I/O error occurs
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDFormContentStream:fill(),1061,1068,"/**
* Masks area with non-zero pixels.
* Throws exception if in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPageContentStream:fill(),1061,1068,"/**
* Masks the current area with non-zero pixels.
* Throws an exception if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPatternContentStream:fill(),1061,1068,"/**
* Masks area with non-zero pixels.
* Throws exception if in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillEvenOdd(),1076,1083,"/**
* Masks content using FILL_EVEN_ODD operator.
* Throws exception if called in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillEvenOdd(),1076,1083,"/**
* Masks an area using even-odd rule.
* Throws exception if called in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillEvenOdd(),1076,1083,"/**
* Masks the image using even-odd rule.
* Throws exception if called during text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillEvenOdd(),1076,1083,"/**
* Masks shapes using even-odd rule.
* Throws exception if called in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStroke(),1093,1100,"/**
* Applies fill and stroke operation.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStroke(),1093,1100,"/**
* Applies fill and stroke operation.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStroke(),1093,1100,"/**
* Applies fill and stroke operation.
* Throws IllegalStateException if in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStroke(),1093,1100,"/**
* Applies fill and stroke operation.
* Throws exception if in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Masks the current path with even-odd rule and strokes it.
* Throws IllegalStateException if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Applies fill and stroke operations using even-odd rule.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Masks the current path.
* Throws an exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Applies fill and stroke using even-odd rule, throws error in text mode.
* @throws IOException if an I/O error occurs
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes path, fills and strokes it. Throws error in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Masks the current path and strokes it.
* Throws an exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes path, fills using non-zero winding rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills, and strokes the current path.
* Throws an exception if called within a text block.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Masks the current path.
* Throws an exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Executes CLOSE_FILL_EVEN_ODD_AND_STROKE operation.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Closes path, fills it using even-odd rule, and strokes it.
 * Throws exception if called in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Masks the current path.
* Throws an exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closePath(),1177,1184,"/**
* Closes the current path.
* Throws IllegalStateException if called in text mode.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDFormContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics mode.
* Throws an exception if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPageContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics mode.
* Throws IllegalStateException if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPatternContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics mode.
* Throws IllegalStateException if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clip(),1192,1202,"/**
 * Masks the current clipping path.
 * Throws an exception if called in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDFormContentStream:clip(),1192,1202,"/**
* Masks the current path and ends it.
* Throws an exception if called in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPageContentStream:clip(),1192,1202,"/**
* Masks the current path.
* Throws IllegalStateException if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPatternContentStream:clip(),1192,1202,"/**
* Masks the current path using non-zero winding rule.
* Throws exception if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clipEvenOdd(),1210,1220,"/**
* Masks the current path using even-odd rule.
* Throws IllegalStateException if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:clipEvenOdd(),1210,1220,"/**
* Masks the current path using even-odd rule.
* Throws exception if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:clipEvenOdd(),1210,1220,"/**
* Applies clipping using even-odd rule.
* Throws exception if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:clipEvenOdd(),1210,1220,"/**
 * Masks the current path using even-odd rule.
 * Throws exception if called in text mode.
 */","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width in graphics context.
* @param lineWidth desired width of the line
* @throws IOException if an I/O error occurs
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width for drawing operations.
 * @param lineWidth desired line width in float
 * @throws IOException if an I/O error occurs
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width for drawing operations.
 * @param lineWidth desired line width
 * @throws IOException if an I/O error occurs
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width for graphics operations.
 * @param lineWidth desired line width
 * @throws IOException if an I/O error occurs
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style (0, 1, or 2)
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style to apply (0, 1, or 2)
* @throws IOException if an I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle style of line join (0, 1, or 2)
* @throws IOException if an I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style identifier (0, 1, or 2)
* @throws IOException if an I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets line cap style.
* @param lineCapStyle valid cap style (0 to 2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets line cap style.
* @param lineCapStyle line cap style (0 to 2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle integer representing the cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle integer representing the cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern with given values and phase.
* @param pattern array of float values representing dash lengths
* @param phase offset for the start of the dash pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDFormContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern and phase.
* @param pattern array of dash lengths
* @param phase starting point of the dash pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPageContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern with given values and phase.
* @param pattern array of dash lengths
* @param phase starting point of the dash pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets line dash pattern with given values and phase.
 * @param pattern array of dash lengths
 * @param phase offset for the start of the pattern
 */","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit for rendering.
* @param miterLimit the maximum allowed ratio of miter length to line width
* @throws IOException if an I/O error occurs
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDFormContentStream:setMiterLimit(float),1300,1308,"/**
* Sets line miter limit.
* @param miterLimit the miter limit value
* @throws IOException if an I/O error occurs
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPageContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value, must be greater than 0
* @throws IOException if an I/O error occurs
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMiterLimit(float),1300,1308,"/**
 * Sets the line miter limit.
 * @param miterLimit maximum allowed ratio of the miter length to line width
 * @throws IOException if an I/O error occurs
 */","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * Throws IOException on error.
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF document.
 * @throws IOException if I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * Throws IOException if an I/O error occurs.
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Applies character spacing to text.
 * @param spacing the space between characters
 * @throws IOException if an I/O error occurs
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing in the document.
 * @param spacing the space between characters
 * @throws IOException if an I/O error occurs
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing and applies mask.
 * @param spacing value to set character spacing
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing.
 * @param spacing value to set character spacing
 * @throws IOException if an I/O error occurs
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing in text.
 * @param spacing value to set as word spacing
 * @throws IOException if an I/O error occurs
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing in text.
 * @param spacing the space between words
 * @throws IOException if an I/O error occurs
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing in text.
 * @param spacing value to set for word spacing
 * @throws IOException if an I/O error occurs
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing in text.
 * @param spacing the amount of space between words
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setHorizontalScaling(float),1635,1639,"/**
 * Applies horizontal scaling to text.
 * @param scale factor for horizontal scaling
 * @throws IOException if an I/O error occurs
 */","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDFormContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets text horizontal scaling.
* @param scale scaling factor to apply
* @throws IOException if an I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPageContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies text scaling and sets horizontal scaling.
* @param scale factor to apply
* @throws IOException if an I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPatternContentStream:setHorizontalScaling(float),1635,1639,"/**
 * Applies horizontal scaling to text.
 * @param scale factor for horizontal scaling
 * @throws IOException if an I/O error occurs
 */","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm rendering mode to apply
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDFormContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm rendering mode to apply
* @throws IOException if an I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPageContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Applies rendering mode settings.
* @param rm rendering mode configuration
* @throws IOException if an I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPatternContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm RenderingMode object specifying rendering settings
* @throws IOException if an I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextRise(float),1662,1666,"/**
 * Masks text with specified rise.
 * @param rise vertical offset for text masking
 * @throws IOException if an I/O error occurs
 */","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextRise(float),1662,1666,"/**
 * Masks text with specified rise.
 * @param rise vertical adjustment value
 * @throws IOException if an I/O error occurs
 */","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextRise(float),1662,1666,"/**
 * Sets text rise value.
 * @param rise the amount to raise the text
 * @throws IOException if an I/O error occurs
 */","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextRise(float),1662,1666,"/**
 * Adjusts text rise and sets operator name.
 * @param rise value to adjust text rise
 */","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getObjectOffset,"org.apache.pdfbox.pdfparser.COSParser:getObjectOffset(org.apache.pdfbox.cos.COSObjectKey,boolean)",498,523,"/**
 * Retrieves or sets the offset for a given COS object key.
 * @param objKey the object key to process
 * @param requireExistingNotCompressedObj flag to check if the object must exist and not be compressed
 * @return the offset or object stream number, or null if not found
 * @throws IOException if the object is required but not defined or compressed
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:checkXrefOffsets(),448,462,"/**
 * Masks PDF file by updating cross-reference table.
 * @throws IOException if I/O error occurs during processing
 */","* Check the XRef table by dereferencing all objects and fixing the offset if necessary.
     * 
     * @throws IOException if something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.File),174,180,"/**
 * Writes data to a file using FileOutputStream.
 * @param fileName File object representing the target file
 * @throws IOException if an I/O error occurs
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setHighValue,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setHighValue(int),322,325,"/**
 * Masks bits in an array using a specified value.
 * @param high value to mask with
 */","* Sets the highest value that is allowed. This cannot be higher than 255.
     * @param high the highest value for the lookup table",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPageNumber(int),166,169,"/**
 * Masks an array element at a specified page number.
 * @param pageNumber index of the page to mask
 */","* Set the page number for a remote destination. For an internal destination, call 
     * {@link #setPage(PDPage) setPage(PDPage page)}.
     *
     * @param pageNumber The page for a remote destination.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(java.lang.Object),217,237,"/**
* Removes an object from the list.
* @param o object to remove
* @return true if removed, false if not found
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(int),520,529,"/**
* Removes element at specified index.
* @param index position of the element to remove
* @return removed element
* @throws UnsupportedOperationException if list is filtered
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,clear,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:clear(),136,141,"/**
 * Calls m1 methods on map and actuals objects.
 */",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,remove,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:remove(java.lang.Object),117,122,"/**
* Calls two methods with the given key.
* @param key unique identifier for the operation
* @return result from actuals.m3(key)
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSArray),166,184,"/**
* Recursively checks if any child in the array demands parent update.
* @param array COSArray to check
* @return true if any child requires parent update, false otherwise
*/","* Collect all updates made to the given {@link COSArray} and it's contained structures.
     *
     * @param array The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSArray}´s elements changed. A {@link COSArray} shall always be
     * treated as a direct structure, that would require it´s parent to be updated instead.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState),82,85,"/**
 * Calls overloaded method with default value.
 * @param originDocumentState document state to process
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see #updated",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,dereferenceChild,org.apache.pdfbox.cos.COSUpdateState:dereferenceChild(org.apache.pdfbox.cos.COSBase),324,330,"/**
* Updates document state if child is COSUpdateInfo.
* @param child the COSBase object to be processed
*/","* This shall {@link #setOriginDocumentState(COSDocumentState, boolean)} for the dereferenced child,
     * initializing its {@link #originDocumentState}.
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo} and will never change
     * the child´s {@link #updated} state.
     * </p>
     *
     * @param child The child, that has been dereferenced.
     * @see #setOriginDocumentState(COSDocumentState, boolean)",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValueAsString(),223,227,"/**
 * Returns masked value from method m1.
 * @return Masked string value
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRow,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRow(),307,372,"/**
* Masks TIFF data based on compression type.
* @throws IOException if sum of run-lengths doesn't match scan line width
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRow,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRow(),99,127,"/**
 * Processes a row of data, toggling bits and updating row references.
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",608,617,"/**
* Masks and checks PDF permissions.
* @param ownerPassword owner's password
* @param user user's password
* @param owner owner's data
* @param permissions permission flags
* @param id document ID
* @param encRevision encryption revision level
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to encrypt metadata
* @return true if masking and check are successful, false otherwise
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a tensor patch from given points and colors.
 * @param points array of 2D points defining the patch
 * @param color 2D array representing colors for each point
 * @return Patch object created from points and colors
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,parse,"org.apache.pdfbox.pdmodel.common.function.type4.Parser:parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",44,48,"/**
 * Masks input using provided syntax handler.
 * @param input text to be masked
 * @param handler defines masking rules
 */","* Parses a Type 4 function and sends the syntactic elements to the given
     * syntax handler.
     * @param input the text source
     * @param handler the syntax handler",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptData,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",216,238,"/**
* Processes input stream with encryption/decryption.
* @param objectNumber unique identifier for the object
* @param genNumber generation number
* @param data input stream to process
* @param output output stream for processed data
* @param decrypt true if decryption is needed, false otherwise
* @throws IOException if an I/O error occurs
*/","* Encrypt or decrypt a set of data.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKey,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)",722,735,"/**
* Masks password based on encryption revision.
* @param password user's password
* @param o owner identifier
* @param u user identifier
* @param oe owner encryption data
* @param ue user encryption data
* @param permissions access permissions
* @param id document identifier
* @param encRevision encryption version
* @param keyLengthInBytes length of encryption key
* @param encryptMetadata flag to encrypt metadata
* @param isOwnerPassword indicates if password is owner's
* @return masked password bytes
* @throws IOException on encryption errors
*/","* Compute the encryption key.
     *
     * @param password The password to compute the encrypted key.
     * @param o The O entry of the encryption dictionary.
     * @param u The U entry of the encryption dictionary.
     * @param oe The OE entry of the encryption dictionary.
     * @param ue The UE entry of the encryption dictionary.
     * @param permissions The permissions for the document.
     * @param id The document id.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     * @param isOwnerPassword whether the password given is the owner password (for revision 6)
     *
     * @return The encrypted key bytes.
     *
     * @throws IOException If there is an error with encryption.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",1002,1019,"/**
* Applies encryption mask based on revision.
* @param password user's password
* @param user username
* @param owner owner name
* @param permissions access permissions
* @param id unique identifier
* @param encRevision encryption revision
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to encrypt metadata
* @return true if successful, false otherwise
* @throws IOException for unknown encryption revision
*/","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata.
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",399,464,"/**
* Retrieves FontBoxFont by format and PostScript name.
* @param format font format
* @param postScriptName PostScript name of the font
* @return FontBoxFont object or null if not found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
* Creates a Coons patch from given points and colors.
* @param points array of control points defining the patch boundary
* @param color  2D array representing color values at each point
* @return Patch object created using CoonsPatch constructor
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalize,org.apache.pdfbox.text.PDFTextStripper:normalize(java.util.List),1878,1894,"/**
 * Normalizes a list of line items into words with text positions.
 * @param line list of LineItem objects to process
 * @return List of WordWithTextPositions objects
 */","* Normalize the given list of TextPositions.
     * 
     * @param line list of TextPositions
     * @return a list of strings, one string for every word",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(org.apache.pdfbox.cos.COSString),701,708,"/**
* Converts COSString to Calendar.
* @param text input COSString object
* @return Calendar object or null if text is null
*/","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
 * Masks content using specified tag.
 * @param tag COSName representing the mask tag
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Applies content mask with specified tag.
* @param tag COSName representing the mask tag
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Masks content with specified tag.
* @param tag unique identifier for masking
* @throws IOException if I/O error occurs during processing
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Masks content with a given tag.
* @param tag COSName representing the mask tag
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Masks content with a tag and MCID.
* @param tag COSName representing the content tag
* @param mcid Marked content identifier, must be non-negative
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Masks content with a given tag and MCID.
* @param tag the COSName tag for marking
* @param mcid the marked content identifier, must be non-negative
* @throws IOException if an I/O error occurs during masking
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Masks content with a given tag and MCID.
* @param tag the COSName tag for masking
* @param mcid the marked-content identifier, must be non-negative
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Masks content with a given tag and MCID.
 * @param tag the COSName representing the tag for masking
 * @param mcid the Marked Content ID, must be non-negative
 * @throws IOException if an I/O error occurs during processing
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Masks content with specified tag.
* @param tag COSName representing the mask tag
* @throws IOException if an I/O error occurs
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
 * Masks content with specified tag.
 * @param tag COSName representing the mask tag
 * @throws IOException if an I/O error occurs
 */","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Masks content with specified tag.
* @param tag unique identifier for masking
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Applies content masking with specified tag.
* @param tag COSName representing the mask tag
* @throws IOException if an I/O error occurs during processing
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.cos.COSBase),160,222,"/**
* Writes a COSBase object to the output.
* @param o COSBase object to write
* @throws IOException if an I/O error occurs
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSString,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSString(java.io.OutputStream,org.apache.pdfbox.cos.COSString)",258,262,"/**
* Writes masked string to output stream.
* @param output target output stream
* @param cosString string to mask and write
*/","* Write the given {@link COSString} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosString The content, that shall be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextInternal,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextInternal(java.lang.String),276,325,"/**
 * Masks and outputs text using current font settings.
 * @param text the text to be masked and output
 * @throws IOException if an I/O error occurs
 */","* Outputs a string using the correct encoding and subsetting as required.
     *
     * @param text The Unicode text to show.
     * 
     * @throws IOException If an io exception occurs.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,org.apache.pdfbox.rendering.PageDrawer:<init>(org.apache.pdfbox.rendering.PageDrawerParameters),190,199,"/**
 * Initializes a PageDrawer with given parameters.
 * @param parameters configuration for drawing the page
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor.
     *
     * @param parameters Parameters for page drawing.
     * @throws IOException If there is an error loading properties from the file.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSString(),528,679,"/**
 * Parses a COS string from the source.
 * @return COSString object containing parsed string
 * @throws IOException if parsing fails
 */","* This will parse a PDF string.
     *
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:<init>(float,float)",31,34,"/**
 * Constructs a rectangle with specified width and height.
 * @param width  the width of the rectangle
 * @param height the height of the rectangle
 */","* Constructor for immutable rectangle.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getBBox,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getBBox(),153,156,"/**
 * Returns a PDRectangle instance from m1.
 * @return PDRectangle object
 */","* Returns the <code>BBox</code> entry (bounding box) for the
     * appearance stream form XObject.
     *
     * @return Bounding box for appearance stream form XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument),43,48,"/**
* Initializes a metadata object for a PDF document.
* @param document the PDF document to associate with the metadata
*/","* This will create a new PDMetadata object with the /Type and /Subtype entries for a document
     * level metadata object.
     *
     * @param document The document that the stream will be part of.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument),40,44,"/**
* Constructs a new embedded file in a PDF document.
* @param document the parent PDF document
*/",* {@inheritDoc},,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",125,130,"/**
* Initializes a PDXObject with a document and subtype.
* @param document the PDF document to associate with this object
* @param subtype the subtype of the XObject
*/","* Creates a new XObject of the given subtype for writing.
     * @param document The document in which to create the XObject.
     * @param subtype The subtype of the new XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,102,"/**
 * Constructs an image from a PDF document.
 * @param document the source PDF document
 */","* Creates an Image XObject in the given document. This constructor is for internal PDFBox use
     * and is not for PDF generation. Users who want to create images should look at {@link #createFromFileByExtension(File, PDDocument)
     * }.
     *
     * @param document the current document",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument),205,211,"/**
* Masks document with holder form.
* @param template original PDF document to mask
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument),251,258,"/**
* Masks a PDF document by creating an inner form stream.
* @param template the original PDF document to be masked
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument),290,296,"/**
* Creates an image form stream from a PDF document.
* @param template the source PDF document
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",94,97,"/**
* Constructs a PDStream from a document and input stream.
* @param doc PDDocument to associate with the stream
* @param input InputStream containing the stream data
* @throws IOException if an I/O error occurs
*/","* Constructor. Reads all data from the input stream and embeds it into the document. This
     * method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",108,111,"/**
* Initializes a PDStream with a document, input stream, and filter.
* @param doc PDDocument to associate the stream with
* @param input InputStream containing the stream data
* @param filter COSName representing the filter type
* @throws IOException if an I/O error occurs
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filter applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filter Filter to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)",122,125,"/**
 * Initializes a PDStream with document, input stream, and filters.
 * @param doc PDDocument to associate the stream with
 * @param input InputStream containing the stream data
 * @param filters COSArray of filter specifications
 * @throws IOException if an I/O error occurs
 */","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filters Filters to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",118,130,"/**
 * Constructs an PDImageXObject from an encoded stream.
 * @param document The PDDocument to add the image to.
 * @param encodedStream InputStream containing the encoded image data.
 * @param cosFilter COSBase representing the filter applied to the image data.
 * @param width Width of the image in pixels.
 * @param height Height of the image in pixels.
 * @param bitsPerComponent Number of bits per color component.
 * @param initColorSpace PDColorSpace defining the color space of the image.
 * @throws IOException If an I/O error occurs while processing the stream.
 */","* Creates an Image XObject in the given document using the given filtered stream. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param document the current document
     * @param encodedStream an encoded stream of image data
     * @param cosFilter the filter or a COSArray of filters
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @throws IOException if there is an error creating the XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,close,org.apache.pdfbox.cos.COSOutputStream:close(),104,153,"/**
* Processes input buffer through a series of filters.
* @throws IOException if an I/O error occurs during processing
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(),355,358,"/**
 * Constructs a new PDLayoutAttributeObject.
 * Initializes the owner to OWNER_LAYOUT.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(),78,81,"/**
* Constructs a PDListAttributeObject and sets its owner to OWNER_LIST.
*/",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(),71,74,"/**
 * Constructs a new PDPrintFieldAttributeObject with default owner.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(),57,60,"/**
 * Constructs a new PDTableAttributeObject with OWNER_TABLE as the owner.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isValidAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),297,313,"/**
* Checks if the given PDAppearanceEntry is valid.
* @param appearance the PDAppearanceEntry to validate
* @return true if valid, false otherwise
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,scanFonts,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:scanFonts(java.util.List),365,386,"/**
 * Processes files based on their extensions.
 * @param files list of File objects to process
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead),150,153,"/**
 * Constructs a COSParser with specified source.
 * @param source RandomAccessRead instance representing the PDF source
 * @throws IOException if an I/O error occurs
 */","* Default constructor.
     *
     * @param source input representing the pdf.
     * 
     * @throws IOException if something went wrong",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",74,78,"/**
* Constructs a PDFParser with specified parameters.
* @param source input stream for the PDF file
* @param decryptionPassword password for decrypting the PDF
* @param keyStore keystore for secure access
* @param alias alias for the key in the keystore
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security 
     * @param alias alias to be used for decryption when using public key security
     *
     * @throws IOException If something went wrong.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),45,48,"/**
* Initializes a new content stream for the given appearance.
* @param appearance PDF appearance stream to modify
* @throws IOException if an I/O error occurs
*/","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to write to.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDFormContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),35,38,"/**
* Initializes content stream for a PDF form.
* @param form PDF form object to write to
* @throws IOException if I/O error occurs
*/","* Create a new form XObject content stream.
     *
     * @param form The form XObject stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",209,212,"/**
* Initializes content stream for an appearance.
* @param doc PDF document containing the appearance
* @param appearance appearance stream to write to
* @throws IOException if an I/O error occurs
*/","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the page is part of.
     * @param appearance The appearance stream to write to.
     * @throws IOException If there is an error writing to the page contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectAppearanceStreams,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",354,374,"/**
 * Injects appearance streams into PDF forms.
 * @param holderFormStream stream for the holder form
 * @param innerFormStream stream for the inner form
 * @param imageFormStream stream for the image form
 * @param imageFormName name of the image form
 * @param imageName name of the image
 * @param innerFormName name of the inner form
 * @param properties visual sign properties
 * @throws IOException if I/O error occurs
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Applies a transformation matrix to the current text state.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Applies a transformation matrix to the current text state.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text matrix for the given matrix.
* @param matrix transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
 * Sets the text matrix for text operations.
 * @param matrix transformation matrix to apply
 * @throws IOException if an I/O error occurs
 */","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a transformation mask to the matrix.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDFormContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a mask to the given matrix.
* @param matrix the matrix to apply the mask to
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPageContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a mask to the given matrix.
* @param matrix the matrix to apply the mask to
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPatternContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Masks a given matrix.
* @param matrix the Matrix to be masked
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,curveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:curveTo(double,double,double,double,double,double)",1067,1074,"/**
 * Calls m1 for three points and outputs their coordinates.
 * @param ax, ay x and y coordinates of first point
 * @param bx, by x and y coordinates of second point
 * @param cx, cy x and y coordinates of third point
 * @throws IOException if output operation fails
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",357,368,"/**
* Draws a masked arrow on the content stream.
* @param cs PDAppearanceContentStream to draw on
* @param x starting X coordinate
* @param y starting Y coordinate
* @param len length of the arrow
*/","* Add the two arms of a horizontal arrow.
     * 
     * @param cs Content stream
     * @param x
     * @param y
     * @param len The arm length. Positive goes to the right, negative goes to the left.
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawShape,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawShape(float,boolean,boolean)",262,288,"/**
* Sets drawing mask based on line width and fill/stroke options.
* @param lineWidth width of the line
* @param hasStroke true if stroke is enabled
* @param hasFill true if fill is enabled
* @throws IOException if an I/O error occurs
*/","* Draw a shape.
     *
     * <p>
     * Dependent on the lineWidth and whether or not there is a background to be generated there are
     * different commands to be used for draw a shape.
     *
     * @param lineWidth the line width of the path.
     * @param hasStroke shall there be a stroking color.
     * @param hasFill shall there be a fill color.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,finish,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:finish(),1076,1091,"/**
* Adjusts bounding box dimensions and writes output if started.
* @throws IOException if an I/O error occurs during output
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawDiamond,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",380,387,"/**
* Draws a masked circle on the content stream.
* @param cs PDAppearanceContentStream object for drawing
* @param x x-coordinate of circle center
* @param y y-coordinate of circle center
* @param r radius of the circle
*/","* Add a square diamond shape (corner on top) to the path.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius (to a corner)
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",399,409,"/**
* Draws a circle on the given content stream.
* @param cs content stream to draw on
* @param x center x-coordinate
* @param y center y-coordinate
* @param r radius of the circle
*/","* Add a circle shape to the path in clockwise direction.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     * 
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle2,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",422,432,"/**
* Draws a circle on the canvas.
* @param cs content stream for drawing
* @param x center x-coordinate
* @param y center y-coordinate
* @param r radius of the circle
*/","* Add a circle shape to the path in counterclockwise direction. You'll need this e.g. when
     * drawing a doughnut shape. See ""Nonzero Winding Number Rule"" for more information.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     *
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPaperclip,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPaperclip(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),100,130,"/**
* Draws a masked shape on the PDF using geometric paths.
* @param contentStream stream for drawing on PDF
*/","* Draw a paperclip. Shape is from
     * <a href=""https://raw.githubusercontent.com/Iconscout/unicons/master/svg/line/paperclip.svg"">Iconscout</a>
     * (Apache licensed).
     *
     * @param contentStream
     * @throws IOException",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,addPath,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",617,667,"/**
 * Draws a masked path on the content stream.
 * @param contentStream PDF appearance content stream
 * @param path GeneralPath to be drawn
 * @throws IOException if an I/O error occurs
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidthOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidthOnDemand(float),239,248,"/**
* Sets line width mask.
* @param lineWidth desired line width
*/","* Sets the line width. The command is only emitted if the lineWidth is
     * different to 1.
     * 
     * @param lineWidth the line width of the path.
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setLineWidth(float)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,beginOutput,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:beginOutput(double,double)",1010,1019,"/**
* Sets bounding box to a single point and marks output start.
* @param x X coordinate of the point
* @param y Y coordinate of the point
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.lang.String),189,192,"/**
 * Calls overloaded method with File object.
 * @param fileName path to the file
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSBase),83,103,"/**
 * Recursively checks a PDF object.
 * @param base the PDF object to check
 * @return true if condition met, false otherwise
 */","* Collect all updates made to the given {@link COSBase} and it's contained structures.<br>
     * This shall forward all {@link COSUpdateInfo} objects to the proper specialized collection methods.
     *
     * @param base The {@link COSBase} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSBase} represents a direct child structure, that would require it´s
     * parent to be updated instead.
     * @see #collect(COSDictionary)
     * @see #collect(COSArray)
     * @see #collect(COSObject)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setTrailer,org.apache.pdfbox.cos.COSDocument:setTrailer(org.apache.pdfbox.cos.COSDictionary),395,399,"/**
* Updates document trailer with new data.
* @param newTrailer dictionary containing updated trailer information
*/","* // MIT added, maybe this should not be supported as trailer is a persistence construct.
     * This will set the document trailer.
     *
     * @param newTrailer the document trailer dictionary",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSBase),255,262,"/**
 * Recursively calls itself and updates document state.
 * @param child COSBase object to process
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given child, initializing it´s {@link #updated} state
     * and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param child The child that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(java.lang.Iterable),297,311,"/**
 * Processes a list of COSBase objects, updating COSUpdateInfo instances.
 * @param children iterable collection of COSBase objects
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,getObject,org.apache.pdfbox.cos.COSObject:getObject(),109,130,"/**
 * Dereferences and returns the base object.
 * @return COSBase object or null if not found
 */","* This will get the object that this object encapsulates.
     *
     * @return The encapsulated object.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fetch,org.apache.pdfbox.filter.CCITTFaxDecoderStream:fetch(),126,150,"/**
 * Reads and decodes the next segment of data.
 * Handles exceptions related to malformed streams or end-of-file conditions.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int),78,87,"/**
* Adds a byte to the buffer and processes it if full.
* @param b the byte to add
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",589,606,"/**
* Applies encryption mask based on revision.
* @param ownerPassword password for the owner
* @param user user data
* @param owner owner data
* @param permissions access permissions
* @param id unique identifier
* @param encRevision encryption revision
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to encrypt metadata
* @return true if successful, false otherwise
* @throws IOException for unknown encryption revision
*/","* Check for owner password.
     *
     * @param ownerPassword The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parse,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parse(java.lang.CharSequence),55,60,"/**
* Parses text into an instruction sequence.
* @param text input text to be parsed
* @return InstructionSequence representing the parsed instructions
*/","* Parses the given text into an instruction sequence representing a Type 4 function
     * that can be executed.
     * @param text the Type 4 function text
     * @return the instruction sequence",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",566,583,"/**
* Masks data in a COSStream.
* @param stream the COSStream to process
* @param objNum object number of the stream
* @param genNum generation number of the stream
*/","* This will encrypt a stream, but not the dictionary as the dictionary is
     * encrypted by visitFromString() in COSWriter and we don't want to encrypt
     * it twice.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptString(org.apache.pdfbox.cos.COSString,long,long)",632,653,"/**
* Applies a mask to a COSString based on encryption parameters.
* @param string the input COSString to be masked
* @param objNum object number for decryption context
* @param genNum generation number for decryption context
* @return COSBase containing the masked or original string
*/","* This will decrypt a string.
     *
     * @param string the string to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     * 
     * @return the decrypted COSString",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptString(org.apache.pdfbox.cos.COSString,long,int)",666,672,"/**
* Masks a string using object number and generation number.
* @param string input COSString to be masked
* @param objNum object number for masking
* @param genNum generation number for masking
* @return COSBase containing the masked string
* @throws IOException if an I/O error occurs during processing
*/","* This will encrypt a string.
     *
     * @param string the string to encrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @return the encrypted COSString
     * 
     * @throws IOException If an error occurs writing the new string.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1075,1089,"/**
 * Encrypts data with specified parameters.
 * @param password user's password
 * @param user user data bytes
 * @param owner owner data bytes
 * @param permissions access permissions
 * @param id unique identifier bytes
 * @param encRevision encryption revision
 * @param keyLengthInBytes length of encryption key in bytes
 * @param encryptMetadata flag to encrypt metadata
 * @return true if encryption successful, false otherwise
 * @throws IOException if an I/O error occurs
 */","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFontBoxFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFontBoxFont(java.lang.String),371,392,"/**
* Loads font by PostScript name.
* @param postScriptName the font's PostScript name
* @return FontBoxFont object or null if not found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePage,org.apache.pdfbox.text.PDFTextStripper:writePage(),495,728,"/**
* Processes text positions to organize them into lines.
* Handles sorting, spacing, and page layout calculations.
*/","* This will print the text of the processed page to ""output"". It will estimate, based on the coordinates of the
     * text, where newlines and word spacings should be placed. The text will be sorted only if that feature was
     * enabled.
     *
     * @throws IOException If there is an error writing the text.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.cos.COSBase),70,73,"/**
 * Masks a COSBase object by calling another method.
 * @param base the COSBase object to be masked
 */","* Writes a single operand token.
     *
     * @param base The operand to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes an array of Strings and Floats, calling specific methods based on type.
* @param textWithPositioningArray array containing Strings and Floats
* @throws IllegalArgumentException if array contains unsupported types
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showText(java.lang.String),262,267,"/**
* Masks text by processing it through three methods.
* @param text the input string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createPageDrawer,org.apache.pdfbox.rendering.PDFRenderer:createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters),526,531,"/**
* Creates and configures a PageDrawer.
* @param parameters configuration settings for the PageDrawer
* @return configured PageDrawer instance
* @throws IOException if an I/O error occurs during setup
*/","* Returns a new PageDrawer instance, using the given parameters. May be overridden.
     * 
     * @param parameters parameters to be used when creating the PageDrawer instance
     * @return a new PageDrawer instance
     * 
     * @throws IOException id the PageDrawer instance could not be created",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,103,"/**
 * Creates a new PDFormXObject from a given PDDocument.
 * @param document the PDF document to associate with this form object
 */","* Creates a Form Image XObject for writing, in the given document.
     * @param document The current document",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,"org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",59,64,"/**
* Initializes metadata for a PDF document.
* @param doc the PDDocument to associate with the metadata
* @param str input stream containing metadata content
* @throws IOException if an I/O error occurs
*/","* Constructor. Reads all data from the input stream and embeds it into the document, this will
     * close the InputStream. The /Type and /Subtype entries for a document level metadata object
     * will be created.
     *
     * @param doc The document that will hold the stream.
     * @param str The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",57,61,"/**
* Creates a new embedded file in a PDF document.
* @param doc the PDF document to add the file to
* @param str input stream containing the file data
* @throws IOException if an I/O error occurs
*/",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",66,70,"/**
 * Creates a new embedded file in a PDF document.
 * @param doc the parent PDF document
 * @param input the input stream for the file content
 * @param filter the filter name for encoding
 * @throws IOException if an I/O error occurs
 */",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,configureOutputProfile,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",108,115,"/**
* Creates a PDStream with ICC color profile.
* @param doc PDDocument to add the stream to
* @param colorProfile input stream of the color profile
* @return PDStream containing the ICC profile
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createJPEG,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",305,328,"/**
* Creates a PDImageXObject with optional mask from BufferedImage.
* @param document PDDocument to add the image to
* @param image source BufferedImage for conversion
* @param quality JPEG compression quality (0-1)
* @param dpi resolution in dots per inch
* @return PDImageXObject representing the image
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",243,256,"/**
* Creates a masked image from byte array.
* @param document PDF document
* @param byteArray raw image data
* @param width image width
* @param height image height
* @param bitsPerComponent color depth per component
* @param initColorSpace initial color space
* @return PDImageXObject with applied mask
*/","* Create a PDImageXObject using the Flate filter.
     * 
     * @param document The document.
     * @param byteArray array with data.
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @return the newly created PDImageXObject with the data compressed.
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(java.lang.String),64,67,"/**
 * Constructs a PDExportFormatAttributeObject with the specified owner.
 * @param owner the owner of the attribute object
 */","* Default constructor.
     * 
     * @param owner the owner of the attributes",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<init>(org.apache.pdfbox.pdmodel.font.FontCache),323,363,"/**
 * Initializes a FileSystemFontProvider with a given FontCache.
 * Scans local system for font files, loads or builds cache.
 * @param cache FontCache to store font information
 */",* Constructor.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,<init>,org.apache.pdfbox.pdfparser.FDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),36,39,"/**
 * Initializes a new FDFParser instance.
 * @param source RandomAccessRead object containing the FDF data
 * @throws IOException if an I/O error occurs
 */","* Constructs parser for given file using memory buffer.
     * 
     * @param source the source of the pdf to be parsed
     * 
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",58,61,"/**
 * Initializes a PDF parser with a source and decryption password.
 * @param source RandomAccessRead object representing the PDF file
 * @param decryptionPassword password for decrypting the PDF
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPushPin,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPushPin(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),132,183,"/**
 * Draws a masked graphical element on the PDF page.
 * @param contentStream the content stream to draw on
 * @throws IOException if an I/O error occurs
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawGraph,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawGraph(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),185,271,"/**
* Applies a mask to the PDF content stream.
* @param contentStream the PDAppearanceContentStream to apply the mask to
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawTag,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawTag(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),273,323,"/**
* Applies a mask effect to the given PDF content stream.
* @param contentStream the PDF content stream to modify
* @throws IOException if an I/O error occurs
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawStyle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",298,345,"/**
 * Draws a line end style.
 * @param style line end style type
 * @param cs content stream to draw on
 * @param x x-coordinate of the start point
 * @param y y-coordinate of the start point
 * @param width line width
 * @param hasStroke true if stroke is applied
 * @param hasBackground true if background is filled
 * @param ending true if it's the end of the line
 * @throws IOException on I/O error
 */","* Draw a line ending style.
     * 
     * @param style
     * @param cs
     * @param x
     * @param y
     * @param width
     * @param hasStroke
     * @param hasBackground
     * @param ending false if left, true if right of an imagined horizontal line (important for
     * arrows).
     *
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(double,double)",1034,1046,"/**
* Handles output based on start status.
* @param x first coordinate
* @param y second coordinate
* @throws IOException if an I/O error occurs
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(double,double)",1053,1065,"/**
* Handles output based on start status.
* @param x first coordinate value
* @param y second coordinate value
* @throws IOException if an I/O error occurs during processing
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSDictionary),112,157,"/**
* Recursively updates dictionary and its entries.
* @param dictionary the COSDictionary to update
* @return true if child demands parent update, otherwise false
*/","* Collect all updates made to the given {@link COSDictionary} and it's contained structures.
     *
     * @param dictionary The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSDictionary} represents a direct child structure, that would
     * require it´s parent to be updated instead.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,getObjects,org.apache.pdfbox.cos.COSIncrement:getObjects(),337,345,"/**
* Initializes and returns a set of COSBase objects.
* @return Set of COSBase objects
*/","* Returns all indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.<br>
     * Calling this method will cause the increment to be initialized.
     *
     * @return All indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.
     * @see #objects",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.cos.COSBase),83,97,"/**
 * Processes a PDF object, wrapping it in COSObject if conditions are met.
 * @param object the PDF object to process
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,"org.apache.pdfbox.cos.COSArray:add(int,org.apache.pdfbox.cos.COSBase)",121,135,"/**
 * Processes and stores a COSBase object.
 * @param i index for storage
 * @param object the COSBase object to process
 */","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param object The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.cos.COSBase)",220,234,"/**
* Handles object insertion and notification.
* @param index position in the collection
* @param object COSBase object to be processed
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",198,219,"/**
 * Adds or updates a key-value pair in the dictionary.
 * @param key unique identifier for the value
 * @param value data to be stored, may be null
 */","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(java.util.Collection),175,181,"/**
* Processes a list of COSBase objects.
* @param objectsList collection of COSBase objects to process
*/","* This will add an object to the array.
     *
     * @param objectsList The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,"org.apache.pdfbox.cos.COSArray:addAll(int,java.util.Collection)",206,212,"/**
* Executes operations on object list based on index.
* @param i index for operation
* @param objectList collection of COSBase objects
*/","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param objectList The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSArray),278,281,"/**
 * Calls overloaded method with iterable conversion.
 * @param children array of COSBase objects
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getObject,org.apache.pdfbox.cos.COSArray:getObject(int),272,284,"/**
* Retrieves an object by index, resolving COSObjects.
* @param index the index of the object to retrieve
* @return resolved COSBase object or null if it's a COSNull
*/","* This will get an object from the array.  This will dereference the object.
     * If the object is COSNull then null will be returned.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeObject,org.apache.pdfbox.cos.COSArray:removeObject(org.apache.pdfbox.cos.COSBase),492,511,"/**
* Removes object from internal structure.
* @param o object to remove
* @return true if object was removed, false otherwise
*/","* This will remove an element from the array.
     * This method will also remove a reference to the object.
     *
     * @param o The object to remove.
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOfObject,org.apache.pdfbox.cos.COSArray:indexOfObject(org.apache.pdfbox.cos.COSBase),566,589,"/**
 * Searches for an object in a collection.
 * @param object the object to search for
 * @return index of the object if found, otherwise -1
 */","* This will return the index of the entry or -1 if it is not found.
     * This method will also find references to indirect objects.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsValue,org.apache.pdfbox.cos.COSDictionary:containsValue(java.lang.Object),86,94,"/**
* Checks if the collection contains a value or its wrapped object.
* @param value the value to check
* @return true if value or its wrapped object is present, false otherwise
*/","* @see java.util.Map#containsValue(java.lang.Object)
     *
     * @param value The value to find in the map.
     *
     * @return true if the map contains this value.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getKeyForValue,org.apache.pdfbox.cos.COSDictionary:getKeyForValue(java.lang.Object),102,115,"/**
 * Searches for a COSName based on the provided value.
 * @param value the value to search for
 * @return COSName if found, otherwise null
 */","* Search in the map for the value that matches the parameter and return the first key that maps to that value.
     *
     * @param value The value to search for in the map.
     * @return The key for the value in the map or null if it does not exist.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName),178,190,"/**
 * Retrieves and processes an item by key.
 * @param key the key to look up in items
 * @return processed COSBase object or null if not found
 */","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryString,"org.apache.pdfbox.cos.COSDictionary:getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",1357,1412,"/**
 * Recursively converts a PDF object to a string representation.
 * @param base the PDF object to convert
 * @param objs list of objects for tracking
 * @return string representation of the PDF object
 * @throws IOException if an I/O error occurs
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSDictionary:getIndirectObjectKeys(java.util.Collection),1435,1485,"/**
* Processes a collection of COSObjectKeys, updating indirect objects.
* @param indirectObjects the collection of keys to process
*/","* Collects all indirect objects numbers within this dictionary and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getLinearizedDictionary,org.apache.pdfbox.cos.COSDocument:getLinearizedDictionary(),207,230,"/**
 * Retrieves and returns the first COSDictionary with a LINEARIZED key.
 * @return COSDictionary containing LINEARIZED or null if not found
 */","* Get the dictionary containing the linearization information if the pdf is linearized.
     * 
     * @return the dictionary containing the linearization information",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,close,org.apache.pdfbox.cos.COSDocument:close(),440,486,"/**
* Masks streams and sets the object as closed.
* Throws IOException if any stream processing fails.
*/","* This will close all storage and delete the tmp files.
     *
     * @throws IOException If there is an error close resources.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSObject),193,231,"/**
* Processes COSObject for updates.
* @param object the COSObject to process
* @return always returns false
*/","* Collect all updates made to the given {@link COSObject} and it's contained structures.
     *
     * @param object The {@link COSObject} updates shall be collected for.
     * @return Always returns {@code false}. {@link COSObject}s by definition are indirect and shall never cause a
     * parent structure to be updated.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,accept,org.apache.pdfbox.cos.COSObject:accept(org.apache.pdfbox.cos.ICOSVisitor),160,172,"/**
* Accepts a visitor to process the current COSBase object.
* @param visitor ICOSVisitor instance to visit the COSBase object
* @throws IOException if an I/O error occurs during processing
*/","* visitor pattern double dispatch method.
     *
     * @param visitor The object to notify when visiting this object.
     * @throws IOException If an error occurs while visiting this object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createContentStreamList,org.apache.pdfbox.multipdf.Overlay:createContentStreamList(org.apache.pdfbox.cos.COSBase),360,388,"/**
 * Recursively retrieves COSStream objects from given COSBase.
 * @param contents base object containing streams or arrays of streams
 * @return list of COSStream objects
 * @throws IOException if unknown content type is encountered
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,hasSelfReference,"org.apache.pdfbox.multipdf.PDFCloneUtility:hasSelfReference(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",244,258,"/**
* Checks if a COSBase value references its parent.
* @param parent the parent COSBase object
* @param value the COSBase value to check
* @return true if value references parent, false otherwise
*/","* Check whether an element (of an array or a dictionary) points to its parent.
     *
     * @param parent COSArray or COSDictionary
     * @param value an element",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getLength,org.apache.pdfbox.pdfparser.COSParser:getLength(org.apache.pdfbox.cos.COSBase),663,697,"/**
* Retrieves a COSNumber from the provided COSBase object.
* @param lengthBaseObj base object containing the length information
* @return COSNumber representing the length or null if not applicable
* @throws IOException if the object type is incorrect or content is missing
*/",* Returns length value referred to or defined in given object.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.NormalXReference:<init>(long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",47,62,"/**
 * Constructs a NormalXReference.
 * @param byteOffset offset in the PDF file
 * @param key unique object key
 * @param object associated COSBase object
 */","* Prepares a normal reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param byteOffset The byte offset of the {@link COSObject} in the PDF file.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,prepareIncrement,org.apache.pdfbox.pdfwriter.COSWriter:prepareIncrement(),319,338,"/**
 * Masks objects in a PDF document, excluding numbers.
 * Iterates through document keys and processes non-numeric objects.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addObjectToWrite,org.apache.pdfbox.pdfwriter.COSWriter:addObjectToWrite(org.apache.pdfbox.cos.COSBase),535,573,"/**
 * Adds an object to the list of objects to write, handling COSObject references.
 * @param object the COSBase object to process
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getObjectKey,org.apache.pdfbox.pdfwriter.COSWriter:getObjectKey(org.apache.pdfbox.cos.COSBase),1067,1106,"/**
 * Generates or retrieves a COSObjectKey for the given COSBase.
 * @param obj the COSBase object to process
 * @return the associated COSObjectKey
 */","* This will get the object key for the object.
     *
     * @param obj The object to get the key for.
     *
     * @return The object key for the object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getKey(org.apache.pdfbox.cos.COSBase),93,105,"/**
 * Retrieves a COSObjectKey for the given COSBase object.
 * @param object the COSBase object to process
 * @return COSObjectKey associated with the object, or newly created if not found
 */","* Returns the {@link COSObjectKey} for a given registered {@link COSBase}. Returns null if such an object is not
     * registered.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} shall be determined for.
     * @return key The {@link COSObjectKey}, that matches the registered {@link COSBase}, or null if such an object is
     * not registered.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSBase),137,142,"/**
* Checks if an object is in the pool or a masked COSObject.
* @param object the object to check
* @return true if object is in pool or a masked COSObject, false otherwise
*/","* Returns true, if the given {@link COSBase} is a registered object of this pool.
     *
     * @param object The {@link COSBase} that shall be checked.
     * @return True, if such a {@link COSBase} is registered in this pool.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,prepareStreamObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:prepareStreamObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",81,89,"/**
* Masks a PDF object with given key.
* @param key unique identifier for the object
* @param object the PDF object to be masked
*/","* Prepares the given {@link COSObject} to be written to this object stream, using the given {@link COSObjectKey} as
     * it's ID for indirect references.
     *
     * @param key The {@link COSObjectKey}, that shall be used for indirect references to the {@link COSObject}.
     * @param object The {@link COSObject}, that shall be written to this object stream.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,createFromCOSObject,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",244,264,"/**
* Retrieves a color space from resources or creates one.
* @param colorSpace COSObject representing the color space
* @param resources PDResources containing resource cache
* @return PDColorSpace object
* @throws IOException if an I/O error occurs
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,toDictionary,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:toDictionary(org.apache.pdfbox.cos.COSBase),348,364,"/**
 * Retrieves a COSDictionary from the given COSBase object.
 * @param o input COSBase object
 * @return COSDictionary if found, otherwise null
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(),427,442,"/**
* Returns the next byte from the decoded data.
* @return next byte or 0 if no more data
* @throws IOException if an I/O error occurs
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(byte[],int,int)",444,465,"/**
 * Masks bytes in the input array.
 * @param b byte array to process
 * @param off starting offset in the array
 * @param len number of bytes to mask
 * @return number of masked bytes
 * @throws IOException if an I/O error occurs
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,skip,org.apache.pdfbox.filter.CCITTFaxDecoderStream:skip(long),467,485,"/**
 * Masks and processes data from a buffer.
 * @param n number of bytes to process
 * @return number of bytes skipped or -1 if error
 * @throws IOException if an I/O error occurs
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1107,1113,"/**
* Encrypts data with given parameters.
* @param password encryption password
* @param user user identifier
* @param owner owner identifier
* @param permissions access permissions
* @param id unique identifier
* @param encRevision encryption revision
* @param keyLengthInBytes key length in bytes
* @param encryptMetadata flag to encrypt metadata
* @return true if successful, false otherwise
* @throws IOException on I/O errors
*/","* Check for owner password.
     *
     * @param password The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,writePage,org.apache.pdfbox.text.PDFTextStripperByArea:writePage(),155,164,"/**
* Processes regions by fetching character lists and text outputs.
* Throws IOException if an I/O error occurs.
*/","* This will print the processed page text to the output stream.
     *
     * @throws IOException If there is an error writing the text.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes an array of text and float objects.
* @param textWithPositioningArray array containing strings and floats
* @throws IOException if an I/O error occurs
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDFormContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of text and positioning data.
 * @param textWithPositioningArray array containing String and Float objects
 * @throws IOException if I/O error occurs during processing
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPageContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes an array of text and positioning data.
* @param textWithPositioningArray array containing Strings and Floats
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPatternContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of text and positioning data.
 * @param textWithPositioningArray array containing Strings and Floats
 * @throws IllegalArgumentException if array contains unsupported types
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showText(java.lang.String),262,267,"/**
 * Masks text by processing and showing it.
 * @param text input string to be masked
 * @throws IOException if an I/O error occurs during processing
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDFormContentStream:showText(java.lang.String),262,267,"/**
* Masks text by processing it through three methods.
* @param text input string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPageContentStream:showText(java.lang.String),262,267,"/**
 * Masks and processes input text.
 * @param text string to be masked and processed
 * @throws IOException if an I/O error occurs
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPatternContentStream:showText(java.lang.String),262,267,"/**
* Masks input text by processing it through three methods.
* @param text the string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.PDDocument),56,60,"/**
 * Creates a new transparency group in a PDF document.
 * @param document the PDDocument to add the group to
 */","* Creates a Transparency Group for writing, in the given document.
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),48,51,"/**
* Initializes a new PDF appearance stream.
* @param document the PDF document to associate with this stream
*/","* Creates a Form Image XObject for writing, in the given document.
     * 
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",274,278,"/**
* Creates a masked image from a given BufferedImage.
* @param document PDDocument to add the image to
* @param image source BufferedImage for masking
* @param quality compression quality (0.0-1.0)
* @param dpi resolution in dots per inch
* @return PDImageXObject representing the masked image
* @throws IOException if an I/O error occurs
*/","* Creates a new JPEG Image XObject from a BufferedImage, a given quality and dpi metadata.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @param dpi the desired dpi (resolution) value of the JPEG to be stored in metadata. This
     * value has no influence on image content or size.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromGrayImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",136,162,"/**
* Creates a masked image from a BufferedImage.
* @param image source BufferedImage to mask
* @param document PDDocument for the image output
* @return PDImageXObject with applied mask
* @throws IOException if an I/O error occurs
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",164,229,"/**
 * Converts a BufferedImage to a PDF image with transparency handling.
 * @param image source image
 * @param document PDF document
 * @return PDImageXObject representing the PDF image
 * @throws IOException if an I/O error occurs
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),45,48,"/**
 * Initializes PDF parser with source and default password.
 * @param source file or stream containing PDF data
 */","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source source representing the pdf.
     * @throws IOException If something went wrong.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,outputCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",475,494,"/**
 * Processes a template array of points.
 * @param template array of Point2D.Double objects
 * @param x horizontal offset
 * @param y vertical offset
 * @throws IOException if an I/O error occurs
 */","* Writes the curl template points to the output and applies translation (x, y).",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArcSegment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",639,700,"/**
 * Calculates and adds points for a Bezier curve arc.
 * @param startAng starting angle in radians
 * @param endAng ending angle in radians
 * @param cx x-coordinate of the center
 * @param cy y-coordinate of the center
 * @param rx radius along the x-axis
 * @param ry radius along the y-axis
 * @param out list to store resulting points
 * @param addMoveTo whether to add a move-to command
 * @throws IOException if an I/O error occurs
 */","* Creates a single Bézier curve that represents a section of an elliptical
     * arc. The sweep angle of the section must not be larger than 90 degrees.
     * If argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(java.awt.geom.Point2D$Double),1029,1032,"/**
 * Calls overloaded method with point coordinates.
 * @param p Point2D.Double object representing coordinates
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(java.awt.geom.Point2D$Double),1048,1051,"/**
 * Calls overloaded method m1 with x and y coordinates.
 * @param p Point2D.Double object containing coordinates
 * @throws IOException if an I/O error occurs
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,iterator,org.apache.pdfbox.cos.COSIncrement:iterator(),352,356,"/**
 * Returns an iterator over COSBase elements.
 * @return Iterator of COSBase objects
 */","* Return an iterator for the determined {@link #objects} contained in this {@link COSIncrement}.
     *
     * @return An iterator for the determined {@link #objects} contained in this {@link COSIncrement}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.pdmodel.common.COSObjectable),104,112,"/**
 * Processes a COSObjectable by calling its m1 method and passing the result to another m2 method.
 * @param object the COSObjectable to process
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,"org.apache.pdfbox.cos.COSArray:growToSize(int,org.apache.pdfbox.cos.COSBase)",611,620,"/**
* Masks an object by applying a specified size.
* @param size the mask size to apply
* @param object the COSBase object to be masked
*/","* This will add the object until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.
     * @param object The object to fill the array with.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setFloatArray,org.apache.pdfbox.cos.COSArray:setFloatArray(float[]),655,662,"/**
* Applies masking to an array of float values.
* @param value array of float values to be masked
*/","* Clear the current contents of the COSArray and set it with the float[].
     *
     * @param value The new value of the float array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSArray,org.apache.pdfbox.pdfparser.BaseParser:parseCOSArray(),755,822,"/**
 * Parses a COSArray from the source, handling object keys and resolving objects.
 * @return COSArray containing parsed elements or null if corrupted
 * @throws IOException on input/output errors
 */","* This will parse a PDF array object.
     *
     * @return The parsed PDF array.
     *
     * @throws IOException If there is an error parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getStream,org.apache.pdfbox.pdfparser.PDFXRefStream:getStream(),67,116,"/**
* Creates a COSStream for XRef with specified parameters.
* @throws IOException if an I/O error occurs
* @return the created COSStream
*/","* Returns the stream of the XRef.
     * @return the XRef stream
     * @throws IOException if something went wrong",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,initParserValues,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:initParserValues(org.apache.pdfbox.cos.COSStream),66,102,"/**
* Parses and validates the /W and /INDEX arrays in a PDF Xref stream.
* @param stream COSStream containing the Xref data
* @throws IOException if required arrays are missing or invalid
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",118,127,"/**
* Initializes a COSArrayList with an object and its associated COSBase.
* @param actualObject the actual Java object to be stored
* @param item the COSBase item representing the object in PDF
* @param dictionary the parent COSDictionary
* @param dictionaryKey the key under which this list is stored in the dictionary
*/","* This is a really special constructor.  Sometimes the PDF spec says
     * that a dictionary entry can either be a single item or an array of those
     * items.  But in the PDModel interface we really just want to always return
     * a java.util.List.  In the case were we get the list and never modify it
     * we don't want to convert to COSArray and put one element, unless we append
     * to the list.  So here we are going to create this object with a single
     * item instead of a list, but allow more items to be added and then converted
     * to an array.
     *
     * @param actualObject The PDModel object.
     * @param item The COS Model object.
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,converterToCOSArray,org.apache.pdfbox.pdmodel.common.COSArrayList:converterToCOSArray(java.util.List),304,349,"/**
* Converts a list of objects to a COSArray.
* @param cosObjectableList list of COSObjectable or compatible types
* @return COSArray containing converted COSBase elements
*/","* This will convert a list of COSObjectables to an array list of COSBase objects.
     *
     * @param cosObjectableList A list of COSObjectable.
     *
     * @return A list of COSBase.
     * @throws IllegalArgumentException if an object type is not supported for conversion to a
     * COSBase object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(),37,43,"/**
* Initializes a PDRange with default values.
* Sets range to [0, 1] and starting index to 0.
*/",* Constructor with an initial range of 0..1.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(org.apache.pdfbox.cos.COSArray),47,58,"/**
* Constructs a PDFourColours with at least 4 items.
* @param array COSArray to initialize with, extended to 4 if needed
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(),38,43,"/**
* Initializes an FDFOptionElement with default empty strings.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getWidths(int[]),417,511,"/**
 * Processes font widths and returns a COSArray.
 * @param widths array of character width values
 * @return COSArray representing processed font data
 * @throws IOException if an I/O error occurs
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getVerticalMetrics(int[]),547,668,"/**
* Processes glyph width and position data.
* @param values array of glyph metrics
* @return COSArray representing processed data
* @throws IOException if processing fails
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(),45,50,"/**
* Initializes a new PDFontSetting with default values.
* @param none
* @return none
*/","* Creates a blank font setting, font will be null, size will be 1.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getCOSObject(),78,85,"/**
* Creates a COSArray with masked values.
* @return COSBase object containing masked data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toCOSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toCOSArray(),208,216,"/**
* Creates an array with components and optional pattern name.
* @return COSArray containing components, possibly with a pattern name added
*/","* Returns the color component values as a COS array
     * @return the color component values as a COS array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(),72,81,"/**
* Initializes a new PDDeviceN object with default values.
*/",* Creates a new DeviceN color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(),39,45,"/**
* Initializes PDGamma with three zero values.
*/","* Creates a new gamma.
     * Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getAlternateColorSpace(),389,432,"/**
* Creates a color space from the stream's alternate array.
* @return PDColorSpace object based on the number of components
* @throws IOException if unsupported number of components or invalid type
*/","* Returns a list of alternate color spaces for non-conforming readers.
     * WARNING: Do not use the information in a conforming reader.
     * @return A list of alternateColorSpace color spaces.
     * @throws IOException If there is an error getting the alternateColorSpace color spaces.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(),61,68,"/**
* Initializes a PDF indexed color space.
* Sets up the COSArray with necessary elements for DeviceRGB.
*/","* Creates a new Indexed color space.
     * Default DeviceRGB, hival 255.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultRangeArray,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultRangeArray(),184,192,"/**
* Creates a COSArray with specified float ranges.
* @return COSArray containing four float values: -100, 100, -100, 100
*/","* creates a range array with default values (-100..100 -100..100).
     * @return the new range array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources),46,51,"/**
* Initializes a PDPattern with given resources.
* @param resources PDF document resources
*/","* Creates a new pattern color space.
     * 
     * @param resources The current resources.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(),69,77,"/**
* Initializes a PDF separation object.
* Constructs a COSArray with specific PDF structure elements.
*/",* Creates a new Separation color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(),38,44,"/**
* Initializes a PDTristimulus with zero values.
*/","* Constructor. Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(float[]),59,66,"/**
* Initializes PDTristimulus with float array.
* @param array input float array, max length 3
*/","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setMatrix(java.awt.geom.AffineTransform),245,255,"/**
 * Applies a transformation to a PDF element.
 * @param transform the affine transform to apply
 */","* Sets the optional Matrix entry for the form XObject.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",95,139,"/**
* Creates a PDImageXObject from byte array and document.
* @param document PDDocument instance
* @param byteArray image data as byte array
* @return PDImageXObject representing the image
* @throws IOException if an I/O error occurs
*/","* Creates a new JPEG Image XObject from a byte array containing JPEG data.
     *
     * @param document the document where the image will be created
     * @param byteArray bytes of JPEG image
     * @return a new Image XObject
     *
     * @throws IOException if the input stream cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createProcSetArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createProcSetArray(),172,183,"/**
* Creates and sets ProcSet array for PDF document.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toCOSArray,org.apache.pdfbox.util.Matrix:toCOSArray(),566,576,"/**
* Creates a COSArray with specific float values.
* @return COSArray containing selected float elements from 'single' array
*/","* Returns a COS array which represent the geometric relevant components of the matrix. The last column of the
     * matrix is ignored, only the first two columns are returned. This is analog to the Matrix(COSArray) constructor.
     * 
     * @return a COSArray representing the geometric relevant components of the matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",254,262,"/**
 * Recursively calls m2 with COSBase.
 * @param index position in a list or array
 * @param object COSObjectable instance to process
 */","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setInt,"org.apache.pdfbox.cos.COSArray:setInt(int,int)",338,341,"/**
 * Masks an integer value at a specified index.
 * @param index position to mask the value
 * @param value integer value to be masked
 */","* Set the value in the array as an integer.
     *
     * @param index The index into the array.
     * @param value The value to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setName,"org.apache.pdfbox.cos.COSArray:setName(int,java.lang.String)",348,351,"/**
 * Masks an item at the specified index with the given name.
 * @param index position in the array
 * @param name item to be masked
 */","* Set the value in the array as a name.
     * @param index The index into the array.
     * @param name The name to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setString,"org.apache.pdfbox.cos.COSArray:setString(int,java.lang.String)",389,399,"/**
 * Masks a string at a specified index.
 * @param index position to mask the string
 * @param string the string to be masked or null for no masking
 */","* Set the value in the array as a string.
     * @param index The index into the array.
     * @param string The string to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteSignature,org.apache.pdfbox.pdfwriter.COSWriter:doWriteSignature(),863,916,"/**
 * Generates and writes a masked byte range to the output.
 * Throws IOException if there's insufficient space for the new byte range.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMin,org.apache.pdfbox.pdmodel.common.PDRange:setMin(float),107,110,"/**
 * Sets minimum value in range array.
 * @param min minimum float value to set
 */","* This will set the minimum value for the range.
     *
     * @param min The new minimum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMax,org.apache.pdfbox.pdmodel.common.PDRange:setMax(float),128,131,"/**
* Masks values in rangeArray using cosine function.
* @param max maximum value for masking
*/","* This will set the maximum value for the range.
     *
     * @param max The new maximum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftX(float),225,228,"/**
 * Sets the first element of rectArray to a COSFloat with the given value.
 * @param value the float value to set
 */","* This will set the lower left x coordinate.
     *
     * @param value The lower left x.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftY(float),245,248,"/**
 * Sets the mask value for the rectangle array.
 * @param value the mask value to be applied
 */","* This will set the lower left y coordinate.
     *
     * @param value The lower left y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightX(float),265,268,"/**
 * Sets a float value in the rectangle array.
 * @param value the float value to set
 */","* This will set the upper right x coordinate.
     *
     * @param value The upper right x .",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightY(float),285,288,"/**
 * Sets the mask value in the rectangle array.
 * @param value the mask value to be set
 */","* This will set the upper right y coordinate.
     *
     * @param value The upper right y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setColourByIndex,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",175,187,"/**
* Sets gamma value in array at specified index.
* @param index position in the array
* @param colour PDGamma object or null
*/","* Sets the colour by edge index.
     * 
     * @param index the edge index
     * @param colour the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptArray,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptArray(org.apache.pdfbox.cos.COSArray,long,long)",683,689,"/**
* Masks objects in the given COSArray.
* @param array the array to process
* @param objNum object number for masking
* @param genNum generation number for masking
* @throws IOException if an I/O error occurs
*/","* This will decrypt an array.
     *
     * @param array The array to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setOption(java.lang.String),91,94,"/**
 * Calls m1 with 0 and a COSString created from opt.
 * @param opt input string to be converted into COSString
 */","* This will set the string for an available option.
     *
     * @param opt One of the available options.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setDefaultAppearanceString(java.lang.String),111,114,"/**
 * Calls m1 with mask value.
 * @param da data string to be masked
 */","* This will set the default appearance string.
     *
     * @param da The default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFontSize(float),115,118,"/**
 * Sets font size.
 * @param size desired font size
 */","* This will set the size of the font.
     *
     * @param size The new size of the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setColorantNames(java.util.List),494,498,"/**
* Masks names by adding them to a COSArray.
* @param names list of names to be masked
*/","* Sets the list of colorants
     * @param names the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes),505,521,"/**
* Updates device attributes.
* @param attributes new device attributes to set
*/","* Sets the color space attributes.
     * If null is passed in then all attribute will be removed.
     * @param attributes the color space attributes, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),545,554,"/**
* Sets the alternate color space.
* @param cs the new color space to use as an alternative
*/","* This will set the alternate color space.
     *
     * @param cs The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setR(float),88,91,"/**
 * Sets value at index 0 to cosine of given angle.
 * @param r angle in radians
 */","* Sets the r value of the tristimulus.
     * @param r the r value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setG(float),106,109,"/**
 * Sets mask value using cosine function.
 * @param g angle in radians for cosine calculation
 */","* Sets the g value of the tristimulus.
     * @param g the g value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setB(float),124,127,"/**
 * Applies a cosine transformation to a value.
 * @param b input float value to transform
 */","* Sets the b value of the tristimulus.
     * @param b he b value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setBaseColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),312,316,"/**
* Sets base color space and updates array.
* @param base PDColorSpace to be set as base
*/","* Sets the base color space.
     * @param base the base color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setColorantName(java.lang.String),274,277,"/**
 * Masks a given name by adding it to an array.
 * @param name the name to be masked
 */","* Sets the colorant name.
     * @param name the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),283,292,"/**
* Sets the alternate color space.
* @param colorSpace the new color space to set
*/","* Sets the alternate color space.
     * @param colorSpace The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setX(float),91,94,"/**
 * Applies a cosine transformation to a value.
 * @param x input value to transform
 */","* Sets the x value of the tristimulus.
     * @param x the x value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setY(float),109,112,"/**
 * Sets matrix value at (1, 0) to cosine of y.
 * @param y angle in radians
 */","* Sets the y value of the tristimulus.
     * @param y the y value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setZ(float),127,130,"/**
 * Applies cosine mask to matrix element.
 * @param z angle in radians for cosine calculation
 */","* Sets the z value of the tristimulus.
     * @param z the z value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",227,235,"/**
* Recursively sets a PDF dictionary entry.
* @param key the dictionary key
* @param value the object to set or null to remove
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(java.lang.String,boolean)",254,257,"/**
 * Sets a boolean value in a dictionary using a specified key.
 * @param key the key under which to store the boolean value
 * @param value the boolean value to store
 */","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(org.apache.pdfbox.cos.COSName,boolean)",265,268,"/**
 * Sets a boolean value in the dictionary.
 * @param key the key to set
 * @param value the boolean value to associate with the key
 */","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",276,279,"/**
 * Calls overloaded method with COSName.
 * @param key string key to be converted to COSName
 * @param value associated COSBase value
 */","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(org.apache.pdfbox.cos.COSName,java.lang.String)",300,308,"/**
* Sets a masked value in a dictionary.
* @param key the key for the dictionary entry
* @param value the string value to mask and set
*/","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(org.apache.pdfbox.cos.COSName,java.lang.String)",372,380,"/**
* Sets a masked field in a PDF document.
* @param key the field name as a COSName
* @param value the string value to mask
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(org.apache.pdfbox.cos.COSName,int)",421,424,"/**
 * Sets an integer value in the dictionary using a key.
 * @param key the key to associate with the value
 * @param value the integer value to store
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(org.apache.pdfbox.cos.COSName,long)",443,447,"/**
 * Sets an integer value in a map using a key.
 * @param key the key to store the value under
 * @param value the integer value to set
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(org.apache.pdfbox.cos.COSName,float)",484,488,"/**
 * Sets a float value in the PDF document.
 * @param key the key associated with the value
 * @param value the float value to set
 */","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,"org.apache.pdfbox.cos.COSDocument:createCOSStream(org.apache.pdfbox.cos.COSDictionary,long,long)",192,200,"/**
* Creates a COSStream from a dictionary and positions.
* @param dictionary source dictionary for the stream
* @param startPosition start position in the stream
* @param streamLength length of the stream
* @return COSStream object created from the given parameters
*/","* Creates a new COSStream using the current configuration for scratch files. Not for public use.
     * Only COSParser should call this method.
     * 
     * @param dictionary    the corresponding dictionary
     * @param startPosition the start position within the source
     * @param streamLength  the stream length
     * @return the new COSStream
     * @throws IOException if the random access view can't be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary),351,354,"/**
 * Masks encryption dictionary in PDF trailer.
 * @param encDictionary encryption configuration dictionary
 */","* This will set the encryption dictionary, this should only be called when
     * encrypting the document.
     *
     * @param encDictionary The encryption dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setDocumentID,org.apache.pdfbox.cos.COSDocument:setDocumentID(org.apache.pdfbox.cos.COSArray),374,377,"/**
 * Masks an ID by updating its status in the system.
 * @param id COSArray containing the identifier to mask
 */","* This will set the document ID. This should be an array of two strings. This method cannot be
     * used to remove the document id by passing null or an empty array; it will be recreated. Only
     * the first existing string is used when writing, the second one is always recreated. If you
     * don't want this, you'll have to modify the {@code COSWriter} class, look for {@link COSName#ID}.
     *
     * @param id The document id.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parseNextToken,org.apache.pdfbox.pdfparser.PDFStreamParser:parseNextToken(),97,321,"/**
* Parses content stream and returns corresponding object.
* Throws IOException on parsing errors.
*/","* This will parse the next token in the stream.
     *
     * @return The next token in the stream or null if there are no more tokens in the stream.
     *
     * @throws IOException If an io error occurs while parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),172,195,"/**
* Initializes a new PDF document with a basic structure.
* @param streamCacheCreateFunction function to create a stream cache
*/","* Creates an empty PDF document. You need to add at least one page for the document to be valid.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache for buffering PDF streams",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation),778,782,"/**
* Sets document information.
* @param info document metadata to be set
*/","* This will set the document information for this document.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata) PDDocumentCatalog#setMetadata(PDMetadata)}.
     *
     * @param info The updated document information.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument),74,80,"/**
* Initializes a PDDocumentCatalog with the given document.
* @param doc the PDF document to associate with this catalog
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setThreads(java.util.List),239,244,"/**
 * Masks threads in a PDF document.
 * @param threads list of PDThread objects to be masked
 */","* Sets the list of threads for this pdf document.
     *
     * @param threads The list of threads, or null to clear it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOutputIntents(java.util.List),453,461,"/**
* Masks output intents.
* @param outputIntents list of PDOutputIntent objects
*/","* Replace the list of OutputIntents of the document.
     *
     * @param outputIntents the list of OutputIntents, if the list is empty all OutputIntents are
     * removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setCropBox,org.apache.pdfbox.pdmodel.PDPage:setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle),460,470,"/**
* Sets the crop box for a page.
* @param cropBox rectangle defining the crop area
*/","* This will set the CropBox for this page.
     * 
     * @param cropBox The new CropBox for this page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(java.util.List),622,625,"/**
 * Masks PDF content streams.
 * @param contents list of PDStream objects representing content streams
 */","* This will set the contents of this page.
     *
     * @param contents Array of new contents of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setThreadBeads,org.apache.pdfbox.pdmodel.PDPage:setThreadBeads(java.util.List),661,664,"/**
 * Masks threads in the PDF page.
 * @param beads List of thread beads to mask
 */","* This will set the list of thread beads.
     * 
     * @param beads A list of PDThreadBead objects or null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setAnnotations,org.apache.pdfbox.pdmodel.PDPage:setAnnotations(java.util.List),800,803,"/**
* Sets annotations on a PDF page.
* @param annotations list of PDAnnotation objects to apply
*/","* This will set the list of annotations. Although this is optional, you should take care that
     * any newly created annotations link back to this page by calling
     * {@link PDAnnotation#setPage(org.apache.pdfbox.pdmodel.PDPage)}. Not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>.
     *
     * @param annotations The new list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setViewports,org.apache.pdfbox.pdmodel.PDPage:setViewports(java.util.List),860,868,"/**
* Sets viewport dictionaries on the page.
* @param viewports list of PDViewportDictionary objects
*/","* Set the viewports.
     *
     * @param viewports A list of viewports, or null if the entry is to be deleted.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(),54,61,"/**
* Initializes a new PDPageTree with an empty page structure.
*/",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,org.apache.pdfbox.pdmodel.common.COSArrayList:add(java.lang.Object),187,212,"/**
* Handles object processing, updating parent dictionary and array.
* @param o the object to process
* @return true if processed successfully
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,clear,org.apache.pdfbox.pdmodel.common.COSArrayList:clear(),416,427,"/**
 * Calls methods on parentDict, actual, and array objects.
 * @param dictKey key for dictionary operation
 */",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,set,"org.apache.pdfbox.pdmodel.common.COSArrayList:set(int,java.lang.Object)",460,485,"/**
* Replaces an element at the specified index.
* @param index position of the element to replace
* @param element new element to insert
* @return replaced element
* @throws UnsupportedOperationException if list is filtered or invalid element type
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,"org.apache.pdfbox.pdmodel.common.COSArrayList:add(int,java.lang.Object)",490,515,"/**
* Adds an element at the specified index.
* @param index position where the element will be added
* @param element to add to the list
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,put,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:put(java.lang.Object,java.lang.Object)",105,112,"/**
* Maps a key-value pair to the underlying data store.
* @param key unique identifier for the item
* @param value object to be stored
* @return the original value associated with the key
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getCOSObject,org.apache.pdfbox.pdmodel.common.PDPageLabels:getCOSObject(),180,192,"/**
* Creates a COS dictionary with numeric labels.
* @return COSDictionary containing label mappings
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(),38,42,"/**
* Initializes a PDF file specification.
* Sets up the dictionary with necessary attributes.
*/",* Default Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(org.apache.pdfbox.cos.COSDictionary),49,60,"/**
* Initializes a PDComplexFileSpecification with a given dictionary.
* @param dict the COSDictionary to initialize with, or null for default setup
*/","* Constructor. Creates empty COSDictionary if dict is null.
     *
     * @param dict The dictionary that fulfils this file specification.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setRangeValues(org.apache.pdfbox.cos.COSArray),196,200,"/**
* Sets the range values and updates COS object.
* @param rangeValues array of range values to be set
*/","* This will set the range values.
     *
     * @param rangeValues The new range values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setDomainValues(org.apache.pdfbox.cos.COSArray),239,243,"/**
* Sets the domain values and updates the COS object.
* @param domainValues array of domain values to be set
*/","* This will set the domain values.
     *
     * @param domainValues The new domain values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setEncodeValues(org.apache.pdfbox.cos.COSArray),207,211,"/**
* Sets encoding values and updates PDF document.
* @param encodeValues array of encoding values
*/","* This will set the encode values.
     *
     * @param encodeValues The new encode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setDecodeValues(org.apache.pdfbox.cos.COSArray),236,240,"/**
* Sets decoding values and updates PDF object.
* @param decodeValues array of decoding parameters
*/","* This will set the decode values.
     *
     * @param decodeValues The new decode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setK(org.apache.pdfbox.cos.COSBase),88,91,"/**
 * Masks a value using a COSBase object.
 * @param k COSBase object to be masked
 */","* Sets the K entry.
     * 
     * @param k the K value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setClassMap(java.util.Map),253,273,"/**
 * Processes and applies a class map to a PDF document.
 * @param classMap mapping of names to objects or lists of PDAttributeObjects
 */","* Sets the ClassMap.
     * 
     * @param classMap null, or a map whose elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:setUserProperties(java.util.List),81,85,"/**
* Masks user properties.
* @param userProperties list of user properties to mask
*/","* Sets the user properties.
     * 
     * @param userProperties the user properties",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setLineDashPattern(org.apache.pdfbox.cos.COSArray),185,193,"/**
* Sets dash pattern in dictionary.
* @param dashArray array defining dash pattern
*/","* Set the line dash pattern associated with this box style.
     *
     * @param dashArray The patter for this box style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setCryptFilterMethod(org.apache.pdfbox.cos.COSName),96,99,"/**
 * Sets encryption filter mask.
 * @param cfm COSName representing the filter mask
 */","* This will set the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @param cfm name of the crypt filter method.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setFilter(java.lang.String),149,152,"/**
 * Sets PDF filter.
 * @param filter name of the filter to apply
 */","* Sets the filter entry of the encryption dictionary.
     *
     * @param filter The filter name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerKey(byte[]),261,264,"/**
 * Masks data using a dictionary.
 * @param o byte array to be masked
 * @throws IOException if an I/O error occurs
 */","* This will set the O entry in the standard encryption dictionary.
     *
     * @param o A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserKey(byte[]),300,303,"/**
 * Masks user data by setting it in the dictionary.
 * @param u user data to be masked
 * @throws IOException if an I/O error occurs during masking
 */","* This will set the U entry in the standard encryption dictionary.
     *
     * @param u A 32 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerEncryptionKey(byte[]),339,342,"/**
 * Masks data by adding it to the dictionary.
 * @param oe byte array containing mask data
 * @throws IOException if an I/O error occurs
 */","* This will set the OE entry in the standard encryption dictionary.
     *
     * @param oe A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserEncryptionKey(byte[]),369,372,"/**
 * Masks user data by setting it in the dictionary.
 * @param ue user data to be masked
 * @throws IOException if an I/O error occurs
 */","* This will set the UE entry in the standard encryption dictionary.
     *
     * @param ue A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRecipients,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRecipients(byte[][]),429,439,"/**
* Masks recipients by adding them to a PDF dictionary.
* @param recipients byte arrays representing recipient data
*/","* This will set the Recipients field of the dictionary. This field contains an array
     * of string.
     * @param recipients the array of bytes arrays to put in the Recipients field.
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStreamFilterName(org.apache.pdfbox.cos.COSName),564,567,"/**
 * Sets the stream filter for the dictionary.
 * @param streamFilterName name of the stream filter to apply
 */","* Sets the name of the filter which is used for de/encrypting streams.
     * 
     * @param streamFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStringFilterName(org.apache.pdfbox.cos.COSName),586,589,"/**
 * Sets the string filter name in the dictionary.
 * @param stringFilterName the name of the string filter to set
 */","* Sets the name of the filter which is used for de/encrypting strings.
     * 
     * @param stringFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPerms(byte[]),598,601,"/**
 * Sets permissions mask.
 * @param perms byte array representing permissions
 * @throws IOException if I/O error occurs
 */","* Set the Perms entry in the encryption dictionary.
     *
     * @param perms A 16 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,removeV45filters,org.apache.pdfbox.pdmodel.encryption.PDEncryption:removeV45filters(),624,629,"/**
* Masks specific entries in a PDF dictionary.
*/","* remove CF, StmF, and StrF entries. This is to be called if V is not 4 or 5.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(),107,111,"/**
* Initializes a new FDF annotation.
* Sets up the annotation dictionary with type 'Annot'.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setColor(java.awt.Color),467,475,"/**
* Sets annotation color.
* @param c Color object to apply
*/","* Set the annotation color.
     *
     * @param c The annotation color.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRichContents(java.lang.String),876,879,"/**
 * Masks the input string using COSName and COSString.
 * @param rc string to be masked
 */","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setInteriorColor(java.awt.Color),105,113,"/**
 * Sets annotation's masking color.
 * @param color the masking color to apply
 */","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setCallout(float[]),144,147,"/**
 * Masks a callout by adding it to an annotation.
 * @param callout float array representing the callout dimensions
 */","* This will set the coordinates of the callout line.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:setInkList(java.util.List),123,131,"/**
* Masks ink lists for annotation.
* @param inklist list of float arrays representing ink data
*/","* Set the paths making up the freehand ""scribble"".
     * 
     * The ink annotation is made up of one ore more disjoint paths. Each array entry is an array representing a stroked
     * path, being a series of alternating horizontal and vertical coordinates in default user space.
     * 
     * @param inklist the List of arrays representing the paths.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLine(float[]),162,165,"/**
 * Masks a line of pixels.
 * @param line array of pixel values to be masked
 */","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param line array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setInteriorColor(java.awt.Color),251,259,"/**
* Sets annotation's icon to specified color.
* @param color Color object to mask the annotation with
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setVertices(float[]),116,119,"/**
 * Masks vertices by adding them to an annotation.
 * @param vertices array of vertex coordinates
 */","* This will set the coordinates of the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setInteriorColor(java.awt.Color),137,145,"/**
* Sets annotation mask color.
* @param color the mask color to apply
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the drawn area.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setVertices(float[]),133,136,"/**
 * Masks vertices in an annotation.
 * @param vertices array of vertex coordinates to mask
 */","* This will set the coordinates of the the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setInteriorColor(java.awt.Color),220,228,"/**
* Sets annotation mask color.
* @param color Color to be set as mask
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setInteriorColor(java.awt.Color),106,114,"/**
 * Sets annotation color.
 * @param color the color to apply
 */","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,setCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:setCoords(float[]),87,90,"/**
 * Masks coordinates on an annotation.
 * @param coords array of float values representing coordinates
 */","* Set the coordinates of individual words or group of words.
     * 
     * The quadliterals shall encompasses a word or group of contiguous words in the text underlying the annotation. The
     * coordinates for each quadrilateral shall be given in the order x1 y1 x2 y2 x3 y3 x4 y4.
     *
     * @param coords an array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setID(org.apache.pdfbox.cos.COSArray),315,318,"/**
 * Sets the ID array in the FDF document.
 * @param id COSArray containing the ID values
 */","* This will set the FDF id.
     *
     * @param id The new id for the FDF.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFields(java.util.List),346,349,"/**
* Masks fields by setting them in the FDF document.
* @param fields list of FDFField objects to be masked
*/","* This will set the list of fields. This should be a list of FDFField objects.
     *
     * @param fields The list of fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setPages(java.util.List),398,401,"/**
* Sets PDF pages in FDF document.
* @param pages list of FDFPage objects to be set
*/","* This will set the list of pages. This should be a list of FDFPage objects.
     *
     *
     * @param pages The list of pages.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setAnnotations(java.util.List),459,462,"/**
* Sets annotations in FDF document.
* @param annots list of annotation objects to set
*/","* This will set the list of annotations. This should be a list of FDFAnnotation objects.
     *
     *
     * @param annots The list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setDifferences(org.apache.pdfbox.cos.COSStream),479,482,"/**
 * Sets the differences stream in the FDF document.
 * @param diff COSStream containing the differences data
 */","* This will set the differences stream.
     *
     * @param diff The new differences stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEmbeddedFDFs(java.util.List),534,537,"/**
* Sets embedded PDF files in FDF document.
* @param embedded list of PDFileSpecification objects representing embedded files
*/","* This will set the list of embedded FDFs. This should be a list of PDFileSpecification objects.
     *
     *
     * @param embedded The list of embedded FDFs.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setKids,org.apache.pdfbox.pdmodel.fdf.FDFField:setKids(java.util.List),197,200,"/**
 * Sets the KIDS array for a PDF field.
 * @param kids list of child fields to be set
 */","* This will set the list of kids.
     *
     * @param kids A list of FDFField objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(java.lang.Object),293,313,"/**
* Masks a field with a given value.
* @param value the value to mask the field with
* @throws IOException if an error occurs during masking
*/","* You should pass a String, or a List&lt;String&gt; to set the value.
     *
     * @param value The value that should populate when imported.
     *
     * @throws IOException If there is an error setting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(org.apache.pdfbox.cos.COSBase),320,323,"/**
 * Sets the mask value in the PDF field.
 * @param value the COSBase value to set as the mask
 */","* Sets the COS value of this field.
     *
     * @param value COS value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(java.lang.Integer),348,356,"/**
* Sets a form field value.
* @param ff the integer value to set
*/","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(java.lang.Integer),392,400,"/**
* Sets a field with an integer value.
* @param ff the integer value to set
*/","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(java.lang.Integer),436,444,"/**
* Masks a field with an integer value.
* @param ff the integer value to mask
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(java.lang.Integer),480,488,"/**
* Masks an integer field in a PDF document.
* @param f the integer value to mask
*/","* This will set the widget field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(java.lang.Integer),524,532,"/**
* Sets a field with an integer value.
* @param ff the integer value to set
*/","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(java.lang.Integer),568,576,"/**
* Masks a field with an integer value.
* @param ff integer value to mask the field with
*/","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSString),765,768,"/**
 * Sets the 'RV' field value.
 * @param rv value to set for the 'RV' field
 */","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSStream),775,778,"/**
 * Sets the COSStream value for the RV field.
 * @param rv the COSStream to be set
 */","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setBefore(java.lang.String),97,100,"/**
 * Sets the ""Before"" attribute in the dictionary.
 * @param before value to set for the ""Before"" attribute
 */","* This will set the javascript code the will get execute before the import.
     *
     * @param before A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setAfter(java.lang.String),129,132,"/**
 * Sets the ""AFTER"" value in the dictionary.
 * @param after the value to be set
 */","* This will set the javascript code the will get execute after the import.
     *
     * @param after A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setDoc(java.util.Map),172,181,"/**
* Populates a COSArray with keys and values from the map.
* @param map containing key-value pairs of String and PDActionJavaScript
*/","* Sets the dictionary's ""Doc"" entry.
     * 
     * @param map Map of named ""JavaScript"" dictionaries.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:setTemplates(java.util.List),91,94,"/**
* Sets PDF templates on the page.
* @param templates list of FDFTemplate objects to apply
*/","* A list of FDFTemplate objects.
     *
     * @param templates A list of templates for this Page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setFields(java.util.List),112,115,"/**
* Masks specified fields in a PDF template.
* @param fields list of FDFField objects to be masked
*/","* This will set a list of fields for this template.
     *
     * @param fields The list of fields to set for this template.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(java.util.TreeMap),279,309,"/**
* Adjusts and sets character widths for a CID font.
* @param cidToGid mapping of CIDs to GIDs
* @throws IOException if an I/O error occurs
*/",* Builds widths with a custom CIDToGIDMap (for embedding font subset).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalHeader,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary),311,332,"/**
 * Adjusts font metrics for vertical text.
 * @param cidFont CID font dictionary to modify
 * @return true if adjustment is needed and successful, false otherwise
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(),72,80,"/**
* Initializes a new PDFont object with default settings.
*/",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(),54,58,"/**
* Initializes a new font descriptor.
* Sets up a dictionary with type set to FONT_DESC.
*/","* Package-private constructor, for embedding.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontName(java.lang.String),295,303,"/**
* Sets font name in dictionary.
* @param fontName name of the font to be set
*/","* This will set the font name.
     *
     * @param fontName The new name for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFamily(java.lang.String),320,328,"/**
* Sets font family in dictionary.
* @param fontFamily the font family to set
*/","* This will set the font family.
     *
     * @param fontFamily The font family.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontStretch(java.lang.String),371,379,"/**
* Sets font stretch in dictionary.
* @param fontStretch font stretch value as string
*/","* This will set the font stretch.
     *
     * @param fontStretch The new stretch for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),427,435,"/**
* Masks a rectangle in a PDF dictionary.
* @param rect the rectangle to mask
*/","* Set the fonts bounding box.
     *
     * @param rect The new bounding box.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCharacterSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCharacterSet(java.lang.String),711,719,"/**
* Sets character set in dictionary.
* @param charSet character set string
*/","* This will set the character set for the font.
     *
     * @param charSet The new character set for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:setGamma(float),123,126,"/**
 * Sets gamma value in dictionary.
 * @param value gamma correction factor
 */","* Set the gamma value.
     *
     * @param value The new gamma value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),157,165,"/**
* Sets the gamma value in the dictionary.
* @param gamma PDGamma object containing gamma values
*/","* Sets the gamma value.
     * @param gamma the new gamma value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setMatrix(org.apache.pdfbox.util.Matrix),172,191,"/**
* Sets the transformation matrix in a dictionary.
* @param matrix 3x3 transformation matrix to be set
*/","* Sets the linear interpretation matrix.
     * Passing in null will clear the matrix.
     * @param matrix the new linear interpretation matrix, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,setColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:setColorants(java.util.Map),127,135,"/**
* Sets colorants in the PDF dictionary.
* @param colorants map of color space names to PDColorSpace objects
*/","* Sets the colorant map.
     * @param colorants the map of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(),40,44,"/**
* Initializes a new instance of PDTransparencyGroupAttributes.
* Sets up the dictionary with the necessary transparency settings.
*/",* Creates a group object with /Transparency subtype entry.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),194,203,"/**
* Sets the color space parameter in PDF document.
* @param colorSpace the color space to be set
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setFilters(java.util.List),266,270,"/**
* Applies filters to PDF parameters.
* @param filters list of filter strings
*/","* Sets which filters are applied to this stream.
     *
     * @param filters the filters to apply to this stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setDecode(org.apache.pdfbox.cos.COSArray),272,276,"/**
 * Sets the D parameter in COSDictionary with provided decode array.
 * @param decode array of values to be set as D parameter
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildDecodeParams,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",463,471,"/**
* Creates a COSDictionary for PNG image decoding.
* @param state converter state containing image dimensions and bit depth
* @param colorSpace color space of the image
* @return COSDictionary with decoding parameters
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(),38,41,"/**
 * Initializes a new optional content membership dictionary.
 */",* Creates a new optional content membership dictionary (OCMD).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setVisibilityPolicy(org.apache.pdfbox.cos.COSName),118,121,"/**
* Sets the visibility policy in the dictionary.
* @param visibilityPolicy the policy to set
*/","* Sets the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     * 
     * @param visibilityPolicy the visibility policy name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setMatrix(java.awt.geom.AffineTransform),143,153,"/**
 * Applies an affine transformation to a PDF element.
 * @param transform the affine transformation to apply
 */","* Sets the optional Matrix entry for the Pattern.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),232,242,"/**
* Sets or clears the bounding box.
* @param bbox bounding box rectangle, null to clear
*/","* This will set the BBox (bounding box) for this Pattern.
     * @param bbox The new BBox for this Pattern.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBackground(org.apache.pdfbox.cos.COSArray),142,146,"/**
* Sets the background to a new COSArray.
* @param newBackground the new background array to set
*/","* This will set the background.
     *
     * @param newBackground the new background",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),187,198,"/**
* Updates the bounding box for a PDF element.
* @param newBBox the new bounding box rectangle
*/","* This will set the BBox (bounding box) for this Shading.
     *
     * @param newBBox the new BBox",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),254,265,"/**
* Sets the color space for the object.
* @param colorSpace the new color space to be set
*/","* This will set the color space for the shading.
     *
     * @param colorSpace the color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.cos.COSArray),324,329,"/**
* Masks functions and updates array.
* @param newFunctions new COSArray of functions
*/","* This will set the functions COSArray for the color conversion.
     *
     * @param newFunctions the new COSArray containing all functions",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setMatrix(java.awt.geom.AffineTransform),66,76,"/**
 * Applies a transformation to an object.
 * @param transform the affine transformation to apply
 */","* Sets the optional Matrix entry for the function based shading.
     *
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setDomain(org.apache.pdfbox.cos.COSArray),97,101,"/**
* Sets the domain and updates related configuration.
* @param newDomain array representing the new domain
*/","* Sets the optional Domain entry for the function based shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setExtend(org.apache.pdfbox.cos.COSArray),70,74,"/**
 * Updates the extend array and notifies m1 about the change.
 * @param newExtend the new COSArray to set as extend
 */","* Sets the optional Extend entry for this shading.
     *
     * @param newExtend the extend array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setDomain(org.apache.pdfbox.cos.COSArray),95,99,"/**
* Updates the domain with a new array.
* @param newDomain the new COSArray to set as the domain
*/","* Sets the optional Domain entry for this shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setCoords(org.apache.pdfbox.cos.COSArray),120,124,"/**
* Updates coordinates and sets in COSDictionary.
* @param newCoords array of new coordinates
*/","* Sets the Coords entry for this shading.
     *
     * @param newCoords the coordinates array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
 * Sets decode values and updates COS object.
 * @param decodeValues array of decode values
 */","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(),46,51,"/**
* Initializes a new PDExtendedGraphicsState with default settings.
*/","* Default constructor, creates blank graphics state.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),592,595,"/**
 * Sets blend mode in dictionary.
 * @param bm blend mode to apply
 */","* Set the blending mode.
     * 
     * @param bm blend mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFloatItem,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",656,666,"/**
* Sets or removes a float value in the dictionary.
* @param key the key for the dictionary entry
* @param value the float value to set, or null to remove the entry
*/","* This will set a float object.
     *
     * @param key The key to the data that we are setting.
     * @param value The value that we are setting.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer(org.apache.pdfbox.cos.COSBase),694,697,"/**
 * Masks a transfer in the dictionary.
 * @param transfer COSBase object representing the transfer to mask
 */","* This will set the transfer function of the /TR dictionary.
     *
     * @param transfer The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer2(org.apache.pdfbox.cos.COSBase),727,730,"/**
 * Sets transfer function dictionary entry.
 * @param transfer2 COSBase object representing transfer function
 */","* This will set the transfer function of the /TR2 dictionary.
     *
     * @param transfer2 The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setNext(java.util.List),156,159,"/**
 * Sets the next actions in the PDF document.
 * @param next list of PDAction objects representing subsequent actions
 */","* This will set the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @param next The Next action or sequence of actions.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setT(org.apache.pdfbox.cos.COSBase),69,72,"/**
 * Masks an action with the given COSBase.
 * @param t COSBase object to mask the action with
 */",* @param t annotation or annotations,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setH(boolean),87,90,"/**
 * Sets mask visibility.
 * @param h boolean indicating whether to apply mask
 */",* @param h hide flag,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setD(org.apache.pdfbox.cos.COSBase),108,111,"/**
 * Masks an item in a PDF document.
 * @param d COSBase object representing the item to mask
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFields(org.apache.pdfbox.cos.COSArray),67,70,"/**
 * Masks fields in an action.
 * @param array COSArray containing field names to mask
 */",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSound(org.apache.pdfbox.cos.COSStream),61,64,"/**
 * Masks a sound stream in an action.
 * @param sound COSStream representing the sound to be masked
 */","* Sets the sound object.
     * 
     * @param sound the sound object defining the sound that shall be played.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFields(org.apache.pdfbox.cos.COSArray),93,96,"/**
 * Masks fields in a PDF form.
 * @param array COSArray containing field names to mask
 */",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setD(org.apache.pdfbox.cos.COSBase),71,74,"/**
 * Masks an item using COSBase.
 * @param d data to be masked
 */",* @param d The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setB(org.apache.pdfbox.cos.COSBase),109,112,"/**
 * Masks a base object in an action.
 * @param b COSBase object to be masked
 */",* @param b The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setRelationship(org.apache.pdfbox.cos.COSName),88,95,"/**
* Sets the relationship in the dictionary.
* @param relationship must be either COSName.P or COSName.C
*/","* Set the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @param relationship Valid values are P (the target is the parent of the current document) and
     * C (the target is a child of the current document).
     *
     * throws IllegalArgumentException if the parameter is not P or C.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(),173,177,"/**
* Constructs a new PDF annotation.
* Initializes the annotation's dictionary with type set to ""Annot"".
*/",* Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),282,285,"/**
 * Sets the rectangle bounds in the dictionary.
 * @param rectangle PDRectangle object defining the bounds
 */","* This will set the rectangle for this annotation.
     * 
     * @param rectangle The new rectangle values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setBorder(org.apache.pdfbox.cos.COSArray),764,767,"/**
 * Sets the border array for an object.
 * @param borderArray array defining the border properties
 */","* This will set the border array.
     * 
     * @param borderArray the border array to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float,float,float,float)",76,84,"/**
* Sets mask differences for a PDF element.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float,float,float,float)",163,171,"/**
* Sets mask margins for a PDF element.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setCallout(float[]),194,197,"/**
* Masks callout array using COSName and COSArray.
* @param callout float array to be masked
*/","* This will set the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:setInkList(float[][]),65,78,"/**
* Masks ink list in a PDF document.
* @param inkList 2D array of ink coordinates
*/","* Sets the paths that make this annotation.
     *
     * @param inkList An array of arrays, each representing a stroked path. Each array shall be a
     * series of alternating horizontal and vertical coordinates. If the parameter is null the entry
     * will be removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLine(float[]),135,138,"/**
* Masks an array of floats using a specific function.
* @param l array of float values to be masked
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param l array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setQuadPoints(float[]),201,204,"/**
* Sets quad points for annotation.
* @param quadPoints array of float values representing quad points
*/","* This will set the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @param quadPoints an array representing the set of area covered.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setRichContents(java.lang.String),156,159,"/**
 * Masks a resource with given identifier.
 * @param rc resource identifier to mask
 */","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setVertices(float[]),124,127,"/**
* Masks vertices using provided float array.
* @param points array of vertex coordinates
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setVertices(float[]),170,173,"/**
* Masks points using vertices.
* @param points array of vertex coordinates
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setParent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup),84,87,"/**
 * Masks a PDF annotation by setting its parent.
 * @param annot the annotation to mask
 */","* This will set the markup annotation which this popup relates to.
     *
     * @param annot the markup annotation.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float,float,float,float)",152,160,"/**
* Sets document margins.
* @param differenceLeft left margin adjustment
* @param differenceTop top margin adjustment
* @param differenceRight right margin adjustment
* @param differenceBottom bottom margin adjustment
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:setQuadPoints(float[]),59,62,"/**
* Sets quad points for annotation.
* @param quadPoints array of 8 floats defining the quadrilateral
*/","* This will set the set of quadpoints which encompass the areas of this annotation.
     *
     * @param quadPoints an array representing the set of area covered",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(),36,41,"/**
* Initializes a new PDAppearanceDictionary with required entries.
*/",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setDashStyle(org.apache.pdfbox.cos.COSArray),160,163,"/**
 * Sets dash pattern for drawing.
 * @param dashArray array defining dash pattern
 */","* This will set the dash style used for drawing the border.
     *
     * @param dashArray the dash style to use",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(),83,88,"/**
* Initializes a PDSeedValue with a COSDictionary.
* Sets the type to ""SV"" and marks it as a direct object.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilter(org.apache.pdfbox.cos.COSName),264,267,"/**
 * Sets the filter in the dictionary.
 * @param filter the filter to be set
 */","* (Optional) The signature handler that shall be used to sign the signature field.
     *
     * @param filter is the filter that shall be used by the signature handler",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilter(java.util.List),292,296,"/**
* Sets subfilters in dictionary.
* @param subfilter list of subfilter strings
*/","* (Optional) An array of names indicating encodings to use when signing. The first name
     * in the array that matches an encoding supported by the signature handler shall be the
     * encoding that is actually used for signing.
     *
     * @param subfilter is the name that shall be used for encoding",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethod(java.util.List),323,336,"/**
* Validates and sets digest methods.
* @param digestMethod list of digest method names to be validated and set
*/","* <p>(Optional, PDF 1.7) An array of names indicating acceptable digest
     * algorithms to use when signing. The value shall be one of <b>SHA1</b>,
     * <b>SHA256</b>, <b>SHA384</b>, <b>SHA512</b>, <b>RIPEMD160</b>. The default
     * value is implementation-specific.</p>
     *
     * <p>This property is only applicable if the digital credential signing contains RSA
     * public/privat keys</p>
     *
     * @param digestMethod is a list of possible names of the digests, that should be
     * used for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasons(java.util.List),390,393,"/**
* Masks given reasons in the dictionary.
* @param reasons list of reason strings to mask
*/","* (Optional) An array of text strings that specifying possible reasons for signing
     * a document. If specified, the reasons supplied in this entry replace those used
     * by conforming products.
     *
     * @param reasons is a list of possible text string that specifying possible reasons",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setMPD,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP),427,433,"/**
* Sets MDP seed value in the dictionary.
* @param mdp PDSeedValueMDP object containing seed data
*/","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @param mdp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp),478,484,"/**
* Sets timestamp in dictionary if not null.
* @param timestamp PDSeedValueTimeStamp object to set
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @param timestamp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestation(java.util.List),505,509,"/**
 * Sets legal attestations in the document.
 * @param legalAttestation list of legal attestation strings
 */","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @param legalAttestation is a list of possible text string that specifying possible
     * legal attestations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(),71,76,"/**
* Initializes a new PDSeedValueCertificate.
* Sets up the internal dictionary with type SV_CERT and marks it as direct.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubject(java.util.List),234,237,"/**
 * Masks subjects in the document.
 * @param subjects list of byte arrays representing subjects to be masked
 */","* (Optional) A list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing. if
     * <b>Subject</b> is not null and {@link #isSubjectRequired()} is true then the subject
     * constraint is enforced on the subjects in this array subjects.
     *
     * @param subjects list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDN(java.util.List),309,319,"/**
* Converts a list of DN maps to COSDictionary and adds to main dictionary.
* @param subjectDN list of DN key-value pairs
*/","* (Optional; PDF 1.7) A list of maps, where each map contains key value pairs, that specify the
     * Subject Distinguished Name (DN) that must be present within the certificate for it to be
     * acceptable for signing. The certificate must at a minimum contain all the attributes
     * specified in one of the maps entered.
     *
     * @param subjectDN list of maps that contains subject distinguished names",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsage(java.util.List),377,381,"/**
* Sets key usage extensions in dictionary.
* @param keyUsageExtensions list of key usage extension strings
*/","* (Optional; PDF 1.7) A List of ASCII strings, where each string specifies an acceptable
     * key-usage extension that must be present in the signing certificate. Multiple strings specify
     * a range of acceptable key-usage extensions; where each string 9 characters long and each
     * character is one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't
     * care. each index in the string represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     *
     * @param keyUsageExtensions list of ASCII strings that consists only of {0, 1, X}",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuer(java.util.List),471,474,"/**
* Masks issuer information in PDF document.
* @param issuers list of issuer byte arrays
*/","* (Optional) A list of array of bytes containing DER-encoded X.509v3 certificates of acceptable
     * issuers. If the signer’s certificate chains up to any of the specified issuers (either
     * directly or indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuers A list of byte array containing DER-encoded X.509v3 certificates",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOID(java.util.List),527,530,"/**
* Masks OIDs in a list of byte arrays.
* @param oidByteStrings list of OID byte arrays to mask
*/","* (Optional) A list of byte arrays that contain Object Identifiers (OIDs) of the certificate
     * policies that must be present in the signing certificate. This field is only applicable if
     * the value of Issuer is not empty.
     *
     * @param oidByteStrings list of byte arrays that contain OIDs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(),90,94,"/**
* Initializes a new PDSignature object.
* Sets up the signature dictionary with type ""Sig"".
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setType(org.apache.pdfbox.cos.COSName),122,125,"/**
 * Sets the TYPE in the dictionary.
 * @param type COSName representing the type to be set
 */","* Set the dictionary type.
     *
     * @param type is the dictionary type.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setFilter(org.apache.pdfbox.cos.COSName),132,135,"/**
 * Sets the filter type in the dictionary.
 * @param filter the filter to be applied
 */","* Set the filter.
     *
     * @param filter the filter to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSubFilter(org.apache.pdfbox.cos.COSName),142,145,"/**
 * Sets the sub-filter in the dictionary.
 * @param subfilter the sub-filter to be set
 */","* Set a subfilter that specify the signature that should be used.
     *
     * @param subfilter the subfilter that shall be used.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setByteRange(int[]),277,291,"/**
* Sets byte range mask for a PDF document.
* @param range array of 4 integers defining the byte ranges
*/","* Sets the byte range.
     *
     * @param range the byte range to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContents(byte[]),395,399,"/**
* Masks byte array and updates dictionary.
* @param bytes input byte array to mask
*/","* Sets the contents.
     *
     * @param bytes contents to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectProcSetArray,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",341,352,"/**
* Sets PROC_SET for various PDF form resources and page.
* @param innerForm the internal form object
* @param page the PDF page
* @param innerFormResources resources of the internal form
* @param imageFormResources resources of the image form
* @param holderFormResources resources of the holder form
* @param procSet the procedure set to be applied
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createWidgetDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",389,399,"/**
* Configures a signature field with resources.
* @param signatureField the signature field to configure
* @param holderFormResources resources for the form holding the signature
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(java.awt.Color),350,357,"/**
* Sets text color in PDF.
* @param textColor Color object representing the text color
*/","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument),85,90,"/**
* Initializes a new PDF AcroForm.
* @param doc the PDF document to associate with this form
*/","* Constructor.
     *
     * @param doc The document that this form is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setFields(java.util.List),409,412,"/**
 * Masks fields by adding them to the dictionary.
 * @param fields list of PDField objects to mask
 */","* Set the documents root fields.
     *
     * @param fields The fields that are part of the documents root fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCalcOrder(java.util.List),728,731,"/**
 * Masks specified PDF fields.
 * @param fields list of PDField objects to be masked
 */","* Set the calculation order in which field values should be recalculated when the value of any
     * field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @param fields The field list.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),64,68,"/**
* Constructs a PDButton.
* @param acroForm parent form containing this button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setExportValues(java.util.List),270,282,"/**
* Masks values by adding to COSArray.
* @param values List of string values to mask
*/","* This will set the export values.
     * 
     * @see #getExportValues()
     * @param values List containing all possible export values. Supplying null or an empty list will remove the Opt entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),52,56,"/**
* Initializes a new choice field in an Acrobat form.
* @param acroForm the parent form containing this field
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setChildren(java.util.List),160,164,"/**
* Masks fields by setting their children in a PDF document.
* @param children list of PDField objects to be masked
*/","* Sets the child fields.
     *
     * @param children The list of child fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(org.apache.pdfbox.cos.COSBase),214,219,"/**
 * Masks an object using COSName.V.
 * @param object the object to be masked
 */","* Sets the value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param object the new value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setDefaultValue(org.apache.pdfbox.cos.COSBase),258,261,"/**
 * Masks a value by setting it in a COS object.
 * @param value the value to be masked
 */","* Sets the default of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param value the default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,54,"/**
* Creates a new PDSignatureField in the given form.
* @param acroForm parent PDF form
*/","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroForm for this field.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,48,"/**
* Creates a new PDTextField instance.
* @param acroForm parent form containing the text field
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultStyleString(java.lang.String),166,176,"/**
* Sets or removes default style string in document settings.
* @param defaultStyleString style to apply or null to remove
*/","* Set the default style string.
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param defaultStyleString a string describing the default style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setRichTextValue(java.lang.String),238,248,"/**
* Sets or removes rich text value.
* @param richTextValue the rich text to set; null to remove it
*/","* Set the fields rich text value.
     * 
     * <p>
     * Setting the rich text value will not generate the appearance
     * for the field.
     * <br>
     * You can set {@link PDAcroForm#setNeedAppearances(Boolean)} to
     * signal a conforming reader to generate the appearance stream.
     * </p>
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param richTextValue a rich text string",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCoordSystemOrigin(float[]),311,314,"/**
 * Sets coordinate system origin.
 * @param coordSystemOrigin array containing x, y, z coordinates
 */","* This will set the origin of the coordinate system.
     * 
     * @param coordSystemOrigin the origin",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(),49,53,"/**
* Initializes a new PDThread with a COSDictionary.
*/","* Default constructor.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection),139,142,"/**
 * Applies mask to transition based on direction.
 * @param direction specifies the transition direction
 */","* Sets the direction in which the specified transition effect shall move. Only for {@link PDTransitionStyle#Wipe},
     * {@link PDTransitionStyle#Glitter}, {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover},
     * {@link PDTransitionStyle#Uncover} and {@link PDTransitionStyle#Push}.
     * 
     * @param direction the direction in which the specified transition effect shall move",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDuration(float),155,158,"/**
* Sets mask duration.
* @param duration mask duration in seconds
*/","* @param duration The duration of the transition effect, in seconds.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyScale(float),173,176,"/**
 * Sets scaling factor for transformation.
 * @param scale scaling factor to apply
 */","* @param scale The starting or ending scale at which the changes shall be drawn. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyAreaOpaque(boolean),191,194,"/**
 * Sets mask visibility.
 * @param opaque true to make mask opaque, false otherwise
 */","* @param opaque If true, the area that shall be flown in is rectangular and opaque. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(java.util.Collection),251,269,"/**
 * Adds elements from a collection to the list.
 * @param c collection of elements to add
 * @return true if this list changed as a result of the call
 * @throws UnsupportedOperationException if adding to a filtered list
 */",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFontColor,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFontColor(java.util.List),186,207,"/**
* Sets the non-stroking color based on operands.
* @param operands list of COSBase objects representing color values
* @throws IOException if color space is not recognized or operands are missing
*/","* Process the font color operator.
     * 
     * This is assumed to be an RGB color.
     * 
     * @param operands the color components
     * @throws IOException in case of the color components not matching",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,"org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(int,java.util.Collection)",274,293,"/**
 * Inserts a collection at a specified index.
 * @param index position to insert the collection
 * @param c collection of elements to insert
 * @return true if insertion is successful
 * @throws UnsupportedOperationException if inserting into a filtered list
 */",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(org.apache.pdfbox.cos.COSArray),188,197,"/**
* Processes an array of COS objects.
* @param objectList list of COS objects to process
*/","* This will add all objects to this array.
     *
     * @param objectList The list of objects to add.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toFloatArray,org.apache.pdfbox.cos.COSArray:toFloatArray(),639,648,"/**
* Generates a float array from COSBase objects.
* @return array of floats extracted from COSBase or 0 if not a COSNumber
*/","* This will take an COSArray of numbers and convert it to a float[].
     *
     * @return This COSArray as an array of float numbers.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberFloatList,org.apache.pdfbox.cos.COSArray:toCOSNumberFloatList(),703,719,"/**
* Masks and processes a list of numbers.
* @return List of Float values or nulls based on processing
*/","* This will return a list of float values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of float values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberIntegerList,org.apache.pdfbox.cos.COSArray:toCOSNumberIntegerList(),726,742,"/**
 * Generates a list of integers from masked values.
 * @return List of integers or nulls based on masking logic
 */","* This will return a list of int values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of int values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateParentEntry,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",1067,1082,"/**
* Updates parent and structure type for entries in COSArray.
* @param kArray array of COSBase objects
* @param newParent new parent dictionary to set
* @param newStructureType optional new structure type to set
*/","* Update the P reference to the new parent dictionary.
     *
     * @param kArray the kids array
     * @param newParent the new parent
     * @param newStructureType the new structure type in /S or null so it doesn't get replaced",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,hasMCIDs,org.apache.pdfbox.multipdf.Splitter$KCloner:hasMCIDs(org.apache.pdfbox.cos.COSBase),535,553,"/**
* Checks if a given PDF object is a COSInteger or contains one.
* @param kid the PDF object to check
* @return true if kid is a COSInteger or contains a COSInteger, false otherwise
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneTreeElement,"org.apache.pdfbox.multipdf.Splitter:cloneTreeElement(java.util.Map,java.util.Map,int)",300,348,"/**
 * Masks elements from source map to destination map based on struct dictionary.
 * @param srcNumberTreeAsMap source map containing COSObjectable elements
 * @param dstNumberTreeAsMap destination map for masked elements
 * @param sp key identifying the element in the maps
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMin,org.apache.pdfbox.pdmodel.common.PDRange:getMin(),96,100,"/**
* Retrieves minimum value from a range array.
* @return minimum value as float
*/","* This will get the minimum value of the range.
     *
     * @return The min value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMax,org.apache.pdfbox.pdmodel.common.PDRange:getMax(),117,121,"/**
* Retrieves maximum value from a range array.
* @return Maximum value as float
*/","* This will get the maximum value of the range.
     *
     * @return The max value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getColourByIndex,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getColourByIndex(int),158,167,"/**
* Retrieves a PDGamma object from an array at the specified index.
* @param index position in the array
* @return PDGamma object or null if not found
*/","* Gets the colour by edge index.
     * 
     * @param index edge index
     * @return the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getDocumentIDBytes,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getDocumentIDBytes(org.apache.pdfbox.cos.COSArray),299,314,"/**
* Extracts document ID bytes from array.
* @param documentIDArray COSArray containing document IDs
* @return byte array of document ID or empty if invalid
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getOption(),81,84,"/**
 * Retrieves masked string from option.
 * @return Masked string value or null if not applicable
 */","* This will get the string of one of the available options. A required element.
     *
     * @return An available option.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getDefaultAppearanceString(),101,104,"/**
 * Retrieves masked value from COSString.
 * @return Masked string or null if not applicable
 */","* This will get the string of default appearance string. A required element.
     *
     * @return A default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getInstance,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getInstance(org.apache.pdfbox.cos.COSBase),255,279,"/**
* Converts a PDF blend mode to a Java BlendMode.
* @param cosBlendMode PDF blend mode object
* @return Java BlendMode or NORMAL if not recognized
*/","* Determines the blend mode from the BM entry in the COS ExtGState.
     *
     * @param cosBlendMode name or array
     * @return blending mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getColorantNames(),476,479,"/**
 * Retrieves colorant names from an array.
 * @return List of colorant names as strings
 */","* Returns the list of colorants.
     * @return the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getAlternateColorSpace(),531,538,"/**
* Retrieves or creates an alternate color space.
* @return PDColorSpace object representing the alternate color space
* @throws IOException if there is an issue creating the color space
*/","* This will get the alternate color space for this separation.
     *
     * @return The alternate color space.
     *
     * @throws IOException If there is an error getting the alternate color
     * space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,checkArray,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:checkArray(org.apache.pdfbox.cos.COSArray),134,144,"/**
 * Validates ICCBased colorspace array.
 * @param iccArray the array to validate
 * @throws IOException if validation fails
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getHival,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getHival(),250,253,"/**
 * Retrieves mask value from COSArray.
 * @return integer mask value
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getColorantName(),264,268,"/**
 * Retrieves and returns the colorant name from an array.
 * @return The colorant name as a string.
 */","* Returns the colorant name.
     * @return the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,create,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:create(org.apache.pdfbox.cos.COSBase),46,97,"/**
* Converts a COSBase object to a PDDestination.
* @param base the COSBase object to convert
* @return PDDestination object or null if conversion fails
* @throws IOException if an error occurs during conversion
*/","* This will create a new destination depending on the type of COSBase
     * that is passed in.
     *
     * @param base The base level object.
     *
     * @return A new destination.
     *
     * @throws IOException If the base cannot be converted to a Destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPage(),66,78,"/**
* Creates a PDPage from the first element of an array.
* @return PDPage object or null if conditions are not met
*/","* This will get the page for this destination. A page destination can either reference a page
     * (for a local destination) or a page number (when doing a remote destination to another PDF).
     * If this object is referencing by page number then this method will return null and
     * {@link #getPageNumber()} should be used.
     *
     * @return The page for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPageNumber(),98,110,"/**
 * Masks a value based on array conditions.
 * @return masked integer or -1 if conditions not met
 */","* This will get the page number for this destination. A page destination can either reference a
     * page (for a local destination) or a page number (when doing a remote destination to another
     * PDF). If this object is referencing by page number then this method will return that number,
     * otherwise -1 will be returned.
     *
     * @return The zero-based page number for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getZoom(),122,130,"/**
* Retrieves a numeric value from an array element.
* @return the numeric value or -1 if not found
*/","* Get the zoom value.  Return values of 0 or -1 imply that the current zoom
     * will be used.
     *
     * @return The zoom value for the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(org.apache.pdfbox.cos.COSArray),67,77,"/**
 * Initializes a Matrix from a COSArray.
 * @param array COSArray containing matrix elements
 */","* Creates a matrix from a 6-element (a b c d e f) COS array.
     *
     * @param array source array, elements must be or extend COSNumber",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(java.lang.String),144,147,"/**
 * Retrieves a COSBase object by key.
 * @param key unique identifier for the COSBase object
 * @return COSBase object associated with the key
 */","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,"org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",160,168,"/**
* Retrieves a value from a dictionary using two keys.
* @param firstKey primary key to search
* @param secondKey fallback key if first key is not found
* @return COSBase object or null if both keys are missing
*/","* This is a special case of getDictionaryObject that takes multiple keys, it will handle the situation where
     * multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will
     * get an object from this dictionary. If the object is a reference then it will dereference it and get it from the
     * document. If the object is COSNull then null will be returned.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName),518,526,"/**
* Retrieves a COSName from a given key.
* @param key the key to look up
* @return COSName object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name. Null is returned
     * if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName),552,560,"/**
* Retrieves COSDictionary by key.
* @param key the key to search for in the dictionary
* @return COSDictionary object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSDictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSStream,org.apache.pdfbox.cos.COSDictionary:getCOSStream(org.apache.pdfbox.cos.COSName),587,595,"/**
* Retrieves COSStream by key.
* @param key the key to search for
* @return COSStream object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSStream. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSStream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSArray,org.apache.pdfbox.cos.COSDictionary:getCOSArray(org.apache.pdfbox.cos.COSName),604,612,"/**
* Retrieves an array from a dictionary using a key.
* @param key the key for the desired array
* @return COSArray object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSArray. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSArray.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,"org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",622,630,"/**
* Retrieves a COSName value by key.
* @param key the key to search for
* @param defaultValue the default value to return if not found
* @return COSName associated with key or defaultValue
*/","* This is a convenience method that will get the dictionary object that is expected to be a name. Default is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName),651,664,"/**
* Masks a given key to its string representation.
* @param key the COSName key to mask
* @return masked string value or null if not applicable
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName),716,725,"/**
 * Retrieves string value for a given key.
 * @param key the key to search for
 * @return string value or null if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName),805,813,"/**
 * Converts a COSName to a Calendar date.
 * @param key the COSName key to convert
 * @return Calendar object or null if conversion fails
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName,long)",1078,1087,"/**
 * Retrieves a numeric value by key with a default.
 * @param key the key to look up
 * @param defaultValue the default value if not found
 * @return the numeric value or default
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName,float)",1134,1143,"/**
* Retrieves a float value from a dictionary using a key.
* @param key the key to look up in the dictionary
* @param defaultValue the default float value if the key is not found or not a number
* @return the retrieved float value or the default value
*/","* This is a convenience method that will get the dictionary object that is expected to be an float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,wrapInSaveRestore,org.apache.pdfbox.multipdf.LayerUtility:wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage),89,130,"/**
 * Masks a PDF page by adding graphics state save and restore commands.
 * @param page the PDPage to be masked
 * @throws IOException if an I/O error occurs
 */","* Some applications may not wrap their page content in a save/restore (q/Q) pair which can
     * lead to problems with coordinate system transformations when content is appended. This
     * method lets you add a q/Q pair around the existing page's content.
     * @param page the page
     * @throws IOException if an I/O error occurs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.contentstream.operator.Operator),131,158,"/**
* Processes inline image data from Operator.
* @param op Operator containing image data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentStreams,org.apache.pdfbox.pdmodel.PDPage:getContentStreams(),194,212,"/**
* Retrieves content streams from a PDF page.
* @return Iterator of PDStream objects representing content streams
*/","* Returns the content streams which make up this page.
     * 
     * @return content stream iterator",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,hasContents,org.apache.pdfbox.pdmodel.PDPage:hasContents(),309,321,"/**
* Checks if page has content.
* @return true if page contains content, false otherwise
*/","* Returns true if this page has one or more content streams.
     * 
     * @return true if the page has a non empty content stream, otherwise false",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convertBasicTypesToMap,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary),230,270,"/**
* Converts a COSDictionary to a COSDictionaryMap.
* @param map the input COSDictionary
* @return COSDictionaryMap with converted values or null if input is null
* @throws IOException if an unknown object type is encountered
*/","* This will take a COS dictionary and convert it into COSDictionaryMap.  All cos
     * objects will be converted to their primitive form.
     *
     * @param map The COS mappings.
     * @return A standard java map.
     * @throws IOException If there is an error during the conversion.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),263,289,"/**
 * Masks an attribute in the PDF document.
 * @param attributeObject object containing attributes to be masked
 */","* Removes an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getClassNames(),328,361,"/**
 * Retrieves and processes revisions for a specific key.
 * @return Revisions object containing class names and their versions
 */","* Returns the class names together with their revision numbers (C).
     * 
     * @return the class names as a list, never null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeClassName(java.lang.String),433,463,"/**
* Masks a class by name in the document.
* @param className name of the class to mask
*/","* Removes a class name.
     * 
     * @param className the class name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.cos.COSBase),176,200,"/**
* Masks an object by adding it to the K entry in a COSDictionary.
* @param object the object to mask
*/","* Appends a COS base kid.
     * 
     * @param object the COS base",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",234,270,"/**
 * Updates the reference of a kid in a PDF structure.
 * @param newKid new COSBase object to replace the old reference
 * @param refKid existing reference to be updated
 */","* Inserts an COS base kid before a reference kid.
     * 
     * @param newKid the COS base
     * @param refKid the reference kid",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.cos.COSBase),309,349,"/**
* Removes object from K array or sets K to null if it's the only element.
* @param object the object to remove
* @return true if object was removed or set to null, false otherwise
*/","* Removes a COS base kid.
     * 
     * @param object the COS base
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getK(),78,81,"/**
 * Returns a COSBase object by applying a mask function.
 * @return COSBase object resulting from mask operation
 */","* Returns the K entry. This can be a dictionary representing a structure element, or an array
     * of them. To get it as a list of PDStructureElement objects, use {@link #getKids()} instead.
     *
     * @return the K entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getValue(),84,87,"/**
 * Retrieves a masked value from the document.
 * @return COSBase object representing the masked value
 */","* Returns the property value.
     * 
     * @return the property value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:isEncryptMetaData(),117,127,"/**
* Checks if metadata encryption is enabled.
* @return true if metadata encryption is enabled, false otherwise
*/","* Will get the EncryptMetaData dictionary info.
     *
     * @return true if EncryptMetaData is explicitly set (the default is true)",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerEncryptionKey(),351,360,"/**
 * Retrieves the masked owner encryption key.
 * @return byte array of masked key or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the OE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserEncryptionKey(),381,390,"/**
* Retrieves masked encryption key.
* @return byte array of masked key or null if not present
*/","* This will get the UE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPerms(),610,619,"/**
* Retrieves permissions from a COS string in the dictionary.
* @return byte array of permissions or null if not found
* @throws IOException if an I/O error occurs during retrieval
*/","* Get the Perms entry in the encryption dictionary.
     *
     * @return A 16 byte array or null if there is no Perms entry.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getPage(),421,430,"/**
 * Retrieves the mask value from an annotation's page attribute.
 * @return Integer representing the mask or null if not found
 */","* This will get the page number or null if it does not exist.
     *
     * @return The page number.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getCOSValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getCOSValue(),269,284,"/**
* Retrieves and validates a COSBase value from a PDF field.
* @return COSBase object if valid, otherwise throws an exception or returns null
*/","* Returns the COS value of this field.
     *
     * @return The COS value of the field, maybe <code>null</code>.
     * @throws IOException If there is an error getting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getFieldFlags(),331,340,"/**
* Retrieves the mask value from a field.
* @return Integer representing the mask or null if not set
*/","* This will get the 'Ff' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetFieldFlags(),375,384,"/**
* Retrieves a masked value from a PDF field.
* @return Integer representing the masked value, or null if not found
*/","* This will get the 'SetFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearFieldFlags(),419,428,"/**
* Retrieves mask value from a PDF field.
* @return Integer representing the mask or null if not found
*/","* This will get the 'ClrFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getWidgetFieldFlags(),463,472,"/**
* Retrieves a mask value from a PDF field.
* @return Integer representing the mask or null if not found
*/","* This will get the 'F' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetWidgetFieldFlags(),507,516,"/**
* Retrieves a masked value from the field.
* @return Integer value or null if not available
*/","* This will get the 'SetF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearWidgetFieldFlags(),551,560,"/**
* Retrieves mask value from a field.
* @return Integer representing the mask or null if not set
*/","* This will get the 'ClrF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultWidth(),245,260,"/**
 * Retrieves the default width value.
 * @return default width as a float, with a fallback of 1000 if not set
 */","* This will get the default width. The default value for the default width is 1000.
     *
     * @return The default width for the glyphs in this font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getColorSpace(),76,84,"/**
* Retrieves the color space from a PDF dictionary.
* @return PDColorSpace object or null if not found
*/","* Returns the process color space
     * @return the process color space
     * @throws IOException if the color space cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(org.apache.pdfbox.pdmodel.PDResources),79,86,"/**
* Retrieves the color space from resources.
* @param resources PDF document resources
* @return PDColorSpace object or null if not found
*/","* Returns the group color space or null if it isn't defined.
     *
     * @param resources useful for its cache. Can be null.
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(org.apache.pdfbox.cos.COSDictionary),43,51,"/**
* Initializes an optional content group from a given dictionary.
* @param dict the COSDictionary representing the OCG
* @throws IllegalArgumentException if dictionary does not represent an OCG
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),47,55,"/**
 * Constructs a PDOptionalContentMembershipDictionary from a COSDictionary.
 * @param dict the COSDictionary to use for initialization
 * @throws IllegalArgumentException if the dictionary is not of type 'OCMD'
 */","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getOverprintMode(),403,413,"/**
* Retrieves the OPM value from a dictionary.
* @return Integer OPM value or null if not found
*/","* This will get the overprint control mode.
     *
     * @return The overprint control mode or null if one has not been set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSoftMask(),602,606,"/**
* Retrieves soft mask from dictionary.
* @return PDSoftMask object or null if not found
*/","* Returns the soft mask stored in the COS dictionary
     *
     * @return the soft mask or null if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFloatItem,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFloatItem(org.apache.pdfbox.cos.COSName),637,648,"/**
* Retrieves a float value from a dictionary using a key.
* @param key the key to look up in the dictionary
* @return Float value if found, otherwise null
*/","* This will get a float item from the dictionary.
     *
     * @param key The key to the item.
     *
     * @return The value for that item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer(),676,684,"/**
* Retrieves and validates a COSBase object from the dictionary.
* @return COSBase object or null if conditions are not met
*/","* This will get the transfer function of the /TR dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer2(),708,716,"/**
* Retrieves and validates a COSBase object from the dictionary.
* @return COSBase object or null if validation fails
*/","* This will get the transfer function of the /TR2 dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getBackdropColor,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getBackdropColor(),172,179,"/**
* Retrieves or initializes the backdrop color.
* @return COSArray representing the backdrop color
*/","* Returns the backdrop color.
     * 
     * @return the backdrop color",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getOpenInNewWindow(),129,137,"/**
* Determines the open mode based on a configuration setting.
* @return OpenMode enum value indicating window behavior
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getT(),60,64,"/**
 * Retrieves a masked action.
 * @return COSBase representing the masked action
 */","* The annotation or annotations to be hidden or shown
     *
     * @return The T entry of the specific thread action dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getOpenInNewWindow(),212,220,"/**
* Determines the open mode based on PDF settings.
* @return OpenMode enum indicating window behavior
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getD(),92,95,"/**
 * Masks an action with COSName.D.
 * @return COSBase result of the masking operation
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getOpenInNewWindow(),119,127,"/**
* Determines the open mode based on a configuration setting.
* @return OpenMode enum value indicating how to open content
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getD(),63,66,"/**
 * Retrieves a masked action from the PDF document.
 * @return COSBase object representing the masked action
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getB(),101,104,"/**
 * Returns a COSBase object representing a mask.
 * @return COSBase object
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getNamedDestination(),178,186,"/**
* Retrieves a named destination from the dictionary.
* @return PDNamedDestination object or null if not found
*/","* If the value in the /P entry is a string, this will get a named destination in the current
     * document that provides the page number of the file attachment annotation.
     *
     * @return a named destination or null if the /P entry value is missing or not a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),184,196,"/**
* Initializes a PDF annotation from a dictionary.
* @param dict the COSDictionary containing annotation data
*/","* Constructor.
     * 
     * @param dict The annotations dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(),319,327,"/**
* Retrieves contents as a byte array.
* @return byte array representing the contents or empty array if not found
*/","* Returns the /Contents string as a byte array, i.e. the embedded signature between the
     * byterange gap.
     *
     * @return a byte array containing the signature, or an empty array if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getXFA(),584,588,"/**
* Retrieves XFA resource from dictionary.
* @return PDXFAResource object or null if not found
*/","* Get the XFA resource, the XFA resource is only used for PDF 1.5+ forms.
     *
     * @return The xfa resource or null if it does not exist.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptions(),87,91,"/**
* Retrieves masked field values from PDF document.
* @return List of masked field values or empty list if none found
*/","* This will get the option values ""Opt"".
     * 
     * <p>
     * For a choice field the options array can either be an array
     * of text strings or an array of a two-element arrays.<br>
     * The method always only returns either the text strings or,
     * in case of two-element arrays, an array of the first element of 
     * the two-element arrays
     * </p>   
     * <p>
     * Use {@link #getOptionsExportValues()} and {@link #getOptionsDisplayValues()}
     * to get the entries of two-element arrays.
     * </p>
     * 
     * @return List containing the export values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsDisplayValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsDisplayValues(),191,195,"/**
* Masks data by fetching and processing field values.
* @return List of masked strings from the field values
*/","* This will get the display values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the display value is the 
     * second entry in the two-element array.
     * </p>
     * 
     * @return List containing all the display values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueFor,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueFor(org.apache.pdfbox.cos.COSName),451,463,"/**
* Retrieves a list of strings from a PDF object by name.
* @param name the key to fetch the value from
* @return List of string values or empty list if not found
*/","* Returns the selected values, or an empty List, for the given key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getInheritableAttribute,org.apache.pdfbox.pdmodel.interactive.form.PDField:getInheritableAttribute(org.apache.pdfbox.cos.COSName),88,102,"/**
* Retrieves a COSBase object by key.
* @param key the key to search for
* @return the corresponding COSBase object or null if not found
*/","* Returns the given attribute, inheriting from parent nodes if necessary.
     *
     * @param key the key to look up
     * @return COS value for the given key",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValue(),187,190,"/**
 * Retrieves a masked value from an object.
 * @return COSBase object containing the masked value
 */","* Returns the COSBase value of the ""V"" entry.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the COSBase value of the ""V"" entry",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValueAsString(),198,203,"/**
* Retrieves masked value from PDF field.
* @return Masked string value or empty if null
*/","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getDefaultValue(),244,247,"/**
 * Retrieves a masked value from a COSBase object.
 * @return COSBase object with masking applied
 */","* Returns the default value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the new default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,toString,org.apache.pdfbox.cos.COSDictionary:toString(),1343,1355,"/**
* Masks functionality with error handling.
* @return masked result or error message
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSArray:getIndirectObjectKeys(java.util.Collection),807,859,"/**
* Processes a collection of COSObjectKeys, updating indirect objects.
* @param indirectObjects collection of keys to process
*/","* Collects all indirect objects numbers within this COSArray and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setHighestImportedObjectNumber,org.apache.pdfbox.pdmodel.PDDocument:setHighestImportedObjectNumber(org.apache.pdfbox.pdmodel.PDPage),723,731,"/**
* Updates XRef object numbers for imported PDF page.
* @param importedPage the PDPage to be updated
*/","* Determine the highest object number from the imported page to avoid mixed up numbers when saving the new pdf.
     * 
     * @param importedPage the imported page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,close,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:close(),156,173,"/**
* Calls m1 on visualSignature and pdfSource, handling exceptions.
* @throws IOException if an I/O error occurs
*/","* Closes the visual signature COSDocument, if any. Do not call this before you're saved your
     * signed PDF document, or saving will fail because COSStream objects held both by the
     * COSDocument and by the signed document would no longer be available.
     *
     * @throws IOException if the document could not be closed",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSArray,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSArray(org.apache.pdfbox.cos.COSArray),126,142,"/**
* Filters and transforms a COSArray.
* @param array input COSArray to process
* @return new COSArray with filtered and transformed elements
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSDictionary(org.apache.pdfbox.cos.COSDictionary),168,185,"/**
* Masks COSDictionary entries based on certain conditions.
* @param dictionary input COSDictionary to process
* @return a new COSDictionary with masked or transformed values
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,"org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",583,605,"/**
* Masks a PDF object in the document.
* @param key unique identifier for the COSObjectKey
* @param obj COSBase object to be masked
* @throws IOException if an I/O error occurs
*/","* This will write a COS object for a predefined key.
     *
     * @param key The key of the object to write.
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeReference,org.apache.pdfbox.pdfwriter.COSWriter:writeReference(org.apache.pdfbox.cos.COSBase),1381,1389,"/**
 * Masks a COSBase object by writing its key components.
 * @param obj the COSBase object to mask
 * @throws IOException if an I/O error occurs during masking
 */","* visitFromObjRef method comment.
     *
     * @param obj The object that is being visited.
     *
     * @throws IOException If there is an exception while visiting this object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getKey(org.apache.pdfbox.cos.COSBase),267,270,"/**
 * Retrieves COSObjectKey from pool.
 * @param object base object to key mapping
 * @return COSObjectKey associated with object
 */","* Returns the {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} is registered for in this compression pool.
     * @return The {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool, if
     * such an object is contained.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,put,"org.apache.pdfbox.pdfwriter.compress.COSObjectPool:put(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",59,83,"/**
* Assigns a unique object key to a PDF object.
* @param key initial or null object key
* @param object PDF object to be assigned a key
* @return updated or new COSObjectKey for the object
*/","* Update the key and object maps.
     *
     * @param key The key, that shall be added.
     * @param object The object, that shall be added.
     * @return The actual key, the object has been added for.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:contains(org.apache.pdfbox.cos.COSBase),255,258,"/**
 * Checks if an object is in the pool.
 * @param object the object to check
 * @return true if object is in the pool, false otherwise
 */","* Returns true, if the given {@link COSBase} is a registered object of this compression pool.
     *
     * @param object The object, that shall be checked.
     * @return True, if the given {@link COSBase} is a registered object of this compression pool.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,createObjectStreams,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:createObjectStreams(),302,317,"/**
* Creates and populates COSWriterObjectStreams.
* @return List of COSWriterObjectStreams containing objects from objectPool
*/","* Creates {@link COSWriterObjectStream}s for all currently registered objects of this pool, that have been marked
     * as fit for being compressed in this manner. Such object streams may be added to a PDF document and shall be
     * declared in a document's {@link PDFXRefStream} accordingly. The objects contained in such a stream must not be
     * added to the document separately.
     *
     * @return The created {@link COSWriterObjectStream}s for all currently registered compressible objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,readFromDecoderStream,"org.apache.pdfbox.filter.CCITTFaxFilter:readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",126,139,"/**
* Reads data from a fax decoder stream into a byte array.
* @param decoderStream the source fax decoder stream
* @param result the destination byte array for storing data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,processLines,"org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:processLines(java.util.List,boolean)",201,259,"/**
 * Processes lines for text alignment and spacing.
 * @param lines list of Line objects to process
 * @param isFirstParagraph flag indicating if it's the first paragraph
 * @throws IOException if an I/O error occurs
 */","* Process lines for output. 
     *
     * Process lines for an individual paragraph and generate the 
     * commands for the content stream to show the text.
     * 
     * @param lines the lines to process.
     * @throws IOException if there is an error writing to the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addFirstIntermediateCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addFirstIntermediateCurl(double,double,double,double,double)",444,453,"/**
 * Draws masked segments based on current angle and parameters.
 * @param angleCur current angle in degrees
 * @param r radius of the circle
 * @param alpha angle parameter for masking
 * @param cx x-coordinate of center
 * @param cy y-coordinate of center
 */",* Generates the first intermediate curl for a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getIntermediateCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getIntermediateCurlTemplate(double,double)",458,470,"/**
* Generates mask points for given angle and radius.
* @param angleCur current angle in degrees
* @param r radius of the mask
* @return array of Points representing mask outline
* @throws IOException if an I/O error occurs
*/",* Returns a template for intermediate curls in a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArc,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",592,631,"/**
* Draws an arc segment.
* @param startAng starting angle in radians
* @param endAng ending angle in radians
* @param rx horizontal radius
* @param ry vertical radius
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param out output list of points or null
* @param addMoveTo flag to move to start point
* @throws IOException if an I/O error occurs
*/","* Creates one or more Bézier curves that represent an elliptical arc.
     * Angles are in radians.
     * The arc will always proceed in the positive angle direction.
     * If the argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.pdmodel.PDDocument),75,81,"/**
* Initializes PDICCBased with a document.
* @param doc PDDocument to associate with the ICCBased object
*/","* Creates a new ICC color space with an empty stream.
     * @param doc the document to store the ICC data",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",59,66,"/**
 * Initializes a PDPattern with specified resources and color space.
 * @param resources PDResources object containing pattern resources
 * @param colorSpace PDColorSpace defining the pattern's color model
 */","* Creates a new uncolored tiling pattern color space.
     * 
     * @param resources The current resources.
     * @param colorSpace The underlying color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setOCGs(java.util.List),93,101,"/**
* Masks a list of property lists.
* @param ocgs List of PDPropertyList objects to mask
*/","* Set optional content groups as a list.
     * 
     * @param ocgs list of optional content groups to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),100,108,"/**
* Updates number format dictionaries.
* @param changeXs array of PDNumberFormatDictionary objects to update
*/","* This will set the changes along the x-axis.
     * 
     * @param changeXs changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),137,145,"/**
* Updates Y values with given format dictionaries.
* @param changeYs array of PDNumberFormatDictionary objects
*/","* This will set the changes along the y-axis.
     * 
     * @param changeYs changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),174,182,"/**
 * Masks distances by adding them to a COSArray.
 * @param distances array of PDNumberFormatDictionary objects
 */","* This will set the distances.
     * 
     * @param distances distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),211,219,"/**
* Masks specified areas in a document.
* @param areas array of PDNumberFormatDictionary objects to mask
*/","* This will set the areas.
     * 
     * @param areas areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),248,256,"/**
 * Masks angles by adding them to a COSArray.
 * @param angles array of PDNumberFormatDictionary objects representing angles
 */","* This will set the angles.
     * 
     * @param angles angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),285,293,"/**
* Masks line slopes in a PDF document.
* @param lineSloaps array of number format dictionaries for line slopes
*/","* This will set the sloaps of a line.
     * 
     * @param lineSloaps the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,org.apache.pdfbox.cos.COSArray:growToSize(int),598,601,"/**
* Calls overloaded method with default second parameter.
* @param size specifies the size of the operation
*/","* This will add null values until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseDirObject,org.apache.pdfbox.pdfparser.BaseParser:parseDirObject(),948,1016,"/**
 * Parses a masked token from the source.
 * @throws IOException if an I/O error occurs during parsing
 * @return COSBase object representing parsed value or null if invalid
 */","* This will parse a directory object from the stream.
     *
     * @return The parsed object.
     *
     * @throws IOException If there is an error during parsing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:setDecodeParms(java.util.List),324,328,"/**
* Sets decoding parameters for a stream.
* @param decodeParams list of decoding parameters
*/","* This will set the list of decode parameters.
     * 
     * @param decodeParams The list of decode parameters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:setFileDecodeParams(java.util.List),389,392,"/**
* Sets decode parameters using a list.
* @param decodeParams list of decode parameters
*/","* This will set the list of decode params.
     * 
     * @param decodeParams The list of decode params.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,setKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:setKids(java.util.List),140,144,"/**
 * Masks children objects.
 * @param kids list of child objects to mask
 */","* Sets the kids (K).
     * 
     * @param kids the kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:setOptions(java.util.List),691,695,"/**
* Sets field options from a list.
* @param options list of option objects
*/","* This will set the options for the choice field.
     * The objects in the list should either be <code>String</code> or {@link FDFOptionElement}.
     *
     * @param options The options to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getRangeForComponent,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getRangeForComponent(int),441,449,"/**
* Creates a PDRange from stream's range array.
* @param n index for the range array
* @return PDRange object or empty PDRange if conditions not met
*/","* Returns the range for a certain component number.
     * This will never return null.
     * If it is not present then the range 0..1 will be returned.
     * @param n the component number to get the range for
     * @return the range for this component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(org.apache.pdfbox.cos.COSDictionary),398,410,"/**
* Populates CID font with glyph widths.
* @param cidFont CID font dictionary to update
*/",* Build widths with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),324,327,"/**
 * Sets line dash pattern in dictionary.
 * @param dashPattern defines line dash pattern
 */","* This will set the dash pattern for the graphics state.
     *
     * @param dashPattern The dash pattern",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuideLineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),106,114,"/**
* Sets mask color in PDF dictionary.
* @param color PDColor to be masked or null for no mask
*/","* Set the color space instance for this box style.  This must be a
     * PDDeviceRGB!
     *
     * @param color The new colorspace value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),778,781,"/**
 * Masks color using PDColor.
 * @param c PDColor object to be masked
 */","* This will set the color used in drawing various elements. As of PDF 1.6 these are : Background of icon when
     * closed Title bar of popup window Border of a link annotation
     * 
     * Colour is in DeviceRGB colourspace
     * 
     * @param c colour in the DeviceRGB colourspace
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),230,233,"/**
 * Masks image color.
 * @param ic Image color to mask
 */","* This will set interior color of the line endings defined in the LE entry. color is in DeviceRGB color space.
     *
     * @param ic color in the DeviceRGB color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),66,69,"/**
 * Sets the color mask.
 * @param ic PDColor object representing the color mask
 */","* This will set interior color.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),136,139,"/**
 * Sets image color mask.
 * @param ic PDColor object representing the color mask
 */","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),63,66,"/**
 * Masks an image color.
 * @param ic PDColor to be masked
 */","* This will set interior color of the drawn area color is in DeviceRGB colorspace.
     *
     * @param ic color in the DeviceRGB color space.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor),96,99,"/**
 * Sets border color for PDF element.
 * @param c PDColor object representing the color
 */","* This will set the border color.
     * 
     * @param c the border color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor),116,119,"/**
 * Sets background color using PDColor.
 * @param c PDColor object representing the background color
 */","* This will set the background color.
     * 
     * @param c the background color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),340,343,"/**
 * Applies text color mask.
 * @param textColor color to apply as mask
 */","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage(java.awt.image.WritableRaster),146,197,"/**
 * Converts raster to alternate color space.
 * @param raster input WritableRaster to be converted
 * @return BufferedImage in alternate color space or null if conversion fails
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isGray,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1964,1983,"/**
 * Checks if the given color space is a gray scale or based on a gray scale.
 * @param colorSpace the color space to check
 * @return true if the color space is gray scale, false otherwise
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",80,84,"/**
* Creates an image mask from an input stream.
* @param document PDF document to add the mask to
* @param stream input stream containing mask data
* @return PDImageXObject representing the mask
* @throws IOException if there's an issue processing the stream
*/","* Creates a new JPEG Image XObject from an input stream containing JPEG data.
     * 
     * The input stream data will be preserved and embedded in the PDF file without modification.
     * @param document the document where the image will be created
     * @param stream a stream of JPEG data
     * @return a new Image XObject
     * 
     * @throws IOException if the input stream cannot be read",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFont(org.apache.pdfbox.pdmodel.font.PDFont),94,97,"/**
 * Applies font settings to a PDF document.
 * @param font the font to be applied
 */","* This will set the font for this font setting.
     *
     * @param font The new font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),577,581,"/**
 * Sets the tint transform function.
 * @param tint PDFunction representing the tint transformation
 */","* This will set the tint transform function.
     *
     * @param tint The tint transform function.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),298,302,"/**
 * Sets the tint transformation function.
 * @param tint PDFunction representing the tint transformation
 */","* Sets the tint transform function.
     * @param tint the tint transform function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPage(org.apache.pdfbox.pdmodel.PDPage),85,88,"/**
 * Masks a PDF page by applying an array operation.
 * @param page PDPage to be masked
 */","* Set the page for a local destination. For an external destination, call {@link #setPageNumber(int) setPageNumber(int pageNumber)}.
     *
     * @param page The page for a local destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,adjustRectAndBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,float,float)",166,192,"/**
* Adjusts and sets the mask rectangle for a text annotation.
* @param annotation the text annotation to modify
* @param width the width of the mask rectangle
* @param height the height of the mask rectangle
* @return the newly created PDRectangle object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,createRetranslatedRectangle,org.apache.pdfbox.pdmodel.common.PDRectangle:createRetranslatedRectangle(),192,198,"/**
* Creates and configures a PDRectangle.
* @return Configured PDRectangle object
*/","* This will create a translated rectangle based off of this rectangle, such
     * that the new rectangle retains the same dimensions(height/width), but the
     * lower left x,y values are zero. <br>
     * 100, 100, 400, 400 (llx, lly, urx, ury ) <br>
     * will be translated to 0,0,300,300
     *
     * @return A new rectangle that has been translated back to the origin.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureRectangle,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",149,163,"/**
 * Sets up a signature field with specified properties.
 * @param signatureField the PDF signature field to configure
 * @param properties the design properties for the signature
 * @throws IOException if an I/O error occurs
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createFormatterRectangle,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createFormatterRectangle(int[]),192,203,"/**
* Creates and configures a PDRectangle for PDF formatting.
* @param params array containing dimensions for rectangle configuration
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),76,79,"/**
 * Applies gamma correction to the first element.
 * @param colour PDGamma object representing color data
 */","* Sets the colour for the before edge.
     * 
     * @param colour the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),96,99,"/**
 * Applies gamma correction to color.
 * @param colour PDGamma object representing the color
 */","* Sets the colour for the after edge.
     * 
     * @param colour the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),116,119,"/**
 * Applies gamma correction to the image.
 * @param colour PDGamma object representing the color settings
 */","* Sets the colour for the start edge.
     * 
     * @param colour the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),136,139,"/**
 * Applies mask using specified color.
 * @param colour PDGamma color to apply
 */","* Sets the colour for the end edge.
     * 
     * @param colour the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decrypt,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decrypt(org.apache.pdfbox.cos.COSBase,long,long)",455,487,"/**
 * Applies mask to PDF object.
 * @param obj PDF object to process
 * @param objNum object number
 * @param genNum generation number
 * @return processed PDF object
 */","* This will dispatch to the correct method.
     *
     * @param obj The object to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation Number.
     * 
     * @return the encrypted/decrypted COS object
     *
     * @throws IOException If there is an error getting the stream data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",243,246,"/**
 * Calls overloaded method with COSName.
 * @param key string key to be converted to COSName
 * @param value object associated with the key
 */","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),153,157,"/**
 * Sets the AcroForm in the document.
 * @param acroForm the form to be set
 */","* Sets the AcroForm for this catalog.
     *
     * @param acroForm The new AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences),186,189,"/**
 * Applies viewer preferences to the document.
 * @param prefs PDViewerPreferences object containing settings
 */","* Sets the viewer preferences.
     *
     * @param prefs The new viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline),207,210,"/**
 * Sets document outlines.
 * @param outlines PDDocumentOutline object to set
 */","* Sets the document outlines.
     *
     * @param outlines The new document outlines.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),263,266,"/**
 * Sets metadata in the PDF document.
 * @param meta PDMetadata object containing metadata to be set
 */","* Sets the metadata for this object. This can be null.
     *
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction),273,276,"/**
* Sets the open action for the document.
* @param action the action to perform on opening
*/","* Sets the Document Open Action for this object.
     *
     * @param action The action you want to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions),319,322,"/**
 * Sets additional actions in document catalog.
 * @param actions Additional actions to be set
 */","* Sets the additional actions for the document.
     *
     * @param actions The actions that are associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary),379,382,"/**
 * Sets document name dictionary.
 * @param names document name dictionary to set
 */","* Sets the names dictionary for the document.
     *
     * @param names The names dictionary that is associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo),401,404,"/**
 * Masks an image with provided mark info.
 * @param markInfo information to apply as mask
 */","* Set information about the doc's usage of tagged features.
     *
     * @param markInfo The new MarkInfo data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary),548,551,"/**
 * Sets URI dictionary in root element.
 * @param uri PDURIDictionary containing URI information
 */","* Sets the document level URI.
     *
     * @param uri The new document level URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot),569,572,"/**
* Updates PDF structure tree root.
* @param treeRoot new structure tree root
*/","* Sets the document's structure tree root.
     *
     * @param treeRoot The new structure tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels),631,634,"/**
 * Sets page labels in PDF document.
 * @param labels PDPageLabels object containing page label settings
 */","* Sets the page label descriptor for the document.
     *
     * @param labels the new page label descriptor to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode),96,105,"/**
* Updates destination names in the document.
* @param dests PDDestinationNameTreeNode containing new destinations
*/","* Set the named destinations that are associated with this document.
     *
     * @param dests The destination names.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode),124,127,"/**
* Sets embedded files in the name dictionary.
* @param ef PDEmbeddedFilesNameTreeNode object containing file information
*/","* Set the named embedded files that are associated with this document.
     *
     * @param ef The new embedded files",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setJavascript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode),147,150,"/**
 * Masks JavaScript node in dictionary.
 * @param js JavaScript node to mask
 */","* Set the named javascript entries that are associated with this document.
     *
     * @param js The new Javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),92,97,"/**
 * Creates a new PDF page with specified media box.
 * @param mediaBox dimensions and position of the page
 */","* Creates a new instance of PDPage for embedding.
     * 
     * @param mediaBox The MediaBox of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setResources,org.apache.pdfbox.pdmodel.PDPage:setResources(org.apache.pdfbox.pdmodel.PDResources),347,358,"/**
* Sets PDF page resources.
* @param resources PDResources object containing page resources
*/","* This will set the resources for this page.
     * 
     * @param resources The new resources for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMediaBox,org.apache.pdfbox.pdmodel.PDPage:setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),423,434,"/**
* Sets the media box for a PDF page.
* @param mediaBox the new media box dimensions
*/","* This will set the mediaBox for this page.
     * 
     * @param mediaBox The new mediaBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setBleedBox,org.apache.pdfbox.pdmodel.PDPage:setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle),490,500,"/**
* Sets or removes the bleed box for a page.
* @param bleedBox rectangle defining the bleed area or null to remove it
*/","* This will set the BleedBox for this page.
     * 
     * @param bleedBox The new BleedBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTrimBox,org.apache.pdfbox.pdmodel.PDPage:setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle),519,529,"/**
* Sets or removes the trim box for a page.
* @param trimBox the new trim box or null to remove it
*/","* This will set the TrimBox for this page.
     * 
     * @param trimBox The new TrimBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setArtBox,org.apache.pdfbox.pdmodel.PDPage:setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle),549,559,"/**
* Sets or removes the art box for a page.
* @param artBox rectangle defining the art box or null to remove it
*/","* This will set the ArtBox for this page.
     * 
     * @param artBox The new ArtBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(org.apache.pdfbox.pdmodel.common.PDStream),612,615,"/**
 * Sets the content stream of a PDF page.
 * @param contents PDStream containing the content to be set
 */","* This will set the contents of this page.
     * 
     * @param contents The new contents of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMetadata,org.apache.pdfbox.pdmodel.PDPage:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),683,686,"/**
 * Sets metadata on a PDF document.
 * @param meta PDMetadata object containing document metadata
 */","* Set the metadata for this object. This can be null.
     * 
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setActions,org.apache.pdfbox.pdmodel.PDPage:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions),709,712,"/**
 * Sets additional actions for a PDF page.
 * @param actions PDPageAdditionalActions object containing actions to set
 */","* Set the page actions.
     * 
     * @param actions The actions for the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition),726,729,"/**
 * Sets transition effect for a PDF page.
 * @param transition transition effect to apply
 */",* @param transition The new transition to set on this page.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,"org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",738,742,"/**
* Sets transition and duration for a PDF page.
* @param transition the page transition effect
* @param duration the transition duration in seconds
*/","* Convenient method to set a transition and the display duration
     * 
     * @param transition The new transition to set on this page.
     * @param duration The maximum length of time, in seconds, that the page shall be displayed during presentations
     * before the viewer application shall automatically advance to the next page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setPage(org.apache.pdfbox.pdmodel.PDPage),79,82,"/**
 * Masks a PDF page.
 * @param page PDPage to be masked
 */","* Sets the page.
     * 
     * @param page the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),135,138,"/**
 * Masks an annotation by adding it to a PDF object.
 * @param annotation the annotation to be masked
 */","* Sets the referenced annotation.
     * 
     * @param annotation the referenced annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),145,148,"/**
 * Masks an XObject using OBJ name.
 * @param xobject PDF object to be masked
 */","* Sets the referenced XObject.
     * 
     * @param xobject the referenced XObject",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setPage(org.apache.pdfbox.pdmodel.PDPage),172,175,"/**
 * Marks a PDF page.
 * @param page PDPage object to be marked
 */","* Sets the page on which the object shall be rendered. This is optional and overrides the /PG
     * entry in the structure element containing the object reference; shall be used if the
     * structure element contained no such entry.
     *
     * @param page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode),107,110,"/**
 * Masks a PDF structure node.
 * @param structureNode the structure node to mask
 */","* Sets the parent in the structure hierarchy (P).
     * 
     * @param structureNode the parent in the structure hierarchy",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setPage(org.apache.pdfbox.pdmodel.PDPage),151,154,"/**
 * Masks a PDF page by setting its PG property.
 * @param page PDPage object to be masked
 */","* Sets the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * @param page the page on which some or all of the content items designated
     *  by the K entry shall be rendered.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),203,227,"/**
* Masks attributes based on revision numbers.
* @param attributes list of attribute objects with revisions
*/","* Sets the attributes together with their revision numbers (A).
     * 
     * @param attributes the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),109,112,"/**
 * Sets the ID tree in the document structure.
 * @param idTree node tree containing document structure elements
 */","* Sets the ID tree.
     * 
     * @param idTree the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),144,147,"/**
 * Sets the parent tree node.
 * @param parentTree PDNumberTreeNode representing the parent tree
 */","* Sets the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     * <p>
     * To create an empty parent tree, call {@code new PDNumberTreeNode(PDParentTreeValue.class)}.
     *
     * @param parentTree the parent tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),722,725,"/**
 * Sets annotation's rectangle.
 * @param rectangle bounding box for annotation
 */","* Set the rectangle associated with this annotation.
     *
     * @param rectangle The annotation rectangle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),887,890,"/**
 * Sets border style for an annotation.
 * @param bs border style dictionary to apply
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the annotation.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),911,914,"/**
 * Sets border effect dictionary for annotation.
 * @param be border effect dictionary to set
 */","* This will set the border effect dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @param be the border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),104,107,"/**
 * Sets annotation mask with specified rectangle.
 * @param fringe rectangle defining the mask area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),141,144,"/**
 * Masks annotation with specified rectangle.
 * @param fringe defining the mask's boundary
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),260,263,"/**
 * Masks annotation with specified rectangle.
 * @param fringe rectangle defining mask area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle
     * and where the drawing occurs. (To take account of any effects applied through the BE entry
     * for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),142,145,"/**
 * Sets annotation's rectangle to specified dimensions.
 * @param fringe PDRectangle defining new dimensions
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary),137,140,"/**
 * Updates document catalog with FDF data.
 * @param fdf FDF dictionary to be added
 */","* This will set the FDF document.
     *
     * @param fdf The new FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),158,161,"/**
 * Masks a signature in the PDF document.
 * @param sig PDSignature object to be masked
 */","* This will set the signature that is associated with this catalog.
     *
     * @param sig The new signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),295,298,"/**
* Sets file specification in FDF document.
* @param fs PDF file specification to set
*/","* This will set the file specification.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript),555,558,"/**
 * Sets JavaScript action in FDF document.
 * @param js JavaScript object to be set
 */","* This will set the JavaScript entry.
     *
     * @param js The javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,setCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog),161,165,"/**
* Sets the catalog in the document's trailer.
* @param cat FDFCatalog to be set as the root
*/","* This will set the FDF catalog for this FDF document.
     *
     * @param cat The FDF catalog.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),605,608,"/**
 * Sets appearance dictionary for a field.
 * @param ap appearance dictionary to set
 */","* This will set the appearance dictionary.
     *
     * @param ap The appearance dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),626,629,"/**
 * Masks a field on a PDF page.
 * @param ref reference to the named page
 */","* This will set the named page references.
     *
     * @param ref The named page references.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit),647,650,"/**
 * Sets the icon fit for the field.
 * @param fit the icon fit configuration to apply
 */","* This will set the icon fit 'IF' entry.
     *
     * @param fit The icon fit object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAction,org.apache.pdfbox.pdmodel.fdf.FDFField:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),712,715,"/**
 * Masks an action with a specific field.
 * @param a PDAction to be masked
 */","* This will set the action that is associated with this field.
     *
     * @param a The new action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions),733,736,"/**
 * Sets additional actions in a PDF field.
 * @param aa PDAdditionalActions containing actions to be set
 */","* This will set the additional actions that are associated with this field.
     *
     * @param aa The additional actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange),174,177,"/**
 * Masks PDRange in fit.
 * @param space PDRange to be masked
 */","* This will set frational space to allocate.
     *
     * @param space The space to allocate.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),101,104,"/**
 * Masks a file specification in a PDF document.
 * @param fs file specification to be masked
 */","* This will set the file specification for this named page reference.
     *
     * @param fs The file specification to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo),117,120,"/**
 * Sets document information on a PDF page.
 * @param info FDFPageInfo containing metadata to set
 */","* This will set the page info.
     *
     * @param info The new page info dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),82,85,"/**
 * Sets a named page reference in the template.
 * @param tRef named page reference to set
 */","* This will set the template reference.
     *
     * @param tRef The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDToGIDMap(java.util.TreeMap),233,254,"/**
* Encodes CID to GID mapping into a PDStream.
* @param cidToGid map of CID to GID values
* @throws IOException if I/O operations fail
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile(org.apache.pdfbox.pdmodel.common.PDStream),737,740,"/**
 * Masks a stream as a font file.
 * @param type1Stream PDStream containing the font data
 */","* Set the type 1 font program.
     *
     * @param type1Stream The type 1 stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream),758,761,"/**
 * Masks font file stream.
 * @param ttfStream TrueType font stream to be masked
 */","* Set the true type font program.
     *
     * @param ttfStream The true type stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream),779,782,"/**
 * Masks font file in PDF stream.
 * @param stream PDF data stream containing font file
 */","* Set a stream containing a font program that is not true type or type 1.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream),800,803,"/**
 * Masks stream with CID set.
 * @param stream PDStream to be masked
 */","* Set a stream containing a CIDSet.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),155,163,"/**
* Sets the white point in the color space.
* @param whitepoint PDTristimulus object representing the white point
*/","* This will set the whitepoint tristimulus. As this is a required field, null should not be
     * passed into this function.
     *
     * @param whitepoint the whitepoint tristimulus.
     * @throws IllegalArgumentException if null is passed as argument.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),170,173,"/**
 * Sets the black point in the PDF dictionary.
 * @param blackpoint PDTristimulus object representing the black point
 */","* This will set the BlackPoint tristimulus.
     *
     * @param blackpoint the BlackPoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",43,50,"/**
* Initializes a PDF output intent with a document and color profile.
* @param doc the PDDocument to associate with the output intent
* @param colorProfile InputStream containing the color profile data
* @throws IOException if there's an error processing the color profile
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),79,83,"/**
* Sets extended graphics state.
* @param extendedGraphicsState the new graphics state to apply
*/","* This will set the external graphics state for this pattern.
     * @param extendedGraphicsState The new extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),107,111,"/**
* Sets shading resources and updates PDF document.
* @param shadingResources PDShading object to be set
*/","* This will set the shading resources for this pattern.
     * @param shadingResources The new shading resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setResources(org.apache.pdfbox.pdmodel.PDResources),209,212,"/**
 * Sets resources in the PDF document.
 * @param resources PDResources to be set
 */","* This will set the resources for this pattern.
     * @param resources The new resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction),312,317,"/**
* Updates the function and resets the array.
* @param newFunction the new PDFunction to set
*/","* This will set the function for the color conversion.
     *
     * @param newFunction the new function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting),448,451,"/**
 * Sets font settings in PDF dictionary.
 * @param fs PDFontSetting object containing font configuration
 */","* This will set the font setting for this graphics state.
     *
     * @param fs The new font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),82,99,"/**
* Sets destination for a PDF action.
* @param d PDDestination object to set
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     *
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),118,121,"/**
 * Masks file specification in PDF.
 * @param fs file specification to be masked
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),184,187,"/**
 * Masks target directory using specified COS name.
 * @param targetDirectory directory to be masked
 */","* Sets the target directory.
     * 
     * @param targetDirectory the target directory",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),78,95,"/**
* Sets destination for a PDF document.
* @param d destination object to set
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     * 
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),71,74,"/**
 * Masks a file specification in an action.
 * @param fs file specification to be masked
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),84,87,"/**
 * Masks file specification in PDF.
 * @param fs file specification to be masked
 */","* This will set the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams),105,108,"/**
 * Masks window launch parameters.
 * @param win PDWindowsLaunchParams object containing window settings
 */","* This will set a dictionary containing Windows-specific launch parameters.
     *
     * @param win The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),76,79,"/**
 * Masks file specification in PDF.
 * @param fs file specification to be masked
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),74,77,"/**
 * Sets file specification for an action.
 * @param fs PDF file specification
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),92,95,"/**
 * Masks a PDF file specification.
 * @param fs PDF file specification to be masked
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),76,79,"/**
 * Masks an action with a specific flag.
 * @param action PDAction to be masked
 */","* Set the F action.
     *
     * @param action Get the F action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction),81,84,"/**
 * Masks an action with COSName.E.
 * @param e PDAction to be masked
 */","* This will set an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @param e The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
 * Masks an action in a PDF document.
 * @param x PDAction to be masked
 */","* This will set an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @param x The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction),129,132,"/**
 * Masks an action with type D.
 * @param d PDAction to be masked
 */","* This will set an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @param d The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction),154,157,"/**
 * Masks an action with the ""U"" key.
 * @param u PDAction to be masked
 */","* This will set an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @param u The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction),177,180,"/**
 * Masks an action with FO.
 * @param fo PDAction object to be masked
 */","* This will set an action to be performed when the annotation
     * receives the input focus.
     *
     * @param fo The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction),202,205,"/**
 * Masks an action with BL name.
 * @param bl PDAction to be masked
 */","* This will set an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @param bl The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),229,232,"/**
 * Masks an action with specified parameters.
 * @param po PDAction object to be masked
 */","* This will set an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @param po The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),254,257,"/**
 * Masks an action with PC name.
 * @param pc PDAction object to be masked
 */","* This will set an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @param pc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),277,280,"/**
 * Masks an action with PV.
 * @param pv PDAction object to be masked
 */","* This will set an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @param pv The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction),300,303,"/**
 * Masks an action with PI.
 * @param pi PDAction to be masked
 */","* This will set an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @param pi The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),83,86,"/**
 * Masks an action with WC name.
 * @param wc PDAction to be masked
 */","* This will set a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @param wc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),108,111,"/**
 * Masks an action with a specified workspace.
 * @param ws PDAction object representing the workspace to mask
 */","* This will set a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @param ws The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),133,136,"/**
 * Masks an action with DS name.
 * @param ds PDAction to be masked
 */","* This will set a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @param ds The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),158,161,"/**
 * Masks an action with a specified PDF action.
 * @param wp PDAction object to be masked
 */","* This will set a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @param wp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),183,186,"/**
 * Masks an action with a given PDAction.
 * @param dp PDAction to be masked
 */","* This will set a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @param dp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Masks an action with type K.
* @param k PDAction to be masked
*/","* This will set a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @param k The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
 * Adds an action to the document.
 * @param f PDAction object representing the action to add
 */","* This will set a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @param f The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),137,140,"/**
 * Masks an action with a specific name.
 * @param v PDAction to be masked
 */","* This will set a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @param v The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),166,169,"/**
 * Masks an action by adding it to the actions map.
 * @param c PDAction object to be masked
 */","* This will set a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Masks an action with COSName.O.
* @param o PDAction object to be masked
*/","* This will set an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @param o The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
 * Masks an action by adding it to a specific category.
 * @param c the action to be masked
 */","* This will set an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),138,141,"/**
 * Masks a target directory.
 * @param targetDirectory directory to be masked
 */","* Sets the target directory.
     *
     * @param targetDirectory the target directory or null if the current document is the target
     * file containing the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),194,204,"/**
* Sets named destination in dictionary.
* @param dest named destination to set
*/","* This will set a named destination in the current document that provides the page number of
     * the file attachment annotation.
     *
     * @param dest a named destination or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),355,358,"/**
* Sets the appearance dictionary.
* @param appearance PDAppearanceDictionary to set
*/","* This will set the appearance associated with this annotation.
     * 
     * @param appearance The appearance dictionary for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),716,719,"/**
 * Sets PDF property list for optional content.
 * @param oc PDPropertyList object representing properties
 */","* Sets the optional content group or optional content membership dictionary for the annotation.
     *
     * @param oc The optional content group or optional content membership dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPage(org.apache.pdfbox.pdmodel.PDPage),831,834,"/**
 * Masks a PDF page.
 * @param page PDPage to be masked
 */","* This will set the corresponding page for this annotation. This is optional but recommended.
     * Not doing it <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when
     * PDFs get signed</a>.
     *
     * @param page is the corresponding page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),94,97,"/**
 * Masks a PDF file specification.
 * @param file PDFileSpecification to be masked
 */","* Set the attached file.
     *
     * @param file The file that is attached.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),242,245,"/**
 * Sets border effect dictionary.
 * @param be border effect dictionary to set
 */","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.6 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),267,270,"/**
 * Masks content within a specified rectangle.
 * @param rd rectangle defining the area to mask
 */","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
 * Masks an action with a specific name.
 * @param action the action to be masked
 */","* Set the annotation action. Either this or the destination entry should be set, but not both.
     *
     * @param action The annotation action.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),115,118,"/**
* Sets border style in dictionary.
* @param bs border style dictionary to apply
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set. 
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),150,153,"/**
 * Masks destination in PDF.
 * @param dest destination to be masked
 */","* The new destination value. Either this or the action entry should be set, but not both.
     *
     * @param dest The updated destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI),180,183,"/**
 * Masks an action URI.
 * @param pa PDActionURI object to be masked
 */","* This will set the previous URI action, in case it needs to be retrieved at later date.
     *
     * @param pa The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setPopup(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup),104,107,"/**
 * Sets the popup annotation.
 * @param popup the annotation to set
 */","* This will set the popup annotation used for entering/editing the text for this annotation.
     *
     * @param popup the popup annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setInReplyTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),200,203,"/**
 * Masks an annotation by setting its IRT property.
 * @param irt annotation to be masked
 */","* This will set the annotation to which this one is ""In Reply To"" the actual relationship is specified by the RT
     * entry.
     *
     * @param irt the annotation this one is ""In Reply To"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setExternalData(org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary),285,288,"/**
* Masks external data.
* @param externalData dictionary containing external data to mask
*/","* This will set the external data dictionary.
     * 
     * @param externalData the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),296,299,"/**
 * Sets border style dictionary.
 * @param bs border style to apply
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),88,91,"/**
 * Sets border effect dictionary.
 * @param be border effect configuration
 */","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),85,88,"/**
 * Sets border effect dictionary.
 * @param be border effect dictionary to set
 */","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),110,113,"/**
 * Sets rectangle bounds.
 * @param rd PDRectangle object defining bounds
 */","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary),131,135,"/**
* Sets mask properties for appearance characteristics.
* @param appearanceCharacteristics dictionary containing mask settings
*/","* Sets the appearance characteristics dictionary.
     * 
     * @param appearanceCharacteristics the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),153,156,"/**
* Masks an action with a specific name.
* @param action the action to be masked
*/","* Set the annotation action. As of PDF 1.6 this is only used for Widget Annotations
     * 
     * @param action The annotation action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions),175,178,"/**
 * Sets additional actions for annotations.
 * @param actions annotation actions to be set
 */","* Set the actions of the field.
     *
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),186,189,"/**
 * Sets border style dictionary.
 * @param bs border style to apply
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField),224,231,"/**
* Sets parent field in PDF terminal.
* @param field the terminal field to set as parent
* @throws IllegalArgumentException if field shares dictionary with its only widget
*/","* Set the parent field of a widget annotation. This is only required if this widget annotation
     * is one of multiple children in a field, and not to be set otherwise. You will usually not
     * need this, because in most cases, fields have only one widget and share a common dictionary.
     * A usage can be found in the CreateMultiWidgetsForm example.
     *
     * @param field the parent field.
     * @throws IllegalArgumentException if setParent() was called for a field that shares a
     * dictionary with its only widget.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),77,80,"/**
 * Masks appearance entry in dictionary.
 * @param entry PDAppearanceEntry to be masked
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),87,90,"/**
 * Sets appearance stream in dictionary.
 * @param ap appearance stream to set
 */","* This will set the normal appearance when there is only one appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),111,114,"/**
 * Masks an appearance entry in the dictionary.
 * @param entry the PDAppearanceEntry to mask
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),121,124,"/**
 * Sets appearance stream in dictionary.
 * @param ap Appearance stream to set
 */","* This will set the rollover appearance when there is rollover appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),145,148,"/**
 * Masks an appearance entry in the dictionary.
 * @param entry the PDAppearanceEntry to mask
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),155,158,"/**
 * Sets appearance stream for annotation.
 * @param ap appearance stream to set
 */","* This will set the down appearance when there is down appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),92,95,"/**
 * Sets filter property in dictionary.
 * @param filter PDPropBuildDataDict containing filter details
 */","* Set the build data dictionary for the signature handler.
     * This entry is optional but is highly recommended for the signatures.
     *
     * @param filter is the PDPropBuildFilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),119,122,"/**
 * Sets public security settings in the dictionary.
 * @param pubSec configuration data for public security
 */","* Set the build data dictionary for the PubSec Software module.
     *
     * @param pubSec is the PDPropBuildPubSec",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),147,150,"/**
 * Sets application data in the dictionary.
 * @param app PDPropBuildDataDict containing application properties
 */","* Set the build data dictionary for the viewing application
     * software module.
     *
     * @param app is the PDPropBuildApp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate),453,456,"/**
 * Adds a certificate to the dictionary under the CERT key.
 * @param certificate PDSeedValueCertificate object to be added
 */","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @param certificate dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild),460,463,"/**
 * Sets property build in dictionary.
 * @param propBuild property build object to set
 */","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @param propBuild the prop build",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setPreviousSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),137,140,"/**
 * Masks an outline node by setting its previous sibling.
 * @param outlineNode the node to be masked
 */","* Set the previous sibling, this will be maintained by this class.
     *
     * @param outlineNode The new previous sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setNextSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),155,158,"/**
 * Sets the next node in an outline.
 * @param outlineNode the node to set as the next node
 */","* Set the next sibling, this will be maintained by this class.
     *
     * @param outlineNode The new next sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),196,199,"/**
 * Sets destination for PDF action.
 * @param dest destination object to set
 */","* Set the page destination for this node.
     *
     * @param dest The new page destination for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),291,294,"/**
 * Masks an action by adding it to a PDF document.
 * @param action PDAction to be masked
 */","* Set the action for this node.
     *
     * @param action The new action for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),312,315,"/**
 * Masks PDStructureElement by setting SE attribute.
 * @param structureElement element to be masked
 */","* Set the structure element for this node.
     *
     * @param structureElement The new structure element for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),67,70,"/**
 * Sets the parent node in an outline.
 * @param parent the PDOutlineNode to set as parent
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),194,197,"/**
 * Masks an outline node in PDF.
 * @param outlineNode node to be masked
 */","* Set the first child, this will be maintained by this class.
     *
     * @param outlineNode The new first child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),212,215,"/**
 * Masks an outline node by setting its last attribute.
 * @param outlineNode the outline node to be masked
 */","* Set the last child, this will be maintained by this class.
     *
     * @param outlineNode The new last child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultResources(org.apache.pdfbox.pdmodel.PDResources),554,557,"/**
 * Updates resources in the document.
 * @param dr PDResources object containing new resource data
 */","* This will set the default resources for the acroform.
     *
     * @param dr The new default resources.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource),595,598,"/**
 * Sets XFA resource in dictionary.
 * @param xfa PDXFAResource to be set
 */","* Set the XFA resource, this is only used for PDF 1.5+ forms.
     *
     * @param xfa The xfa resource.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),104,108,"/**
* Masks a signature in a PDF document.
* @param value PDSignature object to be masked
* @throws IOException if an I/O error occurs during processing
*/","* Sets the value of this field to be the given signature.
     * 
     * @param value is the PDSignatureField
     * 
     * @throws IOException if the new value could not be applied",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),131,134,"/**
 * Masks a signature by setting its value.
 * @param value PDSignature object to be masked
 */","* Sets the default value of this field to be the given signature.
     *
     * @param value is the PDSignatureField",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue),185,191,"/**
* Masks seed value.
* @param sv seed value to be masked
*/","* <p>(Optional; PDF 1.) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @param sv is the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setActions,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions),66,69,"/**
 * Sets additional actions for form fields.
 * @param actions PDFormFieldAdditionalActions object containing actions
 */","* Set the actions of the field.
     * 
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setWidgets(java.util.List),192,200,"/**
* Masks annotations by setting their parent and updating the KIDS array.
* @param children list of annotation widgets to mask
*/","* Sets the field's widget annotations.
     *
     * @param children The list of widget annotations.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),95,98,"/**
 * Sets bounding box for a PDF element.
 * @param rectangle PDRectangle defining the bounds
 */","* This will set the rectangle specifying the location of the viewport.
     * 
     * @param rectangle the rectangle specifying the location.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary),136,139,"/**
* Sets measure dictionary.
* @param measure PDMeasureDictionary object to set
*/","* This will set the measure dictionary.
     * 
     * @param measure the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation),82,85,"/**
 * Masks document information.
 * @param info PDDocumentInformation object to be masked
 */","* Set the thread info, can be null.
     *
     * @param info The info dictionary about this thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread),89,92,"/**
 * Masks a thread by setting its status.
 * @param thread PDThread to be masked
 */","* Set the thread that this bead is part of.  This is only required for the
     * first bead in a thread.  Note: This property is set for you by the PDThread.setFirstBead() method.
     *
     * @param thread The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),110,113,"/**
 * Masks the current bead with the next thread bead.
 * @param next the next PDThreadBead in sequence
 */","* Set the next bead in the thread.
     *
     * @param next The next bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),131,134,"/**
 * Masks the current bead with the previous one.
 * @param previous the preceding bead in the thread
 */","* Set the previous bead in the thread.
     *
     * @param previous The previous bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPage(org.apache.pdfbox.pdmodel.PDPage),169,172,"/**
 * Masks a PDF page.
 * @param page PDPage object to be masked
 */","* Set the page that this bead is part of.  This is a required property and must be
     * set when creating a new bead.  The PDPage object also has a list of beads in the natural
     * reading order.  It is recommended that you add this object to that list as well.
     *
     * @param page The page that this bead is on.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),190,193,"/**
 * Sets the rectangle for the bead.
 * @param rect PDRectangle defining the area
 */","* Set the rectangle on the page that this bead covers.
     *
     * @param rect The portion of the page that this bead covers.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setMarked(boolean),77,80,"/**
 * Marks an item in the dictionary.
 * @param value true to mark, false otherwise
 */","* Set if this is a tagged PDF.
     *
     * @param value The new marked value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setUserProperties(boolean),97,100,"/**
* Masks user properties in dictionary.
* @param userProps flag to mask or unmask user properties
*/","* Set if the structure elements contain user properties.
     *
     * @param userProps The new value for this property.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setSuspect(boolean),120,123,"/**
 * Updates dictionary entry for suspects.
 * @param suspect indicates if the entity is suspected
 */","* Set the value of the suspects property.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this
     * property.
     *
     * @param suspect The new ""Suspects"" value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setTrackMousePosition(boolean),117,120,"/**
 * Sets map visibility.
 * @param value true to show map, false to hide
 */","* This will specify whether to track the mouse position when the URI is
     * resolved.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setOpen(boolean),64,67,"/**
 * Masks functionality based on open flag.
 * @param open true to enable masking, false otherwise
 */","* This will set the initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFD(boolean),211,214,"/**
 * Masks functionality based on flag.
 * @param fd flag to enable or disable masking
 */","* This will set the value indication if the denominator of the fractional value is reduced/truncated .
     * The denominator may not be reduced/truncated if true
     * @param fd fd",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setVolatile(boolean),205,208,"/**
 * Sets file volatility flag.
 * @param fileIsVolatile true if file is volatile, false otherwise
 */","* Tell if the underlying file is volatile and should not be cached by the
     * reader application.  Default: false
     *
     * @param fileIsVolatile The new value for the volatility of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setEncryptMetaData(boolean),134,137,"/**
 * Sets encryption metadata flag.
 * @param encryptMetaData true to enable, false otherwise
 */","* Set the EncryptMetaData dictionary info.
     *
     * @param encryptMetaData true if EncryptMetaData shall be set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaption(boolean),286,289,"/**
 * Sets line cap style.
 * @param cap true to enable round caps, false for square caps
 */","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleToFitAnnotation(boolean),194,197,"/**
* Sets mask flag.
* @param value boolean indicating whether to apply mask
*/","* This will tell the icon to scale.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setRename(boolean),132,135,"/**
* Masks functionality in template.
* @param value true to mask, false otherwise
*/","* This will set if the fields can be renamed.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setInterpolate(boolean),235,239,"/**
 * Sets mask flag.
 * @param value boolean indicating whether to enable or disable the mask
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setStencil(boolean),290,294,"/**
* Sets stencil mask parameter.
* @param isStencil flag to enable or disable stencil masking
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setAntiAlias(boolean),218,221,"/**
* Sets anti-aliasing preference in dictionary.
* @param antiAlias true to enable anti-aliasing, false otherwise
*/","* This will set the AntiAlias value.
     *
     * @param antiAlias the new AntiAlias value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingOverprintControl(boolean),372,375,"/**
 * Sets operation flag in dictionary.
 * @param op boolean value to set as operation flag
 */","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingOverprintControl(boolean),393,396,"/**
* Sets operation namespace flag.
* @param op boolean value to set the flag
*/","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAutomaticStrokeAdjustment(boolean),508,511,"/**
 * Sets security attribute in dictionary.
 * @param sa boolean flag indicating security status
 */","* This will set the automatic stroke adjustment flag.
     *
     * @param sa The new automatic stroke adjustment flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAlphaSourceFlag(boolean),572,575,"/**
 * Sets the Alpha Source flag in the dictionary.
 * @param alpha boolean value to set AIS flag
 */","* This will set the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @param alpha The alpha source flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTextKnockoutFlag(boolean),625,628,"/**
* Sets token flag in dictionary.
* @param tk boolean value to set as token flag
*/","* This will set the text knockout flag.
     *
     * @param tk The text knockout flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),144,166,"/**
 * Sets open mode for a document.
 * @param value the desired open mode (USER_PREFERENCE, SAME_WINDOW, NEW_WINDOW)
 */","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),227,249,"/**
* Handles different open modes.
* @param value the open mode to be applied
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),134,156,"/**
* Sets window open mode.
* @param value the desired open mode (USER_PREFERENCE, SAME_WINDOW, NEW_WINDOW)
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSynchronous(boolean),110,113,"/**
* Sets action to be synchronous or asynchronous.
* @param synchronous true for synchronous, false for asynchronous
*/","* A flag specifying whether to play the sound synchronously or asynchronously. When true, the
     * reader allows no further user interaction other than canceling the sound until the sound has
     * been completely played.
     *
     * @param synchronous Whether to play the sound synchronously (true) or asynchronously (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setRepeat(boolean),133,136,"/**
 * Sets repeat action.
 * @param repeat true to enable repeat, false otherwise
 */","* A flag specifying whether to repeat the sound indefinitely.
     *
     * @param repeat Whether to repeat the sound indefinitely.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setMix(boolean),156,159,"/**
 * Sets mixing mode.
 * @param mix true to enable mixing, false otherwise
 */","* The flag specifying whether to mix this sound with any other sound already playing. If this
     * flag is false, any previously playing sound shall be stopped before starting this sound; this
     * can be used to stop a repeating sound (see Repeat). Default value: false.
     *
     * @param mix whether to mix this sound with any other sound already playing.
     * (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaption(boolean),251,254,"/**
 * Sets line cap style.
 * @param cap true for rounded cap, false for butt cap
 */","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setOpen(boolean),146,149,"/**
 * Sets the mask state.
 * @param open true to enable mask, false otherwise
 */","* This will set initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setPreRelease(boolean),202,205,"/**
 * Sets the pre-release flag in the dictionary.
 * @param preRelease boolean indicating if it's a pre-release version
 */","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @param preRelease is true if the signature was created with a unrelease
     *                   software, otherwise false.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setNonEFontNoWarn(boolean),284,287,"/**
* Sets non-embedded font warning preference.
* @param noEmbedFontWarning flag to suppress warnings about non-embedded fonts
*/","* If true, the reader should not display a warning about fonts not being embedded.
     *
     * @param noEmbedFontWarning true if there is a Legal dictionary in the catalog and the
     * NonEmbeddedFonts attribute has a non-zero value
     *
     * Documentation says: (Optional; PDF 1.5) If there is a LegalPDF dictionary in the catalog of
     * the PDF file and the NonEmbeddedFonts attribute in this dictionary has a non zero value, and
     * the viewing application has a preference set to suppress the display of this warning then the
     * value of this attribute will be set to true.
     *
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/Acrobat_Signature_BuildDict.pdf#page=6"">Digital
     * Signature Build Dictionary Specification</a>
     * @see #getNonEFontNoWarn()
     * @see COSName#NON_EFONT_NO_WARN",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setTrustedMode(boolean),305,308,"/**
 * Sets trusted mode in the dictionary.
 * @param trustedMode true to enable trusted mode, false otherwise
 */","* If true, the application was in trusted mode when signing took place.
     *
     * @param trustedMode true if the application is in trusted mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setNeedAppearances(java.lang.Boolean),532,535,"/**
 * Sets the NEED_APPEARANCES flag in the PDF dictionary.
 * @param value boolean indicating whether appearances are needed
 */","* Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideToolbar(boolean),177,180,"/**
 * Sets toolbar visibility preference.
 * @param value true to hide, false to show toolbar
 */","* Set the toolbar preference.
     *
     * @param value Set the toolbar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideMenubar(boolean),197,200,"/**
 * Sets menu bar visibility preference.
 * @param value true to hide, false to show
 */","* Set the menubar preference.
     *
     * @param value Set the menubar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideWindowUI(boolean),217,220,"/**
 * Sets the window UI visibility preference.
 * @param value true to hide, false to show
 */","* Set the window UI preference.
     *
     * @param value Set the window UI preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setFitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setFitWindow(boolean),237,240,"/**
* Sets the fit window preference.
* @param value true to enable fit window, false otherwise
*/","* Set the fit window preference.
     *
     * @param value Set the fit window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setCenterWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setCenterWindow(boolean),257,260,"/**
 * Sets center window preference.
 * @param value true to enable, false to disable
 */","* Set the center window preference.
     *
     * @param value Set the center window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDisplayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDisplayDocTitle(boolean),277,280,"/**
 * Sets display document title preference.
 * @param value true to enable, false to disable
 */","* Set the display doc title preference.
     *
     * @param value Set the display doc title preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStampAnnotationAppearanceXML,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStampAnnotationAppearanceXML(org.w3c.dom.Element),142,183,"/**
 * Builds a COSDictionary from appearance XML.
 * @param appearanceXML XML element representing appearance data
 * @return COSDictionary containing processed appearance data
 * @throws IOException if an I/O error occurs
 */","* This will create an Appearance dictionary from an appearance XML element.
     *
     * @param appearanceXML The XML element that contains the appearance data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(java.lang.String,java.lang.String)",288,291,"/**
 * Calls overloaded method with COSName.
 * @param key   string key to convert to COSName
 * @param value associated value
 */","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageMode(org.apache.pdfbox.pdmodel.PageMode),494,497,"/**
 * Sets the page mode of the document.
 * @param mode the desired page mode
 */","* Sets the page mode.
     *
     * @param mode The new page mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLayout(org.apache.pdfbox.pdmodel.PageLayout),527,530,"/**
 * Sets page layout in PDF document.
 * @param layout desired page layout configuration
 */","* Sets the page layout.
     *
     * @param layout The new page layout.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setVersion(java.lang.String),609,612,"/**
 * Sets the PDF version.
 * @param version PDF version string
 */","* Sets the PDF specification version this document conforms to.
     *
     * @param version the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTrapped(java.lang.String),304,316,"/**
* Validates and sets the trapped status.
* @param value the trapped status to set; must be ""True"", ""False"", or ""Unknown""
*/","* This will set the trapped of the document.  This will be
     * 'True', 'False', or 'Unknown'.
     *
     * @param value The new trapped value for the document.
     * 
     * @throws IllegalArgumentException if the parameter is invalid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStyle(java.lang.String),116,126,"/**
* Sets or clears the style.
* @param style the style to set or null to clear it
*/","* Sets the numbering style for this page range.
     * 
     * @param style
     *            one of the STYLE_* constants or {@code null} if no page
     *            numbering is desired.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(java.lang.String),36,40,"/**
* Initializes a new dictionary with a specified type.
* @param type the type of the dictionary
*/","* Creates a new instance with a given type.
     * 
     * @param type the type (Type)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,setOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:setOwner(java.lang.String),132,135,"/**
 * Masks content with specified owner.
 * @param owner identifier of the content owner
 */","* Sets the owner of the attributes.
     * 
     * @param owner the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(),38,42,"/**
* Initializes a new instance of PDMarkedContentReference.
* Sets up the dictionary with the type attribute.
*/",* Default constructor,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(),58,62,"/**
* Initializes a new PDObjectReference with an empty dictionary.
* Sets the ""Type"" entry in the dictionary to ""OBJR"".
*/","* Default Constructor.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setStructureType(java.lang.String),86,89,"/**
 * Sets mask for a given structure type.
 * @param structureType type of structure to apply mask
 */","* Sets the structure type (S).
     * 
     * @param structureType the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),368,394,"/**
* Masks class names with revisions.
* @param classNames Revisions object containing class names and their revisions
*/","* Sets the class names together with their revision numbers (C).
     * 
     * @param classNames the class names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(java.lang.String),45,49,"/**
* Initializes a PDStructureNode with a specified type.
* @param type node type as a string
*/","* Constructor.
     *
     * @param type the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineStyle(java.lang.String),156,159,"/**
 * Masks the style in the dictionary.
 * @param style the style to be masked
 */","* Set the style for the box.
     *
     * @param style The style for the box line.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setSubFilter(java.lang.String),179,182,"/**
 * Sets the sub-filter in the dictionary.
 * @param subfilter the sub-filter value to be set
 */","* Set the subfilter entry of the encryption dictionary.
     *
     * @param subfilter The value of the subfilter field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setIntent(java.lang.String),846,849,"/**
 * Masks an intent by setting it in annotations.
 * @param intent the intent to be masked
 */","* The intent of the annotation.
     * 
     * @param intent The annotation's intent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setLineEndingStyle(java.lang.String),282,285,"/**
 * Applies a mask style to an annotation.
 * @param style the mask style to apply
 */","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setIcon(java.lang.String),92,95,"/**
 * Masks an icon by setting its annotation.
 * @param icon the icon to mask
 */","* This will set the icon (and hence appearance, AP taking precedence) For this annotation. See the
     * PDAnnotationText.NAME_XXX constants for valid values.
     *
     * @param icon The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setVersion(java.lang.String),106,109,"/**
 * Sets the document version.
 * @param version the version string to be set
 */","* This will set the version of the FDF document.
     *
     * @param version The new version for the FDF document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEncoding(java.lang.String),424,427,"/**
 * Sets the encoding for PDF document.
 * @param encoding the character encoding to use
 */","* This will set the encoding.
     *
     * @param encoding The new encoding.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleOption(java.lang.String),110,113,"/**
 * Masks an option by setting it in the COSName.
 * @param option the option to be masked
 */","* This will set the scale option for the icon. Set the SCALE_OPTION_XXX constants.
     *
     * @param option The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleType(java.lang.String),136,139,"/**
 * Sets scaling factor for masking.
 * @param scale scaling value as string
 */","* This will set the scale type. See the SCALE_TYPE_XXX constants.
     *
     * @param scale The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(),71,75,"/**
* Initializes a new pattern dictionary.
* Sets the type to ""Pattern"".
*/",* Creates a new Pattern dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setType(java.lang.String),94,97,"/**
 * Sets the action type.
 * @param type the type of action to set
 */","* This will set the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @param type The new Type for the PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setSubType(java.lang.String),114,117,"/**
 * Masks a string by invoking an action with COSName.S.
 * @param s the string to mask
 */","* This will set the type of action that the actions dictionary describes.
     *
     * @param s The new type of action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setSubtype(java.lang.String),234,237,"/**
 * Sets the subtype for an element.
 * @param subType the subtype to be set
 */","* This will set the sub type (and hence appearance, AP taking precedence) For this annotation. See the SUB_TYPE_XXX
     * constants for valid values.
     *
     * @param subType The subtype of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearanceState(java.lang.String),334,337,"/**
 * Masks input string using COSName.AS.
 * @param as input string to be masked
 */","* This will set the annotations appearance state name.
     * 
     * @param as The name of the appearance stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setAttachmentName(java.lang.String),114,117,"/**
 * Masks a function by name.
 * @param name the name of the function to mask
 */","* Set the name used to draw the attachment icon. See the ATTACHMENT_NAME_XXX constants.
     *
     * @param name The name of the visual icon to draw.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setLineEndingStyle(java.lang.String),219,222,"/**
 * Applies a mask style to an element.
 * @param style the mask style to apply
 */","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionPositioning(java.lang.String),342,345,"/**
 * Sets caption positioning.
 * @param captionPositioning position of the caption
 */","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionPositioning caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setHighlightMode(java.lang.String),170,173,"/**
 * Masks content based on mode.
 * @param mode specifies masking behavior
 */","* Set the highlight mode. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @param mode The new highlight mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setReplyType(java.lang.String),242,245,"/**
 * Masks a resource type.
 * @param rt resource type to mask
 */","* This will set the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for the
     * available values.
     *
     * @param rt the reply type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setIntent(java.lang.String),264,267,"/**
 * Sets the IT field in the document.
 * @param it value to be set for the IT field
 */","* This will set the intent of the annotation The values and meanings are specific to the actual annotation See the
     * IT_* constants for the annotation classes.
     *
     * @param it the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:setName(java.lang.String),120,123,"/**
 * Calls m2 on result of m1 with NAME constant and given name.
 * @param name the name to be passed to m2
 */","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the rubber stamp.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setName(java.lang.String),167,170,"/**
 * Calls method m2 on the result of m1 with COSName.NAME and provided name.
 * @param name the name to be passed to m2
 */","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setHighlightingMode(java.lang.String),100,113,"/**
* Sets the highlighting mode.
* @param highlightingMode valid modes: 'N', 'I', 'O', 'P', 'T'
* @throws IllegalArgumentException if invalid mode is provided
*/","* Sets the highlighting mode.
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @param highlightingMode the highlighting mode the defined values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setStyle(java.lang.String),140,143,"/**
 * Calls method m2 with COSName.S and string parameter.
 * @param s input string to be processed
 */","* This will set the border style, see the STYLE_* constants for valid values.
     *
     * @param s the border style to use",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(),35,39,"/**
* Initializes a new instance of PDExternalDataDictionary.
* Sets up the data dictionary with type ""ExData"".
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:setSubtype(java.lang.String),87,90,"/**
 * Sets the subtype for the current object.
 * @param subtype the subtype to be set
 */","* This will set the subtype of the external data dictionary.
     * 
     * @param subtype the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setName(java.lang.String),81,84,"/**
 * Sets a named entry in the dictionary.
 * @param name key to be set in the dictionary
 */","* The name of the software module that was used to create the signature.
     *
     * @param name is the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLType(java.lang.String),622,625,"/**
 * Sets URL type in dictionary.
 * @param urlType type of URL to be set
 */","* (Optional; PDF 1.7) A name indicating the usage of the URL entry. There are standard uses and
     * there can be implementation-specific uses for this URL. The following value specifies a valid
     * standard usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     * Third parties can extend the use of this attribute with their own attribute values, which
     * must conform to the guidelines specified in
     * <a href=""http://www.adobe.com/content/dam/acom/en/devnet/pdf/PDF32000_2008.pdf#page=681"">PDF
     * Spec 1.7 Appendix E (PDF Name Registry)</a>
     * if urlType is not set the default is Browser for URL
     *
     * @param urlType String of the urlType",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(),33,36,"/**
* Initializes a new PDF document outline.
* Sets the ""Type"" field of the underlying COS object to ""Outlines"".
*/",* Default Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(org.apache.pdfbox.cos.COSDictionary),43,47,"/**
* Constructs a PDDocumentOutline from a COSDictionary.
* @param dic dictionary containing outline data
*/","* Constructor for an existing document outline.
     *
     * @param dic The storage dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(),39,43,"/**
* Initializes a new PDMeasureDictionary with an empty dictionary.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:setSubtype(java.lang.String),92,95,"/**
 * Sets the subtype for the current object.
 * @param subtype the subtype to be set
 */","* This will set the subtype of the measure dictionary.
     * @param subtype the subtype of the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(),66,70,"/**
* Initializes a new PDNumberFormatDictionary.
* Sets up the number format dictionary with type attribute.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setName(java.lang.String),115,118,"/**
 * Calls m1 and then m2 on its result.
 * @param name the name to be passed to m2
 */","* This will set the name of the viewport.
    *  
    * @param name the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle),49,54,"/**
* Initializes a transition with a specified style.
* @param style the transition effect style
*/","* creates a new transition with the given style.
     * 
     * @param style the style to be used to create the new transition",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension),91,94,"/**
 * Masks transition dimension.
 * @param dimension transition dimension to mask
 */","* Sets the dimension in which the specified transition effect shall occur. Only for {@link PDTransitionStyle#Split}
     * and {@link PDTransitionStyle#Blinds}.
     * 
     * @param dimension the dimension in which the specified transition effect shall occur",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion),112,115,"/**
 * Applies a transition effect to a PDF page.
 * @param motion specifies the transition motion
 */","* Sets the direction of motion for the specified transition effect. Only for {@link PDTransitionStyle#Split},
     * {@link PDTransitionStyle#Blinds} and {@link PDTransitionStyle#Fly}.
     * 
     * @param motion the direction of motion for the specified transition effect",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE),298,301,"/**
* Sets non-full screen page mode preference.
* @param value mode to set for non-full screen view
*/","* Set the non full screen page mode preference.
     *
     * @param value Set the non full screen page mode preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION),318,321,"/**
* Sets reading direction preference.
* @param value direction setting to apply
*/","* Set the reading direction preference.
     *
     * @param value Set the reading direction preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),338,341,"/**
 * Sets view area boundary.
 * @param value BOUNDARY object defining the area
 */","* Set the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),358,361,"/**
 * Updates view clip boundary.
 * @param value BOUNDARY object representing new clip settings
 */","* Set the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),378,381,"/**
 * Sets print area boundary.
 * @param value boundary object containing print area settings
 */","* Set the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),398,401,"/**
 * Sets print clipping preference.
 * @param value boundary value to set
 */","* Set the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX),418,421,"/**
* Sets duplex printing preference.
* @param value duplex mode setting
*/","* Set the Duplex preference.  See DUPLEX enumeration.
     *
     * @param value Set the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING),438,441,"/**
* Sets print scaling preference.
* @param value new print scaling setting
*/","* Set the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @param value Set the PrintScaling preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",327,330,"/**
 * Masks a key with a given date.
 * @param key the COSName to be masked
 * @param date the date used for masking
 */","* Set the date object.
     *
     * @param key The key to the date.
     * @param date The date to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(java.lang.String,java.lang.String)",360,363,"/**
 * Calls overloaded method with COSName.
 * @param key   string key to be converted to COSName
 * @param value associated value
 */","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setLanguage(java.lang.String),589,592,"/**
 * Sets the document language.
 * @param language ISO 639-1 language code (e.g., ""en"" for English)
 */","* Sets the Language for the document.
     *
     * @param language The new document language.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTitle(java.lang.String),100,103,"/**
 * Sets the document title.
 * @param title the title to be set
 */","* This will set the title of the document.
     *
     * @param title The new title for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:setAuthor(java.lang.String),120,123,"/**
 * Sets the document's author metadata.
 * @param author name of the document author
 */","* This will set the author of the document.
     *
     * @param author The new author for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:setSubject(java.lang.String),140,143,"/**
 * Sets the document's subject metadata.
 * @param subject the subject to be set
 */","* This will set the subject of the document.
     *
     * @param subject The new subject for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:setKeywords(java.lang.String),160,163,"/**
 * Sets document keywords.
 * @param keywords comma-separated list of keywords
 */","* This will set the keywords of the document.
     *
     * @param keywords The new keywords for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreator(java.lang.String),180,183,"/**
 * Sets the creator information in metadata.
 * @param creator name of the document creator
 */","* This will set the creator of the document.
     *
     * @param creator The new creator for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:setProducer(java.lang.String),200,203,"/**
 * Sets the producer information in the document.
 * @param producer name of the document producer
 */","* This will set the producer of the document.
     *
     * @param producer The new producer for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setPrefix(java.lang.String),174,184,"/**
 * Masks a key with an optional prefix.
 * @param prefix prefix to use for masking; if null, uses default behavior
 */","* Sets the page label prefix for this page range.
     * 
     * @param prefix
     *            the page label prefix for this page range, or {@code null} to
     *            unset the prefix.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileUnicode(java.lang.String),140,143,"/**
 * Masks a file by setting its UF attribute.
 * @param file path to the file to be masked
 */","* This will set the unicode file name. If you call this, then do not forget to also call
     * {@link #setFile(java.lang.String) setFile(String)} or the attachment will not be visible on
     * some viewers.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFile(java.lang.String),163,167,"/**
 * Masks a file by invoking a filesystem operation.
 * @param file path to the file to be masked
 */","* This will set the file name. You should also call
     * {@link #setFileUnicode(java.lang.String) setFileUnicode(String)} for cross-platform and
     * cross-language compatibility.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileDescription(java.lang.String),343,346,"/**
 * Sets the description in the PDF document.
 * @param description text to be set as the document's description
 */","* Set the file description.
     * 
     * @param description The file description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setElementIdentifier(java.lang.String),127,130,"/**
 * Masks an ID by setting it in a COSName.
 * @param id the ID to be masked
 */","* Sets the element identifier (ID).
     * 
     * @param id the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setTitle(java.lang.String),512,515,"/**
 * Masks a title by setting it in a COSName.
 * @param title the title to be masked
 */","* Sets the title (T).
     * 
     * @param title the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setLanguage(java.lang.String),532,535,"/**
* Sets document language.
* @param language language code to be set
*/","* Sets the language (Lang).
     * 
     * @param language the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAlternateDescription(java.lang.String),552,555,"/**
 * Sets an alternative description.
 * @param alternateDescription the new description to set
 */","* Sets the alternate description (Alt).
     * 
     * @param alternateDescription the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setExpandedForm(java.lang.String),572,575,"/**
 * Masks an expanded form using COSName.E.
 * @param expandedForm the string to be masked
 */","* Sets the expanded form (E).
     * 
     * @param expandedForm the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setActualText(java.lang.String),592,595,"/**
 * Sets the actual text for an annotation.
 * @param actualText the text to be displayed
 */","* Sets the actual text (ActualText).
     * 
     * @param actualText the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setDate(java.lang.String),492,495,"/**
 * Masks a date by annotating it.
 * @param date the date to be masked
 */","* The annotation modification date.
     *
     * @param date The date to store in the FDF annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setName(java.lang.String),702,705,"/**
 * Masks a function by setting its name.
 * @param name the name of the function to mask
 */","* Set a unique name for an annotation.
     *
     * @param name The unique annotation name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setContents(java.lang.String),743,746,"/**
 * Masks the given contents by annotating them.
 * @param contents the content to be masked
 */","* Set the contents, or a description, for an annotation.
     *
     * @param contents The annotation contents, or a description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setTitle(java.lang.String),763,766,"/**
 * Sets the annotation title.
 * @param title the title to be set
 */","* Set a unique title for an annotation.
     *
     * @param title The annotation title.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setSubject(java.lang.String),826,829,"/**
 * Sets the annotation's subject.
 * @param subject the subject to be set
 */","* A short description of the annotation.
     *
     * @param subject The annotation subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setSymbol(java.lang.String),126,134,"/**
* Masks a symbol by converting it to a specific code.
* @param symbol the original symbol to be masked
*/","* This will set the symbol that shall be associated with the caret.
     * 
     * @param symbol the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultAppearance(java.lang.String),217,220,"/**
 * Sets the appearance of an annotation.
 * @param appearance visual representation string
 */","* Set the default appearance string.
     *
     * @param appearance The new default appearance string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultStyle(java.lang.String),238,241,"/**
 * Sets annotation style.
 * @param style the style to apply
 */","* Set the default style string.
     *
     * @param style The new default style string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionStyle(java.lang.String),376,379,"/**
 * Sets the caption style for annotations.
 * @param captionStyle style to apply to captions
 */","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionStyle caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setState(java.lang.String),123,126,"/**
 * Sets the annotation's state.
 * @param state the new state value
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setStateModel(java.lang.String),143,146,"/**
 * Sets the state model for annotation.
 * @param stateModel the state model value to set
 */","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setStatus(java.lang.String),366,369,"/**
* Sets the status using COSName.
* @param status new status value to set
*/","* This will set the status string.
     *
     * @param status The new status string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setTarget(java.lang.String),499,502,"/**
 * Sets the target for masking.
 * @param target the target string to be masked
 */","* This will set the target frame in the browser to open this document.
     *
     * @param target The new target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:setPartialFieldName(java.lang.String),221,224,"/**
 * Masks a field with a given partial value.
 * @param partial the partial value to mask the field with
 */","* This will set the partial field name.
     *
     * @param partial The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setName(java.lang.String),79,82,"/**
 * Sets a mask with the given name.
 * @param name the name of the mask to set
 */","* This will set the name of the referenced page.
     *
     * @param name The referenced page name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setInfo(java.lang.String),73,76,"/**
 * Masks a value by adding it to a dictionary.
 * @param value the value to mask
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputCondition(java.lang.String),83,86,"/**
 * Sets output condition in dictionary.
 * @param value condition string to be set
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputConditionIdentifier(java.lang.String),93,96,"/**
 * Masks a value by adding it to a dictionary.
 * @param value the value to be masked
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setRegistryName(java.lang.String),103,106,"/**
 * Masks a string value in the dictionary.
 * @param value the string to be masked
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,setName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:setName(java.lang.String),110,113,"/**
 * Masks a function by setting its name in the dictionary.
 * @param name the name of the function to mask
 */","* Sets the name of the optional content group.
     * @param name the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(),87,97,"/**
* Initializes PDOptionalContentProperties with default settings.
*/",* Creates a new optional content properties dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,setAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:setAction(java.lang.String),69,72,"/**
* Sets JavaScript action.
* @param sAction JavaScript code to execute
*/",* @param sAction The JavaScript.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setF(java.lang.String),131,134,"/**
 * Masks a function by name.
 * @param f function name to be masked
 */","* This will set the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @param f The file name to be launched.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setD(java.lang.String),151,154,"/**
 * Masks input data using COSName.D.
 * @param d data to be masked
 */","* This will set the string specifying the default directory in standard DOS syntax.
     *
     * @param d The default directory.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setO(java.lang.String),179,182,"/**
 * Masks an object by name.
 * @param o object to be masked
 */","* This will set the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @param o The operation to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setP(java.lang.String),201,204,"/**
 * Masks a string by passing it to an action method.
 * @param p the string to be masked
 */","* This will set a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @param p The parameter string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setURI(java.lang.String),92,95,"/**
 * Sets URI in PDF action.
 * @param uri the Uniform Resource Identifier to set
 */","* This will set the uniform resource identifier to resolve, encoded in
     * 7-bit ASCII.
     *
     * @param uri The uniform resource identifier.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setFilename(java.lang.String),114,117,"/**
 * Masks a file by adding it to the dictionary.
 * @param filename name of the file to mask
 */","* Sets the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @param filename a filename or null if the entry is to be deleted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationName(java.lang.String),252,255,"/**
 * Masks a given name by adding it to a dictionary.
 * @param name the name to be masked
 */","* This will get the value of the /NM entry in the annotation dictionary.
     *
     * @param name the /NM value of an annotation dictionary or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setFilename(java.lang.String),89,92,"/**
 * Masks a file by setting its parameter.
 * @param file path to the file to be masked
 */","* Set the file to launch.
     *
     * @param file The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setDirectory(java.lang.String),109,112,"/**
* Masks directory by setting parameter.
* @param dir directory path to be masked
*/","* Set the dir to launch from.
     *
     * @param dir The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setOperation(java.lang.String),132,135,"/**
 * Masks operation by setting parameter.
 * @param op operation to mask
 */","* Set the operation to perform..
     *
     * @param op The operation to perform on the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setExecuteParam(java.lang.String),152,155,"/**
 * Masks parameter by adding it to COS parameters.
 * @param param value to be masked
 */","* Set the parameter to pass the executable.
     *
     * @param param The parameter for the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setContents(java.lang.String),616,619,"/**
 * Sets the content of a PDF dictionary entry.
 * @param value the content string to be set
 */","* Set the ""contents"" of the field.
     * 
     * @param value the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.lang.String),640,643,"/**
 * Masks input string using specific method.
 * @param m input string to be masked
 */","* This will set the date and time the annotation was modified.
     *
     * @param m the date and time the annotation was created. Date values used in a PDF shall
     * conform to a standard date format, which closely follows that of the international standard
     * ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string
     * of the form (D:YYYYMMDDHHmmSSOHH'mm). Alternatively, use
     * {@link #setModifiedDate(java.util.Calendar)}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationName(java.lang.String),672,675,"/**
* Masks a name by setting it in a PDF document.
* @param nm the name to be masked
*/","* This will set the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @param nm The identifying name for the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultAppearance(java.lang.String),86,89,"/**
 * Sets the field appearance string.
 * @param daValue the appearance string to set
 */","* Set the default appearance.
     *
     * @param daValue a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultStyleString(java.lang.String),110,113,"/**
 * Sets default style string.
 * @param defaultStyleString style to be applied
 */","* Set the default style string.
     *
     * Providing null as the value will remove the default style string.
     *
     * @param defaultStyleString a string describing the default style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setTitlePopup(java.lang.String),83,86,"/**
 * Masks text by setting its visibility.
 * @param t text to be masked
 */","* Set the string used as the title of the popup window shown when open and active (by convention this identifies
     * who added the annotation).
     *
     * @param t The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setSubject(java.lang.String),220,223,"/**
 * Sets the subject of a document.
 * @param subj the subject string to be set
 */","* This will set the short description of the subject of the annotation.
     *
     * @param subj short description of the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setState(java.lang.String),198,201,"/**
 * Sets the state for an operation.
 * @param state the state to be set
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setStateModel(java.lang.String),218,221,"/**
 * Sets the state model.
 * @param stateModel the state model to be set
 */","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setNormalCaption(java.lang.String),136,139,"/**
 * Sets the caption mask.
 * @param caption text to be masked
 */","* This will set the normal caption.
     * 
     * @param caption the normal caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRolloverCaption(java.lang.String),156,159,"/**
 * Sets a caption using COSName.RC.
 * @param caption text to be set as caption
 */","* This will set the rollover caption.
     * 
     * @param caption the rollover caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setAlternateCaption(java.lang.String),176,179,"/**
 * Masks content with a given caption.
 * @param caption text to mask the content
 */","* This will set the alternate caption.
     * 
     * @param caption the alternate caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setDate(java.lang.String),103,106,"/**
 * Sets the DATE field in the dictionary with the provided date.
 * @param date the date string to be set
 */","* The build date of the software module. This string is normally produced by the compiler.
     *
     * @param date is the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURL(java.lang.String),577,580,"/**
 * Sets URL in dictionary.
 * @param url the URL to be set
 */","* (Optional) A URL, the use for which is defined by the URLType entry.
     *
     * @param url String of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setURL(java.lang.String),76,79,"/**
 * Masks a URL by adding it to a dictionary.
 * @param url the URL to be masked
 */","* Sets the URL.
     * @param url the URL to be set as URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setName(java.lang.String),154,157,"/**
 * Masks a name by adding it to the dictionary.
 * @param name the name to be masked
 */","* Sets the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @param name the name to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setLocation(java.lang.String),164,167,"/**
 * Sets the document location in the PDF.
 * @param location the location string to be set
 */","* Sets the CPU host name or physical location of the signing.
     *
     * @param location the location to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setReason(java.lang.String),174,177,"/**
 * Sets the mask reason in the dictionary.
 * @param reason the reason for masking
 */","* Sets the reason for the signing, such as (I agree...).
     *
     * @param reason the reason to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContactInfo(java.lang.String),185,188,"/**
 * Sets contact information in the dictionary.
 * @param contactInfo user's contact details
 */","* Sets the contact info provided by the signer to enable a recipient to contact the signer to
     * verify the signature, e.g. a phone number.
     *
     * @param contactInfo the contact info to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTitle(java.lang.String),175,178,"/**
 * Sets document title.
 * @param title document title to be set
 */","* Set the title for this node.
     *
     * @param title The new title for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultAppearance(java.lang.String),510,513,"/**
 * Sets the default appearance value.
 * @param daValue the default appearance string
 */","* Set the default appearance.
     * 
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDefaultValue(java.lang.String),390,393,"/**
 * Masks a value by setting it in a specific context.
 * @param value the value to be masked
 */","* Sets the default value of this field.
     *
     * @param value The name of the selected item.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setPartialName(java.lang.String),391,399,"/**
 * Masks a field name by adding it to the dictionary.
 * @param name the field name to mask
 * @throws IllegalArgumentException if the name contains a period character
 */","* This will set the partial name of the field.
     * 
     * @param name The new name for the field.
     * @throws IllegalArgumentException If the name contains a period character.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setAlternateFieldName(java.lang.String),444,447,"/**
 * Sets an alternative field name in the dictionary.
 * @param alternateFieldName the name to set as an alternative field
 */","* This will set the alternate name of the field (""shall be used in place of the actual field
     * name wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)""). The text appears as a tool tip in Adobe Reader. Because
     * of the usage for error or status messages, it should be different for each field.
     *
     * @param alternateFieldName the alternate name of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setMappingName(java.lang.String),467,470,"/**
 * Sets mapping name in dictionary.
 * @param mappingName the name to map
 */","* This will set the mapping name of the field.
     * 
     * @param mappingName the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(java.lang.String),227,233,"/**
 * Masks a value using COSName.V.
 * @param value the value to be masked
 * @throws IOException if an I/O error occurs
 */","* Sets the plain text value of this field.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setValue(java.lang.String),214,219,"/**
* Masks a value by setting it in a PDF document.
* @param value the value to be masked
*/","* Set the plain text value of this field, and try to update the visual appearance.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDefaultValue(java.lang.String),226,229,"/**
 * Masks a value by setting it in a COS object.
 * @param value the value to mask
 */","* Sets the default value of this field.
     *
     * @param value Plain text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultAppearance(java.lang.String),128,144,"/**
 * Masks a field value in PDF annotations.
 * @param daValue the new DA value to set
 */","* Set the default appearance.
     * 
     * This will set the local default appearance for the variable text field only, not 
     * affecting a default appearance in the parent hierarchy.
     * 
     * Providing null as the value will remove the local default appearance.
     * <p>
     * This method can also be used to change the font of a field, by replacing the font name from
     * this string with another font name found in the AcroForm default resources <u>before</u>
     * calling {@link #setValue(java.lang.String) setValue(String)}, see also
     * <a href=""https://stackoverflow.com/questions/47995062/pdfbox-api-how-to-handle-cyrillic-values"">this
     * stackoverflow answer</a>. For example, ""/Helv 10 Tf 0 g"" can be replaced with ""/F1 10 Tf 0
     * g"". Performance may go down (see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4508"">PDFBOX-4508)</a> if this is done
     * for many fields and with a very large font (e.g. ArialUni); to avoid this, save and reload
     * the file after changing all fields.
     *
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setScaleRatio(java.lang.String),68,71,"/**
 * Sets scaling ratio.
 * @param scaleRatio scaling factor as string
 */","* This will set the scale ration.
     * 
     * @param scaleRatio the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(java.lang.String,int)",410,413,"/**
 * Calls overloaded method with COSName instance.
 * @param key string key to convert to COSName
 * @param value integer value associated with the key
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setStructParents,org.apache.pdfbox.pdmodel.PDPage:setStructParents(int),376,379,"/**
 * Sets structure parents in PDF document.
 * @param structParents parent structure index
 */","* This will set the key for this page in the structural parent tree.
     * 
     * @param structParents The new key for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setRotation,org.apache.pdfbox.pdmodel.PDPage:setRotation(int),602,605,"/**
 * Sets the page rotation.
 * @param rotation angle in degrees (0, 90, 180, or 270)
 */","* This will set the rotation for this page.
     * 
     * @param rotation The new rotation for this page in degrees.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStart(int),146,154,"/**
* Sets the starting page number.
* @param start positive integer indicating the starting page
*/","* Sets the start value for page numbering in this page range.
     * 
     * @param start
     *            a positive integer representing the start value.
     * @throws IllegalArgumentException
     *             if {@code start} is not a positive integer",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setBitsPerSample(int),134,137,"/**
 * Sets bits per sample in PDF document.
 * @param bps number of bits per sample
 */","* Set the number of bits that the output value will take up. Valid values
     * are 1,2,4,8,12,16,24,32.
     *
     * @param bps The number of bits for each output value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setMCID(int),99,102,"/**
 * Sets mask content identifier.
 * @param mcid mask content identifier value
 */","* Sets the marked content identifier.
     * 
     * @param mcid the marked content identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setRevisionNumber(int),480,487,"/**
* Sets mask with given revision number.
* @param revisionNumber non-negative integer representing the revision
*/","* Sets the revision number (R).
     * 
     * @param revisionNumber the revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTreeNextKey(int),166,169,"/**
* Sets the next key in the parent tree.
* @param parentTreeNextkey the next key value to set
*/","* Sets the next key in the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     * 
     * @param parentTreeNextkey The next key in the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setLength(int),73,76,"/**
 * Sets the mask length in the cryptographic filter dictionary.
 * @param length the desired length of the mask
 */","* This will set the number of bits to use for the crypt filter algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setVersion(int),192,195,"/**
 * Sets PDF version mask.
 * @param version PDF version number to set
 */","* This will set the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.  <br><br>
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param version The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setLength(int),213,216,"/**
 * Sets the length in the dictionary.
 * @param length the length value to set
 */","* This will set the number of bits to use for the encryption algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRevision(int),238,241,"/**
 * Masks a function with a given revision.
 * @param revision the revision number to apply
 */","* This will set the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.  <br><br>
     *
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param revision The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPermissions(int),397,400,"/**
 * Sets document permissions.
 * @param permissions bitmask representing access rights
 */","* This will set the permissions bit mask.
     *
     * @param permissions The new permissions bit mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPage(int),437,440,"/**
 * Marks a page in an annotation.
 * @param page page number to be marked
 */","* This will set the page.
     *
     * @param page The page number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setJustification(java.lang.String),168,180,"/**
* Sets text justification for annotations.
* @param justification alignment type (""centered"" or ""right"")
*/","* This will set the form of quadding (justification) of the annotation text.
     * 
     * @param justification The quadding of the text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setRotation(int),197,200,"/**
 * Sets document rotation.
 * @param rotation angle in degrees (0, 90, 180, or 270)
 */","* This will set the clockwise rotation in degrees.
     * 
     * @param rotation The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(int),364,367,"/**
 * Sets form field mask.
 * @param ff mask value to apply
 */","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(int),408,411,"/**
 * Sets a mask value in the field.
 * @param ff the mask value to set
 */","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(int),452,455,"/**
 * Sets mask value in field.
 * @param ff mask value to set
 */","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(int),496,499,"/**
 * Sets a mask value on the field.
 * @param f integer representing the mask value
 */","* This will set the field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(int),540,543,"/**
 * Sets mask value in PDF field.
 * @param ff mask value to set
 */","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(int),584,587,"/**
 * Sets mask value for field.
 * @param ff mask value to be applied
 */","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,toCIDSystemInfo,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:toCIDSystemInfo(java.lang.String,java.lang.String,int)",181,188,"/**
* Creates a COSDictionary with font encoding information.
* @param registry font registry name
* @param ordering font ordering name
* @param supplement font supplement number
* @return COSDictionary containing font encoding details
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",34,40,"/**
* Initializes PDCIDSystemInfo with registry, ordering, and supplement.
* @param registry the registry string
* @param ordering the ordering string
* @param supplement the supplement integer
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlags(int),400,404,"/**
 * Sets document flags.
 * @param flags bitmask representing document flags
 */","* This will set the font flags.
     *
     * @param flags The new font flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,setWidths,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",76,116,"/**
* Masks font with horizontal metrics and updates dictionary.
* @param font COSDictionary to update
* @param glyphList GlyphList for character mapping
*/",* Sets the glyph widths in the font dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",137,155,"/**
* Creates a PDImageXObject from byte array with CCITTFAX_DECODE filter.
* @param document PDDocument to associate the image with
* @param byteArray raw image data
* @param width image width in pixels
* @param height image height in pixels
* @param initColorSpace color space for the image
* @return PDImageXObject created from byte array
* @throws IOException if an I/O error occurs
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,extractFromTiff,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:extractFromTiff(org.apache.pdfbox.io.RandomAccessRead,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",235,455,"/**
* Reads and processes TIFF image data.
* @param reader source of TIFF data
* @param os output stream for processed data
* @param params dictionary to store image parameters
* @param number number of images to process
* @throws IOException if reading fails or file is invalid
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setBitsPerComponent(int),124,128,"/**
 * Sets bits per component.
 * @param bitsPerComponent number of bits to represent each color component
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setHeight(int),211,215,"/**
 * Sets mask height.
 * @param height mask height value
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setWidth(int),223,227,"/**
* Sets the width parameter in the PDF mask.
* @param width the width value to be set
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPaintType(int),100,103,"/**
 * Sets the paint type in the pattern dictionary.
 * @param paintType the type of painting to be used
 */","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPatternType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPatternType(int),118,121,"/**
 * Sets pattern type in dictionary.
 * @param patternType type of pattern to set
 */","* This will set the pattern type.
     * @param patternType The new pattern type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setPaintType(int),100,104,"/**
* Sets the paint type for an object.
* @param paintType the type of painting to apply
*/","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setTilingType(int),119,122,"/**
 * Sets tiling type for PDF.
 * @param tilingType type of tiling to be used
 */","* This will set the tiling type.
     * @param tilingType The new tiling type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setShadingType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setShadingType(int),125,128,"/**
 * Sets the shading type in the dictionary.
 * @param shadingType the type of shading to apply
 */","* This will set the shading type.
     *
     * @param shadingType the new shading type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerFlag(int),79,82,"/**
* Sets bits per flag configuration.
* @param bitsPerFlag number of bits to use for flags
*/","* Set the number of bits per flag.
     *
     * @param bitsPerFlag the number of bits per flag",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setVerticesPerRow(int),75,78,"/**
* Sets the number of vertices per row.
* @param verticesPerRow number of vertices in each row
*/","* Set the number of vertices per row.
     *
     * @param verticesPerRow the number of vertices per row",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits for each color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate.
* @param bitsPerCoordinate number of bits for each coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineCapStyle(int),252,255,"/**
 * Sets line cap style.
 * @param style line cap style identifier
 */","* This will set the line cap style for the graphics state.
     *
     * @param style The new line cap style to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineJoinStyle(int),272,275,"/**
 * Sets line join style.
 * @param style line join style identifier
 */","* This will set the line join style.
     *
     * @param style The new line join style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setOverprintMode(java.lang.Integer),420,430,"/**
* Sets overprint mode in dictionary.
* @param overprintMode the overprint mode to set or null to remove it
*/","* This will set the overprint mode(OPM).
     *
     * @param overprintMode The overprint mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFlags(int),85,88,"/**
 * Sets action flags.
 * @param flags bitmask representing action options
 */",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFlags(int),111,114,"/**
* Sets action flags.
* @param flags bitmask representing action options
*/",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setPageNumber(int),160,170,"/**
* Sets page number in dictionary.
* @param pageNumber the page number to set
*/","* Set the page number (zero-based) in the current document containing the file attachment
     * annotation.
     *
     * @param pageNumber the zero based page number. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationIndex(int),223,233,"/**
* Masks or unmasks dictionary entry based on index.
* @param index position in the dictionary; negative to mask, non-negative to unmask
*/","* This will set the index (zero-based) of the annotation in the /Annots array of the page
     * specified by the /P entry.
     *
     * @param index the zero based index. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationFlags(int),302,305,"/**
 * Masks operations with specified flags.
 * @param flags bitmask representing operation flags
 */","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setStructParent(int),693,696,"/**
 * Sets structure parent index.
 * @param structParent index of structure parent
 */","* This will set the key for this annotation in the structural parent tree.
     * 
     * @param structParent The new key for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setQ(int),136,139,"/**
 * Masks a value using COSName.Q.
 * @param q value to be masked
 */","* This will set the quadding/justification of the text. Please see the QUADDING_CONSTANTS
     * in {@link PDVariableText }.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRotation(int),76,79,"/**
* Sets mask rotation.
* @param rotation degrees to rotate the mask
*/","* This will set the rotation.
     * 
     * @param rotation the rotation as a multiple of 90",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,setP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:setP(int),77,84,"/**
* Masks a value in the dictionary.
* @param p value to mask, must be between 0 and 3
*/","* Set the P value.
     * 
     * @param p the value to be set as P",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setTimestampRequired(boolean),96,99,"/**
 * Sets form field type based on flag.
 * @param flag true for text field, false otherwise
 */","* Sets if a timestamp is reuqired or not.
     * 
     * @param flag true if a timestamp is required",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setOpenCount(int),234,237,"/**
 * Sets the count of open items.
 * @param openCount number of open items to set
 */","* Set the open count. This number is automatically managed for you when you add items to the outline.
     *
     * @param openCount The new open count.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setQ(int),622,625,"/**
 * Sets the quality parameter in the dictionary.
 * @param q quality value to be set
 */","* This will set the document-wide default value for the quadding/justification of variable text
     * fields. See the QUADDING constants of {@link PDVariableText}.
     *
     * @param q The justification of the variable text fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDField:setFieldFlags(int),213,216,"/**
 * Sets form field flags.
 * @param flags bitmask of field attributes
 */","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,setTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:setTopIndex(java.lang.Integer),69,79,"/**
* Sets or removes the top index in a document.
* @param topIndex the index to set; if null, removes the top index
*/","* This will set top index ""TI"" value.
     *
     * @param topIndex the value for the top index, null will remove the value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMaxLen(int),203,206,"/**
 * Sets maximum length constraint.
 * @param maxLen maximum allowed length
 */","* Sets the maximum number of characters of the text field.
     * 
     * @param maxLen the maximum number of characters",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setQ(int),208,211,"/**
 * Calls m2 with COSName.Q and integer value.
 * @param q integer value to be passed to m2
 */","* This will set the quadding/justification of the text.  See QUADDING constants.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(java.lang.String,long)",432,435,"/**
 * Calls overloaded method with COSName.
 * @param key string key to be converted to COSName
 * @param value long value associated with the key
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setRevision(long),151,154,"/**
 * Updates dictionary with revision.
 * @param revision new revision number to set
 */","* The software module revision number, corresponding to the Date attribute.
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setMinimumRevision(long),179,182,"/**
 * Masks a revision in the dictionary.
 * @param revision the revision number to mask
 */","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(java.lang.String,float)",473,476,"/**
 * Calls m2 with COSName from key and given float value.
 * @param key string key to convert to COSName
 * @param value float value to pass
 */","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setUserUnit,org.apache.pdfbox.pdmodel.PDPage:setUserUnit(float),890,897,"/**
* Sets user unit on PDF page.
* @param userUnit scaling factor for user space units
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch. This is supported by PDF 1.6 and higher.
     *
     * @param userUnit
     * throws IllegalArgumentException if the parameter is not positive.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineWidth(float),132,135,"/**
 * Sets the line width in the PDF document.
 * @param width the desired line width
 */","* Set the guideline width.
     *
     * @param width The width in default user space units.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setOpacity(float),805,808,"/**
 * Sets annotation opacity.
 * @param opacity transparency level (0.0 to 1.0)
 */","* Set the annotation opacity.
     *
     * @param opacity The new opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderLength(float),316,319,"/**
 * Sets the leader line length.
 * @param leaderLength the length of the leader line
 */","* This will set the length of the leader line.
     * 
     * @param leaderLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderExtend(float),336,339,"/**
 * Sets leader line extension.
 * @param leaderExtend extension length of leader line
 */","* This will set the length of the leader line extensions.
     * 
     * @param leaderExtend length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderOffset(float),356,359,"/**
 * Sets the leader offset for annotation.
 * @param leaderOffset the offset value for the leader line
 */","* This will set the length of the leader line offset.
     * 
     * @param leaderOffset length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseDictElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseDictElement(org.w3c.dom.Element),357,423,"/**
* Parses a dictionary element and its children.
* @param dictEl the dictionary element to parse
* @return COSDictionary representing the parsed structure
* @throws IOException if an I/O error occurs during parsing
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontWeight(float),347,350,"/**
 * Sets font weight in dictionary.
 * @param fontWeight numeric value representing font weight
 */","* Set the weight of the font.
     *
     * @param fontWeight The new weight of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalicAngle(float),452,455,"/**
 * Sets the italic angle in a dictionary.
 * @param angle the italic angle value
 */","* This will set the italic angle for the font.
     *
     * @param angle The new italic angle for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAscent(float),472,475,"/**
 * Sets the font ascent value.
 * @param ascent the ascent value to set
 */","* This will set the ascent for the font.
     *
     * @param ascent The new ascent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setDescent(float),492,495,"/**
 * Sets the font descent value.
 * @param descent the font descent metric
 */","* This will set the descent for the font.
     *
     * @param descent The new descent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setLeading(float),512,515,"/**
 * Sets leading property in dictionary.
 * @param leading spacing between lines of text
 */","* This will set the leading for the font.
     *
     * @param leading The new leading for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCapHeight(float),541,545,"/**
* Sets and records the font's cap height.
* @param capHeight the height of capital letters in the font
*/","* This will set the cap height for the font.
     *
     * @param capHeight The new cap height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setXHeight(float),570,574,"/**
* Sets the X-Height value.
* @param xHeight the new X-Height value to set
*/","* This will set the x height for the font.
     *
     * @param xHeight The new x height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemV(float),591,594,"/**
 * Sets the vertical stem width.
 * @param stemV vertical stem width value
 */","* This will set the stem V for the font.
     *
     * @param stemV The new stem v for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemH(float),611,614,"/**
 * Sets the stem height for font rendering.
 * @param stemH height of the stem in font units
 */","* This will set the stem H for the font.
     *
     * @param stemH The new stem h for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAverageWidth(float),631,634,"/**
 * Sets the average width in the dictionary.
 * @param averageWidth the average width value to set
 */","* This will set the average width for the font.
     *
     * @param averageWidth The new average width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMaxWidth(float),651,654,"/**
 * Sets the maximum width in the dictionary.
 * @param maxWidth the maximum width value to set
 */","* This will set the max width for the font.
     *
     * @param maxWidth The new max width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMissingWidth(float),691,694,"/**
 * Sets the missing width in the dictionary.
 * @param missingWidth the width to be set
 */","* This will set the missing width for the font.
     *
     * @param missingWidth The new missing width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setXStep(float),137,140,"/**
 * Sets X step value.
 * @param xStep step size for X axis
 */","* This will set the XStep value.
     * @param xStep The new XStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setYStep(float),155,158,"/**
 * Sets the Y-axis step value.
 * @param yStep the step size on the Y-axis
 */","* This will set the YStep value.
     * @param yStep The new YStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setVolume(float),83,90,"/**
* Sets audio volume.
* @param volume level from -1.0 to 1.0
*/","* Gets the volume at which to play the sound, in the range −1.0 to 1.0.
     *
     * @param volume The volume at which to play the sound, in the range −1.0 to 1.0.
     * 
     * @throws IllegalArgumentException if the volume parameter is outside of the range −1.0 to 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineLength(float),282,285,"/**
 * Sets leader line length.
 * @param leaderLineLength length of the leader line
 */","* This will set the length of the leader line.
     * 
     * @param leaderLineLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineExtensionLength(float),302,305,"/**
* Sets leader line extension length.
* @param leaderLineExtensionLength length of leader line extension
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderLineExtensionLength length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineOffsetLength(float),322,325,"/**
* Sets leader line offset length.
* @param leaderLineOffsetLength the offset length of the leader line
*/","* This will set the length of the leader line offset.
     * 
     * @param leaderLineOffsetLength length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setConstantOpacity(float),124,127,"/**
 * Sets the ""CA"" property in the current object.
 * @param ca value to be set for the ""CA"" property
 */","* This will set the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @param ca the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setWidth(float),106,117,"/**
* Sets width property.
* @param w desired width value
*/","* This will set the border width in points, 0 = no border.
     *
     * There is a bug in Adobe Reader DC, float values are ignored for text field widgets. As a
     * workaround, floats that are integers (e.g. 2.0) are written as integer in the PDF.
     * <p>
     * In Adobe Acrobat DC, the values are shown as ""0 = Invisible, 1 = Thin, 2 = Medium, 3 = Thick""
     * for widget and link annotations.
     *
     * @param w float the width in points",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setV(float),363,366,"/**
* Sets minimum capability requirement.
* @param minimumRequiredCapability the required capability level
*/","* (Optional) The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @param minimumRequiredCapability is the minimum required capability of the
     * signature field seed value dictionary parser",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCYX(float),331,334,"/**
 * Sets CYX value in m2 of m1.
 * @param cyx CYX float value to set
 */","* This will set the CYX factor.
     * 
     * @param cyx CYX factor",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseCOSStream,org.apache.pdfbox.pdfparser.COSParser:parseCOSStream(org.apache.pdfbox.cos.COSDictionary),713,777,"/**
 * Processes a COSDictionary to create a COSStream.
 * @param dic dictionary containing stream data
 * @return processed COSStream object
 * @throws IOException if processing fails
 */","* This will read a COSStream from the input stream using length attribute within dictionary. If
     * length attribute is a indirect reference it is first resolved to get the stream length. This
     * means we copy stream data without testing for 'endstream' or 'endobj' and thus it is no
     * problem if these keywords occur within stream. We require 'endstream' to be found after
     * stream data is read.
     *
     * @param dic dictionary that goes with this stream.
     *
     * @return parsed pdf stream.
     *
     * @throws IOException if an error occurred reading the stream, like problems with reading
     * length attribute, stream does not end with 'endstream' after data read, stream too short etc.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFStreamParser:parse(),79,88,"/**
* Reads and collects objects from a stream.
* @return List of collected objects or empty list if none found
*/","* This will parse all the tokens in the stream. This will close the stream when it is finished parsing.
     *
     * @return All of the tokens in the stream.
     * @throws IOException If there is an error while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getGlyphBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getGlyphBBox(),114,152,"/**
* Parses PDF stream to extract rectangle dimensions.
* @return PDRectangle object or null if parsing fails
*/","* Calculate the bounding box of this glyph. This will work only if the first operator in the
     * stream is d1.
     *
     * @return the bounding box of this glyph, or null if the first operator is not d1.
     * @throws IOException If an io error occurs while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getWidth(),167,185,"/**
 * Parses PDF stream and processes operators.
 * @return float result from processing
 * @throws IOException if parsing fails
 */","* Get the width from a type3 charproc stream.
     *
     * @return the glyph width.
     * @throws IOException if the stream could not be read, or did not have d0 or d1 as first
     * operator, or if their first argument was not a number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(),162,165,"/**
 * Constructs a new PDF document using an in-memory stream cache.
 */","* Creates an empty PDF document.
     * You need to add at least one page for the document to be valid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),49,57,"/**
* Creates a complex file specification from a COSBase.
* @param base the COSBase object to be converted
* @return PDComplexFileSpecification object
* @throws IOException if base is not a COSDictionary
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,createFS,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:createFS(org.apache.pdfbox.cos.COSBase),45,65,"/**
* Creates a PDFileSpecification from a COSBase.
* @param base the COSBase object to process
* @return PDFileSpecification created or null if base is null
* @throws IOException if base type is unknown
*/","* A file specification can either be a COSString or a COSDictionary.  This
     * will create the file specification either way.
     *
     * @param base The cos object that describes the fs.
     *
     * @return The file specification for the COSBase object.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(),42,46,"/**
 * Constructs a new FDF annotation caret.
 * Initializes the subtype to ""Caret"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(),43,47,"/**
 * Constructs a new circle annotation.
 * Sets the subtype to 'CIRCLE'.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(),40,44,"/**
 * Constructs a new FDF annotation for file attachment.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(),49,52,"/**
* Creates a new FDFAnnotationFreeText object.
* Initializes the annotation subtype to ""FreeText"".
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(),54,58,"/**
 * Constructs an FDFAnnotationInk object.
 * Sets the annotation subtype to ""INK"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(),46,49,"/**
 * Creates an FDF annotation line.
 * Sets the subtype to ""Line"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(),52,55,"/**
 * Initializes a new FDF annotation link.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(),50,54,"/**
 * Creates a new polygon annotation.
 * Initializes the annotation with subtype ""Polygon"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(),51,55,"/**
 * Initializes a new polyline annotation.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(),40,44,"/**
 * Constructs a new sound annotation.
 * Initializes the annotation subtype to ""Sound"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(),44,48,"/**
 * Creates a new square annotation.
 * Sets the subtype to ""Square"".
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(),62,65,"/**
* Initializes a new stamp annotation.
* Sets the subtype to ""Stamp"".
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(),42,46,"/**
* Constructs an FDF annotation text object.
* Initializes the annotation subtype to ""Text"".
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(),36,38,"/**
* Default constructor for FDFAnnotationTextMarkup.
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initCallout(org.w3c.dom.Element),121,134,"/**
 * Processes and converts callout values from an element.
 * @param element the XML element containing callout data
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:initVertices(org.w3c.dom.Element),87,109,"/**
 * Parses and processes polygon vertices from XML element.
 * @param element XML element containing vertex data
 * @throws IOException if 'vertices' element is missing or invalid
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initVertices(org.w3c.dom.Element),83,105,"/**
 * Parses and processes 'vertices' element using XPath.
 * @param element XML element to process
 * @throws IOException if 'vertices' is missing or invalid
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(java.util.TreeMap),337,393,"/**
* Processes CID to GID mapping for font metrics.
* @param cidToGid map of CID to GID
* @throws IOException if I/O error occurs
*/",* Builds vertical metrics with a custom CIDToGIDMap (for embedding font subset).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary),516,545,"/**
* Masks CID font metrics.
* @param cidFont CID font dictionary to process
*/",* Build vertical metrics with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(),57,59,"/**
 * Constructs a new instance of PDSimpleFont.
 */",* Constructor for embedding.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets decoding values and updates PDF object.
* @param decodeValues array of decoding parameters
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
 * Sets decoding values for the object.
 * @param decodeValues array of decoding values to be set
 */","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineWidth(java.lang.Float),232,235,"/**
* Sets line width.
* @param width line width value
*/","* This will set the line width.
     *
     * @param width The line width for the object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setMiterLimit(java.lang.Float),293,296,"/**
 * Sets the miter limit for PDF line joins.
 * @param miterLimit maximum ratio of miter length to line width
 */","* This will set the miter limit for the graphics state.
     *
     * @param miterLimit The new miter limit value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFlatnessTolerance(java.lang.Float),468,471,"/**
 * Sets PDF content stream flatness.
 * @param flatness desired flatness value
 */","* This will set the flatness tolerance.
     *
     * @param flatness The new flatness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setSmoothnessTolerance(java.lang.Float),488,491,"/**
 * Sets the smoothness parameter.
 * @param smoothness value controlling smoothness
 */","* This will set the smoothness tolerance.
     *
     * @param smoothness The new smoothness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingAlphaConstant(java.lang.Float),528,531,"/**
 * Sets the opacity level.
 * @param alpha transparency value (0.0 to 1.0)
 */","* This will set the stroking alpha constant.
     *
     * @param alpha The new stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingAlphaConstant(java.lang.Float),548,551,"/**
 * Sets the non-stroking alpha value.
 * @param alpha opacity level (0.0 to 1.0)
 */","* This will set the non stroking alpha constant.
     *
     * @param alpha The new non stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(),71,74,"/**
 * Creates a new PDF annotation link.
 * Initializes the COS object with the subtype ""Link"".
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(),52,54,"/**
* Constructs a new PDAnnotationMarkup instance.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(),44,47,"/**
 * Constructs a new PDF annotation popup.
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(),43,46,"/**
 * Creates a new PDF annotation widget.
 * Initializes the COS object with the subtype.
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float),62,64,"/**
 * Calls overloaded method with four identical float parameters.
 * @param difference value to be used for all parameters
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and boundaries of the underlying.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float),149,151,"/**
 * Calls overloaded method with four identical float parameters.
 * @param difference value to be passed to all parameters
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float),137,140,"/**
 * Calls overloaded method with four identical float arguments.
 * @param difference value to be passed to all parameters
 */","* This will set the difference between the annotations ""outer"" rectangle defined by /Rect and
     * the border.
     *
     * <p>
     * This will set an equal difference for all sides</p>
     *
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),41,44,"/**
 * Constructs a new PDCheckBox associated with an acroform.
 * @param acroForm the PDAcroForm to which this checkbox belongs
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Constructs a PDComboBox.
 * @param acroForm parent form containing the combo box
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),37,40,"/**
 * Constructs a new PDListBox.
 * @param acroForm parent form containing this list box
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),106,112,"/**
* Creates a signature field in the PDF form.
* @param acroForm the PDF form to add the signature field to
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,addOriginalContent,"org.apache.pdfbox.multipdf.Overlay:addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",431,450,"/**
* Masks contents into the provided array.
* @param contents the content to be masked
* @param contentArray the target array for masking
* @throws IOException if an I/O error occurs or unknown content type is encountered
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createColorSpace(org.apache.pdfbox.cos.COSBase),168,192,"/**
* Converts COSBase to PDColorSpace.
* @param cs color space base
* @return PDColorSpace object
* @throws IOException if conversion fails
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.pdfbox.cos.COSArray),147,165,"/**
* Initializes PDRectangle from a COSArray.
* @param array COSArray containing rectangle coordinates
*/","* Constructor.
     *
     * @param array An array of numbers as specified in the PDF Reference for a rectangle type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(org.apache.pdfbox.cos.COSArray,int)",52,76,"/**
* Initializes a line dash pattern from an array and phase.
* @param array COSArray containing dash lengths
* @param phase starting point of the dash pattern
*/","* Creates a new line dash pattern from a dash array and phase.
     * @param array the dash array
     * @param phase the phase",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getDecodeArray,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage),741,784,"/**
* Retrieves and processes the decode array from a PDF image.
* @param pdImage the PDF image object
* @return float array representing the decode values or default if not compatible
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,checkFontMatrixValues,org.apache.pdfbox.pdmodel.font.PDType3Font:checkFontMatrixValues(org.apache.pdfbox.cos.COSArray),266,270,"/**
* Checks if matrix is valid and meets specific conditions.
* @param matrix the COSArray to check
* @return true if matrix is not null, m1 equals 6, and m2's m3's m4 is non-null; false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,toString,org.apache.pdfbox.pdmodel.common.PDRange:toString(),136,140,"/**
 * Generates a string representation of PDRange.
 * @return formatted string with values from m1 and m2
 */",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:eval(float[]),68,103,"/**
* Applies a mask function to input values.
* @param input array of input float values
* @return processed output float array
*/",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setRangeForComponent,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",511,527,"/**
* Masks a PDRange in the stream's range array.
* @param range the PDRange to mask
* @param n index of the range in the array
*/","* Sets the range for this color space.
     * @param range the new range for the a component
     * @param n the component to set the range for",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,readPatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)",175,232,"/**
* Processes image data to create a patch.
* @param input stream for reading image data
* @param isFree flag indicating if points are free
* @param implicitEdge predefined edge points
* @param implicitCornerColor predefined corner colors
* @param maxSrcCoord maximum source coordinate value
* @param maxSrcColor maximum source color value
* @param rangeX horizontal coordinate range
* @param rangeY vertical coordinate range
* @param colRange color component ranges
* @param matrix transformation matrix
* @param xform affine transform
* @param controlPoints number of control points
* @return Patch object or null on EOF
*/","* Read a single patch from a data stream, a patch contains information of its coordinates and color parameters.
     *
     * @param input the image source data stream
     * @param isFree whether this is a free patch
     * @param implicitEdge implicit edge when a patch is not free, otherwise it's not used
     * @param implicitCornerColor implicit colors when a patch is not free, otherwise it's not used
     * @param maxSrcCoord the maximum coordinate value calculated from source data
     * @param maxSrcColor the maximum color value calculated from source data
     * @param rangeX range for coordinate x
     * @param rangeY range for coordinate y
     * @param colRange range for color
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform transformation for user to device space
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return a single patch
     * @throws IOException when something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,readVertex,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)",196,236,"/**
* Reads and processes image data to create a vertex.
* @param input source image input stream
* @param maxSrcCoord maximum source coordinate value
* @param maxSrcColor maximum source color value
* @param rangeX X coordinate range
* @param rangeY Y coordinate range
* @param colRangeTab color component ranges
* @param matrix transformation matrix
* @param xform additional affine transform
* @return Vertex object with processed coordinates and colors
* @throws IOException if reading fails or invalid parameters are provided
*/","* Read a vertex from the bit input stream performs interpolations.
     *
     * @param input bit input stream
     * @param maxSrcCoord max value for source coordinate (2^bits-1)
     * @param maxSrcColor max value for source color (2^bits-1)
     * @param rangeX dest range for X
     * @param rangeY dest range for Y
     * @param colRangeTab dest range array for colors
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform the affine transformation
     * @return a new vertex with the flag and the interpolated values
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getBeforeColour(),66,69,"/**
 * Retrieves PDGamma instance with mask 0.
 * @return PDGamma object
 */","* Gets the colour for the before edge.
     * 
     * @return the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getAfterColour(),86,89,"/**
 * Applies a gamma mask to an image.
 * @return PDGamma object representing the masked image
 */","* Gets the colour for the after edge.
     * 
     * @return the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getStartColour(),106,109,"/**
 * Returns PDGamma with mask applied.
 * @return PDGamma instance with mask effect
 */","* Gets the colour for the start edge.
     * 
     * @return the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getEndColour(),126,129,"/**
 * Applies gamma correction with mask.
 * @return PDGamma object after applying mask
 */","* Gets the colour for the end edge.
     * 
     * @return the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getBlendMode(),582,585,"/**
* Retrieves blend mode from dictionary.
* @return BlendMode object based on COSName.BM
*/","* Returns the blending mode stored in the COS dictionary
     *
     * @return the blending mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithTintTransform(java.awt.image.WritableRaster),286,346,"/**
* Applies a mask to an image using a raster.
* @param raster source raster data
* @return masked BufferedImage
* @throws IOException if I/O error occurs
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getNumberOfComponents(),448,452,"/**
 * Returns the mask value from nested methods.
 * @return integer mask value
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toString(),584,605,"/**
 * Constructs a formatted string with various attributes.
 * @return formatted string representation
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toString(),327,333,"/**
* Generates a string representation of the indexed color space.
* @return formatted string with base color space, high value, and lookup table size
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toString(),304,311,"/**
* Generates a formatted string representation.
* @return formatted string with specific values and transformations
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,69,"/**
 * Converts a COSBase to a PDPageDestination.
 * @param base the COSBase object to convert
 * @return PDPageDestination or null if conversion fails
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getDestination(),70,73,"/**
 * Creates a PDF destination.
 * @return PDDestination object configured with specific settings
 * @throws IOException if an I/O error occurs during creation
 */","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:getDestination(),66,69,"/**
* Creates a PDF destination.
* @return PDDestination object configured with specific settings
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getDestination(),140,143,"/**
* Creates a destination from a COS name.
* @return PDDestination object
* @throws IOException if an error occurs during creation
*/","* Get the destination to be displayed when the annotation is activated. Either this or the
     * action entry should be set, but not both.
     *
     * @return The destination for this annotation.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getDestination(),186,189,"/**
 * Creates a PDF destination.
 * @return PDDestination object
 * @throws IOException if an I/O error occurs
 */","* Get the page destination of this node.
     *
     * @return The page destination of this node.
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createMatrix,org.apache.pdfbox.util.Matrix:createMatrix(org.apache.pdfbox.cos.COSBase),143,162,"/**
* Converts a COSBase to a Matrix.
* @param base input COSBase object
* @return Matrix created from COSArray or default empty Matrix
*/","* Convenience method to be used when creating a matrix from unverified data. If the parameter
     * is a COSArray with at least six numbers, a Matrix object is created from the first six
     * numbers and returned. If not, then the identity Matrix is returned.
     *
     * @param base a COS object, preferably a COSArray with six numbers.
     *
     * @return a Matrix object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getObjectFromPath,org.apache.pdfbox.cos.COSDictionary:getObjectFromPath(java.lang.String),1311,1328,"/**
* Traverses a PDF object path to retrieve a specific COSBase element.
* @param objPath path string representing the object location
* @return COSBase element at the specified path or null if not found
*/","* Nice method, gives you every object you want Arrays works properly too. Try ""P/Annots/[k]/Rect"" where k means the
     * index of the Annots array.
     *
     * @param objPath the relative path to the object.
     * @return the object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,getDestination,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:getDestination(java.lang.String),65,85,"/**
 * Retrieves a destination from the dictionary by name.
 * @param name the key for the destination
 * @return PDDestination object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the destination corresponding to the parameter.
     *
     * @param name The destination name.
     * @return The destination for that name, or null if there isn't any.
     * 
     * @throws IOException if something goes wrong when creating the destination object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String),74,77,"/**
 * Retrieves COSBase by attribute name.
 * @param attrName attribute name to search for
 * @return COSBase object or null if not found
 */","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",86,94,"/**
* Retrieves attribute value by name with a default.
* @param attrName the attribute's name to retrieve
* @param defaultValue the default value to return if attribute is not found
* @return the attribute's value or the default value
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @param defaultValue the default value
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,isSpecified,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:isSpecified(java.lang.String),66,69,"/**
* Checks if a masked value exists for the given name.
* @param name the key to check in the mask map
* @return true if the masked value is present, false otherwise
*/","* Is the attribute with the given name specified in this attribute object?
     * 
     * @param name the attribute name
     * @return <code>true</code> if the attribute is specified,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getArrayOfString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getArrayOfString(java.lang.String),103,117,"/**
 * Retrieves an array of names from a PDF object.
 * @param name key for the PDF object
 * @return array of name strings or null if not found
 */","* Gets an array of strings.
     * 
     * @param name the attribute name
     * @return the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfString(java.lang.String,java.lang.String[])",125,136,"/**
* Updates a named item with an array of string values.
* @param name the name of the item to update
* @param values array of string values to set
*/","* Sets an array of strings.
     * 
     * @param name the attribute name
     * @param values the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNameOrArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNameOrArrayOfName(java.lang.String,java.lang.String)",168,190,"/**
 * Retrieves a value from a PDF dictionary by name.
 * @param name key to search for in the dictionary
 * @param defaultValue default value to return if key is not found
 * @return array of names or single name as String, or default value if not applicable
 */","* Gets a name value or array of name values.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a String or array of Strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfName(java.lang.String,java.lang.String[])",212,223,"/**
 * Updates a named entry with an array of string values.
 * @param name key for the dictionary entry
 * @param values array of string values to be set
 */","* Sets an array of name values.
     * 
     * @param name the attribute name
     * @param values the array of name values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrName(java.lang.String,java.lang.String)",232,244,"/**
* Retrieves and converts a value by name.
* @param name key to fetch value
* @param defaultValue default value if conversion fails
* @return converted value or default
*/","* Gets a number or a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default name
     * @return a Float or a String",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrArrayOfNumber(java.lang.String,float)",302,328,"/**
* Retrieves a float value by name or default.
* @param name key for the value in COSBase
* @param defaultValue fallback value if not found
* @return float array or single float, or null if unspecified and no default
*/","* Gets a number or an array of numbers.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a Float or an array of floats",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfNumber(java.lang.String,float[])",364,375,"/**
* Masks values in a PDF document under a given name.
* @param name key for the mask
* @param values float array to be masked
*/","* Sets an array of float numbers.
     * 
     * @param name the attribute name
     * @param values the float numbers",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColor,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColor(java.lang.String),383,391,"/**
* Retrieves a PDGamma object by name.
* @param name the key for the gamma function
* @return PDGamma object or null if not found
*/","* Gets a colour.
     * 
     * @param name the attribute name
     * @return the colour",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColorOrFourColors,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColorOrFourColors(java.lang.String),399,417,"/**
* Retrieves and processes a COSArray by name.
* @param name the key to fetch the array
* @return PDGamma or PDFourColours object based on array type, or null if not found
*/","* Gets a single colour or four colours.
     * 
     * @param name the attribute name
     * @return the single ({@link PDGamma}) or a ({@link PDFourColours})",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,"org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",570,578,"/**
* Retrieves a COSDictionary using two keys.
* @param firstKey the primary key for lookup
* @param secondKey the secondary key for lookup
* @return COSDictionary if found, otherwise null
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The COSDictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",910,919,"/**
* Checks if a value exists for the given keys; returns default if not.
* @param firstKey primary key to check
* @param secondKey secondary key to check
* @param defaultValue boolean value to return if no entry found
* @return true if value exists and is true, otherwise defaultValue
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",1021,1030,"/**
* Masks value from dictionary using two keys.
* @param firstKey primary key for lookup
* @param secondKey secondary key for lookup
* @param defaultValue default integer value if not found
* @return masked integer value or default if not a number
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getDecodeParams,"org.apache.pdfbox.filter.Filter:getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",120,149,"/**
 * Retrieves a decode parameters dictionary from a given PDF dictionary.
 * @param dictionary the source PDF dictionary
 * @param index the index of the filter in case of multiple filters
 * @return COSDictionary containing decode parameters or a new empty dictionary if not found
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getFilters(),246,259,"/**
* Masks and returns a list of filter names.
* @return List of filter names or empty list if none found
*/","* Returns A list of filters applied to this stream.
     *
     * @return A (possibly empty) list of filters applied to this stream, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getDecode(),278,282,"/**
* Retrieves mask array from parameters.
* @return COSArray containing mask information or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getColorSpace(),239,247,"/**
* Returns the color space for masking.
* @return PDColorSpace object or null if not defined
*/","* This will get the color space or null if none exists.
     *
     * @return the color space for the shading
     * @throws IOException if there is an error getting the color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(java.util.List,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",267,284,"/**
* Filters COSObjects by type.
* @param keys list of COSObjectKey to filter
* @param type1 primary COSName type to match
* @param type2 secondary COSName type to optionally match
* @return List of filtered COSObjects
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,decode,"org.apache.pdfbox.filter.CryptFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,45,"/**
 * Decodes input stream using specified parameters.
 * @param encoded input stream to decode
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters
 * @param index filter index
 * @return DecodeResult object
 * @throws IOException if unsupported encryption filter or I/O error occurs
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,encode,"org.apache.pdfbox.filter.CryptFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",47,62,"/**
 * Encrypts input stream using specified parameters.
 * @param input the InputStream to be encrypted
 * @param encoded the OutputStream for the encrypted data
 * @param parameters the COSDictionary containing encryption settings
 * @throws IOException if an I/O error occurs or unsupported crypt filter is used
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,hasOnlyDocumentsOrParts,org.apache.pdfbox.multipdf.PDFMergerUtility:hasOnlyDocumentsOrParts(org.apache.pdfbox.cos.COSArray),1041,1058,"/**
* Validates array of dictionaries for specific entries.
* @param kLevelOneArray array to validate
* @return true if all entries are valid, false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isCatalog,org.apache.pdfbox.pdfparser.BruteForceParser:isCatalog(org.apache.pdfbox.cos.COSDictionary),765,769,"/**
* Checks if dictionary is of type catalog or FDF.
* @param dictionary PDF dictionary to check
* @return true if dictionary is catalog or FDF, false otherwise
*/","* Tell if the dictionary is a PDF or FDF catalog.
     * 
     * @param dictionary the dictionary to be tested
     * @return true if the given dictionary is a root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",79,99,"/**
* Initializes a PDPageTree with the given root dictionary and document.
* @param root COSDictionary representing the page tree root
* @param document PDDocument to which the page tree belongs
*/","* Constructor for reading.
     *
     * @param root A page tree root.
     * @param document The document which contains ""root"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,sanitizeType,org.apache.pdfbox.pdmodel.PDPageTree:sanitizeType(org.apache.pdfbox.cos.COSDictionary),271,283,"/**
* Ensures the dictionary's TYPE is set to PAGE.
* @param dictionary the COSDictionary to process
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,isPageTreeNode,org.apache.pdfbox.pdmodel.PDPageTree:isPageTreeNode(org.apache.pdfbox.cos.COSDictionary),371,378,"/**
* Checks if a PDF node is a pages dictionary.
* @param node the COSDictionary to check
* @return true if node represents a pages dictionary, false otherwise
*/",* Returns true if the node is a page tree node (i.e. and intermediate).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getCryptFilterMethod(),107,110,"/**
 * Retrieves the encryption filter mask.
 * @return COSName representing the encryption filter mask or null if not found
 */","* This will return the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @return the name of the crypt filter method.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStreamFilterName(),553,557,"/**
* Retrieves mask function name.
* @return COSName representing mask function or IDENTITY if none set
*/","* Returns the name of the filter which is used for de/encrypting streams.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStringFilterName(),575,579,"/**
 * Retrieves the mask function name from the dictionary.
 * @return COSName representing the mask function or IDENTITY if not set
 */","* Returns the name of the filter which is used for de/encrypting strings.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int),459,498,"/**
 * Converts code to Unicode string.
 * @param code character code to convert
 * @return Unicode string or null if conversion fails
 */","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @return Unicode character(s)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,createXObject,"org.apache.pdfbox.pdmodel.graphics.PDXObject:createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",52,90,"/**
* Creates a PDXObject based on the given base and resources.
* @param base COSBase object representing the XObject
* @param resources PDResources containing resources for XObjects
* @return PDXObject instance or null if base is null
* @throws IOException if unexpected object type or invalid subtype
*/","* Creates a new XObject instance of the appropriate type for the COS stream.
     *
     * @param base The stream which is wrapped by this XObject.
     * @param resources the resources of this XObject
     * @return A new XObject instance.
     * @throws java.io.IOException if there is an error creating the XObject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getSubType,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getSubType(),134,141,"/**
* Returns the subtype as a COSName.
* Initializes with COSName.S if not set.
* @return COSName representing the subtype
*/","* Returns the subtype of the soft mask (Alpha, Luminosity) - S entry
     * 
     * @return the subtype of the soft mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getRelationship(),74,77,"/**
 * Retrieves mask function from dictionary.
 * @return COSName representing the mask function or null if not found
 */","* Get the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @return the relationship as a name. Valid values are P (the target is the parent of the
     * current document) and C (the target is a child of the current document). Invalid values or
     * null are also returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearanceState(),324,327,"/**
 * Returns the mask function name.
 * @return COSName representing the mask function
 */","* Returns the annotations appearance state, which selects the applicable appearance stream from an appearance
     * subdictionary.
     * 
     * @return the annotations appearance state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",390,402,"/**
* Sets a key-value pair in a dictionary for an embedded object.
* @param embedded the name of the embedded object
* @param key the key to set in the dictionary
* @param value the value to associate with the key
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param embedded The embedded dictionary to set the item in.
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",456,465,"/**
 * Sets an integer value in the embedded dictionary.
 * @param embeddedDictionary name of the embedded dictionary
 * @param key key under which to store the value
 * @param value integer value to set
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param embeddedDictionary The embedded dictionary.
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,isEncrypted,org.apache.pdfbox.cos.COSDocument:isEncrypted(),329,332,"/**
 * Checks if encryption is enabled in the PDF trailer.
 * @return true if encryption is enabled, false otherwise
 */","* This will tell if this is an encrypted document.
     *
     * @return true If this document is encrypted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:getEncryptionDictionary(),340,343,"/**
 * Returns the encryption dictionary from the trailer.
 * @return COSDictionary containing encryption details or null if not encrypted
 */","* This will get the encryption dictionary if the document is encrypted or null if the document
     * is not encrypted.
     *
     * @return The encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneRoleMap,"org.apache.pdfbox.multipdf.Splitter:cloneRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",281,297,"/**
 * Copies role map from source to destination structure tree.
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,initialParse,org.apache.pdfbox.pdfparser.FDFParser:initialParse(),48,58,"/**
* Parses PDF trailer to set initial parsing state.
* @throws IOException if root object is missing
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,initialParse,org.apache.pdfbox.pdfparser.PDFParser:initialParse(),105,123,"/**
* Parses PDF document trailer and updates root dictionary.
* @throws IOException if root object is missing or other I/O errors occur
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:getDocumentInformation(),753,767,"/**
* Retrieves or creates the document information.
* @return PDDocumentInformation object representing document metadata
*/","* This will get the document info dictionary. If it doesn't exist, an empty document info
     * dictionary is created in the document trailer.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#getMetadata()}.
     *
     * @return The documents /Info dictionary, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocument:getDocumentCatalog(),789,805,"/**
* Returns the PDF document catalog.
* Initializes it if not already created.
* @return PDDocumentCatalog object
*/","* This will get the document CATALOG. This is guaranteed to not return null.
     * 
     * @return The documents /Root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(org.apache.pdfbox.pdmodel.fixup.PDDocumentFixup),128,146,"/**
* Applies fixes to PDF document's AcroForm and returns the updated form.
* @param acroFormFixup fix-up operations for AcroForm
* @return PDAcroForm object with applied fixes or null if not found
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * Dependent on setting <code>acroFormFixup</code> some fixing/changes will be done to the AcroForm.
     * If you need to ensure that there are no fixes applied call <code>getAcroForm</code> with <code>null</code>.
     * 
     * Using <code>getAcroForm(PDDocumentFixup acroFormFixup)</code> might change the original content and
     * subsequent calls with <code>getAcroForm(null)</code> will return the changed content.
     * 
     * @param acroFormFixup the fix up action or null
     * @return The document's AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getViewerPreferences(),175,179,"/**
* Retrieves PDF viewer preferences.
* @return PDViewerPreferences object or null if not found
*/","* Get the viewer preferences associated with this document or null if they do not exist.
     *
     * @return The document's viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getActions(),303,312,"/**
* Retrieves or creates additional actions for a PDF document.
* @return PDDocumentCatalogAdditionalActions object representing the actions
*/",* @return The Additional Actions for this Document,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getNames(),327,331,"/**
* Retrieves document name dictionary.
* @return PDDocumentNameDictionary object or null if not found
*/",* @return The names dictionary for this document or null if none exist.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDests(),336,340,"/**
* Retrieves document name destination dictionary.
* @return PDDocumentNameDestinationDictionary or null if not found
*/",* @return The named destinations dictionary for this document or null if none exists.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMarkInfo(),390,394,"/**
* Retrieves and wraps mark info from PDF document.
* @return PDMarkInfo object or null if not found
*/","* Get info about doc's usage of tagged features. This will return null if there is no
     * information.
     *
     * @return The new mark info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getURI(),537,541,"/**
* Retrieves URI dictionary from root.
* @return PDURIDictionary object or null if not found
*/","* Returns the document-level URI.
     * 
     * @return the document level URI if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getStructureTreeRoot(),558,562,"/**
* Retrieves the PDF structure tree root.
* @return PDStructureTreeRoot object or null if not found
*/","* Get the document's structure tree root, or null if none exists.
     * 
     * @return the structure tree root if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOCProperties(),641,645,"/**
* Retrieves optional content properties.
* @return PDOptionalContentProperties object or null if not found
*/","* Get the optional content properties dictionary associated with this document.
     *
     * @return the optional properties dictionary or null if it is not present",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog),38,48,"/**
* Initializes a PDDocumentNameDictionary for the given document catalog.
* @param cat the PDDocumentCatalog to associate with this dictionary
*/","* Constructor.
     *
     * @param cat The document catalog that this dictionary is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getDests(),79,89,"/**
* Retrieves destination names tree node.
* @return PDDestinationNameTreeNode or null if not found
*/","* Get the destination named tree node. The values in this name tree will be
     * PDPageDestination objects.
     *
     * @return The destination name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getEmbeddedFiles(),113,117,"/**
 * Retrieves the embedded files node from the dictionary.
 * @return PDEmbeddedFilesNameTreeNode object or null if not found
 */","* Get the embedded files named tree node. The values in this name tree will
     * be PDComplexFileSpecification objects.
     *
     * @return The embedded files name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getJavaScript(),136,140,"/**
* Retrieves JavaScript names dictionary.
* @return PDJavascriptNameTreeNode or null if not present
*/","* Get the document level JavaScript name tree. When the document is opened, all the JavaScript
     * actions in it shall be executed, defining JavaScript functions for use by other scripts in
     * the document.
     *
     * @return The document level JavaScript name tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getIndirectResourceObjects,"org.apache.pdfbox.pdmodel.PDPage:getIndirectResourceObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",164,176,"/**
* Retrieves COSObjects of a specific kind from page resources.
* @param pageResources dictionary containing page resources
* @param kind type of resource to fetch
* @return list of COSObjects or empty list if none found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getActions,org.apache.pdfbox.pdmodel.PDPage:getActions(),693,702,"/**
* Retrieves or creates additional actions for a page.
* @return PDPageAdditionalActions object for the page
*/","* Get the page actions.
     * 
     * @return The Actions for this Page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTransition,org.apache.pdfbox.pdmodel.PDPage:getTransition(),717,721,"/**
 * Retrieves and wraps the transition dictionary from a PDF page.
 * @return PDTransition object or null if no transition is defined
 */",* @return The page transition associated with this page or null if no transition is defined,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getIndirect,"org.apache.pdfbox.pdmodel.PDResources:getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",485,499,"/**
* Retrieves a COSObject from resources by kind and name.
* @param kind the type of resource dictionary
* @param name the key for the object in the dictionary
* @return COSObject if found, otherwise null
*/","* Returns the resource with the given name and kind as an indirect object, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,get,"org.apache.pdfbox.pdmodel.PDResources:get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",504,508,"/**
* Retrieves a COSBase object from resources based on kind and name.
* @param kind the type of resource dictionary
* @param name the key for the value in the dictionary
* @return COSBase object or null if not found
*/","* Returns the resource with the given name and kind, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getNames,org.apache.pdfbox.pdmodel.PDResources:getNames(org.apache.pdfbox.cos.COSName),583,587,"/**
* Retrieves mask names from resource dictionary.
* @param kind type of resource to look up
* @return iterable of COSName or empty collection if not found
*/",* Returns the resource names of the given kind.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,createKey,"org.apache.pdfbox.pdmodel.PDResources:createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",740,758,"/**
* Generates a unique function mask name.
* @param kind type of resource
* @param prefix base string for the mask name
* @return COSName representing the unique mask name
*/",* Returns a unique key for a new resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",763,772,"/**
* Adds or updates an entry in the resource dictionary.
* @param kind type of resource
* @param name key for the resource entry
* @param object value to be stored
*/",* Sets the value of a given named resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEFDictionary(),73,80,"/**
 * Retrieves or creates EF dictionary.
 * @return COSDictionary EF object, may be null
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getPage(),68,72,"/**
* Retrieves and wraps a page dictionary.
* @return PDPage object or null if not found
*/","* Gets the page.
     * 
     * @return the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getPage(),155,163,"/**
* Creates a PDPage from the page dictionary.
* @return PDPage object or null if no page dictionary is found
*/","* Get the page on which the object shall be rendered.
     *
     * @return the referenced page or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getPage(),139,143,"/**
* Creates a PDPage from a COSDictionary.
* @return PDPage object or null if dictionary is null
*/","* Returns the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * 
     * @return the page on which some or all of the content items designated by
     *  the K entry shall be rendered",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getIDTree(),98,102,"/**
* Retrieves and wraps the ID tree for structure elements.
* @return PDNameTreeNode containing PDStructureElement or null if not found
*/","* Returns the ID tree.
     * 
     * @return the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTree(),125,129,"/**
* Retrieves and initializes PDNumberTreeNode from the parent tree.
* @return PDNumberTreeNode instance or null if parent tree is missing
*/","* Returns the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     *
     * @return the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getClassMap(),211,245,"/**
* Populates a map with attribute objects from a COSDictionary.
* @return Map containing attribute names and their corresponding PDAttributeObjects or lists of PDAttributeObjects
*/","* Sets the ClassMap.
     * 
     * @return the ClassMap, never null. The elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getCryptFilterDictionary(org.apache.pdfbox.cos.COSName),492,505,"/**
* Retrieves a cryptographic filter dictionary by name.
* @param cryptFilterName the name of the cryptographic filter
* @return PDCryptFilterDictionary object or null if not found
*/","* Returns the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * 
     * @return the crypt filter with the given name if available",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setCryptFilterDictionary,"org.apache.pdfbox.pdmodel.encryption.PDEncryption:setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",513,523,"/**
* Adds a cryptographic filter to the dictionary.
* @param cryptFilterName name of the cryptographic filter
* @param cryptFilterDictionary configuration for the cryptographic filter
*/","* Sets the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * @param cryptFilterDictionary the crypt filter to set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderStyle(),898,902,"/**
 * Retrieves border style dictionary from annotation.
 * @return PDBorderStyleDictionary object or null if not found
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the
     * annotation.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderEffect(),922,926,"/**
 * Retrieves border effect dictionary from annotation.
 * @return PDBorderEffectDictionary or null if not present
 */","* This will retrieve the border style dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @return the border effect dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getSignature(),147,151,"/**
 * Retrieves and wraps the signature dictionary from the catalog.
 * @return PDSignature object or null if no signature is found
 */","* This will get the signature or null if there is none.
     *
     * @return The signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getJavaScript(),544,548,"/**
 * Retrieves JavaScript dictionary from FDF document.
 * @return FDFJavaScript object or null if not found
 */","* This will get the java script entry.
     *
     * @return The java script entry describing javascript commands.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceDictionary(),594,598,"/**
* Retrieves appearance dictionary for a field.
* @return PDAppearanceDictionary object or null if not found
*/","* This will get the appearance dictionary that specifies the appearance of a pushbutton field.
     *
     * @return The AP entry of this dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceStreamReference(),615,619,"/**
 * Retrieves named page reference from field.
 * @return FDFNamedPageReference object or null if not found
 */","* This will get named page references.
     *
     * @return The named page references or <code>null</code>.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:getIconFit(),636,640,"/**
* Retrieves icon fit settings from field dictionary.
* @return FDFIconFit object or null if not found
*/","* This will get the icon fit that is associated with this field.
     *
     * @return The 'IF' entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:getAdditionalActions(),722,726,"/**
* Retrieves additional actions from a PDF field.
* @return PDAdditionalActions object or null if not found
*/","* This will get a list of additional actions that will get executed based on events.
     *
     * @return The 'AA' entry in this FDF field dictionary or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:getPageInfo(),101,110,"/**
* Retrieves page info from a PDF document.
* @return FDFPageInfo object or null if not found
*/","* This will get the FDF page info object.
     *
     * @return The Page info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getTemplateReference(),71,75,"/**
* Retrieves named page reference from template.
* @return FDFNamedPageReference object or null if not found
*/","* This is the template reference.
     *
     * @return The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDFont:getFontDescriptor(),216,228,"/**
 * Returns the font descriptor for the font.
 * @return PDFontDescriptor object or null if not available
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getCIDSystemInfo,org.apache.pdfbox.pdmodel.font.PDCIDFont:getCIDSystemInfo(),362,366,"/**
* Retrieves CID system information from the dictionary.
* @return PDCIDSystemInfo object or null if not found
*/","* Returns the CIDSystemInfo, or null if it is missing (which isn't allowed but could happen).
     * 
     * @return the CIDSystemInfo, or null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getPanose,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getPanose(),810,823,"/**
* Retrieves PDPanose from font dictionary.
* @return PDPanose object or null if not found
*/","* Returns the Panose entry of the Style dictionary, if any.
     *
     * @return A Panose wrapper object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3Font:getResources(),290,301,"/**
 * Returns the resources dictionary.
 * @return PDResources object or null if not available
 */","* Returns the optional resources of the type3 stream.
     *
     * @return the resources bound to be used when parsing the type3 stream",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProcs,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProcs(),380,387,"/**
* Returns the character procedures dictionary.
* Initializes if not already created.
* @return COSDictionary representing character procedures
*/","* Returns the dictionary containing all streams to be used to render the glyphs.
     * 
     * @return the dictionary containing all glyph streams.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getColorants(org.apache.pdfbox.pdmodel.PDResources),80,98,"/**
* Masks and processes color separations from resources.
* @param resources PDF resources containing color information
* @return Map of processed color separation names to PDSeparation objects
*/","* Returns a map of colorants and their associated Separation color space.
     * @param resources resources, can be null.
     * @return map of colorants to color spaces, never null.
     * @throws IOException If there is an error reading a color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getProcess,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getProcess(),104,112,"/**
* Retrieves and initializes a PDDeviceNProcess from the dictionary.
* @return PDDeviceNProcess object or null if not found
*/","* Returns the DeviceN Process Dictionary, or null if it is missing.
     * @return the DeviceN Process Dictionary, or null if it is missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getRenderState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getRenderState(org.apache.pdfbox.rendering.RenderDestination),120,144,"/**
* Retrieves render state based on destination.
* @param destination target rendering destination (PRINT, VIEW)
* @return RenderState object or null if not found
*/","* @param destination to be rendered
     * @return state or null if undefined",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getD,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getD(),126,138,"/**
* Retrieves or creates a dictionary for masking.
* @return COSDictionary object used for masking
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getExtendedGraphicsState(),62,73,"/**
* Returns the extended graphics state.
* Initializes it if not already created.
* @return PDExtendedGraphicsState object or null if base is null
*/","* This will get the external graphics state for this pattern.
     * @return The extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getResources(),198,203,"/**
* Retrieves mask resources from PDF.
* @return PDResources object or null if not found
*/","* This will get the resources for this pattern.
     * This will return null if no resources are available at this level.
     * @return The resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getTargetDirectory(),173,177,"/**
* Retrieves and wraps target directory from a dictionary.
* @return PDTargetDirectory object or null if not found
*/","* Get the target directory.
     *
     * @return the target directory or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getWinLaunchParams(),94,98,"/**
* Retrieves Windows-specific launch parameters.
* @return PDWindowsLaunchParams object or null if not available
*/","* This will get a dictionary containing Windows-specific launch parameters.
     *
     * @return The Win entry of of the specific launch action dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getTargetDirectory(),126,130,"/**
* Retrieves and wraps target directory from dictionary.
* @return PDTargetDirectory object or null if not found
*/","* Get the target directory. If this entry is absent, the current document is the target file
     * containing the destination.
     *
     * @return the target directory or null if the current document is the target file containing
     * the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearance(),344,348,"/**
* Retrieves the appearance dictionary.
* @return PDAppearanceDictionary object or null if not found
*/","* This will get the appearance dictionary associated with this annotation. This may return null.
     * 
     * @return This annotations appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getPage(),843,847,"/**
* Retrieves a mask page.
* @return PDPage object or null if not found
*/","* This will retrieve the corresponding page of this annotation. See also
     * <a href=""https://stackoverflow.com/a/36894982/535646"">this answer</a> about what to do if
     * the page isn't available.
     *
     * @return The corresponding page or null if not available.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getBorderEffect(),253,257,"/**
 * Retrieves border effect dictionary.
 * @return PDBorderEffectDictionary object or null if not found
 */","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getBorderStyle(),126,130,"/**
* Retrieves border style dictionary.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in
     * drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getPreviousURI(),190,194,"/**
* Retrieves and wraps an action URI from a dictionary.
* @return PDActionURI object or null if not found
*/","* This will set the previous URI action, in case it's needed.
     *
     * @return The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getExternalData(),274,278,"/**
* Retrieves external data dictionary.
* @return PDExternalDataDictionary object or null if not found
*/","* This will return the external data dictionary.
     * 
     * @return the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getBorderStyle(),306,310,"/**
* Retrieves border style dictionary from a PDF.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getBorderEffect(),99,103,"/**
* Retrieves border effect dictionary.
* @return PDBorderEffectDictionary object or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getBorderEffect(),96,100,"/**
* Retrieves and wraps the border effect dictionary.
* @return PDBorderEffectDictionary object or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAppearanceCharacteristics(),120,124,"/**
 * Retrieves appearance characteristics dictionary.
 * @return PDAppearanceCharacteristicsDictionary object or null if not found
 */","* Returns the appearance characteristics dictionary.
     * 
     * @return the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getActions(),164,168,"/**
 * Retrieves additional annotation actions.
 * @return PDAnnotationAdditionalActions object or null if not found
 */","* Get the additional actions for this field. This will return null if there are no additional actions for this
     * field. As of PDF 1.6 this is only used for Widget Annotations.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getBorderStyle(),196,200,"/**
 * Retrieves border style dictionary.
 * @return PDBorderStyleDictionary object or null if not found
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getNormalAppearance(),65,69,"/**
* Retrieves appearance entry from dictionary.
* @return PDAppearanceEntry object or null if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"".
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getFilter(),75,84,"/**
* Retrieves and initializes a PDPropBuildDataDict from the dictionary.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the signature handler that was
     * used to create the parent signature.
     *
     * @return the Filter as PDPropBuildFilter object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getPubSec(),103,112,"/**
* Retrieves public security settings from the document.
* @return PDPropBuildDataDict containing public security data or null if not present
*/","* A build data dictionary for the PubSec software module
     * that was used to create the parent signature.
     *
     * @return the PubSec as PDPropBuildPubSec object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getApp(),130,139,"/**
* Retrieves application-specific properties.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the viewing application software
     * module that was used to create the parent signature.
     *
     * @return the App as PDPropBuildApp object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getMDP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getMDP(),408,412,"/**
 * Retrieves and wraps MDP seed value from dictionary.
 * @return PDSeedValueMDP object or null if not found
 */","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @return the mdp dictionary as PDSeedValueMDP",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSeedValueCertificate(),441,445,"/**
* Retrieves and wraps seed value certificate from dictionary.
* @return PDSeedValueCertificate object or null if not found
*/","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @return dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getTimeStamp(),465,469,"/**
* Retrieves and wraps the timestamp from the dictionary.
* @return PDSeedValueTimeStamp object or null if not found
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @return the timestamp dictionary as PDSeedValueTimeStamp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getPropBuild(),444,453,"/**
* Retrieves and constructs a PDPropBuild object from the dictionary.
* @return PDPropBuild object or null if not found
*/","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @return the pdf signature build dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getStructureElement(),301,305,"/**
* Retrieves and wraps structure element from dictionary.
* @return PDStructureElement object or null if not found
*/","* Get the structure element of this node.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,hasChildren,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:hasChildren(),170,173,"/**
 * Checks if a specific mask is present.
 * @return true if mask is present, false otherwise
 */",* @return true if the node has at least one child,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOutlineItem,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOutlineItem(org.apache.pdfbox.cos.COSName),175,179,"/**
* Creates a PDOutlineItem from a given COSName.
* @param name the COSName to fetch the outline for
* @return PDOutlineItem or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultResources(),542,547,"/**
* Retrieves resources from PDF dictionary.
* @return PDResources object or null if not found
*/","* This will get the default resources for the AcroForm.
     *
     * @return The default resources or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getActions,org.apache.pdfbox.pdmodel.interactive.form.PDField:getActions(),224,228,"/**
* Retrieves additional actions from form field.
* @return PDFormFieldAdditionalActions object or null if not present
*/","* Get the additional actions for this field. This will return null if there
     * are no additional actions for this field.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValue(),141,145,"/**
* Retrieves and returns a PDSignature object.
* @return PDSignature object or null if not found
*/","* Returns the signature contained in this field.
     * 
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getDefaultValue(),152,156,"/**
* Retrieves and wraps a signature dictionary.
* @return PDSignature object or null if not found
*/","* Returns the default value, if any.
     *
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSeedValue(),172,176,"/**
* Retrieves and wraps seed value from dictionary.
* @return PDSeedValue object or null if not found
*/","* <p>(Optional; PDF 1.5) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @return the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getMeasure(),125,129,"/**
* Retrieves measure dictionary.
* @return PDMeasureDictionary object or null if not found
*/","* This will retrieve the measure dictionary.
     * 
     * @return the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getThreadInfo(),71,75,"/**
* Retrieves document information.
* @return PDDocumentInformation object or null if not available
*/","* Get info about the thread, or null if there is nothing.
     *
     * @return The thread information.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getFirstBead(),93,97,"/**
 * Retrieves and wraps a thread bead from the document.
 * @return PDThreadBead object or null if none found
 */","* Get the first bead in the thread, or null if it has not been set yet.  This
     * is a required field for this object.
     *
     * @return The first bead in the thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getThread(),77,81,"/**
* Creates a PDThread from a dictionary.
* @return PDThread object or null if dictionary is null
*/","* This will get the thread that this bead is part of.  This is only required
     * for the first bead in a thread, so other beads 'may' return null.
     *
     * @return The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getNextBead(),100,103,"/**
* Creates a new PDThreadBead with a mask.
* @return PDThreadBead object configured with a mask
*/","* This will get the next bead.  If this bead is the last bead in the list then this
     * will return the first bead.
     *
     * @return The next bead in the list or the first bead if this is the last bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPreviousBead(),121,124,"/**
 * Creates a new PDThreadBead with V mask.
 * @return PDThreadBead object
 */","* This will get the previous bead.  If this bead is the first bead in the list then this
     * will return the last bead.
     *
     * @return The previous bead in the list or the last bead if this is the first bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPage(),156,160,"/**
* Retrieves and wraps a page dictionary as a PDPage.
* @return PDPage object or null if no valid dictionary found
*/","* Get the page that this bead is part of.
     *
     * @return The page that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMetadata(),252,256,"/**
* Retrieves PDF metadata.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return null if there is no
     * meta data for this object.
     *
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMetadata,org.apache.pdfbox.pdmodel.PDPage:getMetadata(),672,676,"/**
* Retrieves PDF metadata from a page.
* @return PDMetadata object or null if not present
*/","* Get the metadata that is part of the document catalog. This will return null if there is
     * no meta data for this object.
     * 
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getDifferences(),469,472,"/**
 * Retrieves the differences stream from the FDF document.
 * @return COSStream containing differences data or null if not found
 */","* This will get the incremental updates since the PDF was last opened.
     *
     * @return The differences entry of the FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile(),726,730,"/**
* Retrieves font file stream.
* @return PDStream of font file or null if not found
*/","* A stream containing a Type 1 font program.
     *
     * @return A stream containing a Type 1 font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile2(),747,751,"/**
 * Retrieves font file stream from dictionary.
 * @return PDStream object or null if not found
 */","* A stream containing a true type font program.
     *
     * @return A stream containing a true type font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile3(),768,772,"/**
* Retrieves and wraps font file stream.
* @return PDStream of font file or null if not found
*/","* A stream containing a font program that is not true type or type 1.
     *
     * @return A stream containing a font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCIDSet(),789,793,"/**
* Retrieves and wraps CID set stream.
* @return PDStream object or null if CID set is missing
*/","* Get the CIDSet stream.
     *
     * @return A stream containing a CIDSet.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getDestOutputIntent,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getDestOutputIntent(),63,66,"/**
 * Retrieves the destination output profile stream.
 * @return COSStream representing the destination output profile
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSound(),71,74,"/**
 * Retrieves sound stream from action.
 * @return COSStream containing sound data
 */","* Gets the sound object.
     * 
     * @return The sound object defining the sound that shall be played.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalIcon(),186,190,"/**
* Creates a PDFormXObject from a COSStream.
* @return PDFormXObject or null if stream is null
*/","* This will retrieve the normal icon.
     * 
     * @return the normal icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverIcon(),197,201,"/**
* Retrieves and wraps a form XObject from a resource dictionary.
* @return PDFormXObject instance or null if not found
*/","* This will retrieve the rollover icon.
     * 
     * @return the rollover icon",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateIcon(),208,212,"/**
* Creates a PDFormXObject from a COSStream.
* @return PDFormXObject or null if the stream is not found
*/","* This will retrieve the alternate icon.
     * 
     * @return the alternate icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getSubDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getSubDictionary(),100,120,"/**
 * Retrieves appearance streams for this entry.
 * @return Map of COSName to PDAppearanceStream or empty if none found
 */","* Returns the entry as an appearance subdictionary.
     *
     * @return the entry as an appearance subdictionary
     * 
     * @throws IllegalStateException if this entry is not an appearance subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getDocumentID,org.apache.pdfbox.cos.COSDocument:getDocumentID(),361,364,"/**
 * Retrieves a specific array from a PDF document.
 * @return COSArray containing mask information
 */","* This will get the document ID.
     *
     * @return The document id.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,removePossibleOrphanAnnotation,"org.apache.pdfbox.multipdf.Splitter$KCloner:removePossibleOrphanAnnotation(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)",555,582,"/**
 * Masks an object if it's an annotation or link.
 * @param srcObj source object to check
 * @param srcDict dictionary containing source objects
 * @param currentPageDict current page dictionary
 * @param dstDict destination dictionary for masked objects
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPagesDictionary,"org.apache.pdfbox.pdfparser.COSParser:checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",955,999,"/**
* Recursively counts and removes null objects from PDF page dictionary.
* @param pagesDict dictionary containing page information
* @param set set of COSObjects to track
* @return number of valid pages
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteTrailer,org.apache.pdfbox.pdfwriter.COSWriter:doWriteTrailer(org.apache.pdfbox.cos.COSDocument),678,708,"/**
* Updates document trailer and handles incremental updates.
* @param doc the COSDocument to be updated
*/","* This will write the trailer to the PDF document.
     *
     * @param doc The document to create the trailer for.
     *
     * @throws IOException If there is an IOError while writing the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,detectPossibleSignature,org.apache.pdfbox.pdfwriter.COSWriter:detectPossibleSignature(org.apache.pdfbox.cos.COSDictionary),1267,1291,"/**
* Masks PDF signature if within incremental update range.
* @param obj dictionary containing PDF object details
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getThreads(),217,232,"/**
 * Retrieves or initializes threads list.
 * @return List of PDThread objects
 */","* Returns the document's article threads.
     * 
     * @return a list of all threads of the document",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOutputIntents(),411,428,"/**
* Retrieves output intents from a PDF document.
* @return List of PDOutputIntent objects
*/","* Get the list of OutputIntents defined in the document.
     *
     * @return The list of PDOutputIntent, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,addOutputIntent,org.apache.pdfbox.pdmodel.PDDocumentCatalog:addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent),436,445,"/**
* Adds output intent to the PDF document.
* @param outputIntent the output intent to be added
*/","* Add an OutputIntent to the list.  If there is not OutputIntent, the list is created and the
     * first  element added.
     *
     * @param outputIntent the OutputIntent to add.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getThreadBeads,org.apache.pdfbox.pdmodel.PDPage:getThreadBeads(),634,654,"/**
 * Retrieves thread beads from a PDF page.
 * @return List of PDThreadBead objects representing thread beads
 */","* This will get a list of PDThreadBead objects, which are article threads in the document. This
     * will return an empty list if there are no thread beads.
     *
     * @return A list of article threads on this page, never null. The returned list is backed by
     * the beads COSArray, so any adding or deleting in this list will change the document too.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getViewports,org.apache.pdfbox.pdmodel.PDPage:getViewports(),832,853,"/**
* Retrieves viewport dictionaries from page.
* @return List of PDViewportDictionary objects or null if none exist
*/","* Get the viewports.
     *
     * @return a list of viewports or null if there is no /VP entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getKids,org.apache.pdfbox.pdmodel.PDPageTree:getKids(org.apache.pdfbox.cos.COSDictionary),138,174,"/**
 * Recursively processes COSDictionary nodes to collect and handle child dictionaries.
 * @param node the root COSDictionary node
 * @return a list of processed COSDictionary children
 */","* Helper to get kids from malformed PDFs.
     * @param node page tree node
     * @return list of kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getKids(),114,129,"/**
* Retrieves mask nodes from a PDF structure.
* @return List of PDNameTreeNode objects representing mask nodes
*/","* Return the children of this node.  This list will contain PDNameTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getNames(),253,280,"/**
* Parses a COSName array into a map.
* @return Map of strings to generic type T or null if no names array exists
*/","* This will return a map of names on this level. The key will be a string,
     * and the value will depend on where this class is being used.
     *
     * @return ordered map of COS objects or <code>null</code> if the dictionary
     * contains no 'Names' entry on this level.
     *
     * @throws IOException If there is an error while creating the sub types.
     * @see #getKids()",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getUpperLimit(),334,343,"/**
 * Retrieves a masked value from a PDF node.
 * @return The masked string or null if not found.
 */","* Get the highest value for a key in the name map.
     *
     * @return The highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setUpperLimit(java.lang.String),350,361,"/**
* Sets the upper limit for a node.
* @param upper the upper limit value as a String
*/","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getLowerLimit(),368,377,"/**
* Retrieves a mask value from a COSArray.
* @return String representation of the mask or null if not found
*/","* Get the lowest value for a key in the name map.
     *
     * @return The lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setLowerLimit(java.lang.String),384,395,"/**
* Sets the lower limit for a node.
* @param lower the lower bound value to set
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getKids(),88,103,"/**
* Retrieves mask nodes from the current node.
* @return List of PDNumberTreeNode representing mask objects or null if none found
*/","* Return the children of this node.  This list will contain PDNumberTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getNumbers(),177,204,"/**
* Parses page label indices from a PDF node.
* @return Immutable map of index to COSObjectable or null if parsing fails
*/","* This will return a map of numbers on this level. The key will be a java.lang.Integer, the
     * value will depend on where this class is being used.
     *
     * @return A map of COS objects.
     *
     * @throws IOException If there is a problem creating the values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getUpperLimit(),281,290,"/**
* Retrieves the mask value from a PDF node.
* @return Integer mask value or null if not found
*/","* Get the highest value for a key in the number map.
     *
     * @return The highest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setUpperLimit(java.lang.Integer),297,315,"/**
* Sets or removes the upper limit in a COSArray.
* @param upper the upper limit value to set, or null to remove it
*/","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getLowerLimit(),322,331,"/**
* Retrieves the mask value from a PDF node.
* @return Integer mask value or null if not found
*/","* Get the lowest value for a key in the number map.
     *
     * @return The lowest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setLowerLimit(java.lang.Integer),338,356,"/**
* Sets or removes the lower limit in a COSArray.
* @param lower the lower limit value to set, or null to remove it
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeValues(),264,271,"/**
* Returns the COSArray for mask range.
* Initializes if not already set.
* @return COSArray representing the mask range
*/","* Returns all ranges for the output values as COSArray .
     * Required for type 0 and type 4 functions
     * @return the ranges array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainValues(),278,285,"/**
* Returns the COSArray representing the domain.
* Initializes it if not already set.
* @return COSArray of domain values
*/","* Returns all domains for the input values as COSArray.
     * Required for all function types.
     * @return the domains array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSize,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getSize(),95,102,"/**
* Returns the SIZE array from the COSDictionary.
* @return COSArray representing the SIZE or null if not set
*/","* The ""Size"" entry, which is the number of samples in each input dimension
     * of the sample table.
     *
     * @return A List of java.lang.Integer objects.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeValues(),170,182,"/**
* Returns the DECODE array, initializing it if necessary.
* @return COSArray representing DECODE or null if initialization fails
*/","* Returns all decode values as COSArray.
     * 
     * @return the decode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getFunctions,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getFunctions(),133,140,"/**
* Returns COSArray of functions.
* Initializes if not already created.
* @return COSArray containing functions
*/","* Returns all functions values as COSArray.
     * 
     * @return the functions array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getBounds,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getBounds(),147,154,"/**
* Returns the bounds array.
* Initializes bounds if not already set.
* @return COSArray representing bounds
*/","* Returns all bounds values as COSArray.
     * 
     * @return the bounds array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncode,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncode(),161,168,"/**
* Returns or initializes the encode array.
* @return COSArray representing the encode configuration
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,getOwnerUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:getOwnerUserProperties(),64,74,"/**
* Masks user properties.
* @return List of PDUserProperty objects
*/","* Returns the user properties.
     * 
     * @return the user properties",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,addUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),92,97,"/**
* Masks user property by adding it to a PDF array.
* @param userProperty the property to be masked
*/","* Adds a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,removeUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),104,115,"/**
* Masks a user property if it exists.
* @param userProperty the property to be masked
*/","* Removes a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineColor(),85,98,"/**
* Retrieves or creates a mask color for an object.
* @return PDColor representing the mask color
*/","* Get the RGB color to be used for the guidelines.  This is guaranteed to
     * not return null. The default color is [0,0,0].
     *
     *@return The guideline color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isAttached(java.lang.String),123,137,"/**
 * Checks if edge is attached.
 * @param edge the edge to check
 * @return true if edge is attached, false otherwise
 */","* Is the artifact attached to the given edge?
     * 
     * @param edge the edge
     * @return <code>true</code> if the artifact is attached to the given edge,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getColor(),447,460,"/**
* Retrieves color from annotation.
* @return Color object or null if not available
*/","* Get the annotation color.
     *
     * @return The annotation color, or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getInteriorColor(),120,133,"/**
* Retrieves color from annotation's IC entry.
* @return Color object or null if not available
*/","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getCallout(),157,161,"/**
* Retrieves mask values from annotation.
* @return float array of mask values or null if not found
*/","* This will get the coordinates of the callout line.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:getInkList(),139,155,"/**
* Retrieves mask data from annotation.
* @return List of float arrays representing mask data or null if none exists
*/","* Get the paths making up the freehand ""scribble"".
     *
     * @see #setInkList(List)
     * @return the List of arrays representing the paths.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLine(),172,176,"/**
* Retrieves mask values from annotation.
* @return float array of mask values or null if not available
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setStartPointEndingStyle(java.lang.String),183,199,"/**
* Sets line end style for annotation.
* @param style desired line end style or null for default
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getStartPointEndingStyle(),206,210,"/**
* Retrieves mask value from annotation.
* @return Mask string or default if not found
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setEndPointEndingStyle(java.lang.String),217,233,"/**
* Sets the line style for an annotation.
* @param style line style to apply; defaults to LE_NONE if null
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getEndPointEndingStyle(),240,244,"/**
* Retrieves mask value from annotation.
* @return Mask string or default value if not present
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getInteriorColor(),266,279,"/**
* Retrieves mask color from annotation.
* @return Color object or null if not available
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionHorizontalOffset(float),386,398,"/**
* Sets the offset for a mask annotation.
* @param offset the x-offset value to apply
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionHorizontalOffset(),405,409,"/**
* Retrieves the first float value from an annotation's CO array.
* @return The first float value or 0 if the array is null
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionVerticalOffset(float),416,427,"/**
* Updates annotation mask with a given offset.
* @param offset value to set in the annotation's mask
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionVerticalOffset(),434,438,"/**
* Retrieves the second element from the CO array of an annotation.
* @return The second element as a float, or 0 if the array is null or does not contain enough elements.
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getVertices(),126,130,"/**
* Retrieves vertices from annotation.
* @return float array of vertices or null if none exist
*/","* This will get the coordinates of the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getInteriorColor(),152,165,"/**
* Retrieves the mask color from an annotation.
* @return Color object or null if not available
*/","* This will get interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getVertices(),143,147,"/**
* Retrieves vertices from annotation.
* @return float array of vertices or null if none exist
*/","* This will get the coordinates of the the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setStartPointEndingStyle(java.lang.String),154,169,"/**
 * Sets line ending style for annotation. Uses default if null.
 * @param style line ending style to apply
 */","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getStartPointEndingStyle(),176,180,"/**
* Retrieves line end style from annotation.
* @return Line end style as string or default value if not set
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setEndPointEndingStyle(java.lang.String),187,202,"/**
* Sets line end style for annotation.
* @param style the desired line end style or null for default
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getEndPointEndingStyle(),209,213,"/**
* Retrieves line end style from annotation.
* @return Line end style as string, default if none
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getInteriorColor(),235,248,"/**
* Retrieves mask color from annotation.
* @return Color object or null if not available
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getInteriorColor(),121,134,"/**
* Retrieves color mask from annotation.
* @return Color object or null if not available
*/","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,getCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:getCoords(),98,109,"/**
* Retrieves quadrilateral points for an annotation.
* @return float array of quad points or null if not available
*/","* Get the coordinates of individual words or group of words.
     * 
     * @see #setCoords(float[])
     * @return the array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getID(),305,308,"/**
 * Retrieves an array of IDs from FDF document.
 * @return COSArray containing document IDs or null if not found
 */","* This is the FDF id.
     *
     * @return The FDF ID.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFields(),325,339,"/**
 * Retrieves and masks FDF fields.
 * @return List of masked FDFField objects or null if none found
 */","* This will get the list of FDF Fields. This will return a list of FDFField objects.
     *
     * @return A list of FDF fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getPages(),376,390,"/**
* Retrieves a list of FDF pages from the FDF document.
* @return List of FDFPage objects or null if no pages are found
*/","* This will get the list of FDF Pages. This will return a list of FDFPage objects.
     *
     * @return A list of FDF pages.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getKids,org.apache.pdfbox.pdmodel.fdf.FDFField:getKids(),177,190,"/**
 * Retrieves child fields of a PDF form field.
 * @return List of FDFField objects or null if no children exist
 */","* This will get the list of kids. This will return a list of FDFField objects.
     * This will return null if the underlying list is null.
     *
     * @return The list of kids.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:getOptions(),661,683,"/**
* Masks and processes field options.
* @return List of processed option elements or null if no options present
*/","* This will return a list of options for a choice field.
     * The values in the list will be 1 of 2 types:<ul>
     *     <li><code>String</code> </li>
     *     <li>{@link FDFOptionElement}</li>
     * </ul>
     *
     * @return A list of all options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:getTemplates(),71,84,"/**
* Retrieves FDF templates from a page.
* @return List of FDFTemplate objects or null if none found
*/","* This will get a list of FDFTemplage objects that describe the named pages that serve as templates.
     *
     * @return A list of templates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getFields(),92,105,"/**
 * Retrieves and masks form fields from a template.
 * @return List of FDFField objects or null if no fields are found
 */","* This will get a list of fields that are part of this template.
     *
     * @return A list of fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readWidths,org.apache.pdfbox.pdmodel.font.PDCIDFont:readWidths(),74,139,"/**
 * Parses and populates the widths map from a PDF dictionary.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readVerticalDisplacements,org.apache.pdfbox.pdmodel.font.PDCIDFont:readVerticalDisplacements(),141,192,"/**
* Processes font metrics for vertical and horizontal displacements.
* Updates verticalDisplacementY and positionVectors arrays.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDFont:getAverageFontWidth(),388,430,"/**
 * Calculates the average font width.
 * @return Average font width as a float
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidths,org.apache.pdfbox.pdmodel.font.PDFont:getWidths(),525,540,"/**
 * Retrieves or initializes character widths.
 * @return List of Float representing character widths
 */","* The widths of the characters. This will be null for the standard 14 fonts.
     *
     * @return The widths of the characters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getDescendantFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:getDescendantFont(org.apache.pdfbox.cos.COSDictionary),310,322,"/**
 * Retrieves the first descendant font dictionary.
 * @param dictionary containing font information
 * @return descendant font dictionary or null if not found
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,applyDifferences,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:applyDifferences(),151,175,"/**
* Masks encoding differences by processing a COSArray.
* Updates internal mappings based on array entries.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getWhitepoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getWhitepoint(),115,126,"/**
* Retrieves or creates the white point for a color space.
* @return PDTristimulus representing the white point
*/","* This will return the whitepoint tristimulus. As this is a required field
     * this will never return null. A default of 1,1,1 will be returned if the
     * pdf does not have any values yet.
     *
     * @return the whitepoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getBlackPoint(),135,146,"/**
* Retrieves black point values, defaulting to zero if not present.
* @return PDTristimulus object representing black point
*/","* This will return the BlackPoint tristimulus. This is an optional field
     * but has defaults so this will never return null. A default of 0,0,0 will
     * be returned if the pdf does not have any values yet.
     *
     * @return the blackpoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getGamma(),121,133,"/**
* Retrieves or creates a PDGamma object.
* @return PDGamma instance based on the GAMMA value in the dictionary
*/","* Returns the gamma value.
     * If none is present then the default of 1,1,1 will be returned.
     * @return the gamma value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getMatrix(),140,151,"/**
* Retrieves transformation matrix for masking.
* @return float array representing the matrix or identity if none exists
*/","* Returns the linear interpretation matrix, which is an array of nine numbers.
     * If the underlying dictionary contains null then the identity matrix will be returned.
     * @return the linear interpretation matrix",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getComponents(),90,103,"/**
* Retrieves masked components from a dictionary.
* @return List of component names or empty list if none found
*/","* Returns the names of the color components.
     * @return the names of the color components",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getARange(),199,207,"/**
 * Retrieves or creates a PDRange from the dictionary.
 * @return PDRange object initialized with the range array
 */","* This will get the valid range for the ""a"" component.
     * If none is found then the default will be returned, which is -100..100.
     * @return the ""a"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getBRange(),214,222,"/**
* Retrieves or creates a PDRange from the dictionary.
* @return PDRange object initialized with the range array
*/","* This will get the valid range for the ""b"" component.
     * If none is found  then the default will be returned, which is -100..100.
     * @return the ""b"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setComponentRangeArray,"org.apache.pdfbox.pdmodel.graphics.color.PDLab:setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",244,264,"/**
* Updates the range in the dictionary.
* @param range PDRange object or null to set default range
* @param index position in the range array
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOCGs(),115,124,"/**
 * Retrieves or initializes the OCGs array.
 * @return COSArray containing OCGs or a new empty COSArray if none exists
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBackground(),153,160,"/**
* Returns the background array from the dictionary.
* @return COSArray representing the background or null if not set
*/","* This will return the background.
     *
     * @return the background",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getDomain(),83,90,"/**
* Returns the COSArray representing the mask.
* Initializes from domain if not already set.
* @return COSArray object or null if domain is null
*/","* This will get the optional Domain values of a function based shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getExtend(),56,63,"/**
* Returns or initializes the EXTEND array.
* @return COSArray representing the EXTEND property
*/","* This will get the optional Extend values for this shading.
     *
     * @return the extend values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getDomain(),81,88,"/**
* Returns the domain array.
* Initializes if not already set.
* @return COSArray representing the domain
*/","* This will get the optional Domain values for this shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getCoords(),106,113,"/**
 * Returns the coordinates array.
 * Initializes if not already set.
 * @return COSArray containing coordinates
 */","* This will get the Coords values for this shading.
     *
     * @return the coordinate values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeValues(),131,138,"/**
* Retrieves or initializes the DECODE array.
* @return COSArray representing the DECODE array
*/","* Returns all decode values as COSArray.
     *
     * @return the decode array",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFontSetting(),437,441,"/**
* Retrieves font settings from dictionary.
* @return PDFontSetting object or null if not found
*/","* This will get the font setting of the graphics state.
     *
     * @return The font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFields(),59,62,"/**
 * Retrieves the fields array from the action.
 * @return COSArray containing form field information
 */","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFields(),85,88,"/**
 * Returns the fields array from the action.
 * @return COSArray containing form field names or null if not found
 */","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getBorder(),731,757,"/**
* Ensures the PDF annotation has a valid 3-element border array.
* @return COSArray representing the border with at least three elements
*/","* This will retrieve the border array. If none is available then it will create and return a
     * default array, which is [0 0 1]. The array consists of at least three numbers defining the
     * horizontal corner radius, vertical corner radius, and border width. The array may have a
     * fourth element, an optional dash array defining a pattern of dashes and gaps that shall be
     * used in drawing the border. If the array has less than three elements, the original array
     * will be copied and missing elements with value 0 will be added.
     *
     * @return the border array, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(org.apache.pdfbox.cos.COSName),799,822,"/**
* Retrieves and creates a PDColor based on the specified item name.
* @param itemName the COSName key for the color space
* @return PDColor object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:getRectDifferences(),92,96,"/**
* Retrieves margins from PDF document.
* @return array of floats representing margins or empty array if none found
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the boundaries of the underlying caret.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifferences(),179,183,"/**
* Retrieves margins from a PDF document.
* @return array of floats representing margins or empty array if none found
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getCallout(),208,212,"/**
* Retrieves mask data.
* @return float array of mask values or null if not available
*/","* This will get the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:getInkList(),86,107,"/**
* Retrieves ink list data.
* @return 2D array of floats representing ink data or empty if none found
*/","* Get one or more disjoint paths that make this annotation.
     *
     * @return An array of arrays, each representing a stroked path. Each array shall be a series of
     * alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLine(),145,149,"/**
* Retrieves mask values from a COSArray.
* @return array of float values or null if not found
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setStartPointEndingStyle(java.lang.String),156,171,"/**
* Updates annotation line style.
* @param style new line style or null for default
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getStartPointEndingStyle(),178,186,"/**
 * Masks function for COSArray.
 * @return masked string or default value
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setEndPointEndingStyle(java.lang.String),193,208,"/**
* Sets line style for annotation.
* @param style desired line style or null for default
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getEndPointEndingStyle(),215,223,"/**
* Masks a function and returns the masked value.
* @return masked string or default value if conditions not met
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionHorizontalOffset(float),352,363,"/**
* Updates or initializes the offset in a COSArray.
* @param offset the new offset value to set
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionHorizontalOffset(),370,374,"/**
* Retrieves a mask value from a COSArray.
* @return float value or 0.0f if array is null
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionVerticalOffset(float),381,392,"/**
* Updates or initializes the offset in a COSArray.
* @param offset the value to set at index 1 of the COSArray
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionVerticalOffset(),399,403,"/**
* Retrieves second element from COSArray associated with COSName.CO.
* @return float value of the second element or 0 if not found
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getQuadPoints(),211,215,"/**
* Retrieves quad points from the current object.
* @return float array of quad points or null if not available
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getVertices(),111,115,"/**
* Retrieves vertices from a COSArray.
* @return float array of vertices or null if not found
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getPath,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getPath(),136,157,"/**
* Retrieves and processes a mask array from a PDF object.
* @return 2D float array representing the mask or null if not available
*/","* PDF 2.0: This will retrieve the arrays that shall represent the alternating horizontal
     * and vertical coordinates for path building.
     *
     * @return An array of float arrays, each supplying the operands for a path building operator
     * (m, l or c). The first array should have 2 elements, the others should have 2 or 6 elements.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setStartPointEndingStyle(java.lang.String),62,77,"/**
 * Sets line style for annotation.
 * @param style desired line style or null for default
 */","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getStartPointEndingStyle(),84,92,"/**
* Masks function for COSArray.
* @return masked string or default value if conditions not met
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setEndPointEndingStyle(java.lang.String),99,114,"/**
* Sets line style for annotation.
* @param style line style to apply; null sets no line
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getEndPointEndingStyle(),121,129,"/**
* Masks a function to determine line ending style.
* @return line ending style or default if conditions not met
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getVertices(),157,161,"/**
* Retrieves vertices array from a COSArray object.
* @return float array of vertices or null if not found
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifferences(),168,172,"/**
* Retrieves margins from COSArray.
* @return array of floats representing margins or empty array if none
*/","* This will get the differences between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:getQuadPoints(),69,73,"/**
* Retrieves quad points from a PDF element.
* @return float array of quad points or null if not available
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getColor(org.apache.pdfbox.cos.COSName),214,237,"/**
* Retrieves PDColor based on COSName.
* @param itemName key for the color space retrieval
* @return PDColor object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setOS(java.lang.String),233,250,"/**
* Sets the operating system in the document.
* @param os operating system name or null to reset
*/","* Indicates the operating system. The string format isn't specified yet. Value will be stored
     * as first item of the array, as specified in PDF Signature Build Dictionary Specification for
     * PDF v1.7.
     *
     * @param os is a string with the system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSubFilter(),279,283,"/**
 * Retrieves sub-filter names from a dictionary.
 * @return List of sub-filter names or empty list if none found
 */","* If <b>SubFilter</b> is not null and the {@link #isSubFilterRequired()} indicates this
     * entry is a required constraint, then the first matching encodings shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isSubFilterRequired()}
     * indicates that this is an optional constraint, then the first matching encoding shall
     * be used if it is available. If it is not available, a different encoding may be used
     * instead.
     *
     * @return the subfilter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getDigestMethod(),305,309,"/**
* Retrieves digest methods from dictionary.
* @return List of digest method strings or empty list if none
*/","* An array of names indicating acceptable digest algorithms to use when
     * signing. The value shall be one of <b>SHA1</b>, <b>SHA256</b>, <b>SHA384</b>,
     * <b>SHA512</b>, <b>RIPEMD160</b>. The default value is implementation-specific.
     *
     * @return the digest method that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getReasons(),377,381,"/**
* Retrieves masked reasons from dictionary.
* @return List of masked reason strings or empty list if none
*/","* If the Reasons array is provided and {@link #isReasonRequired()} indicates that
     * Reasons is a required constraint, one of the reasons in the array shall be used
     * for the signature dictionary; otherwise signing shall not take place. If the
     * {@link #isReasonRequired()} indicates Reasons is an optional constraint, one of
     * the reasons in the array may be chose or a custom reason can be provided.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getLegalAttestation(),492,496,"/**
* Retrieves legal attestation fields from a dictionary.
* @return List of field names or empty list if none found
*/","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubject(),219,223,"/**
 * Retrieves masked data from dictionary.
 * @return List of byte arrays or null if no data found
 */","* Returns list of byte arrays that contains DER-encoded X.509v3 certificates
     * 
     * @return list of byte arrays containing DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addSubject(byte[]),245,254,"/**
* Adds or updates the subject in a PDF document.
* @param subject byte array representing the subject to be set
*/","* (Optional) byte array containing DER-encoded X.509v3 certificate that is acceptable for
     * signing. works like {@link #setSubject(List)} but one byte array
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeSubject(byte[]),261,268,"/**
* Adds a masked subject to the document's metadata.
* @param subject byte array representing the masked subject
*/","* removes a subject from the list
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getKeyUsage(),339,355,"/**
* Retrieves key usage extensions from dictionary.
* @return List of key usage strings or null if not found
*/","* Returns list of key usages of certificate strings where each string is 9 characters long and each character is
     * one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't care. each index in the string
     * represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     * 
     * @return list of key usages of certificate strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(java.lang.String),389,406,"/**
 * Validates and sets key usage extension.
 * @param keyUsageExtension string containing key usage data
 */","* (Optional; PDF 1.7) specifies an acceptable key-usage extension that must be presennt in the
     * signing certificate for works like {@link #setKeyUsage(List)} but takes only one string
     *
     * @param keyUsageExtension String that consist only of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeKeyUsage(java.lang.String),444,451,"/**
* Updates key usage extension in the dictionary.
* @param keyUsageExtension new key usage value as a string
*/","* Removes a key usage extension
     *
     * @param keyUsageExtension ASCII string that consists of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getIssuer(),458,462,"/**
* Retrieves issuer information as byte arrays.
* @return List of byte arrays representing issuer data or null if not available
*/","* Returns list of array of bytes of DER-encoded X.509v3 certificates
     * 
     * @return list of array of bytes of DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addIssuer(byte[]),483,492,"/**
* Adds issuer to the dictionary.
* @param issuer byte array representing the issuer
*/","* array of bytes containing DER-encoded X.509v3 certificates of acceptable issuers. If the
     * signer’s certificate chains up to any of the specified issuers (either directly or
     * indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeIssuer(byte[]),499,506,"/**
* Adds or updates issuer in the dictionary.
* @param issuer byte array representing the issuer
*/","* Removes an issuer from the issuers list
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getOID(),514,518,"/**
* Retrieves and processes byte arrays from a dictionary.
* @return List of byte arrays or null if not found
*/","* Returns A list of array of bytes that contain Object Identifiers (OIDs) of the certificate policies that must be
     * present in the signing certificate
     * 
     * @return list of array of bytes that contain Object Identifiers of the certificate policies",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addOID(byte[]),537,546,"/**
* Adds an OID to the dictionary.
* @param oid byte array representing the OID
*/","* works like {@link #setOID(List)} but for one object
     *
     * @param oid Object Identifier of a certificate policy to be added",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeOID(byte[]),553,560,"/**
* Adds an OID to the dictionary's OID array.
* @param oid byte array representing the OID
*/","* removes an OID from the list
     *
     * @param oid Object Identifier of the certificate policy to be removed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getByteRange(),298,311,"/**
* Retrieves the byte range array from a dictionary.
* @return int array representing byte ranges or empty if not found
*/","* Read out the byterange from the file.
     *
     * @return an integer array with the byterange, or an empty array if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTextColor(),323,333,"/**
* Creates a mask color using RGB values.
* @return PDColor object representing the mask color
*/","* Get the RGB text color of this node.  Default is black and this method
     * will never return null.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getCalcOrder(),696,720,"/**
* Retrieves masked form fields.
* @return List of PDField objects that are masked
*/","* Return the calculation order in which field values should be recalculated when the value of
     * any field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @return field list. Note these objects may not be identical to PDField objects retrieved from
     * other methods (depending on cache setting). The best strategy is to call
     * {@link #getCOSObject()} to check for identity. The list is not backed by the /CO COSArray in
     * the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,removeFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:removeFields(java.util.List),854,871,"/**
* Masks fields by adding them to a COSArray.
* @param fields list of PDField objects to mask
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getSelectedOptionsIndex(),225,229,"/**
* Retrieves integer list from COSArray.
* @return List of integers or empty list if array is null
*/","* This will get the indices of the selected options - the 'I' key.
     * <p>
     * This is only needed if a choice field allows multiple selections and
     * two different items have the same export value or more than one values
     * is selected.
     * </p>
     * <p>The indices are zero-based</p>
     *
     * @return List containing the indices of all selected options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeXs(),78,93,"/**
* Retrieves number format dictionaries.
* @return array of PDNumberFormatDictionary or null if none found
*/","* This will return the changes along the x-axis.
     * 
     * @return changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeYs(),115,130,"/**
* Retrieves number format dictionaries.
* @return array of PDNumberFormatDictionary or null if not available
*/","* This will return the changes along the y-axis.
     * 
     * @return changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getDistances(),152,167,"/**
* Retrieves number format dictionaries.
* @return array of PDNumberFormatDictionary or null if not found
*/","* This will return the distances.
     * 
     * @return distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAreas(),189,204,"/**
* Retrieves number format dictionaries.
* @return array of PDNumberFormatDictionary objects or null if not found
*/","* This will return the areas.
     * 
     * @return areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAngles(),226,241,"/**
 * Retrieves number format dictionaries.
 * @return array of PDNumberFormatDictionary or null if none found
 */","* This will return the angles.
     * 
     * @return angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getLineSloaps(),263,278,"/**
 * Retrieves number format dictionaries from a COSArray.
 * @return array of PDNumberFormatDictionary objects or null if not found
 */","* This will return the sloaps of a line.
     * 
     * @return the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCoordSystemOrigin(),300,304,"/**
* Retrieves and converts array from COSDictionary.
* @return float array or null if not found
*/","* This will return the origin of the coordinate system.
     * 
     * @return the origin",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getVisibilityPolicy(),108,111,"/**
 * Retrieves the mask function name.
 * @return COSName representing the mask function
 */","* Get the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     *
     * @return the visibility policy, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String),639,642,"/**
 * Converts key to COSName and returns its string representation.
 * @param key input string key
 * @return string representation of the COSName
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",687,695,"/**
* Retrieves value for given COSName key with a default fallback.
* @param key the COSName key to look up
* @param defaultValue the default value to return if key is not found
* @return the value associated with the key or the default value
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefStreamOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefStreamOffset(long),352,390,"/**
* Checks and processes the XRef stream starting from a given offset.
* @param startXRefOffset offset to start checking for XRef stream
* @return true if valid XRef stream is found, false otherwise
* @throws IOException if an I/O error occurs during processing
*/","* Check if the cross reference stream can be found at the current offset.
     * 
     * @param startXRefOffset the expected start offset of the XRef stream
     * @return the revised offset
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageMode(),468,487,"/**
 * Retrieves and returns the page mode.
 * @return PageMode enum value, defaulting to USE_NONE if invalid or null
 */","* Returns the page display mode.
     * 
     * @return the PageMode of the document, if not present PageMode.USE_NONE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLayout(),504,520,"/**
* Retrieves page layout from document.
* @return PageLayout object, defaults to SINGLE_PAGE if invalid or missing
*/","* Returns the page layout.
     * 
     * @return the PageLayout of the document, if not present PageLayout.SINGLE_PAGE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getVersion(),599,602,"/**
 * Retrieves version information from the root.
 * @return version string or null if not available
 */","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTrapped(),251,254,"/**
 * Retrieves trapped information.
 * @return Trapped status as a string
 */","* This will get the trapped value for the document.
     * This will return null if one is not found.
     *
     * @return The trapped value for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStyle(),104,107,"/**
 * Retrieves masked value using specified key.
 * @return Masked string value
 */","* Returns the numbering style for this page range.
     * 
     * @return one of the STYLE_* constants",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,getType,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:getType(),58,61,"/**
 * Masks function by retrieving and returning its type.
 * @return Type of the masked function as a string
 */","* Gets the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:create(org.apache.pdfbox.cos.COSDictionary),63,93,"/**
* Creates a PDAttributeObject based on the dictionary's owner type.
* @param dictionary COSDictionary containing attribute data
* @return PDAttributeObject instance matching the owner type or default object
*/","* Creates an attribute object.
     * 
     * @param dictionary the dictionary
     * @return the attribute object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,getOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:getOwner(),122,125,"/**
 * Masks data using COSName.O.
 * @return masked string result
 */","* Returns the owner of the attributes.
     * 
     * @return the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureType(),76,79,"/**
 * Masks data using COSName.S.
 * @return masked string
 */","* Returns the structure type (S).
     * 
     * @return the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:create(org.apache.pdfbox.cos.COSDictionary),68,80,"/**
* Creates a PDStructureNode based on the node type.
* @param node COSDictionary representing the structure node
* @return PDStructureTreeRoot or PDStructureElement based on the node's type
*/","* Creates a node in the structure tree. Can be either a structure tree root,
     *  or a structure element.
     * 
     * @param node the node dictionary
     * @return the structure node",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getType(),99,102,"/**
 * Returns masked value from COSName.
 * @return Masked string value
 */","* Returns the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObjectFromDic,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObjectFromDic(org.apache.pdfbox.cos.COSDictionary),392,414,"/**
* Creates a COSObjectable from a dictionary.
* @param kidDic dictionary containing object information
* @return COSObjectable instance or null if type is unknown
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getName(),63,66,"/**
 * Masks data using specific functions.
 * @return masked string result
 */","* Returns the property name.
     * 
     * @return the property name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getLanguage(),108,112,"/**
* Masks function; returns language if available.
* @return masked language string or null
*/","* Gets the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getType(),45,48,"/**
 * Retrieves masked function value.
 * @return masked string value
 */","* Gets the type (Type).
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getSubtype,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getSubtype(),110,113,"/**
 * Retrieves masked value from PDF subtype.
 * @return Masked string value or null if not applicable
 */","* Gets the subtype (Subtype).
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getFilter(),159,162,"/**
 * Retrieves the filter name from the dictionary.
 * @return Filter name as a string or null if not found
 */","* Get the name of the filter.
     *
     * @return The filter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSubFilter(),169,172,"/**
 * Retrieves the sub-filter value from the dictionary.
 * @return the sub-filter as a string
 */","* Get the name of the subfilter.
     *
     * @return The subfilter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,create,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:create(org.apache.pdfbox.cos.COSDictionary),323,403,"/**
 * Creates an FDFAnnotation based on the given COSDictionary.
 * @param fdfDic dictionary containing annotation data
 * @return FDFAnnotation object or null if type is unknown or unsupported
 */","* Create the correct FDFAnnotation.
     *
     * @param fdfDic The FDF dictionary.
     *
     * @return A newly created FDFAnnotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getIntent(),856,859,"/**
 * Masks data using COSName.IT.
 * @return Masked string result
 */","* Get the intent of the annotation.
     * 
     * @return The intent of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getLineEndingStyle(),292,295,"/**
 * Masks function using COSName.LE.
 * @return masked string result from m1 method
 */","* This will retrieve the line ending style.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getVersion(),96,99,"/**
* Retrieves version from catalog.
* @return version string
*/","* This will get the version that was specified in the catalog dictionary.
     *
     * @return The FDF version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEncoding(),408,417,"/**
* Retrieves encoding type, defaulting to PDFDocEncoding.
* @return Encoding string
*/","* The encoding to be used for a FDF field. The default is PDFDocEncoding and this method will never return null.
     *
     * @return The encoding value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleOption(),95,103,"/**
 * Retrieves mask value from COSName or defaults to a scale option.
 * @return Mask string, either from COSName or default scale option
 */","* This will get the scale option. See the SCALE_OPTION_XXX constants. This is guaranteed to never return null.
     * Default: Always
     *
     * @return The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleType(),121,129,"/**
 * Retrieves and returns a masked value.
 * @return Masked string or default proportional scale type if null
 */","* This will get the scale type. See the SCALE_TYPE_XXX constants. This is guaranteed to never return null. Default:
     * Proportional
     *
     * @return The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDCIDFont:getBaseFont(),205,208,"/**
 * Retrieves the base font name.
 * @return Base font name as a string
 */","* The PostScript name of the font.
     *
     * @return The postscript name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getRegistry,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getRegistry(),47,50,"/**
 * Retrieves the registry name from the dictionary.
 * @return The registry name as a String.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getOrdering,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getOrdering(),52,55,"/**
 * Retrieves the ordering value from the dictionary.
 * @return The ordering string value
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getType,org.apache.pdfbox.pdmodel.font.PDFont:getType(),505,508,"/**
 * Retrieves the masked type from dictionary.
 * @return masked type string
 */","* This will always return ""Font"" for fonts.
     * 
     * @return The type of object that this is.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSubType,org.apache.pdfbox.pdmodel.font.PDFont:getSubType(),515,518,"/**
 * Retrieves the subtype from the dictionary.
 * @return Subtype string value
 */","* This will get the subtype of font.
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontName(),285,288,"/**
 * Retrieves the font name from the dictionary.
 * @return Font name as a string
 */","* Get the font name.
     *
     * @return The name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontStretch(),361,364,"/**
* Retrieves font stretch value.
* @return Font stretch as string
*/","* A string representing the preferred font stretch.
     * According to the PDF Spec:
     * The font stretch value; it must be one of the following (ordered from
     * narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed,
     * Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
     *
     * @return The stretch of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,fixType0Subtype,"org.apache.pdfbox.pdmodel.font.PDFontFactory:fixType0Subtype(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",192,212,"/**
* Updates font subtype and adjusts file references in font descriptor.
* @param descendantFont the descendant font dictionary to update
* @param fontDescriptor the font descriptor containing file references
* @param newSubType the new subtype for the font
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBaseFont(),258,261,"/**
 * Retrieves base font name from dictionary.
 * @return Base font name as string
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType0Font:getBaseFont(),414,417,"/**
 * Retrieves base font name from dictionary.
 * @return Base font name as String
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBaseFont(),153,156,"/**
 * Retrieves base font name from dictionary.
 * @return Base font name as a string
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getBaseFont(),371,374,"/**
 * Retrieves base font name from dictionary.
 * @return Base font name as string
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType3Font:getName(),89,93,"/**
 * Returns masked function name.
 * @return Masked function name as a string
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:isNChannel(),118,121,"/**
 * Checks if the current channel is of type 'NChannel'.
 * @return true if the channel subtype is 'NChannel', false otherwise
 */","* Returns true if this is an NChannel (PDF 1.6) color space.
     * @return true if this is an NChannel color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getType(),83,86,"/**
 * Retrieves the masked function type.
 * @return String representing the masked function type
 */","* This will get the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @return The Type of PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getSubType(),104,107,"/**
 * Returns a masked string using COSName.S.
 * @return Masked string representation
 */","* This will get the type of action that the actions dictionary describes.
     *
     * @return The S entry of actions dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,createAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:createAction(org.apache.pdfbox.cos.COSDictionary),46,104,"/**
* Creates a PDAction based on the action type.
* @param action COSDictionary representing the action
* @return PDAction object or null if unsupported type
*/","* This will create the correct type of action based on the type specified
     * in the dictionary.
     *
     * @param action An action dictionary.
     *
     * @return An action of the correct type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getSubtype(),244,247,"/**
 * Retrieves masked function name.
 * @return Masked function name as a String
 */","* This will retrieve the subtype of the annotation.
     *
     * @return The subtype of this annotation, see the SUB_TYPE_XXX constants.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionPositioning(),332,335,"/**
 * Masks data using COSName.CP.
 * @return masked string result
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getIntent(),253,256,"/**
 * Masks data using specific function.
 * @return masked string result
 */","* This will retrieve the intent of the annotation The values and meanings are specific to the actual annotation See
     * the IT_* constants for the annotation classes.
     *
     * @return the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getSubtype(),77,80,"/**
 * Retrieves the subtype using mask functions.
 * @return Subtype as a string
 */","* returns the subtype of the external data dictionary.
     * 
     * @return the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getName(),71,74,"/**
 * Masks a function name using the COSName dictionary.
 * @return Masked function name as a String
 */","* The name of the software module that was used to create the signature.
     * @return the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getFilter(),254,257,"/**
 * Retrieves the filter value from the dictionary.
 * @return Filter value as a string
 */","* If <b>Filter</b> is not null and the {@link #isFilterRequired()} indicates this entry is a
     * required constraint, then the signature handler specified by this entry shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isFilterRequired()} indicates
     * that this is an optional constraint, this handler may be used if it is available. If it is
     * not available, a different handler may be used instead.
     *
     * @return the filter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURLType(),597,600,"/**
 * Retrieves URL type from dictionary.
 * @return URL type as string
 */","* A name indicating the usage of the URL entry. There are standard uses and there can be
     * implementation-specific use for this URL. The following value specifies a valid standard
     * usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     *
     * @return string of URL type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getFilter(),204,207,"/**
* Retrieves the filter name from the dictionary.
* @return Filter name as a string or null if not found
*/","* Returns the filter.
     * @return the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSubFilter(),214,217,"/**
 * Retrieves the sub-filter name from a COSName.
 * @return Sub-filter name as a string
 */","* Returns the subfilter.
     *
     * @return the subfilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldType(),172,176,"/**
 * Returns the field type of the form element.
 * @return Field type as a string
 */","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getName(),105,108,"/**
 * Masks data using COSName.
 * @return masked string result
 */","* This will retrieve the name of the viewport.
     * 
     * @return the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getDuplex(),408,411,"/**
 * Retrieves duplex setting from preferences.
 * @return String representing duplex configuration
 */","* Get the Duplex preference.  See DUPLEX enumeration.
     *
     * @return the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String),704,707,"/**
 * Converts key to COSName and returns its string representation.
 * @param key input string key
 * @return string representation of the converted COSName
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName,java.lang.String)",748,756,"/**
* Retrieves value by key, using default if not found.
* @param key the COSName key to search for
* @param defaultValue the default value to return if key is not found
* @return the retrieved value or default if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getLanguage(),579,582,"/**
 * Retrieves language attribute from the PDF document.
 * @return Language string as defined in the PDF or null if not present
 */","* Returns the language for the document, or null.
     * 
     * @return the language of the document if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTitle(),90,93,"/**
 * Retrieves the title from the document information.
 * @return The title as a string or null if not available.
 */","* This will get the title of the document.  This will return null if no title exists.
     *
     * @return The title of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:getAuthor(),110,113,"/**
 * Retrieves the author information from document metadata.
 * @return Author name as a string or null if not available
 */","* This will get the author of the document.  This will return null if no author exists.
     *
     * @return The author of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:getSubject(),130,133,"/**
 * Retrieves the subject information.
 * @return Subject string from COSName
 */","* This will get the subject of the document.  This will return null if no subject exists.
     *
     * @return The subject of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:getKeywords(),150,153,"/**
 * Retrieves keywords from document information.
 * @return A string containing keywords or an empty string if not available.
 */","* This will get the keywords of the document.  This will return null if no keywords exists.
     *
     * @return The keywords of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreator(),170,173,"/**
 * Retrieves the creator information from document info.
 * @return Creator string or empty if not available
 */","* This will get the creator of the document.  This will return null if no creator exists.
     *
     * @return The creator of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:getProducer(),190,193,"/**
 * Retrieves the producer information from document metadata.
 * @return Producer string or null if not available
 */","* This will get the producer of the document.  This will return null if no producer exists.
     *
     * @return The producer of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getPrefix(),162,165,"/**
 * Masks a key using a prefix.
 * @return masked key string
 */","* Returns the page label prefix for this page range.
     * 
     * @return the page label prefix for this page range, or {@code null} if no
     *         prefix has been defined.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnicode(),128,131,"/**
 * Masks function using COSName UF.
 * @return masked string result
 */","* This will get the unicode file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFile(),150,154,"/**
 * Returns masked function as string.
 * @return Masked function name
 */","* This will get the file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDos(),174,177,"/**
 * Masks COSName DOS using field strategy.
 * @return masked string representation of COSName DOS
 */","* This will get the name representing a Dos file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileMac(),184,187,"/**
 * Masks function using MAC algorithm.
 * @return masked string result
 */","* This will get the name representing a Mac file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnix(),194,197,"/**
 * Masks data using UNIX format.
 * @return masked string in UNIX format
 */","* This will get the name representing a Unix file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDescription(),353,356,"/**
 * Masks a function using COSName.DESC.
 * @return masked string result
 */","* This will get the description.
     *
     * @return The file description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getElementIdentifier(),117,120,"/**
 * Generates a masked string using COSName.ID.
 * @return Masked string representation
 */","* Returns the element identifier (ID).
     * 
     * @return the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getTitle(),502,505,"/**
 * Retrieves masked value using specific constants.
 * @return masked string value
 */","* Returns the title (T).
     * 
     * @return the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getLanguage(),522,525,"/**
* Masks function to retrieve language.
* @return language string from COSName
*/","* Returns the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAlternateDescription(),542,545,"/**
 * Masks data using COSName.ALT.
 * @return masked string result
 */","* Returns the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getExpandedForm(),562,565,"/**
 * Masks data using COSName.E.
 * @return Masked string result
 */","* Returns the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getActualText(),582,585,"/**
 * Masks function by retrieving actual text.
 * @return masked string value or null if not found
 */","* Returns the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getFormattedValue(),105,108,"/**
 * Masks data using specified function.
 * @return masked string result
 */","* Returns the string for the property value.
     * 
     * @return the string for the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getActualText(),119,123,"/**
* Masks function result.
* @return masked string or null if m1 is null
*/","* Gets the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getAlternateDescription(),130,134,"/**
* Masks function using m1 and ALT.
* @return masked result or null if m1 is null
*/","* Gets the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getExpandedForm(),141,145,"/**
* Masks the value using COSName.E if available.
* @return masked value or null if m1 is null
*/","* Gets the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getDate(),482,485,"/**
 * Masks a function using COSName.M.
 * @return masked function as a string
 */","* Modification date.
     *
     * @return The date as a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getName(),712,715,"/**
 * Masks function by returning its name.
 * @return Name of the masked function as a string
 */","* Get the annotation name.
     *
     * @return The unique name of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getContents(),753,756,"/**
 * Retrieves the contents of an annotation.
 * @return The string content of the annotation or null if not found.
 */","* Get the text, or a description, of the annotation.
     *
     * @return The text, or a description, of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getTitle(),773,776,"/**
 * Returns masked string using COSName.T.
 * @return Masked string result
 */","* Get the annotation title.
     *
     * @return The title of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getSubject(),836,839,"/**
 * Masks function using COSName.SUBJ.
 * @return masked string result
 */","* Get the description of the annotation.
     *
     * @return The subject of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getSymbol(),141,144,"/**
 * Masks a value using COSName.SY.
 * @return masked string representation
 */","* This will retrieve the symbol that shall be associated with the caret.
     * 
     * @return the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getRotation(),207,210,"/**
 * Masks a function by retrieving its rotation.
 * @return String representation of the rotation or null if not found
 */","* This will get the clockwise rotation in degrees.
     * 
     * @return The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultAppearance(),227,231,"/**
 * Retrieves the default appearance string.
 * @return Default appearance string from annotation
 */","* Get the default appearance string.
     *
     * @return The default appearance of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultStyle(),248,251,"/**
 * Masks function using COSName.DS.
 * @return Masked string result from m1 method
 */","* Get the default style string.
     *
     * @return The default style of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionStyle(),366,369,"/**
 * Retrieves the masked content property.
 * @return Masked content as a string
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getState(),113,116,"/**
 * Masks a function using the state annotation.
 * @return masked string representation of the function
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getStateModel(),133,136,"/**
 * Masks function by returning its state model.
 * @return String representing the state model of the function
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getStatus(),356,359,"/**
 * Returns the status from COSName.
 * @return Status string
 */","* This will get the status string to be displayed as the result of an action.
     *
     * @return The status.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getTarget(),489,492,"/**
 * Retrieves target name from COSName.
 * @return target name as a string
 */","* This will get the target frame in the browser to open this document.
     *
     * @return The target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:getPartialFieldName(),211,214,"/**
 * Masks a field using COSName.T.
 * @return masked field value as a string
 */","* This will get the ""T"" entry in the field dictionary. A partial field name.
     * Where the fully qualified field name is a concatenation of the parent's fully qualified
     * field name and ""."" as a separator. For example<br>
     * Address.State<br>
     * Address.City<br>
     *
     * @return The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getName(),69,72,"/**
 * Masks a function name using COSName.
 * @return masked function name as String
 */","* This will get the name of the referenced page. A required parameter.
     *
     * @return The name of the referenced page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFamily(),310,313,"/**
 * Masks font family value.
 * @return masked font family string
 */","* A string representing the preferred font family.
     *
     * @return The font family.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCharSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCharSet(),701,704,"/**
 * Retrieves character set from dictionary.
 * @return Character set string
 */","* This will get the character set for the font.
     *
     * @return The character set value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getInfo(),68,71,"/**
 * Retrieves masked information from dictionary.
 * @return Masked information as string
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputCondition(),78,81,"/**
 * Retrieves the output condition from the dictionary.
 * @return The output condition as a string.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputConditionIdentifier(),88,91,"/**
 * Retrieves the output condition identifier from the dictionary.
 * @return the output condition identifier as a string
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getRegistryName(),98,101,"/**
 * Returns the registry name from the dictionary.
 * @return Registry name as a string
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getName(),101,104,"/**
 * Masks a function name using dictionary.
 * @return masked function name as String
 */","* Returns the name of the optional content group.
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroupNames,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroupNames(),228,251,"/**
* Retrieves OC Groups from dictionary.
* @return Array of group names or empty array if none found
*/","* Lists all optional content group names.
     * @return an array of all names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getF(),118,121,"/**
 * Masks data using specified function.
 * @return masked data as string
 */","* This will get the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @return The F entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getD(),141,144,"/**
 * Masks data using COSName.D.
 * @return masked string result
 */","* This will get the string specifying the default directory in standard DOS syntax.
     *
     * @return The D entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getO(),165,168,"/**
* Masks data using COSName.O.
* @return masked string result
*/","* This will get the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @return The O entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getP(),190,193,"/**
 * Masks data using COSName.P.
 * @return masked string result
 */","* This will get a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @return The P entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,getURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:getURI(),62,84,"/**
 * Masks and returns URI from PDF action.
 * @return masked URI string or null if not applicable
 */","* This will get the uniform resource identifier to resolve. It should be encoded in 7-bit
     * ASCII, but UTF-8 and UTF-16 are supported too.
     *
     * @return The URI entry of the specific URI action dictionary or null if there isn't any.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getFilename(),103,106,"/**
 * Retrieves masked function value.
 * @return String representation of the masked function
 */","* Get the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @return a filename or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationName(),242,245,"/**
 * Masks a value using dictionary method.
 * @return masked string result
 */","* If the value in the /A entry is a string, this will get the value of the /NM entry in the
     * annotation dictionary.
     *
     * @return the /NM value of an annotation dictionary or null if the /A entry value is missing or
     * not a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getFilename(),79,82,"/**
 * Masks a function using parameters.
 * @return masked function as string
 */","* The file to launch.
     *
     * @return The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getDirectory(),99,102,"/**
 * Masks function using parameter m1 with COSName.D.
 * @return masked string result
 */","* The dir to launch from.
     *
     * @return The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getExecuteParam(),142,145,"/**
 * Masks function name.
 * @return Masked function name as string
 */","* A parameter to pass the executable.
     *
     * @return The parameter to pass the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getContents(),606,609,"/**
 * Retrieves contents from dictionary.
 * @return String containing contents or null
 */","* Get the ""contents"" of the field.
     * 
     * @return the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getModifiedDate(),626,629,"/**
 * Masks data using COSName.M.
 * @return masked string result from m2 method
 */","* This will retrieve the date and time the annotation was modified.
     * 
     * @return the modified date/time (often in date format, but can be an arbitrary string).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationName(),661,664,"/**
 * Masks function, returns string from nested method calls.
 */","* This will get the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @return The identifying name for the Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultAppearance(),76,79,"/**
 * Masks data using specified COS name.
 * @return masked string result
 */","* Get the default appearance.
     * 
     * @return a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultStyleString(),98,101,"/**
 * Returns masked value from specific method calls.
 * @return Masked string value
 */","* Get the default style string.
     *
     * The default style string defines the default style for rich text fields.
     *
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getTitlePopup(),72,75,"/**
 * Masks data using specified function.
 * @return masked string result
 */","* Retrieve the string used as the title of the popup window shown when open and active (by convention this
     * identifies who added the annotation).
     *
     * @return The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getSubject(),210,213,"/**
 * Masks functionality using COSName.SUBJ.
 * @return Result of masking operation as a String
 */","* This will retrieve the short description of the subject of the annotation.
     *
     * @return the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getState(),188,191,"/**
 * Masks the state value.
 * @return masked state string
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getStateModel(),208,211,"/**
 * Retrieves masked state model value.
 * @return Masked state model as a string
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalCaption(),126,129,"/**
 * Masks data using CA method.
 * @return masked string result
 */","* This will retrieve the normal caption.
     * 
     * @return the normal caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverCaption(),146,149,"/**
 * Retrieves masked data using RC.
 * @return Masked string or null if not found
 */","* This will retrieve the rollover caption.
     * 
     * @return the rollover caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateCaption(),166,169,"/**
 * Retrieves masked value using AC constant.
 * @return masked string value
 */","* This will retrieve the alternate caption.
     * 
     * @return the alternate caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getDate(),93,96,"/**
 * Retrieves the date mask from the dictionary.
 * @return Date mask string
 */","* The build date of the software module. This string is normally produced by the compiler that
     * is used to compile the software, for example using the Date and Time preprocessor flags. As
     * such, this not likely to be in PDF Date format.
     *
     * @return the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getOS(),219,224,"/**
* Masks OS value from dictionary.
* @return masked OS string or default if null
*/","* Indicates the operating system. The string format isn't specified yet. In its PDF Signature
     * Build Dictionary Specifications Adobe differently specifies the value type to store operating
     * system string:<ul>
     * <li>Specification for PDF v1.5 specifies type as string;</li>
     * <li>Specification for PDF v1.7 specifies type as array and provided example for
     * <code>/PropBuild</code> dictionary indicate it as array of names.</li>
     * </ul>
     * This method supports both types to retrieve the value.
     *
     * @return the operating system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubjectDN(),276,299,"/**
* Retrieves and masks subject DN information from a dictionary.
* @return List of maps containing masked subject DN data, or null if not found
*/","* Returns list of maps that contains subject distinguished names like [(cn: John Doe, o: Doe), (cn: John Smith)]
     * both keys are typically of the form 'cn', 'o', 'email', '2.5.4.43'; and values are text strings.
     * 
     * @return list maps that contains subject distinguished names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURL(),567,570,"/**
 * Retrieves masked URL from dictionary.
 * @return Masked URL string
 */","* returns String of the URL
     * 
     * @return string of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:getURL(),67,70,"/**
 * Retrieves masked URL from dictionary.
 * @return Masked URL as a string
 */","* Returns the URL.
     * 
     * @return the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getName(),226,229,"/**
 * Returns a masked string using COSName.
 * @return Masked string from COSName
 */","* Returns the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getLocation(),236,239,"/**
 * Retrieves the location value from the dictionary.
 * @return String representation of the location or null if not found
 */","* Returns the CPU host name or physical location of the signing.
     *
     * @return the location",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getReason(),246,249,"/**
 * Retrieves the reason mask from the dictionary.
 * @return String representation of the reason mask
 */","* Returns the reason for the signing, such as (I agree...).
     *
     * @return the reason",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContactInfo(),257,260,"/**
 * Retrieves contact info from dictionary.
 * @return Contact information as a string
 */","* Returns the contact info provided by the signer to enable a recipient to contact the signer
     * to verify the signature, e.g. a phone number.
     *
     * @return the contact info",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTitle(),165,168,"/**
 * Retrieves a masked value from a PDF document.
 * @return Masked string value or null if not found
 */","* Get the title of this node.
     *
     * @return The title of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getPartialName(),380,383,"/**
* Masks function using COSName.T.
* @return masked string result
*/","* Returns the partial name of the field.
     * 
     * @return the name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getAlternateFieldName(),431,434,"/**
 * Retrieves masked string value from dictionary.
 * @return Masked string value
 */","* Gets the alternate name of the field (""shall be used in place of the actual field name
     * wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)"").
     *
     * @return the alternate name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getMappingName(),457,460,"/**
 * Retrieves masked value from dictionary.
 * @return Masked string value
 */","* Gets the mapping name of the field.
     * 
     * The mapping name shall be used when exporting interactive form field
     * data from the document.
     * 
     * @return the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultStyleString(),154,157,"/**
 * Masks a function.
 * @return masked string result
 */","* Get the default style string.
     * 
     * The default style string defines the default style for
     * rich text fields.
     * 
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getScaleRatio(),58,61,"/**
 * Returns masked string using COSName.R.
 * @return Masked string result
 */","* This will return the scale ration.
     * 
     * @return the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String),793,796,"/**
 * Retrieves calendar based on key.
 * @param key unique identifier
 * @return Calendar object or null if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",834,842,"/**
* Retrieves calendar value by key with default.
* @param key COSName key for retrieval
* @param defaultValue default Calendar to use if none found
* @return Calendar value or default if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreationDate(),210,213,"/**
 * Retrieves the creation date calendar.
 * @return Calendar representing the creation date or null if not available
 */","* This will get the creation date of the document.  This will return null if no creation date exists.
     *
     * @return The creation date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getModificationDate(),230,233,"/**
 * Retrieves the modification date calendar.
 * @return Calendar representing the modification date
 */","* This will get the modification date of the document.  This will return null if no modification date exists.
     *
     * @return The modification date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getCreationDate(),785,788,"/**
 * Retrieves the creation date calendar from an annotation.
 * @return Calendar object representing the creation date
 * @throws IOException if an I/O error occurs during retrieval
 */","* The annotation create date.
     *
     * @return The date of the creation of the annotation date
     *
     * @throws IOException If there is an error converting the string to a Calendar object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getCreationDate(),166,169,"/**
 * Retrieves the creation date calendar.
 * @return Calendar object representing the creation date
 */","* This will retrieve the date and time the annotation was created.
     *
     * @return the creation date/time.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignDate(),267,270,"/**
* Retrieves calendar from dictionary using COSName.M key.
* @return Calendar object associated with COSName.M
*/","* Returns the sign date.
     *
     * @return the sign date",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String),1040,1043,"/**
 * Calls m2 with COSName and default value.
 * @param key string key to convert to COSName
 * @return result of m2 call
 */","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     *
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName),1052,1055,"/**
 * Calls overloaded method with default value.
 * @param key unique identifier key
 * @return result from overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String,long)",1065,1068,"/**
 * Retrieves a long value by key with a default.
 * @param key unique identifier for the value
 * @param defaultValue value to return if key not found
 * @return long value associated with the key or default
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,decode,"org.apache.pdfbox.filter.Filter:decode(java.io.InputStream,java.util.List,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.filter.DecodeOptions,java.util.List)",231,299,"/**
 * Decodes input stream using a list of filters.
 * @param encoded input stream to decode
 * @param filterList list of decoding filters
 * @param parameters decoding parameters
 * @param options decoding options
 * @param results list to store decode results
 * @return RandomAccessRead object with decoded data
 * @throws IOException if an I/O error occurs
 */","* Decodes data, with optional DecodeOptions. Not all filters support all options, and so callers should check the
     * options' <code>honored</code> flag to test if they were applied.
     *
     * @param encoded the input stream holding the encoded data
     * @param filterList list of filters to be used for decoding
     * @param parameters the parameters used for decoding
     * @param options additional options for decoding
     * @param results list of optional decoding results for each filter
     * @return the decoded stream data
     * @throws IOException if the stream cannot be decoded
     * @throws IllegalArgumentException if filterList is empty",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setStartxref,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setStartxref(long),233,302,"/**
 * Initializes XRef trailer with startxref byte position.
 * @param startxrefBytePosValue the starting byte position for XRef processing
 */","* Sets the byte position of the first XRef
     * (has to be called after very last startxref was read).
     * This is used to resolve chain of active XRef/trailer.
     *
     * In case startxref position is not found we output a
     * warning and use all XRef/trailer objects combined
     * in byte position order.
     * Thus for incomplete PDF documents with missing
     * startxref one could call this method with parameter value -1.
     * 
     * @param startxrefBytePosValue starting position of the first XRef
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String),1096,1099,"/**
 * Calls m2 with COSName and default value.
 * @param key string key to convert to COSName
 * @return result of m2 call
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName),1108,1111,"/**
 * Calls overloaded method with default value.
 * @param key COSName key to look up
 * @return result from overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String,float)",1121,1124,"/**
 * Retrieves a float value from COSName with a default if not found.
 * @param key the key to look up
 * @param defaultValue the default float value to return if key is not found
 * @return the float value associated with the key or the default value
 */","* This is a convenience method that will get the dictionary object that is expected to be a float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getUserUnit,org.apache.pdfbox.pdmodel.PDPage:getUserUnit(),877,881,"/**
* Retrieves the user unit from the PDF page.
* @return User unit value or default of 1.0 if invalid
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch, or 1 if it hasn't been set. This is supported by PDF 1.6
     * and higher.
     *
     * @return the user unit.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineWidth(),122,125,"/**
 * Retrieves a value from the dictionary using key 'W' and default value 1.
 * @return The retrieved float value or 1 if not found.
 */","* Get the width of the of the guideline in default user space units.
     * The default is 1.
     *
     * @return The width of the guideline.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getOpacity(),815,819,"/**
 * Retrieves the opacity value of an annotation.
 * @return float representing the opacity level
 */","* Get the opacity value.
     *
     * @return The opacity of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontWeight(),337,340,"/**
 * Retrieves font weight value.
 * @return font weight as float
 */","* The weight of the font.  According to the PDF spec ""possible values are
     * 100, 200, 300, 400, 500, 600, 700, 800 or 900""  Where a higher number is
     * more weight and appears to be more bold.
     *
     * @return The font weight.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getItalicAngle(),442,445,"/**
 * Retrieves italic angle from dictionary.
 * @return italic angle as float or default value if not found
 */","* This will get the italic angle for the font.
     *
     * @return The italic angle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAscent(),462,465,"/**
 * Retrieves the ascent value from the dictionary.
 * @return The ascent value as a float, defaulting to 0 if not found.
 */","* This will get the ascent for the font.
     *
     * @return The ascent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getDescent(),482,485,"/**
 * Retrieves descent value from dictionary.
 * @return Descent value as float
 */","* This will get the descent for the font.
     *
     * @return The descent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getLeading(),502,505,"/**
 * Retrieves leading value from dictionary.
 * @return float value of leading or default 0
 */","* This will get the leading for the font.
     *
     * @return The leading.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCapHeight(),522,533,"/**
* Masks and returns the cap height value.
* @return masked cap height as float
*/","* This will get the CapHeight for the font.
     *
     * @return The cap height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getXHeight(),552,563,"/**
* Calculates and returns the masked xHeight value.
* @return masked xHeight as a float
*/","* This will get the x height for the font.
     *
     * @return The x height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemV(),581,584,"/**
 * Retrieves mask value using STEM_V key.
 * @return float value from dictionary or default if not found
 */","* This will get the stemV for the font.
     *
     * @return The stem v value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemH(),601,604,"/**
 * Retrieves stem height from dictionary.
 * @return stem height as float
 */","* This will get the stemH for the font.
     *
     * @return The stem h value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAverageWidth(),621,624,"/**
 * Retrieves average width value from dictionary.
 * @return float value representing average width or default if not found
 */","* This will get the average width for the font.
     *
     * @return The average width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMaxWidth(),641,644,"/**
 * Retrieves maximum width value.
 * @return float representing max width or default value if not set
 */","* This will get the max width for the font.
     *
     * @return The max width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMissingWidth(),681,684,"/**
 * Retrieves missing width value from dictionary.
 * @return missing width as float, default is 0
 */","* This will get the missing width for the font from the /MissingWidth dictionary entry.
     *
     * @return The missing width value, or 0 if there is no such dictionary entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getGamma(),113,116,"/**
 * Retrieves gamma value from dictionary.
 * @return float representing gamma value, default is 1.0
 */","* This will get the gamma value. If none is present then the default of 1
     * will be returned.
     *
     * @return The gamma value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getXStep(),146,149,"/**
 * Calls m2 with COSName.X_STEP and 0 to get a float value.
 * @return float result from m2 method call
 */","* This will return the XStep value.
     * @return The XStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getYStep(),164,167,"/**
 * Retrieves Y step value using COSName.
 * @return float value representing Y step
 */","* This will return the YStep value.
     * @return The YStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getVolume(),97,101,"/**
* Masks audio volume to range [-1, 1].
* @return Clamped volume level
*/","* Sets the volume.
     *
     * @return The volume at which to play the sound, in the range −1.0 to 1.0. Default value: 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineLength(),272,275,"/**
* Retrieves a masked value from PDF content.
* @return float representing the masked value
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineExtensionLength(),292,295,"/**
 * Retrieves mask value using specified parameters.
 * @return float representing the mask value
 */","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineOffsetLength(),312,315,"/**
 * Returns a masked value from m2 method.
 * @return float result of masking operation
 */","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getConstantOpacity(),114,117,"/**
 * Retrieves a masked value from a PDF document.
 * @return float representing the masked value
 */","* This will retrieve the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @return the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getWidth(),124,133,"/**
* Checks condition and returns value.
* @return 0 if condition met, otherwise result of m3 method
*/","* This will retrieve the border width in points, 0 = no border.
     *
     * @return The width of the border in points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDuration(),147,150,"/**
 * Returns a masked value using specific parameters.
 * @return float result from function m2 with COSName.D and integer 1
 */",* @return The duration in seconds of the transition effect or the default 1 if no duration is found.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getFlyScale(),164,167,"/**
 * Retrieves a masked value using specific parameters.
 * @return float result of the masking operation
 */","* @return The starting or ending scale at which the changes shall be drawn or the default 1 if no scale is found.
     * Only for {@link PDTransitionStyle#Fly}.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.contentstream.operator.Operator),81,84,"/**
 * Applies a mask operation using the provided operator.
 * @param op the operator to apply the mask with
 * @throws IOException if an I/O error occurs during processing
 */","*  Writes a single operator token.
     *
     * @param op The operator to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(java.lang.Object),115,129,"/**
* Recursively processes objects, handling COSBase and Operator types.
* @param o object to process
* @throws IOException if unknown type is encountered
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,extractRegions,org.apache.pdfbox.text.PDFTextStripperByArea:extractRegions(org.apache.pdfbox.pdmodel.PDPage),113,130,"/**
* Masks regions on a PDF page.
* @param page PDPage object to mask
* @throws IOException if an I/O error occurs
*/","* Process the page to extract the region text.
     *
     * @param page The page to extract the regions from.
     * @throws IOException If there is an error while extracting text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,internalGetDecodeParams,"org.apache.pdfbox.pdmodel.common.PDStream:internalGetDecodeParams(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",287,317,"/**
 * Masks and retrieves data based on names.
 * @param name1 first COSName key
 * @param name2 second COSName key
 * @return List of objects or null if no valid data found
 * @throws IOException if an I/O error occurs
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getRoleMap(),176,191,"/**
* Retrieves and converts role map dictionary.
* @return Map representation of the role map or empty map if not found
*/","* Returns the role map.
     * 
     * @return the role map",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),162,169,"/**
* Masks an object by processing its content.
* @param objectable the object to be masked
*/","* Appends an objectable kid.
     * 
     * @param objectable the objectable",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertObjectableBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",219,226,"/**
* Updates object with new kid reference.
* @param newKid the new COSObjectable to be added
* @param refKid the reference key for the new kid
*/","* Inserts an objectable kid before a reference kid.
     * 
     * @param newKid the objectable
     * @param refKid the reference kid",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),294,301,"/**
* Checks if an object is masked.
* @param objectable the object to check
* @return true if masked, false otherwise
*/","* Removes an objectable kid.
     * 
     * @param objectable the objectable
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setValue(org.apache.pdfbox.cos.COSBase),94,98,"/**
* Masks a value by setting it in two different locations.
* @param value the COSBase value to mask
*/","* Sets the property value.
     * 
     * @param value the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,validatePerms,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)",318,356,"/**
 * Decrypts and verifies encryption settings.
 * @param encryption PDEncryption object for decryption
 * @param dicPermissions expected dictionary permissions
 * @param encryptMetadata flag indicating metadata encryption requirement
 * @throws IOException on decryption or verification failure
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidthForCID,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidthForCID(int),272,280,"/**
* Retrieves width using mask functions.
* @param cid category identifier
* @return width value, defaulting from secondary method if first is null
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getAverageFontWidth(),326,355,"/**
 * Calculates the average width of characters.
 * @return Average width as a float, or default value if calculation fails.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(),67,70,"/**
 * Retrieves default color space.
 * @throws IOException on I/O error
 * @return PDColorSpace object
 */","* Returns the group color space or null if it isn't defined.
     *
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,create,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:create(org.apache.pdfbox.cos.COSDictionary),40,56,"/**
 * Creates a PDPropertyList based on the dictionary type.
 * @param dict COSDictionary containing properties
 * @return PDPropertyList or subclass based on dictionary type
 */","* Creates a property list from the given dictionary.
     * 
     * @param dict COS dictionary
     * @return a new instance of a PDPropertyList using the given dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineWidth(),222,225,"/**
 * Retrieves line width value.
 * @return Float representing line width or null if not set
 */","* This will get the line width.  This will return null if there is no line width
     *
     * @return null or the LW value of the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getMiterLimit(),283,286,"/**
 * Retrieves value associated with COSName.ML.
 * @return Float value from m1 method
 */","* This will get the miter limit.
     *
     * @return null or the ML value in the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFlatnessTolerance(),458,461,"/**
 * Returns a float value from COSName.
 * @return Float value associated with COSName.FL
 */","* This will get the flatness tolerance.
     *
     * @return The flatness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSmoothnessTolerance(),478,481,"/**
 * Returns a float value using COSName.SM.
 * @return float value from m1 method
 */","* This will get the smothness tolerance.
     *
     * @return The smothness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingAlphaConstant(),518,521,"/**
 * Retrieves mask value using COSName CA.
 * @return Float representation of the mask or null if not found
 */","* This will get the stroking alpha constant.
     *
     * @return The stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingAlphaConstant(),538,541,"/**
 * Retrieves mask value from COSName.
 * @return Float representing the mask value or null if not found
 */","* This will get the non stroking alpha constant.
     *
     * @return The non stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
* Creates a new link annotation from a COS dictionary.
* @param field COS dictionary containing annotation properties
*/","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a new annotation from the given dictionary.
 * @param dict the COSDictionary containing annotation data
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a new PDAnnotationPopup from a COSDictionary.
 * @param field dictionary containing annotation properties
 */","* Creates a popup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnknown.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:<init>(org.apache.pdfbox.cos.COSDictionary),35,38,"/**
* Creates a new unknown annotation from a COS dictionary.
* @param dic dictionary containing annotation data
*/","* Creates an arbitrary annotation from a COSDictionary, expected to be a correct object definition for some sort of
     * annotation.
     *
     * @param dic The dictionary which represents this Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(org.apache.pdfbox.cos.COSDictionary),53,57,"/**
* Creates a new PDAnnotationWidget from a COSDictionary.
* @param field dictionary containing annotation properties
*/","* Creates a PDWidget from a COSDictionary, expected to be a correct object definition for a field in PDF.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsExportValues(),209,212,"/**
 * Returns a list of masked strings.
 * @return List containing masked string values
 */","* This will get the export values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the export value is the 
     * first entry in the two-element array.
     * </p>
     *
     * @return List containing all export values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValue(),432,435,"/**
 * Masks function using COSName.V.
 * @return List of masked strings
 */","* Returns the selected values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getDefaultValue(),443,446,"/**
 * Masks data using COSName.DV.
 * @return List of masked strings
 */","* Returns the default values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSBaseForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSBaseForNewDocument(org.apache.pdfbox.cos.COSBase),105,124,"/**
 * Applies mask to a PDF object.
 * @param base the base PDF object
 * @return masked PDF object or original if not applicable
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSBase),629,635,"/**
 * Writes object to output stream and sets current key.
 * @param obj COSBase object to be processed
 * @throws IOException if I/O error occurs
 */","* This will write a COS object.
     *
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeArray,org.apache.pdfbox.pdfwriter.COSWriter:writeArray(org.apache.pdfbox.cos.COSArray),1154,1165,"/**
* Masks COSArray elements.
* @param array input COSArray to process
* @throws IOException if an I/O error occurs
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeDictionary,org.apache.pdfbox.pdfwriter.COSWriter:writeDictionary(org.apache.pdfbox.cos.COSDictionary),1167,1178,"/**
* Masks COSDictionary based on its state.
* @param dictionary the dictionary to mask
* @throws IOException if an I/O error occurs
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObject(java.io.OutputStream,org.apache.pdfbox.cos.COSBase,boolean)",168,250,"/**
 * Writes a COSBase object to an OutputStream.
 * @param output the OutputStream to write to
 * @param object the COSBase object to write
 * @param topLevel indicates if it's the top-level object
 * @throws IOException if an I/O error occurs
 */","* This method prepares and writes COS data to the object stream by selecting appropriate specialized methods for
     * the content.
     *
     * @param output The stream, that shall be written to.
     * @param object The content, that shall be written.
     * @param topLevel True, if the currently written object is a top level entry of this object stream.
     * @throws IOException Shall be thrown, when an exception occurred for the write operation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addCornerCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addCornerCurl(double,double,double,double,double,double,double,boolean)",428,439,"/**
 * Calculates and processes arc segments for SVG path.
 * @param anglePrev previous angle
 * @param angleCur current angle
 * @param radius circle radius
 * @param cx center x-coordinate
 * @param cy center y-coordinate
 * @param alpha angular offset
 * @param alphaPrev previous angular offset
 * @param addMoveTo flag to add move-to command
 * @throws IOException if an I/O error occurs
 */",* Creates a corner curl for polygons and ellipses.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,drawBasicEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:drawBasicEllipse(double,double,double,double)",1000,1008,"/**
* Draws an ellipse within specified bounds.
* @param left x-coordinate of the left boundary
* @param bottom y-coordinate of the bottom boundary
* @param right x-coordinate of the right boundary
* @param top y-coordinate of the top boundary
*/",* Draws an ellipse without a cloudy border effect.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,preparePredictorPDImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",566,620,"/**
* Creates a masked image from byte data.
* @param stream contains image pixel data
* @param bitsPerComponent number of bits per color component
* @return PDImageXObject with applied mask
* @throws IOException if an I/O error occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(),42,47,"/**
* Initializes a new PDPageFitDestination.
* Grows array to size 2 and sets name at index 1.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:setFitBoundingBox(boolean),74,85,"/**
* Adjusts array based on bounding box fitting.
* @param fitBoundingBox flag to determine adjustment type
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(),42,47,"/**
* Initializes a PDPageFitHeightDestination.
* Sets up an array and names the second element.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setLeft(int),75,86,"/**
* Calls methods on array based on input value.
* @param x control parameter to determine method calls
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setFitBoundingBox(boolean),103,114,"/**
* Adjusts array based on bounding box requirement.
* @param fitBoundingBox flag to determine adjustment type
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(),38,43,"/**
* Initializes a PDPageFitRectangleDestination with specific settings.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setLeft(int),71,82,"/**
* Calls methods on array based on input.
* @param x input value determining method call
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setBottom(int),100,111,"/**
* Masks array elements based on input.
* @param y control value for masking logic
*/","* Set the bottom y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The bottom y coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setRight(int),129,140,"/**
* Masks an integer value using array methods.
* @param x the integer to mask or special value -1
*/","* Set the right x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The right x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setTop(int),159,170,"/**
 * Calls methods on an array based on input.
 * @param y value to determine method call
 */","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(),43,48,"/**
* Initializes a new PDPageFitWidthDestination.
* Sets up an internal array and assigns a type name.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setTop(int),77,88,"/**
* Calls methods on array based on input value.
* @param y input value to determine method call
*/","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setFitBoundingBox(boolean),105,116,"/**
* Applies mask to array with optional bounding box.
* @param fitBoundingBox flag to apply bounding box constraint
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(),42,46,"/**
* Initializes a new PDPageXYZDestination.
* Sets up an internal array and names it.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setLeft(int),74,85,"/**
* Masks an integer value using array methods.
* @param x the integer to mask or special value -1
*/","* Set the left x-coordinate, values 0 or -1 imply that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setTop(int),103,114,"/**
* Calls methods on array based on input value.
* @param y determines which method to call on array
*/","* Set the top y-coordinate, values 0 or -1 imply that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setZoom(float),137,148,"/**
* Applies mask with specified zoom level.
* @param zoom scaling factor for masking
*/","* Set the zoom value for the page, values 0 or -1 imply that the current zoom
     * will be used.
     * @param zoom The zoom value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryValue,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryValue(),222,261,"/**
* Parses and validates a PDF object mask.
* @return COSBase object or null if invalid
*/","* This will parse a PDF dictionary value.
     *
     * @return The parsed Dictionary object.
     *
     * @throws IOException If there is an error parsing the dictionary object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNote,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNote(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",194,217,"/**
* Applies a mask to a text annotation's appearance.
* @param annotation the PDF annotation to modify
* @param contentStream stream for drawing on the annotation
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawInsert,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawInsert(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",263,276,"/**
 * Masks annotation text with a rectangle.
 * @param annotation PDF annotation to mask
 * @param contentStream stream for drawing content
 * @throws IOException if an I/O error occurs
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",416,434,"/**
* Applies masking to a text annotation.
* @param annotation the PDAnnotationText to mask
* @param contentStream the PDAppearanceContentStream for rendering
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpLeftArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",436,456,"/**
* Applies mask effects to a text annotation.
* @param annotation the PDF text annotation to modify
* @param contentStream the appearance content stream for rendering
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawKey,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawKey(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",549,590,"/**
* Applies a mask to a text annotation.
* @param annotation the PDF text annotation to mask
* @param contentStream the appearance content stream for rendering
* @throws IOException if an I/O error occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveBoundingBox,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",1028,1037,"/**
* Retrieves the bounding box for a widget's appearance.
* @param fieldWidget annotation widget associated with the field
* @param appearanceStream appearance stream of the widget
* @return PDRectangle representing the widget's bounds
*/","* Resolve the bounding box.
     * 
     * @param fieldWidget the annotation widget.
     * @param appearanceStream the annotations appearance stream.
     * @return the resolved boundingBox.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptDictionary,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",594,621,"/**
 * Masks sensitive data in a PDF dictionary.
 * @param dictionary the PDF dictionary to process
 * @param objNum object number of the dictionary
 * @param genNum generation number of the dictionary
 * @throws IOException if an I/O error occurs
 */","* This will decrypt a dictionary.
     *
     * @param dictionary The dictionary to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error creating a new string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,setBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),857,864,"/**
* Updates bounding box in PDF.
* @param bbox new bounding rectangle
*/","* Sets the bounding box.
     * 
     * @param bbox the bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setColor,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",425,431,"/**
 * Masks a gamma value by name.
 * @param name the key for the gamma value
 * @param value PDGamma object to be set
 */","* Sets a colour.
     * 
     * @param name the attribute name
     * @param value the colour",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setFourColors,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",439,445,"/**
 * Updates a color setting in the PDF document.
 * @param name the name of the color setting
 * @param value the new color value to set
 */","* Sets four colours.
     * 
     * @param name the attribute name
     * @param value the four colours",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(),82,85,"/**
* Constructs a new PDPage with LETTER size.
*/","* Creates a new PDPage instance for embedding, with a size of U.S. Letter (8.5 x 11 inches).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createPage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),67,74,"/**
* Creates a PDF page with specified dimensions.
* @param properties contains page size parameters
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:initFringe(org.w3c.dom.Element),79,96,"/**
 * Processes 'fringe' attribute of an element.
 * @param element the Element to process
 * @throws IOException if 'fringe' has incorrect format
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:initFringe(org.w3c.dom.Element),81,98,"/**
* Processes 'fringe' attribute to set rectangle dimensions.
* @param element XML element containing 'fringe' attribute
* @throws IOException if 'fringe' has invalid format or value count
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initFringe(org.w3c.dom.Element),102,119,"/**
* Processes 'fringe' attribute to set rectangle dimensions.
* @param element XML element containing 'fringe' attribute
* @throws IOException if 'fringe' format is incorrect
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:initFringe(org.w3c.dom.Element),82,99,"/**
* Processes 'fringe' attribute to set rectangle dimensions.
* @param element XML element containing 'fringe' attribute
* @throws IOException if 'fringe' has incorrect format or value count
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getFDF(),116,130,"/**
* Retrieves or creates an FDF dictionary.
* @return FDFDictionary object from catalog or a new one if not present
*/","* This will get the FDF dictionary.
     *
     * @return The FDF dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(),60,73,"/**
* Constructs a new FDFDocument with default settings.
*/","* Constructor, creates a new FDF document.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,getCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:getCatalog(),139,154,"/**
* Creates or retrieves the FDF catalog.
* @return FDFCatalog object initialized from document's root or a new one if not present
*/","* This will get the FDF Catalog. This is guaranteed to not return null.
     *
     * @return The documents /Root dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getFractionalSpaceToAllocate(),151,167,"/**
* Returns a PDRange based on fit's A value.
* @return PDRange object, defaulting to 0.5 if A is null
*/","* This is guaranteed to never return null.<br>
     *
     * To quote the PDF Spec ""An array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to
     * allocate at the left and bottom of the icon. A value of [0.0 0.0] positions the icon at the bottom-left corner of
     * the annotation rectangle; a value of [0.5 0.5] centers it within the rectangle. This entry is used only if the
     * icon is scaled proportionally. Default value: [0.5 0.5].""
     *
     * @return The fractional space to allocate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDSet,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDSet(java.util.TreeMap),260,274,"/**
* Creates a bitmask for CID mapping and sets it in the font descriptor.
* @param cidToGid map of CID to GID
* @throws IOException if an I/O error occurs
*/","* Builds the CIDSet entry, required by PDF/A. This lists all CIDs in the font, including those
     * that don't have a GID.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(),59,68,"/**
* Constructs a new tiling pattern.
* Initializes the COSStream and sets necessary attributes.
*/",* Creates a new tiling pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareNonVisibleSignature,org.apache.pdfbox.pdmodel.PDDocument:prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),542,555,"/**
 * Masks the widget with an empty rectangle.
 * @param firstWidget the annotation widget to mask
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAppearanceDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",235,249,"```java
/**
* Masks a signature field in a PDF form.
* @param holderForml the form containing the signature field
* @param signatureField the signature field to be masked
*/
```",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingBefore,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),102,120,"/**
* Masks a new sibling outline item.
* @param newSibling the new outline item to be added as a sibling
*/","* Insert a single sibling before this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingAfter,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),75,93,"/**
* Adds a sibling to the outline tree.
* @param newSibling the new sibling item to add
*/","* Insert a single sibling after this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),105,112,"/**
 * Calls methods on bead and thread.
 * @param bead PDThreadBead object to process
 */","* This will set the first bead in the thread.  When this is set it will
     * also set the thread property of the bead object.
     *
     * @param bead The first bead in the thread.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(),52,58,"/**
* Initializes a PDThreadBead with default properties.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setRoleMap(java.util.Map),198,203,"/**
* Updates document's role map with provided data.
* @param roleMap mapping of roles to values
*/","* Sets the role map.
     * 
     * @param roleMap the role map",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setName(java.lang.String,java.lang.String)",198,204,"/**
* Updates a named value and logs the change.
* @param name key of the value to update
* @param value new value to set
*/","* Sets a name value.
     * 
     * @param name the attribute name
     * @param value the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setRenderingIntent(java.lang.String),352,355,"/**
 * Masks input string with ""RI"" key.
 * @param ri input string to be masked
 */","* This will set the rendering intent for the graphics state.
     *
     * @param ri The new rendering intent",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,setN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:setN(java.lang.String),64,67,"/**
* Masks a given name by calling an action method.
* @param name the name to be masked
*/","* This will set the name of the action to be performed.
     *
     * @param name The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setStyle(java.lang.String),101,104,"/**
 * Calls m2 with ""S"" and input string.
 * @param s input string to be processed
 */","* This will set the border effect, see the STYLE_* constants for valid values.
     *
     * @param s the border effect to use",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument),62,69,"/**
* Initializes page labels for a document.
* @param document PDDocument to which labels are applied
*/","* Creates an empty page label dictionary for the given document.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",53,58,"/**
 * Constructs a PDStructureElement with a specified type and parent node.
 * @param structureType type of the structure element
 * @param parent parent PDStructureNode
 */","* Constructor with required values.
     *
     * @param structureType The structure type. Constants are available in the
     * {@link StandardStructureTypes} class.
     * @param parent The parent structure node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(),57,60,"/**
 * Constructs a new PDStructureTreeRoot.
 * Initializes with a specific type.
 */","* Default Constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(),38,41,"/**
* Initializes a new shading pattern.
* Sets the pattern type to shading pattern in the COS object.
*/",* Creates a new shading pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(),50,54,"/**
* Initializes a new PDAction with a default dictionary and type.
*/",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDocumentOutline(),196,200,"/**
 * Retrieves document outline.
 * @return PDDocumentOutline object or null if not found
 */","* Get the outline associated with this document or null if it does not exist.
     *
     * @return The document's outline.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getParent(),53,65,"/**
* Creates a PDOutlineNode based on parent dictionary.
* @return PDOutlineNode or null if no valid parent found
*/",* @return The parent of this node or null if there is no parent.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(),38,41,"/**
* Initializes a new PDRectlinearMeasureDictionary with default subtype.
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(),39,42,"/**
 * Constructs a PDTransition with default style R.
 */","* creates a new transition with default ""replace"" style {@link PDTransitionStyle#R}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(java.lang.String,java.util.Calendar)",316,319,"/**
 * Calls overloaded method with COSName instance.
 * @param key string key to convert to COSName
 * @param date calendar date to pass
 */","* Set the value of a date entry in the dictionary.
     *
     * @param key The key to the date value.
     * @param date The date value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",339,351,"/**
* Updates dictionary with a key-date pair.
* @param embedded the embedded COSName
* @param key the key to update in the dictionary
* @param date the date value to set
*/","* Set the date object.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the date.
     * @param date The date to set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreationDate(java.util.Calendar),220,223,"/**
 * Sets the creation date in the document information.
 * @param date Calendar object representing the creation date
 */","* This will set the creation date of the document.
     *
     * @param date The new creation date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setModificationDate(java.util.Calendar),240,243,"/**
 * Sets the modification date in the info dictionary.
 * @param date Calendar object representing the modification date
 */","* This will set the modification date of the document.
     *
     * @param date The new modification date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setCreationDate(java.util.Calendar),795,798,"/**
 * Sets the creation date annotation.
 * @param date Calendar object representing the creation date
 */","* Set the creation date.
     *
     * @param date The date the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.util.Calendar),650,653,"/**
 * Masks calendar date using COSName.M.
 * @param c Calendar instance to be masked
 */","* This will set the date and time the annotation was modified.
     *
     * @param c the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setCreationDate(java.util.Calendar),176,179,"/**
 * Sets the creation date in the document metadata.
 * @param creationDate the Calendar object representing the creation date
 */","* This will set the date and time the annotation was created.
     *
     * @param creationDate the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSignDate(java.util.Calendar),195,198,"/**
 * Masks calendar date using dictionary.
 * @param cal Calendar instance to be masked
 */","* Set the sign date.
     *
     * @param cal the date to be used as sign date",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCustomMetadataValue,"org.apache.pdfbox.pdmodel.PDDocumentInformation:setCustomMetadataValue(java.lang.String,java.lang.String)",291,294,"/**
 * Masks a field in an info record.
 * @param fieldName name of the field to mask
 * @param fieldValue value of the field to mask
 */","* Set the custom metadata value.
     *
     * @param fieldName The name of the custom metadata field.
     * @param fieldValue The value to the custom metadata field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setString(java.lang.String,java.lang.String)",89,95,"/**
* Updates a property value and notifies of change.
* @param name property name
* @param value new property value
*/","* Sets a string attribute value.
     * 
     * @param name the attribute name
     * @param value the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,setBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:setBase(java.lang.String),85,88,"/**
 * Calls m2 with ""Base"" and base parameter.
 * @param base string to be passed to m2
 */","* This will set the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @param base The base URI to be used.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setVersion(java.lang.String),119,122,"/**
 * Masks application version.
 * @param applicationVersion version string to mask
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     * <p>
     * NOTE: Version value is specific for build data dictionary when used as the <code>App</code>
     * dictionary in a build properties dictionary.
     * </p>
     *
     * @param applicationVersion the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setUnits(java.lang.String),119,122,"/**
 * Masks units by calling nested methods.
 * @param units string representing units to be masked
 */","* This will set the label for the units.
     * 
     * @param units the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFractionalDisplay(java.lang.String),160,174,"/**
* Masks fractional display value.
* @param fractionalDisplay fractional display type (""D"", ""F"", ""R"", ""T"", or null)
*/","* This will set the value for the manner to display a fractional value.
     * Allowed values are ""D"", ""F"", ""R"", ""T"" and null.
     * 
     * @param fractionalDisplay the manner to display a fractional value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setThousandsSeparator(java.lang.String),231,234,"/**
 * Sets thousands separator for formatting.
 * @param thousandsSeparator character used as thousands separator
 */","* This will set the text to be used between orders of thousands in display of numerical values.
     * 
     * @param thousandsSeparator thousands separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDecimalSeparator(java.lang.String),251,254,"/**
 * Masks function with specified decimal separator.
 * @param decimalSeparator character used as decimal point
 */","* This will set the text to be used as the decimal point in displaying numerical values.
     * 
     * @param decimalSeparator decimal separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPrefixString(java.lang.String),269,272,"/**
 * Masks a function with a given label prefix.
 * @param labelPrefixString prefix for labeling the masked function
 */","* This will set the text to be concatenated to the left of the label specified by U.
     * @param labelPrefixString label prefix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelSuffixString(java.lang.String),289,292,"/**
 * Calls method m2 with specific parameters.
 * @param labelSuffixString suffix to be appended to label
 */","* This will set the text to be concatenated after the label specified by U.
     * 
     * @param labelSuffixString label suffix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPositionToValue(java.lang.String),310,322,"/**
* Processes a label position value.
* @param labelPositionToValue the label position to process
*/","* This will set the value indicating the ordering of the label specified by U to the calculated
     * unit value. Possible values are ""S"", ""P"" and null.
     *
     * @param labelPositionToValue label position",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.w3c.dom.Element),75,108,"/**
* Constructs an FDFField from XML.
* @param fieldXML XML element representing the field
* @throws IOException if XML processing fails
*/","* This will create an FDF field from an XFDF XML document.
     *
     * @param fieldXML The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:exportFDF(),141,152,"/**
* Creates and configures an FDFField.
* @return configured FDFField object
* @throws IOException if I/O error occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(java.lang.String),33,37,"/**
* Creates a new optional content group with a specified name.
* @param name the name of the content group
*/","* Creates a new optional content group (OCG).
     * @param name the name of the content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setInteger(java.lang.String,int)",264,270,"/**
* Updates a field with a new integer value and logs the change.
* @param name the name of the field to update
* @param value the new integer value for the field
*/","* Sets an integer.
     * 
     * @param name the attribute name
     * @param value the integer",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,int)",350,356,"/**
 * Masks a field by setting its value.
 * @param name field name to mask
 * @param value new masked value to set
 */","* Sets an integer number.
     * 
     * @param name the attribute name
     * @param value the integer number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDenominator(int),191,194,"/**
 * Masks a value using a given denominator.
 * @param denominator the divisor used for masking
 */","* This will set the precision or denominator of a fractional amount.
     * 
     * @param denominator the precision or denominator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",60,91,"/**
* Converts BufferedImage to PDImageXObject for masking.
* @param document PDDocument instance
* @param image 1-bit black and white BufferedImage
* @return PDImageXObject for use in PDF
* @throws IOException if conversion fails
*/","* Creates a new CCITT group 4 (T6) compressed image XObject from a b/w BufferedImage. This
     * compression technique usually results in smaller images than those produced by {@link LosslessFactory#createFromImage(PDDocument, BufferedImage)
     * }.
     *
     * @param document the document to create the image as part of.
     * @param image the image.
     * @return a new image XObject.
     * @throws IOException if there is an error creating the image.
     * @throws IllegalArgumentException if the BufferedImage is not a b/w image.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits for each color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits for each color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate.
* @param bitsPerCoordinate number of bits for each coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate.
* @param bitsPerCoordinate number of bits for each coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,float)",336,342,"/**
 * Updates a named value and compares the old and new base values.
 * @param name the name of the value to update
 * @param value the new float value to set
 */","* Sets a float number.
     * 
     * @param name the attribute name
     * @param value the float number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setIntensity(float),81,84,"/**
 * Calls m2 with ""I"" and float value.
 * @param i float value to pass to m2
 */","* This will set the intensity of the applied effect.
     *
     * @param i the intensity of the effect values 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setConversionFactor(float),139,142,"/**
 * Applies a conversion factor to adjust settings.
 * @param conversionFactor scaling factor for adjustments
 */","* This will set the conversion factor.
     * 
     * @param conversionFactor the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseArrayElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseArrayElement(org.w3c.dom.Element),285,355,"/**
* Parses an XML element into a COSArray.
* @param arrayEl the XML element to parse
* @return COSArray containing parsed elements
* @throws IOException if required coordinates are missing
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFile,org.apache.pdfbox.pdmodel.common.PDStream:getFile(),337,341,"/**
 * Retrieves file specification from PDF stream.
 * @return PDFileSpecification object or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the file specification for this stream. This is only
     * required for external files.
     * 
     * @return The file specification.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFile(),285,288,"/**
 * Retrieves file specification from FDF document.
 * @return PDFileSpecification object or null if not found
 * @throws IOException if an I/O error occurs
 */","* The source file or target file: the PDF document file that this FDF file was exported from or is intended to be
     * imported into.
     *
     * @return The F entry of the FDF dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEmbeddedFDFs(),512,526,"/**
* Retrieves embedded PDF file specifications.
* @return List of PDFileSpecification objects or null if none embedded
*/","* This will get the list of embedded FDF entries, or null if the entry is null. This will return a list of
     * PDFileSpecification objects.
     *
     * @return A list of embedded FDF files.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getFileSpecification(),91,94,"/**
 * Retrieves file specification with mask applied.
 * @return PDFileSpecification object
 * @throws IOException if an I/O error occurs
 */","* This will get the file specification of this reference. An optional parameter.
     *
     * @return The F entry for this dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getFile(),108,111,"/**
 * Creates a file specification for masking.
 * @return PDFileSpecification object for masking
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific embedded go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:getFile(),61,64,"/**
 * Creates a file specification for an action.
 * @return PDFileSpecification object
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getFile(),70,73,"/**
 * Creates a file specification with a mask.
 * @return PDFileSpecification object
 * @throws IOException if an I/O error occurs
 */","* This will get the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @return The F entry of the specific launch action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getFile(),66,69,"/**
 * Retrieves file specification from action.
 * @return PDFileSpecification object or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific remote go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFile(),64,67,"/**
 * Retrieves file specification from action.
 * @return PDFileSpecification object or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getFile(),82,85,"/**
 * Retrieves file specification from action.
 * @return PDFileSpecification object or null if not found
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific thread action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getFile(),84,87,"/**
 * Creates a file specification with a mask.
 * @return PDFileSpecification object representing masked file
 * @throws IOException if an I/O error occurs
 */","* Return the attached file.
     *
     * @return The attached file.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(),40,44,"/**
 * Creates a new highlight annotation.
 * Sets the subtype to ""Highlight"".
 */",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(),40,44,"/**
* Constructs a new squiggly annotation.
* Initializes the annotation with the subtype ""Squiggly"".
*/",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(),40,44,"/**
 * Creates a new strike-out annotation.
 * Initializes the annotation with the subtype ""StrikeOut"".
 */",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(),40,44,"/**
 * Creates an underline annotation.
 * Sets the subtype to ""underline"".
 */",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(),39,42,"/**
* Constructs a new PDAnnotationCaret.
* Sets the subtype to ""Caret"" in the COS object.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(),62,65,"/**
 * Creates a new file attachment annotation.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(),56,59,"/**
* Creates a new free text annotation.
* Initializes the COS object with subtype ""FreeText"".
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(),43,46,"/**
 * Creates a new ink annotation.
 * Initializes the subtype to ""Ink"".
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(),113,118,"/**
* Initializes a new PDAnnotationLine with default values.
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(),43,46,"/**
 * Creates a new polygon annotation.
 * Sets the subtype to ""Polygon"".
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(),42,45,"/**
 * Creates a new polyline annotation.
 * Initializes the COS object with the subtype ""PolyLine"".
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(),99,102,"/**
 * Creates a new rubber stamp annotation.
 * Initializes the COS object with the subtype ""RubberStamp"".
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(),37,40,"/**
 * Creates a new sound annotation.
 * Sets the subtype to ""Sound"".
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(java.lang.String),39,42,"/**
 * Creates a new square or circle annotation.
 * @param subType subtype of the annotation (""Square"" or ""Circle"")
 */","* Creates a Circle or Square annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(),126,129,"/**
* Creates a new text annotation.
* Initializes the COS object with the subtype set to ""Text"".
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(java.lang.String),36,42,"/**
* Creates a text markup annotation.
* @param subType specific type of text markup (e.g., ""Highlight"")
*/","* Creates a TextMarkup annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignSignatureRectangle,"org.apache.pdfbox.pdmodel.PDDocument:assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",600,612,"/**
* Updates widget rectangle if not properly set.
* @param firstWidget annotation widget to update
* @param annotDict dictionary containing annotation properties
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getBBox(),55,59,"/**
* Retrieves the bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* Gets the artifact's bounding box (BBox).
     * 
     * @return the artifact's bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:getBBox(),841,850,"/**
* Retrieves the bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* Gets the bounding box.
     * 
     * @return the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRectangle(),732,736,"/**
* Retrieves rectangle from annotation.
* @return PDRectangle object or null if not found
*/","* The rectangle associated with this annotation.
     *
     * @return The annotation rectangle.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getFringe(),115,119,"/**
* Retrieves the rectangle defining the annotation's boundary.
* @return PDRectangle object or null if not found
*/","* This will retrieve the fringe. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getFringe(),152,156,"/**
* Retrieves mask rectangle from annotation.
* @return PDRectangle object or null if not found
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getFringe(),271,275,"/**
* Retrieves annotation's rectangle bounds.
* @return PDRectangle object or null if not found
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where
     * the drawing occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getFringe(),153,157,"/**
* Retrieves the masking rectangle of an annotation.
* @return PDRectangle object representing the mask or null if not set
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontBoundingBox(),411,420,"/**
* Retrieves the font bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* This will get the fonts bounding box.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBBox(),308,312,"/**
* Retrieves font bounding box.
* @return PDRectangle representing the font's bounding box or null if not available
*/","* This will get the fonts bounding box from its dictionary.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getBBox(),208,213,"/**
* Retrieves the bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges, respectively,
     * of the form XObject's bounding box.
     * These boundaries are used to clip the form XObject and to determine its size for caching.
     * @return The BBox of the form.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getBBox(),221,226,"/**
* Retrieves mask bounding box.
* @return PDRectangle object or null if not found
*/","* An array of four numbers in the form coordinate system (see
     * below), giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the pattern's bounding box.
     *
     * @return The BBox of the pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBBox(),169,180,"/**
 * Retrieves the bounding box rectangle.
 * @return PDRectangle object representing the bounding box or null if not set
 */","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the shading's bounding box.
     *
     * @return the BBox of the form",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getRectangle(),256,275,"/**
* Retrieves the rectangle from PDF dictionary.
* @return PDRectangle object or null if invalid or missing
*/","* The annotation rectangle, defining the location of the annotation on the page in default user space units. This
     * is usually required and should not return null on valid PDF documents. But where this is a parent form field with
     * children, such as radio button collections then the rectangle will be null.
     * 
     * @return The Rect value of this annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifference(),279,283,"/**
* Retrieves rectangle difference as a PDRectangle.
* @return PDRectangle object or null if not found
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifference(),122,126,"/**
* Retrieves mask rectangle from PDF.
* @return PDRectangle object or null if not found
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getBBox(),84,88,"/**
* Retrieves bounding box rectangle.
* @return PDRectangle object or null if not available
*/","* This will retrieve the rectangle specifying the location of the viewport.
     * 
     * @return the location",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getRectangle(),179,183,"/**
* Retrieves the mask rectangle from a PDF bead.
* @return PDRectangle object or null if no mask is present
*/","* The rectangle on the page that this bead is part of.
     *
     * @return The part of the page that this bead covers.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setLineDashPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:setLineDashPattern(org.apache.pdfbox.cos.COSArray,int)",1080,1084,"/**
* Creates and sets a line dash pattern.
* @param array COSArray containing dash lengths
* @param phase offset for the dash pattern
*/","* @param array dash array
     * @param phase dash phase",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getLineDashPattern(),167,178,"/**
* Creates or retrieves a line dash pattern.
* @return PDLineDashPattern object with default settings
*/","* Get the line dash pattern for this box style.  This is guaranteed to not
     * return null.  The default is [3],0.
     *
     * @return The line dash pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineDashPattern(),303,317,"/**
* Creates a line dash pattern from dictionary.
* @return PDLineDashPattern object or null if not valid
*/","* This will get the dash pattern.
     *
     * @return null or the D value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getDashStyle(),170,180,"/**
* Creates or retrieves line dash pattern.
* @return PDLineDashPattern object with default settings
*/","* This will retrieve the dash style used for drawing the border.
     *
     * @return the dash style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getStencilImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",61,125,"/**
* Applies a mask to an image using a specified paint.
* @param pdImage the source image to mask
* @param paint the color or pattern to apply as a mask
* @return BufferedImage with applied mask
* @throws IOException if there is an issue reading the image data
*/","* Returns an ARGB image filled with the given paint and using the given image as a mask.
     * @param paint the paint to fill the visible portions of the image with
     * @return a masked image filled with the given paint
     * @throws IOException if the image cannot be read
     * @throws IllegalStateException if the image is not a stencil.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,readRasterFromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:readRasterFromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)",263,357,"/**
 * Masks image data from PDImage to WritableRaster.
 * @param pdImage source image object
 * @param raster destination writable raster
 * @throws IOException if I/O error occurs
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from1Bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",359,458,"/**
* Creates a masked BufferedImage from a PDF image.
* @param pdImage source PDF image
* @param clipped clipping rectangle
* @param subsampling subsampling factor
* @param width target width
* @param height target height
* @return BufferedImage with applied mask or null if error
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,fromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",554,703,"/**
 * Applies a mask to an image based on color key and subsampling.
 * @param pdImage the source PDF image
 * @param raster the target writable raster for output
 * @param colorKey the color key array defining masking ranges
 * @param clipped the clipping rectangle for processing
 * @param subsampling the subsampling factor
 * @param width the width of the image
 * @param height the height of the image
 * @return a BufferedImage with applied mask or null if issues occur
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(java.awt.image.WritableRaster),193,281,"/**
* Converts raster to RGB image with colorant processing.
* @param raster input WritableRaster object
* @return BufferedImage in RGB format
* @throws IOException if conversion fails
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getDefaultDecode(int),454,464,"/**
* Generates a mask array based on bits per component.
* @param bitsPerComponent number of bits per color component
* @return float array representing the mask
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontMatrix(),254,264,"/**
* Returns the font matrix.
* @return Font matrix as a Matrix object
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getMatrix(),235,239,"/**
 * Applies mask transformation to matrix.
 * @return transformed Matrix object
 */","* This will get the optional matrix of an XObjectForm. It maps the form space to user space.
     * @return the form matrix if available, or the identity matrix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getMatrix(),134,137,"/**
 * Creates a masked matrix.
 * @return Masked Matrix object
 */","* Returns the pattern matrix, or the identity matrix is none is available.
     * 
     * @return the pattern matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getMatrix(),56,59,"/**
 * Creates a masked matrix.
 * @return Masked Matrix object
 */","* This will get the optional Matrix of a function based shading.
     *
     * @return the matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,setAttribute,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",102,107,"/**
* Updates attribute value and handles changes.
* @param attrName name of the attribute to update
* @param attrValue new value for the attribute
*/","* Sets an attribute.
     * 
     * @param attrName the attribute name
     * @param attrValue the attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getInheritableAttribute,"org.apache.pdfbox.pdmodel.PDPageTree:getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",108,122,"/**
* Recursively retrieves value from dictionary by key.
* @param node starting dictionary node
* @param key key to search for
* @return COSBase value or null if not found
*/","* Returns the given attribute, inheriting from parent tree nodes if necessary.
     *
     * @param node page object
     * @param key the key to look up
     * @return COS value for the given key",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,findFieldType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:findFieldType(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",132,147,"/**
* Recursively retrieves field type from dictionary.
* @param dic dictionary to search
* @param seen set of dictionaries already processed
* @return field type or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,boolean)",895,898,"/**
 * Calls overloaded method with null default value.
 * @param key unique identifier for the COSName
 * @param defaultValue boolean to use if not found
 * @return result of the overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getInterpolate(),229,233,"/**
 * Checks if mask interpolation is enabled.
 * @return true if interpolation is enabled, false otherwise
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,isStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:isStencil(),284,288,"/**
 * Checks if an image mask is present.
 * @return true if image mask exists, false otherwise
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,int)",994,997,"/**
 * Calls overloaded method with default value.
 * @param key unique key identifier
 * @param defaultValue value to return if not found
 * @return result of the overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the defaultvalue will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1007,1010,"/**
* Calls overloaded method with default value.
* @param firstKey first key parameter
* @param secondKey second key parameter
* @return result of the overloaded method
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value -1 will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getHeight(),205,209,"/**
 * Retrieves mask value using specified parameters.
 * @return integer mask value or default if not found
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getWidth(),217,221,"/**
 * Retrieves mask value using specified parameters.
 * @return integer value of the mask
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:<init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",68,103,"/**
* Initializes an inline image with given parameters, data, and resources.
* @param parameters dictionary containing image parameters
* @param data raw image data bytes
* @param resources PDF resources associated with the image
* @throws IOException if decoding fails
*/","* Creates an inline image from the given parameters and data.
     *
     * @param parameters the image parameters
     * @param data the image data
     * @param resources the current resources
     * @throws IOException if the stream cannot be decoded",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(java.util.List),309,329,"/**
* Applies filters to input data.
* @param stopFilters list of filters to stop processing on match
* @return filtered InputStream
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getSuffix(),386,407,"/**
* Determines image format based on filter list.
* @return Image format as a string (""jpg"", ""tiff"", or ""png"")
*/","* Returns the suffix for this image type, e.g. jpg/png.
     *
     * @return The image suffix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",252,265,"/**
* Fetches COSObjects of specified types from XRef table.
* @param type1 first COSName to filter by
* @param type2 second COSName to filter by
* @return list of COSObjects matching the types
*/","* This will get all dictionaries objects by type.
     *
     * @param type1 The first possible type of the object, mandatory.
     * @param type2 The second possible type of the object, usually an abbreviation, optional.
     *
     * @return This will return all objects with the specified type(s).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary),382,450,"/**
* Searches PDF for trailer dictionary and updates provided COSDictionary.
* @param trailer target dictionary to update
* @return true if successful, false otherwise
*/","* Brute force search for all trailer marker.
     * 
     * @param trailer dictionary to be used as trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchForTrailerItems,org.apache.pdfbox.pdfparser.BruteForceParser:searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary),460,497,"/**
* Masks PDF objects by updating trailer dictionary.
* @param trailer PDF document trailer
* @return true if root object is set, false otherwise
*/","* Search for the different parts of the trailer dictionary.
     *
     * @param trailer dictionary to be used as trailer dictionary
     * @return true if the root was found, false if not.
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPages,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPages(),164,168,"/**
 * Returns a PDPageTree representing the pages of the document.
 * @return PDPageTree object containing document pages
 */","* Returns all pages in the document, as a page tree.
     * 
     * @return PDPageTree providing all pages of the document",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary),68,71,"/**
 * Constructs a PDPageTree from a COSDictionary.
 * @param root the root dictionary of the page tree
 */","* Constructor for reading.
     *
     * @param root A page tree root.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,next,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:next(),230,243,"/**
 * Creates a new PDPage from the queue.
 * @throws NoSuchElementException if condition fails in m1()
 * @return PDPage object created from COSDictionary and ResourceCache
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",448,451,"/**
 * Calls another overloaded method with the same name.
 * @param code an integer code
 * @param customGlyphList a list of glyphs (unused)
 * @return result from the other method
 */","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @param customGlyphList a custom glyph list to use instead of the Adobe Glyph List
     * @return Unicode character(s)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",276,331,"/**
* Retrieves Unicode character from glyph list.
* @param code character code
* @param customGlyphList custom glyph list to use
* @return Unicode string or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getGroup,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getGroup(),149,165,"/**
* Retrieves the transparency group.
* @return PDTransparencyGroup object or null if not found
*/","* Returns the G entry of the soft mask object
     * 
     * @return form containing the transparency group
     * @throws IOException if the group could not be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacSubtype(java.lang.String),190,202,"/**
* Sets MAC subtype in PDF parameters.
* @param macSubtype the MAC subtype to set
*/","* Set the mac subtype.
     *
     * @param macSubtype The mac subtype.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacCreator(java.lang.String),220,232,"/**
* Sets MAC creator in document parameters.
* @param macCreator MAC creator identifier
*/","* Set the mac Creator.
     *
     * @param macCreator The mac Creator.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacResFork(java.lang.String),250,262,"/**
* Sets MAC resource fork parameter.
* @param macResFork resource fork value for MAC
*/","* Set the mac ResFork.
     *
     * @param macResFork The mac ResFork.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,isEncrypted,org.apache.pdfbox.pdmodel.PDDocument:isEncrypted(),812,815,"/**
 * Checks if the document is valid.
 * @return true if the document is valid, false otherwise
 */","* This will tell if this document is encrypted or not.
     * 
     * @return true If this document is encrypted.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,parse,org.apache.pdfbox.pdfparser.FDFParser:parse(),66,88,"/**
* Creates and returns a new FDFDocument.
* @throws IOException if header doesn't contain version info or other I/O errors occur
*/","* This will parse the stream and populate the FDFDocument object.
     *
     * @return the parsed FDFDocument
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(boolean),149,186,"/**
 * Parses a PDF document with optional lenient error handling.
 * @param lenient true to ignore missing version info, false to throw IOException
 * @return PDDocument object representing the parsed PDF
 * @throws IOException if parsing fails and lenient is false
 */","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing.
     *
     * @param lenient activate leniency if set to true
     * @return the populated PDDocument
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroForm,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroForm(org.apache.pdfbox.pdmodel.PDDocument),91,98,"/**
* Initializes and sets up an AcroForm for a PDF document.
* @param template the PDDocument to which the AcroForm is added
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(),111,114,"/**
 * Creates and returns a PDAcroForm with default fixup.
 * @return PDAcroForm object initialized with default settings
 */","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * @return The document's AcroForm.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,findNamedDestinationPage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),348,372,"/**
* Retrieves a page destination from a document.
* @param namedDest the named destination to find
* @return PDPageDestination object or null if not found
*/","* Find the page destination from a named destination.
     * @param namedDest the named destination.
     * @return a PDPageDestination object or null if not found.
     * @throws IOException if there is an error creating the PDPageDestination object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removeResources,org.apache.pdfbox.pdmodel.PDPage:removeResources(org.apache.pdfbox.cos.COSDictionary),134,162,"/**
 * Recursively processes resources to clear cached objects.
 * @param resources dictionary containing resource entries
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,"org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",206,236,"/**
* Retrieves or creates a PDColorSpace based on the given name and default flag.
* @param name COSName of the colorspace
* @param wasDefault boolean indicating if it's a default colorspace
* @return PDColorSpace object
* @throws IOException if an I/O error occurs
*/","* Returns the color space resource with the given name, or null if none exists. This method is
     * for PDFBox internal use only, others should use {@link #getColorSpace(COSName)}.
     *
     * @param name Name of the color space resource.
     * @param wasDefault if current color space was used by a default color space. This parameter is
     * to
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,hasColorSpace,org.apache.pdfbox.pdmodel.PDResources:hasColorSpace(org.apache.pdfbox.cos.COSName),244,247,"/**
 * Checks if a given COSName is a valid color space.
 * @param name the COSName to check
 * @return true if name is a valid color space, false otherwise
 */","* Returns true if the given color space name exists in these resources.
     *
     * @param name Name of the color space resource.
     * @return true if the given color space name exists in these resources, otherwise false",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGState,org.apache.pdfbox.pdmodel.PDResources:getExtGState(org.apache.pdfbox.cos.COSName),255,280,"/**
* Retrieves extended graphics state by name.
* @param name the name of the graphics state
* @return PDExtendedGraphicsState object or null if not found
*/","* Returns the extended graphics state resource with the given name, or null if none exists.
     *
     * @param name Name of the graphics state resource.
     * @return the extended graphics state with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isImageXObject,org.apache.pdfbox.pdmodel.PDResources:isImageXObject(org.apache.pdfbox.cos.COSName),391,409,"/**
* Checks if a given name is an image mask.
* @param name the COSName to check
* @return true if the name represents an image mask, false otherwise
*/","* Tells whether the XObject resource with the given name is an image.
     *
     * @param name Name of the XObject resource.
     * @return true if it is an image XObject, false if not.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpaceNames,org.apache.pdfbox.pdmodel.PDResources:getColorSpaceNames(),515,518,"/**
 * Returns mask colorspace names.
 * @return Iterable of COSName objects representing colorspaces
 */","* Returns the names of the color space resources, if any.
     * 
     * @return an iterable containing all names of available colorspaces",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObjectNames,org.apache.pdfbox.pdmodel.PDResources:getXObjectNames(),525,528,"/**
 * Returns mask elements.
 * @return Iterable of COSName objects representing mask elements
 */","* Returns the names of the XObject resources, if any.
     * 
     * @return an iterable containing all names of available xobjects",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFontNames,org.apache.pdfbox.pdmodel.PDResources:getFontNames(),535,538,"/**
 * Returns font mask names.
 * @return Iterable of COSName objects representing font masks
 */","* Returns the names of the font resources, if any.
     * 
     * @return an iterable containing all names of available fonts",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPropertiesNames,org.apache.pdfbox.pdmodel.PDResources:getPropertiesNames(),545,548,"/**
 * Retrieves properties mask.
 * @return Iterable of COSName representing properties
 */","* Returns the names of the property list resources, if any.
     * 
     * @return an iterable containing all names of available property lists",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShadingNames,org.apache.pdfbox.pdmodel.PDResources:getShadingNames(),555,558,"/**
 * Returns an iterable of COSName objects with SHADING mask.
 * @return Iterable containing COSName.SHADING
 */","* Returns the names of the shading resources, if any.
     * 
     * @return an iterable containing all names of available shadings",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPatternNames,org.apache.pdfbox.pdmodel.PDResources:getPatternNames(),565,568,"/**
 * Returns an iterable of COSName objects with PATTERN mask.
 * @return Iterable of COSName objects
 */","* Returns the names of the pattern resources, if any.
     * 
     * @return an iterable containing all names of available patterns",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGStateNames,org.apache.pdfbox.pdmodel.PDResources:getExtGStateNames(),575,578,"/**
 * Returns a list of COSNames related to EXT_G_STATE.
 * @return Iterable of COSName objects
 */","* Returns the names of the extended graphics state resources, if any.
     * 
     * @return an iterable containing all names of available extended graphics states",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",708,735,"/**
 * Retrieves or creates a COSName for an object based on kind and prefix.
 * @param kind type of resource dictionary key
 * @param prefix string prefix for new COSName
 * @param object COSObjectable instance to process
 * @return COSName associated with the object
 */",* Adds the given resource if it does not already exist.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",780,783,"/**
 * Calls overloaded method with default COSName.
 * @param name specific font name
 * @param font PDFont object to be used
 */","* Sets the font resource with the given name.
     *
     * @param name the name of the resource
     * @param font the font to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",791,794,"/**
* Calls overloaded method with COLORSPACE constant.
* @param name COSName to be used
* @param colorSpace PDColorSpace associated with the name
*/","* Sets the color space resource with the given name.
     *
     * @param name the name of the resource
     * @param colorSpace the color space to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",802,805,"/**
 * Calls overloaded method with EXT_G_STATE constant.
 * @param name COSName object
 * @param extGState PDExtendedGraphicsState object
 */","* Sets the extended graphics state resource with the given name.
     *
     * @param name the name of the resource
     * @param extGState the extended graphics state to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",813,816,"/**
* Calls overloaded m1 with specific COSName.
* @param name COSName parameter
* @param shading PDShading object
*/","* Sets the shading resource with the given name.
     *
     * @param name the name of the resource
     * @param shading the shading to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",824,827,"/**
* Calls overloaded m1 with PATTERN constant.
* @param name unique identifier for the pattern
* @param pattern PDAbstractPattern object to process
*/","* Sets the pattern resource with the given name.
     *
     * @param name the name of the resource
     * @param pattern the pattern to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",835,838,"/**
* Calls overloaded method with specific COSName.
* @param name property name
* @param properties property list
*/","* Sets the property list resource with the given name.
     *
     * @param name the name of the resource
     * @param properties the property list to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",846,849,"/**
* Calls overloaded m1 with COSName.XOBJECT as first argument.
* @param name resource name
* @param xobject PDF XObject to process
*/","* Sets the XObject resource with the given name.
     *
     * @param name the name of the resource
     * @param xobject the XObject to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getObjectFromEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName),82,90,"/**
* Retrieves value from dictionary using key.
* @param key dictionary key to search for
* @return COSBase object or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),242,254,"/**
* Masks a file within a PDF document.
* @param file the embedded file to mask
*/","* Set the embedded file for this spec. You should also call
     * {@link #setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFileUnicode(PDEmbeddedFile)}
     * for cross-platform and cross-language compatibility.
     *
     * @param file The file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),324,336,"/**
* Sets a mask for a PDF embedded file.
* @param file the embedded file to be masked
*/","* Set the embedded Unicode file for this spec. If you call this, then do not forget to also
     * call
     * {@link #setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFile(PDEmbeddedFile)}
     * or the attachment will not be visible on some viewers.
     *
     * @param file The Unicode file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStdCryptFilterDictionary(),470,473,"/**
 * Returns a standard crypt filter dictionary.
 * @return PDCryptFilterDictionary instance
 */","* Returns the standard crypt filter.
     * 
     * @return the standard crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getDefaultCryptFilterDictionary(),480,483,"/**
 * Returns a PDCryptFilterDictionary with default encryption filter.
 * @return PDCryptFilterDictionary instance
 */","* Returns the default crypt filter (for public-key security handler).
     * 
     * @return the default crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),530,534,"/**
* Configures encryption filter settings.
* @param cryptFilterDictionary dictionary containing crypto settings
*/","* Sets the standard crypt filter.
     * 
     * @param cryptFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),541,545,"/**
* Configures encryption filter settings.
* @param defaultFilterDictionary dictionary containing encryption settings
*/","* Sets the default crypt filter (for public-key security handler).
     *
     * @param defaultFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType0Font:getFontDescriptor(),449,453,"/**
 * Retrieves the font descriptor from the descendant font.
 * @return PDFontDescriptor object representing the font descriptor
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getResources(),88,99,"/**
 * Retrieves PDResources from character stream or font.
 * @return PDResources object
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType3Font:hasGlyph(java.lang.String),135,140,"/**
* Checks if a dictionary entry exists by name.
* @param name key to check in the dictionary
* @return true if entry exists, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProc,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProc(int),395,404,"/**
* Retrieves character procedure for a given code.
* @param code character code
* @return PDType3CharProc object or null if not found
*/","* Returns the stream of the glyph for the given character code
     * 
     * @param code character code
     * @return the stream to be used to render the glyph",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:toString(),137,171,"/**
* Generates a string representation of device N process and colorants.
* @return formatted string or ""ERROR"" if IOException occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getBaseState(),207,212,"/**
* Retrieves and converts base state from dictionary.
* @return BaseState object representing the base state
*/","* Returns the base state for optional content groups.
     * @return the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState),218,222,"/**
* Masks a base state in a dictionary.
* @param state BaseState object to be masked
*/","* Sets the base state for optional content groups.
     * @param state the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",400,460,"/**
 * Toggles the visibility of a content group.
 * @param group the content group to toggle
 * @param enable true to show, false to hide
 * @return true if the group was found and toggled, false otherwise
 */","* Enables or disables an optional content group.
     * @param group the group object
     * @param enable true to enable, false to disable
     * @return true if the group already had an on or off setting, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDPatternContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),35,38,"/**
* Initializes a content stream for a tiling pattern.
* @param pattern the PD TilingPattern object to work with
* @throws IOException if an I/O error occurs
*/","* Create a new tiling pattern content stream.
     *
     * @param pattern The tiling pattern stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearance(),120,129,"/**
* Retrieves or creates an appearance dictionary for the annotation.
* @return PDAppearanceDictionary instance associated with the annotation
*/","* Get the annotations appearance dictionary.
     * 
     * <p>
     * This will get the annotations appearance dictionary. If this is not
     * existent an empty appearance dictionary will be created.
     * 
     * @return the annotations appearance dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getRolloverAppearance(),99,103,"/**
* Retrieves appearance entry with mask.
* @return PDAppearanceEntry object or default if none found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getDownAppearance(),133,137,"/**
* Retrieves appearance entry from dictionary or default.
* @return PDAppearanceEntry object or default if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDButton:constructAppearances(),284,304,"/**
 * Masks form fields by setting their appearance based on a condition.
 * @throws IOException if an I/O error occurs
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByValue(java.lang.String),389,410,"/**
 * Masks a value by updating PDF annotations.
 * @param value the value to mask
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getFirstChild(),184,187,"/**
 * Retrieves the first outline item.
 * @return PDOutlineItem representing the first outline or null if none exists
 */",* @return The first child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getLastChild(),202,205,"/**
 * Retrieves the last outline item.
 * @return PDOutlineItem representing the last outline or null if not found
 */",* @return The last child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAcroFormDefaultResource,"org.apache.pdfbox.pdmodel.PDDocument:assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",622,647,"/**
* Updates the form's resources with new dictionary values.
* @param acroForm PDF form to update
* @param newDict dictionary containing new resource data
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSignature,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSignature(),92,95,"/**
 * Returns a PDSignature instance.
 * @return PDSignature object from m1 method
 */","* Get the signature dictionary.
     * 
     * @return the signature dictionary
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValueAsString(),158,163,"/**
* Retrieves masked value from signature.
* @return Masked string or empty if no signature
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,appendBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),142,149,"/**
* Masks the given bead by appending it to the current thread.
* @param append bead to be masked and appended
*/","* Append a bead after this bead.  This will correctly set the next/previous beads in the
     * linked list.
     *
     * @param append The bead to insert.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getNormalAppearanceStream(),366,390,"/**
 * Retrieves the appearance stream for a masked PDF element.
 * @return PDAppearanceStream object or null if not found
 */","* Returns the appearance stream for this annotation, if any. The annotation state is taken into account, if
     * present.
     * 
     * @return the appearance stream",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValueForWidget,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),351,370,"/**
 * Masks a widget by finding and returning the first non-off appearance state.
 * @param widget PDF annotation widget to mask
 * @return Name of the first non-off appearance state or empty string if none found
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:getOnValue(),100,121,"/**
* Masks a widget's appearance.
* @return COSName of the masked entry or empty string if none found
*/","* Get the value which sets the check box to the On state.
     * 
     * <p>The On value should be 'Yes' but other values are possible
     * so we need to look for that. On the other hand the Off value shall
     * always be 'Off'. If not set or not part of the normal appearance keys
     * 'Off' is the default</p>
     *
     * @return the value setting the check box to the On state. 
     *          If an empty string is returned there is no appearance definition.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPages,org.apache.pdfbox.pdfparser.COSParser:checkPages(org.apache.pdfbox.cos.COSDictionary),938,953,"/**
* Masks pages in PDF document.
* @param root the root dictionary of the PDF
* @throws IOException if page tree is missing or invalid
*/","* Check if all entries of the pages dictionary are present. Those which can't be dereferenced are removed.
     * 
     * @param root the root dictionary of the pdf
     * @throws java.io.IOException if the page tree root is null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,enqueueKids,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:enqueueKids(org.apache.pdfbox.cos.COSDictionary),190,222,"/**
* Recursively processes a PDF page tree node.
* @param node current node in the page tree
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,findPage,"org.apache.pdfbox.pdmodel.PDPageTree:findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",396,414,"/**
* Recursively searches for a condition in a dictionary tree.
* @param context search context containing state and results
* @param node current node in the dictionary tree
* @return true if condition is met, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getIDTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),1131,1157,"/**
 * Recursively processes a PDF structure tree to collect named elements.
 * @param idTree root node of the structure tree
 * @return map of element names to PDStructureElement objects
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getValue(java.lang.String),213,241,"/**
 * Retrieves an object by name from a map or tree structure.
 * @param name the key to search for
 * @return the object associated with the name, or null if not found
 * @throws IOException if an I/O error occurs during retrieval
 */","* The name to retrieve.
     *
     * @param name The name in the tree.
     * @return The value of the name in the tree.
     * @throws IOException If there is a problem creating the destinations.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,calculateLimits,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:calculateLimits(),160,204,"/**
* Sets limits for a name tree node.
* Handles cases with children or direct names.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getNumberTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),1161,1187,"/**
 * Recursively processes a number tree to collect COSObjectable entries.
 * @param tree the root PDNumberTreeNode
 * @return a map of integer keys and COSObjectable values
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,findLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),100,124,"/**
 * Recursively processes PDNumberTreeNode to populate page labels.
 * @param node current node in the tree
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getValue(java.lang.Integer),141,167,"/**
* Retrieves object by index from a map or list of nodes.
* @param index the position of the desired object
* @return the COSObjectable object or null if not found
*/","* Returns the value corresponding to an index in the number tree.
     *
     * @param index The index in the number tree.
     *
     * @return The value corresponding to the index.
     *
     * @throws IOException If there is a problem creating the values.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setKids(java.util.List),112,130,"/**
* Masks PDF number tree nodes.
* @param kids list of PDNumberTreeNode children
*/","* Set the children of this number tree.
     *
     * @param kids The children of this number tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNumbers(Map)} with a map and pass a single
     * element list here.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setNumbers(java.util.Map),245,274,"/**
 * Masks numbers in a COSDictionary.
 * @param numbers map of integers to COSObjectable values
 */","* Set the numbers for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param numbers The map of numbers to objects, or <code>null</code> for nothing.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfOutputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfOutputParameters(),159,174,"/**
 * Determines the number of output values.
 * @return Number of output values or 0 if none found
 */","* This will get the number of output parameters that
     * have a range specified.  A range for output parameters
     * is optional so this may return zero for a function
     * that does have output parameters, this will simply return the
     * number that have the range specified.
     *
     * @return The number of output parameters that have a range
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeForOutput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeForOutput(int),185,189,"/**
* Creates a PDRange from an array of values.
* @param n index to access in the array
* @return PDRange object created using the specified index
*/","* This will get the range for a certain output parameters.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The output parameter number to get the range for.
     *
     * @return The range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,clipToRange,org.apache.pdfbox.pdmodel.common.function.PDFunction:clipToRange(float[]),293,313,"/**
* Processes input values using defined ranges.
* @param inputValues array of input float values
* @return processed float array based on ranges
*/","* Clip the given input values to the ranges.
     * 
     * @param inputValues the input values
     * @return the clipped values",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfInputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfInputParameters(),209,217,"/**
* Returns the number of input values.
* Initializes from array size if not already set.
* @return int representing the number of input values
*/","* This will get the number of input parameters that
     * have a domain specified.
     *
     * @return The number of input parameters that have a domain
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainForInput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainForInput(int),228,232,"/**
* Creates a PDRange using specified index.
* @param n index for range creation
* @return PDRange object
*/","* This will get the range for a certain input parameter.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The parameter number to get the domain for.
     *
     * @return The domain range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,calcSampleIndex,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:calcSampleIndex(int[]),351,372,"/**
* Computes an index based on a vector and size values.
* @param vector input vector of indices
* @return computed index as an integer
*/","* calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
         *
         * @param vector with coordinates
         * @return index in flat array",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeValues(),144,163,"/**
* Initializes and returns the encode COSArray.
* @return COSArray containing encode values or default if null
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeForParameter(int),220,229,"/**
* Retrieves a PDRange from decode values based on parameter number.
* @param paramNum index of the range to retrieve
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The decode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncodeForParameter(int),177,181,"/**
* Creates a PDRange using encoded values.
* @param n index for encoding values
* @return PDRange object
*/","* Get the encode for the input parameter.
     *
     * @param n The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isTopAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isTopAttached(),67,70,"/**
 * Checks if ""Top"" is masked.
 * @return true if masked, false otherwise
 */","* Is the artifact attached to the top edge?
     * 
     * @return <code>true</code> if the artifact is attached to the top edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isBottomAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isBottomAttached(),78,81,"/**
 * Checks if ""Bottom"" is masked.
 * @return true if ""Bottom"" is masked, false otherwise
 */","* Is the artifact attached to the bottom edge?
     * 
     * @return <code>true</code> if the artifact is attached to the bottom edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isLeftAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isLeftAttached(),89,92,"/**
 * Checks mask status for ""Left"".
 * @return true if mask is active, false otherwise
 */","* Is the artifact attached to the left edge?
     * 
     * @return <code>true</code> if the artifact is attached to the left edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isRightAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isRightAttached(),100,103,"/**
* Checks if ""Right"" is masked.
* @return true if ""Right"" is masked, false otherwise
*/","* Is the artifact attached to the right edge?
     * 
     * @return <code>true</code> if the artifact is attached to the right edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initStyles,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initStyles(org.w3c.dom.Element),107,126,"/**
* Applies mask styles to an element.
* @param element the target element to apply styles to
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFont:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",66,72,"/**
* Initializes a PDCIDFont with given dictionary and parent font.
* @param fontDictionary the COSDictionary containing font data
* @param parent the PDType0Font that is the parent of this CID font
*/","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontDescriptor(org.apache.pdfbox.cos.COSDictionary),296,308,"/**
* Retrieves font descriptor from a dictionary.
* @param dictionary the input PDF dictionary
* @return COSDictionary containing font descriptor or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",48,71,"/**
 * Initializes a DictionaryEncoding with a base encoding and differences.
 * @param baseEncoding the base encoding name
 * @param differences array of character differences
 */","* Creates a new DictionaryEncoding for embedding.
     *
     * @param baseEncoding the base encoding of this encoding
     * @param differences the differences of this encoding with regard to the base encoding",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary),78,100,"/**
* Initializes a DictionaryEncoding with a given COSDictionary.
* @param fontEncoding the font encoding dictionary to use
*/","* Creates a new DictionaryEncoding for a Type 3 font from a PDF.
     *
     * @param fontEncoding The Type 3 encoding dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",109,149,"/**
 * Initializes DictionaryEncoding with specified font encoding.
 * @param fontEncoding the COSDictionary representing the font encoding
 * @param isNonSymbolic true if the font is non-symbolic
 * @param builtIn the built-in Encoding for symbolic fonts
 */","* Creates a new DictionaryEncoding from a PDF.
     *
     * @param fontEncoding The encoding dictionary.
     * @param isNonSymbolic True if the font is non-symbolic. False for Type 3 fonts.
     * @param builtIn The font's built-in encoding. Null for Type 3 fonts.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSName),43,51,"/**
* Initializes a color space with a given name.
* @param cosName the COSName for the color space
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSArray),58,64,"/**
 * Initializes color space with RGB array.
 * @param rgb COSArray containing color space data
 */","* Creates a new CalRGB color space using the given COS array.
     *
     * @param rgb the cos array which represents this color space",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:toRGB(float[]),77,114,"/**
* Applies gamma correction and matrix transformation to input values.
* @param value array of three float values representing color components
* @return transformed float array or original if condition not met
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:toString(),105,126,"/**
* Constructs a JSON-like string representation of process components.
* @return String formatted as ""Process{component1, component2, ...}"" or ""Process{ERROR}""
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGBImage(java.awt.image.WritableRaster),64,112,"/**
* Converts raster data to RGB image with masking.
* @param raster input WritableRaster containing pixel data
* @return BufferedImage representing the masked RGB image
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultDecode(int),158,164,"/**
* Generates mask values based on component bits.
* @param bitsPerComponent number of bits per color component
* @return array of mask values
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getInitialColor(),166,178,"/**
* Returns a masked color.
* @return PDColor object representing the masked color
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setARange(org.apache.pdfbox.pdmodel.common.PDRange),229,232,"/**
 * Applies mask to specified range.
 * @param range PDRange object defining the range to mask
 */","* This will set the a range for the ""a"" component.
     * @param range the new range for the ""a"" component, 
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setBRange(org.apache.pdfbox.pdmodel.common.PDRange),239,242,"/**
 * Applies mask to specified range.
 * @param range PDRange to apply mask on
 */","* This will set the ""b"" range for this color space.
     * @param range the new range for the ""b"" component,
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroup(java.lang.String),146,163,"/**
 * Retrieves an optional content group by name.
 * @param name the name of the optional content group
 * @return PDOptionalContentGroup object or null if not found
 */","* Returns the first optional content group of the given name.
     *
     * @param name the group name
     * @return the optional content group or null, if there is no such group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,addGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),169,182,"/**
* Adds a content group to optional content and updates order.
* @param ocg the Optional Content Group to add
*/","* Adds an optional content group (OCG).
     * @param ocg the optional content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOptionalContentGroups,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOptionalContentGroups(),188,201,"/**
* Retrieves maskable optional content groups.
* @return Collection of PDOptionalContentGroup objects
*/","* Returns the collection of all optional content groups.
     * @return the optional content groups",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,72,"/**
* Initializes a ShadingContext with given parameters.
* @param shading the PDShading object
* @param cm the ColorModel for rendering
* @param xform the AffineTransform for coordinate mapping
* @param matrix the Matrix for additional transformations
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws java.io.IOException if there is an error getting the color space
     * or doing background color conversion.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeForParameter(int),157,166,"/**
* Retrieves a range from decode values.
* @param paramNum index of the parameter
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(),794,797,"/**
 * Returns a PDColor instance using COSName.C.
 * @return PDColor object
 */","* This will retrieve the color used in drawing various elements. As of PDF 1.6 these are :
     * <ul>
     * <li>Background of icon when closed</li>
     * <li>Title bar of popup window</li>
     * <li>Border of a link annotation</li>
     * </ul>
     *
     * @return Color object representing the colour
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getPathArray,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getPathArray(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon),157,178,"/**
* Retrieves path data from annotation.
* @param annotation polygon annotation object
* @return 2D array of path coordinates or null if unavailable
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBorderColour(),86,89,"/**
 * Retrieves color mask using BC key.
 * @return PDColor object representing the color mask
 */","* This will retrieve the border color.
     * 
     * @return the border color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBackground(),106,109,"/**
 * Returns background color.
 * @return PDColor representing background color
 */","* This will retrieve the background color.
     * 
     * @return the background color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(char,char,char,char,char,char,char,char,char)",421,437,"/**
* Constructs and processes a cryptographic key with various permissions.
* @param digitalSignature, nonRepudiation, etc. - flags indicating key capabilities
*/","* works like {@link #addKeyUsage(String)} but enters each character separately
     *
     * @param digitalSignature char that is one of {0, 1, X}
     * @param nonRepudiation char that is one of {0, 1, X}
     * @param keyEncipherment char that is one of {0, 1, X}
     * @param dataEncipherment char that is one of {0, 1, X}
     * @param keyAgreement char that is one of {0, 1, X}
     * @param keyCertSign char that is one of {0, 1, X}
     * @param cRLSign char that is one of {0, 1, X}
     * @param encipherOnly char that is one of {0, 1, X}
     * @param decipherOnly char that is one of {0, 1, X}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(java.io.InputStream),337,344,"/**
* Masks PDF content by extracting specified range.
* @param pdfFile input PDF stream
* @return masked content as byte array
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(byte[]),354,361,"/**
* Masks a PDF file.
* @param pdfFile original PDF content as byte array
* @return masked PDF content as byte array
* @throws IOException if I/O error occurs
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(java.io.InputStream),412,418,"/**
 * Masks PDF content.
 * @param pdfFile input PDF file stream
 * @return masked PDF content as byte array
 * @throws IOException if I/O error occurs
 */","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(byte[]),431,437,"/**
 * Masks PDF content.
 * @param pdfFile original PDF file bytes
 * @return masked PDF file bytes
 * @throws IOException if I/O error occurs
 */","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String),144,147,"/**
 * Masks a given name using a function.
 * @param name the original name to be masked
 * @return the masked version of the name
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @return the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getRenderingIntent(),334,345,"/**
* Retrieves rendering intent from dictionary.
* @return RenderingIntent object or null if not found
*/","* This will get the rendering intent.
     *
     * @return null or the RI value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,getN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:getN(),54,57,"/**
 * Calls m1 with ""N"" and returns its result.
 */","* This will get the name of the action to be performed.
     *
     * @return The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String,java.lang.String)",674,677,"/**
 * Retrieves value from COSDictionary using key.
 * @param key unique identifier for the value
 * @param defaultValue default value if key is not found
 * @return value associated with key or defaultValue
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineStyle(),144,147,"/**
 * Masks function using solid guideline style.
 * @return masked result as string
 */","* Get the style for the guideline.  The default is ""S"" for solid.
     *
     * @return The guideline style.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getIcon(),103,106,"/**
 * Masks function for annotation.
 * @return masked string result
 */","* This will retrieve the icon (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the PDAnnotationText.NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getAttachmentName(),104,107,"/**
 * Masks data using specified parameters.
 * @return masked string result
 */","* This is the name used to draw the type of attachment. See the ATTACHMENT_NAME_XXX constants.
     *
     * @return The name that describes the visual cue for the attachment.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getLineEndingStyle(),230,233,"/**
 * Masks function using specific parameters.
 * @return masked string result from method chain
 */","* This will retrieve the line ending style.
     *
     * @return The line ending style, possible values shown in the LE_ constants section, LE_NONE if
     * missing, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getHighlightMode(),160,163,"/**
 * Masks content using highlight mode invert.
 * @return masked string result
 */","* Set the highlight mode for when the mouse is depressed. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @return The string representation of the highlight mode.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getReplyType(),231,234,"/**
 * Generates a masked string using specific parameters.
 * @return Masked string result from function chain
 */","* This will retrieve the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for
     * the available values.
     *
     * @return the relationship.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:getName(),131,134,"/**
 * Masks data using specified name and draft.
 * @return masked string result
 */","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * DRAFT.
     *
     * @return The name of this rubber stamp, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getName(),178,181,"/**
 * Masks data using specified parameters.
 * @return masked string result
 */","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getHighlightingMode(),77,80,"/**
 * Masks data using specific parameters.
 * @return masked string result
 */","* Returns the highlighting mode. Default value: <code>I</code>
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @return the highlighting mode",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getStyle(),150,153,"/**
 * Masks a function using specific style.
 * @return masked function result as string
 */","* This will retrieve the border style, see the STYLE_* constants for valid values.
     *
     * @return the style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getType,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getType(),67,70,"/**
 * Masks data using specified type and value.
 * @return masked string result
 */","* returns the type of the external data dictionary. It must be ""ExData"", if present
     * 
     * @return the type of the external data dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:getSubtype(),82,86,"/**
* Masks function with specific subtype.
* @return masked string result
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getStyle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getStyle(),70,73,"/**
 * Masks data using specified transition style.
 * @return masked string result
 */","* @return the style for this transition
     * @see PDTransitionStyle#valueOf(String)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDimension(),80,83,"/**
 * Masks data using specified transition dimension.
 * @return masked string result
 */","* @return The dimension in which the specified transition effect shall occur or the default
     * {@link PDTransitionDimension#H} if no dimension is found.
     * @see PDTransitionDimension",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getMotion(),101,104,"/**
 * Masks data using motion transition.
 * @return masked string result
 */","* @return The direction of motion for the specified transition effect or the default {@link PDTransitionMotion#I}
     * if no motion is found.
     * @see PDTransitionMotion",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getNonFullScreenPageMode(),287,291,"/**
* Retrieves non-full screen page mode preference.
* @return String representing the page mode setting
*/","* Get the non full screen page mode preference.
     *
     * @return the non full screen page mode preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getReadingDirection(),308,311,"/**
 * Retrieves reading direction preference.
 * @return String representation of reading direction
 */","* Get the reading direction preference.
     *
     * @return the reading direction preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewArea(),328,331,"/**
 * Retrieves and masks view area boundary.
 * @return masked string representation of the view area boundary
 */","* Get the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @return the ViewArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewClip(),348,351,"/**
 * Masks function using preferences and boundary settings.
 * @return masked string result
 */","* Get the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @return the ViewClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintArea(),368,371,"/**
 * Retrieves print area boundary.
 * @return string representation of print area boundary
 */","* Get the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @return the PrintArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintClip(),388,391,"/**
 * Retrieves print clip setting from preferences.
 * @return String representing the print clip setting
 */","* Get the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @return the PrintClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintScaling(),428,431,"/**
* Retrieves print scaling preference.
* @return String representing the print scaling setting
*/","* Get the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @return the PrintScaling preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefOffset(long),295,316,"/**
 * Parses and validates XREF table starting from given offset.
 * @param startXRefOffset initial offset for parsing
 * @return valid offset or -1 if not found
 * @throws IOException on I/O errors during parsing
 */","* Check if the cross reference table/stream can be found at the current offset.
     * 
     * @param startXRefOffset
     * @return the revised offset
     * @throws IOException",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getVersion,org.apache.pdfbox.pdmodel.PDDocument:getVersion(),1415,1441,"/**
* Compares catalog and header versions.
* @return higher of catalog and header versions, or header version if catalog is null or invalid
*/","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. 1.4f)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAttributes(),161,196,"/**
* Fetches and processes attribute revisions.
* @return Revisions object containing processed PDAttributeObjects
*/","* Returns the attributes together with their revision numbers (A).
     * 
     * @return the attributes as a list, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,isEmpty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:isEmpty(),143,147,"/**
* Checks conditions involving methods m1, m2, and m3.
* @return true if m2 equals 1 and m3 is not null, false otherwise
*/","* Detects whether there are no properties in the attribute object.
     * 
     * @return <code>true</code> if the attribute object is empty,
     *  <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:toString(),193,197,"/**
 * Generates a masked string with prefix ""O="".
 * @return Masked string representation
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getParent(),96,100,"/**
* Retrieves structure node from parent dictionary.
* @return PDStructureNode or null if parent is not found
*/","* Returns the parent in the structure hierarchy (P).
     * 
     * @return the parent in the structure hierarchy",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObject(org.apache.pdfbox.cos.COSBase),364,390,"/**
 * Processes a PDF object to extract mask information.
 * @param kid PDF object to process
 * @return Mask information or null if not applicable
 */","* Creates an object for a kid of this structure node.
     * The type of object depends on the type of the kid. It can be
     * <ul>
     * <li>a {@link PDStructureElement},</li>
     * <li>a {@link PDObjectReference},</li>
     * <li>a {@link PDMarkedContentReference},</li>
     * <li>an {@link Integer}</li>
     * </ul>
     * 
     * @param kid the kid
     * @return the object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setName(java.lang.String),73,77,"/**
* Calls methods m2 and m4 with processed parameters.
* @param name input string to be processed
*/","* Sets the property name.
     * 
     * @param name the property name",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(org.apache.pdfbox.cos.COSDictionary),93,97,"/**
* Initializes PDEncryption with a COSDictionary.
* @param dictionary PDF encryption dictionary
*/","* creates a new encryption dictionary from the low level dictionary provided.
     * @param dictionary a COS encryption dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSecurityHandler,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSecurityHandler(),104,112,"/**
* Retrieves security handler.
* @return SecurityHandler instance with ProtectionPolicy
* @throws IOException if no security handler is available
*/","* Returns the security handler specified in the dictionary's Filter entry.
     * @return a security handler instance
     * @throws IOException if there is no security handler available which matches the Filter",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getAnnotations(),437,451,"/**
 * Retrieves annotations from FDF document.
 * @return List of FDFAnnotation objects or null if none found
 * @throws IOException on I/O error
 */","* This will get the list of FDF Annotations. This will return a list of FDFAnnotation objects or null if the entry
     * is not set.
     *
     * @return A list of FDF annotations.
     *
     * @throws IOException If there is an error creating the annotation list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getName,org.apache.pdfbox.pdmodel.font.PDCIDFont:getName(),210,214,"/**
 * Returns the masked function name.
 * @return Masked function name as a string
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,isCharSetMatch,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",666,710,"/**
* Determines if font info matches CID system info.
* @param cidSystemInfo CID system information object
* @param info font information object
* @return true if conditions match, false otherwise
*/","* Returns true if the character set described by CIDSystemInfo is present in the given font.
     * Only applies to Adobe-GB1, Adobe-CNS1, Adobe-Japan1, Adobe-Korea1, as per the PDF spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,createCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:createCIDFont(),190,221,"/**
* Creates a CID font dictionary.
* @return configured COSDictionary representing CID font
* @throws IOException if an I/O error occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,addNameTag,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:addNameTag(java.lang.String),223,231,"/**
 * Updates font descriptor and dictionary with a new base font name.
 * @param tag prefix for the new base font name
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getName,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getName(),323,327,"/**
* Returns the masked value from function m1.
* @return Masked string value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType0Font:getName(),613,617,"/**
 * Returns the masked function name.
 * @return Masked function name as a string
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toString,org.apache.pdfbox.pdmodel.font.PDType0Font:toString(),672,681,"/**
 * Generates a masked string with postscript information.
 * @return formatted string combining ancestor and descendant names, and postscript
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getName,org.apache.pdfbox.pdmodel.font.PDType1CFont:getName(),248,252,"/**
 * Returns the masked function name.
 * @return Masked function name as a string.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType1Font:getName(),531,535,"/**
 * Returns the masked value using function m1.
 * @return Masked string value
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:isNChannel(),437,440,"/**
 * Checks if 'attributes' is non-null and calls its 'm1' method.
 * @return true if both conditions are met, false otherwise
 */","* Returns true if this color space has the NChannel subtype.
     * @return true if subtype is NChannel",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOpenAction(),284,299,"/**
* Retrieves destination or action from PDF document.
* @return PDDestinationOrAction object or null if not found
*/","* Get the Document Open Action for this object.
     *
     * @return The action to perform when the document is opened.
     * @throws IOException If there is an error creating the destination or action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),50,58,"/**
* Creates a JavaScript action from a COSBase object.
* @param base the COSBase object to be converted
* @return a PDActionJavaScript object
* @throws IOException if the base is not a COSDictionary
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAction,org.apache.pdfbox.pdmodel.fdf.FDFField:getAction(),702,705,"/**
 * Creates an action based on field value.
 * @return PDAction object representing the action
 */","* This will get the action that is associated with this field.
     *
     * @return The 'A' entry in the FDF field dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getDoc(),140,165,"/**
* Extracts JavaScript actions from document dictionary.
* @return Map of named JavaScript actions or null if none found
*/","* Returns the dictionary's ""Doc"" entry, that is, a map of key value pairs to be added to the document's JavaScript
     * name tree.
     * 
     * @return Map of named ""JavaScript"" dictionaries.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getNext(),126,147,"/**
* Retrieves masked actions from a PDF document.
* @return List of PDAction objects or null if none found
*/","* This will get the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @return The Next action or sequence of actions.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:getF(),66,69,"/**
 * Creates a mask action.
 * @return PDAction object representing the mask action
 */","* Get the F action.
     *
     * @return The F action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getE(),69,73,"/**
* Retrieves an action associated with a key.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @return The E entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getX(),92,96,"/**
* Retrieves and converts an action from a dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @return The X entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getD(),116,120,"/**
* Retrieves an action from a dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @return The d entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getU(),141,145,"/**
* Retrieves and creates a PDF action from dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @return The U entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getFo(),165,169,"/**
* Retrieves and converts a PDF action from the dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the annotation
     * receives the input focus.
     *
     * @return The Fo entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getBl(),189,193,"/**
* Retrieves and returns a PDAction from the 'BL' entry in actions.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @return The Bl entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPO(),215,219,"/**
* Retrieves action from dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @return The PO entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPC(),241,245,"/**
* Retrieves and creates a PDAction from the 'PC' entry in actions.
* @return PDAction object or null if 'PC' entry is missing
*/","* This will get an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @return The PC entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPV(),265,269,"/**
* Retrieves and creates an action from a dictionary.
* @return PDAction object or null if dictionary is not found
*/","* This will get an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @return The PV entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPI(),288,292,"/**
 * Retrieves and creates a PDAction from the ""PI"" entry in actions.
 * @return PDAction object or null if ""PI"" entry is missing
 */","* This will get an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @return The PI entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWC(),70,74,"/**
* Retrieves and creates an action from the WC dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @return The WC entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWS(),95,99,"/**
* Retrieves WS action from dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @return The WS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDS(),120,124,"/**
 * Retrieves and creates a PDAction from the DS dictionary.
 * @return PDAction object or null if DS is not found
 */","* This will get a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @return The DS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWP(),145,149,"/**
* Retrieves and creates a PDAction from a COSDictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @return The WP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDP(),170,174,"/**
 * Retrieves and converts a PDF action from a dictionary.
 * @return PDAction object or null if not found
 */","* This will get a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @return The DP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getK(),71,75,"/**
* Retrieves action from dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @return The K entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getF(),97,101,"/**
* Retrieves and creates an action from the dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @return The F entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getV(),123,127,"/**
* Retrieves and creates a PDAction from the 'V' entry in actions.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @return The V entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getC(),151,155,"/**
* Retrieves and converts an action from a dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @return The C entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getO(),71,75,"/**
 * Retrieves action dictionary and creates PDAction.
 * @return PDAction object or null if not found
 */","* This will get an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @return The O entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getC(),97,101,"/**
* Retrieves and converts an action from the dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @return The C entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getAction(),92,96,"/**
* Creates an action from a dictionary.
* @return PDAction object or null if not found
*/","* Get the action to be performed when this annotation is to be activated. Either this or the
     * destination entry should be set, but not both.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAction(),142,146,"/**
* Creates an action from dictionary.
* @return PDAction object or null if dictionary is null
*/","* Get the action to be performed when this annotation is to be activated.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getAction(),281,284,"/**
 * Creates an action with name attribute.
 * @return PDAction object configured with name
 */","* Get the action of this node.
     *
     * @return The action of this node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldType(),87,96,"/**
* Retrieves field type from PDF document.
* @return Field type as a String or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getPropertyStringValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getPropertyStringValue(java.lang.String),80,83,"/**
 * Masks sensitive information based on property key.
 * @param propertyKey identifier for the property to mask
 * @return masked value or original if not applicable
 */","* Return the properties String value.
     * <p>
     * Allows to retrieve the
     * low level date for validation purposes.
     * </p> 
     * 
     * @param propertyKey the dictionaries key
     * @return the properties value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCustomMetadataValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCustomMetadataValue(java.lang.String),280,283,"/**
 * Masks a field name using internal logic.
 * @param fieldName name of the field to mask
 * @return masked field name
 */","*  This will get the value of a custom metadata information field for the document.
     *  This will return null if one is not found.
     *
     * @param fieldName Name of custom metadata field from pdf document.
     *
     * @return String Value of metadata field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getString(java.lang.String),78,81,"/**
 * Calls m2 on result of m1 with given name.
 * @param name input string parameter
 * @return result of m2 call
 */","* Gets a string attribute value.
     * 
     * @param name the attribute name
     * @return the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,getBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:getBase(),70,73,"/**
 * Masks the base string using m2 method.
 * @return masked string result
 */","* This will get the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @return The URI entry of the specific URI dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getVersion(),131,134,"/**
 * Retrieves a masked string using a dictionary.
 * @return Masked string from dictionary
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>/Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     *
     * @return the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getUnits(),109,112,"/**
 * Masks data using specified function.
 * @return masked string result
 */","* This will return the label for the units.
     * 
     * @return the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String,java.lang.String)",735,738,"/**
 * Retrieves value by COSName key with default.
 * @param key unique identifier as string
 * @param defaultValue value to return if not found
 * @return associated value or default if missing
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",780,784,"/**
* Retrieves a value from an embedded dictionary.
* @param embedded the name of the embedded dictionary
* @param key the key to look up in the dictionary
* @param defaultValue the default value if the key is not found
* @return the value associated with the key or the default value
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getOperation(),122,125,"/**
* Masks operation using COSName and OPERATION_OPEN.
* @return masked string result
*/","* Get the operation to perform on the file.  This method will not return null,
     * OPERATION_OPEN is the default.
     *
     * @return The operation to perform for the file.
     * @see PDWindowsLaunchParams#OPERATION_OPEN
     * @see PDWindowsLaunchParams#OPERATION_PRINT",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultAppearance(),500,503,"/**
 * Retrieves value associated with COSName.DA from dictionary.
 * @return String value or empty string if not found
 */","* Get the default appearance.
     * 
     * @return the DA element of the dictionary object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeLanguage,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",938,948,"/**
 * Copies language setting from source catalog to destination catalog.
 * @param destCatalog destination PDF document catalog
 * @param srcCatalog source PDF document catalog
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFilename,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFilename(),101,121,"/**
* Retrieves a filename using multiple fallback methods.
* @return the first non-null filename or null if all fail
*/","* <p>Preferred method for getting the filename.
     * It will determinate the recommended file name.</p>
     * <p>First of all we try to get the unicode filename if it exist.
     * If it doesn't exist we take a look at the DOS, MAC UNIX filenames.
     * If no one exist the required F entry will be returned.</p>
     *
     * @return The preferred file name.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setFormattedValue(java.lang.String),115,119,"/**
* Applies formatting and updates internal state.
* @param formattedValue string to be processed
*/","* Sets the string for the property value.
     * 
     * @param formattedValue the string for the property value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFTextStripper:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",862,874,"/**
 * Adds a marked content to the document.
 * @param tag unique identifier for the marked content
 * @param properties dictionary containing properties of the marked content
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFTextStripper:endMarkedContentSequence(),876,889,"/**
* Processes marked content and updates text.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,probablyBarcodeFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),646,660,"/**
 * Checks if font descriptor contains ""Code"" or ""barcode"".
 * @param fontDescriptor PDFontDescriptor instance
 * @return true if ""Code"" or ""barcode"" is found, false otherwise
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,toString,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:toString(),146,150,"/**
 * Overrides m1 to append result of m2.
 * @return concatenated string with m1 and m2 results
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,hasGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:hasGroup(java.lang.String),258,269,"/**
* Checks if a group name is masked.
* @param groupName the name of the group to check
* @return true if the group name is masked, false otherwise
*/","* Indicates whether a particular optional content group is found in the PDF file.
     * @param groupName the group name
     * @return true if the group exists, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractNonStrokingColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),364,428,"/**
* Extracts the non-stroking color from a free text annotation's default appearance.
* @param annotation PDAnnotationFreeText object
* @return PDColor representing the non-stroking color or default black if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getFullyQualifiedName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getFullyQualifiedName(),406,422,"/**
 * Constructs a hierarchical name by combining current and parent names.
 * @return concatenated name string or null if no valid name is found
 */","* Returns the fully qualified name of the field, which is a concatenation of the names of all the parents fields.
     * 
     * @return the name of the field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String,java.util.Calendar)",822,825,"/**
 * Retrieves calendar value by COSName key with default.
 * @param key string to create COSName from
 * @param defaultValue calendar to return if not found
 * @return Calendar object or default if not present
 */","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",866,870,"/**
* Retrieves a calendar value from an embedded dictionary.
* @param embedded the name of the embedded dictionary
* @param key the key for the calendar value
* @param defaultValue default calendar value if not found
* @return Calendar value or default if missing
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was
     * invalid.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getRevision(),141,144,"/**
 * Retrieves mask value using COSName.R.
 * @return mask value as a long
 */","* The software module revision number, corresponding to the Date attribute.
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getMinimumRevision(),165,168,"/**
 * Retrieves a mask value from the dictionary.
 * @return the mask value as a long
 */","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions)",65,75,"/**
* Applies filters to input stream.
* @param filters list of filter objects
* @param parameters dictionary of decoding parameters
* @param in input stream to be filtered
* @param options decode options
* @return COSInputStream with applied filters
* @throws IOException if an I/O error occurs
*/","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @param options decode options for the encoded stream
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createView,org.apache.pdfbox.cos.COSStream:createView(),181,197,"/**
* Returns a RandomAccessRead object with filters applied.
* @return RandomAccessRead instance based on filtering criteria
*/","* Returns a new RandomAccessRead which reads the decoded stream data.
     * 
     * @return RandomAccessRead containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(java.util.List),200,220,"/**
* Applies filters to input stream.
* @param stopFilters list of filter names to stop processing
* @return filtered InputStream or original if no filters applied
*/","* This will get a stream with some filters applied but not others. This is
     * useful when doing images, ie filters = [flate,dct], we want to remove
     * flate but leave dct
     * 
     * @param stopFilters  A list of filters to stop decoding at.
     * @return A stream with decoded data.
     * @throws IOException If there is an error processing the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String),290,293,"/**
 * Masks a string using m2 method of m1.
 * @param name input string to mask
 * @return masked string as float
 */","* Gets a number value.
     * 
     * @param name the attribute name
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getConversionFactor(),129,132,"/**
 * Retrieves a masked value using specific parameters.
 * @return float result from chained method calls
 */","* This will return the conversion factor.
     * 
     * @return the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:<init>(org.apache.pdfbox.cos.COSBase),54,71,"/**
 * Initializes a PDFunctionType2 with given function.
 * @param function the underlying COSBase function
 */","* Constructor.
     *
     * @param function The function.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderLength(),306,309,"/**
 * Retrieves a value using COSName.LL as the key.
 * @return float value associated with COSName.LL
 */","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderExtend(),326,329,"/**
 * Returns a masked value using COSName.LLE.
 * @return float result of the masking operation
 */","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderOffset(),346,349,"/**
 * Masks function using COSName.LLO.
 * @return result of annotation mask operation
 */","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getV(),348,351,"/**
 * Retrieves value associated with COSName.V from dictionary.
 * @return float value from dictionary or default if not found
 */","* The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @return the minimum required capability of the signature field seed value
     * dictionary parser",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCYX(),321,324,"/**
 * Retrieves a masked value from m2 using COSName.CYX.
 * @return float value obtained from m2
 */","* This will return the CYX factor.
     * 
     * @return CYX factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String,float)",279,282,"/**
* Masks a value based on a given name.
* @param name key used to mask the value
* @param defaultValue default value if masking fails
* @return masked value as float
*/","* Gets a number value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getIntensity(),91,94,"/**
 * Calls method m2 on result of m1 with specific parameters.
 * @return float value from m2 execution
 */","* This will retrieve the intensity of the applied effect.
     *
     * @return the intensity value 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,computeFontHeight,org.apache.pdfbox.text.LegacyPDFStreamEngine:computeFontHeight(org.apache.pdfbox.pdmodel.font.PDFont),324,369,"/**
* Calculates mask height for a given PDFont.
* @param font the font to calculate height for
* @return float representing the calculated height
*/","* Compute the font height. Override this if you want to use own calculations.
     * 
     * @param font the font.
     * @return the font height.
     * 
     * @throws IOException if there is an error while getting the font bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:toRGB(float[]),83,105,"/**
* Applies mask function to input values.
* @param value input array of floats
* @return processed float array
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:getLineWidth(),148,170,"/**
* Retrieves mask value from annotation's border style or characteristics.
* @return float representing the mask value, default is 1
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:getLineWidth(),174,196,"/**
* Retrieves mask value from annotation border style or characteristics.
* @return float representing the mask value, default is 1
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getLineWidth(),207,229,"/**
 * Retrieves the mask value from annotation border style or characteristics.
 * @return float value of the mask, default is 1
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:getLineWidth(),125,147,"/**
 * Retrieves mask value from annotation border style.
 * @return float value of mask or default 1 if not found
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.util.List),107,113,"/**
 * Processes a list of tokens.
 * @param tokens list of objects to process
 * @throws IOException if an I/O error occurs
 */","* This will write out the list of tokens to the stream.
     *
     * @param tokens The tokens to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:getDecodeParms(),269,273,"/**
* Masks function with specified parameters.
* @return List of objects resulting from masking operation
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:getFileDecodeParams(),282,285,"/**
 * Retrieves decode parameters.
 * @return List of objects representing decode parameters
 * @throws IOException if an I/O error occurs
 */","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),151,155,"/**
 * Masks structure element by applying transformations.
 * @param structureElement the element to be masked
 */","* Appends a structure element kid and sets the parent property (/P) to this.
     * 
     * @param structureElement the structure element",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)",208,211,"/**
 * Calls m1 with newKid and refKid.
 * @param newKid PDStructureElement to be added
 * @param refKid reference object for positioning
 */","* Inserts a structure element kid before a reference kid.
     * 
     * @param newKid the structure element
     * @param refKid the reference kid",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),278,286,"/**
* Removes an element from the structure if possible.
* @param structureElement the element to remove
* @return true if removal was successful, false otherwise
*/","* Removes a structure element kid and if successful also removes the parent property (/P).
     *
     * @param structureElement the structure element
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultPositionVector(int),267,270,"/**
* Masks and processes data.
* @param cid category identifier
* @return processed data vector
*/","* Returns the default position vector (v).
     *
     * @param cid CID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidth(int),317,324,"/**
 * Applies mask operations to input code.
 * @param code input value to be masked
 * @return result of masking operations
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getAverageFontWidth(),485,489,"/**
 * Returns the font size from the descendant font.
 * @return font size as a float
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getProperties,org.apache.pdfbox.pdmodel.PDResources:getProperties(org.apache.pdfbox.cos.COSName),358,383,"/**
* Retrieves or creates a property list.
* @param name the property name
* @return PDPropertyList object or null if not found
*/","* Returns the property list resource with the given name, or null if none exists.
     * 
     * @param name Name of the property list resource.
     * @return the property list with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getOptionalContent(),284,288,"/**
* Retrieves mask properties from document.
* @return PDPropertyList containing mask settings or null if not available
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOptionalContent(),1055,1059,"/**
* Retrieves optional content properties.
* @return PDPropertyList object or null if not found
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getOCGs(),62,86,"/**
* Retrieves property lists from a dictionary or array.
* @return List of PDPropertyList objects or empty list if none found
*/","* Get a list of optional content groups.
     * 
     * @return List of optional content groups, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getOptionalContent(),705,709,"/**
* Retrieves mask properties from document.
* @return PDPropertyList containing mask settings or null if not present
*/","* This will get the optional content group or optional content membership dictionary for the
     * annotation.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOrVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenOrVisibilityExpression(org.apache.pdfbox.cos.COSArray),2240,2267,"/**
* Checks if all elements in the array are hidden.
* @param veArray array of COSBase objects
* @return true if all elements are hidden, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationCaret from a COSDictionary.
 * @param field dictionary containing annotation properties
 */","* Creates a Caret annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs a file attachment annotation from a COS dictionary.
 * @param field the COS dictionary representing the annotation
 */","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),66,69,"/**
 * Constructs a new PDAnnotationFreeText annotation.
 * @param field COSDictionary representing the annotation
 */","* Creates a FreeText annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs an ink annotation from a dictionary.
 * @param dict COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),125,128,"/**
* Constructs a new PDAnnotationLine from a COSDictionary.
* @param field the COSDictionary containing annotation data
*/","* Creates a Line annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a new polygon annotation from a COS dictionary.
 * @param dict the COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a new polyline annotation from a COS dictionary.
 * @param dict COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(org.apache.pdfbox.cos.COSDictionary),109,112,"/**
 * Constructs a new PDAnnotationRubberStamp from a COSDictionary.
 * @param field the COSDictionary that represents this rubber stamp annotation
 */","* Creates a Rubber Stamp annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructor for PDAnnotationSound.
 * @param field COSDictionary containing annotation properties
 */","* Creates a sound annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationSquareCircle from a COS dictionary.
 * @param dict The COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),136,139,"/**
 * Constructs a text annotation from a COS dictionary.
 * @param field dictionary containing annotation properties
 */","* Creates a Text annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
* Creates a text markup annotation.
* @param field COS dictionary representing the annotation
*/","* Creates a TextMarkup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getPopup(),93,97,"/**
* Retrieves and returns a PDAnnotationPopup object.
* @return PDAnnotationPopup or null if not found
*/","* This will retrieve the popup annotation used for entering/editing the text for this annotation.
     *
     * @return the popup annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getWidgets(),162,185,"/**
* Retrieves annotation widgets from a PDF document.
* @return List of PDAnnotationWidget objects
*/","* Returns the widget annotations associated with this field.
     *
     * @return The list of widget annotations. Be aware that this list is <i>not</i> backed by the
     * actual widget collection of the field, so adding or deleting has no effect on the PDF
     * document until you call {@link #setWidgets(java.util.List) setWidgets()} with the modified
     * list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueAsString(),465,469,"/**
 * Masks data using transformation functions.
 * @return masked string result
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneForNewDocument(org.apache.pdfbox.cos.COSBase),81,103,"/**
 * Applies a mask to a COSBase object.
 * @param base the original COSBase object
 * @return masked COSBase object or null if not applicable
 * @throws IOException if an I/O error occurs
 */","* Deep-clones the given object for inclusion into a different PDF document identified by the destination parameter.
     * 
     * Expert use only, don’t use it if you don’t know exactly what you are doing.
     * 
     * @param base the initial object as the root of the deep-clone operation
     * @return the cloned instance of the base object
     * @throws IOException if an I/O error occurs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObjects,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObjects(),527,533,"/**
* Writes objects to output until none remain.
* @throws IOException if an I/O error occurs
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefInc,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefInc(org.apache.pdfbox.cos.COSDocument),710,750,"/**
 * Masks document content, updating XRef and trailer.
 * @param doc the PDF document to process
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromArray,org.apache.pdfbox.pdfwriter.COSWriter:visitFromArray(org.apache.pdfbox.cos.COSArray),1108,1152,"/**
 * Masks elements in a COSArray.
 * @param array the input COSArray to process
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDictionary,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDictionary(org.apache.pdfbox.cos.COSDictionary),1186,1265,"/**
 * Masks a PDF dictionary object.
 * @param obj the COSDictionary to process
 * @throws IOException if an I/O error occurs
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectsToStream,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectsToStream(org.apache.pdfbox.cos.COSStream),109,157,"/**
 * Prepares and returns a COSStream with object data.
 * @param stream input COSStream to be processed
 * @return processed COSStream with encoded objects
 * @throws IOException if an I/O error occurs
 */","* Writes all prepared {@link COSObject}s to the given {@link COSStream}.
     *
     * @param stream The stream for the compressed objects.
     * @return The given {@link COSStream} of this object stream.
     * @throws IOException Shall be thrown, if writing the object stream failed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSArray,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSArray(java.io.OutputStream,org.apache.pdfbox.cos.COSArray)",318,334,"/**
* Writes COSArray to OutputStream.
* @param output destination stream for writing
* @param cosArray array of COSBase objects to write
* @throws IOException if an I/O error occurs
*/","* Write the given {@link COSArray} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosArray The content, that shall be written.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyPolygonImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",279,393,"/**
* Masks polygon vertices based on intensity and shape.
* @param vertices array of polygon vertices
* @param isEllipse flag indicating if the shape is an ellipse
*/","* Cloudy polygon implementation.
     *
     * @param vertices polygon vertices; first and last point must be equal
     * @param isEllipse specifies if the polygon represents an ellipse",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,encode,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:encode(),343,500,"/**
* Creates a masked image from raster data.
* @return PDImageXObject representing the masked image or null if unsupported type
*/","* Tries to compress the image using a predictor.
         *
         * @return the image or null if it is not possible to encoded the image (e.g. not supported
         * raster format etc.)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.PDPage),206,215,"/**
* Initializes a destination for a given page.
* @param page the page to set the destination for
*/","* A convenience method that will create an XYZ destination using only the defaults.
     *
     * @param page The page to refer to.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryNameValuePair,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary),377,402,"/**
* Processes a dictionary entry and adds it to the COSDictionary.
* @param obj the COSDictionary to add the entry to
* @return true if processing is successful, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",498,553,"/**
* Masks a PDF stream by decrypting it.
* @param stream the COSStream to be masked
* @param objNum object number of the stream
* @param genNum generation number of the stream
* @throws IOException if an I/O error occurs during decryption
*/","* This will decrypt a stream.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(),48,51,"/**
 * Initializes a new instance of PDActionEmbeddedGoTo.
 * Sets the subtype to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(),44,47,"/**
 * Initializes a new PDActionGoTo with default subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(),40,43,"/**
 * Initializes a new instance of PDActionHide.
 * Sets the subtype to SUB_TYPE.
 */",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(),40,43,"/**
 * Initializes a new PDActionImportData with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(),40,43,"/**
 * Constructs a new PDActionJavaScript with a specific subtype.
 */",* Constructor #1.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(),44,47,"/**
 * Initializes a new instance of PDActionLaunch with a specified subtype.
 * @param SUB_TYPE the subtype to be set for this action
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(),36,39,"/**
* Initializes a new PDActionMovie with a specific subtype.
* Sets the subtype to SUB_TYPE constant.
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(),34,37,"/**
 * Constructs a new PDActionNamed with a specific subtype.
 * @param SUB_TYPE predefined subtype for the action
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(),44,47,"/**
 * Creates a new instance of PDActionRemoteGoTo with a specific subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(),38,41,"/**
 * Initializes a new instance of PDActionResetForm.
 * Sets the subtype to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(),41,44,"/**
 * Initializes a new PDActionSound with a specific subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(),43,46,"/**
 * Initializes a new PDActionSubmitForm with a specific subtype.
 * @param SUB_TYPE the predefined subtype for the form action
 */",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(),44,47,"/**
 * Constructs a PDActionThread with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(),41,44,"/**
 * Constructs a new PDActionURI with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(),36,39,"/**
 * Constructs a new circle annotation.
 * Initializes with a specific sub-type.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(),37,40,"/**
 * Creates a new square annotation.
 * Initializes with a specific subtype.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(),40,43,"/**
 * Constructs a new PDAnnotationHighlight.
 * Initializes with the specified sub-type.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(),40,43,"/**
* Constructs a new PDAnnotationSquiggly annotation.
* Initializes with the specified sub-type.
*/",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(),40,43,"/**
* Creates a new strikeout annotation.
* Initializes with the specified subtype.
*/",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(),40,43,"/**
 * Creates a new underline annotation.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:toString(),1477,1684,"/**
* Constructs a string representation of object properties.
* @return formatted string with property values
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:generateBoundingBox(),215,237,"/**
* Determines the bounding box for a font.
* @return BoundingBox object representing the font's boundaries
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:generateBoundingBox(),206,222,"/**
* Retrieves bounding box for mask.
* @return BoundingBox object or default if none found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:generateBoundingBox(),339,350,"/**
* Retrieves bounding box from PDF or TTF.
* @return BoundingBox object
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:generateBoundingBox(),264,275,"/**
* Returns bounding box for font metrics.
* @return BoundingBox object or default from genericFont
* @throws IOException if I/O error occurs during processing
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:generateBoundingBox(),547,558,"/**
* Retrieves bounding box for font or document.
* @return BoundingBox object representing the bounds
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType3Font:getHeight(int),206,240,"/**
* Calculates a value based on PDFontDescriptor properties.
* @param code identifier for the font descriptor
* @return calculated float value or default if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getBBox(),101,105,"/**
* Returns the mask rectangle of the font.
* @return PDRectangle representing the mask area
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:generateBoundingBox(),324,373,"/**
* Calculates and returns the bounding box for a font.
* @return BoundingBox object representing the font's bounds
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getImage,"org.apache.pdfbox.rendering.TilingPaint:getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",127,179,"/**
* Creates a masked image from a tiling pattern.
* @param drawer PageDrawer instance
* @param pattern PDTilingPattern to apply
* @param colorSpace PDColorSpace for rendering
* @param color PDColor for pattern
* @param xform AffineTransform for scaling and rotation
* @param anchorRect Rectangle2D defining the area
* @return BufferedImage with applied mask
*/",* Returns the pattern image in parent stream coordinates.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getAnchorRect,org.apache.pdfbox.rendering.TilingPaint:getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),201,246,"/**
* Calculates the mask rectangle for a tiling pattern.
* @param pattern the tiling pattern to process
* @return Rectangle2D representing the mask bounds
* @throws IOException if /BBox or other required fields are missing
*/","* Returns the anchor rectangle, which includes the XStep/YStep and scaling.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRectangle(),101,104,"/**
 * Retrieves rectangle from annotation.
 * @return PDRectangle object
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,resolveTransformationMatrix,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:resolveTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",733,744,"/**
 * Creates a transformation matrix for an annotation.
 * @param annotation PDF annotation object
 * @param appearanceStream appearance stream of the annotation
 * @return Matrix representing the transformation
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,84,"/**
 * Applies a mask operation with given operator and arguments.
 * @param operator the operator to apply
 * @param arguments list of operands for the operation
 * @throws MissingOperandException if there are fewer than 2 operands
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getStencilImage(java.awt.Paint),562,570,"/**
* Renders image with specified paint.
* @param paint the paint object to apply
* @return BufferedImage of rendered image
* @throws IOException if an I/O error occurs
*/","* {@inheritDoc}
     * The returned images are not cached.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRawRaster(org.apache.pdfbox.pdmodel.graphics.image.PDImage),226,261,"/**
* Creates a writable raster from a PDImage.
* @param pdImage the source image
* @return WritableRaster representation of the image
* @throws IOException if image data is invalid or cannot be processed
*/","* Extract the raw unconverted raster of the given image
     * @param pdImage  The image to get the raw raster data from
     * @return the raw raster of this image
     * @throws IOException",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",170,218,"/**
* Applies a mask to an image within a specified region.
* @param pdImage the source image
* @param region the area of the image to process
* @param subsampling factor for reducing image size
* @param colorKey array defining colors to mask
* @return masked BufferedImage or null if invalid input
*/","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param region The region of the source image to get, or null if the entire image is needed.
     *               The actual region will be clipped to the dimensions of the source image.
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value
     * of 1 meaning every pixel will be read. It must not be larger than the image width or height.
     * @param colorKey an optional color key mask
     * @return content of this image as an (A)RGB buffered image
     * @throws IOException if the image cannot be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBImage(java.awt.image.WritableRaster),177,188,"/**
* Applies mask to raster based on attributes.
* @param raster input image data
* @return masked BufferedImage
* @throws IOException if processing fails
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getMatrix,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getMatrix(),154,158,"/**
 * Returns the mask matrix of the font.
 * @return Matrix representing the font's mask
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getResources,org.apache.pdfbox.pdmodel.PDPage:getResources(),326,340,"/**
 * Retrieves or creates page resources.
 * @return PDResources object for the page
 */",* A dictionary containing any resources required by the page.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMediaBox,org.apache.pdfbox.pdmodel.PDPage:getMediaBox(),400,416,"/**
* Retrieves the MediaBox rectangle for the page.
* @return PDRectangle representing the page's MediaBox or default U.S. Letter if not found
*/","* A rectangle, expressed in default user space units, defining the boundaries of the physical medium on which the
     * page is intended to be displayed or printed.
     * 
     * @return the media box of the page",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getRotation,org.apache.pdfbox.pdmodel.PDPage:getRotation(),583,595,"/**
* Retrieves and normalizes the rotation angle of a PDF page.
* @return Normalized rotation angle in degrees, or 0 if no valid rotation is found
*/","* Returns the rotation angle in degrees by which the page should be rotated
     * clockwise when displayed or printed. Valid values in a PDF must be a
     * multiple of 90.
     *
     * @return The rotation angle in degrees in normalized form (0, 90, 180 or
     * 270) or 0 if invalid or not set at this level.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(java.lang.String,boolean)",881,884,"/**
 * Calls overloaded method with COSName.
 * @param key string key to be converted to COSName
 * @param defaultValue default boolean value if not found
 * @return result of the overloaded method call
 */","* This is a convenience method that will get the dictionary object that is expected to be a cos boolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The value converted to a boolean.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,isVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:isVolatile(),215,218,"/**
 * Checks if a specific flag is set in the COSName.
 * @return true if the flag is set, false otherwise
 */","* Get if the file is volatile.  Default: false
     *
     * @return True if the file is volatile attribute is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isHidden(),127,130,"/**
 * Checks mask status using specific parameters.
 * @return boolean indicating mask status
 */","* Shall the property be hidden?
     * 
     * @return <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDEncryption:isEncryptMetaData(),417,421,"/**
 * Checks and sets encryption metadata mask.
 * @return true if operation successful, false otherwise
 */","* Will get the EncryptMetaData dictionary info.
     * 
     * @return true if EncryptMetaData is explicitly set to false (the default is true)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaption(),296,299,"/**
 * Checks if annotation has CAP attribute set to false.
 * @return true if CAP is false, otherwise false
 */","* This will retrieve if the contents are shown as a caption or not.
     *
     * @return boolean if the content is shown as a caption.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,shouldScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:shouldScaleToFitAnnotation(),184,187,"/**
 * Checks if the PDF document has a specific mask.
 * @return true if the mask is present, false otherwise
 */","* This will tell if the icon should scale to fit the annotation bounds. Default: false
     *
     * @return A flag telling if the icon should scale.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,shouldRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:shouldRename(),122,125,"/**
 * Checks if renaming is allowed.
 * @return true if renaming is permitted, false otherwise
 */","* A flag telling if the fields imported from the template may be renamed if there are conflicts.
     *
     * @return A flag telling if the fields can be renamed.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isIsolated,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isIsolated(),94,97,"/**
* Checks mask status using specific parameters.
* @return true if mask is active, false otherwise
*/","* Returns true if this group is isolated. Isolated groups begin with the fully transparent image, non-isolated
     * begin with the current backdrop.
     * 
     * @return true if this group is isolated",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isKnockout,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isKnockout(),105,108,"/**
 * Checks mask status using specific key.
 * @return true if mask is set, false otherwise
 */","* Returns true if this group is a knockout. A knockout group blends with original backdrop, a non-knockout group
     * blends with the current backdrop.
     * 
     * @return true if this group is a knockout",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getAntiAlias(),228,231,"/**
 * Checks and returns mask setting in dictionary.
 * @return true if mask is enabled, false otherwise
 */","* This will return the AntiAlias value.
     *
     * @return the AntiAlias value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingOverprintControl(),362,365,"/**
 * Checks if the ""OP"" operator is masked.
 * @return true if ""OP"" is masked, false otherwise
 */","* This will get the overprint control.
     *
     * @return The overprint control or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAutomaticStrokeAdjustment(),498,501,"/**
 * Checks if SA is masked in the dictionary.
 * @return true if SA is masked, false otherwise
 */","* This will get the automatic stroke adjustment flag.
     *
     * @return The automatic stroke adjustment flag or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAlphaSourceFlag(),560,563,"/**
 * Checks if AIS mask is enabled.
 * @return true if AIS mask is enabled, false otherwise
 */","* This will get the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @return The alpha source flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTextKnockoutFlag(),615,618,"/**
 * Checks dictionary entry for COSName.TK.
 * @return true if entry exists and is masked, false otherwise
 */","/**
     * This will get the text knockout flag.
     *
     * @return The text knockout flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getH(),79,82,"/**
 * Checks if action with COSName.H is allowed.
 * @return true if allowed, false otherwise
 */","* A flag indicating whether to hide the annotation or show it
     *
     * @return true if annotation is hidden",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSynchronous(),123,126,"/**
 * Checks if the action is synchronous.
 * @return true if the action is synchronous, false otherwise
 */","* Gets the synchronous flag. It specifyes whether to play the sound synchronously or
     * asynchronously. When true, the reader allows no further user interaction other than canceling
     * the sound until the sound has been completely played.
     *
     * @return Whether to play the sound synchronously (true) or asynchronously (false, also the
     * default).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getRepeat(),143,146,"/**
 * Checks if an action should repeat.
 * @return true if the action repeats, false otherwise
 */","* Gets whether to repeat the sound indefinitely.
     *
     * @return Whether to repeat the sound indefinitely (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getMix(),168,171,"/**
 * Checks MIX status.
 * @return true if MIX is enabled, false otherwise
 */","* Gets the flag specifying whether to mix this sound with any other sound already playing. If
     * this flag is false, any previously playing sound shall be stopped before starting this sound;
     * this can be used to stop a repeating sound (see Repeat).
     *
     * @return whether to mix this sound with any other sound already playing (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,hasCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:hasCaption(),262,265,"/**
* Checks mask status using specified parameters.
* @return boolean indicating mask status
*/","* This will retrieve whether the text specified by the /Contents or /RC entries shall be
     * shown as a caption in the appearance of the line.
     *
     * @return boolean if the contents shall be shown as a caption (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getOpen(),156,159,"/**
 * Checks if ""Open"" mask is set.
 * @return true if ""Open"" mask is enabled, false otherwise
 */","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getPreRelease(),190,193,"/**
 * Checks if the document is marked as pre-release.
 * @return true if pre-release, false otherwise
 */","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @return true if the software module or signature handler was a pre release.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getNonEFontNoWarn(),262,265,"/**
* Masks non-EFont warnings.
* @return true if masking is successful, false otherwise
*/","* If there is a LegalPDF dictionary in the catalog
     * of the PDF file and the NonEmbeddedFonts attribute in this dictionary
     * has a non zero value, and the viewing application has a preference
     * set to suppress the display of this warning then the value of this
     * attribute will be set to true.
     *
     * @return true if NonEFontNoWarn is set to true
     * @see #setNonEFontNoWarn(boolean)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getTrustedMode(),295,298,"/**
* Checks if trusted mode is enabled in the dictionary.
* @return true if trusted mode is enabled, false otherwise
*/","* If true, the application was in trusted mode when signing took place.
     *
     * @return true if the application was in trusted mode while signing.
     *              default: false",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getNeedAppearances(),521,524,"/**
 * Checks if appearance streams are needed.
 * @return true if appearance streams are not required, false otherwise
 */","* True if the viewing application should construct the appearances of all field widgets.
     * The default value is false.
     * 
     * @return the value of NeedAppearances, false if the value isn't set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,isFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:isFlyAreaOpaque(),182,185,"/**
 * Checks a condition using helper methods.
 * @return result of the condition check
 */","* @return true if the area that shall be flown in is rectangular and opaque. Default is false. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideToolbar(),167,170,"/**
 * Checks if the toolbar is hidden.
 * @return true if toolbar is hidden, false otherwise
 */","* Get the toolbar preference.
     *
     * @return the toolbar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideMenubar(),187,190,"/**
 * Checks if menu bar is hidden.
 * @return true if menu bar is hidden, false otherwise
 */","* Get the menubar preference.
     *
     * @return the menubar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideWindowUI(),207,210,"/**
 * Checks if window UI is hidden.
 * @return true if window UI is hidden, false otherwise
 */","* Get the window UI preference.
     *
     * @return the window UI preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,fitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:fitWindow(),227,230,"/**
 * Checks if window fit preference is enabled.
 * @return true if fit window is enabled, false otherwise
 */","* Get the fit window preference.
     *
     * @return the fit window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,centerWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:centerWindow(),247,250,"/**
 * Checks if center window is enabled in preferences.
 * @return true if center window is enabled, false otherwise
 */","* Get the center window preference.
     *
     * @return the center window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,displayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:displayDocTitle(),267,270,"/**
 * Checks if document title display is enabled.
 * @return true if enabled, false otherwise
 */","* Get the display doc title preference.
     *
     * @return the display doc title preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getBitsPerComponent(),111,122,"/**
* Returns mask value based on condition.
* @return 1 if m1 is true, otherwise returns result of parameters.m2
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getColorSpace(),130,148,"/**
* Determines the color space for an inline image.
* @return PDColorSpace object representing the color space
* @throws IOException if unable to determine the color space
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getStencilImage(java.awt.Paint),371,379,"/**
* Applies paint to image.
* @param paint object defining the painting style
* @return BufferedImage with applied paint
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFlag,"org.apache.pdfbox.cos.COSDictionary:setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",497,509,"/**
* Sets or clears a bit flag for a form field.
* @param field the COSName of the form field
* @param bitFlag the bit flag to set or clear
* @param value true to set the flag, false to clear it
*/","* Sets the given boolean value at bitPos in the flags.
     *
     * @param field The COSName of the field to set the value into.
     * @param bitFlag the bit position to set the value in.
     * @param value the value the bit position should have.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",943,947,"/**
* Retrieves an integer value from a dictionary using a key.
* @param embeddedDictionary the dictionary to search within
* @param key the key for the desired value
* @param defaultValue the default value if the key is not found
* @return the integer value associated with the key, or defaultValue if not present
*/","* Get an integer from an embedded dictionary. Useful for 1-1 mappings.
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     * @param defaultValue The value if there is no embedded dictionary or it does not contain the key.
     *
     * @return The value of the embedded integer.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String),956,959,"/**
 * Calls overloaded method with COSName and default value.
 * @param key string key to process
 * @return result of the overloaded method call
 */","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName),968,971,"/**
 * Calls overloaded method with default offset.
 * @param key the COSName key to search for
 * @return result of the overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value..",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String,int)",981,984,"/**
 * Calls overloaded m2 method with COSName.
 * @param key string key to be converted to COSName
 * @param defaultValue default integer value if not found
 * @return result of the overloaded m2 method
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFlag,"org.apache.pdfbox.cos.COSDictionary:getFlag(org.apache.pdfbox.cos.COSName,int)",1153,1157,"/**
 * Checks if a specified bit flag is set in a PDF field.
 * @param field the COSName of the PDF field
 * @param bitFlag the bit flag to check
 * @return true if the bit flag is set, false otherwise
 */","* Gets the boolean value from the flags at the given bit position.
     *
     * @param field The COSName of the field to get the flag from.
     * @param bitFlag the bitPosition to get the value from.
     *
     * @return true if the number at bitPos is '1'",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,decode,"org.apache.pdfbox.filter.CCITTFaxFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",37,124,"/**
 * Decodes an input stream using CCITT fax decoding.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for the decoded result
 * @param parameters COSDictionary with decode parameters
 * @param index Index of the filter in the filter chain
 * @return DecodeResult object
 * @throws IOException if I/O error occurs during decoding
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,"org.apache.pdfbox.pdmodel.PDPageTree:get(int,org.apache.pdfbox.cos.COSDictionary,int)",295,366,"/**
* Recursively finds a page dictionary by its 1-based index.
* @param pageNum 1-based page number to find
* @param node current node in the document structure
* @param encountered count of pages encountered so far
* @return COSDictionary representing the found page or throws exception if not found
*/","* Returns the given COS page using a depth-first search.
     *
     * @param pageNum 1-based page number
     * @param node page tree node to search
     * @param encountered number of pages encountered so far
     * @return COS dictionary of the Page object
     * @throws IllegalStateException if the requested page number isn't found
     * @throws IndexOutOfBoundsException if the requested page number is higher than the page count",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getCount,org.apache.pdfbox.pdmodel.PDPageTree:getCount(),439,442,"/**
 * Retrieves the count value from the root object.
 * @return integer count or 0 if not found
 */","* Returns the number of leaf nodes (page objects) that are descendants of this root within the page tree.
     * 
     * @return the number of leaf nodes, 0 if not present",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStart(),133,136,"/**
 * Retrieves mask value using KEY_START.
 * @return integer mask value from m1 method
 */","* Returns the start value for page numbering in this page range.
     * 
     * @return a positive integer the start value for numbering.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getOrder,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getOrder(),123,126,"/**
 * Returns an integer result from calling m2 on the object returned by m1.
 * @return Integer result of m2 invocation
 */","* Get the order of interpolation between samples. Valid values are 1 and 3,
     * specifying linear and cubic spline interpolation, respectively. Default
     * is 1. See p.170 in PDF spec 1.7.
     *
     * @return order of interpolation.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRevisionNumber(),470,473,"/**
 * Returns mask value using specific parameters.
 * @return integer mask value
 */","* Returns the revision number (R).
     * 
     * @return the revision number",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getLength(),84,87,"/**
 * Retrieves mask value for encryption.
 * @return integer representing the mask length
 */","* This will return the Length entry of the crypt filter dictionary.<br><br>
     * The length in <b>bits</b> for the crypt filter algorithm. This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getVersion(),203,206,"/**
 * Masks value using COSName.V.
 * @return masked integer value
 */","* This will return the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.
     *
     * @return The encryption version to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getLength(),224,227,"/**
 * Retrieves the length mask from the dictionary.
 * @return integer value of the length mask
 */","* This will return the Length entry of the encryption dictionary.<br><br>
     * The length in <b>bits</b> for the encryption algorithm.  This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRevision(),249,252,"/**
 * Returns a masked value based on COSName and default version.
 * @return masked integer value
 */","* This will return the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.
     *
     * @return The encryption revision to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPermissions(),407,410,"/**
 * Retrieves mask value from dictionary.
 * @return integer mask value
 */","* This will get the permissions bit mask.
     *
     * @return The permissions bit mask.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getJustification(),187,190,"/**
 * Masks data using annotation method.
 * @return masked string result
 */","* This will get the form of quadding (justification) of the annotation text.
     * 
     * @return The quadding of the text.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDFont:getWidth(int),255,311,"/**
* Retrieves character width for a given code.
* @param code character code
* @return width of the character or default value if not found
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFlags(),386,393,"/**
* Returns masked flag value.
* @return integer representing masked flag
*/","* This will get the font flags.
     *
     * @return The font flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDSimpleFont:hasExplicitWidth(int),452,464,"/**
 * Checks if a character code is within the defined range.
 * @param code character code to check
 * @return true if code is valid, false otherwise
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,create,"org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:create(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",48,64,"/**
* Creates a PDAbstractPattern from a COSDictionary.
* @param dictionary PDF dictionary containing pattern information
* @param resourceCache cache for resources
* @return PDAbstractPattern object based on pattern type
* @throws IOException if unknown pattern type is encountered
*/","* Create the correct PD Model pattern based on the COS base pattern.
     * @param dictionary the COS pattern dictionary
     * @param resourceCache the resource cache, may be null, useful for tiling patterns.
     * @return the newly created pattern object
     * @throws IOException If we are unable to create the PDPattern object.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getPaintType(),110,113,"/**
 * Retrieves mask value using specified parameters.
 * @return integer result of mask operation
 */","* This will return the paint type.
     * @return The paint type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getTilingType(),128,131,"/**
 * Retrieves tiling type mask value.
 * @return integer representing tiling type
 */","* This will return the tiling type.
     * @return The tiling type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,create,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:create(org.apache.pdfbox.cos.COSDictionary),274,305,"/**
* Creates a PDShading object based on the given dictionary.
* @param shadingDictionary dictionary containing shading details
* @return PDShading object or throws IOException for unknown types
*/","* Create the correct PD Model shading based on the COS base shading.
     *
     * @param shadingDictionary the COS shading dictionary
     * @return the newly created shading resources object
     * @throws IOException if we are unable to create the PDShading object",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerFlag(),69,72,"/**
 * Retrieves mask value using COSName.BITS_PER_FLAG.
 * @return integer mask value
 */","* The bits per flag of this shading. This will return -1 if one has not
     * been set.
     *
     * @return The number of bits per flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getVerticesPerRow(),65,68,"/**
 * Returns the mask value using specified parameters.
 * @return integer result from method chain
 */","* The vertices per row of this shading. This will return -1 if one has not
     * been set.
     *
     * @return the number of vertices per row",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerComponent(),60,68,"/**
* Returns the number of bits per color component.
* Initializes if not already set.
* @return int value representing bits per color component
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerCoordinate(),87,95,"/**
* Returns the number of bits per coordinate.
* Initializes if not already set.
* @return int value representing bits per coordinate
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFlags(),77,80,"/**
 * Retrieves mask value for action flags.
 * @return integer representing mask value
 */","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFlags(),103,106,"/**
 * Retrieves mask flags.
 * @return integer representing mask flags
 */","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getPageNumber(),149,152,"/**
 * Returns mask value for PDF property.
 * @return integer mask value
 */","* If the value in the /P entry is an integer, this will get the page number (zero-based) in the
     * current document containing the file attachment annotation.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationIndex(),212,215,"/**
 * Retrieves mask value from dictionary.
 * @return integer mask value or -1 if not found
 */","* If the value in the /A entry is an integer, this will get the index (zero-based) of the
     * annotation in the /Annots array of the page specified by the /P entry.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationFlags(),292,295,"/**
 * Returns masked value from function.
 * @return integer result of mask operation
 */","* This will get the flags for this field.
     * 
     * @return flags The set of flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getQ(),125,128,"/**
 * Returns the result of masking operation.
 * @return integer result of the mask function
 */","* This will get the 'quadding' or justification of the text to be displayed.
     * <br>
     * 0 - Left (default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * Please see the QUADDING_CONSTANTS in {@link PDVariableText }.
     *
     * @return The justification of the text strings.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRotation(),66,69,"/**
 * Returns mask value from m2 function.
 * @return integer mask value
 */","* This will retrieve the rotation of the annotation widget. It must be a multiple of 90. Default is 0
     * 
     * @return the rotation",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,isTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:isTimestampRequired(),86,89,"/**
* Checks if the field type is masked.
* @return true if the field type is masked, false otherwise
*/","* Indicates if a timestamp is required.
     * 
     * @return true if a timestamp is required",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOpenCount(),224,227,"/**
 * Returns mask value using COSName.COUNT.
 * @return integer result from m2 method
 */","* Get the number of open nodes or a negative number if this node is closed.
     * See PDF Reference 32000-1:2008 table 152 and 153 for more details. This
     * value is updated as you append children and siblings.
     *
     * @return The Count attribute of the outline dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getTextAlign,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getTextAlign(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),648,652,"/**
* Retrieves mask value from annotation widget.
* @param widget annotation widget instance
* @return integer mask value
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getQ(),611,614,"/**
 * Retrieves mask value from dictionary.
 * @return integer mask value
 */","* This will get the document-wide default value for the quadding/justification of variable text
     * fields. 
     * <p>
     * 0 - Left(default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * See the QUADDING constants of {@link PDVariableText}.
     *
     * @return The justification of the variable text fields.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createChoiceSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",97,109,"/**
* Determines and creates a PDField based on combo box flag.
* @param form the PDAcroForm containing the field
* @param field the COSDictionary representing the field
* @param parent the PDNonTerminalField parent of the field
* @return PDComboBox if combo flag is set, otherwise PDListBox
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createButtonSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",111,130,"/**
 * Creates a button based on field flags.
 * @param form PDF AcroForm containing the field
 * @param field COSDictionary representing the field
 * @param parent parent non-terminal field
 * @return PDField instance (RadioButton, PushButton, or CheckBox)
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,getTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:getTopIndex(),59,62,"/**
 * Retrieves mask value using specific constants and index.
 * @return integer result from nested method calls
 */","* This will get the top index ""TI"" value.
     *
     * @return the top index, default value 0.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldFlags(),68,73,"/**
 * Retrieves mask value using COSName.FF.
 * @return integer result from m2 method
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,process,"org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,62,"/**
 * Applies an inline image to the PDF graphics context.
 * @param operator Operator containing image data
 * @param operands List of COSBase operands for the image
 * @throws IOException if I/O error occurs during processing
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName),239,242,"/**
 * Retrieves COSObjects of a specified type.
 * @param type the COSName type to filter by
 * @return list of COSObjects matching the type
 */","* This will get all dictionaries objects by type.
     *
     * @param type The type of the object.
     *
     * @return This will return all objects with the specified type.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPages,org.apache.pdfbox.pdmodel.PDDocument:getPages(),1246,1249,"/**
 * Retrieves page tree from document.
 * @return PDPageTree representing document pages
 */","* Returns the page tree.
     * 
     * @return the page tree",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int),270,274,"/**
 * Calls overloaded m2 with code and default GlyphList.
 * @param code input code
 * @return result of m2 with code and default GlyphList
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.File),74,89,"/**
* Parses an FDF file and returns the FDFDocument.
* @param file input FDF file to parse
* @return FDFDocument object
* @throws IOException if an I/O error occurs
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to
     * read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.InputStream),102,109,"/**
 * Parses an InputStream to create a FDFDocument.
 * @param input the input stream containing FDF data
 * @return a FDFDocument object parsed from the input
 * @throws IOException if there is an I/O error during parsing
 */","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document. To read the stream
     * {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(),134,137,"/**
 * Creates a PDF document.
 * @param booleanParam indicates whether to include default content
 * @return PDDocument object
 * @throws IOException if an I/O error occurs
 */","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing. Lenient mode is active by default.
     *
     * @return the populated PDDocument
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removePageResourceFromCache,org.apache.pdfbox.pdmodel.PDPage:removePageResourceFromCache(),124,132,"/**
* Masks resources if cache is available.
*/","* Remove all page resources from the cache to avoid relying on the implementation of the Cache. Does make sense
     * after processing a page.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName),191,194,"/**
 * Retrieves a color space by name.
 * @param name the COSName of the color space
 * @return PDColorSpace object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the color space resource with the given name, or null if none exists.
     * 
     * @param name Name of the color space resource.
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isAllowedCache,org.apache.pdfbox.pdmodel.PDResources:isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject),453,480,"/**
* Determines if an XObject should be masked based on its color space.
* @param xobject the XObject to check
* @return false if the XObject's color space matches a default mask condition, true otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.font.PDFont),596,599,"/**
 * Creates a COSName for a PDF font.
 * @param font PDFont object to create COSName for
 * @return COSName representing the font
 */","* Adds the given font to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param font the font to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),608,611,"/**
* Converts PDColorSpace to COSName.
* @param colorSpace color space object
* @return corresponding COSName for the color space
*/","* Adds the given color space to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param colorSpace the color space to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),620,623,"/**
* Creates a COSName with extended graphics state.
* @param extGState extended graphics state object
* @return COSName representing the graphics state
*/","* Adds the given extended graphics state to the resources of the current page and returns the
     * name for the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param extGState the extended graphics state to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),632,635,"/**
 * Creates a COSName for shading.
 * @param shading PDShading object
 * @return COSName associated with the shading
 */","* Adds the given shading to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param shading the shading to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern),644,647,"/**
 * Generates a COSName for a pattern.
 * @param pattern PDAbstractPattern object
 * @return COSName associated with the pattern
 */","* Adds the given pattern to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param pattern the pattern to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),656,666,"/**
* Retrieves COSName based on property type.
* @param properties PDF property list
* @return COSName corresponding to the property type
*/","* Adds the given property list to the resources of the current page and returns the name for
     * the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param properties the property list to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),675,678,"/**
 * Retrieves COSName for image XObject.
 * @param image PDImageXObject to process
 * @return COSName associated with the image
 */","* Adds the given image to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param image the image to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),687,690,"/**
 * Retrieves COSName for a form.
 * @param form PDFormXObject instance
 * @return COSName associated with the form
 */","* Adds the given form to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param form the form to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",700,703,"/**
* Calls overloaded method with predefined COSName.
* @param xobject PDF object to process
* @param prefix string prefix for naming
* @return COSName result from processing
*/","* Adds the given XObject to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param xobject the XObject to add
     * @param prefix the prefix to be used when creating the resource name
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,insertInnerFormToHolderResources,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",281,288,"/**
 * Inserts an inner form into a holder form's resources.
 * @param innerForm the form to be inserted
 * @param holderFormResources resources of the form holding the inner form
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createBackgroundLayerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",328,339,"/**
 * Creates a new form object and adds it to the given resources.
 * @param innerFormResource PDResources where the new form is added
 * @param bbox bounding box defining the form's size
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFile(),225,233,"/**
* Retrieves embedded file from PDF.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileDos(),261,269,"/**
* Retrieves embedded file from DOS entry.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded dos file.
     *
     * @return The embedded dos file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileMac(),276,284,"/**
 * Retrieves a PDF embedded file.
 * @return PDEmbeddedFile object or null if not found
 */","* Get the embedded Mac file.
     *
     * @return The embedded Mac file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnix(),291,299,"/**
* Retrieves an embedded file using the UNIX key.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded Unix file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnicode(),306,314,"/**
 * Retrieves embedded file from a PDF document.
 * @return PDEmbeddedFile object or null if not found
 */","* Get the embedded unicode file.
     *
     * @return The embedded unicode file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",562,571,"/**
* Configures AES encryption for a PDF document.
* @param encryptionDictionary dictionary to configure encryption settings
* @param aesVName name of the AES encryption method
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",414,431,"/**
* Configures encryption for PDF using AES.
* @param encryptionDictionary PDF encryption settings
* @param aesVName AES version name
* @param recipients Array of recipient byte arrays
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidthFromFont(int),184,193,"/**
* Masks character code and returns mask value.
* @param code character identifier
* @return float mask value or 0 if not applicable
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),304,346,"/**
* Checks if an optional content group is masked.
* @param group the optional content group to check
* @return true if the group is not masked, false otherwise
*/","* Indicates whether an optional content group is enabled.
     * @param group the group object
     * @return true if the group is enabled",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(java.lang.String,boolean)",374,392,"/**
* Enables or disables a group in the PDF document.
* @param groupName name of the group to modify
* @param enable flag indicating whether to enable or disable the group
* @return true if modification was successful, false otherwise
*/","* Enables or disables all optional content groups with the given name.
     *
     * @param groupName the group name
     * @param enable true to enable, false to disable
     * @return true if at least one group with this name already had an on or off setting, false
     * otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearance(),477,489,"/**
* Retrieves or creates a normal appearance entry.
* @return PDAppearanceEntry object for normal appearance
*/","* Get the annotations normal appearance.
     * 
     * <p>
     * This will get the annotations normal appearance. If this is not existent
     * an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the normal appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRolloverAppearance(),195,207,"/**
* Retrieves or creates a rollover appearance entry.
* @return PDAppearanceEntry object for rollover state
*/","* Get the annotations rollover appearance.
     * 
     * <p>
     * This will get the annotations rollover appearance. If this is not
     * existent an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the rollover appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDownAppearance(),172,184,"/**
* Retrieves or creates a PDAppearanceEntry for a pressed state.
* @return PDAppearanceEntry object for the pressed state
*/","* Get the annotations down appearance.
     * 
     * <p>
     * This will get the annotations down appearance. If this is not existent an
     * empty appearance entry will be created.
     * 
     * @return the appearance entry representing the down appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(int),178,190,"/**
* Masks a field at the specified index.
* @param index position of the field to mask
* @throws IOException if an I/O error occurs
*/","* Set the selected option given its index, and try to update the visual appearance.
     * 
     * NOTE: this method is only usable if there are export values and used for 
     * radio buttons with FLAG_RADIOS_IN_UNISON not set.
     * 
     * @param index index of option to be selected
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the index provided is not a valid index.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,prepend,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),141,155,"/**
* Adds a child outline item.
* @param newChild the new outline item to add
*/","* Prepends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,append,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),119,133,"/**
* Adds a child to the outline.
* @param newChild the new outline item to add
*/","* Appends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareVisibleSignature,"org.apache.pdfbox.pdmodel.PDDocument:prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",557,598,"/**
 * Masks visual signature in PDF form.
 * @param firstWidget annotation widget to mask
 * @param acroForm form containing the signature field
 * @param visualSignature document with visual signature data
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,findSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",483,500,"/**
* Finds a matching PDSignatureField in the given iterator.
* @param fieldIterator iterator over PDField objects
* @param sigObject PDSignature object to match
* @return matched PDSignatureField or null if not found
*/","* Search acroform fields for signature field with specific signature dictionary.
     * 
     * @param fieldIterator iterator on all fields.
     * @param sigObject signature object (the /V part).
     * @return a signature field if found, or null if none was found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getAppearance,org.apache.pdfbox.contentstream.PDFStreamEngine:getAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),466,469,"/**
 * Retrieves the appearance stream of an annotation.
 * @param annotation PDF annotation object
 * @return Appearance stream associated with the annotation
 */","* Returns the appearance stream to process for the given annotation. May be used to render
     * a specific appearance such as ""hover"".
     *
     * @param annotation The current annotation.
     * @return The stream to process.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,addFontFromWidget,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:addFontFromWidget(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation)",153,190,"/**
 * Masks font resources from annotation to AcroForm.
 * @param acroFormResources resources of the AcroForm
 * @param annotation PDF annotation with appearance stream
 */","* Add font resources from the widget to the AcroForm to make sure embedded fonts are being used
     * and not added by ensureFontResources potentially using a fallback font.
     * 
     * @param acroFormResources AcroForm default resources, should not be null.
     * @param annotation annotation, should not be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValues(),316,333,"/**
* Masks values based on certain conditions.
* @return Set of masked string values
*/","* Get the values to set individual buttons within a group to the on state.
     * 
     * <p>The On value could be an arbitrary string as long as it is within the limitations of
     * a PDF name object. The Off value shall always be 'Off'. If not set or not part of the normal
     * appearance keys 'Off' is the default</p>
     *
     * @return the potential values setting the check box to the On state. 
     *         If an empty Set is returned there is no appearance definition.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValue(int),338,346,"/**
 * Masks a widget annotation at the specified index.
 * @param index position of the widget in the list
 * @return masked string representation or empty if invalid index
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,isChecked,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:isChecked(),64,67,"/**
* Checks if condition using nested method calls.
* @return true if condition met, false otherwise
*/","* This will tell if this radio button is currently checked or not.
     * This is equivalent to calling {@link #getValue()}.
     *
     * @return true If this field is checked.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,check,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:check(),74,77,"/**
 * Calls two methods sequentially, handling potential I/O exceptions.
 * @throws IOException if an I/O error occurs during execution
 */","* Checks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,indexOf,org.apache.pdfbox.pdmodel.PDPageTree:indexOf(org.apache.pdfbox.pdmodel.PDPage),386,394,"/**
* Searches for a pattern in a PDF page.
* @param page the PDPage to search
* @return index of found pattern or -1 if not found
*/","* Returns the index of the given page, or -1 if it does not exist.
     *
     * @param page The page to search for.
     * @return the zero-based index of the given page, or -1 if the page is not found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneIDTree,"org.apache.pdfbox.multipdf.Splitter:cloneIDTree(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",252,278,"/**
 * Masks structure elements from source tree to destination tree.
 * @param srcStructTree source PDF structure tree root
 * @param destStructTree destination PDF structure tree root
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setParent,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),93,97,"/**
 * Sets parent node and initializes processing.
 * @param parentNode the parent node to set
 */","* Sets the parent to the given node.
     * 
     * @param parentNode the node to be set as parent",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setKids(java.util.List),138,158,"/**
* Updates node with children or clears related fields.
* @param kids list of child nodes
*/","* Set the children of this named tree.
     *
     * @param kids The children of this named tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNames(Map)} with a map and pass a single
     * element list here.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setNames(java.util.Map),307,327,"/**
 * Masks names by setting them in a COSArray.
 * @param names map of names to be masked
 */","* Set the names for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param names map of names to objects, or <code>null</code> for nothing.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,98,"/**
* Initializes page labels from a document and dictionary.
* @param document PDF document containing the pages
* @param dict COSDictionary with page label information
* @throws IOException if an I/O error occurs
*/","* Creates an page label dictionary for a document using the information in
     * the given COS dictionary.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @param dict
     *            an existing page label dictionary
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)
     * @throws IOException
     *             If something goes wrong during the number tree conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeForParameter(int),191,200,"/**
* Retrieves a range from encoded values.
* @param paramNum index of the parameter
* @return PDRange object or null if not found
*/","* Get the encode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncoding(),95,113,"/**
* Sets up encoding and glyph list based on dictionary.
* @throws IOException if I/O error occurs during setup
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(),44,47,"/**
 * Constructs a new PDCalGray instance.
 * Initializes with the COSName.CALGRAY constant.
 */",* Create a new CalGray color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(),39,42,"/**
 * Constructs a new PDCalRGB instance.
 */",* Creates a new CalRGB color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(),41,44,"/**
 * Constructs a new PDLab instance.
 */",* Creates a new Lab color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDCalGray from a COSArray.
 * @param array underlying COSArray
 */","* Creates a new CalGray color space using the given COS array.
     *
     * @param array the COS array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(org.apache.pdfbox.cos.COSArray),48,51,"/**
 * Initializes RGB color with COSArray.
 * @param rgb array containing RGB values
 */","* Creates a new CalRGB color space using the given COS array.
     * @param rgb the cos array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a new PDLab from a COSArray.
 * @param lab the COSArray to initialize the PDLab with
 */","* Creates a new Lab color space from a PDF array.
     * @param lab the color space array",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",69,129,"/**
* Initializes axial shading context.
* @param shading PDShadingType2 object
* @param colorModel Color model for rendering
* @param xform Affine transform for device space
* @param matrix Matrix for shading space to user space
* @param deviceBounds Device bounds rectangle
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",71,135,"/**
* Initializes a RadialShadingContext with specified parameters.
* @param shading PDShadingType3 object defining radial shading
* @param colorModel ColorModel for rendering colors
* @param xform AffineTransform for device space to user space conversion
* @param matrix Matrix for additional transformations
* @param deviceBounds Rectangle representing the device bounds
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,58,"/**
* Initializes a new TriangleBasedShadingContext.
* @param shading PDShading object representing the shading
* @param cm ColorModel for color conversion
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix defining the shading pattern
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if there is an error getting the color space or doing background color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",50,82,"/**
* Initializes a Type1ShadingContext.
* @param shading PDShadingType1 object
* @param colorModel ColorModel for the shading
* @param xform AffineTransform for the shading
* @param matrix Matrix defining the shading space
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getDecodeForParameter(int),157,166,"/**
* Retrieves a range from decode values.
* @param paramNum index for the range
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getDecodeForParameter(int),157,166,"/**
* Creates a PDRange from decode values.
* @param paramNum index for range creation
* @return PDRange object or null if invalid
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getColor(),96,99,"/**
 * Retrieves color from annotation.
 * @return PDColor object representing the color
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String,java.lang.String)",156,159,"/**
 * Masks a given string using a default value if needed.
 * @param name the string to mask
 * @param defaultValue the default value to use for masking
 * @return masked string or original if no masking is applied
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the name value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getStyle(),111,114,"/**
 * Masks a string using solid style.
 * @return masked string
 */","* This will retrieve the border effect, see the STYLE_* constants for valid values.
     *
     * @return the effect of the border or {@link #STYLE_SOLID} if none is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:generateNormalAppearance(),48,90,"/**
 * Masks annotation with icon based on attachment name.
 * @throws IOException if an I/O error occurs while processing the content stream
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setBorderLine,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",206,229,"/**
* Applies a mask to the PDF border based on style and width.
* @param lineWidth thickness of the line
* @param bs border style dictionary
* @param border COSArray representing border properties
* @throws IOException if an I/O error occurs
*/","* Convenience method for annotations: sets the line with and dash style.
     *
     * @param lineWidth The line width.
     * @param bs The border style, may be null.
     * @param border The border array, must have at least three entries. This is
     * only used if the border style is null.
     *
     * @throws IOException If there is an error writing to the content stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,getAnnotationBorder,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary)",38,87,"/**
* Creates an AnnotationBorder from annotation and borderStyle.
* @param annotation PDF annotation object
* @param borderStyle optional border style dictionary
* @return AnnotationBorder with width and dash array if applicable
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocument,org.apache.pdfbox.multipdf.Splitter:createNewDocument(),743,783,"/**
* Creates a new PDDocument with masked information.
* @return Masked PDDocument object
*/","* Create a new document to write the split contents to.
     *
     * @return the newly created PDDocument. 
     * @throws IOException If there is an problem creating the new document.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setVersion,org.apache.pdfbox.pdmodel.PDDocument:setVersion(float),1449,1473,"/**
* Updates PDF version if new version is higher.
* @param newVersion the target version to update to
*/","* Sets the PDF specification version for this document.
     *
     * @param newVersion the new PDF version (e.g. 1.4f)
     *",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:toString(),109,125,"/**
* Constructs a detailed string representation.
* @return formatted string with attributes
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:toString(),127,131,"/**
 * Overrides and appends user properties to base method's result.
 * @return String containing base method result and user properties
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureTreeRoot(),739,751,"/**
 * Retrieves the root structure tree node.
 * @return PDStructureTreeRoot if found, otherwise null
 */","* Returns the structure tree root.
     * 
     * @return the structure tree root",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getKids(),109,133,"/**
* Processes and returns a list of objects from a COSBase structure.
* @return List of processed objects or empty list if none found
*/","* Returns a list of objects for the kids (K).
     * 
     * @return a list of objects for the kids, never null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getEncryption,org.apache.pdfbox.pdmodel.PDDocument:getEncryption(),825,832,"/**
* Returns document encryption or initializes it.
* @return PDEncryption object for the document
*/","* This will get the encryption dictionary for this document. This will still return the parameters if the document
     * was decrypted. As the encryption architecture in PDF documents is pluggable this returns an abstract class,
     * but the only supported subclass at this time is a
     * PDStandardEncryption object.
     *
     * @return The encryption dictionary(most likely a PDStandardEncryption object)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,prepareDecryption,org.apache.pdfbox.pdfparser.COSParser:prepareDecryption(),1197,1245,"/**
* Initializes encryption and decryption setup.
* @throws IOException on I/O errors during setup
*/","* Prepare for decryption.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException if something went wrong",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readEncodingFromFont(),263,315,"/**
* Determines encoding based on font properties.
* @return Encoding object
* @throws IOException if I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,encode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:encode(int),393,443,"/**
 * Retrieves the mask for a given Unicode character.
 * @param unicode the Unicode character to process
 * @return byte array representing the mask or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(int),473,500,"/**
* Generates a GeneralPath for a given code.
* @param code character code
* @return GeneralPath object representing the character shape
* @throws IOException if glyf table is missing or other I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType0Font:readEncoding(),321,355,"/**
* Initializes CMap and checks font encoding.
* @throws IOException if required CMap is missing or invalid
*/","* Reads the font's Encoding entry, which should be a CMap name/stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDType0Font:toUnicode(int),535,611,"/**
 * Retrieves Unicode character for a given code point.
 * @param code code point identifier
 * @return Unicode string or null if not found
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,encode,org.apache.pdfbox.pdmodel.font.PDType1CFont:encode(int),389,412,"/**
 * Retrieves the byte representation of a Unicode character.
 * @param unicode the Unicode character to process
 * @return byte array representing the character in the font encoding
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getStringWidth(java.lang.String),414,436,"/**
 * Calculates the total width of a string using embedded CFF font.
 * @param string input text to measure
 * @return total width in font units or 0 if no CFF font is available
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength1,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength1(byte[],int)",292,318,"/**
* Calculates an offset based on byte array and length.
* @param bytes input byte array
* @param length1 initial length value
* @return adjusted offset or original length
*/","* Some Type 1 fonts have an invalid Length1, which causes the binary segment of the font
     * to be truncated, see PDFBOX-2350, PDFBOX-3677.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @return repaired Length1 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength2,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength2(byte[],int,int)",355,364,"/**
* Validates and returns the mask length for font processing.
* @param bytes input byte array
* @param length1 initial length of the font data
* @param length2 proposed mask length to validate
* @return valid mask length or adjusted length if invalid
*/","* Some Type 1 fonts have an invalid Length2, see PDFBOX-3475. A negative /Length2 brings an
     * IllegalArgumentException in Arrays.copyOfRange(), a huge value eats up memory because of
     * padding.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @param length2 Length2 from the Type 1 stream
     * @return repaired Length2 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType1Font:encode(int),393,448,"/**
* Converts Unicode to font-specific byte representation.
* @param unicode input Unicode character
* @return byte array representing the character in the font
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,initColorConversionCache,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:initColorConversionCache(org.apache.pdfbox.pdmodel.PDResources),111,175,"/**
* Masks resources with colorant information.
* @param resources PDF document resources
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getFormattedValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getFormattedValue(java.lang.String),274,295,"/**
 * Masks value based on field actions.
 * @param apValue original value to mask
 * @return masked value or original if no masking is applied
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getFractionalDisplay(),149,152,"/**
 * Masks a function with specific parameters.
 * @return masked string result
 */","* This will return the value for the manner to display a fractional value.
     *  
     * @return the manner to display a fractional value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getThousandsSeparator(),221,224,"/**
 * Masks data using specified parameters.
 * @return masked string result
 */","* This will return the text to be used between orders of thousands in display of numerical values.
     * 
     * @return thousands separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDecimalSeparator(),241,244,"/**
 * Masks a string using RD and . as separators.
 * @return masked string
 */","* This will return the text to be used as the decimal point in displaying numerical values.
     * 
     * @return decimal separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPrefixString(),260,263,"/**
 * Masks a string using specified parameters.
 * @return masked string result
 */","* This will return the text to be concatenated to the left of the label specified by U.
     * @return label prefix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelSuffixString(),279,282,"/**
* Masks a string using specified characters.
* @return masked string result
*/","* This will return the text to be concatenated after the label specified by U.
     * 
     * @return label suffix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPositionToValue(),299,302,"/**
 * Masks data using specified label suffix.
 * @return masked data string
 */","* This will return a value indicating the ordering of the label specified by U to the calculated unit value.
     * 
     * @return label position",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",766,769,"/**
 * Calls overloaded method with default null value.
 * @param embedded name of the embedded object
 * @param key key to look up
 * @return result from overloaded method
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractFontDetails,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractFontDetails(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),432,489,"/**
 * Parses the default appearance string of a text annotation.
 * @param annotation PDAnnotationFreeText object to process
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontMatches,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",553,644,"/**
* Matches fonts based on descriptor and CID system info.
* @param fontDescriptor font descriptor for comparison
* @param cidSystemInfo CID system info for filtering
* @return PriorityQueue of FontMatch objects
*/","* Returns a list of matching fonts, scored by suitability. Positive scores indicate matches
     * for certain attributes, while negative scores indicate mismatches. Zero scores are neutral.
     * 
     * @param fontDescriptor FontDescriptor, always present.
     * @param cidSystemInfo Font's CIDSystemInfo, may be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,toString,org.apache.pdfbox.pdmodel.interactive.form.PDField:toString(),472,477,"/**
* Generates a masked string with type and value.
* @return formatted string containing type and value
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",852,855,"/**
 * Calls overloaded m1 method with default null value.
 * @param embedded name of embedded resource
 * @param key specific key to look for
 * @return Calendar object or null
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream)",49,53,"/**
 * Calls another overloaded method with default decode options.
 * @param filters list of filters to apply
 * @param parameters dictionary of parameters for decoding
 * @param in input stream to be decoded
 * @return COSInputStream result of decoding
 * @throws IOException if an I/O error occurs
 */","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),169,173,"/**
* Creates a COSInputStream with specified decode options.
* @param options decoding options
* @return COSInputStream instance
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFObjectStreamParser:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",49,73,"/**
 * Initializes a PDFObjectStreamParser with a COSStream and document.
 * @param stream the COSStream to parse
 * @param document the COSDocument associated with the stream
 * @throws IOException if required entries are missing or invalid
 */","* Constructor.
     *
     * @param stream The stream to parse.
     * @param document The document for the current parsing.
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:<init>(org.apache.pdfbox.cos.COSStream),52,64,"/**
* Initializes a PDFXrefStreamParser with the given COSStream.
* @param stream PDF cross-reference stream to parse
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param stream The stream to parse.
     *
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.PDPage:getContentsForRandomAccess(),259,302,"/**
 * Retrieves content stream for page.
 * @return RandomAccessRead object or empty buffer if not found
 * @throws IOException if I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",74,166,"/**
 * Initializes a PDCIDFontType0 from a PDF dictionary and parent font.
 * Handles embedded CFF fonts or substitutes if not found.
 * @param fontDictionary the font dictionary
 * @param parent the parent PDType0Font
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * 
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",83,155,"/**
 * Constructs a PDCIDFontType2 font.
 * @param fontDictionary PDF dictionary containing font data
 * @param parent PDType0Font parent font
 * @param trueTypeFont TrueTypeFont instance, may be null
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @param trueTypeFont The true type font used to create the parent font
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,readCMap,org.apache.pdfbox.pdmodel.font.PDFont:readCMap(org.apache.pdfbox.cos.COSBase),208,228,"/**
* Retrieves CMap from a COSBase object.
* @param base COSBase object containing the CMap data
* @return CMap object
* @throws IOException if base is neither COSName nor COSStream
*/","* Reads a CMap given a COS Stream or Name. May return null if a predefined CMap does not exist.
     *
     * @param base COSName or COSStream
     * @return the CMap if present
     * 
     * @throws IOException if the CMap could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontHeader,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontHeader(org.apache.pdfbox.cos.COSDictionary),324,360,"/**
 * Reads the font file header from a given font descriptor.
 * @param fontDescriptor dictionary containing font information
 * @return byte array of the font file header or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentsForRandomAccess(),82,86,"/**
 * Returns a random access read stream.
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentsForRandomAccess(),163,167,"/**
 * Returns a random access read object.
 * @return RandomAccessRead instance from m2()
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentsForRandomAccess(),182,191,"/**
 * Retrieves a random access read object for masked data.
 * @return RandomAccessRead object or null if not applicable
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(java.util.List),925,929,"/**
 * Retrieves an input stream with filters applied.
 * @param stopFilters list of filter strings to apply
 * @return InputStream with filters processed
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getPositionVector(int),288,298,"/**
* Fetches vector by code, using mask functions.
* @param code input code for masking
* @return Vector object or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getWidth(int),511,515,"/**
 * Delegates font processing to descendant.
 * @param code character code to process
 * @return processed result as float
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,78,"/**
* Masks content in a PDF document.
* @param operator the PDF operator
* @param operands list of operands for masking operation
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,75,"/**
* Applies a mask operation to PDF content.
* @param operator the PDF operator being processed
* @param operands list of operands for the operation
* @throws IOException if an I/O error occurs during processing
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenVisibilityExpression(org.apache.pdfbox.cos.COSArray),2187,2209,"/**
* Evaluates a mask operation on an array.
* @param veArray COSArray containing mask operations
* @return true if operation is valid and successful, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a new PDAnnotationCircle from a COSDictionary.
 * @param field dictionary containing annotation data
 */","* Creates a circle annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a square annotation from a COS dictionary.
 * @param field PDF dictionary containing annotation properties
 */","* Creates a square annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a highlight annotation from a COS dictionary.
 * @param dict the COS dictionary representing the highlight annotation
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a new PDAnnotationSquiggly annotation.
 * @param dict The COS dictionary containing the annotation data.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a new PDAnnotationStrikeout from a COSDictionary.
 * @param dict dictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs an underline annotation from a COS dictionary.
 * @param dict the COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,transferDict,"org.apache.pdfbox.multipdf.LayerUtility:transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",289,300,"/**
* Copies filtered entries from one dictionary to another.
* @param orgDict source dictionary
* @param targetDict destination dictionary
* @param filter set of keys to exclude
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSStream,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSStream(org.apache.pdfbox.cos.COSStream),144,166,"/**
* Applies mask to a given COSStream.
* @param stream input COSStream to be masked
* @return new COSStream with applied mask
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMergeCOSBase,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMergeCOSBase(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",204,236,"/**
 * Masks source base onto target base.
 * @param source source COSBase object
 * @param target target COSBase object
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeKEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",968,1039,"/**
 * Masks PDF structure tree by cloning and modifying entries.
 * @param cloner utility for cloning PDF objects
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 * @throws IOException if an I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeIDTree,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",1084,1127,"/**
 * Masks PDF structure elements from source to destination.
 * @param cloner utility for cloning PDF objects
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 * @throws IOException if I/O error occurs
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeRoleMap,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.multipdf.PDFCloneUtility)",1189,1220,"/**
* Masks role map from source to destination structure tree.
* @param srcStructTree source structure tree root
* @param destStructTree destination structure tree root
* @param cloner utility for cloning PDF objects
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOutputIntents,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOutputIntents(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",1341,1369,"/**
* Masks output intents from source catalog to destination catalog.
* @param srcCatalog source PDF document catalog
* @param destCatalog destination PDF document catalog
* @param cloner utility for cloning PDF objects
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",1427,1478,"/**
 * Recursively clones PDF structure tree entries.
 * @param cloner utility for cloning PDF objects
 * @param parentTreeEntry current entry in the structure tree
 * @param objMapping mapping of original to cloned objects
 * @throws IOException if an I/O error occurs
 */","* Update the Pg and Obj references to the new (merged) page.
     *
     * @param parentTreeEntry
     * @param objMapping mapping between old and new references",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeInto,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Set)",1546,1555,"/**
 * Copies entries from source dictionary to destination dictionary, excluding specified names.
 * @param src source COSDictionary
 * @param dst destination COSDictionary
 * @param cloner PDFCloneUtility for cloning objects
 * @param exclude set of COSName to exclude from copying
 * @throws IOException if an I/O error occurs during cloning
 */","* This will add all of the dictionaries keys/values to this dictionary, but
     * only if they are not in an exclusion list and if they don't already
     * exist. If a key already exists in this dictionary then nothing is
     * changed.
     *
     * @param src The source dictionary to get the keys/values from.
     * @param dst The destination dictionary to merge the keys/values into.
     * @param exclude Names of keys that shall be skipped.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBody,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBody(org.apache.pdfbox.cos.COSDocument),426,449,"/**
* Masks document content by encrypting or modifying fields.
* @param doc the PDF document to process
* @throws IOException if an I/O error occurs
*/","* This will write the body of the document.
     *
     * @param doc The document to write the body for.
     *
     * @throws IOException If there is an error writing the data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyPolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyPolygon(float[][]),104,125,"/**
 * Masks a path using polygon points.
 * @param path array of float arrays representing coordinates
 */","* Creates a cloudy border for a Polygon annotation.
     *
     * @param path polygon path
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyRectangleImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyRectangleImpl(double,double,double,double,boolean)",225,271,"/**
* Applies a mask to a specified rectangular area.
* @param left x-coordinate of the rectangle's left boundary
* @param bottom y-coordinate of the rectangle's bottom boundary
* @param right x-coordinate of the rectangle's right boundary
* @param top y-coordinate of the rectangle's top boundary
* @param isEllipse true if masking should be elliptical, false for rectangular
* @throws IOException if an I/O error occurs during processing
*/","* Cloudy rectangle implementation is based on converting the rectangle
     * to a polygon.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFileObject,"org.apache.pdfbox.pdfparser.COSParser:parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey)",525,611,"/**
 * Parses an object from the PDF source.
 * @param objOffset offset of the object in the source
 * @param objKey key identifying the object
 * @return COSBase representing the parsed object
 * @throws IOException if parsing fails or object is invalid
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(java.lang.String),50,54,"/**
 * Constructs a PDActionJavaScript with given JavaScript.
 * @param js JavaScript code to be executed
 */","* Constructor.
     *
     * @param js Some javascript code.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:toString(),235,264,"/**
* Constructs a string representation of object attributes.
* @return formatted string with attribute values
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getBoundingBox(),205,213,"/**
* Returns the bounding box of the font.
* @return BoundingBox object representing the font's dimensions
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getBoundingBox(),196,204,"/**
* Retrieves or calculates the font bounding box.
* @return BoundingBox object representing the font bounds
* @throws IOException if an I/O error occurs during calculation
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBoundingBox(),329,337,"/**
* Returns the bounding box of the font.
* @return BoundingBox object representing the font's dimensions
* @throws IOException if an I/O error occurs during retrieval
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBoundingBox(),254,262,"/**
 * Returns the bounding box of the font.
 * @return BoundingBox object representing the font's dimensions
 * @throws IOException if an I/O error occurs during retrieval
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:getBoundingBox(),537,545,"/**
* Retrieves or calculates the font bounding box.
* @return BoundingBox object representing the font bounds
* @throws IOException if an I/O error occurs during calculation
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getBoundingBox(),314,322,"/**
* Returns the font bounding box.
* Initializes it if not already set.
* @return BoundingBox object representing the font bounds
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",97,104,"/**
* Initializes texture painting for a tiling pattern.
* @param drawer PageDrawer instance for drawing
* @param pattern PDTilingPattern to be applied
* @param colorSpace PDColorSpace for coloring
* @param color PDColor for the paint
* @param xform AffineTransform for coordinate transformation
* @throws IOException if an I/O error occurs
*/","* Creates a new tiling Paint. The parameters color and colorSpace must be null for a colored
     * tiling Paint (because it has its own colors), and non null for an uncolored tiling Paint.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param colorSpace color space for this tiling
     * @param color color for this tiling
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setTransformationMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),509,516,"/**
* Applies mask to appearance stream.
* @param appearanceStream the stream to apply mask to
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,handleBorderBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:handleBorderBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle,float)",518,549,"/**
* Calculates the border box for a square or circle annotation.
* @param annotation PDAnnotationSquareCircle instance
* @param lineWidth width of the line
* @return PDRectangle representing the border box
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawRaster(),525,529,"/**
 * Retrieves a writable raster from the image reader.
 * @return WritableRaster object representing the image data
 * @throws IOException if an I/O error occurs during reading
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawRaster(),359,363,"/**
* Reads and returns a raster from an image.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(java.awt.Rectangle,int)",597,600,"/**
* Reads and returns a buffered image from a specified region with subsampling.
* @param region the area of the image to read
* @param subsampling factor for reducing image resolution
* @return BufferedImage object or null if an error occurs
*/","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @param region The region of the source image to get, or null if the entire image is needed. The actual region
     * will be clipped to the dimensions of the source image.
     * 
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value of 1 meaning every
     * pixel will be read. It must not be larger than the image width or height.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(java.awt.Rectangle,int)",353,357,"/**
* Reads an image region with subsampling.
* @param region area to read from image
* @param subsampling factor for reducing image size
* @return BufferedImage of the sampled region
* @throws IOException if reading fails
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)",136,139,"/**
* Converts PDImage to BufferedImage with specified color key.
* @param pdImage source image
* @param colorKey array defining color keys for transparency
* @return converted BufferedImage
* @throws IOException if conversion fails
*/","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param colorKey an optional color key mask
     * @return content of this image as an RGB buffered image
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,pushResources,org.apache.pdfbox.contentstream.PDFStreamEngine:pushResources(org.apache.pdfbox.contentstream.PDContentStream),576,602,"/**
 * Retrieves and sets PDF content stream resources.
 * @param contentStream the content stream to process
 * @return original resources before modification
 */","* Pushes the given stream's resources, returning the previous resources.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",127,200,"/**
* Initializes a content stream for a page, optionally appending or prepending content.
* @param document PDF document to add content to
* @param sourcePage page where content will be added
* @param appendContent mode to determine how content is appended (overwrite, prepend, etc.)
* @param compress whether to compress the new content stream
* @param resetContext whether to reset graphics context before adding content
* @param stream content stream to add to the page
* @param resources resources used by the content stream
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,hasBlendMode,org.apache.pdfbox.rendering.PDFRenderer:hasBlendMode(org.apache.pdfbox.pdmodel.PDPage),533,556,"/**
* Checks if a page uses non-normal blend modes.
* @param page the PDF page to check
* @return true if any non-normal blend mode is found, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,calculateAffineTransform,"org.apache.pdfbox.multipdf.Overlay:calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",575,583,"/**
* Calculates transformation for centering an overlay on a page.
* @param page the PDF page to overlay onto
* @param overlayMediaBox dimensions of the overlay content
* @return AffineTransform for centering the overlay
*/","* Calculate the transform to be used when positioning the overlay. The default implementation
     * centers on the destination. Override this method to do your own, e.g. move to a corner, or
     * rotate.
     *
     * @param page The page that will get the overlay.
     * @param overlayMediaBox The overlay media box.
     * @return The affine transform to be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,clipToMediaBox,org.apache.pdfbox.pdmodel.PDPage:clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),564,573,"/**
* Adjusts box dimensions relative to media box.
* @param box the rectangle to adjust
* @return adjusted PDRectangle object
*/",* Clips the given box to the bounds of the media box.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedMediaBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage),348,361,"/**
* Adjusts page rectangle based on rotation.
* @param page PDF page object
* @return adjusted rectangle considering rotation
*/","* This will find the MediaBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The MediaBox at this level in the hierarchy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isMarked(),67,70,"/**
 * Checks if an item is marked.
 * @return true if marked, false otherwise
 */","* Tells if this is a tagged PDF.
     *
     * @return true If this is a tagged PDF.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,usesUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:usesUserProperties(),87,90,"/**
 * Checks if ""UserProperties"" is masked.
 * @return true if masked, false otherwise
 */","* Tells if structure elements use user properties.
     *
     * @return A boolean telling if the structure elements use user properties.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isSuspect(),108,111,"/**
 * Checks if ""Suspects"" entry exists in dictionary.
 * @return true if entry exists, false otherwise
 */","* Tells if this PDF contain 'suspect' tags.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this property.
     *
     * @return true if the suspect flag has been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,shouldTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:shouldTrackMousePosition(),106,109,"/**
 * Checks if an action is a map.
 * @return true if the action is a map, false otherwise
 */","* This will specify whether to track the mouse position when the URI is
     * resolved. Default value: false. This entry applies only to actions
     * triggered by the user's clicking an annotation; it is ignored for actions
     * associated with outline items or with a document's OpenAction entry.
     *
     * @return A flag specifying whether to track the mouse position when the
     * URI is resolved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getOpen(),74,77,"/**
* Checks if ""Open"" mask is set.
* @return true if ""Open"" mask is enabled, false otherwise
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,isFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:isFD(),201,204,"/**
 * Checks a condition using helper methods.
 * @return result of m2 method call
 */","* This will return the value indication if the denominator of the fractional value is reduced/truncated .
     * 
     * @return fd",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setHidden(boolean),138,142,"/**
* Masks elements based on visibility.
* @param hidden true to hide elements, false to show
*/","* Specifies whether the property shall be hidden.
     * 
     * @param hidden <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:toString(),145,152,"/**
* Generates a formatted string with masked values.
* @return String containing masked values from methods m1, m2, m3, and m4
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingOverprintControl(),383,386,"/**
 * Checks dictionary for specific key and value.
 * @return true if condition met, false otherwise
 */","* This will get the overprint control for non stroking operations.  If this
     * value is null then the regular overprint control value will be returned.
     *
     * @return The overprint control or null if one has not been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws an inline image at specified position and size.
* @param inlineImage the image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setInvisible(boolean),512,515,"/**
* Sets annotation visibility.
* @param invisible flag to set annotation visibility
*/","* Set the invisible flag.
     *
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setHidden(boolean),532,535,"/**
 * Sets the annotation's visibility.
 * @param hidden true to hide, false to show
 */","* Set the hidden flag.
     *
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPrinted(boolean),552,555,"/**
 * Sets the printed flag in annotations.
 * @param printed indicates if the document is printed
 */","* Set the printed flag.
     *
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoZoom(boolean),572,575,"/**
 * Sets zoom flag in annotation.
 * @param noZoom true to disable zoom, false otherwise
 */","* Set the noZoom flag.
     *
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoRotate(boolean),592,595,"/**
 * Sets annotation flag to disable rotation.
 * @param noRotate if true, disables rotation of the annotation
 */","* Set the noRotate flag.
     *
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoView(boolean),612,615,"/**
 * Sets annotation flag to control viewability.
 * @param noView true if annotation should not be viewable
 */","* Set the noView flag.
     *
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setReadOnly(boolean),632,635,"/**
 * Sets the read-only flag.
 * @param readOnly true to set as read-only, false otherwise
 */","* Set the readOnly flag.
     *
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLocked(boolean),652,655,"/**
 * Sets the LOCKED flag on an annotation.
 * @param locked true if the annotation should be locked, false otherwise
 */","* Set the locked flag.
     *
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setToggleNoView(boolean),672,675,"/**
* Sets the no-view flag in annotation.
* @param toggleNoView flag to enable or disable no-view mode
*/","* Set the toggleNoView flag.
     *
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLockedContents(boolean),692,695,"/**
 * Sets the locked contents flag.
 * @param lockedContents true if contents are locked, false otherwise
 */","* Set the LockedContents flag.
     * 
     * @param lockedContents The new LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setInvisible(boolean),407,410,"/**
 * Sets visibility flag on an element.
 * @param invisible true to make element invisible, false otherwise
 */","* Set the invisible flag.
     * 
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setHidden(boolean),427,430,"/**
 * Sets the visibility flag.
 * @param hidden true to hide, false to show
 */","* Set the hidden flag.
     * 
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPrinted(boolean),447,450,"/**
 * Sets the printed flag.
 * @param printed indicates if the document is printed
 */","* Set the printed flag.
     * 
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoZoom(boolean),467,470,"/**
* Sets zoom flag in PDF document.
* @param noZoom true to disable zoom, false otherwise
*/","* Set the noZoom flag.
     * 
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoRotate(boolean),487,490,"/**
* Masks image with optional rotation.
* @param noRotate true to disable rotation, false otherwise
*/","* Set the noRotate flag.
     * 
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoView(boolean),507,510,"/**
* Sets view flag based on input.
* @param noView if true, disables viewing
*/","* Set the noView flag.
     * 
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setReadOnly(boolean),527,530,"/**
 * Sets read-only flag on an object.
 * @param readOnly true to set as read-only, false otherwise
 */","* Set the readOnly flag.
     * 
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLocked(boolean),547,550,"/**
* Sets lock status of an item.
* @param locked true to lock, false to unlock
*/","* Set the locked flag.
     * 
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setToggleNoView(boolean),567,570,"/**
* Toggles the ""no view"" flag in document settings.
* @param toggleNoView true to enable, false to disable
*/","* Set the toggleNoView flag.
     * 
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLockedContents(boolean),596,599,"/**
* Sets content locking flag.
* @param lockedContents true to lock contents, false otherwise
*/","* Set the LockedContents flag. If set, do not allow the contents of the annotation to be
     * modified by the user. This flag does not restrict deletion of the annotation or changes to
     * other annotation properties, such as position and size.
     *
     * @param lockedContents The new LockedContents flag value.
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/PDF32000_2008.pdf#page=393"">PDF
     * 32000-1:2008 12.5.3, Table 165</a>
     * @see #isLockedContents()
     * @see #FLAG_LOCKED_CONTENTS
     * @since PDF 1.7",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilterRequired(boolean),126,129,"/**
 * Sets a filter flag on FF.
 * @param flag boolean value to set the filter
 */","* set true if the filter shall be required.
     * 
     * @param flag if true, the specified Filter shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilterRequired(boolean),145,148,"/**
 * Sets a flag for FF subfilter.
 * @param flag boolean value to set
 */","* set true if the subfilter shall be required.
     * 
     * @param flag if true, the first supported SubFilter in the array shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethodRequired(boolean),164,167,"/**
 * Sets the digest method flag.
 * @param flag indicates whether to enable or disable the digest method
 */","* set true if the DigestMethod shall be required.
     * 
     * @param flag if true, one digest from the array shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setVRequired(boolean),183,186,"/**
 * Sets a flag in a PDF form field.
 * @param flag value to set for the flag
 */","* set true if the V entry shall be required.
     * 
     * @param flag if true, the V entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasonRequired(boolean),202,205,"/**
 * Sets a mask flag.
 * @param flag boolean value to set the mask
 */","* set true if the Reason shall be required.
     * 
     * @param flag if true, the Reason entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestationRequired(boolean),221,224,"/**
* Sets legal attestation flag.
* @param flag boolean value to set the flag
*/","* set true if the LegalAttestation shall be required.
     * 
     * @param flag if true, the LegalAttestation entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setAddRevInfoRequired(boolean),240,243,"/**
 * Sets a flag in document properties.
 * @param flag boolean value to set the flag
 */","* set true if the AddRevInfo shall be required.
     * 
     * @param flag if true, the AddRevInfo shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectRequired(boolean),114,117,"/**
 * Sets a mask flag in the dictionary.
 * @param flag boolean value to set the mask
 */","* set true if subject shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuerRequired(boolean),133,136,"/**
 * Sets the issuer flag in the dictionary.
 * @param flag value to set for the issuer flag
 */","* set true if Issuer shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Issuer shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOIDRequired(boolean),152,155,"/**
 * Sets a flag in the dictionary.
 * @param flag boolean value to set
 */","* set true if OID shall be required as a constraint on signature.
     *
     * @param flag if true, the specified OID shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDNRequired(boolean),171,174,"/**
 * Sets a mask flag in the dictionary.
 * @param flag boolean value to set the mask
 */","* set true if subject DN shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject DN shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsageRequired(boolean),190,193,"/**
 * Sets key usage flag in dictionary.
 * @param flag true to enable, false to disable
 */","* set true if KeyUsage shall be required as a constraint on signature.
     *
     * @param flag if true, the specified KeyUsage shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLRequired(boolean),209,212,"/**
 * Updates dictionary flag for URL.
 * @param flag new flag value to set
 */","* set true if URL shall be required as a constraint on signature.
     *
     * @param flag if true, the specified URL shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setItalic(boolean),374,377,"/**
* Sets italic style.
* @param italic true to enable italic, false otherwise
*/","* Set the italic property of the text.
     *
     * @param italic The new italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setBold(boolean),394,397,"/**
 * Sets bold flag in document.
 * @param bold true to enable bold, false otherwise
 */","* Set the bold property of the text.
     *
     * @param bold The new bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setSignaturesExist(boolean),642,645,"/**
 * Updates signature flags in dictionary.
 * @param signaturesExist indicates if signatures are present
 */","* Set the SignaturesExist bit.
     *
     * @param signaturesExist The value for SignaturesExist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setAppendOnly(boolean),682,685,"/**
 * Sets the append-only flag in the dictionary.
 * @param appendOnly true if appending is allowed, false otherwise
 */","* Set the AppendOnly bit.
     *
     * @param appendOnly The value for AppendOnly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSort(boolean),283,286,"/**
 * Sets sorting flag for field.
 * @param sort true to enable sorting, false otherwise
 */","* Set the Sort bit.
     * 
     * @see #isSort()
     * @param sort The value for Sort.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setMultiSelect(boolean),303,306,"/**
* Sets multi-select flag for form field.
* @param multiSelect true to enable multi-selection, false otherwise
*/","* Set the MultiSelect bit.
     *
     * @param multiSelect The value for MultiSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDoNotSpellCheck(boolean),323,326,"/**
* Sets spell check flag.
* @param doNotSpellCheck true to disable spell check, false otherwise
*/","* Set the DoNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for DoNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCommitOnSelChange(boolean),343,346,"/**
* Sets form field to commit on selection change.
* @param commitOnSelChange flag indicating whether to commit on selection change
*/","* Set the CommitOnSelChange bit.
     *
     * @param commitOnSelChange The value for CommitOnSelChange.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCombo(boolean),363,366,"/**
* Sets form field as combo box.
* @param combo true if field is combo box, false otherwise
*/","* Set the Combo bit.
     *
     * @param combo The value for Combo.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,setEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:setEdit(boolean),73,76,"/**
 * Sets the edit flag for form fields.
 * @param edit true to enable editing, false otherwise
 */","* Set the Edit bit.
     *
     * @param edit The value for Edit.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:setReadOnly(boolean),148,151,"/**
 * Sets the field to read-only.
 * @param readonly flag indicating if the field is read-only
 */","* sets the field to be read-only.
     * 
     * @param readonly The new flag for readonly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:setRequired(boolean),168,171,"/**
 * Sets the field as required.
 * @param required true if the field is required, false otherwise
 */","* sets the flag whether the field is to be required to have a value at the time it is exported
     * by a submit-form action.
     *
     * @param required The new flag for required.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:setNoExport(boolean),187,190,"/**
 * Sets the no-export flag in the dictionary.
 * @param noExport if true, sets the FF flag to not export
 */","* sets the field to be not exported.
     * 
     * @param noExport The new flag for noExport.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
* Creates a push button in an Acrobat form.
* @param acroForm the parent form containing the button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),43,47,"/**
* Creates a radio button with an associated AcroForm.
* @param acroForm the form containing the radio button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,setRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:setRadiosInUnison(boolean),69,72,"/**
* Sets radio buttons to act in unison.
* @param radiosInUnison true if radio buttons should be synchronized
*/","* From the PDF Spec <br>
     * If set, a group of radio buttons within a radio button field that use the same value for the on state will turn
     * on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually
     * exclusive (the same behavior as HTML radio buttons).
     *
     * @param radiosInUnison The new flag for radiosInUnison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMultiline(boolean),75,78,"/**
 * Sets the multiline flag for form fields.
 * @param multiline true to enable multiline input, false otherwise
 */","* Set the multiline bit.
     *
     * @param multiline The value for the multiline.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setPassword(boolean),93,96,"/**
 * Sets password flag for document.
 * @param password true to enable password protection
 */","* Set the password bit.
     *
     * @param password The value for the password.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setFileSelect(boolean),111,114,"/**
* Sets file selection flag.
* @param fileSelect true to enable file selection, false otherwise
*/","* Set the file select bit.
     *
     * @param fileSelect The value for the fileSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotSpellCheck(boolean),129,132,"/**
* Sets spell check flag for form field.
* @param doNotSpellCheck true to disable spell checking
*/","* Set the doNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for the doNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotScroll(boolean),147,150,"/**
* Sets the ""do not scroll"" flag in document settings.
* @param doNotScroll true to disable scrolling; false otherwise
*/","* Set the doNotScroll bit.
     *
     * @param doNotScroll The value for the doNotScroll.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setComb(boolean),165,168,"/**
 * Sets form field combination flag.
 * @param comb true to enable combination, false otherwise
 */","* Set the comb bit.
     *
     * @param comb The value for the comb.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setRichText(boolean),183,186,"/**
* Sets rich text flag.
* @param richText true to enable rich text, false otherwise
*/","* Set the richText bit.
     *
     * @param richText The value for the richText.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",929,932,"/**
 * Calls overloaded m1 with default value.
 * @param embeddedDictionary dictionary to search in
 * @param key key to find in the dictionary
 * @return result of the overloaded method
 */","* Get an integer from an embedded dictionary. Useful for 1-1 mappings. default:-1
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     *
     * @return The value of the embedded integer.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDenominator(),181,184,"/**
 * Returns masked value using specific logic.
 * @return integer result of masking operation
 */","* This will return the precision or denominator of a fractional amount.
     * 
     * @return the precision or denominator",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,encode,"org.apache.pdfbox.filter.CCITTFaxFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,158,"/**
 * Encodes an InputStream using CCITT Fax encoding.
 * @param input the source stream to encode
 * @param encoded the destination stream for encoded data
 * @param parameters dictionary containing encoding parameters
 * @throws IOException if an I/O error occurs during encoding
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,readJPX,"org.apache.pdfbox.filter.JPXFilter:readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",116,203,"/**
 * Decodes a JPEG 2000 image from input stream.
 * @param input image data stream
 * @param options decoding options
 * @param result decode result container
 * @return decoded BufferedImage
 * @throws IOException if reading fails
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,wrapPredictor,"org.apache.pdfbox.filter.Predictor:wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",235,250,"/**
* Applies PNG prediction to output stream if predictor value is greater than 1.
* @param out original output stream
* @param decodeParams dictionary containing decoding parameters
* @return output stream with applied prediction or original stream if not applicable
*/","* Wraps and <code>OutputStream</code> in a predictor decoding stream as necessary.
     * If no predictor is specified by the parameters, the original stream is returned as is.
     *
     * @param out The stream to which decoded data should be written
     * @param decodeParams Decode parameters for the stream
     * @return An <code>OutputStream</code> is returned, which will write decoded data
     * into the given stream. If no predictor is specified, the original stream is returned.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getStructParents,org.apache.pdfbox.pdmodel.PDPage:getStructParents(),366,369,"/**
 * Returns mask value for structure parents.
 * @return integer representing the mask
 */","* This will get the key of this Page in the structural parent tree.
     * 
     * @return the integer key of the page's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.cos.COSDictionary),473,491,"/**
 * Decrements count of parent nodes recursively.
 * @param node starting node in the tree
 */",* Removes the given COS page.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,add,org.apache.pdfbox.pdmodel.PDPageTree:add(org.apache.pdfbox.pdmodel.PDPage),498,520,"/**
 * Updates page hierarchy by setting parent and adjusting counts.
 * @param page the PDPage to update in the hierarchy
 */","* Adds the given page to this page tree.
     * 
     * @param page The page to add.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,increaseParents,org.apache.pdfbox.pdmodel.PDPageTree:increaseParents(org.apache.pdfbox.cos.COSDictionary),586,595,"/**
* Increments count in dictionary hierarchy.
* @param parentDict starting dictionary
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getBitsPerSample(),111,114,"/**
 * Retrieves bits per sample value.
 * @return integer representing bits per sample
 */","* Get the number of bits that the output value will take up.  
     * 
     * Valid values are 1,2,4,8,12,16,24,32.
     *
     * @return Number of bits for each output value.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getMCID(),89,92,"/**
 * Returns masked value from m2 using MCID.
 * @return integer result of masking operation
 */","* Gets the marked content identifier.
     * 
     * @return the marked content identifier",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTreeNextKey(),155,158,"/**
 * Returns mask value using parent tree next key.
 * @return integer mask value
 */","* Returns The next key for the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     *
     * @return The next key for the parent tree",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getMCID(),97,101,"/**
* Returns mask value based on m1 and MCID.
* @return -1 if m1 is null, otherwise result of m1's m2 method with COSName.MCID
*/","* Gets the marked-content identifier.
     * 
     * @return the marked-content identifier, or -1 if it doesn't exist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getSupplement,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getSupplement(),57,60,"/**
 * Retrieves mask value from dictionary.
 * @return integer representing the mask
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromRandomAccessImpl,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,int)",209,232,"/**
* Creates a masked image from a document and reader.
* @param document PDF document
* @param reader random access read object
* @param number identifier for the image
* @return PDImageXObject or null if no data
*/","* Creates a new CCITT Fax compressed image XObject from a TIFF file.
     * 
     * @param document the document to create the image as part of.
     * @param reader the random access TIFF file which contains a suitable CCITT
     * compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject, or null if no such page
     * @throws IOException if there is an error reading the TIFF data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineCapStyle(),242,245,"/**
 * Returns mask value from dictionary.
 * @return integer mask value
 */","* This will get the line cap style.
     *
     * @return null or the LC value of the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineJoinStyle(),262,265,"/**
 * Returns mask value for LJ.
 * @return integer mask value
 */","* This will get the line join style.
     *
     * @return null or the LJ value in the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getStructParent(),683,686,"/**
 * Returns mask value from COSName.STRUCT_PARENT.
 * @return integer mask value
 */","* This will get the key of this annotation in the structural parent tree.
     *
     * @return the integer key of the annotation's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,getP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:getP(),67,70,"/**
 * Retrieves mask value from dictionary.
 * @return integer representing mask value
 */","* Return the P value.
     * 
     * @return the P value",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getMaxLen(),193,196,"/**
* Returns masked value using COSName max length.
* @return integer result of masking operation
*/","* Returns the maximum number of characters of the text field.
     * 
     * @return the maximum number of characters, returns -1 if the value isn't present",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getInteger(java.lang.String,int)",253,256,"/**
 * Retrieves an integer value using a mask function.
 * @param name key for the mask operation
 * @param defaultValue default value if not found
 * @return masked integer value or default if not applicable
 */","* Gets an integer.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the integer",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isInvisible(),502,505,"/**
 * Checks if an annotation is invisible.
 * @return true if annotation is invisible, false otherwise
 */","* Get the invisible flag.
     *
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isHidden(),522,525,"/**
 * Checks if an annotation is hidden.
 * @return true if the annotation is hidden, false otherwise
 */","* Get the hidden flag.
     *
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isPrinted(),542,545,"/**
 * Checks if the document is printed.
 * @return true if printed, false otherwise
 */","* Get the printed flag.
     *
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoZoom(),562,565,"/**
* Checks mask flag for zoom.
* @return true if zoom is disabled, false otherwise
*/","* Get the noZoom flag.
     *
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoRotate(),582,585,"/**
* Checks if rotation is masked.
* @return true if rotation is masked, false otherwise
*/","* Get the noRotate flag.
     *
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoView(),602,605,"/**
 * Checks if annotation is masked and not viewable.
 * @return true if annotation is masked, false otherwise
 */","* Get the noView flag.
     *
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isReadOnly(),622,625,"/**
 * Checks if the annotation is read-only.
 * @return true if the annotation is read-only, false otherwise
 */","* Get the readOnly flag.
     *
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLocked(),642,645,"/**
 * Checks if the annotation is locked.
 * @return true if the annotation is locked, false otherwise
 */","* Get the locked flag.
     *
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isToggleNoView(),662,665,"/**
 * Toggles the ""no view"" flag in annotations.
 * @return true if operation successful, false otherwise
 */","* Get the toggleNoView flag.
     *
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLockedContents(),682,685,"/**
 * Checks if content is locked.
 * @return true if contents are locked, false otherwise
 */","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isInvisible(),397,400,"/**
 * Checks if the flag is invisible.
 * @return true if the flag is invisible, false otherwise
 */","* Get the invisible flag.
     * 
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isHidden(),417,420,"/**
 * Checks if an element is hidden.
 * @return true if element is hidden, false otherwise
 */","* Get the hidden flag.
     * 
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isPrinted(),437,440,"/**
 * Checks if the document has been printed.
 * @return true if printed, false otherwise
 */","* Get the printed flag.
     * 
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoZoom(),457,460,"/**
 * Checks a condition using methods m1 and m2.
 * @return true if condition is met, false otherwise
 */","* Get the noZoom flag.
     * 
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoRotate(),477,480,"/**
 * Checks mask functionality.
 * @return true if operation successful, false otherwise
 */","* Get the noRotate flag.
     * 
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoView(),497,500,"/**
 * Checks a condition using mask functions.
 * @return true if condition is met, false otherwise
 */","* Get the noView flag.
     * 
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isReadOnly(),517,520,"/**
 * Checks if the mask is read-only.
 * @return true if the mask is read-only, false otherwise
 */","* Get the readOnly flag.
     * 
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLocked(),537,540,"/**
 * Checks if a mask is locked.
 * @return true if the mask is locked, false otherwise
 */","* Get the locked flag.
     * 
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isToggleNoView(),557,560,"/**
 * Toggles the view flag for a specific name.
 * @return true if the operation was successful
 */","* Get the toggleNoView flag.
     * 
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLockedContents(),578,581,"/**
 * Checks if contents are locked.
 * @return true if contents are locked, false otherwise
 */","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.
     * @see #setLockedContents(boolean)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isFilterRequired(),116,119,"/**
 * Checks mask condition using specific flags.
 * @return true if condition met, false otherwise
 */","*
     * @return true if the Filter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isSubFilterRequired(),135,138,"/**
 * Checks a condition using mask functions.
 * @return true if condition met, false otherwise
 */","*
     * @return true if the SubFilter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isDigestMethodRequired(),154,157,"/**
 * Checks mask functionality.
 * @return true if mask is applied, false otherwise
 */","*
    * @return true if the DigestMethod is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isVRequired(),173,176,"/**
 * Checks a condition using mask functions.
 * @return true if condition is met, false otherwise
 */","*
    * @return true if the V entry is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isReasonRequired(),192,195,"/**
 * Checks mask status using specified parameters.
 * @return true if mask condition met, false otherwise
 */","*
    * @return true if the Reason is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isLegalAttestationRequired(),211,214,"/**
 * Checks if legal attestation is masked.
 * @return true if masked, false otherwise
 */","*
    * @return true if the LegalAttestation is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isAddRevInfoRequired(),230,233,"/**
 * Masks function by adding revision info.
 * @return true if masking successful, false otherwise
 */","*
    * @return true if the AddRevInfo is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectRequired(),104,107,"/**
 * Checks if the subject flag is set in the FF field.
 * @return true if the flag is set, false otherwise
 */","*
     * @return true if the Subject is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isIssuerRequired(),123,126,"/**
 * Checks if the issuer flag is set in the document's field flags.
 * @return true if the issuer flag is set, false otherwise
 */","*
     * @return true if the Issuer is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isOIDRequired(),142,145,"/**
* Checks FF flag in dictionary.
* @return true if FF flag is set, false otherwise
*/","*
     * @return true if the OID is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectDNRequired(),161,164,"/**
* Checks if FF mask is set in the dictionary.
* @return true if FF mask is present, false otherwise
*/","*
     * @return true if the Subject DN is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isKeyUsageRequired(),180,183,"/**
 * Checks if key usage flag is set in dictionary.
 * @return true if key usage flag is present, false otherwise
 */","*
     * @return true if the KeyUsage is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isURLRequired(),199,202,"/**
 * Checks if a specific flag is set in the dictionary.
 * @return true if the flag is set, false otherwise
 */","*
     * @return true if the URL is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isItalic(),364,367,"/**
 * Checks if font is italic.
 * @return true if font is italic, false otherwise
 */","* A flag telling if the text should be italic.
     *
     * @return The italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isBold(),384,387,"/**
 * Checks if the font is bold.
 * @return true if the font is bold, false otherwise
 */","* A flag telling if the text should be bold.
     *
     * @return The bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isSignaturesExist(),632,635,"/**
 * Checks if signatures exist in the document.
 * @return true if signatures exist, false otherwise
 */","* Determines if SignaturesExist is set.
     * 
     * @return true if the document contains at least one signature.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isAppendOnly(),652,655,"/**
 * Checks if the document is in append-only mode.
 * @return true if the document is set to append-only, false otherwise
 */","* Determines if AppendOnly is set.
     * 
     * @return true if the document contains signatures that may be invalidated if the file is saved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isPushButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isPushButton(),87,90,"/**
 * Checks mask condition.
 * @return true if condition met, false otherwise
 */","* Determines if push button bit is set.
     * 
     * @return true if type of button field is a push button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isRadioButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isRadioButton(),97,100,"/**
 * Checks a condition using mask methods.
 * @return true if condition is met, false otherwise
 */","* Determines if radio button bit is set.
     * 
     * @return true if type of button field is a radio button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isSort(),272,275,"/**
 * Checks if a specific flag is set in a PDF field.
 * @return true if the flag is set, false otherwise
 */","* Determines if Sort is set.
     * 
     * <p>
     * If set, the field’s option items shall be sorted alphabetically.
     * The sorting has to be done when writing the PDF. PDF Readers are supposed to
     * display the options in the order in which they occur in the Opt array. 
     * </p>
     * 
     * @return true if the options are sorted.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isMultiSelect(),293,296,"/**
 * Checks if multi-select flag is set in FF field.
 * @return true if multi-select is enabled, false otherwise
 */","* Determines if MultiSelect is set.
     * 
     * @return true if multi select is allowed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isDoNotSpellCheck(),313,316,"/**
 * Masks form field from spell checking.
 * @return true if masking is successful, false otherwise
 */","* Determines if DoNotSpellCheck is set.
     * 
     * @return true if spell checker is disabled.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCommitOnSelChange(),333,336,"/**
 * Checks and applies mask configuration.
 * @return true if configuration is successful, false otherwise
 */","* Determines if CommitOnSelChange is set.
     * 
     * @return true if value shall be committed as soon as a selection is made.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCombo(),353,356,"/**
 * Checks if a field is masked.
 * @return true if the field is masked, false otherwise
 */","* Determines if Combo is set.
     * 
     * @return true if value the choice is a combo box..",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,isEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:isEdit(),63,66,"/**
 * Checks if field is editable.
 * @return true if field is editable, false otherwise
 */","* Determines if Edit is set.
     * 
     * @return true if the combo box shall include an editable text box as well as a drop-down list.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:isReadOnly(),157,160,"/**
 * Checks if the field is read-only.
 * @return true if the field is read-only, false otherwise
 */","* 
     * @return true if the field is readonly",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:isRequired(),177,180,"/**
 * Checks if the field is required.
 * @return true if the field is marked as required, false otherwise
 */","* @return true if the field is required to have a value at the time it is exported by a
     * submit-form action.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:isNoExport(),196,199,"/**
 * Checks if the field should be exported.
 * @return true if export is disabled, false otherwise
 */","* 
     * @return true if the field is not to be exported.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,isRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:isRadiosInUnison(),78,81,"/**
 * Checks if radio buttons are in unison.
 * @return true if radio buttons are synchronized, false otherwise
 */","*
     * @return true If the flag is set for radios in unison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isMultiline(),65,68,"/**
* Checks multiline flag status.
* @return true if multiline flag is set, false otherwise
*/",* @return true if the field is multiline,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isPassword(),83,86,"/**
 * Checks if password field is masked.
 * @return true if password field is masked, false otherwise
 */",* @return true if the field is a password field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isFileSelect(),101,104,"/**
 * Checks mask condition.
 * @return true if condition met, false otherwise
 */",* @return true if the field is a file select field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotSpellCheck(),119,122,"/**
 * Checks a condition using specific flags.
 * @return true if condition met, false otherwise
 */",* @return true if the field is not suppose to spell check.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotScroll(),137,140,"/**
 * Checks mask status using specified flags.
 * @return true if condition met, false otherwise
 */",* @return true if the field is not suppose to scroll.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isComb(),155,158,"/**
 * Checks if a specific flag is set in a mask.
 * @return true if the flag is set, false otherwise
 */",* @return true if the field is not suppose to comb the text display.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isRichText(),173,176,"/**
 * Checks if rich text is enabled.
 * @return true if rich text is enabled, false otherwise
 */",* @return true if the field is a rich text field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,org.apache.pdfbox.pdmodel.PDPageTree:get(int),261,269,"/**
* Retrieves and processes a page dictionary.
* @param index page index
* @return PDPage object created from the dictionary
*/","* Returns the page at the given index.
     *
     * @param index zero-based index
     * @return the page at the given index
     * 
     * @throws IllegalStateException if the requested index isn't found or doesn't point to a valid page dictionary
     * @throws IndexOutOfBoundsException if the requested index is higher than the page count",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getNumberOfPages,org.apache.pdfbox.pdmodel.PDDocument:getNumberOfPages(),1256,1259,"/**
 * Returns result of chained method calls.
 * @return integer result from nested method calls
 */","* This will return the total page count of the PDF document.
     * 
     * @return The total number of pages in the PDF document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,next,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:next(),314,341,"/**
 * Generates a masked function string.
 * @return Masked function string or throws NoSuchElementException if condition fails
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),234,256,"/**
* Masks attribute in PDF document.
* @param attributeObject the attribute to mask
*/","* Adds an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,attributeChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),296,321,"/**
* Masks attribute in PDF by modifying its value.
* @param attributeObject object containing attribute details
*/","* Updates the revision number for the given attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addClassName(java.lang.String),401,426,"/**
* Adds a class name to the COSArray under key ""C"".
* @param className name of the class to add
*/","* Adds a class name.
     * 
     * @param className the class name",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,incrementRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:incrementRevisionNumber(),492,495,"/**
 * Increments and updates a value.
 * Calls m1 to get current value, increments it, then calls m2 with the new value.
 */",* Increments th revision number.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",119,289,"/**
 * Decrypts a PDF document using public key decryption.
 * @param encryption encryption configuration for the document
 * @param documentIDArray array containing document ID
 * @param decryptionMaterial material needed for decryption
 * @throws IOException if decryption fails or invalid parameters are provided
 */","* Prepares everything to decrypt the document.
     *
     * @param encryption encryption dictionary, can be retrieved via
     * {@link PDDocument#getEncryption()}
     * @param documentIDArray document id which is returned via
     * {@link org.apache.pdfbox.cos.COSDocument#getDocumentID()} (not used by
     * this handler)
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws IOException If there is an error accessing data. If verbose mode
     * is enabled, the exception message will provide more details why the
     * match wasn't successful.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerKey(),273,291,"/**
 * Masks owner data based on revision level.
 * @return masked owner data or null if not available
 * @throws IOException if an I/O error occurs
 */","* This will get the O entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserKey(),312,330,"/**
* Masks user data from COSString.
* @return byte array containing masked user data or null if not found
*/","* This will get the U entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDFont:getDisplacement(int),250,253,"/**
* Converts code to vector representation.
* @param code input code value
* @return Vector object with scaled m1 value
*/","* Returns the displacement vector (w0, w1) in text space, for the given character. For horizontal text only the x
     * component is used, for vertical text only the y component.
     *
     * @param code character code
     * @return displacement vector
     * @throws IOException if the data could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDFont:getStringWidth(java.lang.String),367,380,"/**
* Calculates the total width of text by processing each character.
* @param text input string to measure
* @return total width as a float
* @throws IOException if an I/O error occurs
*/","* Returns the width of the given Unicode string.
     *
     * @param text The text to get the width of.
     * @return The width of the string in 1/1000 units of text space.
     * @throws IOException If there is an error getting the width information.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFlagBitOn,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFlagBitOn(int),250,253,"/**
* Checks if a specific bit is set in m1().
* @param bit the bit position to check
* @return true if the bit is set, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlagBit,"org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlagBit(int,boolean)",255,267,"/**
* Sets or clears a specific bit in the flags.
* @param bit the bit position to modify
* @param value true to set, false to clear the bit
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPattern,org.apache.pdfbox.pdmodel.PDResources:getPattern(org.apache.pdfbox.cos.COSName),325,350,"/**
* Retrieves a cached or new PDF pattern by name.
* @param name the name of the pattern
* @return PDAbstractPattern object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the pattern resource with the given name, or null if none exists.
     * 
     * @param name Name of the pattern resource.
     * @return the pattern with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStreamOperators,org.apache.pdfbox.contentstream.PDFStreamEngine:processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream),531,571,"/**
* Processes PDF content stream for color masking.
* @param contentStream the PDF content stream to process
*/","* Processes the operators of the given content stream.
     *
     * @param contentStream to content stream to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShading,org.apache.pdfbox.pdmodel.PDResources:getShading(org.apache.pdfbox.cos.COSName),290,315,"/**
 * Retrieves a PDShading object by name.
 * @param name the COSName of the shading resource
 * @return PDShading object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the shading resource with the given name, or null if none exists.
     *
     * @param name Name of the shading resource.
     * @return the shading state with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getShading(),90,101,"/**
* Retrieves or creates a PDShading instance.
* @return PDShading object or null if not available
*/","* This will get the shading resources for this pattern.
     * @return The shading resources for this pattern.
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerComponent(),60,68,"/**
* Returns the number of bits per color component.
* @return int value representing bits per color component
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerComponent(),60,68,"/**
* Returns the number of bits per color component.
* @return int value representing bits per color component
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerCoordinate(),87,95,"/**
* Retrieves the number of bits per coordinate.
* @return integer value representing bits per coordinate
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerCoordinate(),87,95,"/**
* Returns the number of bits per coordinate.
* @return int value representing bits per coordinate
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveRotation,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveRotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),346,355,"/**
* Retrieves mask value from annotation widget.
* @param widget annotation widget instance
* @return mask value or 0 if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,isNodeOpen,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:isNodeOpen(),274,277,"/**
 * Checks if condition in m1 is met.
 * @return true if m1 returns value greater than 0, false otherwise
 */","* @return true if this node count is greater than zero, false otherwise.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createField,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",50,95,"/**
 * Creates a PDField based on the form and field dictionary.
 * @param form PDAcroForm instance
 * @param field COSDictionary representing the field
 * @param parent PDNonTerminalField parent of the field
 * @return PDField object or null if unsupported type
 */","* Creates a COSField subclass from the given field.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created 
     * @return the corresponding PDField instance",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxSelectionHighlight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",772,811,"/**
* Masks selected options in a PDF list box.
* @param contents appearance content stream for drawing
* @param appearanceStream appearance stream of the field
* @param font font used for rendering text
* @param fontSize size of the font
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldFlags(),71,85,"/**
* Retrieves an integer value from a PDF form field.
* @return the integer value, or 0 if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean,org.apache.pdfbox.rendering.PDFRenderer)",139,148,"/**
* Initializes a new PDFPrintable with specified settings.
* @param document PDDocument to be printed
* @param scaling Scaling mode for the print job
* @param showPageBorder Flag to indicate if page borders should be shown
* @param dpi DPI setting for the print job
* @param center Flag to indicate if pages should be centered
* @param renderer PDFRenderer used for rendering
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).
     * @param renderer the document renderer. Useful if {@link PDFRenderer} has been subclassed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,<init>,org.apache.pdfbox.rendering.PDFRenderer:<init>(org.apache.pdfbox.pdmodel.PDDocument),71,75,"/**
 * Initializes a new PDFRenderer with the given PDDocument.
 * @param document PDDocument to render
 */","* Creates a new PDFRenderer.
     * @param document the document to render",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.lang.String),59,62,"/**
* Loads an FDF document from a file.
* @param filename path to the FDF file
* @return FDFDocument object
* @throws IOException if file cannot be read
*/","* This will load a document from a file.
     *
     * @param filename The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used
     * to read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",223,239,"/**
* Parses and returns a PDDocument from encrypted input.
* @param input byte array of PDF content
* @param password decryption password
* @param keyStore InputStream containing keystore data
* @param alias key alias for decryption
* @param streamCacheCreateFunction function to create cache streams
* @return parsed PDDocument or throws IOException if parsing fails
*/","* Parses a PDF.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",474,481,"/**
* Parses a PDF document.
* @param randomAccessRead source of the PDF data
* @param password encryption password (if any)
* @param keyStore keystore for decryption
* @param alias key alias for decryption
* @param streamCacheCreateFunction function to create cache for streams
* @return PDDocument object representing the parsed PDF
* @throws IOException if parsing fails
*/","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,initFromRandomAccessRead,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead),96,101,"/**
* Parses PDF to extract visual signature.
* @param rar source for reading the PDF
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
 * Applies a mask to the PDF content.
 * @param operator the PDF operator
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Processes an operator with CMYK color space.
 * @param operator the PDF operator to process
 * @param arguments list of arguments for the operator
 * @throws IOException if an I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes PDF operator with given arguments.
* @param operator PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes PDF operator with RGB color space.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Masks PDF content based on operator and arguments.
* @param operator the operation to be performed
* @param arguments list of COSBase objects for processing
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,52,"/**
* Processes PDF stream with CMYK color space.
* @param operator the operator to apply
* @param arguments list of COSBase arguments
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes operator with arguments in a PDF context.
* @param operator the PDF operator to process
* @param arguments list of COSBase objects as arguments
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",49,60,"/**
* Processes PDF operator with given arguments.
* @param operator PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/","* RG Set the stroking colour space to DeviceRGB and set the colour to
     * use for stroking operations.
     *
     * @param operator The operator that is being executed.
     * @param arguments List
     * @throws IOException If the color space cannot be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObject,org.apache.pdfbox.pdmodel.PDResources:getXObject(org.apache.pdfbox.cos.COSName),419,451,"/**
* Retrieves a PDXObject by name.
* @param name the COSName of the object to retrieve
* @return the PDXObject or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the XObject resource with the given name, or null if none exists.
     * 
     * @param name Name of the XObject resource.
     * @return the XObject with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Applies font and size to PDF document.
 * @param font font to apply
 * @param fontSize size of the font
 * @throws IOException if an I/O error occurs
 */","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,getName,org.apache.pdfbox.pdmodel.PDAbstractContentStream:getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),637,649,"/**
* Determines the COSName for a given color space.
* @param colorSpace the color space to process
* @return COSName corresponding to the color space
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies graphics state parameters.
* @param state graphics state to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading fill to the graphics context.
* @param shading PDShading object to apply
* @throws IOException if an I/O error occurs
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Applies masking to PDF content.
 * @param tag COSName representing the mask type
 * @param propertyList PDPropertyList containing properties
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Handles marked content with properties.
* @param tag name of the marked content tag
* @param propertyList list containing properties
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image the PDImageXObject to draw
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @param width the width of the image
 * @param height the height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Masks an image using a transformation matrix.
* @param image the PDImageXObject to mask
* @param matrix the transformation matrix for masking
* @throws IOException if an I/O error occurs
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a form on the PDF page.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayXObject,"org.apache.pdfbox.multipdf.Overlay:createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.multipdf.PDFCloneUtility)",501,530,"/**
* Adds overlay content to a PDF page.
* @param page target PDF page
* @param layoutPage layout details for the overlay
* @param cloner utility for cloning PDF resources
* @return COSName representing the added form object
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",306,326,"/**
* Creates an image form in a PDF document.
* @param imageFormResources resources for the image form
* @param innerFormResource resources for the inner form
* @param imageFormStream stream containing the image form data
* @param bbox bounding box for the image form
* @param at affine transform for positioning
* @param img image object to be added
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev6,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",426,515,"/**
* Masks passwords and sets encryption for PDF.
* @param ownerPassword owner's password
* @param userPassword user's password
* @param encryptionDictionary dictionary for encryption settings
* @param permissionInt permissions integer
* @throws IOException on encryption failure
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev234(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",517,560,"/**
* Sets up document encryption.
* @param ownerPassword owner's password for the document
* @param userPassword user's password for the document
* @param encryptionDictionary dictionary containing encryption settings
* @param permissionInt permissions integer for the document
* @param document PDDocument to be encrypted
* @param revision PDF encryption revision
* @param length key length in bits
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidth(int),155,182,"/**
* Retrieves character width for a given code.
* @param code character code
* @return width of the character or default value
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(java.lang.String),279,297,"/**
* Checks if a group is visible in optional content.
* @param groupName name of the group to check
* @return true if group is visible, false otherwise
*/","* Indicates whether <em>at least one</em> optional content group with this name is enabled.
     * There may be disabled optional content groups with this name even if this function returns
     * true.
     *
     * @param groupName the group name
     * @return true if at least one group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isGroupEnabled,org.apache.pdfbox.rendering.PDFRenderer:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),448,452,"/**
 * Checks if a content group is enabled.
 * @param group the content group to check
 * @return true if the group is enabled or not present, false otherwise
 */","* Indicates whether an optional content group is enabled.
     * @param group the group
     * @return true if the group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addFirst,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),93,98,"/**
* Adds a new child to an outline item.
* @param newChild the child item to be added
*/","* Adds the given node to the top of the children list.
     * 
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addLast,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),79,84,"/**
 * Adds a child outline item to the current document.
 * @param newChild the new outline item to be added
 */","* Adds the given node to the bottom of the children list.
     *
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,checkValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:checkValue(java.lang.String),378,387,"/**
* Validates input value against allowed options.
* @param value input string to validate
*/","* Checks value.
     *
     * @param value Name of radio button to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByOption,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByOption(java.lang.String),412,439,"/**
 * Masks a value by setting widgets based on options.
 * @param value the value to mask
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOpenAction,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOpenAction(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",849,892,"/**
* Copies OpenAction from source catalog to destination catalog.
* @param srcCatalog source PDF document catalog
* @param dstCatalog destination PDF document catalog
* @param cloner utility for cloning PDF objects
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createDictionaryClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createDictionaryClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",413,533,"/**
 * Masks a source dictionary to create a destination dictionary.
 * @param src source COSBase object
 * @param dstParent parent of the destination dictionary
 * @param currentPageDict current page dictionary
 * @return masked COSDictionary or null if not applicable
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,fixDestinations,org.apache.pdfbox.multipdf.Splitter:fixDestinations(org.apache.pdfbox.pdmodel.PDDocument),160,185,"/**
 * Updates page destinations in the document.
 * @param destinationDocument PDF document to update
 */","* Replace the page destinations, if the source and destination pages are in the target
     * document. This must be called after all pages (and its annotations) are processed.
     *
     * @param destinationDocument",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,indexOfPageTree,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:indexOfPageTree(org.apache.pdfbox.cos.COSDictionary),138,158,"/**
* Finds the page index in the document's page tree.
* @param pageDict dictionary representing a PDF page
* @return index of the page or -1 if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLabels(),620,624,"/**
* Retrieves page labels from document.
* @return PDPageLabels object or null if not found
*/","* Returns the page labels descriptor of the document.
     *
     * @return the page labels descriptor of the document.
     * @throws IOException If there is a problem retrieving the page labels.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",56,69,"/**
* Creates a paint context for axial shading.
* @param cm color model to use
* @param deviceBounds bounding box of the device space
* @param userBounds bounding box of the user space
* @param xform transformation from user space to device space
* @param hints rendering hints
* @return PaintContext object or a transparent context if an error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a radial shading context for rendering.
* @param cm color model to use
* @param deviceBounds bounds of the device area
* @param userBounds bounds of the user space
* @param xform transformation applied to the user space
* @param hints rendering hints
* @return PaintContext for radial shading or a transparent context on error
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",51,55,"/**
* Initializes a GouraudShadingContext.
* @param shading PDShading object for shading
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix for additional transformations
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for Type1 shading.
* @param cm color model for the context
* @param deviceBounds bounding rectangle in device space
* @param userBounds bounding rectangle in user space
* @param xform transformation from user to device space
* @param hints rendering hints
* @return PaintContext object or a transparent one if an error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:generateNormalAppearance(),54,145,"/**
* Applies mask to annotation border.
* Handles edge cases and logging for invalid paths.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:generateNormalAppearance(),50,198,"/**
 * Processes a polyline annotation to update its rectangle and appearance.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocumentIfNecessary,org.apache.pdfbox.multipdf.Splitter:createNewDocumentIfNecessary(),704,715,"/**
* Initializes or resets the destination document and maps.
* @throws IOException if an I/O error occurs
*/","* Helper method for creating new documents at the appropriate pages.
     *
     * @throws IOException If there is an error creating the new document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteHeader,org.apache.pdfbox.pdfwriter.COSWriter:doWriteHeader(org.apache.pdfbox.cos.COSDocument),644,668,"/**
 * Masks document content based on compression settings.
 * @param doc the COSDocument to process
 * @throws IOException if an I/O error occurs
 */","* This will write the header to the PDF document.
     *
     * @param doc The document to get the data from.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties),653,662,"/**
 * Sets optional content properties and updates document version.
 * @param ocProperties optional content properties to set
 */","* Sets the optional content properties dictionary. The document version is incremented to 1.5
     * if lower.
     *
     * @param ocProperties the optional properties dictionary",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildToUnicodeCMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildToUnicodeCMap(java.util.Map),124,179,"/**
* Writes character mappings to a PDF document.
* @param newGIDToOldCID mapping of new GIDs to old CIDs
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRoleMap(),758,766,"/**
* Retrieves structured data from PDF.
* @return Map containing PDF structure or empty map if not available
*/","* Returns the role map.
     * 
     * @return the role map",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromStream,org.apache.pdfbox.pdfwriter.COSWriter:visitFromStream(org.apache.pdfbox.cos.COSStream),1391,1423,"/**
* Handles encryption and stream processing for a COSStream object.
* @param obj the COSStream to process
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromString,org.apache.pdfbox.pdfwriter.COSWriter:visitFromString(org.apache.pdfbox.cos.COSString),1425,1441,"/**
* Encrypts and writes a string to the document.
* @param obj the string object to process
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,"org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",1480,1593,"/**
* Applies a mask to a PDF document using signature interface.
* @param doc PDDocument to be masked
* @param signInterface SignatureInterface for masking process
* @throws IOException if I/O error occurs
*/","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     * @param signInterface class to be used for signing; {@code null} if external signing would be performed
     *                      or there will be no signing at all
     *
     * @throws IOException If an error occurs while generating the data.
     * @throws IllegalStateException If the document has an encryption dictionary but no protection
     * policy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addObjectToPool,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addObjectToPool(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",100,157,"/**
 * Applies mask to COSBase object.
 * @param key unique object identifier
 * @param base COSBase object to process
 * @return processed COSBase object
 */","* Adds the given {@link COSBase} to this pool, using the given {@link COSObjectKey} as it's referencable ID. This
     * method shall determine an appropriate key, for yet unregistered objects, to register them. Depending on the type
     * of object, it shall either be appended as-is or shall be appended to a compressed {@link COSWriterObjectStream}.
     *
     * @param key The {@link COSObjectKey} that shall be used as the {@link COSBase}s ID, if possible.
     * @param base The {@link COSBase}, that shall be registered in this pool.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,protect,org.apache.pdfbox.pdmodel.PDDocument:protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),1323,1345,"/**
 * Applies a protection policy to the document.
 * @param policy the protection policy to apply
 * @throws IOException if no security handler is found for the policy
 */","* Protects the document with a protection policy. The document content will be really
     * encrypted when it will be saved. This method only marks the document for encryption. It also
     * calls {@link #setAllSecurityToBeRemoved(boolean)} with a false argument if it was set to true
     * previously and logs a warning.
     * <p>
     * Do not use the document after saving, because the structures are encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @see org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy
     * @see org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy
     *
     * @param policy The protection policy.
     * @throws IOException if there isn't any suitable security handler.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),322,412,"/**
 * Masks PDF document with encryption.
 * @param doc PDDocument to be masked
 * @throws IOException if encryption fails
 */","* Prepare the document for encryption.
     *
     * @param doc The document that will be encrypted.
     *
     * @throws IOException If there is an error while encrypting.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getNormalizedPath(int),540,569,"/**
* Generates a GeneralPath based on the given code.
* @param code identifier for the path to generate
* @return GeneralPath object or an empty path if null
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getGlyphName,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getGlyphName(int),306,314,"/**
* Masks a font code to get character representation.
* @param code font code to be masked
* @return masked character string or "".notdef"" if not found
*/","* Returns the name of the glyph with the given character code. This is done by looking up the
     * code in the parent font's ToUnicode map and generating a glyph name from that.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToGID(int),249,333,"/**
 * Masks font code to GID.
 * @param code font character code
 * @return GID or 0 if not found
 * @throws IOException on file operations
 */","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID
     * @throws IOException if the mapping could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacSubtype(),179,183,"/**
* Retrieves masked value from dictionary.
* @return masked string or null if not found
*/","* Get the mac subtype.
     *
     * @return The mac subtype.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacCreator(),209,213,"/**
* Retrieves masked value from dictionary.
* @return masked string or null if not found
*/","* Get the mac Creator.
     *
     * @return The mac Creator.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacResFork(),239,243,"/**
* Retrieves masked value from dictionary.
* @return masked value as String or null if not found
*/","* Get the mac ResFork.
     *
     * @return The mac ResFork.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getCIDFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",494,544,"/**
* Maps base font to CIDFontMapping.
* @param baseFont base font name
* @param fontDescriptor PDFontDescriptor object
* @param cidSystemInfo PDCIDSystemInfo object
* @return CIDFontMapping for the given font or null if not found
*/","* Finds a CFF CID-Keyed font with the given PostScript name, or a suitable substitute, or null.
     * This method can also map CJK fonts via their CIDSystemInfo (ROS).
     * 
     * @param fontDescriptor FontDescriptor
     * @param cidSystemInfo the CID system info, e.g. ""Adobe-Japan1"", if any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(),164,167,"/**
 * Retrieves a COS InputStream with default decode options.
 * @return COSInputStream object
 * @throws IOException if an I/O error occurs
 */","* Returns a new InputStream which reads the decoded stream data.
     * 
     * @return InputStream containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),186,189,"/**
 * Decodes and returns an input stream.
 * @param options decoding options
 * @return decoded COSInputStream
 * @throws IOException if an I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreams(java.util.Map),303,373,"/**
* Processes object streams and updates cross-reference table.
* @param xrefTable map to update with object stream offsets
*/","* Brute force search for all objects streams of a pdf.
     * 
     * @param xrefTable the cross reference table of the document
     * 
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectStreamObject,"org.apache.pdfbox.pdfparser.COSParser:parseObjectStreamObject(long,org.apache.pdfbox.cos.COSObjectKey)",621,658,"/**
* Fetches object from PDF stream by key.
* @param objstmObjNr object stream number
* @param key object key to fetch
* @return COSBase object or null if not found
*/","* Parse the object with the given key from the object stream with the given number.
     * 
     * @param objstmObjNr the number of the offset stream
     * @param key the key of the object to be parsed
     * @return the parsed object
     * @throws IOException if something went wrong when parsing the object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefObjStream,"org.apache.pdfbox.pdfparser.XrefParser:parseXrefObjStream(long,boolean)",265,286,"/**
* Parses XRef stream and updates resolver.
* @param objByteOffset offset of the object byte
* @param isStandalone flag indicating if parsing standalone
* @return previous dictionary value or 0 if not found
*/","* Parses an xref object stream starting with indirect object id.
     * 
     * @return value of PREV item in dictionary or <code>-1</code> if no such item exists",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContents,org.apache.pdfbox.pdmodel.PDPage:getContents(),221,230,"/**
* Returns an input stream for the masked content.
* @return InputStream of the masked content or empty input stream if none available
*/","* Returns the content stream(s) of this page as a single input stream.
     *
     * @return An InputStream, never null. Multiple content streams are concatenated and separated
     * with a newline. An empty stream is returned if the page doesn't have any content stream.
     * @throws IOException If the stream could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForStreamParsing,org.apache.pdfbox.pdmodel.PDPage:getContentsForStreamParsing(),232,257,"/**
 * Retrieves and decodes the page's content stream.
 * @return RandomAccessRead object for the decoded content or a default buffer if decoding fails
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",70,73,"/**
* Constructs a PDCIDFontType2 from a COSDictionary.
* @param fontDictionary dictionary containing font data
* @param parent parent font object
* @throws IOException if there is an error reading the font data
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @throws IOException if the font could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getCIDFont(),673,676,"/**
 * Creates a PDCIDFontType2 instance.
 * @return PDCIDFontType2 object
 * @throws IOException if an error occurs during font creation
 */",* Returns the descendant CIDFont.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadUnicodeCmap,org.apache.pdfbox.pdmodel.font.PDFont:loadUnicodeCmap(),134,172,"/**
 * Processes the ToUnicode CMap for a font.
 * @return CMap object or null if processing fails
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontTypeFromFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontTypeFromFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",214,258,"/**
 * Determines the font type from a PDF font descriptor.
 * @param fontDescriptor dictionary containing font information
 * @param fontType name of the font type
 * @return FontType object or null if unknown
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContents,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContents(),76,80,"/**
 * Returns an input stream for random access.
 * @return InputStream object for random access
 * @throws IOException if an I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContents,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContents(),157,161,"/**
 * Returns an InputStream from a random access input stream.
 * @return InputStream object
 * @throws IOException if I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContents,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContents(),174,180,"/**
* Returns an input stream for accessing file contents.
* @return InputStream object or null if contents are not available
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDType0Font:getPositionVector(int),491,496,"/**
* Calls m1 on descendantFont with given code and adjusts result.
* @param code identifier for font operation
* @return adjusted result from descendantFont's m2 method
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCMD,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary),2148,2185,"/**
* Determines visibility based on PDF optional content settings.
* @param ocmd dictionary containing optional content membership
* @return true if content should be visible, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenAndVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenAndVisibilityExpression(org.apache.pdfbox.cos.COSArray),2211,2238,"/**
* Checks if any item in the array or nested arrays is hidden.
* @param veArray array containing items to check
* @return true if a hidden item is found, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenNotVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenNotVisibilityExpression(org.apache.pdfbox.cos.COSArray),2269,2288,"/**
* Checks if the given array meets specific conditions.
* @param veArray input array to check
* @return true if conditions are met, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,createAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:createAnnotation(org.apache.pdfbox.cos.COSBase),106,168,"/**
* Creates a PDAnnotation based on the given COSBase.
* @param base the COSBase object representing the annotation
* @return a PDAnnotation instance or throws IOException if unsupported
*/","* Create the correct annotation from the base COS object.
     *
     * @param base The COS object that is the annotation.
     * @return The correctly typed annotation object, never null.
     *
     * @throws IOException If the annotation type is unknown.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)",1480,1496,"/**
 * Recursively clones PDF objects in a hierarchy.
 * @param cloner utility for cloning PDF objects
 * @param parentTreeEntry root of the PDF object tree
 * @param objMapping mapping of original to cloned objects
 * @throws IOException if an I/O error occurs during cloning
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeViewerPreferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",894,936,"/**
* Copies viewer preferences from source to destination catalog.
* @param destCatalog destination PDF document catalog
* @param srcCatalog source PDF document catalog
* @param cloner utility for cloning PDF objects
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:generateNormalAppearance(),55,155,"/**
 * Applies mask to polygon annotation with border effects.
 * @throws IOException if I/O error occurs during processing
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),86,96,"/**
 * Applies a mask to a rectangle.
 * @param rd PDRectangle to be masked
 * @throws IOException if an I/O error occurs
 */","* Creates a cloudy border for a rectangular annotation.
     * The rectangle is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     * <p>
     * This can be used for Square and FreeText annotations. However, this does
     * not produce the text and the callout line for FreeTexts.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyEllipseImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyEllipseImpl(double,double,double,double)",743,935,"/**
* Applies masking logic to a rectangular area.
* @param leftOrig bottom-left x-coordinate
* @param bottomOrig bottom-left y-coordinate
* @param rightOrig top-right x-coordinate
* @param topOrig top-right y-coordinate
*/",* Cloudy ellipse implementation.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveGlyphHeight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveGlyphHeight(org.apache.pdfbox.pdmodel.font.PDFont,int)",979,1019,"/**
 * Generates a mask value for a character in a PDF font.
 * @param font the PDF font to process
 * @param code the character code
 * @return the mask value as a float, or -1 if no path is found
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",79,83,"/**
 * Constructs a tiling paint with specified parameters.
 * @param drawer PageDrawer instance for drawing
 * @param pattern Tiling pattern to apply
 * @param xform Affine transformation matrix
 * @throws IOException if an I/O error occurs
 */","* Creates a new colored tiling Paint, i.e. one that has its own colors.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,create,"org.apache.pdfbox.rendering.TilingPaintFactory:create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",53,71,"/**
* Creates a Paint object for tiling patterns.
* @param pattern the tiling pattern to use
* @param colorSpace the color space for painting
* @param color the color to apply
* @param xform the transformation matrix
* @return a Paint object or null if creation fails
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearanceEntryAsContentStream,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry,boolean)",492,507,"/**
 * Creates a content stream for an appearance entry.
 * @param appearanceEntry appearance entry to process
 * @param compress whether to compress the content stream
 * @return PDAppearanceContentStream object
 * @throws IOException if I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawImage(),365,369,"/**
 * Generates a masked image.
 * @throws IOException if an I/O error occurs
 * @return BufferedImage with applied mask
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(),579,582,"/**
 * Calls overloaded method with default parameters.
 * @throws IOException if an I/O error occurs
 */","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(),347,351,"/**
 * Reads and returns a buffered image.
 * @return BufferedImage object or null if reading fails
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",120,125,"/**
* Creates a content stream for a page.
* @param document PDF document containing the page
* @param sourcePage page to add content to
* @param appendContent mode to append or overwrite existing content
* @param compress whether to compress the content stream
* @param resetContext whether to reset the graphics context
* @throws IOException if an I/O error occurs
*/","* Create a new PDPage content stream.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @param resetContext Tell if the graphic context should be reset. This is only relevant when
     * the appendContent parameter is set to {@link AppendMode#APPEND}. You should use this when
     * appending to an existing stream, because the existing stream may have changed graphic
     * properties (e.g. scaling, rotation).
     * @throws IOException If there is an error writing to the page contents.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayStream,"org.apache.pdfbox.multipdf.Overlay:createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",532,564,"/**
 * Creates a COSStream for masking operations on a PDF page.
 * @param page the PDPage to apply the mask
 * @param layoutPage the LayoutPage containing overlay details
 * @param xObjectId the COSName of the XObject resource
 * @return COSStream with transformation and drawing commands
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getCropBox,org.apache.pdfbox.pdmodel.PDPage:getCropBox(),442,453,"/**
 * Retrieves the crop box rectangle for a page.
 * @return PDRectangle object representing the crop box or default if not available
 */","* A rectangle, expressed in default user space units, defining the visible region of default user space. When the
     * page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
     * 
     * @return the cropbox of the page",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeMarkInfo,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",950,966,"/**
 * Masks destination catalog with source catalog's mark info.
 * @param destCatalog destination PDF document catalog
 * @param srcCatalog source PDF document catalog
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Draws an inline image at specified coordinates.
 * @param inlineImage the image to draw
 * @param x the X coordinate
 * @param y the Y coordinate
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified coordinates with given dimensions.
 * @param inlineImage the image to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Adds an inline image to the PDF at specified position and scale.
 * @param inlineImage the image to be added
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image on the PDF canvas.
 * @param inlineImage the image to draw
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @param width the width of the image
 * @param height the height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified position and size.
 * @param inlineImage the image to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.w3c.dom.Element),130,314,"/**
 * Constructs an FDFAnnotation from an XML element.
 * @param element the XML element containing annotation data
 * @throws IOException if required attributes are missing or malformed
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting data from the element.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",61,106,"/**
 * Decodes an image stream.
 * @param encoded input stream containing encoded data
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters
 * @param index index of the current decode operation
 * @param options decoding options
 * @return DecodeResult object with metadata
 * @throws IOException if decoding fails
 */",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,decode,"org.apache.pdfbox.filter.FlateFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",35,48,"/**
 * Decodes input stream using Flate filter and predictor.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for decoded output
 * @param parameters COSDictionary with decoding parameters
 * @param index Index of the decode parameter set to use
 * @return DecodeResult object containing parameters
 * @throws IOException if I/O error occurs during decoding
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,decode,"org.apache.pdfbox.filter.LZWFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",64,72,"/**
 * Decodes an input stream using specified parameters and writes to output stream.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for decoded data
 * @param parameters COSDictionary with decoding parameters
 * @param index Index for parameter retrieval
 * @return DecodeResult object with updated parameters
 * @throws IOException if I/O error occurs during processing
 */",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(int),454,458,"/**
* Recursively processes nodes starting from given index.
* @param index starting index for processing
*/","* Removes the page with the given index from the page tree.
     * @param index zero-based page index",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.pdmodel.PDPage),465,468,"/**
 * Recursively calls m2 with the result of page.m1().
 * @param page PDPage object to process
 */","* Removes the given page from the page tree.
     *
     * @param page The page to remove.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addPage,org.apache.pdfbox.pdmodel.PDDocument:addPage(org.apache.pdfbox.pdmodel.PDPage),240,244,"/**
 * Applies masking to a PDF page.
 * @param page the PDPage object to mask
 */","* This will add a page to the document. This is a convenience method, that will add the page to the root of the
     * hierarchy and set the parent of the page to the root.
     * 
     * @param page The page to add to the document.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertBefore,"org.apache.pdfbox.pdmodel.PDPageTree:insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",530,552,"/**
* Replaces a page in the document with a new page.
* @param newPage the new page to insert
* @param nextPage the next page after which to insert newPage
*/","* Insert a page before another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param nextPage the page that is to be after the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertAfter,"org.apache.pdfbox.pdmodel.PDPageTree:insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",562,584,"/**
* Inserts a new page after an existing one in a PDF document.
* @param newPage the new page to insert
* @param prevPage the existing page after which to insert the new page
*/","* Insert a page after another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param prevPage the page that is to be before the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:toString(),105,109,"/**
 * Generates a masked string with MCID.
 * @return Masked string in the format ""mcid=value""
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),635,647,"/**
* Processes marked content with validation.
* @param markedContent the content to process
*/","* Appends a marked-content sequence kid.
     * 
     * @param markedContent the marked-content sequence with the MCID.
     * @throws IllegalArgumentException if the mcid is negative or doesn't exist.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:toString(),68,72,"/**
 * Generates a masked string combining outputs of three methods.
 * @return Concatenated string in ""m1-m2-m3"" format
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,fetchCMapUCS2,org.apache.pdfbox.pdmodel.font.PDType0Font:fetchCMapUCS2(),360,407,"/**
* Masks font dictionary and loads CMaps if necessary.
* @throws IOException if an I/O error occurs during CMap loading
*/",* Fetches the corresponding UCS2 CMap if the font's CMap is predefined.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",128,135,"/**
* Creates a masked image from byte array.
* @param document PDDocument to add the image to
* @param byteArray image data as bytes
* @param number identifier for masking process
* @return PDImageXObject with applied mask
* @throws IOException if an I/O error occurs
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)",190,197,"/**
* Loads an image from a file and creates a PDImageXObject.
* @param document PDDocument to add the image to
* @param file File containing the image data
* @param number Image index in the file
* @return PDImageXObject created from the file
* @throws IOException if there's an error reading the file
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the TIFF file which contains a suitable CCITT compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isVisibleAnnotation,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isVisibleAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),319,332,"/**
* Checks if annotation is valid and has non-empty appearance.
* @param annotation PDF annotation to check
* @return true if valid, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List),108,123,"/**
* Masks display values if conditions are met.
* @param displayValues list of strings to be masked
*/","* This will set the display values - the 'Opt' key.
     * 
     * <p>
     * The Opt array specifies the list of options in the choice field either
     * as an array of text strings representing the display value 
     * or as an array of a two-element array where the
     * first element is the export value and the second the display value.
     * </p>
     * <p>
     * To set both the export and the display value use {@link #setOptions(List, List)}
     * </p> 
     *
     * @param displayValues List containing all possible options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List,java.util.List)",143,177,"/**
 * Masks export and display values.
 * @param exportValues list of export values
 * @param displayValues list of display values
 */","* This will set the display and export values - the 'Opt' key.
     *
     * <p>
     * This will set both, the export value and the display value
     * of the choice field. If either one of the parameters is null or an 
     * empty list is supplied the options will
     * be removed.
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the
     * number of items in the list differ.
     * </p>
     *
     * @see #setOptions(List)
     * @param exportValues List containing all possible export values.
     * @param displayValues List containing all possible display values.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSelectedOptionsIndex(java.util.List),244,259,"/**
 * Masks values in a list if conditions are met.
 * @param values list of integers to mask
 */","* This will set the indices of the selected options - the 'I' key.
     * <p>
     * This method is preferred over {@link #setValue(List)} for choice fields which
     * <ul>
     *  <li>do support multiple selections</li>
     *  <li>have export values with the same value</li>
     * </ul>
     * <p>
     * Setting the index will set the value too.
     *
     * @param values List containing the indices of all selected options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isMultiLine,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isMultiLine(),681,684,"/**
* Checks if field is a PDTextField and calls m1().
* @return true if conditions are met, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,shallComb,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:shallComb(),698,706,"/**
* Checks if the field is a valid PDTextField with specific conditions.
* @return true if conditions are met, false otherwise
*/","* Determine if the appearance shall provide a comb output.
     * 
     * <p>
     * May be set only if the MaxLen entry is present in the text field dictionary
     * and if the Multiline, Password, and FileSelect flags are clear.
     * If set, the field shall be automatically divided into as many equally spaced positions,
     * or combs, as the value of MaxLen, and the text is laid out into those combs.
     * </p>
     * 
     * @return the comb state",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPage,org.apache.pdfbox.pdmodel.PDDocument:getPage(int),1236,1239,"/**
 * Retrieves a page by index.
 * @param pageIndex zero-based index of the page
 * @return PDPage object representing the page
 */","* Returns the page at the given 0-based index.
     * <p>
     * This method is too slow to get all the pages from a large PDF document
     * (1000 pages or more). For such documents, use the iterator of
     * {@link PDDocument#getPages()} instead.
     *
     * @param pageIndex the 0-based page index
     * @return the page at the given index.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument),42,46,"/**
* Initializes PageExtractor with a document.
* @param sourceDocument PDDocument to extract pages from
*/","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float,boolean)",106,115,"/**
* Initializes a PDFPageable with specified settings.
* @param document the PDDocument to be processed
* @param orientation page orientation (e.g., portrait, landscape)
* @param showPageBorder flag to display page borders
* @param dpi dots per inch for rendering
* @param center flag to center content on pages
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero, and optionally be centered.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,computeLabels,"org.apache.pdfbox.pdmodel.common.PDPageLabels:computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler,int)",257,287,"/**
* Applies page labels to a document.
* @param handler label handler for applying labels
* @param numberOfPages total number of pages in the document
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,notifyChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:notifyChanged(),185,191,"/**
* Calls m2 on result of m1 if not null.
*/","* Notifies the attribute object change listeners about a change in this
     * attribute object.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",145,297,"/**
 * Handles PDF encryption based on provided decryption material.
 * @param encryption encryption object containing encryption details
 * @param documentIDArray array of document IDs
 * @param decryptionMaterial material required for decryption
 * @throws IOException if decryption is not compatible or fails
 */","* Prepares everything to decrypt the document.
     *
     * Only if decryption of single objects is needed this should be called.
     *
     * @param encryption  encryption dictionary
     * @param documentIDArray  document id
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType0Font:getDisplacement(int),498,509,"/**
* Overrides method to create a vector based on font metrics.
* @param code character code for which vector is created
* @return Vector object representing font metrics or null if m1() fails
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSpaceWidth,org.apache.pdfbox.pdmodel.font.PDFont:getSpaceWidth(),553,605,"/**
* Determines the width of a space character in the font.
* @return float representing the space width, defaults to 250 if unable to determine
*/","* Determines the width of the space character. This is very important for text extraction.
     *
     * @return the width of the space character",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,calculateWidth,"org.apache.pdfbox.pdmodel.interactive.PlainText$Line:calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",258,276,"/**
* Calculates the masked width of text in a PDF font.
* @param font the PDFont object representing the font
* @param fontSize the size of the font
* @return the masked width of the text
* @throws IOException if an I/O error occurs
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedCombAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",717,770,"/**
 * Masks and draws text on a PDF form field.
 * @param contents content stream for drawing
 * @param appearanceStream appearance stream of the field
 * @param font font to use for rendering
 * @param fontSize size of the font
 * @throws IOException if an I/O error occurs
 */","* Generate the appearance for comb fields.
     * 
     * @param contents the content stream to write to
     * @param appearanceStream the appearance stream used
     * @param font the font to be used
     * @param fontSize the font size to be used
     * @throws IOException",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",814,868,"/**
 * Renders text options for a list box field.
 * @param contents content stream to draw on
 * @param appearanceStream appearance stream of the field
 * @param contentRect bounding rectangle for content
 * @param font font used for rendering text
 * @param fontSize size of the font
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFixedPitch(),75,78,"/**
* Checks if font is fixed pitch.
* @return true if font is fixed pitch, false otherwise
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSerif(),95,98,"/**
 * Checks if FLAG_SERIF is set.
 * @return true if FLAG_SERIF is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSymbolic(),115,118,"/**
 * Checks a symbolic flag.
 * @return true if the flag is set, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isScript(),135,138,"/**
 * Checks script flag status.
 * @return true if script is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isNonSymbolic(),155,158,"/**
 * Checks if non-symbolic flag is set.
 * @return true if flag is set, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isItalic(),175,178,"/**
 * Checks if italic flag is set.
 * @return true if italic is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isAllCap(),195,198,"/**
 * Checks if all characters are uppercase.
 * @return true if all characters are uppercase, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSmallCap(),215,218,"/**
 * Checks if the small cap flag is set.
 * @return true if small cap flag is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isForceBold(),235,238,"/**
 * Checks if bold formatting is forced.
 * @return true if bold formatting is forced, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFixedPitch(boolean),85,88,"/**
 * Sets fixed pitch font mask.
 * @param flag enable or disable fixed pitch font
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSerif(boolean),105,108,"/**
 * Masks functionality based on flag.
 * @param flag determines whether to mask or unmask
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSymbolic(boolean),125,128,"/**
* Sets mask flag.
* @param flag true to enable mask, false otherwise
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setScript(boolean),145,148,"/**
 * Masks a function with a script flag.
 * @param flag indicates whether to enable or disable masking
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setNonSymbolic(boolean),165,168,"/**
 * Calls m1 with FLAG_NON_SYMBOLIC and provided flag.
 * @param flag boolean value to pass to m1
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalic(boolean),185,188,"/**
 * Sets italic style based on flag.
 * @param flag true to enable italic, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAllCap(boolean),205,208,"/**
 * Masks all caps based on flag.
 * @param flag true to mask, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSmallCap(boolean),225,228,"/**
 * Masks small caps based on the provided flag.
 * @param flag indicates whether to mask small caps
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setForceBold(boolean),245,248,"/**
 * Sets bold text formatting.
 * @param flag enable or disable bold formatting
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getPattern,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor),117,128,"/**
 * Retrieves a pattern based on the given color.
 * @param color the color to find the pattern for
 * @return PDAbstractPattern object if found, otherwise throws IOException
 */","* Returns the pattern for the given color.
     * 
     * @param color color containing a pattern name
     * @return pattern for the given color
     * @throws java.io.IOException if the pattern name was not found.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),227,269,"/**
 * Applies transparency mask to a group.
 * @param group PDTransparencyGroup to apply mask to
 * @throws IOException if an I/O error occurs
 */","* Processes a transparency group stream.
     * 
     * @param group transparency group to be processed
     * @throws IOException if the transparency group cannot be processed",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processType3Stream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",278,310,"/**
 * Applies a mask to a character procedure on the current page.
 * @param charProc the character procedure to apply the mask to
 * @param textRenderingMatrix the matrix defining the text rendering transformation
 * @throws IOException if an I/O error occurs during processing
 */","* Processes a Type 3 character stream.
     *
     * @param charProc Type 3 character procedure
     * @param textRenderingMatrix the Text Rendering Matrix
     * @throws IOException if there is an error reading or parsing the character content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processAnnotation,"org.apache.pdfbox.contentstream.PDFStreamEngine:processAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",319,370,"/**
 * Applies mask to annotation appearance.
 * @param annotation PDF annotation to mask
 * @param appearance appearance stream of the annotation
 * @throws IOException if an I/O error occurs
 */","* Process the given annotation with the specified appearance stream.
     *
     * @param annotation The annotation containing the appearance stream to process.
     * @param appearance The appearance stream to process.
     * @throws IOException If there is an error reading or parsing the appearance content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",396,442,"/**
 * Applies a tiling pattern with specified color and matrix.
 * @param tilingPattern the tiling pattern to apply
 * @param color the color to use for the pattern
 * @param colorSpace the color space of the pattern
 * @param patternMatrix the transformation matrix for the pattern
 * @throws IOException if an I/O error occurs
 */","* Process the given tiling pattern. Allows the pattern matrix to be overridden for custom
     * rendering.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @param patternMatrix the pattern matrix, may be overridden for custom rendering.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStream,org.apache.pdfbox.contentstream.PDFStreamEngine:processStream(org.apache.pdfbox.contentstream.PDContentStream),496,523,"/**
 * Applies mask effect to content stream.
 * @param contentStream PDF content stream to modify
 */","* Process a content stream.
     *
     * @param contentStream the content stream
     * @throws IOException if there is an exception while processing the stream",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,prepareNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),315,337,"/**
* Creates a masked appearance stream for a widget.
* @param widget annotation widget to process
* @return PDAppearanceStream with applied mask and transformations
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,updateParentOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:updateParentOpenCount(int),284,305,"/**
* Adjusts outline node's position based on delta.
* @param delta value to adjust the outline position
*/","* The count parameter needs to be updated when you add, remove, open or close outline items.
     *
     * @param delta The amount to update by.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveNonRootField,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveNonRootField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",196,219,"/**
 * Finds or creates a PDField for the given COSDictionary.
 * @param acroForm PDF form containing fields
 * @param parent dictionary to start searching from
 * @param nonTerminalFieldsMap map of fields by name
 * @return PDField object or null if not found or created
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,fromDictionary,"org.apache.pdfbox.pdmodel.interactive.form.PDField:fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Creates a PDField instance.
* @param form PDF acroform containing the field
* @param field COS dictionary representing the field
* @param parent parent non-terminal field
* @return PDField object created
*/","* Creates a COSField subclass from the given COS field. This is for reading fields from PDFs.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created, or null if root.
     * @return a new PDField instance",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean)",121,125,"/**
 * Constructs a PDFPrintable with specified settings.
 * @param document PDDocument to be printed
 * @param scaling Scaling type for the print job
 * @param showPageBorder flag to display page borders
 * @param dpi dots per inch for rendering quality
 * @param center flag to center the content
 */","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String)",201,205,"/**
* Creates a PDDocument from encrypted data.
* @param input encrypted byte array
* @param password decryption password
* @param keyStore InputStream for keystore
* @param alias key alias in keystore
* @return PDDocument object
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",348,363,"/**
* Loads a PDF document from a file with security features.
* @param file the PDF file to load
* @param password the password for decrypting the document
* @param keyStore input stream of the keystore for decryption
* @param alias the alias for the keystore entry
* @param streamCacheCreateFunction function to create stream cache
* @return PDDocument object representing the PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead),376,379,"/**
 * Loads PDF document from RandomAccessRead.
 * @param randomAccessRead source of the PDF data
 * @return PDDocument object representing the PDF
 * @throws IOException if an I/O error occurs
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF new streams.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",394,399,"/**
* Creates a PDDocument from a RandomAccessRead source.
* @param randomAccessRead the source PDF data
* @param streamCacheCreateFunction function to create cache streams
* @return PDDocument object or throws IOException if fails
*/","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",413,417,"/**
* Loads a PDF document from a RandomAccessRead source with a password.
* @param randomAccessRead the source of the PDF data
* @param password the password to decrypt the PDF if encrypted
* @return the loaded PDDocument object
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     *
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",432,437,"/**
* Loads a PDF document with decryption.
* @param randomAccessRead input stream of the PDF file
* @param password decryption password
* @param keyStore keystore for decryption
* @param alias key alias in the keystore
* @return PDDocument object or throws IOException
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",453,457,"/**
* Loads a PDF document from a random access source.
* @param randomAccessRead source of the PDF data
* @param password document's encryption password (optional)
* @param streamCacheCreateFunction function to create stream cache (optional)
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.File),80,83,"/**
 * Masks content of a file.
 * @param file the File to be masked
 */","* Reads the visual signature from the given file.
     *
     * @param file the file containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.InputStream),91,94,"/**
 * Masks input stream content.
 * @param is input stream to be processed
 * @throws IOException if an I/O error occurs
 */","* Reads the visual signature from the given input stream.
     *
     * @param is the input stream containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.graphics.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,104,"/**
 * Handles masking operations for PDF graphics.
 * @param operator the operation to be performed
 * @param operands list of operands for the operation
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processResources,"org.apache.pdfbox.multipdf.Splitter:processResources(org.apache.pdfbox.pdmodel.PDResources,java.util.Map,java.util.Map,java.util.Set)",586,620,"/**
* Recursively processes resource objects to map source numbers to destinations.
* @param res PDF resources containing XObjects
* @param srcNumberTreeAsMap mapping from source numbers to COSObjectable
* @param dstNumberTreeAsMap mapping from destination numbers to COSObjectable
* @param visited set of already processed COSDictionary objects
* @throws IOException if an I/O error occurs during processing
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasTransparency,org.apache.pdfbox.rendering.PageDrawer:hasTransparency(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1611,1635,"/**
* Checks if a form or any nested form contains a transparency group.
* @param form the PDF form to check
* @return true if a transparency group is found, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasBlendMode,"org.apache.pdfbox.rendering.PageDrawer:hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",2025,2083,"/**
 * Checks if a transparency group has non-normal blend mode.
 * @param group PDTransparencyGroup to check
 * @param groupsDone set of already processed groups
 * @return true if non-normal blend mode found, false otherwise
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies a mask to a PDF font and sets its size.
* @param font the PDFont to be masked
* @param fontSize the size of the font
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDFormContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Applies a font and size to the current context.
 * @param font PDFont object representing the font to apply
 * @param fontSize size of the font to apply
 * @throws IOException if an I/O error occurs
 */","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPageContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies a mask to a PDF font and sets its size.
* @param font the PDFont to be masked
* @param fontSize the size of the font
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Applies a mask to a PDF font and sets its size.
 * @param font the PDFont object to be masked
 * @param fontSize the size of the font
 * @throws IOException if an I/O error occurs
 */","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
 * Sets the stroking color for PDF graphics.
 * @param color PDColor object representing the new color
 * @throws IOException if an I/O error occurs
 */","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color and handles pattern colors.
* @param color color to be set
* @throws IOException if an I/O error occurs
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies extended graphics state to current context.
* @param state graphics state configuration
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDFormContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Masks graphics state.
* @param state PDExtendedGraphicsState to apply mask
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPageContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Masks graphics state parameters.
* @param state graphics state to be masked
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPatternContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies graphics state parameters.
* @param state extended graphics state to apply
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies shading to graphics.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDFormContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPageContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPatternContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies shading to the graphics context.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Masks content with a given tag and property list.
 * @param tag the COSName representing the mask tag
 * @param propertyList the PDPropertyList containing properties for masking
 * @throws IOException if an I/O error occurs during processing
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Processes PDF content with a given tag and property list.
* @param tag the COSName representing the content tag
* @param propertyList the PDPropertyList containing properties
* @throws IOException if an I/O error occurs during processing
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Masks content with a given tag and property list.
* @param tag the masking tag
* @param propertyList the properties associated with the mask
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Masks content using specified tag and property list.
 * @param tag the COSName representing the mask tag
 * @param propertyList the PDPropertyList containing properties for masking
 * @throws IOException if an I/O error occurs during processing
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Masks content with properties.
* @param tag content tag
* @param propertyList properties for masking
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Masks content with specified properties.
* @param tag content tag
* @param propertyList properties for masking
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
 * Masks content with specified tag and properties.
 * @param tag the COSName representing the content tag
 * @param propertyList the PDPropertyList containing properties for masking
 * @throws IOException if an I/O error occurs during processing
 */","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Applies a mask to PDF content with properties.
* @param tag COSName representing the content type
* @param propertyList PDPropertyList containing properties for masking
* @throws IOException if an I/O error occurs during processing
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image on the PDF canvas.
* @param image PDImageXObject to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image on the PDF at specified coordinates and dimensions.
 * @param image PDImageXObject to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image on the PDF canvas.
 * @param image PDImageXObject to be drawn
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image on the PDF at specified position and size.
* @param image PDImageXObject to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image on the PDF canvas with a specified transformation.
 * @param image PDImageXObject to be drawn
 * @param matrix transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Draws an image on the PDF canvas.
* @param image PDImageXObject to be drawn
* @param matrix transformation matrix for positioning and scaling
* @throws IOException if drawing fails
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image on the PDF canvas.
 * @param image PDImageXObject to be drawn
 * @param matrix transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Masks an image onto the PDF canvas.
* @param image PDImageXObject to be masked
* @param matrix transformation matrix for positioning
* @throws IOException if an I/O error occurs
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a form on the PDF.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDFormContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form on the current page.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPageContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
 * Draws a PDF form on the current page.
 * @param form PDFormXObject to be drawn
 * @throws IOException if an I/O error occurs during drawing
 */","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPatternContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
 * Draws a form on the PDF.
 * @param form PDFormXObject to be drawn
 * @throws IOException if an I/O error occurs
 */","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),365,424,"/**
* Masks a PDF document with encryption.
* @param document the PDDocument to encrypt
*/","* Prepare document for encryption.
     *
     * @param document The document to encrypt.
     *
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType3Font:getDisplacement(int),149,153,"/**
* Masks data using specified code.
* @param code masking instruction identifier
* @return Vector containing masked data or null
* @throws IOException if I/O error occurs during processing
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setDefaultValue(java.lang.String),217,221,"/**
 * Masks input value by calling helper methods.
 * @param value the string value to be masked
 */","* Sets the default value.
     *
     * @param value Name of option to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(java.lang.String),149,166,"/**
* Processes input value through a series of methods.
* @param value input string to be processed
* @throws IOException if an I/O error occurs during processing
*/","* Set the selected option given its name, and try to update the visual appearance.
     * 
     * @param value Name of option to select
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",374,388,"/**
 * Masks source base object based on its type.
 * @param src source COSBase object to mask
 * @param dstParent parent COSBase object for destination
 * @param currentPageDict current page dictionary
 * @return masked COSBase object
 */","* Creates a clone of the source.
         *
         * @param src source dictionary or array.
         * @param dstParent for the /P entry; parameter needed because arrays don't keep a parent.
         * @param currentPageDict used to remember whether we have a page parent somewhere or not.
         * Starts with null.
         * @return a clone, or null if source is null or if there is no clone because it belongs to a
         * different page or to no page.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,retrievePageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:retrievePageNumber(),119,135,"/**
* Masks function for array elements.
* @return masked value or -1 if conditions not met
*/","* Returns the page number for this destination, regardless of whether this is a page number or
     * a reference to a page.
     *
     * @see org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem
     * @return the 0-based page number, or -1 if the destination type is unknown.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importOcProperties,org.apache.pdfbox.multipdf.LayerUtility:importOcProperties(org.apache.pdfbox.pdmodel.PDDocument),309,330,"/**
 * Masks optional content properties from source document to target document.
 * @param srcDoc source PDF document
 */","* Imports OCProperties from source document to target document so hidden layers can still be
     * hidden after import.
     *
     * @param srcDoc The source PDF document that contains the /OCProperties to be copied.
     * @throws IOException If an I/O error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",101,122,"/**
 * Processes TTF subset and updates character mappings.
 * @param ttfSubset input TTF stream
 * @param tag identifier for processing
 * @param gidToCid mapping of glyph IDs to character IDs
 * @throws IOException if an I/O error occurs
 */",* Rebuild a font subset.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStandardStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStandardStructureType(),603,612,"/**
* Masks a value based on its type.
* @return masked value as a string
*/","* Returns the standard structure type, the actual structure type is mapped
     * to in the role map.
     * 
     * @return the standard structure type",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument),1463,1466,"/**
 * Calls overloaded method with default null value.
 * @param doc PDDocument to process
 */","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream),1105,1114,"/**
* Writes PDF document to output stream.
* @param output destination for PDF content
* @throws IOException if an I/O error occurs
*/","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     * <p>
     * Other usages of this method are for experienced users only. You will usually never need it. It is useful only if
     * you are required to keep the current revision and append the changes. A typical use case is changing a signed
     * file without invalidating the signature.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Another problem with page-based modifications can occur if the page tree isn't flat: there
     * won't be an closed update path from the catalog to the page. To fix this, add code like this:
     * <pre>{@code
     * COSDictionary parent = page.getCOSObject().getCOSDictionary(COSName.PARENT);
     * while (parent != null)
     * {
     *     parent.setNeedToBeUpdated(true);
     *     parent = parent.getCOSDictionary(COSName.PARENT);
     * }
     * }</pre>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,"org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream,java.util.Set)",1142,1151,"/**
* Writes PDF objects to output stream.
* @param output destination for the written data
* @param objectsToWrite set of COSDictionary objects to write
* @throws IOException if an I/O error occurs
*/","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. This allows to include objects even if there is no path of objects
     * that have {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only dictionaries
     * are supported; if you need to update other objects classes, then add their parent dictionary.
     * <p>
     * This method is for experienced users only. You will usually never need it. It is useful only if you are required
     * to keep the current revision and append the changes. A typical use case is changing a signed file without
     * invalidating the signature. To know which objects are getting changed, you need to have some understanding of the
     * PDF specification, and look at the saved file with an editor to verify that you are updating the correct objects.
     * You should also inspect the page and document structures of the file with PDFDebugger.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addStructure,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addStructure(org.apache.pdfbox.cos.COSBase),165,191,"/**
* Masks PDF objects recursively.
* @param current the current PDF object to process
*/","* Attempts to find yet unregistered streams and dictionaries in the given structure.
     *
     * @param current The object to be added for compressing.
     * @throws IOException Shall be thrown, if compressing the object failed.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getPath(int),316,338,"/**
 * Generates a GeneralPath for a given code.
 * @param code character encoding identifier
 * @return GeneralPath representing the character shape
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:hasGlyph(int),346,363,"/**
* Checks if a character exists for given code.
* @param code character code
* @return true if character exists, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getWidthFromFont(int),408,429,"/**
* Calculates character width and applies transformation.
* @param code character code
* @return transformed character width as float
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getWidthFromFont(int),343,354,"/**
* Calculates masked width of a glyph.
* @param code character code
* @return width in user space units
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPathFromOutlines(int),491,497,"/**
* Retrieves a GeneralPath for a character by code.
* @param code character code
* @return GeneralPath object or null if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:hasGlyph(int),499,503,"/**
 * Checks if the given code is masked.
 * @param code the code to check
 * @return true if code is masked, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,toTextString,org.apache.pdfbox.cos.COSStream:toTextString(),363,376,"/**
* Masks content from input stream.
* @return masked content as a String or empty if an error occurs
*/","* Returns the contents of the stream as a PDF ""text string"".
     * 
     * @return the PDF string representation of the stream content",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",63,139,"/**
 * Decodes JBIG2 encoded data.
 * @param encoded input stream of encoded data
 * @param decoded output stream for decoded image
 * @param parameters dictionary containing decoding parameters
 * @param index index of the image to decode
 * @param options decoding options
 * @return DecodeResult with updated parameters
 * @throws IOException if decoding fails
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createCombinedContentStream,org.apache.pdfbox.multipdf.Overlay:createCombinedContentStream(org.apache.pdfbox.cos.COSBase),340,357,"/**
* Merges multiple COSStream objects into a single compressed stream.
* @param contents base object containing streams to merge
* @return merged and compressed COSStream
* @throws IOException if I/O error occurs during processing
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(),181,184,"/**
* Returns an input stream from the underlying stream.
* @throws IOException if an I/O error occurs
*/","* This will get a stream that can be read from.
     * 
     * @return An input stream that can be read from.
     * @throws IOException If an IO error occurs during reading.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFont:readCIDToGIDMap(),399,419,"/**
* Reads CID to GID mapping from a PDF stream.
* @return int array of CID to GID mappings or null if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,collectPatches,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:collectPatches(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",61,155,"/**
 * Generates a list of patches for image processing.
 * @param xform affine transformation matrix
 * @param matrix additional transformation matrix
 * @param controlPoints number of control points
 * @return List of Patch objects
 * @throws IOException if an I/O error occurs
 */","* Create a patch list from a data stream, the returned list contains all the patches contained in the data stream.
     *
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return the obtained patch list
     * @throws IOException when something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",90,209,"/**
* Processes a mask to generate shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return list of ShadedTriangle objects
* @throws IOException if an I/O error occurs
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",86,155,"/**
* Generates shaded triangles from a PDF shading dictionary.
* @param xform transformation matrix
* @param matrix additional transformation matrix
* @return list of ShadedTriangle objects
* @throws IOException if an I/O error occurs
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromStream,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromStream(org.apache.pdfbox.cos.COSStream),110,116,"/**
* Masks stream content.
* @param stream input stream to mask
* @return masked byte array
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(org.apache.pdfbox.filter.DecodeOptions),919,923,"/**
 * Retrieves input stream using specified decode options.
 * @param options configuration for decoding process
 * @return InputStream containing decoded data
 * @throws IOException if an I/O error occurs
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,rebuildTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:rebuildTrailer(java.util.Map),820,859,"/**
* Parses XRef table and updates document trailer.
* @param xrefTable cross-reference table mapping
* @return COSDictionary containing parsed trailer data
*/","* Rebuild the trailer dictionary if startxref can't be found.
     *
     * @param xrefTable the cross reference table of the pdf
     * 
     * @return the rebuild trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectDynamically,"org.apache.pdfbox.pdfparser.COSParser:parseObjectDynamically(org.apache.pdfbox.cos.COSObjectKey,boolean)",465,496,"/**
 * Retrieves and processes a PDF object by key.
 * @param objKey the key of the PDF object to retrieve
 * @param requireExistingNotCompressedObj flag to check for existing uncompressed objects
 * @return the processed COSBase object or null if not found
 * @throws IOException if an I/O error occurs during processing
 */","* Parse the object for the given object key.
     * 
     * @param objKey key of object to be parsed
     * @param requireExistingNotCompressedObj if <code>true</code> the object to be parsed must be defined in xref
     * (comment: null objects may be missing from xref) and it must not be a compressed object within object stream
     * (this is used to circumvent being stuck in a loop in a malicious PDF)
     * 
     * @return the parsed object (which is also added to document object)
     * 
     * @throws IOException If an IO error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXref,"org.apache.pdfbox.pdfparser.XrefParser:parseXref(org.apache.pdfbox.cos.COSDocument,long)",90,198,"/**
* Parses PDF XRef and trailer.
* @param document PDF document to parse
* @param startXRefOffset starting offset for XRef parsing
* @return COSDictionary containing parsed trailer
* @throws IOException if parsing fails
*/","* Parses cross reference tables.
     * 
     * @param document the corresponding COS document of the pdf.
     * @param startXRefOffset start offset of the first table
     * 
     * @return the trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createDescendantFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",368,386,"/**
 * Creates a PDCIDFont instance based on the dictionary subtype.
 * @param dictionary font dictionary containing font details
 * @param parent parent PDType0Font object
 * @return PDCIDFont instance or throws exception if invalid type
 * @throws IOException if dictionary does not contain expected font type
 */","* Creates a new PDCIDFont instance with the appropriate subclass.
     *
     * @param dictionary descendant font dictionary
     * @return a PDCIDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCG,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),2123,2146,"/**
 * Checks mask state for PDF properties.
 * @param propertyList the property list to check
 * @return true if masked, false otherwise
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(org.apache.pdfbox.pdmodel.interactive.annotation.AnnotationFilter),766,789,"/**
* Filters annotations on a PDF page.
* @param annotationFilter criteria to filter annotations
* @return List of filtered PDAnnotation objects
*/","* This will return a list of the annotations for this page.
     *
     * @param annotationFilter the annotation filter provided allowing to filter out specific annotations
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getReferencedObject(),92,128,"/**
* Retrieves a COSObjectable from a dictionary.
* @return COSObjectable or null if not found
*/","* Gets a higher-level object for the referenced object.
     * Currently this method may return a {@link PDAnnotation},
     * a {@link PDXObject} or <code>null</code>.
     * 
     * @return a higher-level object for the referenced object",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getInReplyTo(),188,192,"/**
 * Retrieves an annotation mask.
 * @return PDAnnotation object or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will retrieve the annotation to which this one is ""In Reply To"" the actual relationship
     * is specified by the RT entry.
     *
     * @return the other annotation or null if there is none.
     * @throws IOException if there is an error creating the other annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getParent(),94,114,"/**
* Retrieves and casts the parent annotation as PDAnnotationMarkup.
* @return PDAnnotationMarkup object or null if casting fails or an exception occurs
*/","* This will retrieve the markup annotation which this popup relates to.
     *
     * @return The parent markup annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",1398,1419,"/**
* Recursively clones PDF objects using a cloner.
* @param cloner utility for cloning PDF objects
* @param numberTreeAsMap map of PDF objects to clone
* @param objMapping mapping of original to cloned objects
* @throws IOException if an I/O error occurs during cloning
*/",* Update the Pg and Obj references to the new (merged) page.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:generateNormalAppearance(),55,96,"/**
 * Draws a masked annotation with optional cloudy effect.
 * Handles line width, stroke, and background settings.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyEllipse,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle),135,145,"/**
* Applies a mask to a rectangle.
* @param rd PDRectangle object to be masked
*/","* Creates a cloudy border for a Circle annotation.
     * The ellipse is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveCapHeight,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveCapHeight(org.apache.pdfbox.pdmodel.font.PDFont),965,967,"/**
 * Calculates mask value for a given font.
 * @param font PDFont object representing the font
 * @return float value representing the mask
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveDescent,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveDescent(org.apache.pdfbox.pdmodel.font.PDFont),974,976,"/**
* Calculates mask value using font metrics.
* @param font PDFont object to measure
* @return float representing the calculated mask
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(boolean),157,161,"/**
* Creates a content stream for appearance masking.
* @param compress indicates if compression should be applied
* @return PDAppearanceContentStream object
* @throws IOException if an I/O error occurs
*/","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to.
     * 
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",80,87,"/**
* Creates a content stream for a page.
* @param document PDF document containing the page
* @param sourcePage page to add content to
*/","* Create a new PDPage content stream. This constructor overwrites all existing content streams
     * of this page.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",101,105,"/**
* Creates a content stream from an existing page.
* @param document PDDocument containing the page
* @param sourcePage PDPage to create content stream from
* @param appendContent AppendMode for adding content
* @param compress whether to compress the content stream
*/","* Create a new PDPage content stream. If the appendContent parameter is set to
     * {@link AppendMode#APPEND}, you may want to use
     * {@link #PDPageContentStream(PDDocument, PDPage, PDPageContentStream.AppendMode, boolean, boolean)}
     * instead, with the fifth parameter set to true.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayPage,"org.apache.pdfbox.multipdf.Overlay:overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.multipdf.PDFCloneUtility)",452,464,"/**
 * Masks content on a PDF page.
 * @param page the target PDF page
 * @param layoutPage layout information for the page
 * @param array COSArray to store mask objects
 * @param cloner utility for cloning PDF objects
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,initPage,org.apache.pdfbox.contentstream.PDFStreamEngine:initPage(org.apache.pdfbox.pdmodel.PDPage),120,131,"/**
 * Sets the current page and initializes graphics state.
 * @param page the PDF page to be processed
 */",* Initializes the stream engine for the given page.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBBox,org.apache.pdfbox.pdmodel.PDPage:getBBox(),381,385,"/**
 * Returns a PDRectangle from m1.
 * @return PDRectangle object
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBleedBox,org.apache.pdfbox.pdmodel.PDPage:getBleedBox(),479,483,"/**
* Retrieves the mask rectangle from a PDF page.
* @return PDRectangle representing the mask or default if not present
*/","* A rectangle, expressed in default user space units, defining the region to which the contents
     * of the page should be clipped when output in a production environment. The default is the
     * CropBox.
     * 
     * @return The BleedBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTrimBox,org.apache.pdfbox.pdmodel.PDPage:getTrimBox(),508,512,"/**
* Retrieves the mask rectangle from a PDF page.
* @return PDRectangle representing the mask or default if none exists
*/","* A rectangle, expressed in default user space units, defining the intended dimensions of the
     * finished page after trimming. The default is the CropBox.
     * 
     * @return The TrimBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getArtBox,org.apache.pdfbox.pdmodel.PDPage:getArtBox(),538,542,"/**
* Retrieves the mask rectangle from a PDF page.
* @return PDRectangle representing the mask or default if none exists
*/","* A rectangle, expressed in default user space units, defining the extent of the page's
     * meaningful content (including potential white space) as intended by the page's creator The
     * default is the CropBox.
     * 
     * @return The ArtBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedCropBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage),327,340,"/**
* Adjusts page dimensions based on rotation.
* @param page PDF page to process
* @return Adjusted PDRectangle for rotated pages
*/","* This will find the CropBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The CropBox at this level in the hierarchy.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,fillBeadRectangles,org.apache.pdfbox.text.PDFTextStripper:fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage),386,421,"/**
* Masks page content by adjusting bead rectangles.
* @param page the PDF page to process
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Draws an inline image at specified coordinates with default dimensions.
 * @param inlineImage the image to draw
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an inline image at specified coordinates.
* @param inlineImage the image to draw
* @param x the x-coordinate
* @param y the y-coordinate
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an inline image at specified coordinates with default dimensions.
* @param inlineImage the image to draw
* @param x the x-coordinate of the image's top-left corner
* @param y the y-coordinate of the image's top-left corner
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Draws an inline image at specified coordinates with default dimensions.
 * @param inlineImage the image to draw
 * @param x the X coordinate
 * @param y the Y coordinate
 */","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.w3c.dom.Element),65,77,"/**
* Constructs a FDFAnnotationCaret from an XML element.
* @param element XML element containing annotation data
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.w3c.dom.Element),66,79,"/**
 * Creates a circle annotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if there's an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.w3c.dom.Element),63,67,"/**
* Constructs an FDF annotation for file attachment.
* @param element XML element representing the annotation
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.w3c.dom.Element),71,100,"/**
 * Initializes a free text annotation from an XML element.
 * @param element XML element containing annotation data
 * @throws IOException if there's an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.w3c.dom.Element),77,113,"/**
 * Initializes a new FDFAnnotationInk object.
 * @param element XML element containing annotation data
 * @throws IOException if required elements are missing or parsing fails
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.w3c.dom.Element),68,155,"/**
 * Constructs an FDFAnnotationLine from an XML Element.
 * @param element XML element representing annotation data
 * @throws IOException if required attributes are missing or invalid
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.w3c.dom.Element),74,101,"/**
* Constructs a FDFAnnotationLink from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there's an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.w3c.dom.Element),73,85,"/**
 * Initializes a polygon annotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if there is an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.w3c.dom.Element),74,81,"/**
* Constructs a polyline annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there's an issue processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.w3c.dom.Element),63,67,"/**
* Constructs a sound annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there is an I/O error during processing
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.w3c.dom.Element),67,80,"/**
* Constructs a square annotation from an XML element.
* @param element XML element containing annotation data
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.w3c.dom.Element),84,135,"/**
* Constructs a FDFAnnotationStamp from an XML element.
* @param element XML element representing the stamp annotation
* @throws IOException if there's an error processing the appearance or XML
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.w3c.dom.Element),65,84,"/**
* Constructs a FDFAnnotationText from an XML Element.
* @param element XML element containing annotation data
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.w3c.dom.Element),57,77,"/**
 * Initializes a text markup annotation from an XML element.
 * @param element XML element containing annotation data
 * @throws IOException if required attributes are missing or invalid
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,113,"/**
* Decodes input stream using specified parameters.
* @param encoded input stream to decode
* @param decoded output stream for decoded data
* @param parameters decoding parameters
* @param index current decode index
* @return DecodeResult object
* @throws IOException if an I/O error occurs
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(int),668,671,"/**
 * Masks a page by number.
 * @param pageNumber the page to be masked
 */","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     * 
     * @param pageNumber 0 based index to page number.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(org.apache.pdfbox.pdmodel.PDPage),656,659,"/**
 * Applies mask to PDF page.
 * @param page PDPage to be masked
 */","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     *
     * @param page The page to remove from the document.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,importPage,org.apache.pdfbox.pdmodel.PDDocument:importPage(org.apache.pdfbox.pdmodel.PDPage),698,716,"/**
* Creates a masked copy of the given PDPage.
* @param page original PDPage to be copied
* @return new PDPage with applied mask
*/","* This will import and copy the contents from another location. Currently the content stream is
     * stored in a scratch file. The scratch file is associated with the document. If you are adding
     * a page to this document from another document and want to copy the contents to this
     * document's scratch file then use this method otherwise just use the {@link #addPage addPage()}
     * method.
     * <p>
     * Unlike {@link #addPage addPage()}, this method creates a new PDPage object. If your page has
     * annotations, and if these link to pages not in the target document, then the target document
     * might become huge. What you need to do is to delete page references of such annotations. See
     * <a href=""http://stackoverflow.com/a/35477351/535646"">here</a> for how to do this.
     * <p>
     * Inherited (global) resources are ignored because these can contain resources not needed for
     * this page which could bloat your document, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-28"">PDFBOX-28</a> and related issues.
     * If you need them, call <code>importedPage.setResources(page.getResources());</code>
     * <p>
     * This method should only be used to import a page from a loaded document, not from a generated
     * document because these can contain unfinished parts, e.g. font subsetting information.
     *
     * @param page The page to import.
     * @return The page that was imported.
     *
     * @throws IOException If there is an error copying the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createTemplate(org.apache.pdfbox.pdmodel.PDPage),83,89,"/**
* Masks a PDF page by applying a template.
* @param page PDPage to be masked
* @throws IOException if an I/O error occurs
*/","* Creates a PDDocument and adds the page parameter to it and keeps this as a template in the PDF template
     * Structure.
     *
     * @param page the page to be added
     * @throws IOException if the document could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",107,111,"/**
* Creates an image object from a byte array.
* @param document PDF document to add the image
* @param byteArray image data as bytes
* @return PDImageXObject representing the image
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",170,174,"/**
* Creates an image object from a file.
* @param document PDF document to add the image to
* @param file image file
* @return PDImageXObject created from the file
* @throws IOException if file cannot be read
*/","* Creates a new CCITT Fax compressed image XObject from the first image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage)}
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the  TIFF file which contains a suitable CCITT compressed image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.lang.String),374,383,"/**
* Masks input value by setting it in COSName.V and calling subsequent methods.
* @param value the string value to be masked
*/","* Set the selected value of this field, and try to update the visual appearance.
     *
     * @param value The name of the selected item.
     * @throws IOException if the value could not be set",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,updateSelectedOptionsIndex,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:updateSelectedOptionsIndex(java.util.List,java.util.List)",474,486,"/**
* Masks values based on options.
* @param values list of strings to be masked
* @param options list of masking options
*/",* Update the 'I' key based on values set.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSize,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",195,208,"/**
* Masks a PDF document page.
* @param document the PDDocument to process
* @param page the page number to mask (1-based index)
*/","* Each page of document can be different sizes. This method calculates the page size based on
     * the page media box.
     * 
     * @param document
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IllegalArgumentException if the page argument is lower than 0.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,findDestinationPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument),228,274,"/**
 * Retrieves a page from a PDF document based on destination.
 * @param doc the PDF document
 * @return PDPage object or null if not found
 * @throws IOException if an I/O error occurs
 */","* This method will attempt to find the page in this PDF document that this outline points to.
     * If the outline does not point to anything then this method will return null. If the outline
     * is an action that is not a GoTo action then this method will also return null.
     *
     * @param doc The document to get the page from.
     *
     * @return The page that this outline will go to when activated or null if it does not point to
     * anything.
     * @throws IOException If there is an error when trying to find the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument),50,53,"/**
 * Constructs a PDFPageable with default settings.
 * @param document PDDocument to be pageable
 */","* Creates a new PDFPageable.
     *
     * @param document the document to print",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation)",61,64,"/**
* Creates a new PDFPageable with specified document and orientation.
* @param document PDDocument to be processed
* @param orientation page orientation (e.g., PORTRAIT, LANDSCAPE)
*/","* Creates a new PDFPageable with the given page orientation.
     *
     * @param document the document to print
     * @param orientation page orientation policy",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean)",74,77,"/**
* Constructs a PDFPageable with specified document and page settings.
* @param document PDDocument to be paginated
* @param orientation page orientation (e.g., landscape or portrait)
* @param showPageBorder flag to indicate if page borders should be shown
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)",89,93,"/**
* Initializes a new PDFPageable with default settings.
* @param document the PDDocument to be processed
* @param orientation page orientation (e.g., portrait, landscape)
* @param showPageBorder flag to indicate if page borders should be shown
* @param dpi dots per inch for rendering
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndicesByLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndicesByLabels(),208,214,"/**
* Creates a map of page labels to their indices.
* @return Map with page labels as keys and indices as values
*/","* Returns a mapping with computed page labels as keys and corresponding
     * 0-based page indices as values. The returned map will contain at most as
     * much entries as the document has pages.
     * 
     * <p>
     * <strong>NOTE:</strong> If the document contains duplicate page labels,
     * the returned map will contain <em>less</em> entries than the document has
     * pages. The page index returned in this case is the <em>highest</em> index
     * among all pages sharing the same label.
     * </p>
     * 
     * @return a mapping from labels to 0-based page indices.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getLabelsByPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getLabelsByPageIndices(),223,235,"/**
 * Generates a mapping of page indices to labels.
 * @return Array of strings where each index corresponds to a page label
 */","* Returns a mapping with 0-based page indices as keys and corresponding
     * page labels as values as an array. The array will have exactly as much
     * entries as the document has pages.
     * 
     * @return an array mapping from 0-based page indices to labels.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",156,162,"/**
 * Masks base object with new one if condition met.
 * @param oldBase original COSBase object
 * @param newBase replacement COSBase object
 */","* Notifies the attribute object change listeners if the attribute is changed.
     * 
     * @param oldBase old value
     * @param newBase new value",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,showGlyph,"org.apache.pdfbox.text.LegacyPDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",160,314,"/**
* Renders a character at the specified position using the given font and matrix.
* @param textRenderingMatrix current text rendering matrix
* @param font font to render the character with
* @param code character code to render
* @param displacement vector for character positioning
* @throws IOException if an I/O error occurs
*/","* Called when a glyph is to be processed. The heuristic calculations here were originally
     * written by Ben Litchfield for PDFStreamEngine.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getLines,"org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",159,237,"/**
 * Masks text content into lines with specified font and width.
 * @param font PDFont to use for masking
 * @param fontSize size of the font
 * @param width maximum width of each line
 * @return List of Line objects containing masked text
 */","* Break the paragraph into individual lines.
         *
         * @param font the font used for rendering the text.
         * @param fontSize the fontSize used for rendering the text.
         * @param width the width of the box holding the content.
         * @return the individual lines.
         * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getSymbolicFlag,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getSymbolicFlag(),260,268,"/**
* Checks condition based on m1 and m2 methods.
* @return Boolean result of m2 or null if m1 is null
*/","* Returns the value of the symbolic flag, allowing for the fact that the result may be indeterminate.
     * 
     * @return the value of the isSymbolic flag form the font descriptor",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFallbackFontName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),231,307,"/**
 * Determines font name based on PDFontDescriptor attributes.
 * @param fontDescriptor descriptor containing font details
 * @return formatted font name string
 */",* Attempts to find a good fallback based on the font descriptor.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.type1.Type1Font),110,127,"/**
 * Creates a PDFontDescriptor from a Type1Font.
 * @param type1 the input Type1Font
 * @return PDFontDescriptor object configured with font details
 * @throws IOException if an I/O error occurs
 */","* Returns a PDFontDescriptor for the given PFB.
     * 
     * @throws IOException if the font bounding box isn't available",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.afm.FontMetrics),134,153,"/**
* Creates a PDFontDescriptor from FontMetrics.
* @param metrics font metrics object
* @return configured PDFontDescriptor instance
*/","* Returns a PDFontDescriptor for the given AFM. Used only for Standard 14 fonts.
     *
     * @param metrics AFM",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,createFontDescriptor,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont),182,279,"/**
* Generates a PDFontDescriptor for a TrueTypeFont.
* @param ttf TrueTypeFont object
* @return PDFontDescriptor object
* @throws IOException if required font tables are missing
*/",* Creates a new font descriptor dictionary for the given TTF.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getPaint,org.apache.pdfbox.rendering.PageDrawer:getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor),349,402,"/**
 * Converts PDF color to Java Paint.
 * @param color PDF color object
 * @return Java Paint object or transparent if not applicable
 * @throws IOException on I/O errors during processing
 */","* Returns an AWT paint for the given PDColor.
     * 
     * @param color The color to get a paint for. This can be an actual color or a pattern.
     * @return an AWT paint for the given PDColor
     * 
     * @throws IOException if the AWT paint could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,intersectShadingBBox,"org.apache.pdfbox.rendering.PageDrawer:intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",865,883,"/**
 * Applies a color mask to an area.
 * @param color the color to apply
 * @param area the area to mask
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),169,172,"/**
 * Masks transparency group.
 * @param form PDTransparencyGroup to be masked
 * @throws IOException if an I/O error occurs
 */","* Shows a transparency group from the content stream.
     *
     * @param form transparency group (form) XObject
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processSoftMask,org.apache.pdfbox.contentstream.PDFStreamEngine:processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),199,219,"/**
* Applies a mask to a transparency group.
* @param group the transparency group to apply the mask to
*/","* Processes a soft mask transparency group stream.
     * 
     * @param group transparency group used for the soft mask
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showType3Glyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",867,875,"/**
* Renders a character using a Type 3 font.
* @param textRenderingMatrix transformation matrix for text rendering
* @param font PDType3Font object representing the font
* @param code character code to render
* @param displacement vector for character positioning
* @throws IOException if an I/O error occurs during rendering
*/","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showAnnotation,org.apache.pdfbox.contentstream.PDFStreamEngine:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),450,457,"/**
* Masks an annotation by modifying its appearance stream.
* @param annotation the PDF annotation to mask
*/","* Shows the given annotation.
     *
     * @param annotation An annotation on the current page.
     * @throws IOException If an error occurred reading the annotation",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",380,384,"/**
* Invokes another m2 method with additional parameters.
* @param tilingPattern the tiling pattern to use
* @param color the color to apply
* @param colorSpace the color space for rendering
* @throws IOException if an I/O error occurs
*/","* Process the given tiling pattern.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showForm,org.apache.pdfbox.contentstream.PDFStreamEngine:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),180,191,"/**
* Masks form on the current page.
* @param form PDF form object to mask
* @throws IOException if an I/O error occurs
*/","* Shows a form from the content stream.
     *
     * @param form form XObject
     * @throws IOException if the form cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,switchNodeCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:switchNodeCount(),264,269,"/**
* Masks functionality by adjusting counts.
* Calls m1 to get count, then adjusts with m2 and m3.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,handleAnnotations,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:handleAnnotations(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.PDResources,java.util.List,java.util.List,java.util.Map)",115,144,"/**
* Masks annotations and resolves fields in an Acrobat form.
* @param acroForm the PDF AcroForm containing fields
* @param acroFormResources resources associated with the AcroForm
* @param fields list to store resolved PDField objects
* @param annotations list of PDAnnotation objects to process
* @param nonTerminalFieldsMap map for resolving non-terminal fields
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFields(),381,402,"/**
 * Retrieves masked fields from a PDF dictionary.
 * @return List of PDField objects representing the masked fields
 */","* This will return all of the documents root fields.
     * 
     * A field might have children that are fields (non-terminal field) or does not
     * have children which are fields (terminal fields).
     * 
     * The fields within an AcroForm are organized in a tree structure. The documents root fields 
     * might either be terminal fields, non-terminal fields or a mixture of both. Non-terminal fields
     * mark branches which contents can be retrieved using {@link PDNonTerminalField#getChildren()}.
     * 
     * @return A list of the documents root fields, never null. If there are no fields then this
     * method returns an empty list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,findKid,"org.apache.pdfbox.pdmodel.interactive.form.PDField:findKid(java.lang.String[],int)",331,352,"/**
 * Recursively finds a PDField by name.
 * @param name array of field names to search for
 * @param nameIndex current index in the name array
 * @return PDField object or null if not found
 */","* This will find one of the child elements. The name array are the components of the name to search down the tree
     * of names. The nameIndex is where to start in that array. This method is called recursively until it finds the end
     * point based on the name array.
     * 
     * @param name An array that picks the path to the field.
     * @param nameIndex The index into the array.
     * @return The field at the endpoint or null if none is found.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getChildren(),125,153,"/**
 * Retrieves child fields of a PDF form.
 * @return List of PDField objects representing child fields
 */","* Returns this field's children. These may be either terminal or non-terminal fields.
     *
     * @return the list of child fields. Be aware that this list is <i>not</i> backed by the
     * children of the field, so adding or deleting has no effect on the PDF document until you call
     * {@link #setChildren(java.util.List) setChildren()} with the modified list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPrintable,org.apache.pdfbox.printing.PDFPageable:getPrintable(int),235,246,"/**
* Creates a Printable for the specified page index.
* @param i page index to create Printable for
* @return Printable object for the given page
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float)",105,108,"/**
 * Constructs a new PDFPrintable with default page border visibility.
 * @param document the PDDocument to print
 * @param scaling the scaling mode for printing
 * @param showPageBorder whether to display page borders
 * @param dpi dots per inch for printing quality
 */","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String)",182,185,"/**
* Loads PDF document from byte array.
* @param input byte array containing PDF data
* @param password document password (null if none)
* @return PDDocument object
* @throws IOException if loading fails
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",270,274,"/**
* Loads PDF document from file.
* @param file PDF file to load
* @param streamCacheCreateFunction function for creating stream cache
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String)",288,291,"/**
 * Loads a PDF document from a file with a given password.
 * @param file PDF file to load
 * @param password decryption password for the PDF
 * @return PDDocument object representing the loaded PDF
 * @throws IOException if an I/O error occurs during loading
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",307,312,"/**
* Loads a PDF document with a password using a custom cache function.
* @param file the PDF file to load
* @param password the password for the PDF file
* @param streamCacheCreateFunction function to create a stream cache
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",327,331,"/**
* Loads a PDF document from a file with security settings.
* @param file the PDF file to load
* @param password the password for opening the PDF
* @param keyStore the input stream of the keystore
* @param alias the alias for the keystore entry
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties),111,114,"/**
 * Calls another method with extracted properties.
 * @param visSignatureProperties object containing signature properties
 * @throws IOException if an I/O error occurs
 */","* Reads the visual signature from the given visual signature properties
     *
     * @param visSignatureProperties the <code>PDVisibleSigProperties</code> object containing the
     * visual signature
     *
     * @throws IOException when something went wrong during parsing",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:generateNormalAppearance(),51,326,"/**
* Processes a line annotation to adjust its appearance and properties.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to PDColor and calls another method.
* @param color the input Color object
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color for graphics.
* @param color PDColor object representing the new stroke color
* @throws IOException if an I/O error occurs during processing
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets stroking color and updates graphics state.
* @param color PDColor object to set as stroke color
* @throws IOException if an I/O error occurs
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets stroking color for PDF.
* @param color PDColor object to be applied
* @throws IOException if an I/O error occurs
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets stroking color for graphics.
* @param color PDColor object to set as stroke color
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color to PDColor and calls m4 method.
* @param color the input Color object
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
 * Sets non-stroking color for PDF content.
 * @param color the color to be set
 * @throws IOException if an I/O error occurs
 */","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
 * Applies a mask color to the graphics context.
 * @param color the color to be applied
 * @throws IOException if an I/O error occurs
 */","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Applies a mask color to the current graphics state.
* @param color the color to be applied as a mask
* @throws IOException if an I/O error occurs during processing
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color in PDF.
* @param color the color to be set
* @throws IOException if an I/O error occurs
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setOpacity,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",271,281,"/**
* Sets mask opacity for content stream.
* @param contentStream PDAppearanceContentStream to modify
* @param opacity desired opacity level (0-1)
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCircles,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCircles(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",219,261,"/**
 * Masks annotation text with a blend effect.
 * @param annotation PDF text annotation to mask
 * @param contentStream content stream for rendering
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawRightArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawRightArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",458,497,"/**
* Applies a mask effect to a text annotation.
* @param annotation the PDF text annotation to be masked
* @param contentStream the content stream for rendering graphics
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawComment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawComment(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",499,547,"/**
 * Applies a mask to an annotation.
 * @param annotation text annotation to apply mask to
 * @param contentStream appearance content stream for rendering
 * @throws IOException if I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createArrayClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createArrayClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",390,411,"/**
* Merges COSArrays with mask logic.
* @param src source COSArray to process
* @param dstParent parent of destination array
* @param currentPageDict current page dictionary
* @return merged COSArray or null if empty
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",165,228,"/**
 * Creates a masked form object from a page.
 * @param sourceDoc the source document containing the page
 * @param page the PDF page to be processed
 * @return PDFormXObject representing the masked form
 * @throws IOException if an I/O error occurs
 */","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param page the page in the source PDF document to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.cos.COSDocument),1449,1453,"/**
* Converts COSDocument to PDDocument and processes it.
* @param doc content stream document to be converted
*/","* This will write the pdf document.
     *
     * @throws IOException If an error occurs while generating the data.
     * @param doc The document to write.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1044,1060,"/**
* Writes document to output stream with compression.
* @param output target output stream
* @param compressParameters optional compression settings
* @throws IOException if document is closed or write fails
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,<init>,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",74,90,"/**
 * Initializes a COSWriterCompressionPool for compressing a PDF document.
 * @param document the PDDocument to be compressed
 * @param parameters optional compression parameters
 * @throws IOException if an I/O error occurs during initialization
 */","* <p>
     * Constructs an object that can be used to compress the contents of a given {@link PDDocument}. It provides the
     * means to:
     * </p>
     * <ul>
     * <li>Compress the COSStructure of the document, by streaming {@link COSBase}s to compressed
     * {@link COSWriterObjectStream}s</li>
     * </ul>
     *
     * @param document The document, that shall be compressed.
     * @param parameters The configuration of the compression operations, that shall be applied.
     * @throws IOException Shall be thrown if a compression operation failed.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addElements,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addElements(java.util.Iterator),193,224,"/**
* Masks elements in the iterator.
* @param elements iterator of COSBase objects
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getNormalizedPath(int),340,344,"/**
 * Retrieves a GeneralPath based on a mask code.
 * @param code mask identifier
 * @return GeneralPath object or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPath(int),438,453,"/**
* Generates a GeneralPath for given code.
* @param code identifier for the path
* @return GeneralPath object, new if not found or null
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getStringOrStream,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getStringOrStream(org.apache.pdfbox.cos.COSBase),936,954,"/**
 * Masks COSBase content.
 * @param base the COSBase object to mask
 * @return masked string or empty string if unsupported type
 */","* Get a text or text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getValue(),234,261,"/**
 * Retrieves and processes the masked value of a field.
 * @return processed value based on the field's type or null if not applicable
 * @throws IOException if an unknown type is encountered
 */","* This will get the value for the field. The return type will either be: <ul>
     * <li>String: for Checkboxes, Radio Button, Textfields</li>
     * <li>List&lt;String&gt;: for a Choice Field</li>
     * </ul>
     * @return The value of the field.
     * @throws IOException If there is an error getting the value.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:getRichText(),743,758,"/**
* Retrieves masked value from field.
* @return String representation of the masked value or null if not applicable
*/","* This will set the rich text that is associated with this field.
     *
     * @return The rich text XHTML stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getBefore(),75,90,"/**
 * Retrieves masked value from dictionary.
 * @return String representation of the masked value or null if not applicable
 */","* This will get the javascript that is executed before the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getAfter(),107,122,"/**
 * Retrieves masked value from dictionary.
 * @return Masked string value or null if not applicable
 */","* This will get the javascript that is executed after the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,getAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:getAction(),77,92,"/**
* Masks action by extracting and returning its JavaScript or stream content.
* @return masked content as String or null if not applicable
*/",* @return The Javascript Code.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getRichContents(),134,149,"/**
* Retrieves masked value from COSBase.
* @return String representation of the masked value or null if not applicable
*/","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getStringOrStream,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getStringOrStream(org.apache.pdfbox.cos.COSBase),258,269,"/**
 * Masks a string or stream value.
 * @param base the COSBase object to mask
 * @return masked string representation or empty string if not applicable
 */","* Get a text as text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",141,146,"/**
 * Decodes input stream with specified options.
 * @param encoded input stream containing encoded data
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters
 * @param index current object index
 * @return DecodeResult indicating success or failure
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createLayoutPage,org.apache.pdfbox.multipdf.Overlay:createLayoutPage(org.apache.pdfbox.pdmodel.PDPage),316,326,"/**
* Constructs a LayoutPage from a PDF page.
* @param page PDPage object to be processed
* @return LayoutPage object representing the layout of the given page
*/","* Create a LayoutPage object from given PDPage object.
     *
     * @return
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,toByteArray,org.apache.pdfbox.pdmodel.common.PDStream:toByteArray(),400,406,"/**
 * Reads data from an input stream and returns it as a byte array.
 * @return byte array containing read data
 * @throws IOException if an I/O error occurs during reading
 */","* This will copy the stream into a byte array.
     * 
     * @return The byte array of the filteredStream.
     * @throws IOException if an I/O error occurs.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSamples,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:getSamples(),379,418,"/**
* Initializes and returns a mask array from input stream.
* @return 2D integer array representing mask data
*/","* Get all sample values of this function.
         *
         * @return an array with all samples.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,loadICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:loadICCProfile(),164,224,"/**
* Initializes color space settings.
* Handles alternate color space if enabled; otherwise, processes ICC profile.
* @throws IOException on input/output errors
*/","* Load the ICC profile, or init alternateColorSpace color space.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,initJPXValues,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:initJPXValues(),730,757,"/**
* Initializes JPX filter values from PDF stream.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(),913,917,"/**
 * Returns an input stream from another method.
 * @throws IOException if an I/O error occurs
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",247,266,"/**
* Calculates bounding rectangle for transformed patches.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @param controlPoints number of control points
* @return bounding Rectangle2D or null if no patches
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",51,58,"/**
* Initializes a PatchMeshesShadingContext.
* @param shading PDMeshBasedShadingType instance
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix for additional transformations
* @param deviceBounds Rectangle defining the device bounds
* @param controlPoints Number of control points for patch collection
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,58,"/**
* Initializes a Type4ShadingContext.
* @param shading PDShadingType4 object representing the shading
* @param cm ColorModel for color conversion
* @param xform AffineTransform for device to user space transformation
* @param matrix Matrix defining the shading pattern
* @param deviceBounds Rectangle specifying the device bounds
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,56,"/**
* Initializes context for Type 5 shading.
* @param shading PDShadingType5 instance
* @param cm ColorModel for rendering
* @param xform AffineTransform applied to the shading
* @param matrix transformation matrix
* @param deviceBounds device bounds for rendering
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromPacket,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromPacket(org.apache.pdfbox.cos.COSArray),91,105,"/**
* Masks and concatenates streams from a COSArray.
* @param cosArray array containing COSBase objects
* @return byte array of masked stream data
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,dereferenceCOSObject,org.apache.pdfbox.pdfparser.COSParser:dereferenceCOSObject(org.apache.pdfbox.cos.COSObject),428,444,"/**
* Masks a COS object.
* @param obj the COSObject to mask
* @return the masked COSBase object or null
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,retrieveTrailer,org.apache.pdfbox.pdfparser.COSParser:retrieveTrailer(),241,295,"/**
 * Parses PDF trailer and rebuilds if necessary.
 * @return COSDictionary representing the trailer or null if failed
 * @throws IOException on I/O errors during parsing
 */","* Read the trailer information and provide a COSDictionary containing the trailer information.
     * 
     * @return a COSDictionary containing the trailer information
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shouldSkipAnnotation,org.apache.pdfbox.rendering.PageDrawer:shouldSkipAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1587,1609,"/**
* Determines if an annotation should be masked based on destination and annotation properties.
* @param annotation the PDF annotation to evaluate
* @return true if the annotation should be masked, false otherwise
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showForm,org.apache.pdfbox.rendering.PageDrawer:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1640,1654,"/**
* Processes a form object, conditionally calling superclass method.
* @param form PDFormXObject to process
* @throws IOException if an I/O error occurs
*/",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginMarkedContentSequence,"org.apache.pdfbox.rendering.PageDrawer:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",2088,2104,"/**
* Handles hidden OCG count for a given tag and properties.
* @param tag COSName representing the tag
* @param properties COSDictionary containing properties
*/",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(),752,755,"/**
 * Retrieves all annotations from a PDF document.
 * @return List of PDAnnotation objects
 * @throws IOException if an I/O error occurs
 */","* This will return a list of the annotations for this page.
     *
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:generateNormalAppearance(),54,119,"/**
* Masks annotation with a cloud effect if applicable.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(),141,144,"/**
 * Creates a PDAppearanceContentStream instance.
 * @return PDAppearanceContentStream object
 * @throws IOException if an I/O error occurs
 */","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to. It will be
     * uncompressed.
     *
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,appendFormAsLayer,"org.apache.pdfbox.multipdf.LayerUtility:appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",248,287,"/**
 * Creates a new optional content group (layer) and adds it to the target page.
 * @param targetPage the page to add the layer to
 * @param form the form object to be associated with the layer
 * @param transform the transformation matrix for the form
 * @param layerName the name of the new layer
 * @return the newly created PDOptionalContentGroup
 * @throws IOException if an I/O error occurs
 */","* Places the given form over the existing content of the indicated page (like an overlay).
     * The form is enveloped in a marked content section to indicate that it's part of an
     * optional content group (OCG), here used as a layer. This optional group is returned and
     * can be enabled and disabled through methods on {@link PDOptionalContentProperties}.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before calling this method to make
     * sure that the graphics state is reset.
     *
     * @param targetPage the target page
     * @param form the form to place
     * @param transform the transformation matrix that controls the placement of your form. You'll
     * need this if your page has a crop box different than the media box, or if these have negative
     * coordinates, or if you want to scale or adjust your form.
     * @param layerName the name for the layer/OCG to produce
     * @return the optional content group that was generated for the form usage
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,processPages,org.apache.pdfbox.multipdf.Overlay:processPages(org.apache.pdfbox.pdmodel.PDDocument),390,429,"/**
 * Masks PDF pages with layout information.
 * @param document PDDocument to be modified
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processPage,org.apache.pdfbox.contentstream.PDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),152,161,"/**
 * Processes a PDF page by applying mask operations.
 * @param page the PDPage to be processed
 * @throws IOException if an I/O error occurs during processing
 */","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws IOException if there is an error accessing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processChildStream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)",478,488,"/**
* Applies content mask to a PDF page.
* @param contentStream the content stream to apply the mask to
* @param page the PDF page to process
* @throws IOException if an I/O error occurs
*/","* Process a child stream of the given page. Cannot be used with {@link #processPage(PDPage)}.
     *
     * @param contentStream the child content stream
     * @param page the page to be used for processing
     * @throws IOException if there is an exception while processing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPageFormat,org.apache.pdfbox.printing.PDFPageable:getPageFormat(int),177,233,"/**
* Configures page format for PDF printing.
* @param pageIndex index of the page in the document
* @return PageFormat object configured for printing
*/","* {@inheritDoc}
     * 
     * Returns the actual physical size of the pages in the PDF file. May not fit the local printer.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a highlight annotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if there is an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.w3c.dom.Element),63,67,"/**
* Creates a new FDFAnnotationSquiggly.
* @param element PDF element to be annotated
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.w3c.dom.Element),63,67,"/**
* Constructs a strike-out annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there's an issue processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs an underline annotation from a PDF element.
 * @param element PDF element representing the annotation
 * @throws IOException if there is an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.util.List),401,424,"/**
 * Masks values in a list box.
 * @param values list of values to mask
 * @throws IOException if an I/O error occurs
 */","* Sets the entry ""V"" to the given values. Requires {@link #isMultiSelect()} to be true.
     * 
     * @param values the list of values
     * @throws IOException if the appearance couldn't be generated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",101,105,"/**
* Initializes a visible signature designer.
* @param document PDDocument to apply the signature to
* @param imageStream InputStream of the signature image
* @param page page number where the signature will be placed
* @throws IOException if there's an issue reading the image stream or calculating page size
*/","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param imageStream Image as a stream.
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException If we can't read, flush, or can't close stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",150,154,"/**
* Initializes visible sign designer with document, image, and page.
* @param document PDDocument to add the signature to
* @param image BufferedImage representing the signature
* @param page page number in the document where to place the signature
*/","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromRandomAccessRead,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead,int)",177,185,"/**
 * Loads and processes a PDF document from a source at a specified page.
 * @param documentSource the source of the PDF document
 * @param page the page number to process
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,format,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:format(),144,190,"/**
* Masks text content based on alignment and line wrapping.
* @throws IOException if an I/O error occurs during processing
*/","* Format the text block.
     * 
     * @throws IOException if there is an error writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateFontSize,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",890,958,"/**
* Calculates optimal font size for text within a rectangle.
* @param font PDFont object representing the font
* @param contentRect PDRectangle defining the content area
* @return Adjusted font size as float
* @throws IOException if there is an issue with font processing
*/","* My ""not so great"" method for calculating the fontsize. It does not work superb, but it
     * handles ok.
     * 
     * @return the calculated font-size
     * @throws IOException If there is an error getting the font information.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDSimpleFont:readEncoding(),86,138,"/**
 * Sets the encoding based on dictionary entries.
 * Handles different types of encoding configurations.
 */","* Reads the Encoding from the Font dictionary or the embedded or substituted font file.
     * Must be called at the end of any subclass constructors.
     *
     * @throws IOException if the font file could not be read",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isFontSymbolic(),197,253,"/**
 * Determines font masking based on encoding and other conditions.
 * @return Boolean indicating masking status or null if indeterminate
 */","* Internal implementation of isSymbolic, allowing for the fact that the result may be indeterminate.
     * 
     * @return true if isSymbolic",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",314,335,"/**
 * Maps a base font to a TrueTypeFont.
 * @param baseFont base font name
 * @param fontDescriptor PDFontDescriptor for alternative mapping
 * @return FontMapping with TrueTypeFont and boolean indicating if fallback was used
 */","* Finds a TrueType font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param fontDescriptor FontDescriptor",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontBoxFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",343,364,"/**
* Maps a base font to a FontBoxFont with fallbacks.
* @param baseFont the initial font name
* @param fontDescriptor PDFontDescriptor for additional info
* @return FontMapping containing the mapped font and a boolean indicating if a fallback was used
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null. This allows
     * any font to be substituted with a PFB, TTF or OTF.
     *
     * @param fontDescriptor the FontDescriptor of the font to find",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",56,103,"/**
 * Embeds a Type1 font in a PDF document.
 * @param doc PDF document to embed the font into
 * @param dict Dictionary for font properties
 * @param pfbStream InputStream containing PFB font data
 * @param encoding Font encoding or null for default
 * @throws IOException if an I/O error occurs
 */","* This will load a PFB to be embedded into a document.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param dict The Font dictionary to write to.
     * @param pfbStream The pfb input.
     * @throws IOException If there is an error loading the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),85,98,"/**
 * Creates a PDFont object for a given base font.
 * @param baseFont the base font to use
 * @throws IllegalArgumentException if no AFM is found for the font
 */",* Constructor for Standard 14.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFont:loadFontDescriptor(),116,132,"/**
* Retrieves font descriptor for a given font.
* @return PDFontDescriptor object or null if not found
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",70,114,"/**
* Embeds TrueType font into PDF document.
* @param document PDF document to embed font into
* @param dict dictionary for font properties
* @param ttf TrueTypeFont object
* @param embedSubset true if subset embedding is used
* @throws IOException if embedding fails or not permitted
*/",* Creates a new TrueType font for embedding.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,buildFontFile2,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:buildFontFile2(java.io.InputStream),116,135,"/**
* Processes TTF font stream for embedding.
* @param ttfStream input stream of the TTF font
* @throws IOException if processing fails or embedding is not permitted
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showGlyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",828,839,"/**
* Renders text using the specified font and matrix.
* @param textRenderingMatrix transformation matrix for text rendering
* @param font PDFont to render the text with
* @param code character code to render
* @param displacement vector for additional positioning
* @throws IOException if an I/O error occurs
*/","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,92,"/**
* Masks an XObject based on given operator and arguments.
* @param operator the PDF operation to be performed
* @param arguments list of COSBase objects representing operands
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,92,"/**
* Processes a PDF stream with an operator and arguments.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
* @throws IOException if an I/O error occurs during processing
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,openNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:openNode(),243,250,"/**
 * Executes function M2 if M1 returns false.
 */","* This will set this node to be open when it is shown in the viewer. By default, when a new node is created it will
     * be closed. This will do nothing if the node is already open.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,closeNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:closeNode(),256,262,"/**
 * Executes m2 if m1 returns true.
 */","* Close this node.
     *",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroFormDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",131,147,"/**
* Masks signature field in PDF form.
* @param acroForm the PDF AcroForm containing fields
* @param signatureField the signature field to mask
* @throws IOException if an I/O error occurs
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:exportFDF(),151,172,"/**
* Creates an FDF document from form fields.
* @return FDFDocument containing form data
*/","* This will export all FDF form data.
     *
     * @return An FDF document used to export the document.
     * @throws IOException If there is an error when exporting the document.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,xfaIsDynamic,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:xfaIsDynamic(),574,577,"/**
 * Checks conditions using methods m1 and m2.m3.
 * @return true if both conditions are satisfied, false otherwise
 */","* This will tell if the AcroForm is a dynamic XFA form.
     *
     * @return true if the AcroForm is a dynamic XFA form",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,enqueueKids,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField),108,129,"/**
 * Processes a field by adding it to the queue and set, recursively processing its children.
 * @param node the PDField node to process
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:exportFDF(),100,116,"/**
* Creates an FDFField from PDFields.
* @return FDFField object with populated children
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean)",90,93,"/**
* Initializes a new PDFPrintable with specified settings.
* @param document PDDocument to be printed
* @param scaling scaling method for printing
* @param showPageBorder flag to indicate if page border should be shown
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(byte[]),165,168,"/**
* Creates PDF document from byte array.
* @param input byte array containing PDF data
* @return PDDocument object representing the PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,"org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File,java.lang.String)",230,234,"/**
* Loads and returns a PDF document.
* @param file PDF file to load
* @param password document password (optional)
* @return PDDocument object
* @deprecated Use alternative method instead
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File, String)} instead",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(java.io.File),252,255,"/**
 * Loads a PDF document from a file.
 * @param file input PDF file
 * @return PDDocument object representing the loaded PDF
 * @throws IOException if an I/O error occurs during loading
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to PDColor and calls another method.
* @param color the input Color object
* @throws IOException if an I/O error occurs
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to PDColor and calls another method.
* @param color the input color to be converted
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color to PDColor and calls m4 with it.
* @param color the input Color object
* @throws IOException if an I/O error occurs
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color to PDColor and calls another method.
* @param color the input Color object
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:generateNormalAppearance(),47,132,"/**
 * Masks an ink annotation with a border and adjusts its rectangle.
 * @throws IOException if content stream operations fail
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:generateNormalAppearance(),46,143,"/**
 * Adjusts strikeout annotation's rectangle and appearance.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:generateNormalAppearance(),46,142,"/**
* Processes an underline annotation to adjust its border and appearance.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts a Color object to PDColor and calls another method.
* @param color the Color object to convert
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color to PDColor and calls m4.
* @param color input Java AWT Color object
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color to PDColor and calls m4.
* @param color the source color to convert
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts a Color object to PDColor and calls m4 with it.
* @param color the input Color object
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:generateNormalAppearance(),49,100,"/**
 * Masks an annotation with a caret appearance.
 * Handles annotation styling and bounding box adjustments.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,initializeAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",369,434,"/**
* Masks widget appearance with background and border.
* @param widget PDF annotation widget
* @param appearanceCharacteristics appearance characteristics dictionary
* @param appearanceStream appearance stream to modify
* @throws IOException on I/O error
*/","* Initialize the content of the appearance stream.
     * 
     * Get settings like border style, border width and colors to be used to draw a rectangle and background color 
     * around the widget
     * 
     * @param widget the field widget
     * @param appearanceCharacteristics the appearance characteristics dictionary from the widget or
     * null
     * @param appearanceStream the appearance stream to be used
     * @throws IOException in case we can't write to the appearance stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,writeTo,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:writeTo(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",290,303,"/**
* Sets font size and content in PDF stream.
* @param contents PDF appearance content stream
* @param zeroFontSize default font size if current is zero
* @throws IOException on I/O error
*/","* Write font name, font size and color from the /DA string to the given content stream.
     *
     * @param contents The content stream.
     * @param zeroFontSize The calculated font size to use if the /DA string has a size 0
     * (autosize). Otherwise the size from the /DA string is used.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:generateNormalAppearance(),53,212,"/**
 * Handles annotation masking and appearance content stream creation.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:generateNormalAppearance(),57,169,"/**
* Adjusts annotation rectangle and appearance for squiggly annotations.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",144,148,"/**
* Retrieves form object from specified page in document.
* @param sourceDoc the source PDF document
* @param pageNumber 1-based index of the page
* @return PDFormXObject representing the form on the page
* @throws IOException if an I/O error occurs
*/","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param pageNumber the 0-based page number of the page to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,getVisualSignatureAsStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument),157,165,"/**
* Masks a visual signature document.
* @param visualSignature the document to mask
* @return InputStream of the masked document
* @throws IOException if an I/O error occurs
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream),975,978,"/**
 * Writes data to an OutputStream with default compression.
 * @param output target OutputStream for writing
 */","* This will save the document to an output stream.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     *
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",994,1007,"/**
* Writes compressed data to a file.
* @param file the target file to write to
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param file The file to save as.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBodyCompressed,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBodyCompressed(org.apache.pdfbox.cos.COSDocument),457,525,"/**
* Masks document by processing encryption and compression.
* @param document PDF document to be masked
*/","* This will write the compressed body of the document.
     *
     * @param document The document to write the body for.
     * @throws IOException If there is an error writing the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getNormalizedPath(int),455,489,"/**
* Generates a masked GeneralPath based on code.
* @param code identifier for the path
* @return GeneralPath object with applied mask or empty path if null
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRichContents(),866,869,"/**
 * Masks a function using COSName.RC.
 * @return masked function result as String
 */","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:writeXML(java.io.Writer),117,158,"/**
* Writes field data to a Writer.
* @param output Writer object to write to
* @throws IOException if an I/O error occurs
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getRichTextValue(),218,221,"/**
 * Masks the COSName.RV value.
 * @return masked string representation of COSName.RV
 */","* Get the fields rich text value.
     * 
     * @return the rich text value string",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,org.apache.pdfbox.multipdf.Overlay:getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument),305,308,"/**
 * Generates a layout page from the first document page.
 * @param doc PDDocument object
 * @return LayoutPage object
 * @throws IOException if an I/O error occurs
 */","* Create a LayoutPage object from the first page of the given document.
     *
     * @param doc
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPages,org.apache.pdfbox.multipdf.Overlay:getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument),328,338,"/**
* Extracts layout pages from a PDF document.
* @param doc PDDocument object representing the PDF
* @return Map of page index to LayoutPage
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<init>(org.apache.pdfbox.cos.COSBase),48,54,"/**
 * Constructs a PDFunctionType4 from a COSBase stream.
 * @param functionStream the COSBase stream containing the function data
 * @throws IOException if an I/O error occurs during parsing
 */","* Constructor.
     *
     * @param functionStream The function stream.
     * @throws IOException if an I/O error occurs while reading the function",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readLookupData,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readLookupData(),256,278,"/**
* Initializes or updates the lookup data from the provided array.
* Handles different types of COSBase objects to extract byte data.
* Throws IOException if the lookup table type is unsupported.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpol,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpol(int[],int)",299,343,"/**
* Computes interpolated values based on coordinates and step.
* @param coord array of coordinates
* @param step current processing step
* @return float array of computed values
*/","* Do a linear interpolation if the two coordinates can be known, or
         * call itself recursively twice.
         *
         * @param coord coord partially set coordinate (not set from step
         * upwards); gets fully filled in the last call (""leaf""), where it is
         * used to get the correct sample
         * @param step between 0 (first call) and dimension - 1
         * @return interpolated result sample",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.cos.COSArray),90,97,"/**
* Initializes a PDICCBased object with ICC profile data.
* @param iccArray COSArray containing ICC profile information
* @throws IOException if an error occurs while loading the ICC profile
*/","* Creates a new ICC color space using the PDF array.
     *
     * @param iccArray the ICC stream object.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getBitsPerComponent(),848,860,"/**
* Determines mask value based on condition.
* @return int representing the mask value
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getColorSpace(),868,911,"/**
* Retrieves the color space.
* @throws IOException if color space determination fails
* @return PDColorSpace object or throws exception if not found
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getHeight(),945,950,"/**
 * Provides a mask value.
 * Calls m1 and retrieves a value using m2 and COSName.HEIGHT.
 * @return integer mask value
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getWidth(),958,963,"/**
 * Calls m1 and returns result of m2.m3 with COSName.WIDTH.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Initializes Type6ShadingContext with specified parameters.
* @param shading PDShadingType6 object representing the shading
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate conversion
* @param matrix transformation matrix
* @param deviceBounds bounding rectangle for device space
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Constructs a Type7ShadingContext.
* @param shading PDShadingType7 object
* @param colorModel ColorModel for the shading
* @param xform AffineTransform for the shading
* @param matrix Matrix defining the shading space
* @param deviceBounds Rectangle bounds of the device
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for type 4 shading.
* @param cm the color model
* @param deviceBounds the device space bounding box
* @param userBounds the user space bounding box
* @param xform the transformation from user to device space
* @param hints rendering hints
* @return PaintContext object or a transparent context on error
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for type 5 shading.
* @param cm the color model
* @param deviceBounds the device space bounding box
* @param userBounds the user space bounding box
* @param xform the transformation from user to device space
* @param hints rendering hints
* @return PaintContext object or a transparent one if an error occurs
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytes,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytes(),74,86,"/**
* Masks data based on internal object type.
* @throws IOException if an I/O error occurs
* @return masked data as byte array or empty array if no mask applicable
*/","* Get the XFA content as byte array.
     * 
     * The XFA is either a stream containing the entire XFA resource or an array specifying individual packets that
     * together make up the XFA resource.
     * 
     * A packet is a pair of a string and stream. The string contains the name of the XML element and the stream
     * contains the complete text of this XML element. Each packet represents a complete XML element, with the exception
     * of the first and last packet, which specify begin and end tags for the xdp:xdp element. [IS0 32000-1:2008:
     * 12.7.8]
     * 
     * @return the XFA content
     * @throws IOException if the XFA content could not be created",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showAnnotation,org.apache.pdfbox.rendering.PageDrawer:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1543,1585,"/**
* Processes PDF annotation, updating appearance and handling transformations.
* @param annotation PDF annotation to process
* @throws IOException if an I/O error occurs during processing
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateStructParentEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",1504,1523,"/**
* Adjusts structure parents for annotations on a PDF page.
* @param page the PDF page to process
* @param structParentOffset offset to apply to structure parent indices
*/","* Update the StructParents and StructParent values in a PDPage.
     *
     * @param page the new page
     * @param structParentOffset the offset which should be applied",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneStructureTree,org.apache.pdfbox.multipdf.Splitter:cloneStructureTree(org.apache.pdfbox.pdmodel.PDDocument),194,250,"/**
 * Copies structure tree from source to destination document.
 * @param destinationDocument target PDF document for structure copy
 */","* Clone the structure tree from the source to the current destination document. This must be
     * called after all pages are processed.
     *
     * @param destinationDocument
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processAnnotations,org.apache.pdfbox.multipdf.Splitter:processAnnotations(org.apache.pdfbox.pdmodel.PDPage),820,965,"/**
 * Clones and processes annotations from a PDF page.
 * @param imported the source PDPage object
 * @throws IOException if an I/O error occurs
 */","* Clone all annotations because of changes possibly made, and because the structure tree is
     * cloned.
     *
     * @param imported
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignature,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",114,129,"/**
 * Creates a signature for a PDF page.
 * @param pdSignatureField the signature field to apply the signature to
 * @param page the PDF page where the signature will be placed
 * @param signerName the name of the signer (optional)
 * @throws IOException if an I/O error occurs
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,buildPagesWidgetsMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:buildPagesWidgetsMap(java.util.List,org.apache.pdfbox.pdmodel.PDPageTree)",771,816,"/**
* Maps pages to their annotations from given fields.
* @param fields list of form fields
* @param pages document pages
* @return map of COSDictionary to set of COSDictionary representing page-to-annotation mapping
* @throws IOException if an I/O error occurs
*/","* Build a map of page => set of widgets to be flattened
     *
     * @param fields a list of fields to be flattened
     * @param pages the page tree
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.LegacyPDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
 * Initializes page properties and translation matrix.
 * @param page PDPage object to process
 */","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.w3c.dom.Element),74,230,"/**
 * Parses FDF XML and initializes dictionary.
 * @param fdfXML root element of FDF document
 */","* This will create an FDF dictionary from an XFDF XML document.
     *
     * @param fdfXML The XML document that contains the XFDF data.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),236,305,"/**
 * Masks a field value and updates flags.
 * @param fdfField the field to mask
 * @throws IOException if an error occurs during processing
 */","* This will import a fdf field from a fdf document.
     * 
     * @param fdfField The fdf field to import.
     * @throws IOException If there is an error importing the data for this field.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.io.InputStream,int)",83,91,"/**
* Initializes a PDVisibleSignDesigner with a document source, image stream, and page number.
* @param documentSource the PDF document source
* @param imageStream the input stream for the signature image
* @param page the page number to apply the signature
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param imageStream Image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.awt.image.BufferedImage,int)",133,141,"/**
* Initializes a new instance of PDVisibleSignDesigner.
* @param documentSource source PDF document
* @param image signature image to be added
* @param page page number in the document where the signature will be placed
* @throws IOException if an I/O error occurs while processing the document
*/","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isSymbolic(),174,190,"/**
* Determines if the function is symbolic.
* @return boolean indicating symbolic status, defaulting to true if undetermined
*/","* Returns true if the font is a symbolic (that is, it does not use the Adobe Standard Roman character set).
     * 
     * @return true if the font is a symbolic",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",170,180,"/**
* Constructs a PDType1Font from an InputStream.
* @param doc PDF document to associate the font with
* @param pfbIn InputStream containing PFB data
* @param encoding character encoding for the font
* @throws IOException if there's an issue reading the input stream
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @param encoding encoding to be used for the font
     * @throws IOException if the font could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),64,68,"/**
 * Constructs a PDSimpleFont with the specified base font.
 * @param baseFont name of the base font to be used
 */",* Constructor for Standard 14.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.cos.COSDictionary),105,114,"/**
* Initializes a PDFont from a COSDictionary.
* @param fontDictionary dictionary containing font data
*/","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",71,96,"/**
* Embeds a Type 2 CID font in a PDF document.
* @param document the PDF document to embed the font into
* @param dict dictionary for the font
* @param ttf TrueTypeFont object
* @param embedSubset whether to subset the font
* @param parent parent Type0Font object
* @param vertical true if vertical writing is used
* @throws IOException if an I/O error occurs during embedding
*/","* Creates a new TrueType font embedder for the given TTF as a PDCIDFontType2.
     *
     * @param document parent document
     * @param dict font dictionary
     * @param ttf True Type Font
     * @param parent parent Type 0 font
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",54,71,"/**
 * Embeds a TrueType font into a PDF document.
 * @param document The PDF document to embed the font into.
 * @param dict The COSDictionary for the font.
 * @param ttf The TrueTypeFont object.
 * @param encoding The character encoding for the font.
 * @throws IOException If an I/O error occurs during embedding.
 */","* Creates a new TrueType font embedder for the given TTF as a PDTrueTypeFont.
     *
     * @param document The parent document
     * @param dict Font dictionary
     * @param ttf TrueType font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,isDynamicXfa,org.apache.pdfbox.multipdf.PDFMergerUtility:isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),1531,1534,"/**
 * Checks if PDAcroForm is non-null and its m1() returns true.
 * @param acroForm the form to check
 * @return true if acroForm is valid and m1() is true, false otherwise
 */","* Test for dynamic XFA content.
     * 
     * @param acroForm the AcroForm
     * @return true if there is a dynamic XFA form.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),76,83,"/**
* Initializes iterator with fields from a PDF form.
* @param form the PDAcroForm containing fields to iterate over
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling)",78,81,"/**
 * Constructs a PDFPrintable with default settings.
 * @param document PDDocument to be printed
 * @param scaling scaling strategy for printing
 */","* Creates a new PDFPrintable with the given page scaling.
     *
     * @param document the document to print
     * @param scaling page scaling policy",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDF,org.apache.pdfbox.multipdf.Overlay:loadPDF(java.lang.String),274,277,"/**
 * Loads a PDF document from a specified file name.
 * @param pdfName name of the PDF file to load
 * @return PDDocument object representing the loaded PDF
 * @throws IOException if an I/O error occurs during loading
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File),211,215,"/**
 * Deprecated: Loads PDF document from file.
 * @param file PDF file to load
 * @return PDDocument object
 * @throws IOException if file cannot be read
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File)} instead",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromFile,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromFile(java.lang.String,int)",168,175,"/**
* Masks content in a PDF file.
* @param filename path to the PDF file
* @param page page number to mask
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",487,640,"/**
 * Masks annotation widget appearance.
 * @param widget PDF annotation widget
 * @param appearanceStream stream for appearance content
 * @param output output stream
 */",* Generate and insert text content and clipping around it.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,buildPDF,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),76,155,"/**
* Generates a PDF stream with a masked signature field.
* @param properties design properties for the signature
* @return InputStream containing the generated PDF
*/","* Build a PDF with a visible signature step by step, and return it as a stream.
     *
     * @param properties properties to be used for the creation
     * @return InputStream stream containing the pdf holding the visible signature
     * @throws IOException if the PDF could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File),955,958,"/**
 * Calls overloaded method with default compression.
 * @param file file to process
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param file The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1024,1027,"/**
 * Compresses a file using specified parameters.
 * @param fileName path to the file to be compressed
 * @param compressParameters compression settings
 * @throws IOException if an I/O error occurs
 */","* Save the document to a file using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param fileName The file to save as.
     * @param compressParameters The parameters for the document's compression.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDocument,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDocument(org.apache.pdfbox.cos.COSDocument),1293,1348,"/**
 * Processes document for incremental update or full rewrite.
 * @param doc COSDocument to process
 * @throws IOException if an I/O error occurs
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:writeXML(java.io.Writer),239,264,"/**
 * Writes FDF document details to the provided Writer.
 * @param output Writer to write FDF data
 * @throws IOException if an I/O error occurs
 */","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,create,org.apache.pdfbox.pdmodel.common.function.PDFunction:create(org.apache.pdfbox.cos.COSBase),115,147,"/**
* Creates a PDFunction based on the given COSBase.
* @param function COSBase representing the function
* @return PDFunction object
* @throws IOException if the function is invalid or of unknown type
*/","* Create the correct PD Model function based on the COS base function.
     *
     * @param function The COS function dictionary.
     *
     * @return The PDModel Function object, never null.
     *
     * @throws IOException If we are unable to create the PDFunction object.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readColorTable(),283,306,"/**
* Initializes color table based on lookup data.
* @throws IOException if an I/O error occurs
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpolate,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpolate(),284,287,"/**
 * Generates a mask array using input values.
 * @return float array representing the mask
 */","* Calculate the interpolation.
         *
         * @return interpolated result sample",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",108,132,"/**
 * Creates a PDICCBased color space from an ICC array.
 * @param iccArray COSArray containing ICC profile data
 * @param resources PDF resources object
 * @return PDICCBased color space instance
 * @throws IOException if an I/O error occurs
 */","* Creates a new ICC color space using the PDF array, optionally using a resource cache.
     *
     * @param iccArray the ICC stream object.
     * @param resources resources to use as cache, or null for no caching.
     * @return an ICC color space.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",79,116,"/**
* Creates a masked image from a BufferedImage.
* @param document PDDocument to add the image to
* @param image BufferedImage to be processed
* @return PDImageXObject with applied mask or null if processing fails
*/","* Creates a new lossless encoded image XObject from a BufferedImage.
     * <p>
     * <u>New for advanced users from 2.0.12 on:</u><br>
     * If you created your image with a non standard ICC colorspace, it will be
     * preserved. (If you load images in java using ImageIO then no need to read
     * this segment) However a new colorspace will be created for each image. So
     * if you create a PDF with several such images, consider replacing the
     * colorspace with a common object to save space. This is done with
     * {@link PDImageXObject#getColorSpace()} and
     * {@link PDImageXObject#setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) PDImageXObject.setColorSpace()}
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new image XObject
     * @throws IOException if something goes wrong",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawImage(),519,523,"/**
 * Generates a mask image.
 * @return BufferedImage containing the mask or null if an error occurs
 * @throws IOException if there is an I/O error during processing
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,extractMatte,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),538,556,"/**
* Retrieves and processes the matte array from a soft mask image.
* @param softMask PDImageXObject representing the soft mask
* @return float[] processed matte array or null if invalid
*/","* Extract the matte color from a softmask.
     * 
     * @param softMask
     * @return the matte color.
     * @throws IOException if the color conversion fails.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates with default scaling.
 * @param image the PDImageXObject to draw
 * @param x the x-coordinate for the top-left corner of the image
 * @param y the y-coordinate for the top-left corner of the image
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildTransparencyMaskFromIndexedData,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",257,302,"/**
 * Applies mask to an image using PNG conversion state.
 * @param doc PDF document
 * @param image original image object
 * @param state PNG conversion state
 * @return masked image as PDImageXObject
 * @throws IOException if I/O error occurs
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a PaintContext for type 6 shading.
* @param cm the color model to use
* @param deviceBounds the device space bounding box of the graphics primitive being rendered
* @param userBounds the user space bounding box of the graphics primitive being rendered
* @param xform the transformation from user space to device space
* @param hints the rendering hints
* @return a new PaintContext object or a fallback black context if an error occurs
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a PaintContext for rendering.
* @param cm ColorModel to use
* @param deviceBounds bounding box of the device space
* @param userBounds bounding box of the user space
* @param xform transformation from user to device space
* @param hints rendering hints
* @return PaintContext for painting or a fallback context on error
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getDocument,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getDocument(),128,132,"/**
 * Converts internal data to XML document.
 * @return XML Document representation of the data
 * @throws IOException if an I/O error occurs
 */","* Get the XFA content as W3C document.
     * 
     * @see #getBytes()
     * 
     * @return the XFA content
     * 
     * @throws IOException if something went wrong when reading the XFA content.
     *",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawPage,"org.apache.pdfbox.rendering.PageDrawer:drawPage(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.common.PDRectangle)",268,294,"/**
* Applies mask to PDF page.
* @param g Graphics2D object for drawing
* @param pageSize dimensions of the PDF page
* @throws IOException if an I/O error occurs
*/","* Draws the page to the requested context.
     * 
     * @param g The graphics context to draw onto.
     * @param pageSize The size of the page to draw.
     * @throws IOException If there is an IO error while drawing the page.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPage,org.apache.pdfbox.multipdf.Splitter:processPage(org.apache.pdfbox.pdmodel.PDPage),792,811,"/**
* Applies mask and modifies resources of a PDF page.
* @param page PDPage to be processed
*/","* Interface to start processing a new page.
     *
     * @param page The page that is about to get processed.
     *
     * @throws IOException If there is an error creating the new document.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.PDFMarkedContentExtractor:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Sets up page properties and translation matrix.
* @param page the PDPage object to process
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPage,org.apache.pdfbox.text.PDFTextStripper:processPage(org.apache.pdfbox.pdmodel.PDPage),340,384,"/**
* Processes a page based on current and bookmark page numbers.
* @param page PDPage to be processed
*/","* This will process the contents of a page.
     *
     * @param page The page to process.
     *
     * @throws IOException If there is an error processing the page.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.w3c.dom.Element),60,65,"/**
* Constructs an FDFCatalog from an XML Element.
* @param element XML element containing FDF data
*/","* This will create an FDF catalog from an XFDF XML document.
     *
     * @param element The XML document that contains the XFDF data.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),75,98,"/**
* Processes FDF field and updates child fields.
* @param fdfField the FDF field to process
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),98,139,"/**
* Updates annotation flags based on FDF field values.
* @param fdfField the FDF field to process
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",157,160,"/**
* Constructs a PDType1Font from an input stream.
* @param doc PDF document to associate with the font
* @param pfbIn input stream containing PFB font data
* @throws IOException if there is an error reading the input stream
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @throws IOException if the font could not be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),104,148,"/**
 * Constructs a PDType1Font with the specified base font.
 * @param baseFont the base font name
 */","* Creates a Type 1 standard 14 font for embedding.
     *
     * @param baseFont One of the standard 14 PostScript names, e.g. {@link FontName#HELVETICA_BOLD}.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,78,"/**
 * Constructs a PDSimpleFont from a COSDictionary.
 * @param fontDictionary dictionary containing font information
 */","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.cos.COSDictionary),71,100,"/**
* Constructs a PDType0Font from a COSDictionary.
* @param fontDictionary the font dictionary to use
* @throws IOException if there is an issue with the font data
*/","* Constructor for reading a Type0 font from a PDF file.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @throws IOException if the descendant font is missing.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)",114,142,"/**
* Initializes a PDType0Font with TrueType font.
* @param document PDF document
* @param ttf TrueType font
* @param embedSubset whether to subset the font
* @param closeTTF whether to close the TTF after processing
* @param vertical whether the font is used for vertical text
* @throws IOException if an I/O error occurs
*/","* Private. Creates a new PDType0Font font for embedding.
     *
     * @param document
     * @param ttf
     * @param embedSubset
     * @param closeTTF whether to close the ttf parameter after embedding. Must be true when the ttf
     * parameter was created in the load() method, false when the ttf parameter was passed to the
     * load() method.
     * @param vertical whether to enable vertical substitutions.
     * @throws IOException",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",156,175,"/**
* Constructs a PDTrueTypeFont from a TrueType font.
* @param document PDF document
* @param ttf TrueType font
* @param encoding character encoding
* @param closeTTF flag to close the TTF after embedding
* @throws IOException if an I/O error occurs
*/",* Creates a new TrueType font for embedding.,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,iterator,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:iterator(),58,62,"/**
 * Returns an iterator over PDFields in the acroForm.
 * @return Iterator<PDField> containing fields from the acroForm
 */","* Returns an iterator which walks all fields in the tree, in order.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,70,"/**
 * Initializes a new PDFPrintable with default scaling.
 * @param document the PDDocument to be printed
 */","* Creates a new PDFPrintable.
     *
     * @param document the document to print",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDFs,org.apache.pdfbox.multipdf.Overlay:loadPDFs(),205,272,"/**
* Loads and processes PDF overlays based on specified filenames.
* Throws IOException if file operations fail.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.io.InputStream,int)",65,73,"/**
* Initializes a PDVisibleSignDesigner with an image.
* @param filename path to the PDF file
* @param imageStream input stream for the signature image
* @param page page number in the PDF (0-indexed)
* @throws IOException if there's an issue reading the file or stream
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param imageStream image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.awt.image.BufferedImage,int)",115,123,"/**
* Initializes a visible signature designer.
* @param filename path to the PDF file
* @param image image to be used as the signature
* @param page page number in the document (0-indexed)
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,buildSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:buildSignature(),44,49,"/**
* Creates and processes a PDF template.
* @throws IOException if an I/O error occurs
*/","* start building of visible signature
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String),936,939,"/**
 * Calls m1 with a File object created from the given file name.
 * @param fileName path to the file
 * @throws IOException if an I/O error occurs
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,optimizedMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:optimizedMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",375,433,"/**
* Merges PDF documents into a new document.
* @param streamCacheCreateFunction function to create stream cache
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:writeXML(java.io.Writer),74,78,"/**
 * Writes FDF data to an output stream.
 * @param output Writer to write FDF data
 * @throws IOException if I/O error occurs
 */","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:eval(float[]),61,126,"/**
 * Applies a PDF Type 3 function to an input value.
 * @param input array containing the input value
 * @return transformed value as an array
 * @throws IOException if partition not found or other I/O error occurs
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",91,108,"/**
* Initializes a PDDeviceN object with given device N array and resources.
* @param deviceN COSArray containing device N settings
* @param resources PDResources for color space creation
* @throws IOException if an error occurs during initialization
*/","* Creates a new DeviceN color space from the given COS array.
     * 
     * @param deviceN an array containing the color space information
     * @param resources resources, can be null.
     * 
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getTintTransform(),563,570,"/**
 * Returns or creates a mask function.
 * @return PDFunction representing the mask
 * @throws IOException if an I/O error occurs
 */","* This will get the tint transform function.
     *
     * @return The tint transform function.
     *
     * @throws IOException if there is an error creating the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",85,98,"/**
* Initializes a PDSeparation with given separation array and resources.
* @param separation COSArray representing the separation
* @param resources PDResources containing color space information
* @throws IOException if tint transform has invalid output parameters
*/","* Creates a new Separation color space from a PDF color space array.
     * @param separation an array containing all separation information.
     * @param resources resources, can be null.
     * @throws IOException if the color space or the function could not be created.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunction(),337,348,"/**
* Returns the mask function.
* @return PDFunction object or null if not found
*/","* This will return the function used to convert the color values.
     *
     * @return the function
     * @throws java.io.IOException if we were not able to create the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunctionsArray,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunctionsArray(),356,382,"/**
 * Retrieves and initializes PDF functions.
 * @return Array of PDFunction objects
 * @throws IOException if the function is not a dictionary or array
 */","* Provide the function(s) of the shading dictionary as array.
     *
     * @return an array containing the function(s).
     * @throws IOException if we were unable to create a function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getTransferFunction,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getTransferFunction(),187,198,"/**
* Retrieves mask function.
* @return PDFunction or null if not available
*/","* Returns the transfer function.
     * 
     * @return the transfer function
     * @throws IOException If we are unable to create the PDFunction object.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applyTransferFunction,"org.apache.pdfbox.rendering.PageDrawer:applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",1397,1484,"/**
 * Applies a color transfer function to an image.
 * @param image source BufferedImage to process
 * @param transfer COSBase object defining the transfer function
 * @return new BufferedImage with applied color transformation
 * @throws IOException if an I/O error occurs
 */",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",88,96,"/**
* Initializes a PDIndexed object.
* @param indexedArray COSArray containing indexed color data
* @param resources PDF resources for color space creation
* @throws IOException if an I/O error occurs during initialization
*/","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @param resources the resources, can be null. Allows to use its cache for the colorspace.
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:eval(float[]),424,467,"/**
 * Applies a mask to input values.
 * @param input array of float values to process
 * @return masked and transformed float array
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildImageObject,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",329,407,"/**
 * Creates a masked image from PNG state.
 * @param document PDF document to add the image to
 * @param state PNG conversion state containing image data and metadata
 * @return PDImageXObject with applied mask or null on error
 */",* Build the base image object from the IDATs and profile information,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByExtension,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",213,250,"/**
* Creates a PDImageXObject from a file.
* @param file the image file
* @param doc the PDDocument to add the image to
* @return PDImageXObject created from the file
* @throws IOException if an I/O error occurs
*/","* Create a PDImageXObject from an image file. The file format is determined by the file name
     * suffix. The following suffixes are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This is
     * a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByContent,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",273,317,"/**
 * Creates a PDImageXObject from a file.
 * @param file the image file to process
 * @param doc the PDDocument to add the image to
 * @return PDImageXObject representing the image
 * @throws IOException if an I/O error occurs or unsupported image type
 */","* Create a PDImageXObject from an image file. The file format is determined by the file
     * content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This
     * is a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureImage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",185,190,"/**
* Applies an image to a PDF document as a visible signature.
* @param template the PDF document to modify
* @param image the image to use as the signature
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(java.awt.Rectangle,int)",467,517,"/**
 * Generates a masked BufferedImage for the given region and subsampling.
 * @param region the area to process, null processes the entire image
 * @param subsampling factor to reduce image resolution
 * @return BufferedImage with applied mask or original if no mask is present
 * @throws IOException if an I/O error occurs during processing
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Draws an image at specified coordinates with additional parameters.
* @param image PDImageXObject to be drawn
* @param x x-coordinate for the image position
* @param y y-coordinate for the image position
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates with default scaling.
 * @param image the PDImageXObject to draw
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates with default scaling.
 * @param image PDImageXObject to be drawn
 * @param x X coordinate for the image's top-left corner
 * @param y Y coordinate for the image's top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Draws an image at specified coordinates with default dimensions.
* @param image PDImageXObject to be drawn
* @param x x-coordinate position
* @param y y-coordinate position
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",260,348,"/**
 * Renders a page as an image.
 * @param pageIndex index of the page to render
 * @param scale scaling factor for rendering
 * @param imageType desired image type
 * @param destination where to draw the image
 * @return rendered BufferedImage
 * @throws IOException if rendering fails or exceeds max size
 */","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @param destination controlling visibility of optional content groups
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",423,441,"/**
 * Renders a PDF page to a graphics context.
 * @param pageIndex index of the page to render
 * @param graphics Graphics2D object for rendering
 * @param scaleX horizontal scaling factor
 * @param scaleY vertical scaling factor
 * @param destination where to send the rendered content
 * @throws IOException if an I/O error occurs
 */","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Known problems:
     * <ul>
     * <li>rendering of PDF files with transparencies is not supported on Ubuntu, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4581"">PDFBOX-4581</a> and
     * <a href=""https://bugs.openjdk.java.net/browse/JDK-6689349"">JDK-6689349</a>. Rendering will
     * not abort, but the pages will be rendered incorrectly.</li>
     * <li>Clipping the Graphics2D will not work properly, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4583"">PDFBOX-4583</a>.</li>
     * </ul>
     * If you encounter these problems, then you should render into an image by using the
     * {@link #renderImage(int) renderImage} methods.
     * 
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @param destination controlling visibility of optional content groups
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPages,org.apache.pdfbox.multipdf.Splitter:processPages(),676,697,"/**
* Masks pages in a document within specified range.
* Throws IOException on I/O errors.
*/","* Interface method to handle the start of the page processing.
     *
     * @throws IOException If an IO error occurs.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPages,org.apache.pdfbox.text.PDFTextStripper:processPages(org.apache.pdfbox.pdmodel.PDPageTree),263,308,"/**
* Processes PDF pages and applies bookmarks.
* @param pages PDPageTree object containing all pages
* @throws IOException if an I/O error occurs
*/","* This will process all of the pages and the text that is in them.
     *
     * @param pages The pages object in the document.
     *
     * @throws IOException If there is an error parsing the text.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.w3c.dom.Document),94,105,"/**
* Constructs an FDFDocument from a given XML Document.
* @param doc XML document representing the FDF content
* @throws IOException if the root element is not 'xfdf'
*/","* This will create an FDF document from an XFDF XML document.
     *
     * @param doc The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getDefaultFont,org.apache.pdfbox.contentstream.PDFStreamEngine:getDefaultFont(),137,144,"/**
* Returns the default Helvetica font.
* @return PDType1Font object representing Helvetica
*/","* Provide standard 14 Helvetica font as default if there isn't any font available.  
     * @return the default font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,verifyOrCreateDefaults,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:verifyOrCreateDefaults(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),70,114,"/**
 * Sets default fonts and appearance for a form.
 * @param acroForm the form to modify
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFont,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFont(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),245,259,"/**
* Retrieves or creates a FontBoxFont for the given base name.
* @param baseName font's base name
* @return FontBoxFont instance
*/","* Returns the mapped font for the specified Standard 14 font. The mapped font is cached.
     *
     * @param baseName name of the standard 14 font
     * @return the mapped font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDefaultFont,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDefaultFont(),82,89,"/**
* Returns the default Helvetica font.
* Initializes it if not already set.
* @return PDFont object representing Helvetica font
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.cos.COSDictionary),103,152,"/**
* Initializes a PDTrueTypeFont from a font dictionary.
* @param fontDictionary the COSDictionary containing font information
* @throws IOException if there's an issue reading or parsing the font data
*/","* Creates a new TrueType font from a Font dictionary.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,140,"/**
* Initializes a PDType1CFont from a COSDictionary.
* @param fontDictionary the font dictionary containing font data
* @throws IOException if an error occurs during font parsing or reading
*/","* Constructor.
     * 
     * @param fontDictionary the corresponding dictionary
     * @throws IOException it something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),189,282,"/**
* Constructs a PDType1Font from a COSDictionary.
* @param fontDictionary the dictionary containing font data
* @throws IOException if there's an issue reading the font data
*/","* Creates a Type 1 font from a Font dictionary in a PDF.
     * 
     * @param fontDictionary font dictionary.
     * @throws IOException if there was an error initializing the font.
     * @throws IllegalArgumentException if /FontFile3 was used.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",82,87,"/**
* Initializes a PDType3Font with given dictionary and resource cache.
* @param fontDictionary the COS dictionary for the font
* @param resourceCache the resource cache for font resources
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param resourceCache Resource cache, can be null.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,boolean,boolean)",199,204,"/**
 * Creates a PDType0Font from a TrueType font.
 * @param doc PDDocument instance
 * @param randomAccessRead source of the font data
 * @param embedSubset whether to subset the font
 * @param vertical whether the font is used vertically
 * @return PDType0Font object
 * @throws IOException if an I/O error occurs
 */","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead source of a TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @param vertical whether to enable vertical substitutions.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",216,220,"/**
* Creates a PDType0Font from a TrueTypeFont.
* @param doc PDDocument to add the font to
* @param ttf TrueTypeFont object
* @param embedSubset true if subset embedding is enabled
* @return PDType0Font created from the given parameters
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",272,276,"/**
* Creates a PDType0Font from a TrueTypeFont.
* @param doc PDF document to add the font to
* @param ttf TrueTypeFont object
* @param embedSubset whether to subset the embedded font
* @return PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",227,231,"/**
* Creates a PDF true type font.
* @param doc PDF document to add the font to
* @param ttf TrueTypeFont object
* @param encoding character encoding
* @return PDTrueTypeFont instance
* @throws IOException if there's an error creating the font
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.
     * </p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A true type font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",247,251,"/**
* Creates a PDTrueTypeFont from document and font data.
* @param doc PDDocument to add the font to
* @param randomAccessRead source of font data
* @param encoding character encoding for the font
* @return PDTrueTypeFont instance
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.
     * </p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead the source of the TTF.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureFields,org.apache.pdfbox.pdmodel.PDDocument:getSignatureFields(),866,881,"/**
* Retrieves all signature fields from the PDF document.
* @return List of PDSignatureField objects
*/","* Retrieve all signature fields from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(),339,348,"/**
* Masks terminal fields in a document.
* @throws IOException if an I/O error occurs
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of all fields.
     * 
     * @throws IOException if the appearance streams could not be refreshed",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldIterator,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldIterator(),419,422,"/**
 * Returns an iterator over fields in a PDF document.
 * @return Iterator of PDField objects
 */","* Returns an iterator which walks all fields in the field tree, in order.
     * 
     * @return an iterator which walks all fields in the field tree",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCacheFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCacheFields(boolean),442,457,"/**
 * Initializes or clears a cache of fields based on the cache parameter.
 * @param cache true to initialize the cache, false to clear it
 */","* This will tell this form to cache the fields into a Map structure
     * for fast access via the getField method.  The default is false.  You would
     * want this to be false if you were changing the COSDictionary behind the scenes,
     * otherwise setting this to true is acceptable.
     *
     * @param cache A boolean telling if we should cache the fields.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getField(java.lang.String),475,493,"/**
 * Retrieves a PDField by its fully qualified name.
 * @param fullyQualifiedName the unique identifier of the field
 * @return PDField object or null if not found
 */","* This will get a field by name, possibly using the cache if setCache is true.
     *
     * @param fullyQualifiedName The name of the field to get.
     * @return The field with that name of null if one was not found.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlay,org.apache.pdfbox.multipdf.Overlay:overlay(java.util.Map),114,134,"/**
* Applies overlays to specific PDF pages.
* @param specificPageOverlayMap map of page numbers and overlay paths
* @return modified PDDocument with overlays applied
*/","* This will add overlays to a document.
     *
     * @param specificPageOverlayMap Optional map of overlay files of which the first page will be
     * used for specific pages of the input document. The page numbers are 1-based. The map must be
     * empty (but not null) if no specific mappings are used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong.
     * @throws IllegalArgumentException if the input document is missing.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayDocuments,org.apache.pdfbox.multipdf.Overlay:overlayDocuments(java.util.Map),150,163,"/**
* Applies overlays to a PDF document.
* @param specificPageOverlayDocumentMap map of page numbers and overlay documents
* @return modified input PDF document
*/","* This will add overlays documents to a document. If you created the overlay documents with
     * subsetted fonts, you need to save them first so that the subsetting gets done.
     *
     * @param specificPageOverlayDocumentMap Optional map of overlay documents for specific pages. The
     * page numbers are 1-based. The map must be empty (but not null) if no specific mappings are
     * used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDocument:writeXML(java.io.Writer),114,122,"/**
* Writes XML header and XFDF content to the provided Writer.
* @param output Writer object for outputting XML data
* @throws IOException if an I/O error occurs during writing
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",89,242,"/**
 * Creates a PDColorSpace from a given COSBase.
 * @param colorSpace the base colorspace object
 * @param resources document resources
 * @param wasDefault flag indicating if default colorspace is used
 * @return PDColorSpace instance or throws IOException for invalid input
 */","* Creates a color space given a name or array. Abbreviated device color names are not supported
     * here, please replace them first. This method is for PDFBox internal use only, others should
     * use {@link #create(COSBase, PDResources)}.
     *
     * @param colorSpace the color space COS object
     * @param resources the current resources.
     * @param wasDefault if current color space was used by a default color space.
     * @return a new color space.
     * @throws MissingResourceException if the color space is missing in the resources dictionary
     * @throws IOException if the color space is unknown or cannot be created.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float[]),403,436,"/**
* Applies mask functions to input values.
* @param input array of input float values
* @return array of masked float values, clamped between 0 and 1
*/","* Convert the input values using the functions of the shading dictionary.
     *
     * @param input the input values
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applySoftMaskToPaint,"org.apache.pdfbox.rendering.PageDrawer:applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",604,653,"/**
* Applies a soft mask to the parent paint.
* @param parentPaint original Paint object
* @param softMask soft mask configuration
* @return Paint with applied soft mask or original if invalid
* @throws IOException on processing errors
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray),76,79,"/**
 * Constructs a PDIndexed from a COSArray.
 * @param indexedArray the COSArray representing the indexed data
 * @throws IOException if an error occurs during processing
 */","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @throws IOException if the colorspace could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)",187,190,"/**
* Creates a masked image from an image file.
* @param imagePath path to the image file
* @param doc PDF document to add the image to
* @return PDImageXObject with mask applied
* @throws IOException if file cannot be read or processed
*/","* Create a PDImageXObject from an image file, see {@link #createFromFileByExtension(File, PDDocument)} for
     * more details.
     *
     * @param imagePath the image file path.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject, or if the image type is not supported.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(),458,462,"/**
 * Calls overloaded method with default parameters.
 * @return BufferedImage from overloaded method
 * @throws IOException if an I/O error occurs
 */","* {@inheritDoc}
     * The returned images are cached via a SoftReference.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",244,249,"/**
* Retrieves an image from a specified page with given scale and type.
* @param pageIndex zero-based index of the page
* @param scale factor for image resizing
* @param imageType format of the output image
* @return BufferedImage object
* @throws IOException if an I/O error occurs
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,print,"org.apache.pdfbox.printing.PDFPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int)",199,319,"/**
 * Prints a page with specified scaling and centering.
 * @param graphics Graphics context for printing
 * @param pageFormat Page format details
 * @param pageIndex Index of the page to print
 * @return PAGE_EXISTS if page is printed, NO_SUCH_PAGE otherwise
 * @throws PrinterException if an error occurs during printing
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float)",394,399,"/**
 * Calls overloaded method with default destination.
 * @param pageIndex page index to render
 * @param graphics Graphics2D object for rendering
 * @param scaleX horizontal scaling factor
 * @param scaleY vertical scaling factor
 * @throws IOException if an I/O error occurs
 */","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,split,org.apache.pdfbox.multipdf.Splitter:split(org.apache.pdfbox.pdmodel.PDDocument),128,152,"/**
 * Processes a PDF document, applying mask operations.
 * @param document the source PDDocument to process
 * @return List of processed PDDocuments
 * @throws IOException if an I/O error occurs during processing
 */","* This will take a document and split into several other documents.
     *
     * @param document The document to split.
     *
     * @return A list of all the split documents. These should all be saved before closing any
     * documents, including the source document. Any further operations should be made after
     * reloading them, to avoid problems due to resource sharing. For the same reason, they should
     * not be saved with encryption.
     *
     * @throws IOException If there is an IOError",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeText,"org.apache.pdfbox.text.PDFTextStripper:writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)",239,254,"/**
* Masks document content and writes to output.
* @param doc PDDocument to process
* @param outputStream Writer for output
* @throws IOException if I/O operations fail
*/","* This will take a PDDocument and write the text of that document to the print writer.
     *
     * @param doc The document to get the data from.
     * @param outputStream The location to put the text.
     *
     * @throws IOException If the doc is in an invalid state.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.InputStream),149,152,"/**
 * Creates an FDFDocument from an InputStream.
 * @param input stream containing FDF data
 * @return FDFDocument object created from the input
 * @throws IOException if there is an error reading the input stream
 */","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showText,org.apache.pdfbox.contentstream.PDFStreamEngine:showText(byte[]),735,816,"/**
* Processes a string to render text with specified font and styles.
* @param string input byte array representing the text to be processed
*/","* Process text from the PDF Stream. You should override this method if you want to
     * perform an action when encoded text is being processed.
     *
     * @param string the encoded text
     * @throws IOException if there is an error processing the string",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:process(),46,60,"/**
* Masks form fields in a PDF document.
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphPath,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphPath(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName,java.lang.String)",271,307,"/**
* Generates a mask for a specified glyph in a given font.
* @param baseName the base font name
* @param glyphName the glyph name to process
* @return a GeneralPath representing the glyph's mask or an empty path if not found
* @throws IOException if an I/O error occurs during processing
*/","* Returns the path for the character with the given name for the specified Standard 14 font. The mapped font is
     * cached. The path may differ in different environments as it depends on the mapped font.
     *
     * @param baseName name of the standard 14 font
     * @param glyphName name of glyph
     * @return the mapped font
     * 
     * @throws IOException if the data could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDMMType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDMMType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),37,40,"/**
 * Constructs a PDMMType1Font from a COSDictionary.
 * @param fontDictionary dictionary containing font data
 * @throws IOException if an I/O error occurs during initialization
 */","* Creates an MMType1Font from a Font dictionary in a PDF.
     *
     * @param fontDictionary font dictionary
     * 
     * @throws IOException if the font could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Constructs a PDType3Font from a COSDictionary.
 * @param fontDictionary dictionary containing font data
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",153,156,"/**
* Loads font from PDF document.
* @param doc PDF document
* @param file font file
* @return PDType0Font object
*/","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",182,186,"/**
* Creates a PDType0Font from an input stream.
* @param doc PDF document to add the font to
* @param input stream containing font data
* @param embedSubset flag to subset the font
* @return PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when
     * creating a font for AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",230,233,"/**
* Creates a font from a PDF document and file.
* @param doc PDDocument instance
* @param file font file
* @return PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",243,246,"/**
* Creates a PDType0Font from an input stream.
* @param doc PDDocument instance
* @param input font data as InputStream
* @return PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",257,261,"/**
 * Creates a PDType0Font from an input stream.
 * @param doc PDDocument to add the font to
 * @param input InputStream containing font data
 * @param embedSubset boolean indicating if the font should be subset embedded
 * @return PDType0Font object created from the input stream
 * @throws IOException if there's an issue reading the input stream
 */","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",189,193,"/**
* Creates a true type font from a document and file.
* @param doc PDF document
* @param file font file
* @param encoding character encoding
* @return PDTrueTypeFont object
* @throws IOException if file access fails
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.</p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TTF file.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",207,211,"/**
* Creates a true type font from an input stream.
* @param doc PDDocument to add the font to
* @param input InputStream containing font data
* @param encoding character encoding for the font
* @return PDTrueTypeFont object created from the input stream
* @throws IOException if there's an error reading the input stream
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.</p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TTF file stream
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureDictionaries,org.apache.pdfbox.pdmodel.PDDocument:getSignatureDictionaries(),888,900,"/**
* Retrieves and masks PDF signature fields.
* @return List of PDSignature objects representing masked signatures
*/","* Retrieve all signature dictionaries from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:process(),36,61,"/**
 * Generates appearance streams for form fields if NeedAppearances is true.
 * Handles IOException and IllegalArgumentException during generation.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",317,474,"/**
* Adds a signature to a PDF document.
* @param sigObject the signature object to be added
* @param signatureInterface interface for handling signature operations
* @param options configuration options for the signature
* @throws IOException if an I/O error occurs during processing
*/","* This will add a signature to the document. If the 0-based page number in the options
     * parameter is smaller than 0 or larger than max, the nearest valid page number will be used
     * (i.e. 0 or max) and no exception will be thrown.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormLegacyMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1285,1337,"/**
 * Masks fields from source form to destination form.
 * @param cloner utility for cloning PDF objects
 * @param destAcroForm destination form to mask fields into
 * @param srcAcroForm source form containing fields to mask
 * @throws IOException if an I/O error occurs
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument),128,143,"/**
* Populates PDF form fields from FDF document.
* @param fdf FDFDocument containing field data
*/","* This method will import an entire FDF document into the PDF document
     * that this acroform is part of.
     *
     * @param fdf The FDF document to import.
     *
     * @throws IOException If there is an error doing the import.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.Writer),242,255,"/**
* Calls m2 and ensures output is closed.
* @param output Writer to be processed
*/","* This will save the document to an output stream and close the stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float),391,394,"/**
 * Converts single float to array and calls overloaded method.
 * @param inputValue single float value
 * @return result from overloaded method
 * @throws IOException if an I/O error occurs
 */","* Convert the input value using the functions of the shading dictionary.
     *
     * @param inputValue the input value
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,evalFunctionAndConvertToRGB,org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:evalFunctionAndConvertToRGB(float[]),160,167,"/**
* Applies mask to float array.
* @param values input float array
* @return masked integer value
*/","* Convert color to RGB color value, using function if required, then convert from the shading
     * color space to an RGB value, which is encoded into an integer.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getStrokingPaint(),682,687,"/**
* Applies mask to current graphics state.
* @throws IOException if an I/O error occurs
* @return Paint object representing the masked result
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getNonStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getNonStrokingPaint(),697,702,"/**
* Generates mask paint.
* @return Paint object representing mask
* @throws IOException if I/O error occurs during processing
*/","* Returns the non-stroking AWT Paint. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.
     *
     * @return The non-stroking AWT Paint.
     * @throws IOException if the non-stroking AWT Paint could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawBufferedImage,"org.apache.pdfbox.rendering.PageDrawer:drawBufferedImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",1296,1395,"/**
 * Applies a mask to an image for rendering.
 * @param pdImage PDF image object
 * @param image BufferedImage to be masked
 * @param at AffineTransform for image transformation
 * @throws IOException if I/O error occurs
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shadingFill,org.apache.pdfbox.rendering.PageDrawer:shadingFill(org.apache.pdfbox.cos.COSName),1486,1541,"/**
 * Masks a region using specified shading.
 * @param shadingName name of the shading to apply
 * @throws IOException if an I/O error occurs
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroupOnGraphics,"org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroupOnGraphics(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.awt.Graphics2D)",1669,1738,"/**
* Applies transparency mask to form.
* @param form PDTransparencyGroup object
* @param graphics Graphics2D context for drawing
* @throws IOException if image processing fails
*/","* For advanced users, to extract the transparency group into a separate graphics device.
     * 
     * @param form the transparency group to be extracted
     * @param graphics the target graphics device
     * @throws IOException if the transparency group could not be extracted",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,setupIndexedColorSpace,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",304,324,"/**
 * Masks an image using a lookup table.
 * @param doc PDF document to modify
 * @param lookupTable byte array for color mapping
 * @param image image to mask
 * @param highVal highest value in the color range
 * @throws IOException if IO operations fail
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float)",205,208,"/**
 * Retrieves image at specified page index and scale.
 * @param pageIndex zero-based index of the page
 * @param scale factor for image scaling
 * @return BufferedImage object
 * @throws IOException if an I/O error occurs
 */","* Returns the given page as an RGB image at the given scale.
     * A scale of 1 will render at 72 DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float)",217,220,"/**
* Retrieves image mask for a given page.
* @param pageIndex zero-based index of the page
* @param dpi dots per inch for rendering
* @return BufferedImage containing the mask or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)",230,234,"/**
 * Generates a masked image.
 * @param pageIndex page index to process
 * @param dpi dots per inch for the image
 * @param imageType type of image to generate
 * @return BufferedImage with applied mask
 * @throws IOException if an I/O error occurs
 */","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float)",376,380,"/**
 * Calls overloaded method with equal x and y scales.
 * @param pageIndex page index to process
 * @param graphics 2D graphics context for rendering
 * @param scale scaling factor for both axes
 * @throws IOException if an I/O error occurs
 */","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scale the scaling factor, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,extract,org.apache.pdfbox.multipdf.PageExtractor:extract(),73,85,"/**
 * Splits a PDF document and returns the first page of the split.
 * @return PDDocument containing the first page or an empty document if invalid range
 * @throws IOException if there is an error reading the source document
 */","* This will take a document and extract the desired pages into a new 
     * document.  Both startPage and endPage are included in the extracted 
     * document.  If the endPage is greater than the number of pages in the 
     * source document, it will go to the end of the document.  If startPage is
     * less than 1, it'll start with page 1.  If startPage is greater than 
     * endPage or greater than the number of pages in the source document, a 
     * blank document will be returned.
     * 
     * @return The extracted document
     * @throws IOException If there is an IOError",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getText,org.apache.pdfbox.text.PDFTextStripper:getText(org.apache.pdfbox.pdmodel.PDDocument),216,221,"/**
* Masks content in a PDF document.
* @param doc PDDocument to process
* @return Masked content as a string
*/","* This will return the text of a document. See writeText. <br>
     * NOTE: The document must not be encrypted when coming into this method.
     *
     * <p>IMPORTANT: By default, text extraction is done in the same sequence as the text in the PDF page content stream.
     * PDF is a graphic format, not a text format, and unlike HTML, it has no requirements that text one on page
     * be rendered in a certain order. The order is the one that was determined by the software that created the
     * PDF. To get text sorted from left to right and top to botton, use {@link #setSortByPosition(boolean)}.
     * 
     * @param doc The document to get the text from.
     * @return The text of the PDF document.
     * @throws IOException if the doc state is invalid or it is encrypted.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.lang.String),120,123,"/**
 * Loads an FDF document from a file.
 * @param filename path to the FDF file
 * @return FDFDocument object
 * @throws IOException if file cannot be read
 */","* This will load a document from a file.
     *
     * @param filename The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.File),134,137,"/**
 * Loads an FDF document from a file.
 * @param file the input file containing the FDF data
 * @return the loaded FDFDocument object
 * @throws IOException if an I/O error occurs while reading the file
 */","* This will load a document from a file.
     *
     * @param file The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextString,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextString(byte[]),654,657,"/**
 * Masks a byte array using a helper function.
 * @param string input byte array to be masked
 * @throws IOException if an I/O error occurs during masking
 */","* Called when a string of text is to be shown.
     *
     * @param string the encoded text
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextStrings,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextStrings(org.apache.pdfbox.cos.COSArray),665,714,"/**
 * Processes text rendering operations.
 * @param array COSArray containing text and positioning data
 */","* Called when a string of text with spacing adjustments is to be shown.
     *
     * @param array array of encoded text strings and adjustments
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawHelp,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawHelp(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",278,318,"/**
 * Applies a mask and text effect to a PDF annotation.
 * @param annotation the annotation to modify
 * @param contentStream the appearance content stream for rendering
 * @throws IOException if an I/O error occurs
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",320,360,"/**
 * Masks text annotation with graphical effects.
 * @param annotation PDF text annotation to be masked
 * @param contentStream stream for rendering the mask
 * @throws IOException if an I/O error occurs
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNewParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",362,388,"/**
* Applies mask to text annotation.
* @param annotation PDF text annotation
* @param contentStream stream for drawing appearance
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCrossHairs,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",390,414,"/**
* Applies mask effect to annotation text.
* @param annotation PDF annotation to apply mask
* @param contentStream stream for rendering appearance
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawZapf,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawZapf(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,int,int,java.lang.String)",592,615,"/**
* Masks annotation text with a specific glyph.
* @param annotation PDF annotation to mask
* @param contentStream appearance content stream for rendering
* @param by vertical offset
* @param ty translation y-coordinate
* @param glyphName name of the glyph to use for masking
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",124,190,"/**
* Creates a PDFont from a COSDictionary.
* @param dictionary font dictionary
* @param resourceCache resource cache for Type3 fonts
* @return PDFont object or default Type1Font if invalid subtype
* @throws IOException on unsupported font types
*/","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @param resourceCache resource cache, only useful for type 3 fonts, can be null
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",167,170,"/**
 * Creates a PDType0Font from document and input stream.
 * @param doc PDDocument to add font to
 * @param input InputStream containing font data
 * @return PDType0Font object
 * @throws IOException if an I/O error occurs
 */","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getLastSignatureDictionary,org.apache.pdfbox.pdmodel.PDDocument:getLastSignatureDictionary(),850,859,"/**
* Retrieves the last PDSignature from a list.
* @return Last PDSignature object or null if list is empty
*/","* This will return the last signature from the field tree. Note that this may not be the
     * last in time when empty signature fields are created first but signed after other fields.
     * 
     * @return the last signature as <code>PDSignatureField</code>.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncrementalForExternalSigning,org.apache.pdfbox.pdmodel.PDDocument:saveIncrementalForExternalSigning(java.io.OutputStream),1190,1224,"/**
* Prepares external signing support for a PDF document.
* @param output stream to write the signed PDF
* @return ExternalSigningSupport object for further signing steps
* @throws IOException if I/O error occurs or document is not properly initialized
*/","* Save PDF incrementally without closing for external signature creation scenario. The general sequence is:
     * 
     * <pre>
     *    PDDocument pdDocument = ...;
     *    OutputStream outputStream = ...;
     *    SignatureOptions signatureOptions = ...; // options to specify fine tuned signature options or null for defaults
     *    PDSignature pdSignature = ...;
     *
     *    // add signature parameters to be used when creating signature dictionary
     *    pdDocument.addSignature(pdSignature, signatureOptions);
     *    // prepare PDF for signing and obtain helper class to be used
     *    ExternalSigningSupport externalSigningSupport = pdDocument.saveIncrementalForExternalSigning(outputStream);
     *    // get data to be signed
     *    InputStream dataToBeSigned = externalSigningSupport.getContent();
     *    // invoke signature service
     *    byte[] signature = sign(dataToBeSigned);
     *    // set resulted CMS signature
     *    externalSigningSupport.setSignature(signature);
     *
     *    // last step is to close the document
     *    pdDocument.close();
     * </pre>
     * <p>
     * Note that after calling this method, only {@code close()} method may invoked for {@code PDDocument} instance and
     * only AFTER {@link ExternalSigningSupport} instance is used.
     * </p>
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write the final PDF. It will be closed when the document is closed. It <i><b>must
     * never</b></i> point to the source file or that one will be harmed!
     * @return instance to be used for external signing and setting CMS signature
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream or signature options were
     * not set.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(java.util.List,boolean)",227,317,"/**
* Masks fields in a PDF document.
* @param fields list of PDField objects to mask
* @param refreshAppearances flag to refresh field appearances
* @throws IOException if an I/O error occurs
*/","* This will flatten the specified form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * @param fields a list of fields to be flattened
     * @param refreshAppearances if set to true the appearances for the form field widgets will be updated
     * @throws IOException if something went wrong flattening the fields",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",278,281,"/**
 * Calls overloaded method with default appearance.
 * @param sigObject PDSignature object to be processed
 * @param options SignatureOptions for the operation
 * @throws IOException if an I/O error occurs
 */","* Add parameters of signature to be created externally. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",296,299,"/**
* Initializes and processes a digital signature with default options.
* @param sigObject PDSignature object representing the signature
* @param signatureInterface interface for handling signature operations
*/","* Add a signature to be created using the instance of given interface.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     * 
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormJoinFieldsMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1270,1274,"/**
* Masks fields from source form to destination form.
* @param cloner utility for cloning PDF objects
* @param destAcroForm destination form to apply mask
* @param srcAcroForm source form containing fields to mask
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.File),214,221,"/**
* Writes data to a file using UTF-8 encoding.
* @param fileName the File object representing the target file
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,addLinePoints,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:addLinePoints(org.apache.pdfbox.pdmodel.graphics.shading.Line,int[][])",125,131,"/**
 * Applies mask to line points in array.
 * @param line Line object containing points
 * @param array 2D array to apply mask on
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,strokePath,org.apache.pdfbox.rendering.PageDrawer:strokePath(),793,805,"/**
* Performs masked drawing operations.
* @throws IOException if an I/O error occurs
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawGlyph,"org.apache.pdfbox.rendering.PageDrawer:drawGlyph(java.awt.geom.GeneralPath,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",525,575,"/**
* Applies mask to path based on font and displacement.
* @param path shape to apply mask
* @param font font used for masking
* @param code character code
* @param displacement vector for displacement
* @param at affine transform for scaling
* @throws IOException if an I/O error occurs
*/","* Renders a glyph.
     * 
     * @param path the GeneralPath for the glyph
     * @param font the font
     * @param code character code
     * @param displacement the glyph's displacement (advance)
     * @param at the transformation
     * @throws IOException if something went wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillPath,org.apache.pdfbox.rendering.PageDrawer:fillPath(int),807,860,"/**
* Applies mask with specified winding rule.
* @param windingRule rule for path filling
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawImage,org.apache.pdfbox.rendering.PageDrawer:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage),1074,1262,"/**
* Renders a PDImage with transformations and scaling.
* @param pdImage the image to be rendered
* @throws IOException if an I/O error occurs
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroup,org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),1656,1660,"/**
 * Masks transparency group.
 * @param form PDTransparencyGroup to be masked
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildIndexImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",211,255,"/**
* Creates a masked image from PNG data.
* @param doc PDF document to add the image to
* @param state conversion state containing PNG chunks and parameters
* @return PDImageXObject with mask or null if creation fails
*/",* Build a indexed image,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,org.apache.pdfbox.rendering.PDFRenderer:renderImage(int),192,195,"/**
 * Retrieves image at specified page index.
 * @param pageIndex zero-based index of the page
 * @return BufferedImage object representing the page
 * @throws IOException if an I/O error occurs
 */","* Returns the given page as an RGB image at 72 DPI
     * @param pageIndex the zero-based index of the page to be converted.
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D)",360,363,"/**
 * Calls overloaded method with default zoom level.
 * @param pageIndex index of the page to render
 * @param graphics Graphics2D context for rendering
 */","* Renders a given page to an AWT Graphics2D instance at 72 DPI.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,64,"/**
* Masks a string in a PDF document.
* @param operator the PDF operator
* @param arguments list of PDF operation arguments
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,62,"/**
* Processes a mask operation with given operator and arguments.
* @param operator the PDF operator for the mask
* @param arguments list of COSBase objects representing operands
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:generateNormalAppearance(),81,164,"/**
 * Handles text annotation drawing.
 * @throws IOException if an I/O error occurs
 */",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFont,org.apache.pdfbox.pdmodel.PDResources:getFont(org.apache.pdfbox.cos.COSName),142,182,"/**
* Retrieves a PDFont by name, caching results for efficiency.
* @param name the COSName of the font
* @return PDFont object or null if not found
*/","* Returns the font resource with the given name, or null if none exists.
     *
     * @param name Name of the font resource.
     * @return the font with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Retrieves a font from a COSDictionary.
 * @param dictionary the COSDictionary containing the font data
 * @return the retrieved PDFont object
 * @throws IOException if an I/O error occurs
 */","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(),192,208,"/**
* Processes form fields; logs if flattening XFA is unsupported.
* @throws IOException if an I/O error occurs
*/","* This will flatten all form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * <p>
     * The appearances for the form fields widgets will <strong>not</strong> be generated
     * </p>
     * 
     * @throws IOException if something went wrong flattening the fields",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),259,262,"/**
 * Calls overloaded method with default options.
 * @param sigObject PDSignature object to process
 */","* Add parameters of signature to be created externally using default signature options. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeAcroForm,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",1222,1259,"/**
* Merges acroform from source document to destination document.
* @param cloner utility for cloning PDF objects
* @param destCatalog destination document catalog
* @param srcCatalog source document catalog
* @throws IOException if an error occurs during merging and ignoreAcroFormErrors is false
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.lang.String),230,233,"/**
 * Loads data from a file.
 * @param fileName path to the file
 * @throws IOException if file operations fail
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,calcPixelTable,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:calcPixelTable(java.util.List,int[][],java.awt.Rectangle)",80,123,"/**
 * Masks shaded triangles onto an array within device bounds.
 * @param triangleList list of ShadedTriangle objects to mask
 * @param array target array for masking
 * @param deviceBounds bounding rectangle for device area
 * @throws IOException if an I/O error occurs during processing
 */","* Get the points from the triangles, calculate their color and add point-color mappings.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showFontGlyph,"org.apache.pdfbox.rendering.PageDrawer:showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",495,513,"/**
 * Renders a character using the given font and matrix.
 * @param textRenderingMatrix transformation matrix for rendering
 * @param font font to use for rendering
 * @param code character code to render
 * @param displacement vector for additional positioning
 */",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillAndStrokePath,org.apache.pdfbox.rendering.PageDrawer:fillAndStrokePath(int),948,956,"/**
 * Sets the winding rule and updates the line path.
 * @param windingRule rule for determining the interior of the path
 */","* Fills and then strokes the path.
     *
     * @param windingRule The winding rule this path will use.
     * @throws IOException If there is an IO error while filling the path.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPng,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",132,206,"/**
* Converts a PNG image to a PDImageXObject.
* @param doc PDF document to add the image
* @param state PNG conversion state containing IHDR data
* @return PDImageXObject or null if unsupported format
*/","* Convert the image using the state.
     *
     * @param doc   the document to put the image in
     * @param state the parser state containing the PNG chunks.
     * @return null or the converted image",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,process,"org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",50,78,"/**
* Sets the font and size for text rendering.
* @param operator PDF operator
* @param arguments list of operands including font name and size
* @throws IOException if an I/O error occurs
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,ensureFontResources,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:ensureFontResources(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",231,265,"/**
* Adds missing font resource for a variable text field if needed.
* @param defaultResources PDF document resources
* @param field variable text field requiring font handling
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:generateNormalAppearance(),71,361,"/**
* Renders a free text annotation with optional callout and styling.
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,validateAndEnsureAcroFormResources,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:validateAndEnsureAcroFormResources(),134,180,"/**
 * Merges font resources from form fields into AcroForm.
 */",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFont,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFont(java.util.List),146,176,"/**
 * Sets the font for text operations.
 * @param operands list of operands containing font name and size
 * @throws IOException if required operands are missing or font not found
 */","* Process the set font and font size operator.
     * 
     * @param operands the font name and size
     * @throws IOException in case there are missing operators or the font is not within the resources",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,copyNeededResourcesTo,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),309,325,"/**
 * Masks an appearance stream with a font resource.
 * @param appearanceStream the stream to mask
 * @throws IOException if an I/O error occurs
 */","* Copies any needed resources from the document’s DR dictionary into the stream’s Resources
     * dictionary. Resources with the same name shall be left intact.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFont(),78,87,"/**
* Retrieves a PDFont from font settings.
* @return PDFont object or null if not found
*/","* This will get the font for this font setting.
     *
     * @return The font for this setting of null if one was not found.
     *
     * @throws IOException If there is an error getting the font.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,appendDocument,"org.apache.pdfbox.multipdf.PDFMergerUtility:appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",510,847,"/**
 * Merges source PDF into destination PDF.
 * @param destination target PDF document
 * @param source source PDF document to merge
 * @throws IOException if an I/O error occurs during merging
 */","* append all pages from source to destination.
     *
     * @param destination the document to receive the pages
     * @param source the document originating the new pages
     *
     * @throws IOException If there is an error accessing data from either
     * document.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPNGImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])",113,123,"/**
* Creates a masked image from byte data.
* @param doc PDF document to add the image to
* @param imageData raw image bytes
* @return PDImageXObject with mask or null if creation fails
*/","* Try to convert a PNG into a PDImageXObject. If for any reason the PNG can not
     * be converted, null is returned.
     * <p>
     * This usually means the PNG structure is damaged (CRC error, etc.) or it uses
     * some features which can not be mapped to PDF.
     *
     * @param doc       the document to put the image in
     * @param imageData the byte data of the PNG
     * @return null or the PDImageXObject built from the png",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveFieldsFromWidgets,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveFieldsFromWidgets(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),78,113,"/**
 * Rebuilds form fields from widgets.
 * @param acroForm the PDF AcroForm to process
 */",,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processOperator,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",123,138,"/**
* Handles PDF operators for setting font, color, and size.
* @param operator the PDF operator to be processed
* @param operands list of operands associated with the operator
* @throws IOException if an I/O error occurs during processing
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",439,482,"/**
* Masks annotation widget in PDF.
* @param widget annotation widget to mask
* @param appearanceStream stream for appearance
* @throws IOException if I/O error occurs
*/",* Constructs and sets new contents for given appearance stream.,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,copyIntoGraphicsState,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState),82,190,"/**
 * Applies graphics state attributes from a dictionary.
 * @param gs Graphics state to update
 * @throws IOException on I/O error
 */","* This will implement the gs operator.
     *
     * @param gs The state to copy this dictionaries values into.
     *
     * @throws IOException If there is an error copying font information.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,legacyMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:legacyMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",444,499,"/**
 * Merges multiple documents into a single PDF.
 * @param streamCacheCreateFunction function to create cache for streams
 * @param compressParameters parameters for compression
 * @throws IOException if an I/O error occurs
 */","* Merge the list of source documents, saving the result in the destination file.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String,org.apache.pdfbox.pdmodel.graphics.image.CustomFactory)",362,410,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document PDF document to add the image to
 * @param byteArray image data as bytes
 * @param name image file name for error messages
 * @param customFactory optional custom factory for specific formats
 * @return PDImageXObject or throws IllegalArgumentException if unsupported
 * @throws IOException on I/O errors during processing
 */","* Create a PDImageXObject from an image byte array. This overloaded version allows providing 
     * a custom factory to handle specific image formats, such as BMP and GIF, or to act as a 
     * fallback strategy when the default converters (e.g., for PNG or TIFF) fail.
     *
     * @param document the document that shall use this PDImageXObject.
     * @param byteArray bytes from an image file.
     * @param name name of image file for exception messages, can be null.
     * @param customFactory optional factory used to handle BMP, GIF, or fallback cases 
     *                       (e.g., for PNG or TIFF). If {@code null}, this method delegates to
     *                       {@link #createFromByteArray(PDDocument, byte[], String)}.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:process(),60,76,"/**
 * Masks form fields in a PDF document.
 */",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processAppearanceStringOperators,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processAppearanceStringOperators(byte[]),96,114,"/**
 * Parses PDF content and processes operators.
 * @param content byte array containing PDF data
 * @throws IOException if parsing fails
 */","* Processes the operators of the given content stream.
     *
     * @param content the content to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,process,"org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,70,"/**
 * Applies a graphics state to the current context.
 * @param operator the PDF operator being executed
 * @param arguments list of operands for the operator
 * @throws IOException if an I/O error occurs during processing
 */",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",362,373,"/**
* Handles document merging based on mode.
* @param streamCacheCreateFunction function to create stream cache
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * @param compressParameters defines if compressed object streams are enabled
     * 
     * @throws IOException If there is an error saving the document.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",341,344,"/**
* Creates an image object from byte array.
* @param document PDF document to add the image
* @param byteArray image data as bytes
* @param name image name
* @return PDImageXObject or throws IOException if fails
*/","* Create a PDImageXObject from bytes of an image file. The file format is determined by the
     * file content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG.
     * This is a convenience method that calls {@link JPEGFactory#createFromByteArray},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param byteArray bytes from an image file.
     * @param document the document that shall use this PDImageXObject.
     * @param name name of image file for exception messages, can be null.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,apply,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:apply(),32,58,"/**
* Processes PDF document for form defaults, orphans, and appearances.
*/",,,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:<init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)",73,88,"/**
 * Initializes default appearance and resources.
 * @param defaultAppearance appearance string configuration
 * @param defaultResources associated resources
 * @throws IOException if an I/O error occurs
 */","* Constructor for reading an existing DA string.
     * 
     * @param defaultResources DR entry
     * @param defaultAppearance DA entry
     * @throws IOException If the DA could not be parsed",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),345,348,"/**
* Initializes stream cache with default compression.
* @param streamCacheCreateFunction function to create stream cache
* @throws IOException if an I/O error occurs
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getWidgetDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),339,344,"/**
* Creates a default appearance string for a form field.
* @param widget annotation widget associated with the field
* @return PDDefaultAppearanceString object representing the default appearance
* @throws IOException if an error occurs during processing
*/",,,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearanceString(),96,106,"/**
* Retrieves default appearance string.
* @return PDDefaultAppearanceString object or throws IOException
*/","* Get the default appearance.
     *
     * This is an inheritable attribute.
     *
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     *
     * @return the DA element of the dictionary object",,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceValue(java.lang.String),188,272,"/**
* Masks field value and updates widget appearances.
* @param apValue field value to mask
*/","* This is the public method for setting the appearance stream.
     *
     * @param apValue the String value which the appearance should represent
     * @throws IOException If there is an error creating the stream.",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText),113,128,"/**
 * Initializes an AppearanceGeneratorHelper with a PDVariableText field.
 * Validates and sets up resources, then retrieves the default appearance string.
 * @param field the PDF form field to process
 * @throws IOException if there is an issue processing the field's appearance
 */","* Constructs a COSAppearance from the given field.
     *
     * @param field the field which you wish to control the appearance of
     * @throws IOException",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:constructAppearances(),78,93,"/**
* Masks appearance by processing values.
* @throws IOException if an I/O error occurs
*/",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:constructAppearances(),81,87,"/**
* Initializes and executes appearance generation.
* @throws IOException if an I/O error occurs
*/",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:constructAppearances(),257,263,"/**
* Masks appearance using helper.
* @throws IOException if an I/O error occurs
*/",,,,True,29
