file_path,Name,full_name,Start Line,End Line,Comment,Pre_Comment,child Name,domain,inner_method,node_level
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,<init>,org.apache.pdfbox.Loader:<init>(),45,47,"/**
* Initializes a new instance of the Loader class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorName.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorName:<init>(),114,116,"/**
* Constructs an empty OperatorName instance.",* private constructor,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
* Initializes an OperatorProcessor instance with a PDFStreamEngine context. 
* @param context the parent engine context","* Creates a new OperatorProcessor.
     * 
     * @param context the processing context to be used",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBase.java,<init>,org.apache.pdfbox.cos.COSBase:<init>(),37,39,"/**
* Initializes a new instance of COSBase. 
* This is an empty constructor, intended to be used by subclasses.",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,<init>,org.apache.pdfbox.cos.COSUpdateState:<init>(org.apache.pdfbox.cos.COSUpdateInfo),53,56,"/**
* Initializes COSUpdateState with provided update information.
* @param updateInfo COSUpdateInfo object containing update details
*/","* Creates a new {@link COSUpdateState} for the given {@link COSUpdateInfo}.
     *
     * @param updateInfo The {@link COSUpdateInfo}, that shall be managed by this {@link COSUpdateState}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<init>,org.apache.pdfbox.cos.PDFDocEncoding:<init>(),108,110,"/**
* Initializes a new instance of the PDFDocEncoding class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream$Code:<init>(int,int)",272,275,"/**
 * Initializes a new Code object with specified numeric value and length.
 * @param code unique numeric identifier
 * @param length length of the code in characters
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(),44,47,"/**
* Empty constructor to allow subclassing.",* Constructs an empty DecodeOptions instance,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(java.awt.Rectangle),55,58,"/**
 * Initializes decoder options with specified source region.
 * @param sourceRegion rectangle defining the input area
 */","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param sourceRegion Region of the source image that should be decoded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(int),81,85,"/**
* Initializes decode options with uniform subsampling.
* @param subsampling X and Y subsampling factor
*/","* Constructs an instance specifying the image should be decoded using subsampling. The
     * subsampling will be the same for the X and Y axes.
     *
     * @param subsampling The number of rows and columns to advance in the source for each pixel in
     * the decoded image.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary),36,39,"/**
* Initializes decoder with provided parameters.
* @param parameters COS dictionary containing decoding settings
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,"org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)",41,45,"/**
* Initializes a new instance of DecodeResult with given parameters and color space.
* @param parameters COS dictionary containing decoding parameters
* @param colorSpace PDJPX color space object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<init>,org.apache.pdfbox.filter.Filter:<init>(),66,68,"/**
 * Initializes a new instance of the Filter class.",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,org.apache.pdfbox.filter.Predictor:<init>(),33,35,"/**
* Initializes an empty Predictor instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$LayoutPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,short)",289,295,"/**
* Initializes a new instance of LayoutPage with specified parameters.
* @param mediaBox the media box rectangle
* @param contentStream the content stream
* @param resources the resources dictionary
* @param rotation the page rotation (in short)",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,"org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)",54,59,"/**
* Initializes PageExtractor with a PDDocument and page range.
* @param sourceDocument the input PDF document
* @param startPage starting page index (inclusive)
* @param endPage ending page index (inclusive)","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.
     * @param startPage The first page you want extracted (1-based, inclusive)
     * @param endPage The last page you want extracted (1-based, inclusive)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<init>,org.apache.pdfbox.pdfparser.XrefParser:<init>(org.apache.pdfbox.pdfparser.COSParser),64,68,"/**
 * Initializes XrefParser with COSParser instance.
 * @param cosParser COSParser object to extract data from
 */","* Default constructor.
     *
     * @param cosParser the parser to be used to read the pdf.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,<init>,org.apache.pdfbox.pdfparser.xref.AbstractXReference:<init>(org.apache.pdfbox.pdfparser.xref.XReferenceType),37,40,"/**
* Initializes an XReference instance with the specified reference type.
* @param type XReferenceType enumeration value","* Creates a crossreference stream entry of the given {@link XReferenceType}.
     *
     * @param type The {@link XReferenceType} of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,<init>,org.apache.pdfbox.pdfwriter.ContentStreamWriter:<init>(java.io.OutputStream),59,62,"/**
 * Initializes the content stream writer with an output stream.
 * @param out the output stream where content will be written.","* This will create a new content stream writer.
     *
     * @param out The stream to write the data to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(boolean),42,45,"/**
* Initializes cache creation with stability flag.
* @param enableStableCache true to enable stable caching, false otherwise
*/","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,93,"/**
* Initializes a new instance of PDDocumentCatalog.
* @param doc PDDocument object to associate with
* @param rootDictionary COSDictionary representing the catalog's root dictionary
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.
     * @param rootDictionary The root dictionary that this object wraps.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes PDDocumentInformation with a COSDictionary.
* @param dic COS dictionary containing document information
*/","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),41,44,"/**
* Initializes name destination dictionary from COS dictionary.
* @param dict COSDictionary object containing name data
*/","* Constructor.
     *
     * @param dict The dictionary of names and corresponding destinations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.cos.COSDictionary)",56,60,"/**
* Initializes PDDocumentNameDictionary object with PDF document catalog and name dictionary.
* @param cat PDDocumentCatalog instance
* @param names COSDictionary containing name information
*/","* Constructor.
     *
     * @param cat The document that this dictionary is part of.
     * @param names The names dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary),104,107,"/**
 * Initializes a new PDF page from a COS dictionary.
 * @param pageDictionary COS dictionary representing the page
 */","* Creates a new instance of PDPage for reading.
     * 
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,"org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",114,118,"/**
* Initializes a new PDPage instance from a COS dictionary.
* @param pageDictionary COS dictionary containing page data
* @param resourceCache cache of shared resources
*/","* Creates a new instance of PDPage for reading.
     *
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,<init>,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:<init>(java.util.Map,org.apache.pdfbox.cos.COSDictionary)",50,54,"/**
* Initializes COSDictionaryMap with provided maps.
* @param actualsMap map of actual values
* @param dicMap dictionary map to store additional data
*/","* Constructor for this map.
     *
     * @param actualsMap The map with standard java objects as values.
     * @param dicMap The map with COSBase objects as values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a new instance of PDDictionaryWrapper with the provided COSDictionary.
 * @param dictionary COSDictionary object to be wrapped
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Initializes a PDNameTreeNode instance from a COS dictionary.
 */","* Constructor.
     *
     * @param dict The dictionary that holds the name information.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,"org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)",66,70,"/**
* Initializes a new PDNumberTreeNode from a COS dictionary and value class.
* @param dict the COS dictionary to initialize from
* @param valueClass the class of the value stored in the node
*/","* Constructor.
     *
     * @param dict The dictionary that holds the number information.
     * @param valueClass The PD Model type of object that is the value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(org.apache.pdfbox.cos.COSDictionary),83,86,"/**
* Initializes a new PDPageLabelRange instance from a COS dictionary.
* @param dict COS dictionary containing label range data
*/","* Creates a new page label range object from the given dictionary.
     * 
     * @param dict
     *            the base dictionary for the new object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:<init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)",301,306,"/**
* Initializes a new instance of LabelGenerator with page label range and total number of pages. 
* @param label PDPageLabelRange object containing label information
* @param pages total number of pages in the document
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
* Initializes PDRange with a COSArray range.
* @param range COSArray containing range data
*/","* Constructor assumes a starting index of 0.
     *
     * @param range The array that describes the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray,int)",64,68,"/**
 * Initializes a PDRange object with the given array and index.
 * @param range COSArray containing range data
 * @param index starting index within the range array
 */","* Constructor with an index into an array.  Because some arrays specify
     * multiple ranges ie [ 0,1,  0,2,  2,3 ] It is convenient for this
     * class to take an index into an array.  So if you want this range to
     * represent 0,2 in the above example then you would say <code>new PDRange( array, 1 )</code>.
     *
     * @param range The array that describes the index
     * @param index The range index into the array for the start of the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSStream),81,84,"/**
* Initializes PDStream with a COSStream object.
* @param str COSStream to be wrapped by this PDStream instance.","* Creates a PDStream which wraps the given COSStream.
     * 
     * @param str The stream parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators:<init>(),28,31,"/**
* Prevents instantiation of this utility class.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators:<init>(),28,31,"/**
* Prevents instantiation of this utility class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators:<init>(),28,31,"/**
* Prevents instantiation of this class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser:<init>(),33,36,"/**
* Initializes the Parser object. 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators:<init>(),28,31,"/**
* Prevents instantiation of this utility class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators:<init>(),30,33,"/**
* Initializes a new instance of the StackOperators class.
* This is a private constructor to prevent instantiation from outside.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
* Initializes PDMarkInfo object from given dictionary.
* @param dic COSDictionary containing mark information
*/","* Constructor for an existing MarkInfo element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Initializes a new instance of PDMarkedContentReference from a COSDictionary.
 * @param dictionary COSDictionary containing marked content reference data
 */","* Constructor for an existing marked content reference.
     * 
     * @param dictionary the page dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
* Initializes a new PDObjectReference instance from a COS dictionary.
* @param theDictionary COS dictionary containing reference data
*/","* Constructor for an existing object reference.
     *
     * @param theDictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSArray),37,40,"/**
 * Initializes a new instance of PDParentTreeValue from a COSArray object. 
 * @param obj the COSArray containing tree structure data.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
* Initializes a new PDParentTreeValue instance from a COSDictionary object.
* @param obj COS dictionary containing parent tree value data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
* Constructs a PDStructureNode from a COSDictionary.
* @param dictionary COS dictionary containing node data
*/","* Constructor for an existing structure node.
     *
     * @param dictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:<init>(),37,39,"/**
 * Initializes an empty Revisions object.",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(org.apache.pdfbox.cos.COSDictionary),71,74,"/**
 * Initializes a new instance of PDPropertyList from a COS dictionary.
 * @param dict COS dictionary containing property list data.","* Constructor for subclasses.
     * 
     * @param dict the dictionary to be used to create an instance of PDPropertyList",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Initializes a new instance of PDBoxStyle from a COSDictionary.
 * @param dic The dictionary containing style information
 */","* Constructor for an existing BoxStyle element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<init>(),317,319,"/**
* Initializes an empty StandardStructureTypes instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(),70,73,"/**
 * Initializes an instance with default access permissions.
 */","* Create a new access permission object.
     * By default, all permissions are granted.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(byte[]),82,92,"/**
* Constructs AccessPermission object from a 4-byte byte array.
* @param b the input byte array, expected to be exactly 4 bytes long
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(int),99,102,"/**
 * Initializes an instance of AccessPermission with specified permissions.
 * @param permissions integer value representing access permissions.","* Creates a new access permission object from a single integer.
     *
     * @param permissions The permission bits.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,<init>,org.apache.pdfbox.pdmodel.encryption.MessageDigests:<init>(),28,30,"/**
* Initializes MessageDigests instance. 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
* Initializes PDCryptFilterDictionary with a COSDictionary object.
* @param d COSDictionary containing cryptographic filter data
*/","* creates a new crypt filter dictionary from the low level dictionary provided.
     * @param d the low level dictionary that will be managed by the newly created object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,<init>,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:<init>(),37,40,"/**
* Initializes RC4 cipher with a 256-element salt array.",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,<init>,org.apache.pdfbox.pdmodel.encryption.SaslPrep:<init>(),32,34,"/**
* Constructor to initialize SASL preparation.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:<init>(),31,33,"/**
* Constructs a new instance of SecurityProvider.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),118,121,"/**
 * Constructs an FDFAnnotation instance from a COS dictionary.
 * @param a COS dictionary containing annotation data
 */","* Constructor.
     *
     * @param a The FDF annotation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Creates an FDFCatalog instance from a COSDictionary.
* @param cat COSDictionary representing the catalog
*/","* Constructor.
     *
     * @param cat The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
* Constructs an FDFDictionary instance from a COSDictionary object.
* @param fdfDictionary input COS dictionary","* Constructor.
     *
     * @param fdfDictionary The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
* Initializes an FDFField object from a COSDictionary.
* @param f COS dictionary containing field data
*/","* Constructor.
     *
     * @param f The FDF field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(org.apache.pdfbox.cos.COSDictionary),73,76,"/**
* Initializes FDFIconFit object with given COSDictionary.
* @param f COS dictionary to initialize from
*/","* Constructor.
     *
     * @param f The icon fit dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes an instance of FDFJavaScript with the provided JavaScript COS dictionary.","* Constructor.
     *
     * @param javaScript The FDF java script.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
* Initializes an FDFNamedPageReference with a COS dictionary.
* @param r COS dictionary containing reference data
*/","* Constructor.
     *
     * @param r The FDF named page reference dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs an FDFOptionElement instance from a COSArray.
 * @param o the COSArray containing option data
 */","* Constructor.
     *
     * @param o The option element.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Initializes an FDFPage instance with a COSDictionary representation.
* @param p COSDictionary containing page data
*/","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes an instance of FDFPageInfo from a COS dictionary.
 * @param p COS dictionary containing page information.","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Initializes an instance of FDFTemplate from a COS dictionary.
* @param t COS dictionary containing template data
*/","* Constructor.
     *
     * @param t The FDF page template.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AbstractFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AbstractFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
* Initializes an AbstractFixup instance with the specified PDDocument.
* @param document the PDF document to be processed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AbstractProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AbstractProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes an instance of AbstractProcessor with a PDDocument reference.
 * @param document PDDocument object associated with the processor.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",31,36,"/**
* Constructs a CIDSystemInfo object with specified registry, ordering, and supplement values. 
* @param registry system registry value
* @param ordering system ordering value
* @param supplement system supplement value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<init>,org.apache.pdfbox.pdmodel.font.CMapManager:<init>(),35,37,"/**
 * Initializes an empty CMapManager instance. 
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:<init>(org.apache.pdfbox.pdmodel.font.FontInfo),720,723,"/**
* Initializes a new FontMatch instance with provided font information.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers:<init>(),29,31,"/**
* Default constructor for FontMapper objects.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes PDCIDSystemInfo object from COSDictionary.
 * @param dictionary input dictionary containing system info data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
* Creates a new PDFontDescriptor instance from a given COS dictionary.
* @param desc COS dictionary containing font descriptor properties
*/","* Creates a PDFontDescriptor from a COS dictionary.
     *
     * @param desc The wrapped COS Dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",90,94,"/**
* Initializes font type with specified name and subtype.
* @param type font name
* @param subtype font subtype (e.g. bold, italic)",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<init>(),48,50,"/**
* Initializes default settings for the PDFontFactory instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanose:<init>(byte[]),37,40,"/**
* Initializes a new PDPanose instance from a byte array.
* @param bytes raw data to deserialize into PDPanose object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:<init>(byte[]),35,38,"/**
* Initializes a PDPanoseClassification instance from a byte array.
* @param bytes binary data representing panose classification information
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:<init>(org.apache.pdfbox.pdmodel.font.PDType3Font,org.apache.pdfbox.cos.COSStream)",54,58,"/**
* Initializes a character procedure with the given font and stream.
* @param font the parent font
* @param charStream the character data stream
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<init>(),118,120,"/**
* Initializes an instance of Standard14Fonts. 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,<init>,org.apache.pdfbox.pdmodel.font.UniUtil:<init>(),27,29,"/**
* Initializes an empty UniUtil instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(org.apache.pdfbox.cos.COSArray),57,60,"/**
 * Initializes a new PDFontSetting object from a given COSArray.
 * @param fs COSArray containing font settings
 */","* Constructs a font setting from an existing array.
     *
     * @param fs The new font setting value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(),41,45,"/**
* Initializes a new instance of PDLineDashPattern with default settings.
*/","* Creates a new line dash pattern, with no dashes and a phase of 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",80,84,"/**
* Initializes BlendComposite with specified blend mode and constant alpha value.
* @param blendMode blending operation to apply
* @param constantAlpha fixed transparency factor
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendChannelFunction,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendFunction)",201,207,"/**
* Initializes a new BlendMode instance with the specified settings.
* @param name COSName representing the blend mode
* @param blendChannel BlendChannelFunction for channel-based blending (null for default)
* @param blend BlendFunction for overall blending
*/","* Private constructor due to the limited set of possible blend modes.
     * 
     * @param name the corresponding COSName of the blend mode
     * @param blendChannel the blend function for separable blend modes
     * @param blend the blend function for non-separable blend modes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",121,126,"/**
* Initializes a PDColor object with specified pattern name and color space.
* @param patternName name of the pattern
* @param colorSpace color space of the color
*/","* Creates a PDColor containing the given pattern name.
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern is defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes PDDeviceNAttributes with a COSDictionary of device attributes.
 * @param attributes COSDictionary containing device attributes.","* Creates a new DeviceN colour space attributes dictionary from the given dictionary.
     * @param attributes a dictionary that has all of the attributes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(org.apache.pdfbox.cos.COSDictionary),57,60,"/**
 * Constructs a new PDDeviceNProcess instance from the provided COSDictionary attributes.","* Creates a new  DeviceN Process Dictionary from the given attributes.
     * @param attributes a DeviceN attributes dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(org.apache.pdfbox.cos.COSArray),51,54,"/**
* Initializes a PDGamma instance from a COSArray.
* @param array COSArray containing gamma data
*/","* Creates a new gamma from a COS array.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new PDOutputIntent instance from a COS dictionary.
 * @param dictionary COS dictionary containing output intent settings.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
* Initializes a new PDTristimulus instance from a COSArray.
* @param array input color data
*/","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes this object with transparency group attributes from a COS dictionary.
 * @param dic COS dictionary containing transparency group data
 */","* Creates a group object from a given dictionary
     * @param dic {@link COSDictionary} object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:<init>(),45,47,"/**
* Initializes a new instance of the CCITTFactory class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<init>(),66,68,"/**
* Initializes a new instance of the JPEGFactory class. 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:<init>(),58,60,"/**
* Initializes LosslessFactory instance. 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<init>(),98,100,"/**
* Initializes a new instance of the PNGConverter class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<init>(),50,52,"/**
* Initializes a new instance of SampledImageReader.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(org.apache.pdfbox.cos.COSDictionary),103,106,"/**
* Initializes Optional Content Properties from COS dictionary.
* @param props COS dictionary containing properties
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param props the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
* Initializes a new instance of PDAbstractPattern with the given COS dictionary.
* @param dictionary COS dictionary containing pattern data
*/","* Creates a new Pattern dictionary from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(org.apache.pdfbox.cos.COSDictionary),94,97,"/**
* Initializes a new instance of PDShading from a COSDictionary.
* @param shadingDictionary PDF shading data
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,org.apache.pdfbox.util.Matrix)",34,38,"/**
* Initializes a new ShadingPaint instance with specified shading and matrix.
* @param shading paint shading
* @param matrix transformation matrix
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",69,73,"/**
* Initializes this Extended Graphics State with given COS dictionary and resource cache. 
* @param dictionary COS dictionary containing graphics state information
* @param resourceCache Resource cache for accessing cached resources
*/","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",117,121,"/**
* Initializes a new instance of PDSoftMask with given COS dictionary and resource cache.
* @param dictionary COS dictionary containing mask data
* @param resourceCache Resource cache for accessing cached resources
*/","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:<init>(java.lang.String),135,138,"/**
 * Initializes a new paragraph with specified text content.
 * @param text The textual content of the paragraph.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Word:<init>(java.lang.String),305,308,"/**
 * Initializes a new Word object with the specified text content.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),72,75,"/**
 * Initializes the builder with PDAppearanceContentStream data.
 * @param contents appearance content stream to build upon
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:<init>(org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder),127,137,"/**
* Initializes a PlainTextFormatter object from a Builder.
* @param builder configuration builder for the formatter
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Constructs a new PDAction instance from a COS dictionary. 
* @param a COS dictionary containing action data
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:<init>(),33,36,"/**
 * Constructs a PDActionFactory instance.
 */",* Utility Class.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a PDAdditionalActions object from a COS dictionary. 
 * @param a COS dictionary containing additional actions data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes PDAnnotationAdditionalActions with a COSDictionary.
* @param a COS dictionary containing annotation additional actions data
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes PDDocumentCatalogAdditionalActions from a COS dictionary.
* @param a COS dictionary containing additional actions data
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional form field actions from the given dictionary.
 * @param a COSDictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes PDPageAdditionalActions with a COSDictionary.
* @param a COSDictionary object containing additional actions
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Initializes a new instance of PDTargetDirectory with the given COSDictionary.
* @param dictionary COSDictionary containing target directory data
*/","* Create a target directory from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
* Initializes a new PDURIDictionary instance from a COSDictionary.
* @param dictionary COSDictionary object to initialize with
*/","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
* Initializes PD Windows launch parameters from a dictionary.
* @param p input dictionary containing launch parameters
*/","* Constructor.
     *
     * @param p The params dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes PDAppearanceCharacteristicsDictionary with a COS dictionary.
 * @param dict COS dictionary containing appearance characteristics
 */","* Constructor.
     * 
     * @param dict dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Initializes a new instance of PDAppearanceDictionary from a COSDictionary object.
 * @param dictionary COSDictionary containing appearance data
 */","* Constructor for reading.
     *
     * @param dictionary The annotations dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(),37,39,"/**
* Initializes a new instance of PDAppearanceEntry.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a new PDAppearanceEntry instance from a given COSDictionary. 
 * @param entry the COSDictionary containing appearance data.","* Constructor for reading.
     * 
     * @param entry the dictionary of the appearance entry",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
* Initializes a new PDBorderEffectDictionary instance from a COSDictionary object.
* @param dict COSDictionary containing border effect data
*/","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),79,82,"/**
* Initializes PDBorderStyleDictionary with COSDictionary data.
* @param dict COSDictionary object containing border style data
*/","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
* Initializes a new instance of PDExternalDataDictionary from a COSDictionary object.
* @param dictionary COSDictionary object to initialize with.","* Constructor.
     * 
     * @param dictionary Dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,double,double,org.apache.pdfbox.pdmodel.common.PDRectangle)",66,73,"/**
* Constructs a CloudyBorder object with specified parameters.
* @param stream content stream to draw on
* @param intensity cloudy border intensity (0.0 - 1.0)
* @param lineWidth line width of the border
* @param rect bounding rectangle for the border
*/","* Creates a new <code>CloudyBorder</code> that writes to the specified
     * content stream.
     *
     * @param stream content stream
     * @param intensity intensity of cloudy effect (entry <code>I</code>); typically 1.0 or 2.0
     * @param lineWidth line width for annotation border (entry <code>W</code>)
     * @param rect annotation rectangle (entry <code>Rect</code>)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,80,"/**
* Initializes the appearance handler with an annotation and its parent document.
* @param annotation PDAnnotation object to handle
* @param document PDDocument object containing the annotation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(org.apache.pdfbox.cos.COSDictionary),52,56,"/**
* Initializes a new PDPropBuild object with a COSDictionary. 
* @param dict COSDictionary instance containing build properties.","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(org.apache.pdfbox.cos.COSDictionary),49,54,"/**
* Initializes PDPropBuildDataDict with COS dictionary.
* @param dict COSDictionary object containing build data
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(org.apache.pdfbox.cos.COSDictionary),95,99,"/**
* Constructs a PDSeedValue object from a COSDictionary.
* @param dict COSDictionary containing seed value data
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(org.apache.pdfbox.cos.COSDictionary),83,87,"/**
* Initializes a new PDSeedValueCertificate object from a COSDictionary.
* @param dict COSDictionary containing certificate data
*/","* Constructor.
     *
     * @param dict The certificate seed value dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
* Initializes MDP (Multi-Dimensional Probability) seed value with given COS dictionary.
* @param dict COS dictionary containing seed value data
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes and sets the COSDictionary object.
 * @param dict COSDictionary instance to be set
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(org.apache.pdfbox.cos.COSDictionary),101,104,"/**
* Initializes PDSignature with a COSDictionary.
* @param dict COSDictionary containing signature data
*/","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:<init>(),49,52,"/**
* Initializes signature options with default page number (0).
*/",* Creates the default signature options.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:<init>(org.apache.pdfbox.pdfwriter.COSWriter),34,37,"/**
 * Initializes a new instance of SigningSupport with the specified COS writer.
 * @param cosWriter COS writer used to write signature data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<init>(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateBuilder),54,57,"/**
* Initializes PDFTemplateCreator with provided builder.
* @param templateBuilder PDF template creation configuration
*/","* Constructor.
     * 
     * @param templateBuilder the template builder",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:<init>(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),33,36,"/**
* Initializes an iterator to traverse outline items from a given starting item.
* @param startingItem the top-level outline item to start iteration from
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:<init>(java.lang.String,java.lang.String)",49,53,"/**
* Initializes a new key-value pair with specified key and value.
* @param theKey unique identifier or key
* @param theValue associated data or value",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<init>(),75,77,"/**
* Default constructor. 
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",62,67,"/**
* Initializes a PDField object with the given AcroForm, COS dictionary, and parent field.
* @param acroForm the containing AcroForm
* @param field the underlying COS dictionary
* @param parent the parent field in the non-terminal hierarchy
*/","* Constructor.
     *  @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:<init>(),38,40,"/**
 * Default constructor to initialize factory instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:<init>(org.apache.pdfbox.cos.COSBase),45,48,"/**
* Initializes a new instance of PDXFAResource from an XFA base. 
* @param xfaBase XFA object to initialize the resource with
*/","* Constructor.
     *
     * @param xfaBase The xfa resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Initializes a new instance of PDMeasureDictionary with the provided COSDictionary. 
* @param dictionary COSDictionary containing measure data
*/","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),77,80,"/**
* Initializes PDNumberFormatDictionary with given COS dictionary.
* @param dictionary COS dictionary containing number format data
*/","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new PDViewportDictionary instance from a COSDictionary. 
 * @param dictionary input dictionary containing viewport settings
 */","* Constructor.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Initializes a new PDThread instance from a given COSDictionary representation. 
 * @param t COSDictionary containing thread data
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param t The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(org.apache.pdfbox.cos.COSDictionary),43,46,"/**
 * Initializes a new PDThreadBead instance from a COS dictionary.
 * @param b COS dictionary containing bead data
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param b The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(org.apache.pdfbox.cos.COSDictionary),146,149,"/**
 * Initializes viewer preferences from a COS dictionary.
 * @param dic COSDictionary containing viewer preference data
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawerParameters.java,<init>,"org.apache.pdfbox.rendering.PageDrawerParameters:<init>(org.apache.pdfbox.rendering.PDFRenderer,org.apache.pdfbox.pdmodel.PDPage,boolean,org.apache.pdfbox.rendering.RenderDestination,java.awt.RenderingHints,float)",43,53,"/**
* Initializes PageDrawerParameters object with given settings.
* @param renderer PDFRenderer instance
* @param page PDPage to be rendered
* @param subsamplingAllowed whether subsampling is allowed
* @param destination RenderDestination for output
* @param renderingHints RenderingHints for optimization
* @param imageDownscalingOptimizationThreshold threshold value
*/",* Package-private constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(),2148,2151,"/**
 * Initializes an empty LineItem with no text position.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(org.apache.pdfbox.text.TextPosition),2153,2156,"/**
* Constructs a new LineItem instance with the specified TextPosition.
* @param textPosition position of the line item in the document.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper:<init>(org.apache.pdfbox.text.TextPosition),2222,2225,"/**
 * Creates a new PositionWrapper instance from a TextPosition object.","* Constructs a PositionWrapper around the specified TextPosition object.
         *
         * @param position the text position.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,"org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions:<init>(java.lang.String,java.util.List)",2180,2184,"/**
* Creates a Word object with associated text and position data.
* @param word the textual content of the word
* @param positions list of TextPosition objects for each occurrence of the word
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<init>,org.apache.pdfbox.util.DateConverter:<init>(),69,71,"/**
* Constructs a new instance of the DateConverter.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<init>,org.apache.pdfbox.util.Hex:<init>(),45,45,"/**
* Constructs an empty Hex instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,<init>,org.apache.pdfbox.util.IterativeMergeSort:<init>(),47,50,"/**
* Initializes iterative merge sort algorithm.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(),41,51,"/**
* Initializes a Matrix object with default values.
*/",* Constructor. This produces an identity matrix.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(float[]),57,60,"/**
 * Initializes a new Matrix instance from a 1D array of floats.
 * @param src the source float array to initialize the matrix with
 */","* Constructor. This produces a matrix with the given array as data.
     * The source array is not copied or cloned.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,"org.apache.pdfbox.util.Matrix:<init>(float,float,float,float,float,float)",101,111,"/**
* Initializes a Matrix object with given values.
* @param a, b, c, d, e, f float values to populate matrix
*/","* Creates a transformation matrix with the given 6 elements. Transformation matrices are
     * discussed in 8.3.3, ""Common Transformations"" and 8.3.4, ""Transformation Matrices"" of the PDF
     * specification. For simple purposes (rotate, scale, translate) it is recommended to use the
     * static methods below.
     *
     * Produces the following matrix:
     * a b 0
     * c d 0
     * e f 1
     *
     * @see Matrix#getRotateInstance(double, float, float)
     * @see Matrix#getScaleInstance(float, float)
     * @see Matrix#getTranslateInstance(float, float)
     *
     * @param a the X coordinate scaling element (m00) of the 3x3 matrix
     * @param b the Y coordinate shearing element (m10) of the 3x3 matrix
     * @param c the X coordinate shearing element (m01) of the 3x3 matrix
     * @param d the Y coordinate scaling element (m11) of the 3x3 matrix
     * @param e the X coordinate translation element (m02) of the 3x3 matrix
     * @param f the Y coordinate translation element (m12) of the 3x3 matrix",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,<init>,org.apache.pdfbox.util.NumberFormatUtil:<init>(),55,57,"/**
* Initializes the NumberFormatUtil instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,<init>,"org.apache.pdfbox.util.Vector:<init>(float,float)",28,32,"/**
* Initializes a 2D vector with specified x and y coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<init>,org.apache.pdfbox.util.Version:<init>(),38,41,"/**
 * Initializes a new instance of the Version class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,<init>,org.apache.pdfbox.util.XMLUtil:<init>(),45,47,"/**
* Constructor to initialize XMLUtil instance.","* Utility class, should not be instantiated.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<init>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<init>(),73,75,"/**
* Initializes FileTypeDetector instance.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFStreamEngine:<init>(),103,105,"/**
* Initializes a new instance of the PDFStreamEngine.",* Creates a new PDFStreamEngine.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,addOperator,org.apache.pdfbox.contentstream.PDFStreamEngine:addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor),112,115,"/**
* Masks operator in OperatorProcessor with m2 and m1 values.
* @param op OperatorProcessor instance to modify
*/","* Adds an operator processor to the engine.
     *
     * @param op operator processor",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,createBlendModeMap,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:createBlendModeMap(),165,187,"/**
* Returns a mapping of blend mode names to their corresponding modes.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,setTerminator,org.apache.pdfbox.filter.ASCII85OutputStream:setTerminator(char),71,78,"/**
* Sets the mask character to a specific value, validating it against allowed range.
* @param term character code to validate and set as terminator
*/","* This will set the terminating character.
     *
     * @param term The terminating character.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setSplitAtPage,org.apache.pdfbox.multipdf.Splitter:setSplitAtPage(int),632,639,"/**
* Sets page split length and validates input value.
* @param split number of pages to split
*/","* This will tell the splitting algorithm where to split the pages.  The default
     * is 1, so every page will become a new document.  If it was two then each document would
     * contain 2 pages.  If the source document had 5 pages it would split into
     * 3 new documents, 2 documents containing 2 pages and 1 document containing one
     * page.
     *
     * @param split The number of pages each split document should contain.
     * @throws IllegalArgumentException if the page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setStartPage,org.apache.pdfbox.multipdf.Splitter:setStartPage(int),647,654,"/**
* Sets the start page mask value.
* @param start non-negative integer representing start page
*/","* This will set the start page.
     *
     * @param start the 1-based start page
     * @throws IllegalArgumentException if the start page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setEndPage,org.apache.pdfbox.multipdf.Splitter:setEndPage(int),662,669,"/**
* Sets the end page mask value.
* @param end non-negative integer end page value
*/","* This will set the end page.
     *
     * @param end the 1-based end page
     * @throws IllegalArgumentException if the end page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,setLenient,org.apache.pdfbox.pdfparser.COSParser:setLenient(boolean),419,426,"/**
* Sets mask leniency flag.
* @param lenient true to enable leniency, false otherwise
*/","* Change the parser leniency flag.
     *
     * This method can only be called before the parsing of the file.
     *
     * @param lenient try to handle malformed PDFs.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(int),46,53,"/**
* Initializes CompressParameters with specified object stream size.
* @param objectStreamSize non-negative integer representing data size
*/","* Sets the number of objects, that can be contained in compressed object streams. Higher object stream sizes may
     * cause PDF readers to slow down during the rendering of PDF documents, therefore a reasonable value should be
     * selected. A value of 0 disables the compression.
     *
     * @param objectStreamSize The number of objects, that can be contained in compressed object streams.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache,java.util.Map)",109,123,"/**
* Initializes PDResources with given dictionaries and caches.
* @param resourceDictionary COS dictionary containing resource data
* @param resourceCache cache for resource objects
* @param directFontCache cache for direct font references
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.
     * @param directFontCache The document's direct font cache. Must be mutable",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),307,314,"/**
* Sets the blending mode.
* @param blendMode selected blending mode
*/","* Sets the blend mode in the current graphics state
     *
     * @param blendMode blend mode
     * @throws IllegalArgumentException if blendMode is null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,53,"/**
* Initializes a PDFieldTree with the given PDAcroForm as root.
* @param acroForm PDAcroForm object, must not be null
*/","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getLength,org.apache.pdfbox.cos.COSStream:getLength(),331,340,"/**
* Returns a mask for function length.
* @throws IllegalStateException if OutputStream is still open
*/","* Returns the length of the encoded stream.
     *
     * @return length in bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setValue,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:setValue(java.lang.Object),45,52,"/**
* Sets the value of this trie node to the provided mask.
* @param value mask value to be stored
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,org.apache.pdfbox.multipdf.PDFMergerUtility:<init>(),147,150,"/**
 * Initializes a new instance of the PDFMergerUtility class with an empty list of source PDF files.",* Instantiate a new PDFMergerUtility.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<init>(org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool),69,72,"/**
 * Initializes a new COSWriter object stream with the specified compression pool.
 * @param compressionPool instance of compression pool to use
 */","* Creates an object stream for compressible objects from the given {@link COSWriterCompressionPool}. The objects
     * must first be prepared for this object stream, by adding them via calling
     * {@link COSWriterObjectStream#prepareStreamObject(COSObjectKey, COSBase)} and will be written to this
     * {@link COSStream}, when {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @param compressionPool The compression pool an object stream shall be created for.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObjects,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObjects(),41,48,"/**
* Returns the list of objects. If not initialized, creates an empty list.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumbers,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumbers(),50,57,"/**
* Returns the list of revision numbers. If not initialized, initializes a new empty list.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:<init>(),68,70,"/**
* Initializes a new instance of PublicKeyProtectionPolicy.",* Creates a new PublicKeyProtectionPolicy with an empty recipients list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginTextClip,org.apache.pdfbox.rendering.PageDrawer:beginTextClip(),465,469,"/**
 * Resets text clippings collection. 
 */","* Begin buffering the text clipping path, if any.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,equals,org.apache.pdfbox.cos.COSName:equals(java.lang.Object),737,741,"/**
* Checks if an object is a COSName and recursively calls m1 on its name property.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,fromString,org.apache.pdfbox.pdmodel.PageLayout:fromString(java.lang.String),54,64,"/**
* Finds and returns a PageLayout instance based on the provided value.
* @param value string to match with PageLayout instances
* @return matching PageLayout instance or throws exception if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,fromString,org.apache.pdfbox.pdmodel.PageMode:fromString(java.lang.String),45,55,"/**
* Finds and returns a matching PageMode instance based on the given value.
* @param value string to search for
* @return matching PageMode instance or throws exception if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,fromString,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:fromString(java.lang.String),47,59,"/**
* Returns the rendering intent matching the given color profile value.
* @param value color profile value to match
* @return Matching RenderingIntent enum instance or RELATIVE_COLORIMETRIC if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.io.File),308,311,"/**
 * Applies mask to file content and stores it in sources.
 */","* Add a source file to the list of files to merge.
     *
     * @param source File representing source document
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(org.apache.pdfbox.io.RandomAccessRead),319,322,"/**
* Updates mask value in sources based on input from RandomAccessRead.
* @param source input data to update mask
*/","* Add a source to the list of documents to merge.
     *
     * @param source RandomAccessRead representing source document. To pass an InputStream, wrap it
     * into a {@link RandomAccessReadBuffer}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addName,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addName(java.lang.String),35,38,"/**
* Masks instruction set by name.
* @param name unique identifier of instruction set to mask.","* Add a name (ex. an operator)
     * @param name the name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addProc,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence),71,74,"/**
* Masks instructions in the given sequence.
* @param child InstructionSequence to mask
*/","* Adds a proc (sub-sequence of instructions).
     * @param child the child proc",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,addRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),76,79,"/**
* Masks public key of specified recipient.
* @param recipient PublicKeyRecipient object to mask
*/","* Adds a new recipient to the recipients list.
     * @param recipient A new recipient.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,addWord,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:addWord(org.apache.pdfbox.pdmodel.interactive.PlainText$Word),288,291,"/**
* Masks the given Word instance using the words.m1() function.
* @param word Word object to be masked
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,addRegion,"org.apache.pdfbox.text.PDFTextStripperByArea:addRegion(java.lang.String,java.awt.geom.Rectangle2D)",68,72,"/**
* Applies mask to specified region.
* @param regionName unique region identifier
* @param rect rectangular area for masking
*/","* Add a new region to group text by.
     *
     * @param regionName The name of the region.
     * @param rect The rectangle area to retrieve the text from. The y-coordinates are java
     * coordinates (y == 0 is top), not PDF coordinates (y == 0 is bottom).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ClosePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,52,"/**
* Executes a mask operation on the graphics context.
* @param operator Masking operator
* @param operands List of operands for the mask operation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setTrailer(org.apache.pdfbox.cos.COSDictionary),197,206,"/**
* Sets the current cross-reference trailer object.
* @param trailer COSDictionary representing the new trailer
*/","* Adds trailer information for current XRef object.
     *
     * @param trailer the current document trailer dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(),296,300,"/**
* Returns an input stream containing the decoded data.
* @return InputStream of decoded data or null if not available
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getObject(org.apache.pdfbox.cos.COSObjectKey),126,129,"/**
* Retrieves a COSBase instance using the provided key.
* @param key unique identifier in key pool
*/","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.
     *
     * @param key The {@link COSObjectKey} a registered {@link COSBase} shall be found for.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,getOperator,org.apache.pdfbox.pdmodel.common.function.type4.Operators:getOperator(java.lang.String),136,139,"/**
* Retrieves an operator by name from the internal operators map.
* @param operatorName unique operator identifier
*/","* Returns the operator for the given operator name.
     * @param operatorName the operator name
     * @return the operator (or null if there's no such operator",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,sequenceToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:sequenceToName(java.lang.String),197,205,"/**
* Converts Unicode sequence to font name, returning '.notdef' for unknown sequences.
*/","* Returns the name for a given sequence of Unicode characters.
     *
     * @param unicodeSequence sequence of Unicode characters
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getStreamCache,org.apache.pdfbox.cos.COSDocument:getStreamCache(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),140,165,"/**
* Creates a RandomAccessStreamCache instance using the provided create function.
* If creation fails, uses memory-only cache as fallback. 
* @param streamCacheCreateFunction function to create StreamCache
* @return RandomAccessStreamCache object or null on failure
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,operatorException,"org.apache.pdfbox.contentstream.PDFStreamEngine:operatorException(org.apache.pdfbox.contentstream.operator.Operator,java.util.List,java.io.IOException)",959,986,"/**
* Handles exceptions raised during operator execution.
* @param operator current operator
* @param operands list of operands
* @param exception thrown IOException
*/","* Called when an exception is thrown by an operator.
     *
     * @param operator The unknown operator.
     * @param operands The list of operands.
     * @param exception the excpetion which occured when processing the operator
     * 
     * @throws IOException if there is an error processing the operator exception",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsState(),1039,1042,"/**
* Retrieves and returns a PDGraphicsState instance from the graphics stack.",* @return Returns the graphicsState.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,restoreGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:restoreGraphicsState(),999,1002,"/**
* Clears graphics stack.",* Pops the current graphics state from the stack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsStackSize,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsStackSize(),1031,1034,"/**
 * Returns a mask value from the graphics stack.
 */",* @return Returns the size of the graphicsStack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transformPoint,"org.apache.pdfbox.util.Matrix:transformPoint(float,float)",345,354,"/**
* Computes a point in 2D space using the given coefficients.
* @param x x-coordinate of the input point
* @param y y-coordinate of the input point
* @return resulting Point2D object
*/","* Transforms the given point by this matrix.
     *
     * @param x x-coordinate
     * @param y y-coordinate
     *
     * @return the transformed point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,decreaseLevel,org.apache.pdfbox.contentstream.PDFStreamEngine:decreaseLevel(),1170,1177,"/**
* Decrements the level counter and logs an error if it reaches zero.
*/","* Decrease the level. Call this after running a potentially recursive operation. A log message
     * is shown if the level is below 0. This can happen if the level is not decreased after an
     * operation is done, e.g. by using a ""finally"" block.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addInteger,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addInteger(int),44,47,"/**
 * Applies mask operation using provided integer value.
 * @param value integer value to be applied
 */","* Adds an int value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,createDiacritics,org.apache.pdfbox.text.TextPosition:createDiacritics(),125,160,"/**
* Builds a mapping of Unicode code points to their corresponding diacritic characters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:isDataEmpty(),83,87,"/**
* Returns a boolean value indicating whether to apply mask.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:setExportValues(java.util.List),64,71,"/**
* Validates input list for FUNC_MASK functionality.
* @param values list of string values to be validated
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toString,org.apache.pdfbox.pdmodel.font.PDFont:toString(),666,670,"/**
* Concatenates strings from three methods to form a function mask.
* @return combined string representation of function mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toString,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:toString(),65,69,"/**
* Returns function mask as a string in the format ""(key, value)"".
* @return Function mask string representation.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/MissingOperandException.java,<init>,"org.apache.pdfbox.contentstream.operator.MissingOperandException:<init>(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",29,32,"/**
* Constructs an exception for insufficient operands in an operator.
* @param operator the operator with missing operands
* @param operands list of provided operands
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/EmptyGraphicsStackException.java,<init>,org.apache.pdfbox.contentstream.operator.state.EmptyGraphicsStackException:<init>(),32,35,"/**
* Constructs an exception indicating an empty graphics stack.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,checkClosed,org.apache.pdfbox.cos.COSStream:checkClosed(),105,114,"/**
* Throws exception if COSStream has been closed.
* @throws IOException if stream is closed
*/","* Throws if the random access backing store has been closed. Helpful for catching cases where
     * a user tries to use a COSStream which has outlived its COSDocument.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,reset,org.apache.pdfbox.filter.ASCII85InputStream:reset(),269,273,"/**
* Throws an IOException when attempting to reset the system.
*/","* Unsupported.
     *
     * @throws IOException telling that this is an unsupported action.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,reset,org.apache.pdfbox.filter.CCITTFaxDecoderStream:reset(),492,495,"/**
* Throws an IOException when mark/reset operations are attempted.
* This method is intended to be overridden by subclasses that do not support mark/reset functionality.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,reset,org.apache.pdfbox.filter.FlateFilterDecoderStream:reset(),239,243,"/**
 * Throws an exception when attempting to reset (mask) the function.
 */","* Unsupported.
     *
     * @throws IOException always throw as reset is an unsupported feature.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/MissingImageReaderException.java,<init>,org.apache.pdfbox.filter.MissingImageReaderException:<init>(java.lang.String),33,36,"/**
* Constructs a MissingImageReaderException with the specified error message.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getEncryption,org.apache.pdfbox.pdfparser.COSParser:getEncryption(),1164,1172,"/**
* Returns the PDEncryption object.
*/","* This will get the encryption dictionary. The document must be parsed before this is called.
     *
     * @return The encryption dictionary of the document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getAccessPermission,org.apache.pdfbox.pdfparser.COSParser:getAccessPermission(),1181,1189,"/**
* Returns the access permission mask for the parsed document.
* @throws IOException if document has not been parsed
*/","* This will get the AccessPermission. The document must be parsed before this is called.
     *
     * @return The access permission of document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/MissingResourceException.java,<init>,org.apache.pdfbox.pdmodel.MissingResourceException:<init>(java.lang.String),27,30,"/**
 * Constructs a MissingResourceException with a custom error message.
 * @param message detailed description of the missing resource issue
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/InvalidPasswordException.java,<init>,org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException:<init>(java.lang.String),31,34,"/**
* Constructs an InvalidPasswordException with a custom error message.
* @param message detailed description of password validation failure
*/","* Creates a new InvalidPasswordException.
     * @param message A msg to go with this exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<init>,org.apache.pdfbox.contentstream.operator.Operator:<init>(java.lang.String),44,51,"/**
* Constructs an Operator object from a given string, enforcing no leading '/'.
* @param aOperator unique operator identifier
*/","* Constructor.
     *
     * @param aOperator The operator that this object will represent.
     * @throws IllegalArgumentException if the operator starts with ""/"".",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,toString,org.apache.pdfbox.contentstream.operator.Operator:toString(),102,106,"/**
* Returns string representation of PDF operator.
* @return stringified PDFOperator instance
*/","* This will print a string rep of this class.
     *
     * @return A string rep of this class.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toString,org.apache.pdfbox.cos.COSArray:toString(),516,520,"/**
* Returns the function mask string representation.
* @return Function mask string in format COSArray{objects}
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,toString,org.apache.pdfbox.cos.COSName:toString(),731,735,"/**
 * Returns a string representation of the COSName object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,toString,org.apache.pdfbox.cos.COSObject:toString(),148,152,"/**
* Returns a string representation of the COSObject.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(org.apache.pdfbox.cos.COSName),88,96,"/**
* Retrieves a COS filter by name and returns it.
* @param filterName name of the filter to fetch
* @return Filter object or throws IOException on invalid filter name
*/","* Returns a filter instance given its COSName.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,checkArrayTypesClass,"org.apache.pdfbox.contentstream.operator.OperatorProcessor:checkArrayTypesClass(java.util.List,java.lang.Class)",77,80,"/**
* Checks if all operands match a specific class.
* @param operands list of COSBase objects to check
* @param clazz target class type
* @return true if all operands are instances of the class, false otherwise
*/","* Check whether all operands list elements are an instance of a specific class.
     *
     * @param operands The operands list.
     * @param clazz The expected class.
     * @return true if all operands list elements are an instance of the given class",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addReal(float),53,56,"/**
 * Sets instruction M1 with given float value.
 * @param value input float value to be masked
 */","* Adds a real value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,width,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:width(float),361,366,"/**
* Configures the visible sign designer with specified image width.
* @param width new image width
*/","* 
     * @param width signature image width
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,height,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:height(float),382,387,"/**
* Configures designer with visible sign parameters.
* @param height image height
*/","* 
     * @param height signature image height
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getLen,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:getLen(java.awt.geom.Point2D,java.awt.geom.Point2D)",130,135,"/**
* Calculates the squared Euclidean distance between two points.
* @param ps starting point
* @param pe ending point
* @return squared distance value
*/","* Calculate the distance from point ps to point pe.
     *
     * @param ps one end of a line
     * @param pe the other end of the line
     * @return length of the line",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",162,165,"/**
* Calculates the cross product of two vectors formed by points.
* @param p point to calculate vector from
* @param p1 reference point
* @param p2 second reference point
* @return cross product value or 0 if vectors are parallel
*/","* A line from point p1 to point p2 defines an equation, adjust the form of
     * the equation to let the rhs equals 0, then calculate the lhs value by
     * plugging the coordinate of p in the lhs expression.
     *
     * @param p target point
     * @param p1 one end of a line
     * @param p2 the other end of a line
     * @return calculated value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",213,217,"/**
* Calculates the cross product of two vectors.
* @param p point on vector
* @param p1 point on first vector
* @param p2 point on second vector
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",64,69,"/**
* Initializes a new instance of PDMarkedContent with the specified tag and properties.
* @param tag COSName representing the marked content type
* @param properties COSDictionary containing additional metadata
*/","* Creates a new marked content object.
     * 
     * @param tag the tag
     * @param properties the properties",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getName(),59,63,"/**
* Calls and returns result of CALGRAY's m1() method.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getName(),53,57,"/**
* Returns CALRGB value from COSName enum.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getName(),116,120,"/**
* Calls M1 method of CMYK device color space.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:getName(),42,46,"/**
* Returns device gray color name.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getName(),442,446,"/**
* Calls device-specific implementation of m1(). 
* @return result from underlying device-specific implementation 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:getName(),43,47,"/**
* Calls device RGB color name method.
* @return device-specific RGB color name as a string
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getName(),146,150,"/**
* Calls equivalent method on ICCBASED.
* @return result from ICCBASED implementation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getName(),98,102,"/**
* Delegates to indexed COSName instance.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getName(),55,59,"/**
* Calls m1() on COSName LAB instance and returns result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getName(),68,72,"/**
* Retrieves string value from PATTERN constant using COSName.
* @return string result or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getName(),100,104,"/**
* Returns the separator name from COSName constants.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getType(),109,112,"/**
* Returns a string pattern using CosName.PATTERN.m1(). 
* @return string pattern value.","* This will return the paint type.
     * @return The type of object that this is.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getType(),115,118,"/**
* Returns shading function mask string.
* @return Shading function name as string.","* This will return the type.
     *
     * @return the type of object that this is",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getDefaultValue(),198,209,"/**
* Returns a string representation of the function mask.
*/","* Returns the default value, if any.
     *
     * @return A non-null string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,unCheck,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:unCheck(),84,87,"/**
* Applies mask function to COSName.
*/","* Unchecks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(java.util.List),356,365,"/**
* Applies mask to terminal fields.
* @param fields list of fields to process
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of the specified fields.
     * 
     * @param fields a list of fields to be refreshed
     * @throws IOException if the appearance streams could not be refreshed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,53,"/**
* Applies mask operation to target object.
* @param operator Operator instance
* @param arguments List of operands
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,44,"/**
* Applies mask operation on COSBase objects.
* @param operator Mask operation type
* @param arguments list of COSBase objects to apply mask to
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,isWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:isWhitePoint(),71,76,"/**
* Checks if all mask bits are zero.
*/","* Tests if the current point is the white point.
     *
     * @return true if the current point is the white point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:calcColorTable(),138,156,"/**
* Computes a factorized mask array based on the given factor and domain.
* @return An int array containing the computed mask values
*/","* Calculate the color on the axial line and store them in an array.
     *
     * @return an array, index denotes the relative position, the corresponding
     * value is the color on the axial line
     * @throws IOException if the color conversion fails.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calcColorTable(),143,161,"/**
* Computes a mask array based on the given factor and domain.
* @return int array representing the computed mask values
*/","* Calculate the color on the line that connects two circles' centers and store the result in an
     * array.
     *
     * @return an array, index denotes the relative position, the corresponding value the color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createInitialCodeTable,org.apache.pdfbox.filter.LZWFilter:createInitialCodeTable(),261,271,"/**
* Initializes a list of byte arrays representing the code table.
* @return List of byte arrays with 258 elements, including two null entries.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createCodeTable,org.apache.pdfbox.filter.LZWFilter:createCodeTable(),252,257,"/**
* Initializes and returns a list of byte arrays representing the code table.
*/",* Init the code table with 1 byte entries and the EOD and CLEAR_TABLE markers.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSources,org.apache.pdfbox.multipdf.PDFMergerUtility:addSources(java.util.List),329,332,"/**
 * Applies mask operation to the provided list of RandomAccessRead objects.
 * @param sourcesList list of read operations to be masked
 */","* Add a list of sources to the list of documents to merge.
     *
     * @param sourcesList List of RandomAccessRead objects representing source documents",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,get,org.apache.pdfbox.cos.COSArray:get(int),294,297,"/**
* Calls method m1 on 'objects' with given index.
* @param index input parameter for method m1
*/","* This will get an object from the array.  This will NOT dereference
     * the COS object.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,get,org.apache.pdfbox.pdmodel.common.COSArrayList:get(int),450,455,"/**
* Delegates to actual instance's m1 method with specified index.
* @param index index value to be passed to m1
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,size,org.apache.pdfbox.cos.COSArray:size(),437,440,"/**
* Calls the M1 method on Objects class. 
* Returns the result of this operation.
*/","* This will get the size of this array.
     *
     * @return The number of elements in the array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,size,org.apache.pdfbox.pdmodel.common.COSArrayList:size(),132,136,"/**
* Calls and returns result of actual's m1() method. 
* @return result of m1() method on actual object.",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getNumberOfRecipients,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getNumberOfRecipients(),123,126,"/**
* Returns a flag integer from the m1() method of the 'recipients' object.
*/","* Returns the number of recipients
     * @return the number of recipients",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,ensureStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:ensureStream(),498,509,"/**
* Checks if the next input stream is available.
* @return true if a valid stream exists, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getInterWordSpacing,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:getInterWordSpacing(float),283,286,"/**
* Calculates function mask value based on given width.
* @param width input width value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,isEmpty,org.apache.pdfbox.cos.COSArray:isEmpty(),447,450,"/**
* Calls m1() on objects and returns result.
*/","* Returns true if the container is empty, false otherwise.
     *
     * @return true if the container is empty, false otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSArrayList:isEmpty(),141,145,"/**
* Calls actual implementation of m1().",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:isDataEmpty(),82,86,"/**
* Returns true if mask is enabled based on triangle list value.
* @return true if mask is enabled, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,removeRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:removeRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),86,89,"/**
* Checks if the provided PublicKeyRecipient matches a mask.
* @param recipient PublicKeyRecipient object to check
* @return true if recipient matches the mask, false otherwise
*/","* Removes a recipient from the recipients list.
     * @param recipient The recipient to remove.
     * @return true If a recipient was found and removed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,iterator,org.apache.pdfbox.cos.COSArray:iterator(),527,531,"/**
* Returns an iterator of COSBase objects.
* @return Iterator containing COSBase elements or null if empty.","* Get access to the list.
     *
     * @return an iterator over the array elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,iterator,org.apache.pdfbox.pdmodel.common.COSArrayList:iterator(),159,163,"/**
* Delegates to actual iterator implementation.
* @return Iterator instance with actual data
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getRecipientsIterator,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getRecipientsIterator(),96,99,"/**
* Returns an iterator over public key recipients.
* @return Iterator of PublicKeyRecipient objects
*/","* Returns an iterator to browse the list of recipients.
     * Object found in this iterator are <code>PublicKeyRecipient</code>.
     * @return The recipients list iterator.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toList,org.apache.pdfbox.cos.COSArray:toList(),669,672,"/**
* Creates a list of objects with COSBase type mask.
* @return List of COSBase objects
*/","*  Return contents of COSArray as a Java List.
     *
     *  @return the COSArray as List",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNameStringList,org.apache.pdfbox.cos.COSArray:toCOSNameStringList(),679,684,"/**
* Filters COSName objects and returns their names as a list.
*/","* This will return a list of names if the COSArray consists of COSNames only.
     * 
     * @return the list of names of the COSArray of COSNames",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSStringStringList,org.apache.pdfbox.cos.COSArray:toCOSStringStringList(),691,696,"/**
* Extracts COSString values from the object graph and returns them as a list. 
* @return List of COSString values or empty if none found
*/","* This will return a list of names if the COSArray consists of COSStrings only.
     * 
     * @return the list of names of the COSArray of COSStrings",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,getBoolean,org.apache.pdfbox.cos.COSBoolean:getBoolean(java.lang.Boolean),99,102,"/**
* Recursively unwraps Boolean wrappers to primitive boolean values.
* @param value wrapper object containing a boolean value
* @return primitive boolean value or null if input is null
*/","* This will get the boolean value.
     *
     * @param value Parameter telling which boolean value to get.
     *
     * @return The single boolean instance that matches the parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,toString,org.apache.pdfbox.cos.COSBoolean:toString(),121,125,"/**
 * Returns a formatted string mask using the provided value.
 */","* Return a string representation of this object.
     *
     * @return The string value of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,writePDF,org.apache.pdfbox.cos.COSBoolean:writePDF(java.io.OutputStream),151,161,"/**
* Writes TRUE or FALSE value to OutputStream.
* @param output target stream for writing
*/","* This will write this object out to a PDF stream.
     *
     * @param output The stream to write this object out to.
     *
     * @throws IOException If an error occurs while writing out this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,writePDF,org.apache.pdfbox.cos.COSNull:writePDF(java.io.OutputStream),65,68,"/**
* Writes zero-byte mask to OutputStream.
* @param output OutputStream instance
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeBytes,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeBytes(byte[]),1524,1527,"/**
* Masks input byte array with custom function using output stream.
* @param data input byte array to be masked
*/","* Writes binary data to the content stream.
     * 
     * @param data as byte formatted to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,entrySet,org.apache.pdfbox.cos.COSDictionary:entrySet(),1233,1236,"/**
* Retrieves a set of COS name and base entries.
* @return set of COS entries or empty set if none found
*/","* Returns the name-value entries in this dictionary. The returned set is in the order the entries were added to the
     * dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return name-value entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isEntryChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isEntryChanged(java.lang.Object,java.lang.Object)",177,184,"/**
* Compares two entries using their 'm1' methods and returns true if they differ.
* @param oldEntry the original entry to compare
* @param newEntry the new entry to compare with
* @return true if the entries are different, false otherwise
*/","* Is the value changed?
     * 
     * @param oldEntry old entry
     * @param newEntry new entry
     * @return <code>true</code> if the entry is changed, <code>false</code>
     * otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,size,org.apache.pdfbox.cos.COSDictionary:size(),122,125,"/**
* Calls item-specific method m1.
* @return result of underlying m1 operation
*/","* This will return the number of elements in this dictionary.
     *
     * @return The number of elements in the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName),1177,1180,"/**
* Retrieves a COSBase object from the 'items' collection based on the given key. 
* @param key unique identifier or name of the item to retrieve
*/","* This will do a lookup into the dictionary.
     *
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,keySet,org.apache.pdfbox.cos.COSDictionary:keySet(),1221,1224,"/**
* Delegates to items instance for retrieving COSName set.
*/","* Returns the names of the entries in this dictionary. The returned set is in the order the entries were added to
     * the dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return names of the entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,forEach,org.apache.pdfbox.cos.COSDictionary:forEach(java.util.function.BiConsumer),1244,1247,"/**
* Performs an action on each item in the collection.
*@param action Consumer to process each item (name and base)
*/","* Convenience method that calls {@link Map#forEach(java.util.function.BiConsumer) Map.forEach(BiConsumer)}.
     *
     * @param action The action to be performed for each entry
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getValues,org.apache.pdfbox.cos.COSDictionary:getValues(),1254,1257,"/**
* Returns a collection of COSBase objects.
* @return Collection of COSBase elements.","* This will get all of the values for the dictionary.
     *
     * @return All the values for the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,addAll,org.apache.pdfbox.cos.COSDictionary:addAll(org.apache.pdfbox.cos.COSDictionary),1277,1280,"/**
* Sets mask for COS dictionary.
* @param dict COSDictionary instance to modify
*/","* This will add all of the dictionaries keys/values to this dictionary. Existing key/value pairs will be
     * overwritten.
     *
     * @param dict The dictionaries to get the key/value pairs from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(org.apache.pdfbox.cos.COSName),1288,1291,"/**
* Calls COSName-based search on items collection. 
* @param name COSName object to search for
*/","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,tokenizeOnSpace,org.apache.pdfbox.util.StringUtil:tokenizeOnSpace(java.lang.String),36,39,"/**
* Extracts and returns an array of substrings from input string 's' separated by spaces.
*/","* Split at spaces but keep them
     *
     * @param s
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseInt,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseInt(java.lang.String),112,115,"/**
* Converts input string to integer using built-in static method.
* @param token string representation of an integer
* @return integer value or throws NumberFormatException if invalid
*/","* Parses a value of type ""int"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,java.lang.String)",73,88,"/**
* Initializes FontType with specified type and subtype.
* @param type COSName representing font type
* @param subtypeString string identifier for subtype (null if not CID)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunction:toString(),362,366,"/**
* Returns function type as string.
* @return Function type identifier string
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,setEncryptionKeyLength,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:setEncryptionKeyLength(int),46,53,"/**
* Sets encryption key length with validation.
* @param l valid key length (40, 128, or 256)
*/","* set the length in (bits) of the secret key that will be
     * used to encrypt document data.
     * The default value is 40 bits, which provides a low security level
     * but is compatible with old versions of Acrobat Reader.
     *
     * @param l the length in bits (must be 40, 128 or 256)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setStartPage,org.apache.pdfbox.text.PDFTextStripper:setStartPage(int),1077,1084,"/**
* Sets the start page value for masking.
* @param startPageValue 1-based page number (must be > 0)
*/","* This will set the first page to be extracted by this class.
     *
     * @param startPageValue New value of 1-based startPage property.
     * 
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setEndPage,org.apache.pdfbox.text.PDFTextStripper:setEndPage(int),1105,1112,"/**
* Sets the end page value for pagination.
* @param endPageValue 1-based page number (must be > 0)
*/","* This will set the last page to be extracted by this class.
     *
     * @param endPageValue New value of 1-based endPage property.
     *
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,hashCode,org.apache.pdfbox.cos.COSString:hashCode(),286,291,"/**
* Computes result value by calling Arrays.m1 and adjusting with forceHexForm flag.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<init>,org.apache.pdfbox.filter.FilterFactory:<init>(),39,69,"/**
* Initializes filter factory by registering various image filters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<init>,"org.apache.pdfbox.pdfparser.BruteForceParser:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.COSParser)",92,97,"/**
* Initializes BruteForceParser with COSDocument and COSParser.
* @param cosDocument input COS document
* @param cosParser COS parser instance
*/","* Constructor. Triggers a brute force search for all objects of the document.
     *
     * @param cosDocument the corresponding COS document
     * @param cosParser the COSParser to be used for reading the pdf
     * 
     * @throws IOException if the source data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:<init>(),72,75,"/**
 * Initializes an empty XrefTrailer object with default table type.",*  Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary),74,83,"/**
* Initializes a PDResources object from the given COSDictionary.
* @param resourceDictionary dictionary containing resources to initialize
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",91,100,"/**
* Initializes PDResources object with provided dictionary and cache.
* @param resourceDictionary COSDictionary containing resource data
* @param resourceCache ResourceCache instance for caching resources
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<init>(),82,129,"/**
* Initializes a map of mathematical and logical operators with their corresponding functions.
*/",* Creates a new Operators object with the default set of operators.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGB(float[]),124,141,"/**
* Converts input color value to RGB using a cache and alternative color space if necessary.
* @param value input color value
* @return RGB color array or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",98,102,"/**
* Initializes an AcroForm object from a PDF document and form dictionary.
* @param doc the underlying PDF document
* @param form the AcroForm dictionary
*/","* Constructor.
     *
     * @param doc The document that this form is part of.
     * @param form The existing acroForm.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<init>,org.apache.pdfbox.rendering.GlyphCache:<init>(org.apache.pdfbox.pdmodel.font.PDVectorFont),42,45,"/**
* Initializes GlyphCache with a PDVectorFont instance.
* @param font PDVectorFont object to cache glyphs from
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getTrailerCount,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getTrailerCount(),142,145,"/**
* Returns mask value from byte position to XREF map.
*/","* Returns the count of trailers.
     *
     * @return the count of trailers.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getAllFilters,org.apache.pdfbox.filter.FilterFactory:getAllFilters(),99,102,"/**
* Returns a collection of filter objects based on predefined criteria.
* @return Collection of Filter objects
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectFromPool,org.apache.pdfbox.cos.COSDocument:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),505,514,"/**
* Retrieves a COSObject from the pool using the provided COSObjectKey.
* @param key unique identifier for the COSObject
*/","* This will get an object from the pool.
     *
     * @param key The object key.
     *
     * @return The object in the pool or a new one if it has not been parsed yet.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,addXRefTable,org.apache.pdfbox.cos.COSDocument:addXRefTable(java.util.Map),521,524,"/**
* Applies mask to XREF table values.
* @param xrefTableValues map of COS object keys to masked values
*/","* Populate XRef HashMap with given values.
     * Each entry maps ObjectKeys to byte offsets in the file.
     * @param xrefTableValues  xref table entries to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseReal(java.lang.String),122,125,"/**
* Converts string to 32-bit floating-point mask value.
* @param token input string representation of a float
*/","* Parses a value of type ""real"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,coerce,org.apache.pdfbox.cos.COSFloat:coerce(float),120,137,"/**
* Clamps or returns infinity/minimum value for float.
* @param floatValue input float to process
*/","* Check and coerce the value field to be between MIN_NORMAL and MAX_VALUE.
     * 
     * @param floatValue the value to be checked
     * @return the coerced value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getDir,org.apache.pdfbox.text.TextPosition:getDir(),245,284,"/**
* Calculates the mask value based on text matrix conditions.
* @return float representing the calculated mask value
*/","* Return the direction/orientation of the string in this object based on its text matrix. Only
     * angles of 0, 90, 180, or 270 are supported. To get other angles, use this code:
     * <pre>
     * TextPosition text = ...
     * Matrix m = text.getTextMatrix().clone();
     * m.concatenate(text.getFont().getFontMatrix());
     * int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY())));
     * </pre>
     *
     * @return The direction of the text (0, 90, 180, or 270).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,equals,org.apache.pdfbox.cos.COSFloat:equals(java.lang.Object),175,180,"/**
* Compares float values with mask 1.
* @param o Object to compare (must be a COSFloat)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,hashCode,org.apache.pdfbox.cos.COSFloat:hashCode(),185,189,"/**
* Calls M1 method on float value.
* @return integer result of M1 operation
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,formatString,org.apache.pdfbox.cos.COSFloat:formatString(),204,214,"/**
* Converts numeric value to string representation with scientific format.
* @return formatted String or null if valueAsString is already set
*/","* Builds, if needed, and returns the string representation of the current value.
     * @return current value as string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSNull,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSNull(java.io.OutputStream),385,389,"/**
* Writes ""null"" and a space to the OutputStream.
* @param output OutputStream to write to
*/","* Write {@link COSNull} to the given stream.
     *
     * @param output The stream, that shall be written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,<init>,org.apache.pdfbox.cos.COSIncrement:<init>(org.apache.pdfbox.cos.COSUpdateInfo),67,70,"/**
 * Initializes COSIncrement with the given update origin.
 * @param incrementOrigin COSUpdateInfo object containing increment details.","* Creates a new {@link COSIncrement} for the given {@link COSUpdateInfo}, the increment will use it´s
     * {@link COSDocumentState} as it´s own origin and shall collect all updates contained in the given
     * {@link COSUpdateInfo}.<br>
     * Should the given object be {@code null}, the resulting increment shall be empty.
     *
     * @param incrementOrigin The {@link COSUpdateInfo} serving as an update source for this {@link COSIncrement}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<init>,org.apache.pdfbox.multipdf.PDFCloneUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),57,60,"/**
* Initializes PDF clone utility with destination PDDocument.
* @param dest target document to clone into
*/","* Creates a new instance for the given target document.
     * 
     * @param dest the destination PDF document that will receive the clones",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(boolean),102,105,"/**
 * Initializes the cache with stability enabled status.
 * @param enableStableCache true to enable stable caching, false otherwise
 */","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,isNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:isNeedToBeUpdated(),30,33,"/**
* Returns true if the mask condition is met.
* @return true if m1() and m2() both evaluate to true
*/","* Get the update state for the COSWriter. This indicates whether an object is to be written
     * when there is an incremental save.
     *
     * @return the update state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,contains,org.apache.pdfbox.cos.COSIncrement:contains(org.apache.pdfbox.cos.COSBase),243,246,"/**
* Evaluates condition based on COBOL object and processed object.
* @param base COBOSBase object to evaluate
* @return true if condition is met, false otherwise
*/","* Returns {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     *
     * @param base The {@link COSBase} to check.
     * @return {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     * @see #objects
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,isExcluded,org.apache.pdfbox.cos.COSIncrement:isExcluded(org.apache.pdfbox.cos.COSBase),325,328,"/**
* Checks if COSBase matches exclusion mask.
* @param base COSBase object to check
* @return true if match found, false otherwise
*/","* Returns {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     *
     * @param base The {@link COSBase} to check for exclusion.
     * @return {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     * @see #excluded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,add,org.apache.pdfbox.cos.COSIncrement:add(org.apache.pdfbox.cos.COSBase),275,281,"/**
 * Calls the m1() method on the COSBase object, passing it to the objects instance. 
 * @param object COSBase object to process
 */","* The given object and actual {COSBase}s shall be part of the increment and must be added to {@link #objects},
     * if possible.<br>
     * {@code null} values shall be skipped.
     *
     * @param object The {@link COSBase} to add to {@link #objects}.
     * @see #objects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,addProcessedObject,org.apache.pdfbox.cos.COSIncrement:addProcessedObject(org.apache.pdfbox.cos.COSObject),291,297,"/**
* Processes COSObject by applying mask operation. 
* @param base COSObject to process
*/","* The given {@link COSObject} has been processed, or is being processed. It shall be added to
     * {@link #processedObjects} to skip it, should it be encountered again.<br>
     * {@code null} values shall be ignored.
     *
     * @param base The {@link COSObject} to add to {@link #processedObjects}.
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,registerTrueTypeFontForClosing,org.apache.pdfbox.pdmodel.PDDocument:registerTrueTypeFontForClosing(org.apache.fontbox.ttf.TrueTypeFont),909,912,"/**
* Closes TrueType font resources.
* @param ttf TrueTypeFont object to close
*/","* For internal PDFBox use when creating PDF documents: register a TrueTypeFont to make sure it is closed when the
     * PDDocument is closed to avoid memory leaks. Users don't have to call this method, it is done by the appropriate
     * PDFont classes.
     *
     * @param ttf the TrueTypeFont to be registered",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addToSubset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addToSubset(int),289,293,"/**
 * Updates the mask with a single code point.
 * @param codePoint character to add to the mask
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,createWidgetDictionarySet,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:createWidgetDictionarySet(java.util.List),824,836,"/**
* Retrieves a set of COS dictionaries representing annotation widgets.
* @param fields list of PDField objects
* @return Set of COS dictionaries or empty set if no widgets found
*/","* Return a set of all annotation widget dictionaries related to the fields to be flattened.
     *
     * @param fields
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addGlyphIds,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addGlyphIds(java.util.Set),295,298,"/**
* Masks glyphs by ID.
* @param glyphIds set of unique glyph identifiers to mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getWidgets(),263,267,"/**
* Returns an empty list of PDAnnotationWidgets. 
* @return Empty list of annotation widgets.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getExportValues(),58,62,"/**
* Returns a list of function masks.
* @return List of string function masks
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,<init>,"org.apache.pdfbox.cos.COSInputStream:<init>(java.io.InputStream,java.util.List)",85,89,"/**
 * Initializes COS InputStream with provided input stream and list of decode results.
 * @param input underlying input stream
 * @param decodeResults list of decoded result objects
 */","* Constructor.
     * 
     * @param input decoded stream
     * @param decodeResults results of decoding",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,<init>,org.apache.pdfbox.filter.ASCII85InputStream:<init>(java.io.InputStream),51,59,"/**
* Initializes an ASCII85 decoder from the given input stream.
* @param is input stream containing encoded data
*/","* Constructor.
     *
     * @param is The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:<init>(java.io.InputStream,int,int,long,boolean)",89,124,"/**
* Initializes CCITT Fax decoder with input stream, columns, compression type and options.
* @param stream input stream to decode
* @param columns number of pixels per row
* @param type compression type (CCITT T4, T6 or modified Huffman RLE)
* @param options additional encoding options
* @param byteAligned whether to align bytes in output
*/","* Creates a CCITTFaxDecoderStream.
     * This constructor may be used for CCITT streams embedded in PDF files,
     * which use EncodedByteAlign.
     *
     * @param stream the compressed CCITT stream.
     * @param columns the number of columns in the stream.
     * @param type the type of stream, must be one of {@code COMPRESSION_CCITT_MODIFIED_HUFFMAN_RLE},
     *             {@code COMPRESSION_CCITT_T4} or {@code COMPRESSION_CCITT_T6}.
     * @param options CCITT T.4 or T.6 options.
     * @param byteAligned enable byte alignment used in PDF files (EncodedByteAlign).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,get,org.apache.pdfbox.cos.COSInteger:get(long),87,100,"/**
* Creates or retrieves a COSInteger instance for the given value within the specified range.
* @param val long value to be masked
*/","* Returns a COSInteger instance with the given value.
     *
     * @param val integer value
     * @return COSInteger instance",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,getInvalid,org.apache.pdfbox.cos.COSInteger:getInvalid(boolean),102,106,"/**
* Returns a COSInteger representing either the maximum or minimum integer value.
* @param maxValue true for max value, false for min value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,equals,org.apache.pdfbox.cos.COSInteger:equals(java.lang.Object),126,130,"/**
* Checks if object matches current instance's mask value.
* @param o Object to check
* @return true if object is a COSInteger with matching mask, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,toString,org.apache.pdfbox.cos.COSInteger:toString(),145,149,"/**
* Returns the string representation of a COSInt.
* @return formatted string in format ""COSInt{value}""
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,writePDF,org.apache.pdfbox.cos.COSInteger:writePDF(java.io.OutputStream),214,217,"/**
* Writes a formatted string to the OutputStream using ASCII encoding.
* @param output target OutputStream
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,get,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:get(java.lang.Object),96,100,"/**
* Delegates to underlying actuals implementation.
* @param key arbitrary object key
* @return result of underlying operation or null if not found
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:hasExplicitWidth(int),282,286,"/**
* Checks if a function mask exists based on the provided code.
* @param code unique function identifier
* @return true if mask exists, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFontName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFontName(java.lang.String),234,237,"/**
* Maps font name to its functional mask equivalent.
* @param fontName user-specified font name
*/","* Returns the base name of the font which the given font name maps to.
     *
     * @param fontName name of font, either a base name or an alias
     * @return the base name or null if this is not one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(java.lang.String,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName)",165,168,"/**
* Sets up font aliasing based on provided name and base name.
* @param alias unique font identifier
* @param baseName base font name to be aliased
*/","* Adds an alias name for a standard font to the map of known aliases to the map of aliases (alias as key, standard
     * name as value). We want a single lookup in tbaseNamehe map to find the font both by a base name or an alias.
     *
     * @param alias an alias for the font
     * @param baseName  the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,hashCode,org.apache.pdfbox.cos.COSName:hashCode(),743,747,"/**
* Calls the m1() method on the associated 'name' object.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(org.apache.pdfbox.cos.COSName),749,753,"/**
* Invokes m1 on the underlying COSName object.
* @param other the COSName to invoke m1 on
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedExportValues(),122,145,"/**
* Filters and selects export values based on conditions.
* @return List of filtered string values
*/","* This will get the selected export values.
     * <p>
     * A RadioButton might have an export value to allow field values
     * which can not be encoded as PDFDocEncoding or for the same export value 
     * being assigned to multiple RadioButtons in a group.<br>
     * To define an export value the RadioButton must define options {@link #setExportValues(List)}
     * which correspond to the individual items within the RadioButton.</p>
     * <p>
     * The method will either return the corresponding values from the options entry or in case there
     * is no such entry the fields value</p>
     * 
     * @return the export value of the field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,isEmpty,org.apache.pdfbox.cos.COSName:isEmpty(),759,762,"/**
* Calls the ""m1"" method on the 'name' object and returns its result.","* Returns true if the name is the empty string.
     * @return true if the name is the empty string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeNumber,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeNumber(java.io.OutputStream,long,int)",221,234,"/**
* Writes the binary representation of a long integer to an OutputStream.
* @param os OutputStream to write to
* @param number long integer value to be written (32 bits)
* @param bytes number of bytes to write (typically 4 for a long)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAbstractContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes ASCII-formatted comment to output stream, validating for newline presence.
* @param comment string to be written
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeLine(),1513,1516,"/**
* Writes newline character to output stream.
*/","* Writes a newline to the content stream as ASCII.
     * 
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,isFloat,org.apache.pdfbox.cos.COSNumber:isFloat(java.lang.String),97,109,"/**
* Checks if a string represents a numeric value with scientific notation.
* @param number input string to check
* @return true if the string is a float or double, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getCharsUTF16BE,org.apache.pdfbox.util.Hex:getCharsUTF16BE(java.lang.String),132,148,"/**
* Converts string to a hexadecimal mask.
* @param text input string
* @return hexadecimal character array representation of the input string
*/","* Takes the characters in the given string, convert it to bytes in UTF16-BE format
     * and build a char array that corresponds to the ASCII hex encoding of the resulting
     * bytes.
     *
     * Example:
     * <pre>
     *   getCharsUTF16BE(""ab"") == new char[]{'0','0','6','1','0','0','6','2'}
     * </pre>
     *
     * @param text The string to convert
     * @return The string converted to hex",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int,int)",54,66,"/**
* Constructs COSObjectKey with object number, generation, and stream index.
* @param num positive object number
* @param gen non-negative generation number
* @param index stream index
*/","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.
     * @param index The index within a compressed object stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,hashCode,org.apache.pdfbox.cos.COSObjectKey:hashCode(),134,138,"/**
* Returns an integer value using the custom Long.m1() method.
* @return result of Long.m1(numberAndGeneration) as an int
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,toString,org.apache.pdfbox.cos.COSObjectKey:toString(),140,144,"/**
* Concatenates and formats function mask string.
* @return Formatted string containing values from m1() and m2()
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(org.apache.pdfbox.cos.COSObjectKey),146,150,"/**
* Computes bitwise XOR of two COSObjectKey objects.
* @param other COSObjectKey object to compare with
* @return 32-bit integer result of the XOR operation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getDefaultDecode(int),110,114,"/**
* Calculates and returns a floating-point mask array based on the given bits per component.
* @param bitsPerComponent number of bits used to represent each color component
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calculateInputValues,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calculateInputValues(double,double)",304,335,"/**
* Calculates two roots of a quadratic equation using the given coordinates and coefficients.
* @param x first coordinate
* @param y second coordinate
* @return array of two float roots or null if denom is zero
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorX,org.apache.pdfbox.util.Matrix:getScalingFactorX(),454,479,"/**
* Calculates a value based on the first two elements of the 'single' array.
* If the second element is non-zero, returns a specific mathematical operation;
* otherwise, returns the first element.","* Returns the x-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The x-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorY,org.apache.pdfbox.util.Matrix:getScalingFactorY(),486,494,"/**
* Calculates mask value from single array elements.
* @return float mask value or single[4] if invalid
*/","* Returns the y-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The y-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,<init>,"org.apache.pdfbox.cos.COSOutputStream:<init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.RandomAccessStreamCache)",53,61,"/**
* Initializes COSOutputStream with specified filters, parameters, output stream, and cache.
* @param filters list of filters to apply
* @param parameters dictionary of additional parameters
* @param output output stream to write to
* @param streamCache cache for random access streams
*/","* Creates a new COSOutputStream writes to an encoded COS stream.
     * 
     * @param filters Filters to apply.
     * @param parameters Filter parameters.
     * @param output Encoded stream.
     * @param streamCache Stream cache to use.
     * 
     * @throws IOException If there was an error creating a temporary buffer",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,<init>,org.apache.pdfbox.filter.ASCII85OutputStream:<init>(java.io.OutputStream),54,64,"/**
* Initializes ASCII85OutputStream with the given OutputStream.
* @param out target output stream for encoded data
*/","* Constructor.
     *
     * @param out The output stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream),56,59,"/**
 * Constructs a COSStandardOutputStream instance with the specified output stream.","* Constructor.
     *
     * @param out The underlying stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream,long)",67,71,"/**
 * Initializes a COSStandardOutputStream with specified output stream and position. 
 * @param out the underlying OutputStream
 * @param position the initial file position in bytes.","* Constructor.
     *
     * @param out The underlying stream to write to.
     * @param position The current position of output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,"org.apache.pdfbox.cos.COSOutputStream:write(byte[],int,int)",69,80,"/**
* Delegates data processing to either internal or parent buffer.
* @param b byte array to process
* @param off offset within the array
* @param len length of data to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(int),82,93,"/**
* Calls either superclass or subclass's m1() based on buffer availability.
* @param b input parameter
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,flush,org.apache.pdfbox.cos.COSOutputStream:flush(),95,102,"/**
* Calls superclass's initialization method if this object's buffer is uninitialized.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$1:close(),392,423,"/**
* Closes cached streams and read views.
*/","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$2:close(),392,423,"/**
* Closes cached streams and views, ensuring resources are freed.
*/","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,parseWidth,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:parseWidth(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",187,202,"/**
* Extracts and returns a float value from the first COSBase argument.
* @param arguments list of COSBase objects to search
* @return extracted float value or throws IOException if invalid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getBytes,org.apache.pdfbox.cos.COSString:getBytes(),247,250,"/**
* Returns an array of bytes representing a mask.
*/","* Returns the raw bytes of the string using a new byte array. Best used with a PDF <i>byte string</i>.
     * 
     * @return a clone of the underlying byte[] representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,adjustUserKey,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:adjustUserKey(byte[]),1207,1225,"/**
* Truncates or extracts a 48-byte key from the provided user data.
* @param u user data array
* @return 48-byte key array or empty array if input is null
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[])",1227,1233,"/**
* Concatenates two byte arrays.
* @param a first byte array
* @param b second byte array
* @return merged byte array or null if invalid input
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[],byte[])",1235,1242,"/**
* Concatenates three byte arrays into one.
* @param a first byte array
* @param b second byte array
* @param c third byte array
* @return concatenated byte array
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncate127,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncate127(byte[]),1244,1253,"/**
* Truncates input array to 127 bytes if longer.
* @param in input byte array
* @return truncated byte array or original if <= 127 bytes long
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,copyImageBytes,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:copyImageBytes(byte[],int,byte[],byte[],int)",538,546,"/**
* Copies masked values from source to target arrays and updates alpha image.
* @param transferRow source byte array
* @param indexInTranferRow position in source array to start copying
* @param targetValues target byte array for copied values
* @param alphaImageData optional alpha image byte array for updating
* @param alphaPtr position in alpha image array to update (if provided)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteIncrement,org.apache.pdfbox.pdfwriter.COSWriter:doWriteIncrement(),852,861,"/**
* Initializes MASK operation by processing incremental input and updating output stream.
* @throws IOException if I/O error occurs
*/","* Write an incremental update for a non signature case. This can be used for e.g. augmenting
     * signatures.
     *
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getASCII,org.apache.pdfbox.cos.COSString:getASCII(),236,240,"/**
* Converts byte array to ASCII string mask. 
* @return ASCII-formatted string representation of bytes 
*/","* Returns the content of this string as a PDF <i>ASCII string</i>.
     * 
     * @return the ASCII string representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeCollectionFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeCollectionFile(byte[]),266,269,"/**
* Checks font TTF collection mask validity.
* @param header byte array representing font header
* @return true if valid, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isOpenTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isOpenTypeFile(byte[]),271,274,"/**
* Checks if font signature matches OpenType specification.
* @param header byte array representing font header
* @return true if valid OpenType signature, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,isAcceptingUpdates,org.apache.pdfbox.cos.COSUpdateState:isAcceptingUpdates(),195,198,"/**
* Recursively checks if document state is valid.
* @return true if state is valid, false otherwise
*/","* Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     *
     * @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see COSDocumentState#isAcceptingUpdates()",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,set,"org.apache.pdfbox.cos.PDFDocEncoding:set(int,char)",112,116,"/**
* Maps Unicode character to a specific mask code.
* @param code unique mask identifier
* @param unicode Unicode character to be mapped
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,toString,org.apache.pdfbox.cos.PDFDocEncoding:toString(byte[]),121,136,"/**
* Converts byte array to string by mapping bytes to Unicode characters.
* @param bytes input byte array
*/",* Returns the string representation of the given PDFDocEncoded bytes.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,readOperator,org.apache.pdfbox.pdfparser.PDFStreamParser:readOperator(),412,443,"/**
* Extracts a function mask from the input stream.
*/","* This will read an operator from the stream.
     *
     * @return The operator that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,getBytes,org.apache.pdfbox.cos.PDFDocEncoding:getBytes(java.lang.String),141,149,"/**
* Converts Unicode string to byte array using UNI_TO_CODE mapping.
* @param text input string
* @return byte array representation of the string
*/",* Returns the given string encoded with PDFDocEncoding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,containsChar,org.apache.pdfbox.cos.PDFDocEncoding:containsChar(char),156,159,"/**
* Checks if character is a valid Unicode code point mask.
* @param character input character to check
*/","* Returns true if the given character is available in PDFDocEncoding.
     *
     * @param character UTF-16 character",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsKey,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsKey(java.lang.Object),78,82,"/**
* Delegates key lookup to actual implementation.
* @param key object used for lookup
* @return true if lookup is successful, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,containsName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:containsName(java.lang.String),213,216,"/**
* Checks if font name matches a specific mask.
* @param fontName name of the font to check
* @return true if font name matches, false otherwise
*/","* Returns true if the given font name is one of the known names, including alias.
     *
     * @param fontName the name of font, either a base name or alias
     * @return true if the name is one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getCodeToNameMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getCodeToNameMap(),81,84,"/**
* Returns a map of function IDs to names.","* Returns an unmodifiable view of the code -&gt; name mapping.
     * 
     * @return the code -&gt; name map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getNameToCodeMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getNameToCodeMap(),92,95,"/**
* Returns a map of inverted bitmasks.
*/","* Returns an unmodifiable view of the name -&gt; code mapping. More than one name may map to
     * the same code.
     *
     * @return the name -&gt; code map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,setNeedToBeUpdated,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:setNeedToBeUpdated(boolean),40,44,"/**
* Disables or enables function masking based on the input flag.
* @param flag true to enable, false to disable (currently unsupported)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:remove(),245,249,"/**
* Throws an exception when called, indicating that functionality is unsupported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,remove,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:remove(),416,421,"/**
* Disables functionality by throwing an exception.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,getFunctionType,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:getFunctionType(),37,43,"/**
* Returns a bitmask of function-specific flags.
* 
* @throws UnsupportedOperationException always thrown (no implementation provided)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encode(int),394,400,"/**
* Returns a byte array representing the Unicode character mask.
* @param unicode unique Unicode code point value
* @return byte array representation or throws unsupported operation if not implemented
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encodeGlyphId,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encodeGlyphId(int),402,406,"/**
* Generates mask for glyph by ID.
* @param glyphId unique glyph identifier
* @return binary mask or null if unsupported
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:addToSubset(int),433,437,"/**
* Suppresses operation on mask of given Unicode code point.
* @param codePoint Unicode code point value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,subset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:subset(),439,444,"/**
* Unsupported operation: mask functionality not implemented.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",126,132,"/**
* Processes font subset mask data from given InputStream.
* @param ttfSubset input stream containing font subset data
* @param tag unknown tag value
* @param gidToCid mapping of glyph IDs to character IDs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getNumberOfComponents(),74,78,"/**
* Returns a mask value indicating function-specific flags.
* This method is intended to be overridden by subclasses.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getDefaultDecode(int),80,84,"/**
* Returns array of component mask values based on specified bit depth.
* @param bitsPerComponent number of bits per color component
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGB(float[]),92,96,"/**
* Calculates mask from input array.
* @param value input data array (not used)
* @return null or exception (unsupported operation)",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGBImage(java.awt.image.WritableRaster),98,102,"/**
* Creates a functional mask from the given WritableRaster.
* @param raster input image data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRawImage(java.awt.image.WritableRaster),104,108,"/**
* Creates an image mask from the provided WritableRaster.
* @param raster input raster data
* @return BufferedImage object or null if not created
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,remove,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:remove(),71,75,"/**
* Throws unsupported operation exception; functionality not implemented.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,remove,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:remove(),102,106,"/**
 * Throws an exception to indicate that this operation is not supported.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,flush,org.apache.pdfbox.filter.CCITTFaxEncoderStream:flush(),89,92,"/**
 * Calls a method on an underlying stream.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,encode,"org.apache.pdfbox.filter.IdentityFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",42,48,"/**
* Encodes input stream using specified algorithms and writes to output stream.
* @param input InputStream to be encoded
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary containing encoding parameters
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,org.apache.pdfbox.filter.ASCII85InputStream:read(),68,166,"/**
* Reads and decodes Ascii85 data from input stream.
* @throws IOException if invalid data is encountered
*/","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,encode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",77,189,"/**
* Encodes input stream into run-length encoded output stream.
* @param input InputStream to encode
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary (not used)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readCode(java.io.InputStream),317,321,"/**
* Extracts and returns a specific integer mask from the input stream.
* @param in InputStream object containing the data to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1CFont:readCode(java.io.InputStream),306,310,"/**
* Reads and returns the mask value from the input stream. 
* @param in InputStream containing the data to be read
* @return integer representing the fetched mask value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1Font:readCode(java.io.InputStream),486,490,"/**
* Reads and returns an integer value from the specified input stream.
* @param in InputStream object containing the data to be read
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType3Font:readCode(java.io.InputStream),248,252,"/**
* Reads and returns the FUNC_MASK value from the input stream.
* @param in InputStream containing the FUNC_MASK data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,close,org.apache.pdfbox.filter.ASCII85InputStream:close(),210,217,"/**
* Resets and calls superclass method m1().","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,write,org.apache.pdfbox.filter.ASCII85OutputStream:write(int),153,177,"/**
* Flushes and writes data to output stream, updating line breaks.
* @param b single byte value
*/","* This will write a single byte.
     *
     * @param b The byte to write.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,flush,org.apache.pdfbox.filter.ASCII85OutputStream:flush(),184,226,"/**
* Writes buffered data to output stream, flushing and resetting counters.
*/","* This will flush the data to the stream.
     *
     * @throws IOException If there is an error writing the data to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,toString,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:toString(),519,522,"/**
* Returns string representation of mask configuration.
* @return formatted string containing leaf, value, and fill status
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,int)",528,558,"/**
* Recursively constructs a node in the tree structure based on depth, path and value.
* @param depth tree depth
* @param path bit mask for node creation
* @param value value to store at leaf node (if applicable)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node)",560,590,"/**
* Recursively traverses the tree structure based on depth and path.
* @param depth traversal depth
* @param path bit mask for node selection
* @param node fallback node when not found in tree
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,readBit,org.apache.pdfbox.filter.CCITTFaxDecoderStream:readBit(),409,425,"/**
* Checks the next bit in the Huffman RLE stream buffer.
* @return true if the current function mask bit is set, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncateOrPad,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncateOrPad(byte[]),976,984,"/**
* Pads password with ENCRYPT_PADDING to ensure consistent encryption length.
* @param password input password to pad
*/","* This will take the password and truncate or pad it as necessary.
     *
     * @param password The password to pad or truncate.
     *
     * @return The padded or truncated password.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:<init>(java.io.OutputStream,int,int,int)",64,76,"/**
* Initializes CCITTFaxEncoderStream with given parameters.
* @param stream OutputStream to write encoded data
* @param columns number of columns in the fax image
* @param rows number of rows in the fax image
* @param fillOrder fill order for the fax image (1 or 2)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,close,org.apache.pdfbox.filter.CCITTFaxEncoderStream:close(),94,97,"/**
* Calls the underlying stream's m1 method.
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAbstractContentStream:close(),1550,1558,"/**
* Writes output and logs warning if text mode was exited without calling endText(). 
* @throws IOException if write operation fails
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,importXMPMetadata,org.apache.pdfbox.pdmodel.common.PDMetadata:importXMPMetadata(byte[]),96,103,"/**
 * Writes byte array to output stream with specified formatting.
 * @param xmp input byte array
 */","* Import an XMP stream into the PDF document.
     *
     * @param xmp The XMP data.
     *
     * @throws IOException If there is an error generating the XML document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,appendRawCommands,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:appendRawCommands(java.io.OutputStream,java.lang.String)",376,380,"/**
* Writes mask commands to output stream.
* @param os OutputStream to write to
* @param commands string of mask commands
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int,int)",236,253,"/**
* Processes binary code by writing to output buffer in specified order.
* @param code binary data to process
* @param codeLength number of bits in the code
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,fill,org.apache.pdfbox.filter.CCITTFaxEncoderStream:fill(),259,264,"/**
* Writes output buffer and performs secondary processing.
* @throws IOException on write or processing error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,splitAtPage,org.apache.pdfbox.multipdf.Splitter:splitAtPage(int),732,735,"/**
* Checks if page number is at function mask position.
* @param pageNumber current page index
*/","* Check if it is necessary to create a new document.
     * By default a split occurs at every page.  If you wanted to split
     * based on some complex logic then you could override this method.  For example.
     * <code>
     * protected void splitAtPage()
     * {
     *     // will split at pages with prime numbers only
     *     return isPrime(pageNumber);
     * }
     * </code>
     * @param pageNumber the 0-based page number to be checked as splitting page
     * 
     * @return true If a new document should be created.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransform,org.apache.pdfbox.filter.DCTFilter:getAdobeTransform(javax.imageio.metadata.IIOMetadata),182,201,"/**
* Extracts Adobe transform mask value from JPEG metadata.
* @param metadata IIOMetadata object containing image data
* @return Adobe mask value as an integer, or 0 if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransformByBruteForce,org.apache.pdfbox.filter.DCTFilter:getAdobeTransformByBruteForce(javax.imageio.stream.ImageInputStream),205,245,"/**
* Extracts the FUNC_MASK value from an ImageInputStream.
* @param iis input stream containing image data
* @return FUNC_MASK integer or 0 if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromYCCKtoCMYK,org.apache.pdfbox.filter.DCTFilter:fromYCCKtoCMYK(java.awt.image.Raster),250,286,"/**
* Converts Raster to WritableRaster with FUNC_MASK applied.
* @param raster input image data
* @return modified image data as WritableRaster
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromBGRtoRGB,org.apache.pdfbox.filter.DCTFilter:fromBGRtoRGB(java.awt.image.Raster),289,310,"/**
* Transforms input Raster to a WritableRaster with horizontally flipped pixels.
* @param raster input image data
* @return transformed WritableRaster object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getNumChannels,org.apache.pdfbox.filter.DCTFilter:getNumChannels(javax.imageio.ImageReader),313,335,"/**
* Extracts FUNC_MASK value from image metadata.
* @param reader ImageReader instance
* @return String representation of FUNC_MASK or empty string on error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,encode,"org.apache.pdfbox.filter.DCTFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",343,348,"/**
* Throws an exception since DCTFilter encoding is not supported.
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSourceRegion,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSourceRegion(java.awt.Rectangle),228,232,"/**
* Disables modification of this instance by throwing an exception.
* @param sourceRegion ignored (no-op)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingX(int),234,238,"/**
* Prevents modification of this instance by throwing an exception.
* @param ssX unused parameter ( legacy code compatibility)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingY(int),240,244,"/**
* Disables modification of this instance by throwing an exception.
* @param ssY ignored; present for method signature consistency
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetX(int),246,250,"/**
* Disallows modification of instance state by throwing an exception.
* @param ssOffsetX ignored (no effect)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetY(int),252,256,"/**
* Disables modification of this instance.
* @param ssOffsetY (unused parameter)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,encode,"org.apache.pdfbox.filter.JBIG2Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",148,153,"/**
* Throws exception as JBIG2 encoding is currently unsupported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,encode,"org.apache.pdfbox.filter.JPXFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",208,213,"/**
* Throws unsupported exception for JPX encoding.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(int),361,365,"/**
* Throws exception when attempting to apply mask operation.
* @param i ignored parameter (no effect)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,putAll,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:putAll(java.util.Map),127,131,"/**
* Throws an exception when attempting to apply mask operation on map.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightY(float),39,43,"/**
* Disallows modifying the mask by throwing an exception.
* @param value float value to be ignored and rejected
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightX(float),48,52,"/**
* Prevents modification by throwing an exception.
* @param value float value (not used)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftY(float),57,61,"/**
* Suppresses any attempts to modify the immutable class.
* @param value ignored; this method is intended to prevent modification
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftX(float),66,70,"/**
* Prevents modification of immutable object by throwing an exception. 
* @param value ignored due to immutability",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDFont:getPositionVector(int),236,240,"/**
* Returns an empty Vector as horizontal fonts do not support position vectors.
* @param code unused font code parameter
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDType0Font:getStandard14Width(int),517,521,"/**
* Returns mask value based on given code.
* @param code unique identifier
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncodingFromFont(),115,120,"/**
* Returns encoding mask for font type (throws unsupported exception).
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType3Font:getPath(java.lang.String),128,133,"/**
* Returns the function mask path for the given font.
* @param name font name (currently not used)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBoxFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBoxFont(),142,147,"/**
* Returns font box font with FUNC_MASK functionality.
* @throws UnsupportedOperationException if not supported by this font type
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType3Font:encode(int),242,246,"/**
* Generates a mask for Unicode code point.
* @param unicode unique Unicode code point value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:getCOSObject(),40,44,"/**
* Returns serialization mask (always throws UnsupportedOperationException).
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getInitialColor(),70,74,"/**
* Returns unsupported JPX color space draw mask.
* @throws UnsupportedOperationException always thrown
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:toRGB(float[]),76,80,"/**
* Returns an empty array (mask) for JPX color spaces.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getCOSObject(),94,98,"/**
* Returns COSBase representation for JPX color space, always throws exception.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getSignatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getSignatureText(),555,558,"/**
* Returns a string representing the function mask.
* @throws UnsupportedOperationException as this method is not yet implemented
*/","* returns visible signature text
     * @return the visible signature's text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureText(java.lang.String),565,568,"/**
* Creates a visible sign designer instance with specified mask.
* @param signatureText text to be masked
*/","* 
     * @param signatureText - adds the text on visible signature
     * @return the signature design",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(java.lang.String),118,123,"/**
* Disables setting mask value by string.
*/","* <b>This will throw an UnsupportedOperationException if used as the signature fields
     * value can't be set using a String</b>
     * 
     * @param value the plain text value.
     * 
     * @throws UnsupportedOperationException in all cases!",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,clipRegion,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",141,155,"/**
* Computes a rectangular mask from the given image and region.
* @param pdImage input image
* @param region rectangular region of interest
* @return masked rectangle with adjusted bounds
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getCompressionLevel,org.apache.pdfbox.filter.Filter:getCompressionLevel(),204,216,"/**
* Calculates the optimal compression level for ZIP output.
* @return Compression level value or -1 if failed
*/",* @return the ZIP compression level configured for PDFBox,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,contains,org.apache.pdfbox.pdmodel.common.COSArrayList:contains(java.lang.Object),150,154,"/**
* Delegates call to actual implementation.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,encode,"org.apache.pdfbox.filter.FlateFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",50,62,"/**
* Compresses input stream using specified compression level.
* @param input InputStream to be compressed
* @param encoded OutputStream for compressed data
* @param parameters COSDictionary (not used)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<init>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<init>(java.io.InputStream),54,60,"/**
* Initializes a FlateFilterDecoderStream from an InputStream.
* @param inputStream input stream containing compressed data
*/","* Constructor.
     *
     * @param inputStream The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,fetch,org.apache.pdfbox.filter.FlateFilterDecoderStream:fetch(),62,116,"/**
* Processes the inflater, handling EOF and decoding data.
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,close,org.apache.pdfbox.filter.FlateFilterDecoderStream:close(),182,187,"/**
 * Calls superclass method and inflates UI.
 */","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,logLevigoDonated,org.apache.pdfbox.filter.JBIG2Filter:logLevigoDonated(),52,61,"/**
* Displays a message indicating the donation of the Levigo JBIG2 plugin to the Apache Foundation.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<init>(),61,65,"/**
* Initializes PDF structure.
*/","* Constructor, creates PDF template structure.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,setImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:setImage(java.awt.image.BufferedImage),455,462,"/**
* Initializes image format parameters from BufferedImage.
* @param image input image data
*/","* Set image and its height and width.
     *
     * @param image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRawImage(java.awt.image.WritableRaster),245,249,"/**
* Creates a grayscale image from the given WritableRaster.
* @param raster raster data to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)",146,151,"/**
* Combines rendering of image and alpha channel using Graphics2D.
* @param img the image to render
* @param x the x-coordinate
* @param y the y-coordinate
* @param observer the observer for rendering progress
* @return true if rendered successfully, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,dispose,org.apache.pdfbox.rendering.GroupGraphics:dispose(),125,130,"/**
* Calls methods on associated graphics objects.
* @see groupG2D#m1()
* @see alphaG2D#m1()
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,checkIndexBounds,"org.apache.pdfbox.filter.LZWFilter:checkIndexBounds(java.util.List,long,javax.imageio.stream.MemoryCacheImageInputStream)",130,144,"/**
* Validates array index bounds for code table access.
* @param codeTable list of code tables
* @param index requested array index
* @param in input stream context
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,findPatternCode,"org.apache.pdfbox.filter.LZWFilter:findPatternCode(java.util.List,byte[])",229,247,"/**
* Finds a unique identifier in the code table that matches the given pattern.
* @param codeTable table of byte arrays
* @param pattern pattern to match
* @return unique identifier or -1 if not found
*/","* Find a matching pattern in the code table.
     *
     * @param codeTable The LZW code table.
     * @param pattern The pattern to be searched for.
     * @return The index of the matching pattern or -1 if nothing is found.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeFile(byte[]),260,264,"/**
* Checks if the provided byte array represents a TrueType font header.
* @param header the input byte array to check
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:<init>(java.io.OutputStream,int,int,int,int)",278,289,"/**
* Initializes PredictorOutputStream with specified parameters.
* @param out OutputStream to write to
* @param predictor Prediction mode (e.g., Huffman)
* @param colors Number of color components in the image
* @param bitsPerComponent Bits per component for each color channel
* @param columns Number of columns in the image",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodePredictorRow,"org.apache.pdfbox.filter.Predictor:decodePredictorRow(int,int,int,int,byte[],byte[])",49,202,"/**
* Applies predictor to the given line of pixels.
* @param predictor prediction algorithm ID
* @param colors number of color components in the pixel data
* @param bitsPerComponent bit depth of each component
* @param columns number of pixels per row
* @param actline current line of pixel data
* @param lastline previous line of pixel data
*/","* Decodes a single line of data in-place.
     * @param predictor Predictor value for the current line
     * @param colors Number of color components, from decode parameters.
     * @param bitsPerComponent Number of bits per components, from decode parameters.
     * @param columns Number samples in a row, from decode parameters.
     * @param actline Current (active) line to decode. Data will be decoded in-place,
     *                i.e. - the contents of this buffer will be modified.
     * @param lastline The previous decoded line. When decoding the first line, this
     *                 parameter should be an empty byte array of the same length as
     *                 <code>actline</code>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterPaeth,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterPaeth(int,int,int,int)",680,702,"/**
* Calculates a byte value using a 4-value input and returns the result of a specific calculation.
* @param x unknown value
* @param a first value
* @param b second value
* @param c third value
* @return calculated byte value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,estCompressSum,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:estCompressSum(byte[]),704,713,"/**
* Calculates the sum of M1 values from a byte array.
* @param dataRawRowSub input byte array
* @return total sum of M1 values as a long integer
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,equals,org.apache.pdfbox.pdmodel.PDPage:equals(java.lang.Object),805,809,"/**
* Verifies if two objects are functionally equivalent based on their m1() values.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree$SearchContext:<init>(org.apache.pdfbox.pdmodel.PDPage),422,425,"/**
 * Initializes SearchContext from given PDPage.
 * @param page PDPage object containing COS data.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,subsetDesignatedFonts,org.apache.pdfbox.pdmodel.PDDocument:subsetDesignatedFonts(),1062,1070,"/**
* Applies mask operations to specified fonts and subsetting.
* @throws IOException if an I/O error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:reset(),77,80,"/**
* Calls m1() on xrefTable.
* Performs some unknown operation (FUNC_MASK) on it.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,resetEngine,org.apache.pdfbox.text.PDFTextStripper:resetEngine(),223,229,"/**
* Resets application state and initializes character lists.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,"org.apache.pdfbox.multipdf.Overlay:getLayoutPage(int,int)",466,499,"/**
* Returns a LayoutPage instance for the given page number and total pages.
* @param pageNumber current page index
* @param numberOfPages total number of pages
* @return LayoutPage object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSObjectKey),113,116,"/**
* Checks if COSObjectKey matches a specific mask in the key pool.
* @param key COSObjectKey to check
*/","* Returns true, if a {@link COSBase} is registered for the given {@link COSObjectKey}.
     *
     * @param key The {@link COSObjectKey} that shall be checked for a registered {@link COSBase}.
     * @return True, if a {@link COSBase} is registered for the given {@link COSObjectKey}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,registerHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",66,77,"/**
* Registers a security handler with the given name and protection policy.
* @param name unique handler identifier
* @param securityHandler SecurityHandler implementation class
* @param protectionPolicy ProtectionPolicy implementation class
*/","* Registers a security handler.
     *
     * If the security handler was already registered an exception is thrown.
     * If another handler was previously registered for the same filter name or
     * for the same policy name, an exception is thrown
     *
     * @param name the name of the filter
     * @param securityHandler security handler class to register
     * @param protectionPolicy protection policy class to register",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(java.lang.String),143,146,"/**
* Checks if a string matches a specific mask.
* @param name input string to be validated
*/","* Determines if the encoding has a mapping for the given name value.
     * 
     * @param name PostScript glyph name
     * @return true if the encoding has a mapping for the given name value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(int),155,158,"/**
* Converts integer code to corresponding boolean mask.
* @param code integer code to be converted
* @return true if conversion is successful, false otherwise
*/","* Determines if the encoding has a mapping for the given code value.
     * 
     * @param code character code
     * @return if the encoding has a mapping for the given code value
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:<init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",132,136,"/**
* Constructs a new Tokenizer instance with the given input text and syntax handler.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,escapeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:escapeXML(java.lang.String),787,822,"/**
* Escapes special XML characters in the input string.
* @param input String to be processed
* @return Escaped string representation of the input
*/","* Escape special characters.
     *
     * @param input the string to be escaped.
     *
     * @return the resulting string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),219,229,"/**
* Applies or clears mask based on bounding box.
* @param bbox rectangle defining the area to apply/clear mask
*/","* This will set the BBox (bounding box) for this form.
     * @param bbox The new BBox for this form.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,float2String,org.apache.pdfbox.multipdf.Overlay:float2String(float),585,600,"/**
* Formats float value into a string with minimal trailing zeros.
* @param floatValue the floating-point number to format
* @return string representation of floatValue or """" if not applicable
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeHex,org.apache.pdfbox.util.Hex:decodeHex(java.lang.String),219,245,"/**
* Encodes input string into byte array using custom encoding rules.
* @param s input string to encode
*/","* Decodes a hex String into a byte array.
     *
     * @param s A String with ASCII hex.
     * @return decoded byte array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,close,org.apache.pdfbox.pdmodel.PDDocument:close(),1266,1305,"/**
* Closes and releases resources associated with the document.
* @throws IOException if any operation fails
*/","* This will close the underlying COSDocument object.
     * 
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,close,org.apache.pdfbox.pdmodel.fdf.FDFDocument:close(),262,284,"/**
* Validates PDF document and FDF source for masking.
* @throws IOException on validation failure
*/","* This will close the underlying COSDocument object.
     *
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getOnValues(),91,95,"/**
* Returns a set of function mask names.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,hasNext,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:hasNext(),38,51,"/**
* Checks if the current item matches the starting item based on sibling relationships.
* @return true if the items match, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getCOSObject,org.apache.pdfbox.pdmodel.common.function.PDFunction:getCOSObject(),84,95,"/**
* Returns the function dictionary or stream dictionary.
* @return COSDictionary object representing the function dictionary or stream dictionary
*/","* Returns the stream.
     * @return The stream for this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",112,118,"/**
* Initializes PDXObject with given stream and subtype.
* @param stream PDStream object to initialize from
* @param subtype COSName representing the subtype of this object
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject:getCOSObject(),136,140,"/**
* Returns a COSStream instance by delegating to stream's m1() method.
*/","* Returns the stream.
     * {@inheritDoc}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getMetadata(),455,458,"/**
* Returns COSStream with metadata filtered.","* Returns the metadata stream for this object, or null if there is no metadata stream.
     * @return the metadata stream, or null if there is none",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setMetadata(org.apache.pdfbox.cos.COSStream),533,536,"/**
* Sets metadata from COSStream.
* @param metadata input COSStream object
*/","* Sets the metadata stream that is associated with this color space.
     * @param metadata the new metadata stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureAnnotation,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",530,540,"/**
* Checks if any annotation matches the given widget.
* @param annotations list of PDAnnotations
* @param widget target PDAnnotationWidget
* @return true if a match is found, false otherwise
*/","* Check if the widget already exists in the annotation list.
     *
     * @param annotations the list of PDAnnotation fields.
     * @param widget the annotation widget.
     * @return true if the widget already existed in the annotation list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,equals,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:equals(java.lang.Object),201,216,"/**
* Compares two annotations for equality.
* @param o the annotation to compare with this instance
* @return true if equal, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,keySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:keySet(),146,150,"/**
* Delegates call to actuals.m1(), returning result as a set of K.",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",509,521,"/**
* Checks if a specific signature field exists in the given iterator.
* @param fieldIterator iterator over PDF fields
* @param signatureField target PDSignatureField to search for
* @return true if found, false otherwise
*/","* Check if the field already exists in the field list.
     *
     * @param fieldIterator iterator on all fields.
     * @param signatureField the signature field.
     * @return true if the field already existed in the field list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,values,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:values(),155,159,"/**
* Delegates execution to actuals' m1() method.
* @return collection of type V containing results
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,fillPagesAnnotationMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",838,852,"/**
* Updates the set of annotation widgets for a given page.
* @param pagesAnnotationsMap map of page annotations
* @param page PDPage object
* @param widget PDAnnotationWidget to add or update
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<init>,org.apache.pdfbox.pdfparser.BaseParser:<init>(org.apache.pdfbox.io.RandomAccessRead),173,176,"/**
* Initializes parser with a PDF source reader.
* @param pdfSource RandomAccessRead object containing PDF data
*/",* Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isHexDigit,org.apache.pdfbox.pdfparser.BaseParser:isHexDigit(char),178,183,"/**
* Checks if character is a valid hexadecimal digit.
* @param ch the input character to check
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isDigit,org.apache.pdfbox.pdfparser.BaseParser:isDigit(),1298,1301,"/**
* Recursively calls m2 with the result of m1.
* @throws IOException if an I/O error occurs
*/","* This will tell if the next byte is a digit or not.
     *
     * @return true if the next byte in the stream is a digit.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,compareCOSObjects,"org.apache.pdfbox.pdfparser.BruteForceParser:compareCOSObjects(org.apache.pdfbox.cos.COSObject,java.lang.Long,org.apache.pdfbox.cos.COSObject)",499,517,"/**
* Compares and returns the newer COSObject based on key or offset.
* @param newObject COSObject to compare
* @param newOffset Long offset of newObject
* @param currentObject existing COSObject to compare with
* @return newer COSObject or newObject if null
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectNumbers(),174,191,"/**
* Builds a map of object numbers and offsets.
* @return Map of object IDs to corresponding offsets
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setXRef,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",175,190,"/**
* Adds or updates XRef entry for the given object key at specified offset.
* @param objKey COSObjectKey to be referenced
* @param offset long value representing the offset
*/","* Populate XRef HashMap of current XRef object.
     * Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file.
     * @param objKey The objkey, with id and gen numbers
     * @param offset The byte offset in this file",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,add,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:add(int,java.lang.String)",106,110,"/**
* Updates mask data by executing two operations: 
* mapping code to name and vice versa.","* This will add a character encoding. An already existing mapping is preserved when creating
     * the reverse mapping. Should only be used during construction of the class.
     * 
     * @see #overwrite(int, String)
     * 
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isSpace,org.apache.pdfbox.pdfparser.BaseParser:isSpace(),1275,1278,"/**
 * Recursively calls m2 with results of m1 and returns result.
 */","* This will tell if the next byte is a space or not.
     *
     * @return true if the next byte in the stream is a space character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(int),454,470,"/**
* Checks for valid line break functionality.
* @param linebreak input data to analyze
* @return true if valid, false otherwise
*/","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @param linebreak the first character to be checked.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,checkForEndOfString,org.apache.pdfbox.pdfparser.BaseParser:checkForEndOfString(int),485,519,"/**
* Calculates a mask value based on the input parameter and stream data.
* @param bracesParameter input parameter
*/","* This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this
     * format: /Title ( (5) /Creator which was patched in 1 place.
     *
     * However it missed the case where the number of opening and closing parenthesis isn't balanced
     *
     * The second bug was in this format /Title (c:\) /Producer
     *
     * @param bracesParameter the number of braces currently open.
     *
     * @return the corrected value of the brace counter
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isEOL,org.apache.pdfbox.pdfparser.BaseParser:isEOL(int),1207,1210,"/**
* Evaluates a character against two masks.
* @param c the input character to check
* @return true if the character matches either mask, false otherwise
*/","* This will tell if the next byte to be read is an end of line byte.
     *
     * @param c The character to check against end of line
     * @return true if the next byte is 0x0A or 0x0D.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readStringNumber,org.apache.pdfbox.pdfparser.BaseParser:readStringNumber(),1443,1461,"/**
* Reads and constructs a StringBuilder representing a numeric value.
* @throws IOException if the number exceeds MAX_LENGTH_LONG
*/","* This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid
     * delimiters are any non digit values.
     *
     * @return the token to parse as integer or long by the calling method.
     * @throws IOException throws by the {@link #source} methods.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:toString(),94,107,"/**
* Generates a string representation of the control point array as a Cubic Bezier curve.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,decodeBuffer,org.apache.pdfbox.pdfparser.BaseParser:decodeBuffer(java.io.ByteArrayOutputStream),926,939,"/**
* Decodes ByteArrayOutputStream to a string, handling UTF-8 and alternative charset fallbacks.
* @param buffer input byte array stream
* @return decoded string or null if decoding fails
*/","* Tries to decode the buffer content to an UTF-8 String. If that fails, tries the alternative Encoding.
     * 
     * @param buffer the {@link ByteArrayOutputStream} containing the bytes to decode
     * @return the decoded String",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedChar,org.apache.pdfbox.pdfparser.BaseParser:readExpectedChar(char),1098,1106,"/**
* Verifies the next character matches a specific mask.
* @param ec expected character to match
*/","* Read one char and throw an exception if it is not the expected value.
     *
     * @param ec the char value that is expected.
     * @throws IOException if the read char is not the expected value or if an
     * I/O error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isWhitespace,org.apache.pdfbox.pdfparser.BaseParser:isWhitespace(),1241,1244,"/**
* Recursively calls m2 with result of m1.
* @throws IOException if an error occurs during recursion
*/","* This will tell if the next byte is whitespace or not.
     *
     * @return true if the next byte in the stream is a whitespace character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseStartXref,org.apache.pdfbox.pdfparser.XrefParser:parseStartXref(),557,568,"/**
* Retrieves the start XREF value from the PDF document.
* @return The start XREF value as a long integer, or -1 if not found
*/","* This will parse the startxref section from the stream. The startxref value is ignored.
     *
     * @return the startxref value or -1 on parsing error
     * @throws IOException If an IO error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchNearestValue,"org.apache.pdfbox.pdfparser.BruteForceParser:searchNearestValue(java.util.List,long)",271,294,"/**
* Calculates the function mask value by finding the smallest difference between an offset and a list of values.
* @param values List of values to compare with the offset
* @param offset Value to calculate the smallest difference with
* @return The smallest difference value or -1 if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForLastEOFMarker,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForLastEOFMarker(),524,560,"/**
* Finds the last EOF marker in the XREF table.
* @return The ID of the last EOF marker or Long.MAX_VALUE if none found.","* Brute force search for the last EOF marker.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefTables,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefTables(),641,660,"/**
* Extracts offsets of XRef tables from the input stream.
* @return List of table offsets or empty list if not found
*/","* Brute force search for all xref entries (tables).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getNumberOfColorComponents(),115,124,"/**
* Retrieves and returns the number of color components.
* @return int representing the number of color components or -1 if unknown
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefStreams(),667,735,"/**
* Fetches and resolves offsets for fixed XREF streams.
* @return List of resolved offsets
*/","* Brute force search for all /XRef entries (streams).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,getXrefTable,org.apache.pdfbox.pdfparser.XrefParser:getXrefTable(),75,78,"/**
* Resolves trailer counts by object key.
* @return map of object keys to trailer counts
*/","* Returns the resulting cross reference table.
     * 
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getStartxrefOffset,org.apache.pdfbox.pdfparser.COSParser:getStartxrefOffset(),305,360,"/**
* Calculates the function mask offset by reading and processing file trailer.
* @return function mask offset or throws IOException if invalid
*/","* Looks for and parses startxref. We first look for last '%%EOF' marker (within last
     * {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find
     * <code>startxref</code>.
     * 
     * @return the offset of StartXref
     * @throws IOException If something went wrong.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,readUntilEndStream,org.apache.pdfbox.pdfparser.COSParser:readUntilEndStream(org.apache.pdfbox.pdfparser.EndstreamFilterStream),793,885,"/**
* Performs a streaming match for the ""ENDSTREAM"" keyword.
* @param out output stream to write matched content
* @return function mask value
*/","* This method will read through the current stream object until
     * we find the keyword ""endstream"" meaning we're at the end of this
     * object. Some pdf files, however, forget to write some endstream tags
     * and just close off objects with an ""endobj"" tag so we have to handle
     * this case as well.
     * 
     * This method is optimized using buffered IO and reduced number of
     * byte compare operations.
     * 
     * @param out  stream we write out to.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,validateStreamLength,org.apache.pdfbox.pdfparser.COSParser:validateStreamLength(long),887,921,"/**
* Validates and configures stream for reading.
* @param streamLength length of the stream
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseHeader,"org.apache.pdfbox.pdfparser.COSParser:parseHeader(java.lang.String,java.lang.String)",1074,1155,"/**
* Fetches user profile by ID and updates the document with the corresponding version.
* @param isLenient whether to be lenient when parsing header versions
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,<init>,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:<init>(),49,52,"/**
* Initializes writer mode to Unicode. 
* @see #wMode */",* Creates a new ToUnicode CMap writer.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectOffsets,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectOffsets(),193,212,"/**
* Calculates and returns a map of object offsets.
* @return Map<Integer, Long> containing object IDs to positions
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,setLabelItem,"org.apache.pdfbox.pdmodel.common.PDPageLabels:setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",168,175,"/**
* Sets label item for a page range starting at specified startPage.
* @param startPage non-negative page number
* @param item PDPageLabelRange object to apply
*/","* Sets the page label range beginning at the specified start page.
     * 
     * @param startPage
     *            the 0-based index of the page representing the start of the
     *            page label range.
     * @param item
     *            the page label item to set.
     * @throws IllegalArgumentException if the startPage parameter is &lt; 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,add,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:add(int,java.lang.String)",70,83,"/**
* Converts CID to Unicode and updates the given text.
* @param cid 16-bit identifier
* @param text string to be updated
*/","* Adds the given CID to Unicode mapping.
     *
     * @param cid CID
     * @param text Unicode text, up to 512 bytes.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNoFollowingBinData,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNoFollowingBinData(),331,403,"/**
* Checks for binary data presence by parsing input buffer.
* @return true if only whitespace or EI marker; false otherwise
*/","* Looks up an amount of bytes if they contain only ASCII characters (no
     * control sequences etc.), and that these ASCII characters begin with a
     * sequence of 1-3 non-blank characters between blanks
     *
     * @return <code>true</code> if next bytes are probably printable ASCII
     * characters starting with a PDF operator, otherwise <code>false</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNextSpaceOrReturn,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNextSpaceOrReturn(),457,460,"/**
* Evaluates mask value from source data.
* @throws IOException if error occurs during evaluation
*/","* Checks if the next char is a space or a return.
     * 
     * @return true if the next char is a space or a return
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:addEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),140,148,"/**
* Masks or updates the specified XReferenceEntry in stream data.
* @param entry reference entry to be masked or updated
*/","* Add an new entry to the XRef stream.
     * 
     * @param entry new entry to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getWEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getWEntry(),155,175,"/**
* Computes the mask values as an array of integers.
* @return int[] containing the calculated mask values
*/","* determines the minimal length required for all the lengths.
     * 
     * @return the length information",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:<init>(long),46,50,"/**
* Updates the highest XRef object number if provided value is higher.
* @param highestXRefObjectNumber new highest XRef object number
*/","* Creates a map of {@link COSBase} instances to {@link COSObjectKey}s, allowing bidirectional lookups. This
     * constructor can be used for pre - initialized structures to start the assignment of new object numbers starting
     * from the hereby given offset.
     *
     * @param highestXRefObjectNumber The highest known object number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getIndexEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getIndexEntry(),187,219,"/**
* Generates a list of consecutive numbers based on predefined object numbers.
* @return List<Long> of consecutive numbers
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,next,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:next(),224,238,"/**
* Returns the next function mask value or throws an exception when exhausted.
* @return Long function mask value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getFirstTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getFirstTrailer(),110,119,"/**
* Returns trailer from COSDictionary using FUNC_MASK.
* @return Trailer object or null if not found
*/","* Returns the first trailer if at least one exists.
     * 
     * @return the first trailer or null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getLastTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getLastTrailer(),126,135,"/**
* Retrieves COSDictionary trailer from byte position map.
* @return trailer object or null if invalid
*/","* Returns the last trailer if at least one exists.
     * 
     * @return the last trailer ir null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getContainedObjectNumbers,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getContainedObjectNumbers(int),339,356,"/**
* Fetches a set of referenced object numbers by comparing the input object state number.
* @param objstmObjNr unique object state identifier
* @return Set<Long> containing referenced object numbers or null if trailer is not resolved
*/","Returns object numbers which are referenced as contained
     *  in object stream with specified object number.
     *  
     *  This will scan resolved xref table for all entries having negated
     *  stream object number as value.
     *
     *  @param objstmObjNr  object number of object stream for which contained object numbers
     *                      should be returned
     *                       
     *  @return set of object numbers referenced for given object stream
     *          or <code>null</code> if {@link #setStartxref(long)} was not
     *          called before so that no resolved xref table exists",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,getFirstColumnValue,org.apache.pdfbox.pdfparser.xref.AbstractXReference:getFirstColumnValue(),59,63,"/**
* Calculates the function mask by invoking nested methods.
* @return calculated mask value
*/","* Returns the value for the first column of the crossreference stream entry. (The numeric representation of this
     * entry's (The numeric representation of this entry's {@link XReferenceType}.)
     *
     * @return The value for the first column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.FreeXReference:getThirdColumnValue(),77,81,"/**
* Calculates the function mask using nested operations.
* @return The calculated function mask value as a long integer.","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set next free {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,toString,org.apache.pdfbox.pdfparser.xref.FreeXReference:toString(),88,93,"/**
* Generates a formatted string representation of a FreeReference object.
* @return String representation of the object
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getSecondColumnValue(),111,115,"/**
* Returns the function mask value.
*/","* Returns the value for the second column of the crossreference stream entry. (This is byte offset of the
     * {@link COSObject} in the PDF file - for entries of this type.)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getThirdColumnValue(),123,127,"/**
* Calculates function mask by invoking m1 and m2 methods.","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,toString,org.apache.pdfbox.pdfparser.xref.NormalXReference:toString(),134,139,"/**
* Returns a string representation of the object reference, including its key and type.
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getSecondColumnValue(),104,108,"/**
* Calculates and returns the functional mask value.
* @return The calculated functional mask value as a long integer.","* Returns the value for the second column of the crossreference stream entry. (This is object number from the
     * {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries
     * of this type..)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getThirdColumnValue(),116,120,"/**
* Calculates and returns the function mask value.
*/","* Returns the value for the third column of the crossreference stream entry. (This is index of the
     * {@link COSObject} in the containing object stream - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,toString,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:toString(),127,132,"/**
* Returns a string representation of the ObjectStreamEntry.
* @return formatted string with entry details
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(byte[],int,int)",111,117,"/**
* Writes data to output stream with specified offset and length.
* @param b byte array to write
* @param off starting offset in the array
* @param len number of bytes to write
*/","* This will write some byte to the stream.
     *
     * @param b The source byte array.
     * @param off The offset into the array to start writing.
     * @param len The number of bytes to write.
     *
     * @throws IOException If the underlying stream throws an exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(int),126,132,"/**
* Advances output stream and writes value to it.
* @param b value to write
*/","* This will write a single byte to the stream.
     *
     * @param b The byte to write to the stream.
     *
     * @throws IOException If there is an error writing to the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,writeEOL,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:writeEOL(),149,156,"/**
* Executes mask-related operations.
* @throws IOException on I/O errors
*/","* This will write an EOL to the stream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isCompress,org.apache.pdfbox.pdfwriter.COSWriter:isCompress(),314,317,"/**
* Checks if parameters are compressed and delegates to underlying logic.
* @return true if compression is valid, false otherwise
*/","* Returns true, if the resulting document shall be compressed.
     *
     * @return True, if the resulting document shall be compressed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addXRefEntry,org.apache.pdfbox.pdfwriter.COSWriter:addXRefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),345,348,"/**
* Applies mask function to XReferenceEntry.
* @param entry XReferenceEntry object to process
*/","* add an entry in the x ref table for later dump.
     *
     * @param entry The new entry to add.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1570,1581,"/**
* Updates the stroking color space based on the provided color space.
* @param colorSpace color space to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1583,1594,"/**
* Updates the non-stroking color space mask based on the provided color space.
* @param colorSpace PDColorSpace object to apply or reset
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,hasNext,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:hasNext(),224,228,"/**
* Checks if queue is empty.
* @return true if queue is empty, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,hasNext,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:hasNext(),85,89,"/**
* Checks if mask is enabled based on queue state.
* @return true if mask is disabled, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFMarkedContentExtractor:endMarkedContentSequence(),125,132,"/**
* Updates marked contents mask based on current state.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectReference,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectReference(java.io.OutputStream,org.apache.pdfbox.cos.COSObjectKey)",367,378,"/**
* Writes a COS reference mask to the output stream.
* @param output OutputStream to write to
* @param indirectReference COS object key for the indirect reference
*/","* Write the given {@link COSObjectKey} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param indirectReference The content, that shall be written.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefEntry,org.apache.pdfbox.pdfwriter.COSWriter:writeXrefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),995,1005,"/**
* Formats and writes mask entry details to output stream.
* @param entry XReferenceEntry object containing offset, generation, and usage information
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getXRefRanges,org.apache.pdfbox.pdfwriter.COSWriter:getXRefRanges(java.util.List),1025,1058,"/**
* Generates an array of mask values based on consecutive XReferenceEntry numbers.
* @param xRefEntriesList List of XReferenceEntry objects
* @return Long array representing the mask values
*/","* check the xref entries and write out the ranges.  The format of the
     * returned array is exactly the same as the pdf specification.  See section
     * 7.5.4 of ISO32000-1:2008, example 1 (page 40) for reference.
     * <p>
     * example: 0 1 2 5 6 7 8 10
     * <p>
     * will create a array with follow ranges
     * <p>
     * 0 3 5 4 10 1
     * <p>
     * this mean that the element 0 is followed by two other related numbers 
     * that represent a cluster of the size 3. 5 is follow by three other
     * related numbers and create a cluster of size 4. etc.
     * 
     * @param xRefEntriesList list with the xRef entries that was written
     * @return a integer array with the ranges",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getMD5,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getMD5(),35,46,"/**
* Creates and returns an MD5 hash message digest instance. 
* @return MessageDigest object for MD5 hashing, or throws exception if algorithm not found
*/",* @return MD5 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA1,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA1(),51,62,"/**
* Returns an instance of SHA-1 MessageDigest.",* @return SHA-1 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA256,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA256(),67,78,"/**
* Returns an instance of SHA-256 message digest.
*/",* @return SHA-256 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.fdf.FDFDocument),1602,1613,"/**
* Updates the FDFDocument with incremental data from the provided document.
* @param doc FDFDocument to process
*/","* This will write the fdf document.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getHighestXRefObjectNumber,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getHighestXRefObjectNumber(),289,292,"/**
* Retrieves value from object pool.
*/","* Returns the highest object number, that is registered in this compression pool.
     *
     * @return The highest object number, that is registered in this compression pool.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,getPreparedKeys,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:getPreparedKeys(),97,100,"/**
* Returns a list of COS object keys with masks applied.
* @return List of masked COS object key objects
*/","* Returns all {@link COSObjectKey}s, that shall be added to the object stream, when
     * {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @return All {@link COSObjectKey}s, that shall be added to the object stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:getFont(org.apache.pdfbox.cos.COSObject),107,112,"/**
* Retrieves and returns a PDFont object by its COS reference.
* @param indirect COS reference to the PDFont
* @return PDFont object or null if not found in cache
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:getColorSpace(org.apache.pdfbox.cos.COSObject),147,152,"/**
* Retrieves PDColorSpace instance associated with the given COSObject.
* @param indirect COSObject reference to fetch
* @return PDColorSpace object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getExtGState,org.apache.pdfbox.pdmodel.DefaultResourceCache:getExtGState(org.apache.pdfbox.cos.COSObject),187,192,"/**
* Retrieves and returns the extended graphics state associated with the given COS object.
* @param indirect COSObject reference to fetch
* @return PDExtendedGraphicsState object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:getShading(org.apache.pdfbox.cos.COSObject),227,232,"/**
* Retrieves PDShading instance from cache based on input COSObject.
* @param indirect COSObject to resolve
* @return cached PDShading or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getPattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:getPattern(org.apache.pdfbox.cos.COSObject),267,272,"/**
* Retrieves and returns a cached or computed PDAbstractPattern instance for the given COSObject.
* @param indirect COSObject to retrieve the pattern for
* @return PDAbstractPattern instance or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:getProperties(org.apache.pdfbox.cos.COSObject),307,312,"/**
* Retrieves a PDPropertyList object from the cache or computes it if not cached.
* @param indirect COSObject to fetch properties for
* @return PDPropertyList object or null if failed to compute
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:getXObject(org.apache.pdfbox.cos.COSObject),347,352,"/**
* Retrieves a PDXObject mask from the cache using the provided COSObject.
* @param indirect COSObject to use for lookup
* @return cached PDXObject or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",114,118,"/**
* Passes COS object to font manager with a soft reference to the provided font. 
* @param indirect COS object to process
* @param font PDFont instance to be managed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",154,158,"/**
* Invokes m1 on colorSpaces, passing the COSObject and a reference to the given color space.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",194,198,"/**
* Transfers extended graphics state to a soft reference.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",234,238,"/**
* Invokes method m1 on the Shadings instance with the provided COSObject and a reference to the given PDShading object.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",274,278,"/**
* Calls m1 on patterns with an indirect COSObject and a soft reference to the given pattern.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",314,318,"/**
* Calls m1 on properties with indirect object and cached property list.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",354,358,"/**
* Invokes m1 on xobjects with indirect as parameter and wraps xobject in a SoftReference.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeFont(org.apache.pdfbox.cos.COSObject),120,145,"/**
* Retrieves PDF font by COS object, handling cached and soft-referenced fonts.
* @param indirect COSObject to fetch font from
* @return PDFont object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeColorSpace(org.apache.pdfbox.cos.COSObject),160,185,"/**
* Retrieves a PDColorSpace object from cache or calculates it based on the input COSObject.
*@param indirect input COSObject containing color space information
*@return PDColorSpace object, or null if not found or removed.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeExtState,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeExtState(org.apache.pdfbox.cos.COSObject),200,225,"/**
* Fetches PDExtendedGraphicsState for the given COSObject.
* @param indirect COSObject to fetch state for
* @return PDExtendedGraphicsState object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeShading(org.apache.pdfbox.cos.COSObject),240,265,"/**
* Fetches and manages PDShading object for the given indirect COSObject.
* @param indirect COSObject to fetch shading from
* @return PDShading object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removePattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:removePattern(org.apache.pdfbox.cos.COSObject),280,305,"/**
* Fetches and manages PDAbstractPattern for given COSObject.
* @param indirect COSObject to fetch pattern for
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeProperties(org.apache.pdfbox.cos.COSObject),320,345,"/**
* Fetches the FUNC_MASK PDPropertyList for a given COSObject.
* @param indirect COSObject to retrieve mask from
* @return PDPropertyList object or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeXObject(org.apache.pdfbox.cos.COSObject),360,386,"/**
* Retrieves a PDXObject for the given COSObject, handling removal and caching logic.
* @param indirect COSObject to retrieve PDXObject for
* @return PDXObject or null if not found or removed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,overwrite,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:overwrite(int,java.lang.String)",121,135,"/**
* Updates inverted mapping and user ID to name mapping for a given code.
* @param code unique identifier
* @param name new or updated name
*/","* This will add a character encoding. An already existing mapping is overwritten when creating
     * the reverse mapping. Should only be used during construction of the class.
     *
     * @see Encoding#add(int, String)
     *
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,removeRegion,org.apache.pdfbox.text.PDFTextStripperByArea:removeRegion(java.lang.String),79,83,"/**
* Applies mask to region and area by name.
* @param regionName unique identifier of region
*/","* Delete a region to group text by. If the region does not exist, this method does nothing.
     *
     * @param regionName The name of the region to delete.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMaximumFractionDigits,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMaximumFractionDigits(int),122,125,"/**
* Formats decimal to specified number of fractional digits.
* @param fractionDigitsNumber number of fractional digits
*/","* Sets the maximum number of digits allowed for fractional numbers.
     * 
     * @see NumberFormat#setMaximumFractionDigits(int)
     * @param fractionDigitsNumber the maximum number of digits allowed for fractional numbers",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.OutputStream,org.apache.pdfbox.pdmodel.PDResources)",106,114,"/**
* Initializes a new content stream for the given PDF document.
* @param document the parent PDF document
* @param outputStream output stream to write to
* @param resources associated resources for this stream
*/","* Create a new appearance stream.
     *
     * @param document may be null
     * @param outputStream The appearances output stream to write to.
     * @param resources The resources to use",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getVerticalDisplacementVectorY,org.apache.pdfbox.pdmodel.font.PDCIDFont:getVerticalDisplacementVectorY(int),306,315,"/**
* Calculates and returns the weighted displacement Y value based on the input code.
* @param code unique identifier for calculation
*/","* Returns the y-component of the vertical displacement vector (w1).
     *
     * @param code character code
     * @return w1y",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,defaultIfNull,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:defaultIfNull(java.lang.Float,float)",201,204,"/**
* Returns standard value if present, otherwise returns default value. 
* @param standardValue expected value or null
* @return actual value (standardValue or defaultValue)","* Returns the provided default value in case 'standard' value is <code>null</code>. To be used
     * in cases unboxing may lead to a NPE.
     *
     * @param standardValue 'standard' value
     * @param defaultValue default value
     *
     * @return 'standard' value if not <code>null</code> otherwise default value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,zoom,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:zoom(float),285,292,"/**
* Scales image dimensions and updates rectangle parameters.
* @param percent scaling percentage
* @return PDVisibleSignDesigner instance for method chaining
*/","* Zoom signature image with some percent.
     * 
     * @param percent increase (positive value) or decrease (negative value) image with x percent.
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getWidth,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getWidth(),351,354,"/**
* Returns the width of the image as a mask value.
*/","* 
     * @return signature image width",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getHeight(),372,375,"/**
* Returns image height as a mask value.
* @return image height in pixels
*/","* 
     * @return signature image height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addToSubset(int),278,286,"/**
* Embeds glyph with specified code point.
* @param codePoint unique identifier of the glyph to embed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addGlyphsToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addGlyphsToSubset(java.util.Set),288,295,"/**
* Embeds glyphs into a font using provided IDs.
* @param glyphIds set of unique glyph identifiers
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,adjustForRotation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:adjustForRotation(),216,261,"/**
* Applies rotation-specific transformations and updates dimensions.
* @return PDVisibleSignDesigner instance for method chaining
*/","* Adjust signature for page rotation. This is optional, call this after all x and y coordinates
     * have been set if you want the signature to be positioned regardless of page orientation.
     *
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createAffineTransform,org.apache.pdfbox.util.Matrix:createAffineTransform(),169,175,"/**
* Creates an AffineTransform from a predefined set of values.
* @return preconfigured AffineTransform object
*/","* Create an affine transform from this matrix's values.
     *
     * @return An affine transform with this matrix's values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.Vertex:toString(),37,50,"/**
* Formats vertex color mask as a string.
* @return formatted string with color values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,checkFloatValues,org.apache.pdfbox.util.Matrix:checkFloatValues(float[]),295,302,"/**
* Validates and returns the input array as is, assuming it's a matrix product.
* @param values 9-element float array representing matrix product
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,encode,org.apache.pdfbox.pdmodel.font.PDFont:encode(java.lang.String),329,344,"/**
* Encodes input text into M4 format.
* @param text input string to be encoded
*/","* Encodes the given string for use in a PDF content stream.
     *
     * @param text Any Unicode text.
     * @return Array of PDF content stream bytes.
     * @throws IOException If the text could not be encoded.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,codePointToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:codePointToName(int),181,189,"/**
* Returns the Unicode character name for a given code point.
* @param codePoint unique Unicode code point identifier
* @return character name or "".notdef"" if not found
*/","* Returns the name for the given Unicode code point.
     *
     * @param codePoint Unicode code point
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(org.apache.pdfbox.cos.COSName),77,84,"/**
* Recursively fetches RenderState by resolving COSName.
* @param state COSName reference to resolve
* @return RenderState object or null if unresolved
*/","* Returns the base state represented by the given {@link COSName}.
         *
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(org.apache.pdfbox.cos.COSName),71,78,"/**
* Recursively fetches the base state of a COS object.
* @param state COSName object to retrieve base state from
* @return BaseState enum value or ON if input is null
*/","* Returns the base state represented by the given {@link COSName}.
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,applyGSUBRules,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:applyGSUBRules(org.apache.fontbox.ttf.gsub.GsubWorker,java.io.ByteArrayOutputStream,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1715,1755,"/**
* Applies GSUB substitution rules to a list of code points and writes the resulting glyphs to a ByteArrayOutputStream.
* @param gsubWorker GSUB worker instance
* @param out output stream for writing glyphs
* @param font PDType0Font used for glyph lookup
* @param word input string with code points to process
* @return updated list of glyph IDs after substitution
*/","* Retrieve the glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules. The encoded glyph IDs are also written to the specified output stream.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param out The output stream to write the glyph IDs to.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param word The word which is being converted from characters to glyph IDs.
     * @return The glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified word.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",226,232,"/**
* Initializes a new PDDocument instance with the given COSDocument, 
* source data and access permissions.
* @param doc COSDocument object
* @param source RandomAccessRead source data
* @param permission AccessPermission object
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf
     * @param permission he access permissions of the pdf
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,"org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",81,86,"/**
* Initializes an FDFDocument object from a COSDocument and a source.
* @param doc the COSDocument to initialize
* @param source the RandomAccessRead source for the FDF file
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     *
     * @param doc The COSDocument that this document wraps.
     * @param source The source that will be closed when this document gets closed, can be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,initRgbColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:initRgbColorTable(),125,165,"/**
* Initializes color table and raster for base color space.
* @throws IOException if an error occurs during initialization
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(),168,172,"/**
* Delegates execution to actual implementation of m1().",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(java.lang.Object[]),177,182,"/**
* Delegates array processing to actual implementation.
* @param a input array of type X
* @return processed array of type X or null if failed
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,indexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:indexOf(java.lang.Object),534,538,"/**
* Delegates call to actual object's m1 method.
* @param o Object to pass to m1 method
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,containsAll,org.apache.pdfbox.pdmodel.common.COSArrayList:containsAll(java.util.Collection),242,246,"/**
* Delegates collection operation to actual instance.
* @param c arbitrary collection of elements
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:isEqual(java.lang.Object,java.lang.Object)",46,60,"/**
* Evaluates equality between two objects using bitwise or method comparison.
* @param op1 first object to compare
* @param op2 second object to compare
* @return true if equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:compare(java.lang.Number,java.lang.Number)",87,91,"/**
* Compares two numbers based on their first mantissa value.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's mantissa is greater or equal, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:compare(java.lang.Number,java.lang.Number)",99,103,"/**
* Compares two numbers based on their first mantissa value.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's mantissa is greater, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:compare(java.lang.Number,java.lang.Number)",111,115,"/**
* Compares two numbers based on their mask values.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's mask is less than or equal to num2's mask, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:compare(java.lang.Number,java.lang.Number)",123,127,"/**
* Compares two numbers using their masks.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1's mask is less than num2's, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toCOSObjectList,org.apache.pdfbox.pdmodel.common.COSArrayList:toCOSObjectList(java.util.Collection),351,367,"/**
* Converts a collection to a list of COSBase objects.
* @param list input collection
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,removeAll,org.apache.pdfbox.pdmodel.common.COSArrayList:removeAll(java.util.Collection),372,389,"/**
* Iterates through collection and removes items matching a condition.
* @param c Collection to process
* @return true if removals were made, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,retainAll,org.apache.pdfbox.pdmodel.common.COSArrayList:retainAll(java.util.Collection),394,411,"/**
* Removes items from array based on COSObjectable equality checks.
* @param c collection of items to process
* @return true if any removals were made, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,equals,org.apache.pdfbox.pdmodel.common.COSArrayList:equals(java.lang.Object),432,436,"/**
* Delegates call to actual instance's m1 method.
* @param o arbitrary object reference
* @return true if m1 returns true, false otherwise
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,hashCode,org.apache.pdfbox.pdmodel.common.COSArrayList:hashCode(),441,445,"/**
* Calls the m1() method on the actual object.",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,lastIndexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:lastIndexOf(java.lang.Object),543,548,"/**
* Delegates to actual instance's m1 method. 
* @param o object to pass to m1 method 
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(),553,557,"/**
* Delegates to actual implementation to fetch iterator. 
* @return iterator over elements of type E or null if not found 
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(int),562,566,"/**
* Retrieves a list iterator at the specified index.
* @param index position to retrieve iterator for
* @return ListIterator object or null if invalid index
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,subList,"org.apache.pdfbox.pdmodel.common.COSArrayList:subList(int,int)",571,575,"/**
* Delegates list retrieval to actual implementation.
* @param fromIndex starting index (inclusive)
* @param toIndex ending index (exclusive)
* @return List of elements or empty if out of bounds
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsValue,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsValue(java.lang.Object),87,91,"/**
* Delegates call to actual implementation of m1.
* @param value input object to process
* @return result of processing (true/false)
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,entrySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:entrySet(),164,168,"/**
* Returns a set of key-value entries from actuals.m1(). 
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getNames,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getNames(),223,226,"/**
* Returns a set of predefined function masks.
* @return Set of String values representing function masks
*/","* Returns the set of known font names, including aliases.
     * 
     * @return the set of known font names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,toString,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:toString(),188,192,"/**
* Delegates call to actuals implementation.",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,equals,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:equals(java.lang.Object),196,224,"/**
* Performs deep equality comparison with the given object.
* @param obj Object to compare with
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,hashCode,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:hashCode(),186,194,"/**
* Calculates weighted sum of superclass value and user attribute object value.
* @return weighted integer result
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandler(java.lang.Class,java.lang.Class[],java.lang.Object[])",122,137,"/**
* Creates and initializes a SecurityHandler instance using the provided class, arguments classes, and values.
* @param handlerClass subclass of SecurityHandler to instantiate
* @param argsClasses argument types for constructor invocation
* @param args actual values for constructor parameters
* @return initialized SecurityHandler instance or null on failure
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),215,226,"/**
* Creates COSObjectable from COSBase, applying masking function.
* @param base COSBase object
* @return COSObjectable result or throws IOException on error
*/","* Method to convert the COS value in the number tree to the PD Model object. The default
     * implementation will simply use reflection to create the correct object type. Subclasses can
     * do whatever they want.
     *
     * @param base The COS object to convert.
     * @return The converted PD Model object.
     * @throws IOException If there is an error during creation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeRomanLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeRomanLabel(int),376,398,"/**
* Constructs a string representation of a page index using Roman numerals.
* @param pageIndex the index value to convert
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeLetterLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeLetterLabel(int),404,414,"/**
* Converts a numerical ID to a string of corresponding letters.
* @param num numerical identifier
*/","* a..z, aa..zz, aaa..zzz ... labeling as described in PDF32000-1:2008,
         * Table 159, Page 375.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageRangeCount,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageRangeCount(),138,141,"/**
* Returns a function mask value using m1() from labels.","* Returns the number of page label ranges.
     * 
     * <p>
     * This will be always &gt;= 1, as the required default entry for the page
     * range starting at the first page is added automatically by this
     * implementation (see PDF32000-1:2008, p. 375).
     * </p>
     * 
     * @return the number of page label ranges.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageLabelRange,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageLabelRange(int),153,156,"/**
* Returns page label range for specified start page.
* @param startPage starting page number
*/","* Returns the page label range starting at the given page, or {@code null}
     * if no such range is defined.
     * 
     * @param startPage
     *            the 0-based page index representing the start page of the page
     *            range the item is defined for.
     * @return the page label range or {@code null} if no label range is defined
     *         for the given start page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndices(),242,245,"/**
* Returns a set of unique integer labels.","* Get an ordered set of page indices having a page label range.
     *
     * @return set of page indices.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,toString,org.apache.pdfbox.util.Vector:toString(),65,69,"/**
* Returns a string representation of the point (x, y).
* @return string in format ""(x, y)"" where x and y are coordinates.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,closePath,org.apache.pdfbox.rendering.PageDrawer:closePath(),1005,1009,"/**
* Calls m1() on LinePath instance.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,moveTo,"org.apache.pdfbox.rendering.PageDrawer:moveTo(float,float)",981,985,"/**
* Translates line path by given coordinates.
* @param x horizontal offset
* @param y vertical offset
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,appendRectangle,"org.apache.pdfbox.rendering.PageDrawer:appendRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",589,602,"/**
* Updates the line path with 4 points, creating a closed shape.
* @param p0 top-left point
* @param p1 top-right point
* @param p2 bottom-right point
* @param p3 bottom-left point
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,lineTo,"org.apache.pdfbox.rendering.PageDrawer:lineTo(float,float)",987,991,"/**
* Calls linePath's m1 method with given coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getDashArray,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getDashArray(),101,104,"/**
* Returns an array of mask values from m1().
* @return An array of float values representing the mask.","* Returns the dash array.
     * @return the dash array, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",102,114,"/**
* Initializes a PDColor object with the given components and color space.
* @param components array of color components (e.g. RGB or CMYK values)
* @param colorSpace associated color space (may be null) 
*/","* Creates a PDColor containing the given color component values.
     * @param components array of color component values
     * @param colorSpace color space in which the components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:getComponents(),155,166,"/**
* Computes mask array based on color space and component values.
* @return 1D float array representing the computed mask
*/","* Returns the components of this color value.
     * @return the components of this color value, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoordinateColorPair.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:<init>(java.awt.geom.Point2D,float[])",37,41,"/**
* Initializes a CoordinateColorPair object with given point and color.
* @param p Point2D representing spatial coordinates
* @param c array of 3 floats for RGB color values
*/","* Constructor.
     *
     * @param p point
     * @param c color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Vertex:<init>(java.awt.geom.Point2D,float[])",31,35,"/**
 * Initializes a new vertex with given 2D point and color.
 * @param p the vertex's spatial coordinates
 * @param c the vertex's color (as an array of RGB values)",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,get255Value,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:get255Value(float),281,284,"/**
* Maps float value to an integer mask in range [0, 255].
* @param val input floating-point value
* @return corresponding integer mask value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:toString(),137,144,"/**
* Returns a formatted string representing the function mask.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),112,117,"/**
* Sets mask on execution context's stack to false.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),170,175,"/**
* Pushes boolean true value onto execution context stack.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getBoundary,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getBoundary(),122,138,"/**
* Calculates mask boundaries for a rectangular region.
*@return array of 4 integers representing the left, top, right, and bottom bounds
*/","* get the boundary of a triangle.
     *
     * @return {xmin, xmax, ymin, ymax}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),89,105,"/**
* Shifts an integer in the stack by a specified amount.
* @param context ExecutionContext to operate on
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popNumber,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popNumber(),63,66,"/**
* Retrieves and returns a functional mask from the stack. 
* @return Number representing the functional mask or null if not found
*/","* Pops a number (int or real) from the stack. If it's neither data type, a
     * ClassCastException is thrown.
     * @return the number",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popInt,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popInt(),73,76,"/**
* Returns a function mask value from the stack.
* @return Function mask integer value
*/","* Pops a value of type int from the stack. If the value is not of type int, a
     * ClassCastException is thrown.
     * @return the int value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popReal,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popReal(),83,86,"/**
* Retrieves a masked value from the stack. 
* @return Masked float value
*/","* Pops a number from the stack and returns it as a real value. If the value is not of a
     * numeric type, a ClassCastException is thrown.
     * @return the real value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),70,78,"/**
* Applies mask operation on two objects in the execution context.
* @param context ExecutionContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,108,"/**
 * Executes mask operation on execution context.
 * @param context ExecutionContext object containing relevant data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addBoolean,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addBoolean(boolean),62,65,"/**
* Sets mask instruction based on provided boolean value.
* @param value true to enable, false to disable mask functionality
*/","* Adds a bool value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),67,77,"/**
* Applies bitwise operation on two operands and stores the result.
* @param context ExecutionContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDType3Font:isFontSymbolic(),122,126,"/**
* Returns a boolean flag indicating whether function mask is enabled. 
* Currently always returns False.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,60,"/**
* Performs bitwise AND operation on operands.
* @param context ExecutionContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),124,145,"/**
* Negates a boolean or integer operand.
* @param context execution context
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:<init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators),35,38,"/**
 * Initializes ExecutionContext with an Operator set.
 * @param operatorSet set of available operators for execution context
 */","* Creates a new execution context.
     * @param operatorSet the operator set",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<init>(),35,38,"/**
* Initializes sequence stack with main sequence.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,getCurrentSequence,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:getCurrentSequence(),62,65,"/**
* Retrieves and returns the top instruction sequence from the stack. 
* @return InstructionSequence object representing the current stack top
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),58,63,"/**
* Pushes a mask value onto the execution context's stack.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getListItemPatterns,org.apache.pdfbox.text.PDFTextStripper:getListItemPatterns(),1813,1825,"/**
* Returns a list of compiled patterns from the predefined expressions.
*/","* returns a list of regular expression Patterns representing different common list item formats. For example
     * numbered items of form:
     * <ol>
     * <li>some text</li>
     * <li>more text</li>
     * </ol>
     * or
     * <ul>
     * <li>some text</li>
     * <li>more text</li>
     * </ul>
     * etc., all begin with some character pattern. The pattern ""\\d+\."" (matches ""1."", ""2."", ...) or ""\[\\d+\]""
     * (matches ""[1]"", ""[2]"", ...).
     * <p>
     * This method returns a list of such regular expression Patterns.
     * 
     * @return a list of Pattern objects.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,hasMore,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:hasMore(),138,141,"/**
 * Checks if the current index is within the valid range of input data.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,currentChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:currentChar(),143,146,"/**
* Returns the 1st character of the input string at specified index.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,peek,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:peek(),161,171,"/**
* Returns next character from input stream, or EOT if at end. 
* @return the next character or EOT
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),38,51,"/**
* Truncates the top elements from the execution context's stack.
* @param context ExecutionContext instance
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),85,96,"/**
* Removes elements from the top of the stack up to a specified offset.
* @param context ExecutionContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),115,162,"/**
* Performs mask operation on execution context.
* @param context ExecutionContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<init>(),206,212,"/**
* Initializes expert encoding table by adding entries to internal map.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<init>(),254,260,"/**
* Initializes Mac Roman Encoding with predefined table entries.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<init>(),194,200,"/**
* Initializes standard encodings from predefined table.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<init>(),230,236,"/**
* Initializes symbol encodings from predefined table.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<init>(),264,280,"/**
* Initializes WinAnsiEncoding with mappings from code points to names. 
* Mapped codes greater than 40 map to bullet character for unused codes.
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<init>(),229,235,"/**
* Initializes the Zapf Dingbats encoding by adding all entries from the predefined table. 
* @param none
*/",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(java.lang.Object[]),205,213,"/**
* Concatenates string values from an object array into a comma-separated string.
* @param array object array containing string values
* @return concatenated string or empty string if array is empty
*/","* Creates a String representation of an Object array.
     * 
     * @param array the Object array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(float[]),221,229,"/**
* Converts float array to comma-separated string of hexadecimal values.
* @param array input float array
* @return string representation of the array or null if empty
*/","* Creates a String representation of a float array.
     * 
     * @param array the float array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addText(org.apache.pdfbox.text.TextPosition),167,170,"/**
 * Applies mask to specified text position.
 * @param text TextPosition object to be masked
 */","* Adds a text position to the contents.
     * 
     * @param text the text position",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addMarkedContent,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),177,180,"/**
 * Applies mask functionality to the given marked content.
 * @param markedContent PDMarkedContent object to be processed
 */","* Adds a marked content to the contents.
     * 
     * @param markedContent the marked content",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addXObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),187,190,"/**
* Applies mask operation to PDXObject.
* @param xobject PDXObject instance to process
*/","* Adds an XObject to the contents.
     * 
     * @param xobject the XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:toString(),193,199,"/**
* Generates function mask string from tag, properties, and contents.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:toString(),267,271,"/**
* Returns a formatted string representation of the mask corners.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:toString(),127,136,"/**
* Formats and returns a string representation of the object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:toString(),158,175,"/**
* Constructs and formats user information as a comma-separated string.
* @return formatted user info or empty string if none present
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:toString(),193,218,"/**
* Constructs and returns user profile string.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getPermissionBytesForPublicKey,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getPermissionBytesForPublicKey(),176,186,"/**
* Calculates a mask value using bitwise operations.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrint(boolean),217,223,"/**
* Enables or disables printing based on input and current read-only status.
* @param allowPrinting true to enable printing, false otherwise
*/","* Set if the user can print.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowPrinting A boolean determining if the user can print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModify(boolean),242,248,"/**
* Enables or disables modifications to the data based on the read-only state.
* @param allowModifications true to enable modifications, false otherwise
*/","* Set if the user can modify the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowModifications A boolean determining if the user can modify the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractContent(boolean),269,275,"/**
* Toggles extraction mask based on allowExtraction flag.
* @param allowExtraction true to enable or false to disable extraction
*/","* Set if the user can extract content from the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModifyAnnotations(boolean),302,308,"/**
* Enables or disables annotation modification.
* @param allowAnnotationModification true to enable, false to disable
*/","* Set if the user can add or modify text annotations and fill in interactive forms fields and,
     * if {@link #canModify() canModify()} returns true, create or modify interactive form fields
     * (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns
     * true, it is still possible to fill in interactive forms (including signature fields) even the
     * parameter here is false.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAnnotationModification A boolean determining the new setting.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanFillInForm(boolean),331,337,"/**
* Enables or disables form filling functionality.
* @param allowFillingInForm true to enable, false to disable
*/","* Set if the user can fill in interactive form fields (including signature fields) even if
     * {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want
     * to prevent a user from filling in interactive form fields, you need to call
     * {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well.
     *<p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowFillingInForm A boolean determining if the user can fill in interactive forms.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractForAccessibility(boolean),359,365,"/**
* Enables or disables mask extraction based on accessibility requirements.
* @param allowExtraction true to enable extraction, false otherwise
*/","* Set if the user can extract content from the document for accessibility purposes.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanAssembleDocument(boolean),384,390,"/**
* Enables or disables document assembly based on the input flag.
* @param allowAssembly true to enable, false to disable assembly
*/","* Set if the user can insert/rotate/delete pages.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAssembly A boolean determining if the user can assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrintFaithful(boolean),413,419,"/**
* Updates print faithful mask based on specified flag.
* @param canPrintFaithful true to enable or false to disable faithful printing
*/","* Set if the user can print the document in a faithful format or in a degraded format (if print
     * is enabled). The PDF version must be 1.5 or higher.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param canPrintFaithful A boolean determining if the user can print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrint(),205,208,"/**
* Returns true if mask bit is set.
* @return true if mask bit is set, false otherwise
*/","* This will tell if the user can print.
     *
     * @return true If supplied with the user password they are allowed to print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModify(),230,233,"/**
* Returns true if modification bit is set.","* This will tell if the user can modify contents of the document.
     *
     * @return true If supplied with the user password they are allowed to modify the document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractContent(),256,259,"/**
* Returns true if the FUNC_MASK bit is set. 
* @return true if the bit is set, false otherwise
*/","* This will tell if the user can extract text and images from the PDF document.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModifyAnnotations(),286,289,"/**
* Returns whether bit is set in modify annotations mask.","* This will tell if the user can add or modify text annotations and fill in interactive forms
     * fields and, if {@link #canModify() canModify()} returns true, create or modify interactive
     * form fields (including signature fields). Note that if
     * {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in
     * interactive forms (including signature fields) even if this method here returns false.
     *
     * @return true If supplied with the user password they are allowed to modify annotations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canFillInForm(),316,319,"/**
* Returns true if mask bit is set.
* @return true if mask bit is set, false otherwise
*/","* This will tell if the user can fill in interactive form fields (including signature fields)
     * even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false.
     *
     * @return true If supplied with the user password they are allowed to fill in form fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractForAccessibility(),346,349,"/**
* Returns true if accessibility bit is set.
*/","* This will tell if the user can extract text and images from the PDF document
     * for accessibility purposes.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canAssembleDocument(),372,375,"/**
* Returns true if document bit is assembled.
*/","* This will tell if the user can insert/rotate/delete pages.
     *
     * @return true If supplied with the user password they are allowed to assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrintFaithful(),399,402,"/**
* Returns true if faithful print bit is set.","* This will tell if the user can print the document in a faithful format or in a degraded
     * format (if print is enabled).
     *
     * @return true If supplied with the user password they are allowed to print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getCertificate,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getCertificate(),74,90,"/**
* Retrieves an X509Certificate from the key store.
* @throws KeyStoreException if certificate is missing or invalid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getPrivateKey,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getPrivateKey(),108,135,"/**
* Retrieves a private key from the keystore.
* @throws KeyStoreException if the key cannot be retrieved
*/","* returns The private key that will be used to open the document protection.
     * @return The private key.
     * @throws KeyStoreException If there is an error accessing the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,appendCertInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)",291,313,"/**
* Logs serial number and issuer discrepancies between RID and certificate.
* @param extraInfo StringBuilder for logging information
* @param ktRid KeyTransRecipientId containing serial number and issuer
* @param certificate X509Certificate to compare with RID
* @param materialCert X509CertificateHolder (optional)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,getSecureRandom,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:getSecureRandom(),435,442,"/**
* Returns a secure random instance, potentially overridden by a custom implementation.
*/","* Returns a SecureRandom If customSecureRandom is not defined, instantiate a new SecureRandom
     * 
     * @return SecureRandom",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,setKey,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:setKey(byte[]),47,70,"/**
* Encrypts and mixes key bytes with internal salt.
* @param key input byte array to be mixed
*/","* This will reset the key to be used.
     *
     * @param key The RC4 key used during encryption.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte,java.io.OutputStream)",106,113,"/**
* Encrypts a byte using the given salt array and outputs to the provided OutputStream.
* @param aByte input byte to encrypt
* @param output OutputStream to write encrypted result to
*/","* This will encrypt and write the next byte.
     *
     * @param aByte The byte to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,combineDiacritic,org.apache.pdfbox.text.TextPosition:combineDiacritic(java.lang.String),794,808,"/**
* Removes diacritics and normalizes Unicode characters in a string.
* @param str input string
* @return normalized string without diacritics
*/","* Combine the diacritic, for example, convert non-combining diacritic characters to their
     * combining counterparts.
     *
     * @param str String to normalize
     * @return Normalized string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,prohibited,org.apache.pdfbox.pdmodel.encryption.SaslPrep:prohibited(int),146,158,"/**
* Checks if a Unicode codepoint matches any of the specified functions.
* @param codepoint Unicode codepoint value
* @return true if the codepoint represents a function, false otherwise
*/","* Return true if the given {@code codepoint} is a prohibited character
     * as defined by
     * <a href=""https://tools.ietf.org/html/rfc4013#section-2.3"">RFC 4013,
     * Section 2.3</a>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,createCipher,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:createCipher(byte[],byte[],boolean)",392,401,"/**
* Initializes an AES/CBC/PKCS5Padding cipher for encryption or decryption.
* @param key secret key bytes
* @param iv initialization vector bytes
* @param decrypt true to decrypt, false to encrypt
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,computeVersionNumber,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:computeVersionNumber(),812,827,"/**
* Calculates the function mask based on key length and protection policy.
* @return integer value representing the function mask (1, 2, 4, or 5)","* Computes the version number of the {@link SecurityHandler} based on the encryption key
     * length. See PDF Spec 1.6 p 93 and
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf"">PDF
     * 1.7 Supplement ExtensionLevel: 3</a> and
     * <a href=""http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf"">PDF
     * Spec 2.0</a>.
     *
     * @return The computed version number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,getProvider,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:getProvider(),40,48,"/**
* Returns the configured Bouncy Castle provider.
*/","* Returns the provider to be used for advanced encrypting/decrypting. Default is the BouncyCastleProvider.
     * 
     * @return the security provider",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,logIfStrongEncryptionMissing,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:logIfStrongEncryptionMissing(),1255,1268,"/**
* Checks for JCE unlimited strength jurisdiction policy files and logs an error if missing.
* @throws NoSuchAlgorithmException if AES algorithm is unavailable
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getNumComponentsFromImageMetadata,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getNumComponentsFromImageMetadata(javax.imageio.ImageReader),187,215,"/**
* Extracts frame component count from JPEG image metadata.
* @param reader ImageReader object
* @return Frame component count or 0 if invalid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,richContentsToString,"org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:richContentsToString(org.w3c.dom.Node,boolean)",956,1001,"/**
* Recursively escapes and constructs XML element with children.
* @param node current Node to process
* @param root true if this is the root element
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,getNodeValue,org.apache.pdfbox.util.XMLUtil:getNodeValue(org.w3c.dom.Element),99,113,"/**
* Extracts text content from a given XML node.
* @param node the input XML node
*/","* This will get the text value of an element.
     *
     * @param node The node to get the text value for.
     * @return The text of the node.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String),845,848,"/**
* Writes input text to output stream with masking.
*@param text user input text to be masked
*/","* Write a Java string to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.CIDSystemInfo:toString(),53,57,"/**
* Concatenates and returns formatted function mask string.
* @return unique function identifier as string
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,getPredefinedCMap,org.apache.pdfbox.pdmodel.font.CMapManager:getPredefinedCMap(java.lang.String),46,59,"/**
* Retrieves or creates a CMap instance by name.
* @param cMapName unique identifier for the CMap
* @return existing or newly created CMap object
*/","* Fetches the predefined CMap from disk (or cache).
     *
     * @param cMapName CMap name
     * @return The predefined CMap, never null.
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,parseCMap,org.apache.pdfbox.pdmodel.font.CMapManager:parseCMap(org.apache.pdfbox.io.RandomAccessRead),67,75,"/**
* Parses a RandomAccessRead object into a CMap.
* @param randomAccessRead input data to parse
* @return parsed CMap or null if parsing fails
*/","* Parse the given CMap.
     *
     * @param randomAccessRead the source of the CMap to be read
     * @return the parsed CMap",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,readTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:readTrueTypeFont(java.lang.String,java.io.File)",216,246,"/**
* Loads TrueTypeFont from specified postScriptName and file.
* @param postScriptName unique font identifier
* @param file TT collection or individual font file
* @return TrueTypeFont object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getParser,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",505,526,"/**
* Parses font file based on tag bytes.
* @param randomAccessRead Random access read object
* @param isEmbedded true for embedded font, false otherwise
* @return TTFParser or OTFParser instance
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getParser,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",762,783,"/**
* Parses font data from a RandomAccessRead stream.
* @param randomAccessRead input stream
* @param isEmbedded true if the font is embedded in the stream
* @return FontParser object (TTF or OTF) based on the tag bytes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getOTFFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getOTFFont(java.lang.String,java.io.File)",248,288,"/**
* Loads OpenTypeFont by parsing the specified TrueType font collection or OTF file.
* @param postScriptName name of the font
* @param file path to the font file (TTC or OTF)
* @return loaded OpenTypeFont object, or null on failure
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getType1Font,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getType1Font(java.lang.String,java.io.File)",290,303,"/**
* Loads Type1Font from a file by PS name.
* @param postScriptName unique font identifier
* @param file file to load font from
* @return loaded Type1Font object or null on failure
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,isBadPath,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:isBadPath(java.lang.String),402,405,"/**
* Validates file system path against two conditions.
* @param path file system path to check
* @return true if path is invalid or doesn't match criteria, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeLine,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeLine(java.io.BufferedWriter,java.lang.String)",178,182,"/**
* Writes input text and newline to output stream.
* @param writer BufferedWriter instance
* @param text user-provided string data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,writeFontInfo,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:writeFontInfo(java.io.BufferedWriter,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)",436,488,"/**
* Writes font mask data to the output stream.
* @param writer buffered output stream
* @param fontInfo Font information object containing font attributes
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getPostScriptNames,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getPostScriptNames(java.lang.String),188,199,"/**
* Extracts function masks from a PostScript name.
* @param postScriptName input PostScript name
*/","* Gets alternative names, as seen in some PDFs, e.g. PDFBOX-142.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,calcLine,"org.apache.pdfbox.pdmodel.graphics.shading.Line:calcLine(int,int,int,int)",66,94,"/**
* Computes Bresenham's line algorithm to generate points between two coordinates.
* @param x0 starting X-coordinate
* @param y0 starting Y-coordinate
* @param x1 ending X-coordinate
* @param y1 ending Y-coordinate
* @return set of Point objects representing the line
*/","* Calculate the points of a line with Bresenham's line algorithm
     * <a
     * href=""http://en.wikipedia.org/wiki/Bresenham's_line_algorithm"">Bresenham's
     * line algorithm</a>
     *
     * @param x0 coordinate
     * @param y0 coordinate
     * @param x1 coordinate
     * @param y1 coordinate
     * @return all the points on the rasterized line from (x0, y0) to (x1, y1)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcDeg,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcDeg(java.awt.geom.Point2D[]),101,110,"/**
* Computes a bitmask from an array of 2D points.
* @param p array of Point2D objects
* @return int bitmask value
*/","* Calculate the degree value of a triangle.
     *
     * @param p 3 vertices coordinates
     * @return number of unique points in the 3 vertices of a triangle, 3, 2 or
     * 1",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toDebugString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:toDebugString(),827,841,"/**
* Builds a formatted string of font masks.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,computeHash,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:computeHash(java.io.InputStream),851,867,"/**
* Computes a function mask from the input stream.
* @param is InputStream to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,addFont,"org.apache.pdfbox.pdmodel.font.FontCache:addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",41,44,"/**
* Stores a FontInfo and its corresponding FontBoxFont in the cache.","* Adds the given FontBox font to the cache.
     * 
     * @param info the FontInfo to be used as key
     * @param font the font to be cached",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,getFont,org.apache.pdfbox.pdmodel.font.FontCache:getFont(org.apache.pdfbox.pdmodel.font.FontInfo),53,57,"/**
* Retrieves cached FontBoxFont instance by ID from the cache.
* @param info unique FontInfo identifier
* @return cached FontBoxFont object or null if not found in cache
*/","* Returns the FontBox font associated with the given FontInfo.
     * 
     * @param info the FontInfo of the cached font
     * 
     * @return the cached font if available, otherwise null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,toString,org.apache.pdfbox.pdmodel.font.FontInfo:toString(),140,147,"/**
* Returns formatted string representation of function mask.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,toString,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:toString(),159,164,"/**
* Returns a string representation of the TilingPaint object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch),725,729,"/**
* Calculates mask value from font matching score.
* @param match FontMatch object with score comparison
* @return integer mask value based on score difference
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cosine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cosine(double,double)",203,210,"/**
* Calculates the mask value based on input distance and hyperbolic magnitude.
* @param dx input distance
* @param hypot hyperbolic magnitude
* @return mask value or 0 if hypot is zero
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,sine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:sine(double,double)",212,219,"/**
* Calculates the mask value based on input values.
* @param dy difference in y-coordinates
* @param hypot distance (hypotenuse)
* @return normalized double value or 0 if denominator is zero.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),153,156,"/**
* Sets aliasing mask for font name.
* @param baseName base font name
*/","* Adds a standard font name to the map of known aliases, to simplify the logic of finding
     * font metrics by name. We want a single lookup in the map to find the font both by a base name or
     * an alias.
     *
     * @see #getAFM
     * @param baseName the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitute,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitute(java.lang.String,java.lang.String)",207,211,"/**
* Replaces occurrences of a substring with a specified string.
* @param match the substring to find
* @param replace the replacement string
*/","* Adds a top-priority substitute for the given font.
     *
     * @param match PostScript name of the font to match
     * @param replace PostScript name of the font to use as a replacement",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitutes,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitutes(java.lang.String,java.util.List)",213,216,"/**
 * Applies replacement rules to a string and updates internal state.
 * @param match input string to process
 * @param replacements list of replacement values
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",469,485,"/**
* Retrieves FontInfo by name and format.
* @param format FontFormat to match
* @param postScriptName Postscript font name
* @return FontInfo object or null if not found/compatible
*/",* Finds the named font with the given format.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getSubstitutes,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getSubstitutes(java.lang.String),221,226,"/**
* Processes PostScript name and returns list of masks.
* @param postScriptName input PostScript string
*/",* Returns the substitutes for a given font.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getName,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getName(int),166,169,"/**
* Converts font code to name.
* @param code font code value
* @return font name or ""notdef"" if unknown
*/","* This will take a character code and get the name from the code.
     * 
     * @param code character code
     * @return PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,printMatches,org.apache.pdfbox.pdmodel.font.FontMapperImpl:printMatches(java.util.PriorityQueue),735,750,"/**
* Finds the optimal font match by iterating through the queue.
* @param queue priority queue of FontMatch objects
* @return the best matching FontMatch object
*/",* For debugging. Prints all matches and returns the best match.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,findFontOrSubstitute,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:findFontOrSubstitute(),157,183,"/**
* Retrieves a TrueType font based on CID key mapping.
* @return TrueTypeFont object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getType2CharString,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getType2CharString(int),286,300,"/**
* Retrieves character string for given CID.
* @param cid unique character identifier
* @return Type2CharString object or null if not found
*/","* Returns the Type 2 charstring for the given CID, or null if the substituted font does not contain Type 2
     * charstrings.
     *
     * @param cid CID
     * @return the Type 2 charstring for the given CID or null
     * 
     * @throws IOException if the charstring could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToCID(int),371,375,"/**
* Returns a mask value by invoking m2() on an instance returned by m1().
* @param code input code to be processed
*/","* Returns the CID for the given character code. If not found then CID 0 is returned.
     *
     * @param code character code
     * @return CID",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getAverageFontWidth(),461,469,"/**
* Returns the average width.
* @return Average width value or recalculated value if not previously computed.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,subset,org.apache.pdfbox.pdmodel.font.PDType0Font:subset(),297,310,"/**
* Validates and executes font embedding process.
* @throws IOException on I/O errors
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToCID(int),224,240,"/**
* Computes FUNC_MASK value based on the provided code.
* @param code input code to process
* @return int result or a default value if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getHeight(int),335,341,"/**
* Calculates and returns the FUNC_MASK value based on the provided code.
* @param code unique identifier for calculation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:encode(int),356,407,"/**
* Retrieves the Unicode code point mapping for a given character.
* @param unicode unique character identifier
* @return byte[] representing the glyph or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toRGB(),192,202,"/**
* Converts color space components to RGB integer value.
*/","* Returns the packed RGB value for this color, if any.
     * @return RGB
     * @throws IOException if the color conversion fails
     * @throws UnsupportedOperationException if this color value is a pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGB(float[]),170,186,"/**
* Converts a single color value to RGB representation.
* @param value single color value
* @return array of three floats representing the RGB colors or null if invalid.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,backdropRemoval,"org.apache.pdfbox.rendering.GroupGraphics:backdropRemoval(int,int,int,float)",723,729,"/**
* Calculates a color value by interpolating between group and backdrop RGB values.
* @param groupRGB RGB value of the group
* @param backdropRGB RGB value of the backdrop
* @param shift bit shift for extracting color components
* @param alphaFactor interpolation factor (0.0-1.0)
* @return interpolated color component value (0-255)","* Computes the backdrop removal equation.
     * <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,multiplyFloat,"org.apache.pdfbox.text.PDFTextStripper:multiplyFloat(float,float)",1689,1694,"/**
* Calculates the masked product of two floating-point values.
* @param value1 first factor
* @param value2 second factor
* @return the product with a precision mask applied
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,equals,org.apache.pdfbox.pdmodel.font.PDFont:equals(java.lang.Object),654,658,"/**
* Checks if this font mask is equal to another object.
* @param other object to compare with this font mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,hashCode,org.apache.pdfbox.pdmodel.font.PDFont:hashCode(),660,664,"/**
* Calls m2() on the result of calling m1(), returning the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getData,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:getData(),717,720,"/**
* Returns a byte array containing the specified mask.
*/","* Get the data of this chunk as a byte array
         *
         * @return a byte-array with only the data of the chunk",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,toString,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:toString(),95,108,"/**
* Returns a string mask representing font style features.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,getGlyphList,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:getGlyphList(),166,169,"/**
* Returns a glyph list with mask functionality enabled.
* @return GlyphList instance with mask applied
*/",* Returns the font's glyph list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,assignGlyphList,org.apache.pdfbox.pdmodel.font.PDSimpleFont:assignGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),466,477,"/**
* Initializes glyph list based on Zapf Dingbats font.
* @param fontName FontName enum value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphList,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),309,313,"/**
* Returns the glyph list for Zapf Dingbats or standard fonts. 
* @param baseName font name to determine glyph list type
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(java.lang.String),502,538,"/**
* Fetches and renders a glyph by name, returning its path.
* @param name unique glyph identifier
* @return GeneralPath object or empty path if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(java.lang.String),581,586,"/**
* Checks if a font exists by mask.
* @param name font name to search for
* @return true if font found, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,extractCmapTable,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:extractCmapTable(),715,760,"/**
* Initializes cmap data structures by parsing the TTF file.
* @throws IOException if I/O error occurs
*/","* extract all useful ""cmap"" subtables.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,isVertical,org.apache.pdfbox.pdmodel.font.PDType0Font:isVertical(),461,465,"/**
* Checks if mask is valid.
* @return true if mask is valid, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType0Font:readCode(java.io.InputStream),626,634,"/**
* Delegates InputStream processing to CMap instance.
* @param in input stream to process
* @return result of processing, or throws IOException if cmap is null
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(java.lang.String),242,246,"/**
* Calls generic font's text processing method.
* @param name input string to process
* @return true if successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getAverageFontWidth(),438,446,"/**
* Returns average width value.
* If not initialized, calculates and stores it via m1().",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1Font:getAverageFontWidth(),473,484,"/**
* Calculates and returns value of M3 from child object or uses parent's calculation if not available. 
* @return float result of calculation or NaN if unavailable
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,loadMetrics,org.apache.pdfbox.pdmodel.font.Standard14Fonts:loadMetrics(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),129,143,"/**
* Parses and loads font metrics for given font name.
* @param fontName unique font identifier
*/","* Loads the metrics for the base font specified by name. Metric file must exist in the pdfbox jar under
     * /org/apache/pdfbox/resources/afm/
     *
     * @param fontName one of the standard 14 font names for which to load the metrics.
     * @throws IOException if no metrics exist for that font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowDestinationRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowDestinationRange(java.lang.String,java.lang.String)",214,227,"/**
* Checks if two strings have a matching mask value.
* @param prev first string to compare
* @param next second string to compare
* @return true if masks match, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isEmbeddingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isEmbeddingPermitted(org.apache.fontbox.ttf.TrueTypeFont),140,160,"/**
* Checks if a TrueType font is functional.
* @param ttf TrueTypeFont object to check
* @return true if the font is functional, false otherwise
*/",* Returns true if the fsType in the OS/2 table permits embedding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isSubsettingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isSubsettingPermitted(org.apache.fontbox.ttf.TrueTypeFont),165,177,"/**
* Checks if a TrueType font supports subsetting.
* @param ttf TrueTypeFont object
* @return true if supported, false otherwise
*/",* Returns true if the fsType in the OS/2 table permits subsetting.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,getTag,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:getTag(java.util.Map),371,394,"/**
* Generates a FUNC_MASK string from the given gidToCid map.
* @param gidToCid mapping of group IDs to corresponding character codes
*/",* Returns an uppercase 6-character unique tag for the given subset.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,getUniNameOfCodePoint,org.apache.pdfbox.pdmodel.font.UniUtil:getUniNameOfCodePoint(int),32,46,"/**
* Converts Unicode code point to FUNC_MASK string format.
* @param codePoint Unicode code point value
* @return FUNC_MASK string representation or null if invalid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,getEncodingName,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:getEncodingName(),203,212,"/**
* Returns the base encoding result with added differences.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,loadList,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:loadList(java.io.InputStream),121,173,"/**
* Processes glyph list from input stream and updates encoding mappings.
* @param input InputStream containing glyph list
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,toUnicode,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:toUnicode(java.lang.String),213,264,"/**
* Converts user-provided string to its corresponding Unicode representation.
* @param name input string
* @return Unicode character or null if not found
*/","* Returns the Unicode character sequence for the given glyph name, or null if there isn't any.
     *
     * @param name PostScript glyph name
     * @return Unicode character(s), or null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(org.apache.fontbox.afm.FontMetrics),57,63,"/**
* Encodes FontMetrics into Type1 encoding format. 
* @param fontMetrics font metrics to encode
*/","* Creates an encoding from the given AFM font metrics.
     *
     * @param fontMetrics AFM font metrics.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,toString,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:toString(),106,110,"/**
* Returns a string representation of PDLineDashPattern object.
* @return A JSON-like string containing pattern array and phase values.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toString(),228,232,"/**
* Returns a string representation of the PDColor object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:toRGBImage(java.awt.image.WritableRaster),80,103,"/**
* Creates a BufferedImage from a WritableRaster with a uniform grayscale value.
* @param raster input raster to process
* @return resulting BufferedImage (or null if an error occurs)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:toRGBImage(java.awt.image.WritableRaster),76,88,"/**
* Creates a BufferedImage from the given WritableRaster.
* @param raster the raster to convert
* @return the resulting BufferedImage or null if failed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGBImage(java.awt.image.WritableRaster),191,215,"/**
* Converts grayscale raster to RGB image using FUNC_MASK.
* @param raster input grayscale WritableRaster
* @return RGB BufferedImage or null if error occurs
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,convXYZtoRGB,"org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:convXYZtoRGB(float,float,float)",85,106,"/**
* Converts RGB values to CIE XYZ color space.
* @param x red component in range [0, 1]
* @param y green component in range [0, 1]
* @param z blue component in range [0, 1]
* @return CIE XYZ color components as an array
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,compose,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)",110,269,"/**
* Performs a specific blend mode operation on the given source and destination Rasters.
* @param src Source Raster
* @param dstIn Destination In Raster
* @param dstOut Destination Out WritableRaster
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,toString,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:toString(),390,394,"/**
* Returns a string representation of the blend mode in the format 'BlendMode{name=<name>, isSeparable=<isSeparable>}'.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage2,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage2(java.awt.image.WritableRaster),200,232,"/**
* Creates a colorized BufferedImage from the provided WritableRaster.
* @param raster input image data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:toRGBImage(java.awt.image.WritableRaster),35,73,"/**
* Converts grayscale image to RGB by applying FUNC_MASK formula.
* @param raster WritableRaster object representing the input image
* @return BufferedImage with converted RGB values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,applyColorKeyMask,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:applyColorKeyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage)",706,738,"/**
* Applies a mask to an image, blending it with the source image's alpha channel.
* @param image The image to be masked
* @param mask The mask image
* @return A new BufferedImage representing the masked image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",134,149,"/**
* Initializes a PDColor object with specified components, pattern name, and color space.
* @param components array of color components
* @param patternName COSName for the pattern
* @param colorSpace PDColorSpace to associate with this color
*/","* Creates a PDColor containing the given color component values and pattern name.
     * @param components array of color component values
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern/components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRawImage,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRawImage(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",333,338,"/**
* Creates a BufferedImage with the specified WritableRaster and ColorSpace.
* @param raster WritableRaster to associate with the image
* @param awtColorSpace ColorSpace for the image
*/","* Returns the given raster as BufferedImage with the given awtColorSpace using a
     * ComponentColorModel.
     * @param raster the source raster
     * @param awtColorSpace the AWT colorspace
     * @return a BufferedImage in this colorspace",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",347,377,"/**
* Creates a masked BufferedImage from a WritableRaster and ColorSpace.
* @param raster Writable image data
* @param colorSpace Color model for the output image
* @return Masked BufferedImage or null if conversion fails
*/","* Returns the (A)RGB equivalent of the given raster, using the given AWT color space
     * to perform the conversion.
     * @param raster the source raster
     * @param colorSpace the AWT
     * @return an (A)RGB buffered image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getICCProfile(),97,114,"/**
* Retrieves the ICC profile for color conversion.
* @return ICC_Profile object or null on failure
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",162,214,"/**
* Converts CMYK to RGB using pure Java implementation if enabled.
* @param raster WritableRaster object
* @param colorSpace ColorSpace object
* @return BufferedImage object or null if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,equals,org.apache.pdfbox.util.Matrix:equals(java.lang.Object),596,612,"/**
* Compares two Matrix objects for equality.
* @param obj the other Matrix object to compare with
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setBackground,org.apache.pdfbox.rendering.GroupGraphics:setBackground(java.awt.Color),505,510,"/**
* Calls drawing methods on both Graphics2D objects with provided Color.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clearRect,"org.apache.pdfbox.rendering.GroupGraphics:clearRect(int,int,int,int)",90,95,"/**
* Invokes drawing operations on two graphics contexts.
* @param x left coordinate
* @param y top coordinate
* @param width image width
* @param height image height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),937,943,"/**
* Clears and updates mask for the given color space.
* @param cs PDColorSpace object to update with
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,fallbackToAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:fallbackToAlternateColorSpace(java.lang.Exception),226,240,"/**
* Initializes color spaces and settings based on the given exception.
* @param e Exception object describing any errors encountered
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,is_sRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:is_sRGB(java.awt.color.ICC_Profile),246,252,"/**
* Checks if profile is sRGB by parsing model string.
* @param profile ICC_Profile object to check
* @return true if sRGB, false otherwise
*/","* Returns true if the given profile represents sRGB.
     * (unreliable on the data of ColorSpace.CS_sRGB in openjdk)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,ensureDisplayProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:ensureDisplayProfile(java.awt.color.ICC_Profile),256,270,"/**
* Converts ICC_Profile to display class if necessary.
* @param profile ICC_Profile object
* @return converted ICC_Profile or original if no conversion needed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,clampColors,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:clampColors(java.awt.color.ICC_ColorSpace,float[])",299,309,"/**
* Clips input values to the valid range for a given color space.
* @param cs ICC_ColorSpace object
* @param value float array of values to clip
* @return clipped float array or null if invalid input
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getNumberOfComponents(),334,355,"/**
* Calculates the component mask based on available data.
* @return number of color components
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getColorSpaceType,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getColorSpaceType(),469,489,"/**
* Determines the color space type based on ICC profile or alternate color space settings.
*/","* Returns the type of the color space in the ICC profile. If the ICC profile is invalid, the
     * type of the alternate colorspace is returned, which will be one of
     * {@link ColorSpace#TYPE_GRAY TYPE_GRAY}, {@link ColorSpace#TYPE_RGB TYPE_RGB},
     * {@link ColorSpace#TYPE_CMYK TYPE_CMYK}, or -1 if that one is invalid.
     *
     * @return an ICC color space type. See {@link ColorSpace#getType()} and the static values of
     * {@link ColorSpace} for more details.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRawImage(java.awt.image.WritableRaster),217,238,"/**
* Creates a BufferedImage from the given WritableRaster.
* @param raster input raster to transform
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getNumberOfComponents(),51,55,"/**
* Returns color space mask value.
* @return color space mask integer value",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGB(float[]),121,137,"/**
* Computes color values using the FUNC_MASK formula.
* @param value array of input color values
* @return array of calculated color values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,isGrayImage,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:isGrayImage(java.awt.image.BufferedImage),118,133,"/**
* Checks if the provided image is a binary mask.
* @param image BufferedImage to check
* @return true if image represents a binary mask, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",229,233,"/**
* Creates a PDImageXObject from a given BufferedImage and PDDocument.
* @param document PDDocument instance
* @param image BufferedImage to convert
*/","* Creates a new JPEG PDImageXObject from a BufferedImage.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getAlphaImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getAlphaImage(java.awt.image.BufferedImage),281,302,"/**
* Creates a grayscale mask from the given image.
* @param image input image
* @return grayscale mask image or null if invalid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorImage(java.awt.image.BufferedImage),416,438,"/**
* Converts input image to RGB color space.
* @param image input BufferedImage
* @return converted BufferedImage or original if already in RGB
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getJPEGImageWriter,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getJPEGImageWriter(),331,349,"/**
* Finds and returns an ImageWriter instance supporting the JPEG format.
* @throws IOException if no suitable ImageWriter is found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorSpaceFromAWT,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorSpaceFromAWT(java.awt.image.BufferedImage),387,413,"/**
* Determines the PDF color space for a BufferedImage based on its type.
* @param awtImage input image
* @return PDColorSpace instance or throws exception if unsupported
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",289,335,"/**
* Initializes PredictorEncoder with the provided PDDocument and BufferedImage.
* @param document PDDocument instance
* @param image BufferedImage to be encoded
*/",* Initialize the encoder and set all final fields,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterUp,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterUp(int,int)",669,673,"/**
* Generates a mask value based on input bits and index.
* @param x input value
* @param b bit position
* @return masked byte value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHint,"org.apache.pdfbox.rendering.GroupGraphics:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)",526,531,"/**
* Invokes rendering hints on graphics contexts.
* @param hintKey key for rendering hints
* @param hintValue value for rendering hints
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,scaleImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:scaleImage(java.awt.image.BufferedImage,int,int,int,boolean)",762,796,"/**
* Resizes and optionally interpolates the given BufferedImage.
* @param image the original image
* @param width the desired width
* @param height the desired height
* @param type the desired image type
* @param interpolate whether to apply interpolation (true) or not (false)
* @return the resized BufferedImage or null on failure",* High-quality image scaling.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)",176,182,"/**
* Performs image processing using Graphics2D APIs.
* @param img input image
* @param dx1,dy1,dx2,dy2 source rectangle coordinates
* @param sx1,sy1,sx2,sy2 destination rectangle coordinates
* @param observer observer to notify about progress
* @return true if processing is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImage.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.image.PDImage:getCOSObject(),250,251,"/**
* Returns COS dictionary with function mask values.","* Convert this image to a COS object.
     *
     * @return The cos object that matches this image object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,readPNGFloat,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:readPNGFloat(byte[],int)",752,756,"/**
* Calculates and returns a value from the given byte array at specified offset,
* using the m1 function to process it. The result is then scaled by dividing by 100,000.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,parsePNGChunks,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:parsePNGChunks(byte[]),765,891,"/**
* Parses PNG image data and extracts relevant information.
* @param imageData the PNG image data bytes
* @return a PNGConverterState object containing extracted information or null if invalid
*/","* Parse the PNG structure into the PNGConverterState. If we can't handle
     * something, this method will return null.
     *
     * @param imageData the byte array with the PNG data
     * @return null or the converter state with all relevant chunks",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getIDATInputStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),480,489,"/**
* Combines IDAT chunks into a single input stream.
* @param state PNGConverterState object containing IDAT chunks
* @return MultipleInputStream object with concatenated IDAT data
*/","* Build an input stream for the IDAT data. May need to concat multiple IDAT
     * chunks.
     *
     * @param state the converter state.
     * @return a input stream with the IDAT data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,crc,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:crc(byte[],int,int)",933,936,"/**
* Calculates bitwise NOT of a given buffer segment.
* @param buf input byte array
* @param offset starting index within the array
* @param len length of the segment to process
* @return bitwise NOT result as an integer
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaint,org.apache.pdfbox.rendering.GroupGraphics:setPaint(java.awt.Paint),519,524,"/**
* Calls G2D methods with provided Paint object.
* @param paint graphics Paint object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRect(int,int,int,int)",254,259,"/**
* Calls rendering methods on both group and alpha Graphics2D contexts.
* @param x left coordinate
* @param y top coordinate
* @param width rendering area width
* @param height rendering area height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:dispose(),158,163,"/**
* Calls superclass method and resets axial shading type.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:dispose(),163,168,"/**
* Calls superclass's m1 and resets radialShadingType to null.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:dispose(),84,89,"/**
* Calls superclass's m1 and resets type1ShadingType to null.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:getRaster(int,int,int,int)",165,251,"/**
* Generates a raster image for a mask function.
* @param x left boundary
* @param y top boundary
* @param w width
* @param h height
* @return Raster object representing the mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:getRaster(int,int,int,int)",91,157,"/**
* Generates a raster image with function mask values.
* @param x origin X coordinate
* @param y origin Y coordinate
* @param w width of the image
* @param h height of the image
* @return WritableRaster object containing the generated image data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getFlag1Edge,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getFlag1Edge(),134,138,"/**
* Returns an array of 2D points representing mask functionality. 
* @return Array of Point2D objects.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,getPoints,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:getPoints(int),58,82,"/**
* Generates a 2D point array using Bezier curve formula with l+1 points.
* @param l number of levels for the Bezier curve
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:calcPixelTableArray(java.awt.Rectangle),62,73,"/**
* Computes and returns a 2D mask array based on the input rectangle bounds.
* @param deviceBounds Rectangle representing the device boundaries
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:calcPixelTableArray(java.awt.Rectangle),60,74,"/**
* Computes and returns a 2D integer array representing the FUNC_MASK.
* @param deviceBounds Rectangle object defining the device bounds
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates bounding box for a set of shaded triangles.
* @param xform AffineTransform object
* @param matrix Matrix object
* @return Bounding box as Rectangle2D or empty if none found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.Patch:<init>(float[][]),46,49,"/**
* Copies and assigns a 2D float array as patch corner color.
* @param color 2D array of floats representing color values
*/","* Constructor of Patch.
     *
     * @param color 4 corner's colors",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",228,231,"/**
* Checks if two points are almost identical.
* @param p0 first point
* @param p1 second point
* @return true if points are close, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",203,206,"/**
* Checks if two points are nearly coincident.
* @param p0 first point
* @param p1 second point
* @return true if points are close, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getArea,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getArea(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",220,224,"/**
* Calculates the area of a triangle formed by three points.
* @param a first point
* @param b second point
* @param c third point
* @return area of the triangle or NaN if collinear points
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,removeZeroLengthSegments,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:removeZeroLengthSegments(java.awt.geom.Point2D$Double[]),954,995,"/**
* Simplifies a 2D polygon by removing collinear points.
* @param polygon array of Point2D objects representing the polygon
* @return simplified array of Point2D objects or original if no simplification occurred
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,clonedPoint2DArray,org.apache.pdfbox.pdmodel.graphics.shading.Patch:clonedPoint2DArray(java.awt.geom.Point2D[]),233,241,"/**
* Creates a deep copy of the input array, replacing each point with its magnitude.
* @param input array of Point2D objects to clone
* @return new array of magnitude values as Point2D objects
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,calcLevel,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:calcLevel(),67,148,"/**
* Calculates mask values based on control points and various conditions.
* @return int[] array containing two mask values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:getRaster(int,int,int,int)",174,201,"/**
* Generates a raster image mask from pixel values.
* @param x left edge of the mask
* @param y top edge of the mask
* @param w width of the mask
* @param h height of the mask
* @return Raster object containing the generated mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:clone(),221,233,"/**
* Calls superclass's m1() and casts result to PDTextState.
* @return PDTextState object or throws RuntimeException on error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,"org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Path2D,boolean)",592,605,"/**
* Resets and updates the clipping paths.
* @param path Path2D object to add or clone
* @param clonePath whether to clone the input path
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getCurrentClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getCurrentClippingPath(),622,653,"/**
* Calculates the area of clipped content.
* @return Area object representing the clipped region
*/","* This will get the current clipping path. Do not modify this Area object!
     *
     * @return The current clipping path.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<init>(java.lang.String),116,119,"/**
 * Initializes a new instance of TextAttribute with the specified name.
 * @param name unique attribute identifier
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.util.List),82,86,"/**
* Initializes PlainText object with a list of paragraph values.
* @param listValue collection of paragraph text strings
*/","* Construct the text block from a list of values.
     * 
     * Constructs the text block from a list of values treating each
     * entry as an individual {@link Paragraph}.
     * 
     * @param listValue the text block string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(int),35,45,"/**
* Returns TextAlign enum value based on given alignment mask.
* @param alignment alignment mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,hashCode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:hashCode(),221,225,"/**
* Returns the function mask value from the dictionary.
* @return Function mask integer value
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getMatrix(),175,178,"/**
* Returns an AffineTransform representing a translation by the negative of the minimum bounding box coordinates.","* Returns the <code>Matrix</code> entry for the appearance stream form XObject.
     *
     * @return Matrix for appearance stream form XObject.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsPolygon,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsPolygon(double,double,double,double,double,double[])",398,423,"/**
* Computes functional mask parameters based on input values.
* @param advInterm intermediate advection value
* @param advCorner corner advection value
* @param k curvature factor
* @param r radius value
* @param length total length
* @param array output array to store alpha and dx values
* @return number of iterations (n)
*/","* Computes parameters for a cloudy polygon: n, alpha, and dx.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsEllipse(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,double)",940,952,"/**
* Calculates the FUNC_MASK value based on input points, radius, and curl advance.
* @param pt current point
* @param ptNext next point
* @param r radius
* @param curlAdv curl advance
* @return FUNC_MASK value or 0.0 if invalid",* Computes the alpha parameter for an ellipse curl.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getPositivePolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getPositivePolygon(java.awt.geom.Point2D$Double[]),556,562,"/**
* Applies masking function on input points based on convexity test result.
* @param points array of Point2D objects to process
*/","* Makes a polygon whose direction is the same as the positive angle
     * direction in the coordinate system.
     * The polygon must not intersect itself.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,flattenEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:flattenEllipse(double,double,double,double)",705,738,"/**
* Creates an array of Point2D.Double objects representing the boundary of an ellipse.
* @param left left x-coordinate
* @param bottom bottom y-coordinate
* @param right right x-coordinate
* @param top top y-coordinate
* @return array of points defining the ellipse's boundary
*/",* Flattens an ellipse into a polygon.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,updateBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:updateBBox(double,double)",1021,1027,"/**
* Updates bounding box coordinates based on input values.
* @param x new minimum/maximum X value
* @param y new minimum/maximum Y value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createShortStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createShortStyles(),434,443,"/**
* Returns a set of annotation line masks. 
* @return Set of annotation line types (open arrow, closed arrow, square, circle, diamond)",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createInteriorColorStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createInteriorColorStyles(),445,454,"/**
* Returns a set of annotation line mask values.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createAngledStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createAngledStyles(),456,466,"/**
* Returns a set of annotation line masks.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isRectangular,org.apache.pdfbox.rendering.PageDrawer:isRectangular(java.awt.geom.GeneralPath),888,940,"/**
* Checks if a GeneralPath represents a mask by iterating through its segments.
* @param path the GeneralPath to check
* @return true if the path is a valid mask, false otherwise
*/",* Returns true if the given path is rectangular.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(java.io.InputStream,int[])",38,42,"/**
* Initializes COS filter input stream with specified byte range.
* @param in InputStream to be filtered
* @param byteRange array of start and end offsets for filtering",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,nextRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:nextRange(),99,120,"/**
* Advances to next valid data range and updates internal position.
* @return true if successful, false if no more ranges
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getTemplateHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getTemplateHeight(),393,396,"/**
* Calculates function mask value using m1(). 
* @return The calculated float value.","* 
     * @return template height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAffineTransform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAffineTransform(java.awt.geom.AffineTransform),165,170,"/**
* Applies an affine transformation matrix to the PDF structure.
* @param affineTransform the AffineTransform object to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createVisualSignature(org.apache.pdfbox.pdmodel.PDDocument),382,387,"/**
* Creates a visible mask for the PDDocument based on its structure.
* @param template PDDocument instance to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,coordinates,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:coordinates(float,float)",300,305,"/**
* Initializes visible sign designer with mask values at specified points.
* @param x horizontal position
* @param y vertical position
*/","*
     * @param x - x coordinate
     * @param y - y coordinate
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,transform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:transform(java.awt.geom.AffineTransform),477,481,"/**
* Initializes designer with transform mask.
* @param affineTransform affine transformation to apply
*/","* 
     * @param affineTransform the affine transformation
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
* Constructs a new PDPageFitDestination instance from a COS array.
* @param arr COS array containing destination parameters
*/","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
* Constructs a PDF page fit height destination from an array.","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
* Initializes a new PDPageFitRectangleDestination instance from a COS array.
* @param arr COS array containing destination parameters
*/","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(org.apache.pdfbox.cos.COSArray),55,58,"/**
 * Constructs a destination with fit-to-width page layout from given COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
* Constructs a PDF page destination from an array.
* @param arr COSArray containing destination coordinates
*/","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,requireSingleNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),105,111,"/**
* Validates that a PDOutlineItem has no children.
*/","* @param node
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,children,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:children(),310,313,"/**
* Creates an iterator over masked PDF outline items.
* @return iterable collection of PDOutlineItem objects
*/",* @return An {@link Iterable} view of the items children,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByValue,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByValue(java.util.List),101,104,"/**
 * Sorts the key-value pairs in ascending order using the BY_VALUE_COMPARATOR. 
 * @param pairs List of KeyValue objects to be sorted
 */","* Sort two related lists simultaneously by the elements in the key parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByKey,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByKey(java.util.List),111,114,"/**
* Sorts list of key-value pairs by key using BY_KEY_COMPARATOR comparator.
* @param pairs list of KeyValue objects to be sorted
*/","* Sort two related lists simultaneously by the elements in the value parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getValueAsString(),85,89,"/**
* Returns the function mask value.
* @return Function mask string result of m1() function call.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getValueAsString(),251,255,"/**
* Returns a string representing function mask.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getTransform,org.apache.pdfbox.rendering.GroupGraphics:getTransform(),472,476,"/**
* Delegates call to groupG2D's m1() method.
* @return AffineTransform object as returned by groupG2D.m1()
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(double,double)",568,573,"/**
* Calls drawing methods on group and alpha G2D objects.
* @param tx x-coordinate of point to draw at
* @param ty y-coordinate of point to draw at
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,scale,"org.apache.pdfbox.rendering.GroupGraphics:scale(double,double)",498,503,"/**
* Updates graphics with transformed coordinates.
* @param sx scaled x coordinate
* @param sy scaled y coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setTransform,org.apache.pdfbox.rendering.GroupGraphics:setTransform(java.awt.geom.AffineTransform),547,552,"/**
* Applies affine transformation to graphics components.
* @param tx AffineTransform object representing transformation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,"org.apache.pdfbox.rendering.GroupGraphics:setClip(int,int,int,int)",298,303,"/**
* Calls G2D methods for the specified graphics area.
* @param x top-left X coordinate
* @param y top-left Y coordinate
* @param width graphics area width
* @param height graphics area height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setColor,org.apache.pdfbox.rendering.GroupGraphics:setColor(java.awt.Color),312,317,"/**
* Calls methods on Graphics2D objects with provided color.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setStroke,org.apache.pdfbox.rendering.GroupGraphics:setStroke(java.awt.Stroke),540,545,"/**
* Delegates stroke processing to subordinate graphics engines.
* @param s Stroke object to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D)",72,79,"/**
* Initializes GroupGraphics with provided image and graphics context.
* @param groupImage the source image to process
* @param groupGraphics graphics context for drawing operations
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Graphics2D)",81,88,"/**
* Initializes GroupGraphics object with image and graphics contexts.
* @param groupImage the main image of the group
* @param groupGraphics the graphics context for the main image
* @param groupAlphaImage the alpha channel image of the group
* @param alphaGraphics the graphics context for the alpha channel image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clipRect,"org.apache.pdfbox.rendering.GroupGraphics:clipRect(int,int,int,int)",97,102,"/**
* Invokes drawing operations on both graphics contexts.
* @param x x-coordinate
* @param y y-coordinate
* @param width canvas width
* @param height canvas height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,copyArea,"org.apache.pdfbox.rendering.GroupGraphics:copyArea(int,int,int,int,int,int)",104,109,"/**
* Calls drawing methods for both group and alpha graphics.
* @param x x-coordinate
* @param y y-coordinate
* @param width graphic width
* @param height graphic height
* @param dx x-axis offset
* @param dy y-axis offset
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawArc,"org.apache.pdfbox.rendering.GroupGraphics:drawArc(int,int,int,int,int,int)",132,137,"/**
* Calls drawing methods on multiple graphics contexts. 
* @param x top-left corner X-coordinate
* @param y top-left corner Y-coordinate
* @param width rectangle width
* @param height rectangle height
* @param startAngle starting angle for arcs
* @param arcAngle arc length in degrees
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)",139,144,"/**
* Combines the rendering of two graphics components.
* @param img the image to render
* @param x the x-coordinate
* @param y the y-coordinate
* @param bgcolor the background color
* @param observer the observer for image updates
* @return true if successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",153,159,"/**
* Performs image processing on a specified region of an image.
* @param img the input image
* @param x top-left X coordinate of the region
* @param y top-left Y coordinate of the region
* @param width and @param height dimensions of the region to process
* @param bgcolor background color for rendering
* @param observer observer object for asynchronous processing
* @return true if image processing was successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)",161,166,"/**
* Performs 2D image processing on the specified region.
* @param img image to process
* @param x left coordinate of the region
* @param y top coordinate of the region
* @param width and @param height dimensions of the region
* @param observer observer for progress updates
* @return true if processing was successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",168,174,"/**
* Performs image operations using Graphics2D.
* @param img the input image
* @return true if operation was successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawLine,"org.apache.pdfbox.rendering.GroupGraphics:drawLine(int,int,int,int)",184,189,"/**
* Calls G2D methods for two graphics groups.
* @param x1 left X coordinate
* @param y1 top Y coordinate
* @param x2 right X coordinate
* @param y2 bottom Y coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawOval,"org.apache.pdfbox.rendering.GroupGraphics:drawOval(int,int,int,int)",191,196,"/**
* Calls graphics rendering methods for Group and Alpha layers.
* @param x left coordinate
* @param y top coordinate
* @param width layer width
* @param height layer height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolygon,"org.apache.pdfbox.rendering.GroupGraphics:drawPolygon(int[],int[],int)",198,203,"/**
* Calls G2D methods for grouping points.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolyline,"org.apache.pdfbox.rendering.GroupGraphics:drawPolyline(int[],int[],int)",205,210,"/**
* Invokes rendering methods for 2D groups and alpha values.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points in arrays
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:drawRoundRect(int,int,int,int,int,int)",212,217,"/**
* Renders graphics for both group and alpha layers.
* @param x top-left X coordinate
* @param y top-left Y coordinate
* @param width graphics width
* @param height graphics height
* @param arcWidth arc width
* @param arcHeight arc height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,int,int)",219,224,"/**
* Calls graphics rendering methods on two separate groups.
* @param iterator Attributed character iterator
* @param x X-coordinate to render at
* @param y Y-coordinate to render at
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,int,int)",226,231,"/**
* Calls rendering methods on multiple graphics contexts.
* @param str input string to render
* @param x and y coordinates for rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillArc,"org.apache.pdfbox.rendering.GroupGraphics:fillArc(int,int,int,int,int,int)",233,238,"/**
* Calls G2D methods for drawing arcs in both groups.
* @param x origin X-coordinate
* @param y origin Y-coordinate
* @param width arc width
* @param height arc height
* @param startAngle starting angle of the arc (degrees)
* @param arcAngle span of the arc (degrees)
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillOval,"org.apache.pdfbox.rendering.GroupGraphics:fillOval(int,int,int,int)",240,245,"/**
* Calls drawing methods for both group and alpha G2D graphics.
* @param x top-left X coordinate of the drawing area
* @param y top-left Y coordinate of the drawing area
* @param width width of the drawing area
* @param height height of the drawing area
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillPolygon,"org.apache.pdfbox.rendering.GroupGraphics:fillPolygon(int[],int[],int)",247,252,"/**
* Combines and renders 2D geometric shapes using group and alpha rendering.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points in the shape
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRoundRect(int,int,int,int,int,int)",261,266,"/**
* Draws shapes on both Group and Alpha Graphics contexts.
* @param x horizontal coordinate
* @param y vertical coordinate
* @param width shape width
* @param height shape height
* @param arcWidth arc shape width
* @param arcHeight arc shape height
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClip,org.apache.pdfbox.rendering.GroupGraphics:getClip(),268,272,"/**
* Delegates shape creation to groupG2D.
* @return Shape object created by groupG2D 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClipBounds,org.apache.pdfbox.rendering.GroupGraphics:getClipBounds(),274,278,"/**
* Delegates to GroupG2D's m1() to retrieve a rectangle. 
* @return A Rectangle object or null if not found",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getColor,org.apache.pdfbox.rendering.GroupGraphics:getColor(),280,284,"/**
* Delegates call to groupG2D's m1() method for color determination. 
* @return Color object representing current state.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFont,org.apache.pdfbox.rendering.GroupGraphics:getFont(),286,290,"/**
 * Delegate call to underlying Group G2D font retrieval.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontMetrics,org.apache.pdfbox.rendering.GroupGraphics:getFontMetrics(java.awt.Font),292,296,"/**
* Returns font metrics for the given font.
* @param f Font object to retrieve metrics for.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,org.apache.pdfbox.rendering.GroupGraphics:setClip(java.awt.Shape),305,310,"/**
* Invokes drawing methods on shape group and alpha graphics contexts.
* @param clip Shape object to be processed
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setFont,org.apache.pdfbox.rendering.GroupGraphics:setFont(java.awt.Font),319,324,"/**
* Invokes rendering methods on Graphics contexts with provided Font.
* @param font Font object to be used in rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaintMode,org.apache.pdfbox.rendering.GroupGraphics:setPaintMode(),326,331,"/**
* Calls methods on associated G2D objects.
* @see groupG2D and alphaG2D 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setXORMode,org.apache.pdfbox.rendering.GroupGraphics:setXORMode(java.awt.Color),333,338,"/**
* Calls rendering methods on both Group and Alpha Graphics contexts.
* @param c1 Color object to be used for rendering
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(int,int)",340,345,"/**
* Calls graphical rendering methods on both group and alpha graphics contexts.
* @param x horizontal coordinate
* @param y vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,addRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:addRenderingHints(java.util.Map),347,352,"/**
* Invokes methods m1 on group and alpha graphical components.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setRenderingHints,org.apache.pdfbox.rendering.PageDrawer:setRenderingHints(),256,259,"/**
 * Applies mask to graphical output.
 * @param renderingHints rendering hints and options
 */",* Sets high-quality rendering hints on the current Graphics2D.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clip,org.apache.pdfbox.rendering.GroupGraphics:clip(java.awt.Shape),354,359,"/**
* Calls drawing methods on two graphics contexts.
* @param s Shape object to draw
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,draw,org.apache.pdfbox.rendering.GroupGraphics:draw(java.awt.Shape),361,366,"/**
* Invokes rendering methods on both group and alpha G2D shapes.
* @param s Shape object to render
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawGlyphVector,"org.apache.pdfbox.rendering.GroupGraphics:drawGlyphVector(java.awt.font.GlyphVector,float,float)",368,373,"/**
* Calls drawing methods on both group and alpha graphics contexts.
* @param g GlyphVector to draw
* @param x X-coordinate of the drawing position
* @param y Y-coordinate of the drawing position
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)",375,380,"/**
* Applies image operation to a specified region of the image.
* @param img target image
* @param op image operation to apply
* @param x left coordinate of the region
* @param y top coordinate of the region
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)",382,387,"/**
* Applies transformation and rendering to the image using two graphics layers.
* @param img input image
* @param xform affine transform
* @param obs observer for rendering operations
* @return true if operation is successful, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderableImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)",389,394,"/**
* Applies transformations to image using two graphics contexts.
* @param img the RenderableImage to transform
* @param xform the AffineTransform to apply
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderedImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)",396,401,"/**
* Applies transformations to and draws on both groups of graphics.
* @param img Rendered image
* @param xform Transformation matrix for the drawing operation
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,float,float)",403,408,"/**
* Calls rendering methods on two graphical components.
* @param iterator attributed character iterator
* @param x horizontal coordinate
* @param y vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,float,float)",410,415,"/**
* Calls drawing methods on both graphics objects.
* @param str text to draw
* @param x horizontal coordinate
* @param y vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fill,org.apache.pdfbox.rendering.GroupGraphics:fill(java.awt.Shape),417,422,"/**
* Calls rendering methods on both group and alpha G2D objects.
* @param s Shape object to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getBackground,org.apache.pdfbox.rendering.GroupGraphics:getBackground(),424,428,"/**
* Calls underlying G2D implementation to perform operation 'm1'.
* @return Color result of operation 'm1' by G2D 
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getComposite,org.apache.pdfbox.rendering.GroupGraphics:getComposite(),430,434,"/**
* Delegates to G2D group's implementation of m1(). 
* @return result from groupG2D.m1()
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getDeviceConfiguration,org.apache.pdfbox.rendering.GroupGraphics:getDeviceConfiguration(),436,440,"/**
* Returns shared graphics configuration.
* @return GraphicsConfiguration instance
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontRenderContext,org.apache.pdfbox.rendering.GroupGraphics:getFontRenderContext(),442,446,"/**
* Returns a shared FontRenderContext instance.
* @return shared FontRenderContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getPaint,org.apache.pdfbox.rendering.GroupGraphics:getPaint(),448,452,"/**
* Delegates call to groupG2D's m1() method. 
* @return result of groupG2D's m1() method.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHint,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHint(java.awt.RenderingHints$Key),454,458,"/**
* Delegates rendering to groupG2D's implementation.
* @param hintKey Rendering hints as specified by J2D
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHints(),460,464,"/**
* Returns rendering hints from G2D implementation.
* @return RenderingHints object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getStroke,org.apache.pdfbox.rendering.GroupGraphics:getStroke(),466,470,"/**
* Delegates to groupG2D's m1() method to retrieve a Stroke object.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,hit,"org.apache.pdfbox.rendering.GroupGraphics:hit(java.awt.Rectangle,java.awt.Shape,boolean)",478,482,"/**
* Delegates drawing logic to groupG2D.
* @param rect bounding rectangle
* @param s shape to draw
* @param onStroke flag indicating stroke drawing mode
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,org.apache.pdfbox.rendering.GroupGraphics:rotate(double),484,489,"/**
* Calls graphics processing methods with given angle.
* @param theta rotation angle in radians
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,"org.apache.pdfbox.rendering.GroupGraphics:rotate(double,double,double)",491,496,"/**
* Calls G2D methods to perform some operation.
* @param theta geometric parameter
* @param x coordinate value
* @param y coordinate value
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setComposite,org.apache.pdfbox.rendering.GroupGraphics:setComposite(java.awt.Composite),512,517,"/**
* Calls G2D methods on provided Composite.
* @param comp graphical composite to process
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:setRenderingHints(java.util.Map),533,538,"/**
* Invokes methods on group and alpha graphical components. 
* @param hints Map of parameters or hints for the invocation.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,shear,"org.apache.pdfbox.rendering.GroupGraphics:shear(double,double)",554,559,"/**
* Calls G2D drawing methods with provided x and y coordinates.
* @param shx horizontal coordinate
* @param shy vertical coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,transform,org.apache.pdfbox.rendering.GroupGraphics:transform(java.awt.geom.AffineTransform),561,566,"/**
* Applies AffineTransform to both Group and Alpha graphics.
* @param tx transformation matrix
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isBitonal,org.apache.pdfbox.rendering.PDFRenderer:isBitonal(java.awt.Graphics2D),484,502,"/**
* Checks if graphics device supports color masking.
* @param graphics Graphics2D object
* @return true if supported, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,create2ByteGrayAlphaImage,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:create2ByteGrayAlphaImage(int,int)",1940,1962,"/**
* Creates a grayscale image mask with alpha transparency.
* @param width image width
* @param height image height
* @return BufferedImage object representing the mask
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showType3Glyph,"org.apache.pdfbox.rendering.PageDrawer:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",577,587,"/**
* Calls superclass's PDF text rendering with adjusted graphics state.
* @param textRenderingMatrix matrix for text rendering
* @param font current font object
* @param code character code to render
* @param displacement vector for position adjustment
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustImage,org.apache.pdfbox.rendering.PageDrawer:adjustImage(java.awt.image.BufferedImage),656,679,"/**
* Transforms and scales a gray-scale image using the provided xform matrix.
* @param gray original image
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endPath,org.apache.pdfbox.rendering.PageDrawer:endPath(),1011,1015,"/**
* Applies mask to current line path. 
* Calls m1 function on linePath object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,curveTo,"org.apache.pdfbox.rendering.PageDrawer:curveTo(float,float,float,float,float,float)",993,997,"/**
* Calculates and sets a Bezier curve path.
* @param x1 first control point x-coordinate
* @param y1 first control point y-coordinate
* @param x2 second control point x-coordinate
* @param y2 second control point y-coordinate
* @param x3 third control point x-coordinate
* @param y3 third control point y-coordinate
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getCurrentPoint,org.apache.pdfbox.rendering.PageDrawer:getCurrentPoint(),999,1003,"/**
* Returns the first point of a line path.
* @return first point in the line path or null if empty
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustClip,org.apache.pdfbox.rendering.PageDrawer:adjustClip(java.awt.geom.GeneralPath),1030,1072,"/**
* Applies a mask transformation to the given path.
* @param linePath input path to transform
* @return transformed path or original if no scaling occurs
*/","* PDFBOX-5715 / PR#73: This was added to fix a problem with missing fine lines when printing
     * on MacOS. Lines vanish because CPrinterJob sets graphics scale to 1 for Printable so after
     * scaling lines often have a width smaller than 1 after scaling and clipping. This change
     * enlarges the clip bounds to cover at least 1 point plus 0.5 on one and another side in the
     * device space to allow to draw the linePath inside the clip. The linePath can consists from
     * different lines but when its bounds width or height is less than 1.0 it seems safe to use a
     * rectangle as a clip instead of the real path. A more detailed explanation can be read
     * <a href=""https://github.com/apache/pdfbox/pull/173"">here</a>.
     *
     * @param linePath
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getSubsampling,"org.apache.pdfbox.rendering.PageDrawer:getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)",1273,1294,"/**
* Calculates optimal subsampling factor based on image and transform.
* @param pdImage image data
* @param at affine transformation
* @return optimal subsampling factor (1-8)
*/","* Calculates the subsampling frequency for a given PDImage based on the current transformation
     * and its calculated transform. Extend this method if you want to use your own strategy.
     *
     * @param pdImage PDImage to be drawn
     * @param at Transform that will be applied to the image when drawing
     * @return The rounded-down ratio of image pixels to drawn pixels. Returned value will always be
     * &gt;=1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getInvLookupTable,org.apache.pdfbox.rendering.PageDrawer:getInvLookupTable(),2290,2302,"/**
* Returns a lookup table with inverted byte values.
* @return ByteLookupTable instance or null if already initialized
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,getRaster,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:getRaster(int,int,int,int)",131,212,"/**
* Applies image processing operations and transfer function to a raster.
* @param x1 top-left X coordinate
* @param y1 top-left Y coordinate
* @param w width of the raster
* @param h height of the raster
* @return WritableRaster object with processed data",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,dispose,org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:dispose(),214,218,"/**
* Calls method m1 on the underlying context.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,createContext,"org.apache.pdfbox.rendering.SoftMask:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",101,108,"/**
* Creates a soft paint context for image rendering.
* @param cm Color model
* @param deviceBounds Device bounds rectangle
* @param userBounds User bounds rectangle2D
* @param xform Affine transformation
* @param hints Rendering hints
* @return SoftPaintContext object
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,ceiling,org.apache.pdfbox.rendering.TilingPaint:ceiling(double),185,190,"/**
* Rounds input number to nearest multiple of 5.
* @param num input double value
* @return rounded integer value
*/","* Returns the closest integer which is larger than the given number.
     * Uses BigDecimal to avoid floating point error which would cause gaps in the tiling.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,equals,org.apache.pdfbox.text.TextPosition:equals(java.lang.Object),901,970,"/**
* Compares this TextPosition object with another for equality.
* @param o the other object to compare with
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,org.apache.pdfbox.rendering.TilingPaintFactory:<init>(org.apache.pdfbox.rendering.PageDrawer),48,51,"/**
* Initializes a tiling paint factory with a given page drawer.
* @param drawer PageDrawer instance used to create tiles
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXRot,org.apache.pdfbox.text.TextPosition:getXRot(float),293,312,"/**
* Calculates the mask value based on rotation.
* @param rotation angle of rotation in degrees
* @return mask value or 0 if rotation is not applicable
*/","* Return the X starting coordinate of the text, adjusted by the given rotation amount.
     * The rotation adjusts where the 0,0 location is relative to the text.
     *
     * @param rotation Rotation to apply (0, 90, 180, or 270).  0 will perform no adjustments.
     * @return X coordinate",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYLowerLeftRot,org.apache.pdfbox.text.TextPosition:getYLowerLeftRot(float),356,375,"/**
* Calculates the mask value based on rotation angle.
* @param rotation rotation angle in degrees
*/","* This will get the y position of the character with 0,0 in lower left.
     * This will be adjusted by the given rotation.
     *
     * @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270)
     * @return The y coordinate of the text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthRot,org.apache.pdfbox.text.TextPosition:getWidthRot(float),426,436,"/**
* Calculates the mask position based on rotation.
* @param rotation angle of rotation in degrees
* @return horizontal position of mask as a float value
*/","* Get the length or width of the text, based on a given rotation.
     *
     * @param rotation Rotation that was used to determine coordinates (0,90,180,270)
     * @return Width of text in display units",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeCharacters,org.apache.pdfbox.text.PDFTextStripper:writeCharacters(org.apache.pdfbox.text.TextPosition),821,824,"/**
* Writes M2 representation of given TextPosition to output stream.
* @param text TextPosition object containing position data
*/","* Write the string in TextPosition to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,toString,org.apache.pdfbox.text.TextPosition:toString(),840,844,"/**
* Returns function mask value using m1() method. 
*/","* Show the string data for this text position.
     *
     * @return A human readable form of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,getTextForRegion,org.apache.pdfbox.text.PDFTextStripperByArea:getTextForRegion(java.lang.String),101,105,"/**
* Generates a mask string based on the specified region name.
* @param regionName name of the region to generate mask for
*/","* Get the text for the region, this should be called after extractRegions().
     *
     * @param regionName The name of the region to get the text from.
     * @return The text that was identified in that region.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(boolean),442,445,"/**
* Generates M2 mask based on LTR orientation.
* @param isLTR true if layout is left-to-right, false otherwise
*/","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead).
     * Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @param isLTR true if primary direction of text is left to right.
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endArticle,org.apache.pdfbox.text.PDFTextStripper:endArticle(),452,455,"/**
* Generates and outputs a mask value using the m1() function.
*/","* End an article. Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,overlap,"org.apache.pdfbox.text.PDFTextStripper:overlap(float,float,float,float)",762,766,"/**
* Checks if a rectangle overlaps with another by applying a mask function.
* @param y1 top position of first rectangle
* @param height1 height of first rectangle
* @param y2 top position of second rectangle
* @param height2 height of second rectangle
* @return true if rectangles overlap, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLineSeparator,org.apache.pdfbox.text.PDFTextStripper:writeLineSeparator(),800,803,"/**
* Writes mask data to output stream.
* Uses result from m1() function. 
* @throws IOException if write operation fails
*/","* Write the line separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the line separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeWordSeparator,org.apache.pdfbox.text.PDFTextStripper:writeWordSeparator(),810,813,"/**
* Outputs the result of the m1 function as binary data.
* @throws IOException if an I/O error occurs
*/","* Write the word separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the word separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphStart,org.apache.pdfbox.text.PDFTextStripper:writeParagraphStart(),1712,1721,"/**
* Handles paragraph formatting by toggling paragraph flag and writing output.
*/","* Write something (if defined) at the start of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageStart,org.apache.pdfbox.text.PDFTextStripper:writePageStart(),1743,1746,"/**
* Outputs function mask using result of m1(). 
*/","* Write something (if defined) at the start of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageEnd,org.apache.pdfbox.text.PDFTextStripper:writePageEnd(),1753,1756,"/**
 * Writes function mask data to output stream.
 */","* Write something (if defined) at the end of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchPattern,"org.apache.pdfbox.text.PDFTextStripper:matchPattern(java.lang.String,java.util.List)",1839,1849,"/**
* Finds and returns the first matching pattern from the list.
* @param string input string to search
* @param patterns list of Pattern objects to match against
*/","* iterates over the specified list of Patterns until it finds one that matches the specified string. Then returns
     * the Pattern.
     * <p>
     * Order of the supplied list of patterns is important as most common patterns should come first. Patterns should be
     * strict in general, and all will be used with case sensitivity on.
     * </p>
     * 
     * @param string the string to be searched
     * @param patterns list of patterns
     * @return matching pattern",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleDirection,org.apache.pdfbox.text.PDFTextStripper:handleDirection(java.lang.String),1907,1971,"/**
* Normalizes Unicode bidirectional text by mirroring characters as needed.
* @param word input string to be normalized
*/","* Handles the LTR and RTL direction of the given words. The whole implementation stands and falls with the given
     * word. If the word is a full line, the results will be the best. If the word contains of single words or
     * characters, the order of the characters in a word or words in a line may wrong, due to RTL and LTR marks and
     * characters!
     * 
     * Based on http://www.nesterovsky-bros.com/weblog/2013/07/28/VisualToLogicalConversionInJava.aspx
     * 
     * @param word The word that shall be processed
     * @return new word with the correct direction of the containing characters",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,parseBidiFile,org.apache.pdfbox.text.PDFTextStripper:parseBidiFile(java.io.InputStream),1996,2034,"/**
* Parses ASCII input stream, extracting and processing field data.
* @param inputStream Input stream containing ASCII-formatted data
*/","* This method parses the bidi file provided as inputstream.
     * 
     * @param inputStream - The bidi file as inputstream
     * @throws IOException if any line could not be read by the LineNumberReader",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getVisuallyOrderedUnicode,org.apache.pdfbox.text.TextPosition:getVisuallyOrderedUnicode(),188,208,"/**
* Returns a formatted string with Arabic right-to-left code points masked.
*/","* Same as {@link #getUnicode()} except that returned text is ensured to be
     * visually ordered (i.e. same order you would see them displayed on screen when
     * looking from left to right). This is important for Arabic/Hebrew where several
     * unicode characters can be composed in one glyph with logical order (the order
     * in which it would be normally typed from right to left).
     * 
     * @return The string on the screen in visual order.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripperByArea:processTextPosition(org.apache.pdfbox.text.TextPosition),136,147,"/**
* Processes text position and updates character list accordingly.
* @param text TextPosition object to process
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,isDiacritic,org.apache.pdfbox.text.TextPosition:isDiacritic(),813,833,"/**
* Checks if the input text matches a specific formatting mask.
* @return true if the text is valid, false otherwise
*/",* @return True if the current character is a diacritic char.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,formatTZoffset,"org.apache.pdfbox.util.DateConverter:formatTZoffset(long,java.lang.String)",286,292,"/**
* Formats a timestamp into a timezone string with separator.
* @param millis Unix timestamp in milliseconds
* @param sep Timezone separator character
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTimeField,"org.apache.pdfbox.util.DateConverter:parseTimeField(java.lang.String,java.text.ParsePosition,int,int)",307,337,"/**
* Extracts and parses an integer value from a string, up to maxlen characters.
* @param text input string
* @param where starting position for extraction
* @param maxlen maximum length of the extracted substring
* @param remedy default value if parsing fails
* @return parsed integer value or remedy if not found
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipOptionals,"org.apache.pdfbox.util.DateConverter:skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)",349,360,"/**
* Returns the first non-space character in the given string, 
* starting from the specified position and considering optional characters. 
* @param text input string
* @param where parse position to start searching
* @param optionals optional characters to consider as valid
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipString,"org.apache.pdfbox.util.DateConverter:skipString(java.lang.String,java.lang.String,java.text.ParsePosition)",370,378,"/**
* Checks for a specific pattern in the input text.
* @param text input string to search
* @param victim pattern to match
* @param where position to start searching from
* @return true if pattern found, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,newGreg,org.apache.pdfbox.util.DateConverter:newGreg(),388,394,"/**
* Returns a GregorianCalendar set to UTC timezone with millisecond precision.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,adjustTimeZoneNicely,"org.apache.pdfbox.util.DateConverter:adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)",402,408,"/**
* Adjusts calendar to local time zone.
* @param cal GregorianCalendar object
* @param tz target TimeZone
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,updateZoneId,org.apache.pdfbox.util.DateConverter:updateZoneId(java.util.TimeZone),482,509,"/**
* Formats a TimeZone object as GMT offset string.
* @param tz TimeZone to format
*/","* Update the zone ID based on the raw offset. This is either GMT, GMT+hh:mm or GMT-hh:mm, where
     * n is between 1 and 14. The highest negative hour is -14, the highest positive hour is 12.
     * Zones that don't fit in this schema are set to zone ID ""unknown"".
     *
     * @param tz the time zone to update.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte),53,57,"/**
* Converts a byte to a hexadecimal string mask.
* @param b input byte value
* @return two-character hex string representation (e.g. ""AB"") or empty string if invalid
*/","* Returns a hex string of the given byte.
     * 
     * @param b the byte to be converted
     * @return the hex string representing the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte[]),65,73,"/**
* Converts a byte array to a hexadecimal string representation.
* @param bytes input byte array
*/","* Returns a hex string of the given byte array.
     * 
     * @param bytes the bytes to be converted
     * @return the hex string representing the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte),81,84,"/**
* Returns 2-byte mask from input byte.
* @param b single byte to process
*/","* Returns the bytes corresponding to the ASCII hex encoding of the given byte.
     * 
     * @param b the byte to be converted
     * @return the ASCII hex encoding of the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte[]),92,101,"/**
* Converts binary byte array to ASCII byte array with each byte represented as two hexadecimal characters.
* @param bytes binary byte array
* @return ASCII byte array or null if input is null
*/","* Returns the bytes corresponding to the ASCII hex encoding of the given bytes.
     * 
     * @param bytes the bytey to be converted
     * @return the ASCII hex encoding of the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexByte,"org.apache.pdfbox.util.Hex:writeHexByte(byte,java.io.OutputStream)",156,160,"/**
* Writes masked byte values to output stream.
* @param b input byte value
* @param output stream for writing masked bytes
*/","* Writes the given byte as hex value to the given output stream.
     * @param b the byte to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeBase64,org.apache.pdfbox.util.Hex:decodeBase64(java.lang.String),207,211,"/**
* Encodes or decodes a base64 value using a custom mask.
* @param base64Value input base64 string
* @return encoded/decoded byte array
*/","* Decode a base64 String.
     *
     * @param base64Value a base64 encoded String.
     *
     * @return the decoded String as a byte array.
     *
     * @throws IllegalArgumentException if this isn't a base64 encoded string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,merge,"org.apache.pdfbox.util.IterativeMergeSort:merge(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)",114,146,"/**
* Partitions the input array by recursively merging smaller subarrays.
* @param arr original array
* @param aux auxiliary array for temporary storage
* @param from starting index of subarray
* @param mid middle index of subarray
* @param to ending index of subarray
* @param cmp comparator function for sorting
*/","* Merges two sorted subarrays arr and aux into the order specified by cmp and places the
     * ordered result back into into arr array.
     *
     * @param <T>
     * @param arr Array containing source data to be sorted and target for destination data
     * @param aux Array containing copy of source data to be sorted
     * @param from Start index of left data run so that Left run is arr[from : mid-1].
     * @param mid End index of left data run and start index of right run data so that Left run is
     * arr[from : mid-1] and Right run is arr[mid : to]
     * @param to End index of right run data so that Right run is arr[mid : to]
     * @param cmp the comparator to determine the order of the list.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(java.awt.geom.AffineTransform),122,132,"/**
* Initializes a Matrix instance from an AffineTransform.
* @param at AffineTransform to extract matrix values from
*/","* Creates a matrix with the same elements as the given AffineTransform.
     * @param at matrix elements will be initialize with the values from this affine transformation, as follows:
     *
     *           scaleX shearY 0
     *           shearX scaleY 0
     *           transX transY 1
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(java.awt.geom.Point2D),324,335,"/**
* Applies transformation to 2D point using linear combination.
* @param point input point coordinates
*/","* Transforms the given point by this matrix.
     *
     * @param point point to transform",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toString,org.apache.pdfbox.util.Matrix:toString(),578,588,"/**
* Returns a string representing the function mask.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,hashCode,org.apache.pdfbox.util.Matrix:hashCode(),590,594,"/**
* Invokes single-element variant of m1() function from Arrays class.",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,formatFloatFast,"org.apache.pdfbox.util.NumberFormatUtil:formatFloatFast(float,int,byte[])",75,115,"/**
* Converts float value to ASCII buffer with specified number of fraction digits.
* @param value input floating point value
* @param maxFractionDigits maximum number of fractional digits
* @param asciiBuffer output byte array for result
* @return length of ASCII representation, or -1 if invalid input
*/","* Fast variant to format a floating point value to a ASCII-string. The format will fail if the
     * value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is
     * {@link Float#NaN}, infinite or the number of requested fraction digits is greater than
     * {@link #MAX_FRACTION_DIGITS}.
     * 
     * When the number contains more fractional digits than {@code maxFractionDigits} the value will
     * be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of 
     * rounding away from zero.
     * 
     * @param value The float value to format
     * @param maxFractionDigits The maximum number of fraction digits used
     * @param asciiBuffer The output buffer to write the formatted value to
     *
     * @return The number of bytes used in the buffer or {@code -1} if formatting failed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,splitOnSpace,org.apache.pdfbox.util.StringUtil:splitOnSpace(java.lang.String),25,28,"/**
* Removes spaces from input string.
* @param s input string to process
* @return string without spaces or null if invalid input
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,getVersion,org.apache.pdfbox.util.Version:getVersion(),48,62,"/**
* Retrieves the PDFBox version as a string from the embedded properties file.
* @return The version string or null if loading fails
*/","* Returns the version of PDFBox.
     * 
     * @return the version of PDFBox",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,"org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream,boolean)",69,91,"/**
* Parses XML from InputStream, disallowing DTDs and external entities.
* @param is input stream containing XML data
* @param nsAware whether to be namespace-aware or not
* @return Document object representing parsed XML, or null if parsing fails
*/","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @param nsAware activates namespace awareness of the parser
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,find,org.apache.pdfbox.util.filetypedetector.ByteTrie:find(byte[]),70,88,"/**
* Fetches a value from the trie by traversing the nodes based on input bytes.
* @param bytes array of input bytes
* @return T object associated with the path or null if not found
*/","* Return the most specific value stored for this byte sequence. If not found, returns
     * <code>null</code> or a default values as specified by calling
     * {@link ByteTrie#setDefaultValue}.
     * @param bytes
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
* Initializes DrawObject with provided PDF stream engine context.
* @param context reference to the parent PDF stream engine
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes PDF stream engine with custom color settings.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes the PDFStreamEngine with a non-stroking color space.
 * @param context the PDFStreamEngine instance to initialize
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
* Initializes stroking color space.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/GraphicsOperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.GraphicsOperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
* Initializes a new instance of the GraphicsOperatorProcessor class.
* @param context PDFGraphicsStreamEngine context to be used by this processor
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Initializes a new BeginMarkedContentSequence command.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a new BeginMarkedContentSequenceWithProperties object.
 * @param context PDFStreamEngine instance
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),46,49,"/**
 * Initializes a DrawObject instance with the given PDF stream engine context. 
 * @param context the PDF stream engine context to associate with this draw object",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes an instance of EndMarkedContentSequence.
 * @param context PDFStreamEngine context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
* Initializes a new instance of MarkedContentPoint.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of MarkedContentPointWithProperties.
 * @param context PDFStreamEngine object representing the current rendering context.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,<init>,org.apache.pdfbox.contentstream.operator.state.Concatenate:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
* Initializes the Concatenate engine with the given PDF stream context.
* @param context the PDF stream engine context to operate on
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,<init>,org.apache.pdfbox.contentstream.operator.state.Restore:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes a new Restore instance with the given PDF stream engine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,<init>,org.apache.pdfbox.contentstream.operator.state.Save:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),34,37,"/**
 * Initializes a new instance of the Save class with the specified PDF stream engine context.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetFlatness:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
* Initializes PDFStreamEngine with flatness settings.
* @param context Engine context
""/>",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),42,45,"/**
* Initializes graphics state parameters.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Initializes line cap style settings.
* @param context PDF stream engine context.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
* Initializes Line Dash Pattern with given PDFStreamEngine context.
* @param context PDFStreamEngine instance to configure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
* Initializes line join style for PDF rendering.
* @param context PDFStreamEngine instance (context)",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes PDF stream engine with line miter limit settings.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineWidth:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
* Initializes set line width functionality.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetMatrix:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes matrix by setting up the PDF stream engine.
 * @param context PDF stream engine to configure.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
* Initializes rendering intent with given PDF stream engine context.
* @param context PDFStreamEngine instance to initialize with
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,<init>,org.apache.pdfbox.contentstream.operator.text.BeginText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes a new BeginText command.
* @param context PDF stream engine context.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,<init>,org.apache.pdfbox.contentstream.operator.text.EndText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes an EndText object with a PDFStreamEngine context.
 * @param context the PDF rendering engine context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
* Initializes MoveText functionality with given PDF stream engine context.
* @param context PDFStreamEngine instance to operate on
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
* Initializes PDF stream engine with leading text move set.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.NextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of NextLine, passing the provided PDF stream engine context to the superclass constructor.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes CharSpacing component with PDFStreamEngine context.
* @param context PDFStreamEngine instance used to render the component
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),45,48,"/**
* Initializes font and size settings for PDF generation.
* @param context reference to the underlying PDF engine
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes horizontal text scaling settings.
* @param context PDF stream engine context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes text leading settings.
* @param context PDF stream engine context. 
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes text rendering mode for the PDF stream engine. 
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRise:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes PDF stream engine with text rise settings.
* @param context PDFStreamEngine instance to configure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
* Initializes word spacing processing.
* @param context PDFStreamEngine instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes a new ShowText instance with the given PDF stream engine context.
* @param context the parent PDF stream engine context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes ShowTextAdjusted view with given PDF context.
* @param context reference to PDF rendering engine
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Initializes a new instance of ShowTextLine with the given PDF stream engine context.
* @param context the parent PDF stream engine context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
* Initializes PDF stream engine with custom ShowTextLineAndSpace functionality. 
* @param context PDF stream engine context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<init>,org.apache.pdfbox.cos.COSBoolean:<init>(boolean),55,58,"/**
* Initializes COSBoolean with specified boolean value. 
* @param aValue true or false value to set","* Constructor.
     *
     * @param aValue The boolean value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<init>,org.apache.pdfbox.cos.COSName:<init>(java.lang.String),716,719,"/**
* Initializes COSName with specified name.","* Private constructor. This will limit the number of COSName objects that are created.
     * 
     * @param aName The name of the COSName object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<init>,org.apache.pdfbox.cos.COSNull:<init>(),42,45,"/**
* Private constructor to prevent instantiation of COSNull singleton.",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(byte[],boolean)",76,80,"/**
* Creates a COSString object from a byte array with optional hex encoding.
* @param bytes input byte data
* @param forceHex whether to enforce hex representation (default false)","* Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file,
     * or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,"org.apache.pdfbox.cos.COSArray:<init>(java.util.ArrayList,boolean)",71,76,"/**
* Initializes COSArray with a list of COSBase objects and an option to access them directly.
* @param cosObjects list of COSBase objects
* @param direct true for direct access, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(),63,66,"/**
 * Initializes a new COSDictionary instance with an internal COSUpdateState.",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase),45,50,"/**
* Initializes a COSObject instance with the given COSBase object.
* @param object COSBase object to initialize from
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.ICOSParser)",72,78,"/**
* Initializes a COSObject instance with the given COSBase and ICOSParser.
* @param object COSBase object to wrap
* @param parser ICOSParser for parsing and validation
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.ICOSParser)",87,92,"/**
* Initializes a COSObject instance with a given key and parser.
* @param key unique object identifier
* @param parser COS parser instance for parsing the object","* Constructor.
     *
     * @param key The object number of the encapsulated object.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:<init>(boolean),223,226,"/**
* Initializes decode options with filtering subsampled data.
* @param filterSubsampled true to include subsampled frames, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,"org.apache.pdfbox.filter.DecodeOptions:<init>(int,int,int,int)",69,72,"/**
* Initializes DecodeOptions with rectangle bounds.
* @param x left coordinate
* @param y top coordinate
* @param width rectangle width
* @param height rectangle height
*/","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param x x-coordinate of the top-left corner of the region to be decoded
     * @param y y-coordinate of the top-left corner of the region to be decoded
     * @param width Width of the region to be decoded
     * @param height Height of the region to be decoded",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from8bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",461,551,"/**
* Fetches image data from a PDImage object.
* @param pdImage source image
* @param raster destination buffer
* @param clipped rectangle to fetch (null for full image)
* @param subsampling factor (1 for no sub-sampling)
* @param width and height of the fetched region
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,decode,"org.apache.pdfbox.filter.ASCIIHexFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",66,105,"/**
* Decodes a hexadecimal stream into an integer value.
* @param encoded input InputStream
* @param decoded output OutputStream
* @param parameters COSDictionary of decoding parameters
* @return DecodeResult object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,decode,"org.apache.pdfbox.filter.IdentityFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,40,"/**
* Decodes input stream using specified parameters and returns result.
* @param encoded input stream to decode
* @param decoded output stream for decoded data
* @param parameters dictionary of decoding settings
* @param index unknown parameter (purpose unclear)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,decode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",36,75,"/**
* Decodes and writes encoded data to the output stream.
*@param encoded input stream with compressed data
*@param decoded output stream for decompressed data
*@param parameters COSDictionary containing decoding parameters
*@return DecodeResult object indicating successful completion
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.FreeXReference:<init>(org.apache.pdfbox.cos.COSObjectKey,long)",41,46,"/**
* Constructs a new FreeXReference with the given COS object key and next free object ID.
* @param key unique identifier for the COS object
* @param nextFreeObject ID of the next available free object","* Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}).
     *
     * @param key The key, that shall be set as the free reference of the document.
     * @param nextFreeObject The object number of the next free object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:<init>(int,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",46,54,"/**
* Creates a new XReference for an Object Stream entry.
* @param objectStreamIndex index of the object stream
* @param key COSObjectKey instance
* @param object COSBase representing the object
* @param parentKey COSObjectKey instance for parent object (if applicable)
*/","* Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param objectStreamIndex The index of the {@link COSObject} in the containing object stream.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.
     * @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(),31,34,"/**
* Initializes DefaultResourceCacheCreate with default settings.
*/",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes a new instance of the wrapper class with the specified COS dictionary.","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
* Constructs a PDAttributeObject instance from a COSDictionary.
* @param dictionary COS dictionary containing attribute data
*/","* Creates a new attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject)",50,55,"/**
* Constructs a PDUserProperty object from a COSDictionary and PDUserAttributeObject.
* @param dictionary COSDictionary containing property data
* @param userAttributeObject associated PDUserAttributeObject
*/","* Creates a user property with a given dictionary.
     * 
     * @param dictionary the dictionary
     * @param userAttributeObject the user attribute object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
* Constructs an outline node from a COS dictionary.",* @param dict The dictionary storage.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Constructs a PDTransition instance from a COS dictionary.
* @param dictionary COS dictionary containing transition data
*/","* creates a new transition for an existing dictionary
     * 
     * @param dictionary the dictionary to be used for the new transition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes a PDDestinationNameTreeNode from a given COS dictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
* Initializes an embedded files name tree node from a dictionary.
* @param dic COSDictionary containing node data
*/","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDJavascriptNameTreeNode instance from a COS dictionary.
 * @param dic COS dictionary containing node data
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDStructureElementNameTreeNode instance from a COS dictionary.","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),234,237,"/**
* Creates a PDNumberTreeNode instance from the given COSDictionary.
* @param dic COSDictionary to construct the tree node with
*/","* Create a child node object.
     *
     * @param dic The dictionary for the child node object to refer to.
     * @return The new child node object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.cos.COSStream),71,74,"/**
 * Initializes a new instance of PDMetadata from a COS stream.
 * @param str COS stream containing metadata data
 */","* Constructor. This will <b>not</b> set up the /Type and /Subtype entries.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDObjectStream:<init>(org.apache.pdfbox.cos.COSStream),40,43,"/**
 * Initializes a new PDObjectStream instance from the provided COSStream.
 * @param str COSStream object to wrap
 */","* Constructor.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.cos.COSStream),49,52,"/**
 * Initializes an embedded file object from a COS stream.
 * @param str COS stream containing embedded file data
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunction:<init>(org.apache.pdfbox.cos.COSBase),53,64,"/**
* Initializes a PDFunction object from a COSBase representation.
* @param function COSBase object to initialize from
*/","* Constructor.
     *
     * @param function The function stream.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentStream,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentStream(),71,74,"/**
* Creates a PDDocument stream with the current char input stream.
* @return PDStream object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",98,104,"/**
* Initializes PDXObject with stream and subtype.
* @param stream input stream to initialize from
* @param subtype specific type of XObject (e.g. Form XObject) 
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentStream(),152,155,"/**
* Creates a PDF stream mask with generated data. 
* @return PDStream object containing masked content",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentStream(),169,172,"/**
* Creates a COS stream with mask function. 
* @return A PDStream object representing the mask function
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
* Initializes a new instance of PDStructureElement from a given COS dictionary.
* @param dic COS dictionary containing structure element data
*/","* Constructor for an existing structure element.
     *
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
* Constructs a PDStructureTreeRoot object from a COS dictionary. 
* @param dic COS dictionary containing tree structure data
*/","* Constructor for an existing structure element.
     * 
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(),118,120,"/**
* Initializes an empty SecurityHandler instance.",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),127,131,"/**
* Initializes SecurityHandler with a specified protection policy.
* @param protectionPolicy policy governing encryption and security
*/","* Constructor used for encryption.
     *
     * @param protectionPolicy The protection policy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Initializes an instance of FDFAnnotationCaret from a COS dictionary.
 * @param a COS dictionary containing annotation caret data.","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Constructs an FDFAnnotationCircle object from a COS dictionary.
* @param a COS dictionary containing annotation circle data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Initializes an instance of FDFAnnotationFileAttachment from COS dictionary.
* @param a COS dictionary containing attachment data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
* Initializes an instance of FDFAnnotationFreeText from a COS dictionary.","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
* Initializes an FDFAnnotationInk object from a COSDictionary.","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
* Initializes an FDF annotation line from a COS dictionary.
* @param a COS dictionary containing annotation data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
* Constructs an FDFAnnotationLink object from a COS dictionary.
* @param a COS dictionary containing annotation link data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Constructs an FDFAnnotationPolygon object from a COS dictionary.
* @param a COSDictionary containing polygon data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Creates an instance of FDFAnnotationPolyline from a COS dictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Constructs an FDFAnnotationSound object from a COSDictionary.
* @param a COS dictionary containing annotation sound data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),55,58,"/**
* Constructs an FDFAnnotationSquare object from a COS dictionary.
* @param a COS dictionary containing annotation square data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
* Constructs an FDFAnnotationStamp instance from a COS dictionary.
* @param a COS dictionary containing annotation stamp data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs an instance of FDFAnnotationText from a COS dictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
* Initializes an instance of FDFAnnotationTextMarkup from a COS dictionary.","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),27,30,"/**
* Initializes AcroFormDefaultFixup with the given PDDocument.
* @param document the PDF document to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),41,44,"/**
* Initializes the processor with a PDDocument instance.
* @param document PDF document to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),31,34,"/**
* Initializes an instance of AcroFormGenerateAppearancesProcessor with the given PDDocument.
* @param document the PDF document to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),55,58,"/**
* Initializes AcroFormOrphanWidgetsProcessor with a PDDocument instance.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName),96,99,"/**
* Initializes FontType with specified font type.
* @param type COSName representing font type
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:<init>(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String,org.apache.pdfbox.pdmodel.font.CIDSystemInfo,int,int,int,int,int,byte[],org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,long)",86,105,"/**
* Initializes FSFontInfo object with font file details and metadata.
* @param file Font file to be processed
* @param format Format of the font (e.g. TrueType, OpenType)
* @param postScriptName Postscript name of the font
* @param cidSystemInfo CID System information for font
* @param usWeightClass Font weight class (e.g. 400, 700)
* @param sFamilyClass Font family class (e.g. 1, 2)
* @param ulCodePageRange1 First code page range value
* @param ulCodePageRange2 Second code page range value
* @param macStyle Macintosh style information for font
* @param panose Panose classification data for font
* @param parent Parent file system font provider
* @param hash Unique hash identifier for font
* @param lastModified Last modified timestamp of the font file
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,getPanose,org.apache.pdfbox.pdmodel.font.PDPanose:getPanose(),63,67,"/**
* Constructs PDPanoseClassification object from 10-byte PANOS mask.","* Ten bytes for the PANOSE classification number for the font.
     * 
     * @see <a href=""http://www.monotype.com/services/pan1"">http://www.monotype.com/services/pan1</a>
     * 
     * @return the PANOSE classification number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,getInstance,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",51,75,"/**
* Creates a composite graphic based on blend mode and alpha value.
* @param blendMode the blending mode to use
* @param constantAlpha the alpha value (clamped between 0 and 1)
*/","* Creates a blend composite
     *
     * @param blendMode Desired blend mode
     * @param constantAlpha Constant alpha, must be in the inclusive range
     * [0.0...1.0] or it will be clipped.
     * @return a blend composite.
     * @throws IllegalArgumentException if blendMode is null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getGroup,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getGroup(),128,139,"/**
* Returns the transparency group attributes with FUNC_MASK or initializes it from the PDF dictionary.
*/","* Returns the transparency group attributes dictionary.
     *
     * @return the transparency group attributes dictionary, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes PDShadingPattern from a COS dictionary.
* @param resourceDictionary COS dictionary containing pattern data
*/","* Creates a new shading pattern from the given COS dictionary.
     * @param resourceDictionary The COSDictionary for this pattern resource.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",84,88,"/**
* Initializes a PDTilingPattern object with given COSDictionary and ResourceCache.
* @param dictionary PDF document metadata
* @param resourceCache cache for shared resources
*/","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.
     * @param resourceCache The resource cache, may be null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
* Initializes PDShadingType1 from COS dictionary.
* @param shadingDictionary dictionary containing shading data
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Initializes an instance of PDShadingType2 from a COS dictionary.","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes triangle-based shading type from COS dictionary.
 * @param shadingDictionary input dictionary containing shading parameters
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,org.apache.pdfbox.util.Matrix)",45,48,"/**
* Initializes axial shading paint with specified type and transformation matrix.","* Constructor.
     *
     * @param shadingType2 the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Initializes Radial Shading paint with given shading type and transformation matrix.
 * @param shading PDShadingType3 object defining the radial shading characteristics
 * @param matrix Matrix representing the transformation to apply","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,org.apache.pdfbox.util.Matrix)",44,47,"/**
* Initializes Type1ShadingPaint with given shading and transformation matrix.
* @param shading PDShadingType1 object
* @param matrix Transformation matrix
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,org.apache.pdfbox.util.Matrix)",44,47,"/**
* Initializes a Type4ShadingPaint object with the given shading and transformation matrix.","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Initializes a new instance of Type 5 Shading Paint with the specified shading and transformation matrix.
 * @param shading Type 5 shading data
 * @param matrix Transformation matrix for the paint","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Initializes a new instance of Type6ShadingPaint with specified shading and transformation.
* @param shading PDShadingType6 object
* @param matrix transformation matrix
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Initializes a Type 7 Shading Paint object with specified shading and transformation.
* @param shading PDShadingType7 instance
* @param matrix transformation matrix","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs an instance from a COSDictionary representing an extended graphics state.
 * @param dictionary COSDictionary containing extended graphics state parameters
 */","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary),106,109,"/**
* Initializes a new instance from the given COS dictionary.","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.lang.String),51,72,"/**
* Initializes PlainText object from input text.
* @param textValue user-provided text content
*/","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,build,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:build(),121,124,"/**
* Creates a plain text formatter with this instance as its parent.
* @return PlainTextFormatter object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
* Initializes an embedded goto action.
* @param a COS dictionary containing action parameters
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes an instance of PDActionGoTo from a COS dictionary.
 * @param a COS dictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a Hide Action element from a COS dictionary.
 * @param a COS dictionary containing action properties.","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes import data with given COS dictionary.
 * @param a COS dictionary containing import data","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Initializes JavaScript action from COS dictionary.
* @param a COS dictionary containing action data
*/","* Constructor #2.
     *
     *  @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes a new instance of PDActionLaunch with the given dictionary. 
* @param a COSDictionary containing action launch data 
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes a new instance of PDActionMovie with a COS dictionary. 
 * @param a COS dictionary containing movie data.","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
* Constructs a PDActionNamed instance from a COS dictionary.
* @param a COSDictionary containing action data
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes a remote goto action with the given dictionary data.
* @param a COSDictionary containing action settings
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Initializes a new instance of the PDActionResetForm class from a COS dictionary.
 * @param a the COS dictionary containing action parameters
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Initializes an instance of PDActionSound from a COS dictionary.
* @param a COS dictionary containing sound properties
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Initializes an action submit form with COS dictionary data.
* @param a COSDictionary containing form data and settings
*/","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes an action thread with the given COS dictionary.
* @param a COS dictionary containing initialization data.","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Initializes a new instance of PDActionURI with the given COS dictionary.
* @param a COS dictionary containing URI action data
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAppearanceDictionary,"org.apache.pdfbox.pdmodel.PDDocument:assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",614,620,"/**
* Updates widget appearance dictionary with mask settings.
* @param firstWidget the initial annotation widget
* @param apDict appearance dictionary to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Constructs appearance handler from an annotation with default settings.
 * @param annotation Annotation object to initialize from
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",44,47,"/**
* Constructs a new handler for appearance settings.
* @param annotation PDAnnotation instance
* @param document PDDocument instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Initializes the PDCircleAppearanceHandler with an annotation and document.
 * @param annotation PDAnnotation object
 * @param document PDDocument object
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",43,46,"/**
* Initializes appearance handler for a PDF file attachment.
* @param annotation PDF annotation object
* @param document parent PDDocument object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",66,69,"/**
* Initializes handler with annotation and document.
* @param annotation PDAnnotation instance
* @param document PDDocument instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",48,51,"/**
 * Constructs a handler for PDHighlight annotations.
 * @param annotation PDHighlight annotation to handle
 * @param document parent PDF document context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",42,45,"/**
* Initializes PD Ink Appearance Handler with annotation and document.
* @param annotation PD Annotation object
* @param document PDDocument instance",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",46,49,"/**
* Initializes line appearance handler with annotation and document.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
* Constructs a PDLinkAppearanceHandler instance.
* @param annotation the PDAnnotation to handle
* @param document the PDDocument context
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Initializes the appearance handler for a polygon PD annotation. 
 * @param annotation the annotation instance to handle
 * @param document the parent document context
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",45,48,"/**
* Initializes appearance handler with annotation and document.
* @param annotation PDAnnotation object
* @param document PDDocument object",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",28,31,"/**
 * Initializes PDSoundAppearanceHandler with annotation and document references.
 * @param annotation PDAnnotation object
 * @param document PDDocument object",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
* Initializes the handler with the given annotation and document.
* @param annotation PDAnnotation instance
* @param document PDDocument instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",52,55,"/**
* Initializes PDSquigglyAppearanceHandler with annotation and document.
* @param annotation PDAnnotation instance
* @param document PDDocument instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Initializes handler with specified annotation and document.
 * @param annotation PDAnnotation object to associate
 * @param document PDDocument object to link to
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,79,"/**
 * Initializes text appearance handler for the given PDF annotation and document.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
* Initializes PDUnderlineAppearanceHandler with annotation and document.
* @param annotation PDAnnotation object
* @param document PDDocument object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toKeyValueList,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:toKeyValueList(java.util.List,java.util.List)",86,94,"/**
* Creates a list of KeyValue objects from corresponding key and value lists.
* @param key list of unique keys
* @param value list of corresponding values
* @return List of KeyValue pairs or empty list if inputs are empty
*/","* Return two related lists as a single list with key value pairs.
     * 
     * @param key the key elements
     * @param value the value elements
     * @return a sorted list of KeyValue elements.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
* Constructs a non-terminal PDDocumentField instance.
* @param acroForm the containing ACROForm
* @param field the underlying COS dictionary
* @param parent the parent field in the document hierarchy
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Constructs a PDAcroForm field with the specified properties.
* @param acroForm PDAcroForm instance
* @param field COSDictionary representing the field's structure
* @param parent PDNonTerminalField parent field (if any)
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
* Constructs a linear measure dictionary from a given COS dictionary.","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMatrix,org.apache.pdfbox.pdmodel.PDPage:getMatrix(),387,392,"/**
* Creates an empty matrix.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,clone,org.apache.pdfbox.util.Matrix:clone(),443,447,"/**
* Returns a Matrix instance based on single.m1()'s result.
* @return A new Matrix object.","* Clones this object.
     * @return cloned matrix as an object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getFontMatrix(),168,203,"/**
* Retrieves the font matrix, falling back to default values if necessary.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getFontMatrix(),185,194,"/**
* Returns a pre-calculated matrix for font rendering.
* @return Matrix object used to transform font glyphs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1CFont:getFontMatrix(),312,341,"/**
* Retrieves the matrix, either from a custom font or using the superclass implementation.
* @return A Matrix object representing the calculated values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1Font:getFontMatrix(),662,693,"/**
* Retrieves font matrix, falling back to default if unavailable.
* @return Matrix object representing font metrics
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScaleInstance,"org.apache.pdfbox.util.Matrix:getScaleInstance(float,float)",388,391,"/**
* Creates a transformation matrix with translation by (x, y).
* @param x horizontal offset
* @param y vertical offset
*/","* Convenience method to create a scaled instance.
     *
     * Produces the following matrix:
     * x 0 0
     * 0 y 0
     * 0 0 1
     *
     * @param x The xscale operator.
     * @param y The yscale operator.
     * @return A new matrix with just the x/y scaling",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getTranslateInstance,"org.apache.pdfbox.util.Matrix:getTranslateInstance(float,float)",405,408,"/**
* Creates a transformation matrix with translation to (x,y).
* @param x horizontal offset
* @param y vertical offset
*/","* Convenience method to create a translating instance.
     *
     * Produces the following matrix:
     * 1 0 0
     * 0 1 0
     * x y 1
     *
     * @param x The x translating operator.
     * @param y The y translating operator.
     * @return A new matrix with just the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getRotateInstance,"org.apache.pdfbox.util.Matrix:getRotateInstance(double,float,float)",418,424,"/**
* Creates a rotation matrix for the specified angle and translation.
* @param theta rotation angle in radians
* @param tx x-coordinate of translation
* @param ty y-coordinate of translation
*/","* Convenience method to create a rotated instance.
     *
     * @param theta The angle of rotation measured in radians
     * @param tx The x translation.
     * @param ty The y translation.
     * @return A new matrix with the rotation and the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(org.apache.pdfbox.util.Vector),363,374,"/**
* Computes a masked function value from input vector.
* @param vector input vector
*/","* Transforms the given vector by this matrix.
     *
     * @param vector 2D vector
     *
     * @return the transformed vector.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,scale,org.apache.pdfbox.util.Vector:scale(float),60,63,"/**
* Scales vector components by scalar value.
* @param sxy scalar factor
* @return scaled Vector object
*/","* Returns a new vector scaled by both x and y.
     *
     * @param sxy x and y scale
     * @return a new vector scaled by both x and y",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(),33,36,"/**
 * Initializes CompressParameters with default object stream size. 
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldTree,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldTree(),429,432,"/**
* Creates a field tree with mask functionality.
* @return A new PDFieldTree instance.","* Return the field tree representing all form fields
     * 
     * @return the field tree representing all form fields",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,isEmpty,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:isEmpty(),931,935,"/**
* Checks if mask is valid by verifying its components.
* @return true if mask is valid, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setDefaultValue,org.apache.pdfbox.util.filetypedetector.ByteTrie:setDefaultValue(java.lang.Object),121,124,"/**
* Sets default mask value in the data structure.
* @param defaultValue new default value to set
*/","* Sets the default value to use in {@link ByteTrie#find(byte[])} when no path matches.
     * @param defaultValue",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObject(int),66,69,"/**
* Returns masked value at specified index.
* @param index position of value to mask
* @return T object with masked value
*/","* Returns the object at the specified position.
     * 
     * @param index the position
     * @return the object
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,size,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:size(),115,118,"/**
* Calls m2 on the result of m1.","* Returns the size.
     * 
     * @return the size",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumber(int),78,81,"/**
* Calculates function mask value at specified index.
* @param index input index
* @return calculated mask value
*/","* Returns the revision number at the specified position.
     * 
     * @param index the position
     * @return the revision number
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,addObject,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:addObject(java.lang.Object,int)",89,93,"/**
* Updates internal data structures with object and revision information.
* @param object the object to be updated
* @param revisionNumber the current revision number
*/","* Adds an object with a specified revision number.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,setRevisionNumber,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:setRevisionNumber(java.lang.Object,int)",101,108,"/**
* Updates functional mask fields for the given object based on its revision number.
* @param object T object to update
* @param revisionNumber current revision number
*/","* Sets the revision number of a specified object.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isCIDSubtype,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:isCIDSubtype(org.apache.pdfbox.cos.COSName),106,113,"/**
* Checks if COSName subtype matches the given CID subtype.
* @param cidSubtype target subtype to match
* @return true if subtype matches, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getInstance,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getInstance(org.apache.pdfbox.cos.COSName),42,64,"/**
* Retrieves the encoding mask for a given COS name.
* @param name COSName object to determine encoding for
* @return Encoding mask (Standard, WinAnsi, etc.) or null if unknown
*/","* This will get an encoding by name. May return null.
     *
     * @param name The name of the encoding to get.
     * @return The encoding that matches the name.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,toLongName,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:toLongName(org.apache.pdfbox.cos.COSBase),151,166,"/**
* Returns a device-specific color space base, or the original if not matched.
* @param cs COSBase object to evaluate
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.ResourceCache)",62,85,"/**
* Creates a PDSoftMask object from the provided COSBase or COSDictionary.
* @param dictionary COSBase instance to create mask from
* @param resourceCache ResourceCache used for initialization
* @return PDSoftMask object or null if invalid
*/","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * @param resourceCache Resource cache, may be null.
     * 
     * @return the newly created instance of PDSoftMask",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedIndex,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedIndex(),94,106,"/**
* Finds the first visible PDAnnotationWidget and returns its index.
* @return Index of first visible widget, or -1 if none found
*/","* This will get the selected index.
     * <p>
     * A RadioButton might have multiple same value options which are not selected jointly if
     * they are not set in unison {@link #isRadiosInUnison()}.</p>
     * 
     * <p>
     * The method will return the first selected index or -1 if no option is selected.</p>
     * 
     * @return the first selected index or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.lang.String),296,299,"/**
* Wraps file path as a File object and delegates to overloaded version.
* @param source file path or name
*/","* Add a source file to the list of files to merge.
     *
     * @param source Full path and file name of source document.
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseTrailer,org.apache.pdfbox.pdfparser.XrefParser:parseTrailer(),206,258,"/**
* Parses and resolves the trailer section in a PDF document.
* @throws IOException if an I/O error occurs
*/","* This will parse the trailer from the stream and add it to the state.
     *
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(org.apache.pdfbox.filter.DecodeOptions),302,307,"/**
* Wraps DecodeOptions into a call to m1() with default options.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getObject(org.apache.pdfbox.cos.COSObjectKey),279,282,"/**
* Retrieves an object from the pool using its key.
* @param key unique identifier for the object
* @return COSBase object or null if not found
*/","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool.
     *
     * @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if
     * such an object is contained.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),80,110,"/**
* Executes a sequence of instructions on the given context.
* @param context ExecutionContext object
*/","* Executes the instruction sequence.
     * @param context the execution context",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,"org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.cos.ICOSParser)",134,138,"/**
* Initializes COS document with provided stream cache creation function and parser.
* @param streamCacheCreateFunction function to create stream cache
* @param parser COS parser instance
*/","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     * @param parser Parser to be used to parse the document on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",916,935,"/**
* Processes operator based on its type.
* @param operator Operator instance
* @param operands list of operand COSBase objects
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextLineMatrix(),1047,1050,"/**
* Calls m1() to fetch an intermediate matrix result and then calls its m2() method.",* @return Returns the textLineMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextLineMatrix(org.apache.pdfbox.util.Matrix),1055,1058,"/**
* Calls Matrix operation on the internal matrix.
*/",* @param value The textLineMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextMatrix(),1063,1066,"/**
* Calls m2() on the result of m1().
*/",* @return Returns the textMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextMatrix(org.apache.pdfbox.util.Matrix),1071,1074,"/**
* Calls secondary matrix operation on result of primary operation.
* @param value input Matrix object
*/",* @param value The textMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformWidth,org.apache.pdfbox.contentstream.PDFStreamEngine:transformWidth(float),1138,1144,"/**
* Calculates a mask value based on the input width.
* @param width input width value
* @return calculated mask value","* Transforms a width using the CTM.
     * 
     * @param width the width to be transformed
     * 
     * @return the transformed width",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColor(),40,44,"/**
* Calculates and returns the functional mask color.
*/","* Returns the non-stroking color.
     * @return The non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
 * Applies a custom mask to the color using a three-step process.
 * @param color PDColor object to be masked
 */","* Sets the non-stroking color.
     * @param color The new non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColorSpace(),60,64,"/**
* Calculates color space mask using nested functions m1(), m2(), and m3().
*/","* Returns the non-stroking color space.
     * @return The non-stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColor(),40,44,"/**
* Returns a color representing function mask.
* @return PDColor object representing function mask.","* Returns the stroking color.
     * @return The stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
 * Applies mask to specified color.
 * @param color PDColor object to be masked
 */","* Sets the stroking color.
     * @param color The new stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColorSpace(),60,64,"/**
* Returns color space mask based on m1(), m2(), and m3() calculations.","* Returns the stroking color space.
     * @return The stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRise:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
* Applies mask operation to a COSNumber.
* @param operator Operator instance
* @param arguments List of COSBase objects
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,54,"/**
* Applies mask operation to specified number value.
* @param operator Operator instance
* @param arguments List of argument values, should contain a single COSNumber
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,74,"/**
* Draws a rectangle using operator and four operands (x, y, width, height).
* @param operator the drawing operator
* @param operands list of COSBase objects containing x, y, w, h values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,80,"/**
* Applies a Bezier curve to the graphics stream using 6 operands.
* @param operator the current operator
* @param operands list of 6 COSBase operands (x1,y1,x2,y2,x3,y3)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,66,"/**
* Performs a FUNC_MASK operation on the provided operands.
* @param operator current operator
* @param operands list of COSBase objects (at least 4 required)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Performs a curveTo operation on the graphics stream.
* @param operator PDF operator
* @param operands list of COSBase objects containing x and y coordinates
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.LineTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Applies the line-to operator with two operands.
* @param operator current operator
* @param operands list of operands (must contain at least 2 numbers)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.MoveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,65,"/**
* Applies mask operation using two numbers.
* @param operator the mask operator
* @param operands list of operands (must contain exactly 2 COSNumber objects)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Processes the FUNC_MASK operator with given operands.
* @param operator The FUNC_MASK operator
* @param operands List of operands for the operator
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
* Processes a mask operator with one operand.
* @param operator the Operator instance
* @param operands list of COSBase objects
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,process,"org.apache.pdfbox.contentstream.operator.state.SetFlatness:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Evaluates mask operation on a COSNumber operand.
* @param operator the Operator instance
* @param operands list of COSBase objects, must contain exactly one COSNumber
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Applies line cap style to drawing elements.
* @param operator drawing operation
* @param arguments list of COSBase objects containing parameters
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Applies mask operation to a COSBase object.
* @param operator the operator to apply
* @param arguments list of operands, must contain exactly one number
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,55,"/**
* Computes mask for the given operator and argument list.
* @param operator Operator instance
* @param arguments List of COSBase objects
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineWidth:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Applies mask operation on input data.
* @param operator the operator to apply
* @param arguments list of operands, must contain exactly one number and no other elements
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,process,"org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,58,"/**
* Handles FUNC_MASK operator by processing COSName operand and rendering intent.
* @param operator Operator instance
* @param operands List of COSBase operands, must contain a single COSName
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,60,"/**
* Applies mask operation with specified character spacing.
* @param operator Operator instance
* @param arguments List of COSBase objects containing character spacing value
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,57,"/**
* Applies mask operation on a COSNumber.
* @param operator Operator instance
* @param arguments List of COSBase objects, must contain exactly one operand
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
* Applies mask operation to the given number.
* @param operator Operator instance
* @param arguments list of COSBase objects containing operands
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Applies a rendering mode mask to the document.
* @param operator PDF operator
* @param arguments list of operands, must contain exactly one COSNumber value
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,process,"org.apache.pdfbox.contentstream.operator.state.Restore:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
* Processes a FUNC_MASK operator with given arguments.
* @param operator the FUNC_MASK operator
* @param arguments list of COSBase objects for processing
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawInputStream,org.apache.pdfbox.cos.COSStream:createRawInputStream(),132,156,"/**
* Initializes an InputStream for reading, either from a written stream or a random access view.
* @throws IllegalStateException if writing is still in progress
* @throws IOException if no data has been written to the stream
*/","* Returns a new InputStream which reads the encoded PDF stream data. Experts only!
     * 
     * @return InputStream containing raw, encoded PDF stream data.
     * @throws IOException If the stream could not be read.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawOutputStream,org.apache.pdfbox.cos.COSStream:createRawOutputStream(),261,290,"/**
* Creates a stream writer with a mask filter.
*@return OutputStream object for writing data
*/","* Returns a new OutputStream for writing encoded PDF data. Experts only!
     * 
     * @return OutputStream for raw PDF stream data.
     * @throws IOException If the output stream could not be created.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findImageReader,"org.apache.pdfbox.filter.Filter:findImageReader(java.lang.String,java.lang.String)",159,172,"/**
* Retrieves an ImageReader for a specified image format.
* @param formatName name of the image format
* @param errorCause cause of potential failure
* @return ImageReader object or throws MissingImageReaderException if not found
*/","* Finds a suitable image reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findRasterReader,"org.apache.pdfbox.filter.Filter:findRasterReader(java.lang.String,java.lang.String)",182,199,"/**
* Retrieves an ImageReader instance for the given format name.
* @param formatName format name to search for
* @param errorCause cause of failure (for exception message)
* @throws MissingImageReaderException if no matching reader is found
*/","* Finds a suitable image raster reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,getOperator,org.apache.pdfbox.contentstream.operator.Operator:getOperator(java.lang.String),60,85,"/**
* Retrieves operator instance by name; prioritizes inline image data operators.
* @param operator name of the operator to fetch
* @return Operator object or null if not found
*/","* This is used to create/cache operators in the system.
     *
     * @param operator The operator for the system.
     *
     * @return The operator that matches the operator keyword.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toString,org.apache.pdfbox.pdmodel.common.COSArrayList:toString(),580,584,"/**
* Returns a string representation of this COSArrayList instance.
* @return human-readable string containing contents of underlying ArrayList
*/",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,isEdgeALine,org.apache.pdfbox.pdmodel.graphics.shading.Patch:isEdgeALine(java.awt.geom.Point2D[]),143,150,"/**
* Checks if a contour mask is valid based on control points.
* @param ctl array of Point2D objects representing control points
*/","* Whether the for control points are on a line.
     *
     * @param ctl an edge's control points, the size of ctl is 4
     * @return true when 4 control points are on a line, otherwise false",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Constructs an artifact marked content object.
* @param properties COS dictionary containing artifact properties
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftX(),215,218,"/**
* Calculates and returns the mask value based on the first element of rectArray.
*/","* This will get the lower left x coordinate.
     *
     * @return The lower left x.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftY(),235,238,"/**
* Calculates and returns a float value from the 2nd element of rectArray. 
* The calculation involves calling m1(1) on COSNumber object, then m2(). 
*/","* This will get the lower left y coordinate.
     *
     * @return The lower left y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightX(),255,258,"/**
* Calculates and returns a floating-point mask value from a COSNumber object.
* @return the calculated mask value as a float
*/","* This will get the upper right x coordinate.
     *
     * @return The upper right x .",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightY(),275,278,"/**
* Calculates the mask value from the third element of the rectangle array.","* This will get the upper right y coordinate.
     *
     * @return The upper right y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFontSize(),104,108,"/**
* Calculates the mask value based on the font size. 
* @return mask value as a float
*/","* This will get the size of the font.
     *
     * @return The size of the font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,initComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:initComponents(org.apache.pdfbox.cos.COSArray),81,95,"/**
* Extracts numeric color components from the given COSArray.
* @param array COSArray containing color data
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getR(),79,82,"/**
* Calculates a cosine-based mask value.
* @return floating-point mask value
*/","* Returns the r value of the tristimulus.
     * @return the R value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getG(),97,100,"/**
* Calculates a cosine-based mask value.
* @return cosine value as a float
*/","* Returns the g value of the tristimulus.
     * @return the g value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getB(),115,118,"/**
* Calculates and returns the value of a COSNumber instance.
* @return The result of the COSNumber operation
*/","* Returns the b value of the tristimulus.
     * @return the B value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getX(),82,85,"/**
* Calculates a function value (mask) using COSNumber at index 0. 
* @return function mask as a float
*/","* Returns the x value of the tristimulus.
     * @return the X value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getY(),100,103,"/**
* Calculates and returns the cosine value of an angle in radians.","* Returns the y value of the tristimulus.
     * @return the Y value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getZ(),118,121,"/**
* Calculates and returns a floating-point value based on cosine calculation. 
* @return calculated float value","* Returns the z value of the tristimulus.
     * @return the Z value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,"org.apache.pdfbox.cos.COSArray:getInt(int,int)",318,330,"/**
* Retrieves a value from the index using default value if out of bounds.
* @param index integer index to access
* @param defaultValue fallback value if index is invalid
* @return retrieved or default value as an int
*/","* Get the value of the array as an integer, return the default if it does not exist.
     *
     * @param index The value of the array.
     * @param defaultValue The value to return if the value is null.
     * @return The value at the index or the defaultValue.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,"org.apache.pdfbox.cos.COSArray:getName(int,java.lang.String)",370,382,"/**
* Retrieves a string value from the object at the specified index, 
* or returns the default value if the index is out of range. 
* @param index the array index
* @param defaultValue the default string to return if index is invalid
* @return the string value or the default value","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOf,org.apache.pdfbox.cos.COSArray:indexOf(org.apache.pdfbox.cos.COSBase),539,557,"/**
* Finds the index of the first item in the collection that matches a given object.
* @param object COSBase object to search for
* @return Index of matching item, or -1 if not found
*/","* This will return the index of the entry or -1 if it is not found.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getFilterList,org.apache.pdfbox.cos.COSStream:getFilterList(),295,324,"/**
* Retrieves a list of filters from the input COSBase object.
* @return List of Filter objects
*/",* Returns the list of filters.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.util.List,org.apache.pdfbox.cos.COSArray)",75,85,"/**
* Initializes COSArrayList with actual list and COSArray.
* @param actualList underlying list of type E
* @param cosArray associated COSArray object
*/","* Create the COSArrayList specifying the List and the backing COSArray.
     * 
     * <p>User of this constructor need to ensure that the entries in the List and
     * the backing COSArray are matching i.e. the COSObject of the List entry is
     * included in the COSArray.
     *   
     * <p>If the number of entries in the List and the COSArray differ
     * it is assumed that the List has been filtered. In that case the COSArrayList
     * shall only be used for reading purposes and no longer for updating.
     * 
     * @param actualList The list of standard java objects
     * @param cosArray The COS array object to sync to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:eval(float[]),87,102,"/**
* Computes function mask for input array.
* @param input input data array
* @return float array representing the computed mask
*/","* Performs exponential interpolation
     *
     * {@inheritDoc}",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(),511,525,"/**
* Recursively fetches next value from the stream.
* @return The fetched value or -1 if exhausted
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,available,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:available(),527,535,"/**
* Returns non-zero value if m1 condition is met.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(byte[],int,int)",537,551,"/**
* Recursively fetches data from the underlying stream.
* @param b byte array to read
* @param off offset in the array
* @param len length of the data to read
* @return int value or -1 on error
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:<init>(org.apache.pdfbox.cos.COSArray),182,212,"/**
* Initializes ObjectNumbers from COSArray index array.
* @param indexArray Xref stream index array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFilters(),238,250,"/**
* Retrieves a list of names based on the filtered collection.
*@return List of COSName objects or an empty list if none found
*/","* This will get the list of filters that are associated with this stream.
     * 
     * @return A (possibly empty) list of all encoding filters to apply to this stream, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFileFilters(),358,371,"/**
* Retrieves filter masks from the stream.
*@return list of filter masks
*/","* This will get the list of filters that are associated with this stream. The list is empty if there are none.
     * 
     * @return A list of all encoding filters to apply to this stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromBoolean,org.apache.pdfbox.pdfwriter.COSWriter:visitFromBoolean(org.apache.pdfbox.cos.COSBoolean),1180,1184,"/**
* Applies mask function to COSBoolean object.
* @param obj COSBoolean object to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSBoolean,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSBoolean(java.io.OutputStream,org.apache.pdfbox.cos.COSBoolean)",294,298,"/**
* Writes boolean value with mask to OutputStream.
* @param output OutputStream to write to
* @param cosBoolean boolean value to mask and write
*/","* Write the given {@link COSBoolean} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosBoolean The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromNull,org.apache.pdfbox.pdfwriter.COSWriter:visitFromNull(org.apache.pdfbox.cos.COSNull),1368,1372,"/**
* Applies mask operation to COSNull object.
* @param obj COSNull object to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,write,org.apache.pdfbox.pdmodel.PDAbstractContentStream:write(java.lang.String),1503,1506,"/**
* Processes input string with ASCII mask.
* @param text input text to be processed
*/","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSDictionary,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSDictionary(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",342,359,"/**
* Writes a COSDictionary to the OutputStream.
* @param output OutputStream instance
* @param cosDictionary dictionary data
*/","* Write the given {@link COSDictionary} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosDictionary The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:potentiallyNotifyChanged(java.lang.Object,java.lang.Object)",161,167,"/**
* Updates user attribute mask based on entry changes.
* @param oldEntry previous entry object
* @param newEntry current entry object
*/","* Notifies the user attribute object if the user property is changed.
     * 
     * @param oldEntry old entry
     * @param newEntry new entry",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,size,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:size(),60,64,"/**
* Delegates call to map's m1() method.
* @return result of map.m1()
*/",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSObject,org.apache.pdfbox.cos.COSDictionary:getCOSObject(org.apache.pdfbox.cos.COSName),535,543,"/**
* Retrieves COSObject instance associated with given key.
* @param key unique identifier
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSObject.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,"org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1204,1212,"/**
* Tries to fetch COSBase by the given key. If first key fails, tries with the second.
* @param firstKey primary key for lookup
* @param secondKey secondary key for lookup (used if first fails)
* @return COSBase object or null if both keys fail","* This is a special case of getItem that takes multiple keys, it will handle the situation
     * where multiple keys could get the same value, ie if either CS or ColorSpace is used to get
     * the colorspace. This will get an object from this dictionary.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientsLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientsLength(),446,450,"/**
* Retrieves and returns the mask value from the recipients array in the provided dictionary.
* @return the mask value as an integer
*/","* Returns the number of recipients contained in the Recipients field of the dictionary.
     *
     * @return the number of recipients contained in the Recipients field.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientStringAt,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientStringAt(int),459,463,"/**
* Retrieves a recipient mask string from the PDF dictionary.
* @param i index of the desired mask in the recipients array
*/","* returns the COSString contained in the Recipients field at position i.
     *
     * @param i the position in the Recipients field array.
     *
     * @return a COSString object containing information about the recipient number i.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDirection(),122,130,"/**
* Returns a COSBase object representing the function mask.
* @return COSBase object or COSInteger.ZERO if not found
*/","* @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger}
     * or {@link COSName#NONE}. Default to {@link COSInteger#ZERO}
     * @see PDTransitionDirection",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getMetadataKeys,org.apache.pdfbox.pdmodel.PDDocumentInformation:getMetadataKeys(),262,270,"/**
* Retrieves a set of unique function masks from the COS data.
* @return A set of string identifiers representing function masks
*/","* This will get the keys of all metadata information fields for the document.
     *
     * @return all metadata key strings.
     * @since Apache PDFBox 1.3.0",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeNames(),58,66,"/**
* Collects attribute names from COSName hierarchy.
* @return list of attribute names
*/","* Gets the attribute names.
     * 
     * @return the attribute names",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addTrailerInfo,org.apache.pdfbox.pdfparser.PDFXRefStream:addTrailerInfo(org.apache.pdfbox.cos.COSDictionary),123,133,"/**
* Masks specified keys in the trailer dictionary.
* @param trailerDict input dictionary to filter
*/","* Copy all Trailer Information to this file.
     * 
     * @param trailerDict dictionary to be added as trailer info",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),73,77,"/**
 * Constructs and initializes a COSDictionary object by copying all entries from an existing dictionary.
 * @param dict existing COSDictionary to copy entries from
 */","* Copy Constructor. This will make a shallow copy of this dictionary.
     *
     * @param dict The dictionary to copy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isInfo,org.apache.pdfbox.pdfparser.BruteForceParser:isInfo(org.apache.pdfbox.cos.COSDictionary),743,757,"/**
* Checks if a COSDictionary contains specific metadata flags.
* @param dictionary input PDF document dictionary
* @return true if no parent, author, or destination; false otherwise
*/","* Tell if the dictionary is an info dictionary.
     * 
     * @param dictionary the dictionary to be checked
     * @return true if the given dictionary is an info dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasWidths,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasWidths(),661,664,"/**
* Checks if there are missing or invalid widths.
* @return true if widths are incorrect, false otherwise
*/","* Returns true if widths are present in the font descriptor.
     * 
     * @return true if widths are present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasMissingWidth(),671,674,"/**
* Returns true if missing width is enabled. 
* @return True if missing width is enabled, false otherwise
*/","* Returns true if the missing widths entry is present in the font descriptor.
     * 
     * @return true if the missing widths entry is present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,hasXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:hasXFA(),564,567,"/**
* Checks if mask is enabled.
* @return true if mask is enabled, false otherwise
*/","* This will tell if the AcroForm has XFA content.
     *
     * @return true if the AcroForm is an XFA form",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getBruteForceParser,org.apache.pdfbox.pdfparser.COSParser:getBruteForceParser(),923,930,"/**
* Returns an instance of BruteForceParser.
* @return BruteForceParser object or null if not initialized
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,nextXrefObj,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",152,157,"/**
* Initializes an XrefTrailerObj with the given start position and type.
* @param startBytePos starting byte position
* @param type XRefType enum value
*/","* Signals that a new XRef object (table or stream) starts.
     * @param startBytePos the offset to start at
     * @param type the type of the Xref object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(float[]),361,414,"/**
* Applies colorant-specific masking to input value.
* @param value input float array
* @return masked RGB float array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectFromPool,org.apache.pdfbox.pdfparser.BaseParser:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),263,271,"/**
* Retrieves COSBase object associated with the given COSObjectKey.
* @param key COSObjectKey identifier
* @return COSBase object or throws IOException if not found
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(java.lang.String),67,112,"/**
* Parses and coerces a string representation of a float.
* @param aFloat string to parse, may be malformed
*/","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.
     *
     * @throws IOException If aFloat is not a float.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,toString,org.apache.pdfbox.cos.COSFloat:toString(),194,198,"/**
* Returns a string representation of COSFloat mask.
*/",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,writePDF,org.apache.pdfbox.cos.COSFloat:writePDF(java.io.OutputStream),234,237,"/**
* Writes mask data to output stream.
* @param output OutputStream instance
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,toIncrement,org.apache.pdfbox.cos.COSUpdateState:toIncrement(),339,342,"/**
* Creates and returns a COSIncrement instance with updated information. 
* @param updateInfo object containing incremental data to be applied
*/","* Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on the managed {@link #updateInfo}.
     * @see COSUpdateInfo
     * @see COSIncrement",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<init>,org.apache.pdfbox.multipdf.LayerUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,71,"/**
* Initializes LayerUtility with a PDDocument instance.
* @param targetDoc PDDocument to be processed and cloned
*/","* Creates a new instance.
     * @param targetDoc the PDF document to modify",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(),91,94,"/**
 * Initializes a new instance of the DefaultResourceCache with default settings.
 */",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,create,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:create(),47,51,"/**
* Creates a default resource cache instance with stability enabled.
* @return DefaultResourceCache object with specified properties.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isNeedToBeUpdated,org.apache.pdfbox.pdfwriter.COSWriter:isNeedToBeUpdated(org.apache.pdfbox.cos.COSBase),613,620,"/**
* Recursively checks if update info is present.
* @param base COS object to check
* @return true if update info is found, false otherwise
*/","* Convenience method, so that we get false for types that can't be updated.
     * 
     * @param base
     * @return",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(int),620,627,"/**
* Validates and processes MCID value.
* @param mcid unique identifier to process
*/","* Appends a marked-content sequence kid.
     * 
     * @param mcid the marked-content id (MCID).
     * @throws IllegalArgumentException if the mcid is negative.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,getCOSBase,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:getCOSBase(),69,72,"/**
* Returns the mask value as a COS integer with 1 degree. 
* @return COSInteger object representing the mask value",* @return the value for this direction,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromInt,org.apache.pdfbox.pdfwriter.COSWriter:visitFromInt(org.apache.pdfbox.cos.COSInteger),1356,1360,"/**
* Applies mask function to COSInteger object.
* @param obj COSInteger object to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSInteger,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSInteger(java.io.OutputStream,org.apache.pdfbox.cos.COSInteger)",282,286,"/**
* Writes a mask to the OutputStream using COSInteger and formatting.
* @param output OutputStream where the mask will be written
* @param cosInteger COSInteger object containing mask data
*/","* Write the given {@link COSInteger} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosInteger The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:hasExplicitWidth(int),479,483,"/**
* Calls descendant font initialization with given code.
* @param code int identifier
* @return true if initialized successfully, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes formatted comment to output stream, throwing exception if it contains newline characters.
* @param comment input string to be written
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDFormContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes ASCII-formatted comment with mask to output stream.
* @param comment user-provided comment string
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPageContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes ASCII-formatted comment with newline protection to output stream.
* @param comment input string to be written
* @throws IOException on write error
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPatternContentStream:addComment(java.lang.String),1422,1431,"/**
* Writes ASCII-formatted comment to output stream, enforcing no newline.
* @param comment string comment to write
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int)",42,45,"/**
 * Constructs a COSObjectKey with default version (-1).
 * @param num object number
 * @param gen generation
 */","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),73,86,"/**
* Calculates a value based on the provided XReferenceEntry and internal state.
* @param xReferenceEntry XReferenceEntry object to consider
* @return calculated value or -1/-1 if invalid input
*/","* Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer
     * as this object is less than, equal to, or greater than the specified object.
     *
     * @param xReferenceEntry the object to be compared.
     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than
     * the specified object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:getRaster(int,int,int,int)",170,302,"/**
* Creates a raster with a mask based on the given coordinates and size.
* @param x left coordinate
* @param y top coordinate
* @param w width
* @param h height
* @return Raster object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXScale,org.apache.pdfbox.text.TextPosition:getXScale(),534,537,"/**
* Returns the first element of the text matrix.
*/","* This will get the X scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The X scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYScale,org.apache.pdfbox.text.TextPosition:getYScale(),546,549,"/**
* Returns the first element of the text matrix.
* @return First value in textMatrix, cast to float.","* This will get the Y scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The Y scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",248,253,"/**
* Initializes COSWriter with output stream and compression parameters.
* @param outputStream the output stream to write compressed data
* @param compressParameters compression settings for the writer
*/","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.
     * @param compressParameters The configuration for the document's compression.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead)",265,275,"/**
* Initializes COSWriter with OutputStream and RandomAccessRead.
* @param outputStream stream to write to
* @param inputData source data for writing
*/","* COSWriter constructor for incremental updates. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(byte[]),63,67,"/**
* Calls m1 with entire array and offset of 0.
* @param b byte array to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getListOfByteArraysFromCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray),627,638,"/**
* Extracts masked string values from the input COSArray.
* @param array COSArray containing string objects
* @return List of byte arrays or empty list if none found
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(boolean),233,239,"/**
* Updates internal flag indicating whether data has been modified.
* @param updated true if data was updated, false otherwise
*/","* Sets the {@link #updated} state of the managed {@link #updateInfo} to the given state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @param updated The state to set for {@link #updated}.
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getString,org.apache.pdfbox.cos.COSString:getString(),210,229,"/**
* Extracts and decodes masked text from byte array.
* @return decoded string or null if not found
*/","* Returns the content of this string as a PDF <i>text string</i>.
     * 
     * @return the PDF string representation of the COSString",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(java.lang.String,boolean)",99,127,"/**
* Initializes COSString with the given text and forceHex flag.
* @param text string to encode
* @param forceHex whether to use hex encoding if possible
*/","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDFont:isStandard14(),619,631,"/**
* Evaluates font mask based on conditions.
* @return true if valid, false otherwise
*/","* Returns true if this font is one of the ""Standard 14"" fonts and receives special handling.
     * 
     * @return true if this font is one of the ""Standard 14"" fonts",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,"org.apache.pdfbox.filter.ASCII85InputStream:read(byte[],int,int)",179,203,"/**
* Reads bytes from internal buffer or file into provided array.
* @param data target byte array
* @param offset starting index in the array
* @param len number of bytes to read
* @return actual number of bytes written or -1 on error
*/","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param len The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,decode,"org.apache.pdfbox.filter.ASCII85Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",31,41,"/**
* Decodes stream data using FUNC_MASK algorithm.
* @param encoded input stream with encoded data
* @param decoded output stream for decoded data
* @param parameters COSDictionary containing algorithm parameters
* @return DecodeResult object indicating decoding success
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,close,org.apache.pdfbox.filter.ASCII85OutputStream:close(),233,245,"/**
* Calls parent method and local operation, ensuring cleanup on failure or completion. 
* @throws IOException if an I/O error occurs during execution
*/","* This will close the stream.
     *
     * @throws IOException If there is an error closing the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRun,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree),374,400,"/**
* Calculates Huffman RLE stream mask value.
* @param tree Tree object containing node data
* @return total mask value or throws IOException if unknown code encountered
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:close(),1550,1558,"/**
* Handles output stream and logs warning for unended text mode.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDFormContentStream:close(),1550,1558,"/**
* Writes output to stream and logs potential text mode issue.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPageContentStream:close(),1550,1558,"/**
* Ensures output stream is flushed when in text mode.
* Warns about missing endText() calls and flushes output.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPatternContentStream:close(),1550,1558,"/**
* Writes output to stream and logs warning if text mode was used without endText(). 
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeRun,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeRun(int,boolean)",149,165,"/**
* Generates mask code for run of pixels.
* @param runLength length of pixel run
* @param white true if run is white, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeEOL,org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeEOL(),255,257,"/**
 * Applies mask to input data (m1) for bits 1-12.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,readImageRaster,"org.apache.pdfbox.filter.DCTFilter:readImageRaster(javax.imageio.ImageReader,javax.imageio.ImageReadParam)",136,172,"/**
* Retrieves a Raster object from the specified ImageReader.
* @param reader ImageReader instance
* @param irp ImageReadParam for image processing
* @return Raster data or null on failure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,org.apache.pdfbox.filter.FlateFilterDecoderStream:read(),125,137,"/**
* Fetches the next byte from the encoded data stream.
* @return Byte value or -1 if at EOF or invalid data
*/","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,"org.apache.pdfbox.filter.FlateFilterDecoderStream:read(byte[],int,int)",150,175,"/**
* Reads and decodes specified number of bytes from input stream.
* @param data input byte array
* @param offset starting index in the array
* @param length number of bytes to read
* @return actual number of bytes read, or -1 if at end-of-file
*/","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param length The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,readImageStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:readImageStream(java.io.InputStream),444,448,"/**
* Reads image data from input stream and performs image processing.
* @param stream InputStream containing image data
*/","* Read the image stream of the signature and set height and width.
     *
     * @param stream stream of your visible signature image
     * @throws IOException If we can't read, flush, or close stream of image",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,doLZWDecode,"org.apache.pdfbox.filter.LZWFilter:doLZWDecode(java.io.InputStream,java.io.OutputStream,boolean)",74,128,"/**
* Decompresses encoded data from InputStream to OutputStream.
* @param encoded input stream with compressed data
* @param decoded output stream for decompressed data
* @param earlyChange whether to apply early change optimization
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,encode,"org.apache.pdfbox.filter.LZWFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,220,"/**
* Encodes input stream into output stream using a dynamic code table.
* @param rawData input data to encode
* @param encoded output stream for encoded data
* @param parameters COSDictionary containing encoding parameters
*/",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodeAndWriteRow,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:decodeAndWriteRow(),329,334,"/**
* Performs various image processing operations including prediction and output.
* @throws IOException if I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,chooseDataRowToWrite,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:chooseDataRowToWrite(),631,659,"/**
* Selects the compression method that yields the smallest estimated compressed sum.
* @return byte array for selected compression method
*/","* We look which row encoding is the ""best"" one, ie. has the lowest sum. We don't implement
         * anything fancier to choose the right row encoding. This is just the recommend algorithm
         * in the spec. The get the perfect encoding you would need to do a brute force check how
         * all the different encoded rows compress in the zip stream together. You have would have
         * to check 5*image-height permutations...
         *
         * @return the ""best"" row encoding of the row encodings",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver:reset(),362,370,"/**
* Iterates through XrefTrailer objects, executes their methods and resets current/resolved references.
*/","* Reset all data so that it can be used to rebuild the trailer.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<init>(),44,53,"/**
* Initializes security handler factory with default handlers.
* Registers standard and public key security handlers.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,close,org.apache.pdfbox.multipdf.Overlay:close(),170,203,"/**
* Invokes m1() on various overlays and documents, then calls m2() methods.
*/","* Close all input documents which were used for the overlay and opened by this class.
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,closeTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:closeTemplate(org.apache.pdfbox.pdmodel.PDDocument),401,406,"/**
* Applies mask functionality to the provided PDDocument.
* @param template PDDocument instance to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,next,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:next(),53,69,"/**
* Returns the current outline item with mask applied, 
* navigating to next sibling if necessary.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream),67,71,"/**
 * Constructs a new PDFormXObject instance from a given PDF stream.","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(org.apache.pdfbox.contentstream.PDContentStream),58,61,"/**
* Initializes the parser with contents from the specified PD content stream.
* @param pdContentstream PDContentStream object containing document data
*/","* Constructor.
     *
     * @param pdContentstream The content stream to parse.
     * @throws IOException If there is an error initializing the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(byte[]),68,71,"/**
 * Initializes PDF parser with byte array data.
 * @param bytes input byte array containing PDF document
 */","* Constructor.
     *
     * @param bytes the bytes to parse.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseObject,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseObject(long),83,112,"/**
* Fetches a COSBase object by ID, positioning the underlying source stream.
* @param objectNumber unique COSBase identifier
* @return COSBase object or null if not found
*/","* Search for/parse the object with the given object number. The stream is closed after parsing the object with the
     * given number.
     * 
     * @param objectNumber the number of the object to b e parsed
     * @return the parsed object or null if the object with the given number can't be found
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,readObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:readObjectNumbers(),220,233,"/**
* Retrieves a mapping of object IDs to their corresponding mask values.
* @return A map of Long (object ID) to Integer (mask value), or null if failed
*/","* Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers.
     * 
     * @return a map off all object numbers and the corresponding offset within the object stream.
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:<init>(java.util.Map),35,38,"/**
* Initializes BuiltInEncoding with a map of encoding codes to names.
* @param codeToName mapping of encoding IDs to their corresponding names
*/","* Constructor.
     *
     * @param codeToName the given code to name mapping",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,fromFontBox,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:fromFontBox(org.apache.fontbox.encoding.Encoding),36,43,"/**
* Encodes function mask for a given Type 1 font Encoding.
* @param encoding input encoding instance
* @return encoded function mask as Type1Encoding object
*/","* Creates an encoding from the given FontBox encoding.
     *
     * @param encoding FontBox encoding
     * @return the encoding created from the given FontBox encoding",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipWhiteSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipWhiteSpaces(),409,425,"/**
* Skips whitespace and consumes the first non-whitespace character.
*/","* Skip the upcoming CRLF or LF which are supposed to follow a stream. Trailing spaces are removed as well.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(),434,443,"/**
* Validates data by recursively calling m2 on nested objects.
* @throws IOException on validation failure
*/","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLine,org.apache.pdfbox.pdfparser.BaseParser:readLine(),1162,1188,"/**
* Extracts and formats a specific mask from the input stream.
* @throws IOException on parsing errors or end-of-file
*/","* This will read bytes until the first end of line marker occurs.
     * NOTE: The EOL marker may consists of 1 (CR or LF) or 2 (CR and CL) bytes
     * which is an important detail if one wants to unread the line.
     *
     * @return The characters between the current position and the end of the line.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipSpaces(),1319,1343,"/**
* Skips non-mask characters and sets mask flag.
* @throws IOException on I/O error
*/","* This will skip all spaces and comments that are present.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getNumberOfColorComponents(),115,124,"/**
* Returns the number of color components, initializing if not already set.
* @return int representing color component count
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getNumberOfColorComponents(),115,124,"/**
* Returns the number of color components.
* @return int representing component count, or -1 if unknown
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRef,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRef(long),227,269,"/**
* Calculates the offset for xref data based on the provided xrefOffset.
* @param xrefOffset input xref offset
* @return calculated offset or -1 if not found
*/","* Search for the offset of the given xref table/stream among those found by a brute force search.
     * 
     * @param xrefOffset the given offset to be searched for
     * 
     * @return the offset of the xref entry
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parsePDFHeader,org.apache.pdfbox.pdfparser.COSParser:parsePDFHeader(),1058,1061,"/**
* Returns a flag indicating whether to mask function names.
* @return true if masking is enabled, false otherwise
*/","* Parse the header of a pdf.
     * 
     * @return true if a PDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFDFHeader,org.apache.pdfbox.pdfparser.COSParser:parseFDFHeader(),1069,1072,"/**
* Returns true if the function mask is set in the PDF file header.
* @throws IOException if an I/O error occurs while reading the header
*/","* Parse the header of a fdf.
     * 
     * @return true if a FDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseAllObjects,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseAllObjects(),120,172,"/**
* Fetches a map of COS objects by processing object numbers and adjusting source position.
* @return Map of COSObjectKey to COSBase or empty if no objects found
*/","* Parse all compressed objects. The stream is closed after parsing.
     * 
     * @return a map containing all parsed objects using the object number as key
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeStreamData,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeStreamData(java.io.OutputStream,int[])",236,250,"/**
* Writes mask data to OutputStream using provided weights.
* @param os OutputStream instance
* @param w array of three weight values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefRange,"org.apache.pdfbox.pdfwriter.COSWriter:writeXrefRange(long,long)",987,993,"/**
* Writes masked user ID and space, followed by target ID to output stream.
* @param x user ID
* @param y target ID
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,next,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:next(),91,100,"/**
* Returns a mask field from the queue.
* @throws NoSuchElementException if m1() returns false
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,calcFinalKey,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:calcFinalKey(long,long)",247,273,"/**
* Generates a masked encryption key from the object number and generation number.
* @param objectNumber unique identifier for the object
* @param genNumber generation number of the object
* @return byte array representing the masked encryption key
*/","* Calculate the key to be used for RC4 and AES-128.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @return the calculated key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev234(byte[],byte[],int,byte[],boolean,int,int)",737,778,"/**
* Computes a masked password hash.
* @param password input password
* @param o unknown data to include in the hash
* @param permissions encryption permissions
* @param id unique identifier
* @return hashed byte array
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRC4key,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRC4key(byte[],int,int)",948,966,"/**
* Generates RC4 key from owner password and encryption revision.
* @param ownerPassword password to derive the key from
* @param encRevision encryption version (3 or 4)
* @param length desired key length
* @return byte array representing the derived RC4 key",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeSHA256,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeSHA256(byte[],byte[],byte[])",1199,1205,"/**
* Computes masked result using user-specific key and password.
* @param input data to be processed
* @param password secret key for encryption
* @param userKey unique identifier for each user
* @return byte array representing the masked result
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",71,74,"/**
* Initializes content stream with given appearance and output stream.
* @param appearance PDAppearanceStream object
* @param outputStream target output stream
*/","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to add to.
     * @param outputStream
     *            The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",221,224,"/**
* Initializes a new page content stream object.
* @param doc the parent document
* @param appearance the associated appearance stream
* @param outputStream output stream for writing contents
*/","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the appearance is part of.
     * @param appearance The appearance stream to add to.
     * @param outputStream The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformedPoint,"org.apache.pdfbox.contentstream.PDFStreamEngine:transformedPoint(float,float)",1123,1129,"/**
* Calculates and returns a Point2D with position (x, y) after applying transformation pipeline.
* @param x horizontal coordinate
* @param y vertical coordinate
* @return transformed point or null if error occurs
*/","* Transforms a point using the CTM.
     * 
     * @param x the x-coordinate of the point to be transformed
     * @param y the y-coordinate of the point to be transformed
     * 
     * @return the transformed point",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,createContext,"org.apache.pdfbox.rendering.TilingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",109,122,"/**
* Applies transformation to the painting context.
* @param cm ColorModel object
* @return PaintContext object (result of internal call)
*/","* Not called in TexturePaint subclasses, which is why we wrap TexturePaint.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix),227,230,"/**
* Updates the 'single' value using the given matrix and function m2.
* @param matrix input Matrix object
*/","* Concatenates (premultiplies) the given matrix to this matrix.
     *
     * @param matrix The matrix to concatenate.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,"org.apache.pdfbox.util.Matrix:translate(float,float)",248,254,"/**
* Updates the single array with masked values and applies transformation.
* @param tx x-coordinate of transformation
* @param ty y-coordinate of transformation
*/","* Translates this matrix by the given amount.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,scale,"org.apache.pdfbox.util.Matrix:scale(float,float)",262,271,"/**
* Scales the single array by factors sx and sy.
* @param sx horizontal scaling factor
* @param sy vertical scaling factor
*/","* Scales this matrix by the given factors.
     *
     * @param sx x-scale
     * @param sy y-scale",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,multiply,org.apache.pdfbox.util.Matrix:multiply(org.apache.pdfbox.util.Matrix),290,293,"/**
* Creates a mask matrix by applying m2(m1(single, other.single)) operation.
* @param other input matrix to be masked
*/","* This method multiplies this Matrix with the specified other Matrix, storing the product in a 
     * new instance. It is allowed to have (other == this).
     *
     * @param other the second operand Matrix in the multiplication; required
     * @return the product of the two matrices.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,encodeForGsub,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:encodeForGsub(org.apache.fontbox.ttf.gsub.GsubWorker,java.util.Set,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1683,1700,"/**
* Generates mask data for the given text and glyphs.
* @param gsubWorker GSUB worker object
* @param glyphIds set of glyph IDs to include in the mask
* @param font PDType0Font object for character rendering
* @param text input string to process
* @return byte array containing generated mask data or null on error
*/","* Retrieve the encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules. The glyph IDs used are also added to the specified glyph ID set.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param glyphIds The set of glyph IDs which is to be populated with the glyph IDs found in the
     * text.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param text The text which is being converted from characters to glyph IDs.
     * @return The encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules.
     * @throws IOException If there is an error during encoding.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,createDocument,org.apache.pdfbox.pdfparser.PDFParser:createDocument(),194,197,"/**
* Creates a PDDocument instance with mask applied.
* @return PDDocument object
*/","* Create the resulting document. Maybe overwritten if the parser uses another class as document.
     * 
     * @return the resulting document
     * @throws IOException if the method is called before parsing the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",213,216,"/**
 * Constructs a new PDDocument instance from a COS document and input stream.
 * @param doc COS document containing PDF data
 * @param source input stream to read from
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,44,"/**
* Performs bitwise mask operation using two operands.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:isEqual(java.lang.Object,java.lang.Object)",135,140,"/**
* Inverts the result of the superclass's comparison.
* @param op1 first object to compare
* @param op2 second object to compare
* @return true if not equal (superclass result inverted)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForPolicy,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),84,95,"/**
* Resolves ProtectionPolicy to corresponding SecurityHandler instance.
* @param policy ProtectionPolicy object
* @return SecurityHandler instance or null if not found
*/","* Returns a new security handler for the given protection policy, or null none is available.
     * @param policy the protection policy for which to create a security handler
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForFilter,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForFilter(java.lang.String),102,113,"/**
* Creates a SecurityHandler instance by name.
* @param name unique handler identifier
* @return SecurityHandler instance or null if not found
*/","* Returns a new security handler for the given Filter name, or null none is available.
     * @param name the Filter name from the PDF encryption dictionary
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getNumber,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:getNumber(int,java.lang.String)",343,365,"/**
* Generates mask for page index based on specified style.
* @param pageIndex current page index
* @param style one of PDPageLabelRange constants (e.g. STYLE_DECIMAL)
* @return formatted string or null if invalid style
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getDashArray,org.apache.pdfbox.rendering.PageDrawer:getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),758,791,"/**
* Validates and transforms a PDLineDashPattern's array of line widths.
* @param dashPattern input pattern object
* @return transformed array or null if invalid
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<init>(),54,56,"/**
* Constructs a new CMYK device.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<init>(),38,40,"/**
* Initializes an empty PDDeviceGray instance.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<init>(),39,41,"/**
* Initializes an empty PDDeviceRGB object.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),88,100,"/**
* Validates a PDColor object by checking its components.
* @param color the color to validate
* @return true if valid, false otherwise
*/","* Set the stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),148,160,"/**
* Checks if a PDColor object has valid components.
* @param color PDColor object to check
* @return true if the color has valid data, false otherwise
*/","* Set the non stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the non stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setNonStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getPatchCoordinatesColor,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",167,216,"/**
* Computes a 2D color component mask by intersecting two cubic Bezier curves and their derivatives.
* @param c1 first curve
* @param c2 second curve
* @param d1 derivative of first curve
* @param d2 derivative of second curve
* @return 2D array of CoordinateColorPair objects representing the intersection mask
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getPatchCoordinatesColor,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getPatchCoordinatesColor(),212,255,"/**
* Generates a 2D array of CoordinateColorPairs representing the color and position of each pixel in a Bezier surface patch.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getSaturationRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getSaturationRGB(float[],float[],float[])",286,350,"/**
* Calculates and stores the color values of a pixel in the given result array.
* @param srcValues source pixel values
* @param dstValues destination pixel values (used for scaling)
* @param result output pixel values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getLuminosityRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getLuminosityRGB(float[],float[],float[])",352,388,"/**
* Applies color correction to the source image and stores the result in dstValues.
* @param srcValues input RGB values
* @param dstValues output RGB values
* @param result corrected RGB values as floats (0-1 range)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,48,"/**
* Evaluates a mask expression based on numeric value type.
* @param context ExecutionContext object containing data and operations
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),55,77,"/**
* Calculates and stores the sum of two numbers in execution context.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,115,"/**
* Applies mask operation to ExecutionContext.
* @param context target ExecutionContext
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),135,140,"/**
* Applies mask to EXECUTION_CONTEXT using NUMBER value.
* @param context ExecutionContext object to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),147,152,"/**
* Applies mask to ExecutionContext using values from m1() and m3(). 
* @param context ExecutionContext object with necessary data 
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),159,165,"/**
* Updates masked value in ExecutionContext.
* @param context execution context to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),172,179,"/**
* Calculates and applies mask to ExecutionContext.
* @param context ExecutionContext instance
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),186,198,"/**
* Applies mask operation to ExecutionContext.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),218,223,"/**
* Applies mask operation on ExecutionContext.
* @param context ExecutionContext object to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),230,235,"/**
* Performs mask operation on ExecutionContext.
* @param context execution context to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),255,277,"/**
* Performs bitwise AND operation on two integers or multiplies them if not integers.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),284,304,"/**
* Negates and updates mask value in ExecutionContext.
* @param context execution context to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),311,323,"/**
* Applies mask operation on ExecutionContext.
* @param context execution context containing numeric data
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),359,382,"/**
* Performs bitwise mask operation on two integers or floats.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),389,401,"/**
* Applies mask to ExecutionContext based on numeric value.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),205,211,"/**
* Calculates and updates mask value in execution context.
* @param context ExecutionContext object containing input values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),242,248,"/**
* Computes and applies mask value using modulo operation.
* @param context ExecutionContext object containing input values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),84,96,"/**
* Calculates and sets the functional mask angle in the ExecutionContext.
* @param context execution context containing input values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),122,128,"/**
* Updates mask with cosine of user-defined angle.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),330,336,"/**
* Calculates and applies mask value based on input angle.
* @param context ExecutionContext object containing input values
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),343,352,"/**
* Applies mask operation on ExecutionContext.
* @param context ExecutionContext object
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.String),75,105,"/**
* Processes token as part of instruction sequence.
* @param token input string to process
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextChar(),148,159,"/**
* Fetches and returns a character from the input stream, 
* applying mask function based on predicate result.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextState,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextState(),173,195,"/**
* Determines the current parser state based on the next character.
* @return The new parser state (NEWLINE, WHITESPACE, COMMENT, or TOKEN)",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<init>(),60,68,"/**
* Initializes the MacOS Roman Encoding with predefined table entries.
*/",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,xobject,org.apache.pdfbox.text.PDFMarkedContentExtractor:xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject),141,147,"/**
* Applies mask to PDXObject, updating marked contents if necessary.
* @param xobject object to apply mask to
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getOwnerAccessPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getOwnerAccessPermission(),153,165,"/**
* Initializes and returns a new AccessPermission object with all permissions enabled.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,isOwnerPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:isOwnerPermission(),134,145,"/**
* Evaluates a composite mask condition by combining the results of eight individual boolean methods.
*/","* This will tell if the access permission corresponds to owner
     * access permission (no restriction).
     *
     * @return true if the access permission does not restrict the use of the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,hasAnyRevision3PermissionSet,org.apache.pdfbox.pdmodel.encryption.AccessPermission:hasAnyRevision3PermissionSet(),448,463,"/**
* Evaluates multiple conditions and returns true if any condition is met.
* @return True if at least one condition is satisfied, false otherwise
*/","* Indicates if any revision 3 access permission is set or not.
     * 
     * @return true if any revision 3 access permission is set",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,prepareAESInitializationVector,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",403,428,"/**
* Encrypts or decrypts data using AES, writing IV to output stream.
* @param decrypt whether to encrypt (false) or decrypt (true)
* @param iv initialization vector
* @param data input data stream
* @param output output stream for IV
* @return true on success, false if decryption failed",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],java.io.OutputStream)",123,129,"/**
* Recursively writes each byte of input data to the specified OutputStream.
* @param data array of bytes to process
* @param output target stream to write to
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],int,int,java.io.OutputStream)",159,165,"/**
* Writes a subset of bytes to the specified OutputStream.
* @param data byte array containing data to write
* @param offset starting index within data array
* @param len number of bytes to write
* @param output OutputStream to write data to
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param offset The offset into the array to start reading data from.
     * @param len The number of bytes to attempt to read.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,insertDiacritic,"org.apache.pdfbox.text.TextPosition:insertDiacritic(int,org.apache.pdfbox.text.TextPosition)",754,785,"/**
* Updates Unicode string and glyph widths for a given range, incorporating diacritical marks.
* @param i start index of the range
* @param diacritic TextPosition object to apply diacritical mark
*/","* Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths
     * array to include the extra character width.
     *
     * @param i current character
     * @param diacritic The diacritic TextPosition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrep,"org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrep(java.lang.String,boolean)",71,138,"/**
* Normalizes and sanitizes input string by removing unwanted characters.
* @param str input string to process
* @param allowUnassigned true if unassigned characters are allowed, false otherwise
* @return sanitized string or throws exception on error
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientInfo(java.security.cert.X509Certificate,byte[])",523,556,"/**
* Decrypts and returns key-transport recipient info for a given X509 certificate.
* @param x509certificate the input certificate
* @param abyte0 encrypted data to decrypt
* @return KeyTransRecipientInfo object or throws exceptions if decryption fails
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2B,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2B(byte[],byte[],byte[])",1125,1197,"/**
* Computes a masked hash of the input data using the provided password and user key.
* @param input arbitrary input bytes
* @param password secret password bytes
* @param userKey optional user-specific key bytes (may be null)
* @return the computed mask byte array (max length 32)",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,"org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String,java.util.List)",834,837,"/**
 * Invokes recursive processing of text positions based on provided text.
 * @param text input text to process
 * @param textPositions list of text positions to iterate over
 */","* Write a Java string to the output stream. The default implementation will ignore the <code>textPositions</code>
     * and just calls {@link #writeString(String)}.
     *
     * @param text The text to write to the stream.
     * @param textPositions The TextPositions belonging to the text.
     * @throws IOException If there is an error when writing the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getTrueTypeFont(java.lang.String,java.io.File)",201,214,"/**
* Loads TrueTypeFont by post script name and file path.
* @param postScriptName the font's PostScript name
* @param file the file containing the font data
* @return loaded TrueTypeFont or null on failure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getDiskCacheFile,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:getDiskCacheFile(),388,400,"/**
* Returns the cache directory for PDFBox fonts.
* @return File object representing the cache directory
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,createFontInfoByName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:createFontInfoByName(java.util.List),172,183,"/**
* Merges a list of FontInfo objects into a map by family name.
* @param fontInfoList list of FontInfo objects
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Line:<init>(java.awt.Point,java.awt.Point,float[],float[])",45,52,"/**
* Initializes a new line segment with two points and their corresponding colors.
* @param p0 starting point of the line
* @param p1 ending point of the line
* @param c0 color at the start of the line
* @param c1 color at the end of the line
*/","* Constructor of class Line.
     *
     * @param p0 one end of a line
     * @param p1 the other end of the line
     * @param c0 color of point p0
     * @param c1 color of point p1",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:toString(),195,199,"/**
* Concatenates superclass result with additional metadata.
* @return combined string or null if superclass returns null 
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<init>(),59,134,"/**
* Initializes font mapping for standard fonts and alternative names.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getStandard14Width(int),339,368,"/**
* Calculates font function mask value based on AFM data.
* @param code glyph code
* @return float mask value or 250f if glyph is not defined
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPathFromOutlines(int),571,579,"/**
* Retrieves the CFF font glyph by code.
* @param code unique glyph identifier
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1CFont:codeToName(int),278,281,"/**
* Generates mask value based on input code.
* @param code integer to process
* @return processed string representation
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(int),656,660,"/**
* Checks if a font mask is valid based on the provided code.
* @param code font mask code to validate
* @return true if valid, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToGID(int),377,392,"/**
* Calculates functional mask by processing input code.
* @param code input code to be processed
* @return calculated mask value or cid if cidFont is null
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getHeight(int),443,459,"/**
* Retrieves the glyph height for a given font code.
* @param code unique font identifier
* @return glyph height as a float value or throws IOException if an error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask:<init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",72,99,"/**
* Initializes SoftMask with provided parameters.
* @param paint the Paint object
* @param mask the BufferedImage mask
* @param bboxDevice the device bounding box
* @param backdropColor the background color (optional)
* @param transferFunction the transfer function (identity if null) 
*/","* Creates a new soft mask paint.
     *
     * @param paint underlying paint.
     * @param mask soft mask
     * @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space
     * @param backdropColor the color to be used outside the transparency group’s bounding box; if
     * null, black will be used.
     * @param transferFunction the transfer function, may be null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,equals,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:equals(java.lang.Object),95,145,"/**
* Compares two TilingPaintParameter objects for equality.
* @param obj object to compare with
* @return true if objects are equal, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,removeBackdrop,"org.apache.pdfbox.rendering.GroupGraphics:removeBackdrop(java.awt.image.BufferedImage,int,int)",600,717,"/**
* Blends a backdrop image into a group image at specified offsets.
* @param backdrop the backdrop image to blend
* @param offsetX horizontal offset from group origin
* @param offsetY vertical offset from group origin
*/","* Computes backdrop removal.
     * The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008
     * standard. It returns the final color <code>C</code> for each pixel in the group:<br>
     *     <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br>
     * where<br>
     *     <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br>
     *     <code>C0</code> is the backdrop color,<br>
     *     <code>alpha0</code> is the backdrop alpha,<br>
     *     <code>alphagn</code> is the group alpha excluding backdrop (read the
     *           alpha channel from <code>groupAlphaImage</code>)<br>
     * <p>
     * The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha
     * channel of <code>groupAlphaImage</code>.
     * <p>
     * The <code>backdrop</code> image may be much larger than <code>groupImage</code> if,
     * for example, the current page is used as the backdrop. Only a specific rectangular
     * region of <code>backdrop</code> is used in the backdrop removal: upper-left corner
     * is at <code>(offsetX, offsetY)</code>; width and height are equal to those of
     * <code>groupImage</code>.
     *
     * @param backdrop group backdrop
     * @param offsetX backdrop left X coordinate
     * @param offsetY backdrop upper Y coordinate",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,hasFontOrSizeChanged,"org.apache.pdfbox.text.PDFTextStripper:hasFontOrSizeChanged(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",730,760,"/**
* Checks for a functional mask change between two text positions.
* @param current current TextPosition
* @param last previous TextPosition
* @return true if the font or style has changed, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(java.lang.String),158,179,"/**
* Generates a GeneralPath for the given font name.
* @param name unique font identifier
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getAFM,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getAFM(java.lang.String),178,205,"/**
* Retrieves FontMetrics for the specified font name, loading from cache or resource file if necessary.
* @param fontName unique font identifier
* @return FontMetrics object or null if not found
*/","* Returns the metrics for font specified by fontName. Loads the font metrics if not already
     * loaded.
     *
     * @param fontName name of font; either a base name or alias
     * @return the font metrics or null if the name is not one of the known names
     * @throws IllegalArgumentException if no metrics exist for that font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowCIDToUnicodeRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowCIDToUnicodeRange(java.util.Map$Entry,java.util.Map$Entry)",186,195,"/**
* Checks if two map entries have matching function masks.
* @param prev first map entry
* @param next second map entry
* @return true if both entries have the same mask, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,subset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:subset(),300,352,"/**
* Subsets the TTF font based on provided code points and glyph IDs.
* @throws IOException if font subsetting is not permitted
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(java.io.InputStream,int)",100,105,"/**
* Initializes and loads a glyph list from an input stream.
* @param input InputStream containing glyph data
* @param numberOfEntries expected number of entries in the list
*/","* Creates a new GlyphList from a glyph list file.
     *
     * @param numberOfEntries number of expected values used to preallocate the correct amount of memory
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)",114,119,"/**
* Copies and loads glyphs from existing list into a new GlyphList instance.
* @param glyphList existing GlyphList to copy
* @param input InputStream containing glyph data
*/","* Creates a new GlyphList from multiple glyph list files.
     *
     * @param glyphList an existing glyph list to be copied
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:codeToGID(int),607,710,"/**
* Retrieves glyph ID by code, using various encoding and cmap strategies.
* @param code unique character code
* @return Glyph ID or 0 if not found
*/","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID (glyph index)
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNameInFont(java.lang.String),469,489,"/**
* Retrieves a font glyph name by inputting the original string and applying mask rules.
* @param name input string to be masked
*/","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getNameInFont(java.lang.String),571,614,"/**
* Resolves font glyph name using alternative names and Unicode mappings.
* @param name original font glyph name
* @return resolved font glyph name or "".notdef"" if not found
*/","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,init,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:init(),63,95,"/**
* Initializes color profile and conversion settings.
* @throws IOException if default CMYK profile cannot be loaded
*/","* Lazy load the ICC profile, because it's slow.
     * 
     * @throws IOException if the ICC profile could not be initialized",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toRGB(float[]),280,297,"/**
* Transforms input color array based on current color space.
* @param value input color array
* @return transformed color array or original if RGB mode
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getDefaultDecode(int),357,375,"/**
* Decodes color components from AWT color space or alternate.
* @param bitsPerComponent number of bits per component
* @return array of decoded color components (red, green, blue)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toString(),547,551,"/**
* Returns string representation of functional mask.
* @return JSON-formatted string with component count and type information.",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getDefaultDecode(int),57,68,"/**
* Computes and returns an array of float values for the given color space.
* @param bitsPerComponent number of bits per component in the color space
* @return array of float values representing the color space, or null if invalid
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,encodeImageToJPEGStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int)",351,384,"/**
* Generates a JPEG image from the given BufferedImage with specified quality and DPI.
* @param image input BufferedImage
* @param quality image compression quality (0-1)
* @param dpi dots per inch for the resulting image
* @return compressed image data as byte array or null on failure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,applyMask,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,boolean,float[])",613,723,"/**
* Resizes and blends input image with mask.
* @param image original image
* @param mask overlay mask
* @param interpolateMask whether to interpolate missing pixel values in mask
* @param isSoft whether to apply soft blending or hard masking
* @param matte color correction matrix (null for no correction)
*/","* @param image The image to apply the mask to as alpha channel.
     * @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to
     * {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special
     * handling of DeviceGray.
     * @param interpolateMask interpolation flag of the mask image.
     * @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted
     * by this method.
     * @param matte an optional RGB matte if a soft mask.
     * @return an ARGB image (can be the altered original image)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkChunkSane,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkChunkSane(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk),654,681,"/**
* Validates a Chunk object by checking its CRC and bounds.
* @param chunk Chunk object to validate
* @return true if valid, false otherwise
*/","* Check if the chunk is sane, i.e. CRC matches and offsets and lengths in the
     * byte array",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:<init>(java.awt.geom.Point2D[],int)",40,45,"/**
* Initializes a cubic Bezier curve with specified control points and level.
* @param ctrlPnts array of Point2D objects representing the curve's control points
* @param l the level of detail for the curve
*/","* Constructor of CubicBezierCurve
     *
     * @param ctrlPnts 4 control points [p0, p1, p2, p3]
     * @param l dividing level, if l = 0, one cubic Bezier curve is divided
     * into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into
     * 2^n segments",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Computes bounding box of a FUNC_MASK shape.
* @param xform Affine transformation
* @param matrix Matrix data
* @return Bounding box rectangle or empty rectangle if not found
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Computes the bounding rectangle of all shaded triangles transformed by the given affine transform and matrix.
* @param xform affine transformation
* @param matrix 4x4 transformation matrix
* @return Bounding rectangle or empty rectangle if no triangles found
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,contains,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:contains(java.awt.geom.Point2D),156,197,"/**
* Evaluates point p within a polygon based on degree and corners.
* @param p Point2D to test
*/","* Whether a point is contained in this ShadedTriangle.
     *
     * @param p the target point
     * @return false if p is outside of this triangle, otherwise true",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcColor,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcColor(java.awt.geom.Point2D),232,265,"/**
* Calculates the color at a given point based on degree of interpolation.
* @param p Point2D object representing the point
*/","* Calculate the color of a point.
     *
     * @param p the target point
     * @return an array denotes the point's color",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.GeneralPath),587,590,"/**
* Converts GeneralPath to Path2D and processes it.
* @param path GeneralPath object to convert and process
*/","* Modify the current clipping path by intersecting it with the given path.
     * @param path path to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Area),612,615,"/**
 * Initializes path with area's bounds and smoothness flag.
 * @param area area to be converted into a path
 */","* Modify the current clipping path by intersecting it with the given path.
     *
     * @param area area to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,transferClip,org.apache.pdfbox.rendering.PageDrawer:transferClip(java.awt.Graphics2D),434,447,"/**
* Applies clipping mask to the Graphics context.
* @param graphics Graphics2D object for rendering
*/","* Transfer clip to the destination device. Override this if you want to avoid to do slow
     * intersecting operations but want the destination device to do this (e.g. SVG). You can get
     * the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5258"">PDFBOX-5258</a> for sample code.
     *
     * @param graphics graphics device",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,textAlign,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:textAlign(int),95,99,"/**
* Sets text alignment mask based on input alignment value.
* @param alignment integer representing horizontal alignment (e.g. left, center, right)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(byte[],int[])",44,47,"/**
 * Constructs a COSFilterInputStream from an array of bytes and a byte range.
 * @param in array of input bytes
 * @param byteRange array containing start and end offset of the byte range
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(),49,59,"/**
* Executes M3 logic, incrementing position.
* @throws IOException if an I/O error occurs
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[],int,int)",67,77,"/**
* Reads bytes from the underlying stream.
* @param b byte array to read into
* @param off offset in the byte array
* @param len maximum number of bytes to read
* @return actual number of bytes read or -1 on error
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,create,org.apache.pdfbox.rendering.GroupGraphics:create(),111,123,"/**
* Creates a composite graphics object from two separate Graphics2D instances.
* @throws UnsupportedOperationException if input is not Graphics2D
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawTilingPattern,"org.apache.pdfbox.rendering.PageDrawer:drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)",306,334,"/**
* Resets and reinitializes Graphics2D context for pattern rendering.
* @param g target graphics context
*/","* Draws the pattern stream to the requested context.
     *
     * @param g The graphics context to draw onto.
     * @param pattern The tiling pattern to be used.
     * @param colorSpace color space for this tiling.
     * @param color color for this tiling.
     * @param patternMatrix the pattern matrix
     * @throws IOException If there is an IO error while drawing the page.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createDefaultRenderingHints,org.apache.pdfbox.rendering.PDFRenderer:createDefaultRenderingHints(java.awt.Graphics2D),504,516,"/**
* Generates rendering hints for graphics based on bitonal mode.
* @param graphics Graphics2D context
* @return RenderingHints object with interpolation and antialiasing settings
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXDirAdj,org.apache.pdfbox.text.TextPosition:getXDirAdj(),344,347,"/**
* Computes final mask value by chaining m1 and m2 functions.
* @return final mask value as a float
*/","* This will get the text direction adjusted x position of the character.
     * This is adjusted based on text direction so that the first character
     * in that direction is in the upper left at 0,0.
     * This method ignores the page rotation but takes the text rotation (see
     * {@link #getDir() getDir()}) and adjusts the coordinates to awt. This is useful when doing
     * text extraction, to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The x coordinate of the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<init>,"org.apache.pdfbox.text.TextPosition:<init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)",85,118,"/**
* Calculates initial text position for rendering.
* @param pageRotation rotation of the page (0, 90, 180, or 270)
* @param charCodes array of character codes to render
*/","* Constructor.
     *
     * @param pageRotation rotation of the page that the text is located in
     * @param pageWidth width of the page that the text is located in
     * @param pageHeight height of the page that the text is located in
     * @param textMatrix text rendering matrix for start of text (in display units)
     * @param endX x coordinate of the end position
     * @param endY y coordinate of the end position
     * @param maxHeight Maximum height of text (in display units)
     * @param individualWidth The width of the given character/string. (in text units)
     * @param spaceWidth The width of the space character. (in display units)
     * @param unicode The string of Unicode characters to be displayed.
     * @param charCodes An array of the internal PDF character codes for the glyphs in this text.
     * @param font The current font for this text position.
     * @param fontSize The new font size.
     * @param fontSizeInPt The font size in pt units (see {@link #getFontSizeInPt()} for details).",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYDirAdj,org.apache.pdfbox.text.TextPosition:getYDirAdj(),406,418,"/**
* Calculates the mask value based on direction.
* @return Mask value for the given direction
*/","* This will get the y position of the text, adjusted so that 0,0 is upper left and it is
     * adjusted based on the text direction.
     * This method ignores the page rotation but takes the
     * text rotation and adjusts the coordinates to awt. This is useful when doing text extraction,
     * to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The adjusted y coordinate of the character.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidth,org.apache.pdfbox.text.TextPosition:getWidth(),443,446,"/**
* Calculates and returns a mask value using rotation function m1.
*/","* This will get the width of the string when page rotation adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthDirAdj,org.apache.pdfbox.text.TextPosition:getWidthDirAdj(),453,456,"/**
* Calculates the result of applying function m1 and then m2.","* This will get the width of the string when text direction adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(),430,433,"/**
* Calls overloaded m1 with default parameter value (true).
*/","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead). This
     * assumes that the primary direction of text is left to right. Default implementation is to do nothing. Subclasses
     * may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphEnd,org.apache.pdfbox.text.PDFTextStripper:writeParagraphEnd(),1728,1736,"/**
* Processes non-paragraph content and outputs formatted result.
* @throws IOException if I/O error occurs
*/","* Write something (if defined) at the end of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchListItemPattern,org.apache.pdfbox.text.PDFTextStripper:matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper),1767,1772,"/**
* Generates pattern to mask function names in source code.
* @param pw PositionWrapper object containing text position and string
*/","* returns the list item Pattern object that matches the text at the specified PositionWrapper or null if the text
     * does not match such a pattern. The list of Patterns tested against is given by the {@link #getListItemPatterns()}
     * method. To add to the list, simply override that method (if sub-classing) or explicitly supply your own list
     * using {@link #setListItemPatterns(List)}.
     * 
     * @param pw position
     * @return the matching pattern",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeWord,org.apache.pdfbox.text.PDFTextStripper:normalizeWord(java.lang.String),2051,2108,"/**
* Normalizes and replaces Unicode characters with equivalent ASCII representations.
* @param word input string to be normalized
*/","* Normalize certain Unicode characters. For example, convert the single ""fi"" ligature to ""f"" and ""i"". Also
     * normalises Arabic and Hebrew presentation forms.
     *
     * @param word Word to normalize
     * @return Normalized word",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toString,org.apache.pdfbox.util.DateConverter:toString(java.util.Calendar),165,179,"/**
* Formats date and time with DST offset.
* @param cal Calendar object to format
* @return Formatted string or null if input is null
*/","* Converts a Calendar to a string formatted as:
     *     D:yyyyMMddHHmmss#hh'mm'  where # is Z, +, or -.
     * 
     * @param cal The date to convert to a string. May be null.
     * The DST_OFFSET is included when computing the output time zone.
     *
     * @return The date as a String to be used in a PDF document, 
     *      or null if the cal value is null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toISO8601,org.apache.pdfbox.util.DateConverter:toISO8601(java.util.Calendar),190,202,"/**
* Formats date and time with timezone offset.
*@param cal Calendar object to format
*@return formatted string in ""YYYY-MM-DDTHH:MM:SS+/-ZZ:MM"" format
*/","* Converts the date to ISO 8601 string format:
     *     yyyy-mm-ddThh:MM:ss#hh:mm    (where '#"" is '+' or '-').
     *
     * @param cal The date to convert.  Must not be null.
     * The DST_OFFSET is included in the output value.
     * 
     * @return The date represented as an ISO 8601 string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseBigEndianDate,"org.apache.pdfbox.util.DateConverter:parseBigEndianDate(java.lang.String,java.text.ParsePosition)",526,568,"/**
* Parses date and time string into a GregorianCalendar object.
* @param text date and time string to parse
* @param initialWhere ParsePosition indicating where to start parsing in the input string
* @return populated GregorianCalendar object or null on failure
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseSimpleDate,"org.apache.pdfbox.util.DateConverter:parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)",584,601,"/**
* Parses text against multiple date formats.
* @param text text to parse
* @param fmts array of date format strings
* @param initialWhere starting position for parsing
* @return GregorianCalendar object or null if not parsed
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTZoffset,"org.apache.pdfbox.util.DateConverter:parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)",429,473,"/**
* Parses time zone information from a string.
* @param text input string
* @param cal calendar object to update
* @param initialWhere position of the time zone in the input string
* @return true if parsing was successful, false otherwise
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toHexString,org.apache.pdfbox.cos.COSString:toHexString(),257,260,"/**
* Converts bytes to hexadecimal mask.
*/","* This will take this string and create a hex representation of the bytes that make the string.
     *
     * @return A hex string representing the bytes in this string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeExternalSignature,org.apache.pdfbox.pdfwriter.COSWriter:writeExternalSignature(byte[]),958,985,"/**
* Sets CMS signature for incremental PDF output.
* @param cmsSignature byte array representing the signature
*/","* Write externally created signature of PDF data obtained via {@link #getDataToSign()} method.
     *
     * @param cmsSignature CMS signature byte array
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if source data stream is closed",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,writePDF,org.apache.pdfbox.cos.COSName:writePDF(java.io.OutputStream),776,805,"/**
* Encodes special characters in a byte array to a masked OutputStream.
* @param output OutputStream to write the encoded data
*/","* This will output this string as a PDF object.
     * 
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,encode,"org.apache.pdfbox.filter.ASCIIHexFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",135,145,"/**
* Encodes binary data from InputStream to OutputStream using hexadecimal conversion.
* @param input InputStream containing binary data
* @param encoded OutputStream for encoded hexadecimal representation
* @param parameters COSDictionary (not used in this method)
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexBytes,"org.apache.pdfbox.util.Hex:writeHexBytes(byte[],java.io.OutputStream)",168,174,"/**
* Processes each byte in the input array and writes it to the specified OutputStream.
* @param bytes input byte array
* @param output OutputStream to write processed data to
*/","* Writes the given byte array as hex value to the given output stream.
     * @param bytes the byte array to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,iterativeMergeSort,"org.apache.pdfbox.util.IterativeMergeSort:iterativeMergeSort(java.lang.Object[],java.util.Comparator)",87,99,"/**
* Sorts array using dual-pivot quicksort algorithm.
* @param arr input array to be sorted
* @param cmp comparator function for sorting elements of type T
*/","* Sorts the array using iterative (bottom-up) merge sort.
     *
     * @param <T> the class of the objects in the list
     * @param arr the array of objects to be sorted.
     * @param cmp the comparator to determine the order of the list.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,hashCode,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:hashCode(),147,157,"/**
* Computes a unique hash code by aggregating hashes of nested objects.
* @return The computed hash value
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,hashCode,org.apache.pdfbox.text.TextPosition:hashCode(),972,990,"/**
* Calculates a unique hash value based on text matrix, layout parameters and other properties.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream),56,59,"/**
 * Creates a new document from an input stream.
 * @param is input stream containing document data
 */","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(java.io.BufferedInputStream),89,112,"/**
* Determines the FileType based on input stream data.
* @param inputStream BufferedInputStream containing file data
* @return FileType enum value or throws IOException if invalid data
*/","* Examines the a file's first bytes and estimates the file's type.
     * <p>
     * Requires a {@link BufferedInputStream} in order to mark and reset the stream to the position
     * at which it was provided to this method once completed.
     * <p>
     * Requires the stream to contain at least eight bytes.
     *
     * @param inputStream a buffered input stream of the file to examine.
     * @return the file type.
     * @throws IOException if an IO error occurred or the input stream ended unexpectedly.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(byte[]),114,117,"/**
* Determines file type based on provided bytes.
* @param fileBytes byte array containing file contents
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
* Initializes the PDF stream engine for non-stroking color processing.
* @param context the context in which to process the PDF stream
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes PDF stream engine with stroking color settings. 
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),39,42,"/**
* Initializes graphics engine to append rectangle to path.
* @param context PDFGraphicsStreamEngine instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
* Initializes inline image rendering engine.
* @param context graphics stream engine context
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of the ClipEvenOddRule class.
 * @param context PDF graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes ClipNonZeroRule with the provided graphics engine context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
* Initializes CloseAndStrokePath engine with provided graphics stream.
* @param context PDFGraphicsStreamEngine instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
* Initializes PDF graphics stream engine with fill-even-odd and stroke path functionality.
* @param context Graphics stream engine context
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
* Initializes path filling and stroking engine with non-zero winding rule.
* @param context PDFGraphicsStreamEngine instance to configure
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
* Initializes a new ClosePath command.
* @param context PDF graphics stream engine context.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new CurveTo command on the given graphics stream engine.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
* Initializes a CurveToReplicateFinalPoint stream engine.
* @param context graphics drawing context
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes the graphics stream engine to replicate an initial point using the CurveTo operation. 
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),46,49,"/**
 * Initializes a new instance of the DrawObject class with the given PDF graphics stream engine.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/EndPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.EndPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),34,37,"/**
 * Initializes an EndPath command with the given graphics stream engine context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes the PDF graphics stream engine with even/odd and stroke path settings.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes Fill Even Odd rule with specified graphics context. 
 * @param context PDF rendering engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),37,40,"/**
* Initializes engine to fill non-zero paths and stroke them.
* @param context PDF graphics stream engine context
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes the fill non-zero rule engine.
 * @param context graphics stream engine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
* Initializes a new LineTo command on the specified graphics stream engine.
* @param context PDFGraphicsStreamEngine instance to operate on
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.MoveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Initializes MoveTo operation on PDF graphics stream.
 * @param context PDFGraphicsStreamEngine context
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
* Initializes a new instance of ShadingFill using the provided graphics stream engine context.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/StrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.StrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
* Initializes a new StrokePath object with the given graphics context.
* @param context PDFGraphicsStreamEngine instance for rendering
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<init>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<init>(),106,130,"/**
* Initializes PDF stream engine with legacy operators.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,getPDFName,org.apache.pdfbox.cos.COSName:getPDFName(java.lang.String),685,709,"/**
* Retrieves a COSName instance from cache or creates a new one.
* @param aName name to fetch or create
* @return COSName object or null if not found
*/","* This will get a COSName object with that name.
     * 
     * @param aName The name of the object.
     * 
     * @return A COSName with the specified name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(byte[]),63,66,"/**
* Constructs a new COSString instance from a byte array.
* @param bytes input byte data to be converted
*/","* Creates a new PDF string from a byte array. This method can be used to read a string from
     * an existing PDF file, or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(),51,54,"/**
* Initializes an empty COSArray instance.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(java.util.List),61,69,"/**
* Constructs a COSArray from a list of COS objects.
* @param cosObjectables list of COS objects to include in the array
*/","* Use the given list to initialize the COSArray.
     * 
     * @param cosObjectables the initial list of COSObjectables",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache),79,83,"/**
* Initializes COSStream with a cache instance.
* @param streamCache RandomAccessStreamCache to store streams
*/","* Creates a new stream with an empty dictionary. Data is stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,<init>,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),31,35,"/**
* Creates an unmodifiable dictionary from the given COS dictionary.
* @param dict COS dictionary to wrap
*/",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,createDefault,org.apache.pdfbox.filter.DecodeResult:createDefault(),52,55,"/**
* Creates a new DecodeResult instance with an empty COS dictionary.
* @return DecodeResult object representing a masked decode result
*/","* Return a default DecodeResult.
     *
     * @return a default instance of DecodeResult",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(),44,47,"/**
* Initializes a new instance of PDDocumentInformation with an empty dictionary.",* Default Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(),62,67,"/**
* Initializes a new instance of PDResources.
* @param none
* @return none (constructor)
*/",* Constructor for embedding.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convert,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convert(java.util.Map),211,220,"/**
* Creates a COSDictionary from the provided map.
* @param someMap input map with name-value pairs
*/","* This will take a map&lt;java.lang.String,org.apache.pdfbox.pdmodel.COSObjectable&gt;
     * and convert it into a COSDictionary.
     *
     * @param someMap A map containing COSObjectables
     *
     * @return A proper COSDictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(),35,38,"/**
* Initializes a new instance of PDDictionaryWrapper with an empty dictionary.",* Default constructor,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(),52,55,"/**
 * Initializes a new PDNameTreeNode with an empty dictionary.",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(java.lang.Class),54,58,"/**
* Initializes a PDNumberTreeNode with the given value class.
* @param valueClass the class of the object to be stored in this tree node
*/","* Constructor.
     *
     * @param valueClass The PD Model type of object that is the value.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(),72,75,"/**
* Constructs a new PDPageLabelRange instance from an empty dictionary.",* Creates a new empty page label range object.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(),36,39,"/**
* Initializes a PDMarkInfo object with an empty COSDictionary.","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(),61,64,"/**
 * Initializes an empty PDF property list.
 */",* Constructor for subclasses.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(),53,56,"/**
* Initializes an empty PDF box style object.
*/","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(),43,46,"/**
* Initializes filter dictionary with default settings.
*/",* creates a new empty crypt filter dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(),84,87,"/**
* Initializes a PDEncryption object with an empty dictionary.
*/",* creates a new empty encryption dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(),40,43,"/**
* Initializes the FDF Catalog with an empty dictionary.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(),54,57,"/**
* Initializes a new instance of FDFDictionary.
* Creates an empty COS dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(),54,57,"/**
* Initializes an empty FDFField object with a new COSDictionary instance.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(),63,66,"/**
* Initializes an empty FDF icon fit dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(),44,47,"/**
 * Initializes an empty JavaScript object.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(),38,41,"/**
* Initializes an empty named page reference dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(),40,43,"/**
* Initializes an empty PDF page with a COS dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(),35,38,"/**
 * Initializes an empty FDFPageInfo instance with a new COSDictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(),40,43,"/**
 * Initializes an empty FDFTemplate instance with a new dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(),51,54,"/**
 * Initializes a new instance of PDDeviceNAttributes with an empty COS dictionary.",* Creates a new DeviceN colour space attributes dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(),48,51,"/**
* Initializes an empty device process with a new COS dictionary.",* Creates a new DeviceN Process Dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(),84,87,"/**
 * Initializes a new instance of PDShading with an empty dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(),35,38,"/**
 * Initializes an empty dictionary of additional actions.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(),37,40,"/**
* Initializes annotation additional actions with an empty dictionary. 
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(),37,40,"/**
* Initializes catalog additional actions with an empty dictionary.
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(),37,40,"/**
* Initializes an empty dictionary of additional form field actions.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(),37,40,"/**
* Initializes page additional actions with an empty dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(),40,43,"/**
 * Initializes a new instance of PDTargetDirectory with an empty dictionary.","* Default constructor, creates target directory.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(),35,38,"/**
 * Initializes an empty URI dictionary. 
 */","* Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(),48,51,"/**
* Initializes an empty PDWindowsLaunchParams object. 
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(),50,53,"/**
 * Initializes a new instance of PDBorderEffectDictionary with an empty COSDictionary. 
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(),69,72,"/**
* Initializes PDBorderStyleDictionary with an empty COSDictionary.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(),41,45,"/**
* Initializes a new PDPropBuild object with an empty COSDictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(),37,42,"/**
* Initializes a new PDPropBuildDataDict object with an empty COSDictionary. 
*/",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(),35,39,"/**
* Initializes an empty PDSeedValueMDP object with a direct dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(),35,39,"/**
* Initializes a new instance of PDSeedValueTimeStamp with an empty dictionary.",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
* Initializes a PDField from an existing PDAcroForm.
* @param acroForm parent form containing this field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(),42,45,"/**
* Initializes a new viewport dictionary instance.",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(),136,139,"/**
* Initializes viewer preferences with an empty dictionary.
*/",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",58,63,"/**
* Initializes a COSObject with the given COSBase and key.
* @param object COSBase to assign
* @param objectKey COSObjectKey for this object
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param objectKey The COSObjectKey of the encapsulated object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a new PD default attribute object from a COS dictionary.","* Creates a default attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Initializes a PDUserAttributeObject from a COSDictionary.","* Constructor
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Initializes a standard attribute object from a COS dictionary.
* @param dictionary COS dictionary containing attribute data
*/","* Creates a new standard attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
* Constructs a new PDOutlineItem instance from the given COS dictionary.
* @param dic COSDictionary containing item data
*/","* Constructor for an existing outline item.
     *
     * @param dic The storage dictionary.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),71,75,"/**
* Creates a PDNameTreeNode instance representing a page destination. 
* @param dic COS dictionary containing page destination data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),59,63,"/**
* Creates embedded files name tree node from COS dictionary.
* @param dic COS dictionary to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),60,64,"/**
* Creates PDJavascriptNameTreeNode instance from COS dictionary.
* @param dic input dictionary containing relevant data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),61,65,"/**
* Creates PD structure element name tree node.
* @param dic COS dictionary containing relevant data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getMetadata,org.apache.pdfbox.pdmodel.common.PDStream:getMetadata(),416,434,"/**
* Retrieves PDMetadata from stream, returning null or an instance of PDMetadata.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return
     * null if there is no meta data for this object.
     * 
     * @return The metadata for this object.
     * @throws IllegalStateException if the value of the metadata entry is different from a stream
     *                               or null",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMetadata(),416,424,"/**
* Retrieves PDF metadata from the current document.
* @return PDMetadata object or null if not found
*/","* Returns the metadata associated with this XObject, or null if there is none.
     * @return the metadata associated with this object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,getExtends,org.apache.pdfbox.pdmodel.common.PDObjectStream:getExtends(),115,119,"/**
* Creates a PDF object stream with mask functionality.
* @return PDObjectStream instance or null if failed
*/","* A reference to an object stream, of which the current object stream is
     * considered an extension.
     *
     * @return The object that this stream is an extension.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<init>(org.apache.pdfbox.cos.COSBase),75,78,"/**
* Initializes a new instance of PDFunctionType0 with the specified COSBase.
* @param function COSBase object containing function data
*/","* Constructor.
     *
     * @param function The function.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:<init>(org.apache.pdfbox.cos.COSBase),44,47,"/**
 * Initializes an instance of PDFunctionType3 from a COS stream.
 * @param functionStream COS stream containing function data
 */","* Constructor.
     *
     * @param functionStream The function .",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:<init>(org.apache.pdfbox.cos.COSBase),31,35,"/**
* Initializes a new Identity function type.
* @param function input COS object, expected to be a valid function
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDPostScriptXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:<init>(org.apache.pdfbox.cos.COSStream),34,37,"/**
* Initializes a PostScript XObject from a COS stream.
* @param stream COS stream containing PostScript data
*/","* Creates a PostScript XObject.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream),77,81,"/**
* Initializes a new instance of the class from a PDF form XObject stream.
* @param stream COSStream object containing the XObject data
*/","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",89,93,"/**
* Initializes a new PDF form XObject instance from the given stream.
* @param stream COS stream containing the XObject data
* @param cache Resource cache for resolving resources
*/","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,59,"/**
* Creates a PDStructureElement from the given COS dictionary.
* @param base COSBase object representing the dictionary
* @return PDStructureElement instance or throws IOException if invalid input
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(),91,93,"/**
* Constructs a new instance of PublicKeySecurityHandler.",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(),86,88,"/**
* Initializes a new instance of the StandardSecurityHandler.",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy),100,103,"/**
 * Initializes the PublicKeySecurityHandler with a specified protection policy.
 * @param publicKeyProtectionPolicy policy controlling public key security behavior
 */","* Constructor used for encryption.
     *
     * @param publicKeyProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy),95,98,"/**
* Initializes StandardSecurityHandler with a given protection policy.
* @param standardProtectionPolicy StandardProtectionPolicy instance to use
*/","* Constructor used for encryption.
     *
     * @param standardProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Initializes an annotation highlight with the given dictionary.
* @param a COSDictionary containing annotation highlight data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Initializes an FDFAnnotationSquiggly object from a COS dictionary.
* @param a COS dictionary containing annotation data
*/","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates an instance of FDFAnnotationStrikeOut from a COS dictionary.
 * @param a COS dictionary containing strike out annotation attributes
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs an underline annotation using the provided COS dictionary.
 * @param a COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,createFSIgnored,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:createFSIgnored(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",306,318,"/**
* Creates a FSFontInfo object from the given file and font format.
* @param file Font file
* @param format Font format (e.g. PostScript)
* @param postScriptName PostScript name of the font
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getStrokingJavaComposite(),665,668,"/**
 * Returns a composite blending mode with specified parameters.
 * @param blendMode blending mode to use
 * @param alphaConstant transparency factor
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getNonStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getNonStrokingJavaComposite(),670,673,"/**
* Returns a composite mask using blend mode and non-stroking alpha constant.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
* Initializes a new PDTilingPattern with the given COSDictionary.
* @param dictionary COSDictionary containing pattern data
*/","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Initializes a new instance of PDShadingType3 from a COS dictionary. 
* @param shadingDictionary dictionary containing type 3 shading data
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDShadingType4 instance from a COS dictionary.
 * @param shadingDictionary COS dictionary containing type 4 shading data
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Initializes an instance of PDShadingType5 from a given COS dictionary.
 * @param shadingDictionary COS dictionary containing type 5 shading data
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:toPaint(org.apache.pdfbox.util.Matrix),126,130,"/**
* Creates an axial shading paint based on a given Matrix.
* @param matrix transformation matrix used to create the paint
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:toPaint(org.apache.pdfbox.util.Matrix),45,49,"/**
* Creates radial shading paint based on input matrix.
* @param matrix transformation matrix for radial shading
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:toPaint(org.apache.pdfbox.util.Matrix),103,107,"/**
* Returns Type1ShadingPaint instance based on input Matrix.
* @param matrix input transformation matrix
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:toPaint(org.apache.pdfbox.util.Matrix),84,88,"/**
* Returns a Type4ShadingPaint instance based on the provided Matrix.
* @param matrix input transformation matrix
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:toPaint(org.apache.pdfbox.util.Matrix),80,84,"/**
* Returns a Type5ShadingPaint instance based on the provided matrix. 
* @param matrix input matrix used to create the paint object 
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
* Returns a Type6ShadingPaint instance based on the provided matrix.
* @param matrix input matrix used by the paint
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
* Returns Type7ShadingPaint instance based on input Matrix.
* @param matrix input matrix data",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),39,42,"/**
* Initializes handler with given PDAnnotation.
* @param annotation PDAnnotation instance to be handled
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
* Initializes PDCircleAppearanceHandler with the given PDAnnotation.
* @param annotation annotation to be processed
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),38,41,"/**
 * Initializes handler with specified annotation.
 * @param annotation PDAnnotation instance
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),61,64,"/**
* Initializes a new instance of the handler with the given annotation.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),43,46,"/**
* Initializes handler with given annotation.
* @param annotation Annotation to associate with this handler.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),37,40,"/**
 * Initializes a new instance of PDInkAppearanceHandler with the given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),41,44,"/**
* Initializes PDLineAppearanceHandler with the given annotation.
* @param annotation PDAnnotation object to associate with this handler
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Initializes a new instance of PDLinkAppearanceHandler with the specified annotation.
 * @param annotation PDAnnotation object containing appearance data
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Initializes PDPolygonAppearanceHandler instance with given PDAnnotation.
 * @param annotation PDAnnotation object associated with this handler
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),40,43,"/**
 * Initializes handler with annotation data.
 * @param annotation PDAnnotation object to associate with this handler
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),23,26,"/**
 * Constructs a new PDSoundAppearanceHandler instance from the given PDAnnotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
* Initializes PDSquareAppearanceHandler with given PDAnnotation.
* @param annotation PDAnnotation object
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),47,50,"/**
 * Initializes a new instance of PDSquigglyAppearanceHandler with the specified annotation.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Initializes the strikeout appearance handler with the given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes the handler with the given annotation.
 * @param annotation annotation to be handled
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Initializes a new instance of the handler with the specified annotation.
 * @param annotation the annotation to handle
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),114,126,"/**
* Applies caret appearance handler to the given PDF document.
* @param document the PDF document to apply the handler to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),67,79,"/**
* Applies custom mask to the given PDF document.
* @param document PDDocument object being processed
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),135,147,"/**
* Applies custom mask to the given PDDocument.
* @param document PDDocument instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),301,313,"/**
* Applies custom free text mask to the provided PDDocument.
* @param document PDDocument instance to apply the mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Applies mask to the provided PDDocument.
* @param document PDDocument instance to apply mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),125,137,"/**
* Applies custom mask to the PDF document using either default or custom handler.
* @param document PDDocument object to apply mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),421,433,"/**
* Applies line drawing mask to the given PDDocument.
* @param document PDDocument instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),233,245,"/**
* Applies mask to PDDocument using custom or default appearance handler.
* @param document PDDocument instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),175,187,"/**
* Applies mask to the given PDF document.
* @param document the PDF document to apply mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),191,203,"/**
* Applies mask to the provided PDF document.
* @param document The PDDocument object to apply mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Applies sound mask to the provided PDF document.
* @param document the PDF document to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Applies a square mask to the provided PDF document.
* @param document PDDocument instance
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Applies custom squiggly mask to the provided PDDocument.
* @param document PDDocument instance to apply mask to
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Applies strikeout mask to the given PDDocument.
* @param document PDDocument instance to modify
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),239,251,"/**
* Applies custom font mask to the given PDF document.
* @param document PDDocument object to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Applies mask to PDDocument using custom or default underlining handler.
* @param document PDDocument instance for processing
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Initializes a new PDButton instance with the given form, field, and parent.","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
* Initializes a PDSignatureField object with the given parameters.
* @param acroForm the containing AcroForm
* @param field the underlying COSDictionary
* @param parent the non-terminal parent field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",59,62,"/**
* Initializes a Variable Text field in the AcroForm.
* @param acroForm form containing the field
* @param field COS dictionary for the field
* @param parent non-terminal field parenting this variable text field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:clone(),478,501,"/**
* Creates a deep copy of the current PDGraphicsState.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,"org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:<init>(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",83,91,"/**
* Initializes a TilingPaintParameter object with the given parameters.
* @param matrix transformation matrix
* @param patternDict dictionary for the pattern
* @param colorSpace color space of the paint
* @param color paint color
* @param xform affine transform for tiling
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,generatePartialName,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:generatePartialName(),73,84,"/**
* Generates a unique field name by appending incrementing suffix to ""Signature"". 
* @return Unique field name as String
*/","* Generate a unique name for the signature.
     * 
     * @return the signature's unique name",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:toString(),123,132,"/**
* Concatenates object and revision number pairs into a JSON-like string.
*/",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase),49,52,"/**
* Returns a soft mask from the given PDF dictionary.
* @param dictionary COSBase object containing PDF data
*/","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * 
     * @return the newly created instance of PDSoftMask",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,46,"/**
* Executes conditional instruction sequence.
* @param context ExecutionContext object
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),53,68,"/**
* Executes either procedure 1 or 2 based on a conditional flag.
* @param context ExecutionContext object
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.cos.ICOSParser),111,114,"/**
* Creates a new COSDocument instance from a given ICOSParser.
* @param parser ICOSParser object used to initialize the document
*/","* Constructor. Uses main memory to buffer PDF streams.
     * 
     * @param parser Parser to be used to parse the document on demand",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),122,125,"/**
* Creates a new COSDocument instance without a specific document ID.","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,init,org.apache.pdfbox.pdfparser.COSParser:init(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),193,210,"/**
* Initializes the document with a COSDocument instance.
* @param streamCacheCreateFunction function to create stream cache
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,process,"org.apache.pdfbox.contentstream.operator.state.SetMatrix:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,66,"/**
* Applies a 6x6 matrix to the provided arguments.
* @param operator Operator applying the mask
* @param arguments List of COSBase operands (must be at least 6)
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,process,"org.apache.pdfbox.contentstream.operator.text.BeginText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,49,"/**
* Applies mask operation to the current page.
* @param operator mask operator
* @param arguments list of COSBase objects representing mask parameters
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,process,"org.apache.pdfbox.contentstream.operator.text.EndText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,47,"/**
* Executes a mask operation on a PDF stream.
* @param operator mask operator
* @param arguments list of COSBase objects (not used)
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,retrieveDimensions,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:retrieveDimensions(java.io.ByteArrayInputStream),148,185,"/**
* Extracts image dimensions from a JPEG stream.
* @param stream input byte array
* @return Dimensions object or throws IOException if failed
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(java.lang.String,java.util.List)",903,907,"/**
* Executes an operator on a list of COSBase objects.
* @param operation operator type
* @param arguments input data
*/","* This is used to handle an operation.
     * 
     * @param operation The operation to perform.
     * @param arguments The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,create,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",43,50,"/**
* Returns a marked content object based on the artifact marker.
* @param tag COS name to check for artifact marker
* @param properties COS dictionary containing additional data
* @return PDArtifactMarkedContent or PDMarkedContent depending on the tag
*/","* Creates a marked-content sequence.
     * 
     * @param tag the tag
     * @param properties the properties
     * @return the marked-content sequence",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getWidth,org.apache.pdfbox.pdmodel.common.PDRectangle:getWidth(),296,299,"/**
* Calculates difference between two masked values.
* @return result of subtraction as a float value
*/","* This will get the width of this rectangle as calculated by
     * upperRightX - lowerLeftX.
     *
     * @return The width of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,contains,"org.apache.pdfbox.pdmodel.common.PDRectangle:contains(float,float)",173,181,"/**
* Checks if point (x, y) is within the functional mask.
* @param x x-coordinate of the point
* @param y y-coordinate of the point
* @return true if point is within the mask, false otherwise
*/","* Method to determine if the x/y point is inside this rectangle.
     * @param x The x-coordinate to test.
     * @param y The y-coordinate to test.
     * @return True if the point is inside this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getHeight,org.apache.pdfbox.pdmodel.common.PDRectangle:getHeight(),307,310,"/**
* Calculates difference between two model values.
* @return Difference as a float value
*/","* This will get the height of this rectangle as calculated by
     * upperRightY - lowerLeftY.
     *
     * @return The height of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,transform,org.apache.pdfbox.pdmodel.common.PDRectangle:transform(org.apache.pdfbox.util.Matrix),319,338,"/**
* Creates a GeneralPath by transforming and connecting points in the given matrix.
* @param matrix transformation matrix
*/","* Returns a path which represents this rectangle having been transformed by the given matrix. Note that the
     * resulting path need not be rectangular.
     * 
     * @param matrix the matrix to be used for the transformation
     * @return the transformed rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toGeneralPath,org.apache.pdfbox.pdmodel.common.PDRectangle:toGeneralPath(),357,370,"/**
* Creates a GeneralPath representing a mask shape.
*/","* Returns a general path equivalent to this rectangle. This method avoids the problems caused by Rectangle2D not
     * working well with -ve rectangles.
     * 
     * @return a general path equivalent to this rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toString,org.apache.pdfbox.pdmodel.common.PDRectangle:toString(),377,382,"/**
* Returns a string representation of the function mask.
*/","* This will return a string representation of this rectangle.
     *
     * @return This object as a string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isNonZeroBoundingBox,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isNonZeroBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),395,403,"/**
* Checks if bounding box has non-zero mask values.
* @param bbox PDRectangle object to check
* @return true if any mask value is non-zero, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateMatrix,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateMatrix(org.apache.pdfbox.pdmodel.common.PDRectangle,int)",655,679,"/**
* Computes an AffineTransform based on the given rotation and bounding box.
* @param bbox PDRectangle containing box coordinates
* @param rotation integer value representing 90, 180, or 270 degrees
* @return AffineTransform object with calculated transformation matrix
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,fillWhitepointCache,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),78,83,"/**
* Initializes WP mask values from given tristimulus white point.
* @param whitepoint Tristimulus white point data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,org.apache.pdfbox.cos.COSArray:getInt(int),306,309,"/**
 * Calls m1 with default value of -1. 
 * @param index index to pass to m1
 */","* Get the value of the array as an integer.
     *
     * @param index The index into the list.
     *
     * @return The value at that index or -1 if does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,org.apache.pdfbox.cos.COSArray:getName(int),359,362,"/**
* Redirects to overloaded method with default value.
* @param index index parameter
* @return result from overloaded method call
*/","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The name converted to a string or null if it does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(org.apache.pdfbox.cos.COSBase),217,253,"/**
* Creates a filtered output stream for PDF writing.
*@param filters COSBase filter to apply
*@return Filtered OutputStream instance
*/","* Returns a new OutputStream for writing stream data, using and the given filters.
     * 
     * @param filters COSArray or COSName of filters to be used.
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",140,149,"/**
* Initializes an image object from a PDF stream and resources.
* @param stream PDStream containing the image data
* @param resources PDResources for the image
*/","* Creates an Image XObject with the given stream as its contents and current color spaces. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param stream the XObject stream to read
     * @param resources the current resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSuffix(),1011,1047,"/**
* Returns image file suffix based on the COSName filter list.
* @return image file suffix (e.g. ""png"", ""jpg"", etc.) or null if unknown
*/","* This will get the suffix for this image type, e.g. jpg/png.
     * @return The image suffix or null if not available.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(float),1441,1459,"/**
* Writes a formatted float value to the output stream.
* @param real the float value to write
*/","* Writes a real number to the content stream.
     * 
     * @param real the real number to be added to the content stream
     * 
     * @throws IOException If the underlying stream has a problem being written to.
     * @throws IllegalArgumentException if the parameter is not a finite number",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(int),1467,1471,"/**
* Formats decimal integer and writes it to output stream.","* Writes an integer number to the content stream.
     * 
     * @param integer the integer to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperator,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperator(java.lang.String),1491,1495,"/**
 * Applies mask functionality to input text.
 * Calls sub-functions to perform specific masking operations.
 */","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream followed by a newline
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:isEmpty(),69,73,"/**
* Checks if mask value is zero.
* @return true if mask value equals 0, false otherwise
*/",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGB(float[]),348,359,"/**
* Selects between two filtering functions based on presence of attributes.
* @param value input array to filter
* @return filtered float array or throws IOException on error
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,get,org.apache.pdfbox.cos.COSNumber:get(java.lang.String),58,95,"/**
* Parses and converts a string representation of a number to a COSNumber object.
* @param number input string
*/","* This factory method will get the appropriate number object.
     *
     * @param number The string representation of the number.
     *
     * @return A number object, either float or int.
     *
     * @throws IOException If the string is not a number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromFloat,org.apache.pdfbox.pdfwriter.COSWriter:visitFromFloat(org.apache.pdfbox.cos.COSFloat),1350,1354,"/**
* Applies mask to COSFloat object.
* @param obj COSFloat object to modify
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSFloat,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSFloat(java.io.OutputStream,org.apache.pdfbox.cos.COSFloat)",270,274,"/**
* Writes float value to OutputStream with formatting.
* @param output OutputStream object
* @param cosFloat Float value to write
*/","* Write the given {@link COSFloat} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosFloat The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,toIncrement,org.apache.pdfbox.cos.COSUpdateInfo:toIncrement(),52,55,"/**
* Calls M2 operation on result of M1 operation.","* Uses this {@link COSUpdateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on this {@link COSUpdateInfo}.
     * @see COSIncrement",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectKey,"org.apache.pdfbox.pdfparser.BaseParser:getObjectKey(long,int)",194,213,"/**
* Generates a COSObjectKey for the given number and generation.
* @param num unique identifier
* @param gen generation value
* @return COSObjectKey instance or newly created one if not found in cache
*/","* Returns the object key for the given combination of object and generation number. The object key from the cross
     * reference table/stream will be reused if available. Otherwise a newly created object will be returned.
     * 
     * @param num the given object number
     * @param gen the given generation number
     * 
     * @return the COS object key",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjects,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjects(),132,217,"/**
* Scans the source for object markers and updates search offsets.
* @throws IOException if an I/O error occurs
*/","* Brute force search for every object in the pdf.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreamOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreamOffsets(),568,634,"/**
* Builds a map of object stream offsets to COSObjectKey mappings.
* @return Map<Long, COSObjectKey> mapping of offsets to keys
*/","* Search for all offsets of object streams within the given pdf
     * 
     * @return a map of all offsets for object streams
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:parse(org.apache.pdfbox.pdfparser.XrefTrailerResolver),119,152,"/**
* Resolves XrefTrailer entries using the provided resolver.
* @param resolver object to resolve XrefTrailer entries
*/","* Parses through the unfiltered stream and populates the xrefTable HashMap.
     * 
     * @param resolver resolver to read the xref/trailer information
     * @throws IOException If there is an error while parsing the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,findObjectKey,"org.apache.pdfbox.pdfparser.XrefParser:findObjectKey(org.apache.pdfbox.cos.COSObjectKey,long,java.util.Map)",475,549,"/**
* Fetches the COSObjectKey for a given offset, updating the key if necessary.
* @param objectKey initial object key
* @param offset search offset
* @param xrefOffset cross-reference offsets
* @return updated COSObjectKey or null if not found
*/","* Check if the given object can be found at the given offset. Returns the provided object key if everything is ok.
     * If the generation number differs it will be fixed and a new object key is returned.
     * 
     * @param objectKey the key of object we are looking for
     * @param offset the offset where to look
     * @param xrefOffset a map with with all known xref entries
     * @return returns the found/fixed object key
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefTable,org.apache.pdfbox.pdfparser.XrefParser:parseXrefTable(long),577,691,"/**
* Validates and processes an XRef table.
* @param startByteOffset starting offset for xref trailer resolver
*/","* This will parse the xref table from the stream and add it to the state
     * The XrefTable contents are ignored.
     * @param startByteOffset the offset to start at
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,fillGapsWithFreeEntries,org.apache.pdfbox.pdfwriter.COSWriter:fillGapsWithFreeEntries(),801,844,"/**
* Generates and updates free number ranges.
* @param none
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream),237,240,"/**
 * Initializes a new COSWriter instance with the specified output stream.
 * @param outputStream OutputStream to write compressed content to
 */","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead,java.util.Set)",289,307,"/**
* Initializes COSWriter with objects to write and input data.
* @param objectsToWrite set of COSDictionaries to be written
*/","* Constructor for incremental updates with a list of objects to write. This allows to
     * include objects even if there is no path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only
     * dictionaries are supported; if you need to update other objects classes, then add their
     * parent dictionary.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data.
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,setNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:setNeedToBeUpdated(boolean),41,44,"/**
* Enables or disables mask functionality.
* @param flag true to enable, false to disable
*/","* Set the update state of the dictionary for the COSWriter. This indicates whether an object is
     * to be written when there is an incremental save.
     *
     * @param flag the update state.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(),219,222,"/**
* Calls m1 with default parameter value.","* Calls {@link #update(boolean)} with {@code true} as the new update state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,"org.apache.pdfbox.cos.COSArray:getString(int,java.lang.String)",418,430,"/**
* Retrieves string value from index, falling back to default value if out of bounds.
* @param index array index
* @param defaultValue default string value when index is invalid
* @return String value at index or default value","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,equals,org.apache.pdfbox.cos.COSString:equals(java.lang.Object),274,284,"/**
* Verifies a COSString object against the current state.
* @param obj COSString object to verify
* @return true if valid, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toString,org.apache.pdfbox.cos.COSString:toString(),293,297,"/**
* Returns a formatted string representing the function mask.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:getFile(),55,59,"/**
* Returns the function mask value from the file system.
*/","* This will get the file name.
     *
     * @return The file name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:getNamedDestination(),88,101,"/**
* Extracts mask value from destination, either as string or name.
* @return String representation of mask value or null if not found
*/","* This will get the name of the destination.
     *
     * @return The name of the destination.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,getPairableItems,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:getPairableItems(org.apache.pdfbox.cos.COSBase,int)",133,167,"/**
* Extracts a list of string values from the given items, indexed by pairIdx.
* @param items COSBase object to extract from
* @param pairIdx index into two-element arrays (0 or 1)
* @return List<String> containing extracted values; empty if not found
*/","* Return either one of a list which can have two-element arrays entries.
     * <p>
     * Some entries in a dictionary can either be an array of elements
     * or an array of two-element arrays. This method will either return
     * the elements in the array or in case of two-element arrays, the element
     * designated by the pair index
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the items contain
     * two-element arrays and the index is not 0 or 1.
     * </p>
     * 
     * @param items the array of elements or two-element arrays
     * @param pairIdx the index into the two-element array
     * @return a List of single elements",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getExportValues(),249,262,"/**
* Extracts a list of mask values from the specified option.
*@return list of String values or empty list if not found
*/","* This will get the (optional) export values.
     * 
     * <p>The export values are defined in the field dictionaries /Opt key.</p>
     * 
     * <p>The option values are used to define the export values
     * for the field to 
     * <ul>
     *  <li>hold values in non-Latin writing systems as name objects, which represent the field value, are limited
     *      to PDFDocEncoding
     *  </li>
     *  <li>allow radio buttons having the same export value to be handled independently
     *  </li>
     * </ul>
     * 
     * @return List containing all possible export values. If there is no /Opt entry an empty list will be returned.
     * 
     * @see #getOnValues()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearance(),74,84,"/**
* Retrieves the function mask from the DA attribute.
* @return String representing the function mask or null if invalid
*/","* Get the default appearance.
     * 
     * This is an inheritable attribute.
     * 
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     * 
     * @return the DA element of the dictionary object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(java.lang.String),87,90,"/**
 * Constructs a COSString instance from the specified text.
 * @param text input string to be wrapped by the COSString object
 */","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isStandard14(),370,393,"/**
* Verifies encoding consistency by checking dictionary entries against base encoding.
* @return true if consistent, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,encode,"org.apache.pdfbox.filter.ASCII85Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",43,52,"/**
* Encodes InputStream to ASCII85 and writes it to OutputStream.
* @param input InputStream to encode
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary (not used in this implementation)
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode1D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode1D(),152,173,"/**
* Iterates through run trees to update mask indices.
* @throws IOException on input/output error
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode2D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode2D(),175,242,"/**
* Reverses and updates row change data based on code tree traversal.
* @throws IOException if IO error occurs during node access
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encode2D,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encode2D(),167,220,"/**
* Updates mask by iterating over columns and applying changes based on row differences.
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",58,134,"/**
* Decodes and writes image data from input stream to output stream.
* @param encoded input stream containing encoded image
* @param decoded output stream for decoded image data
* @param parameters COSDictionary of decode parameters
* @param index unused parameter, always 0
* @param options DecodeOptions object with various settings
* @return DecodeResult object or null if decoding fails
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.io.InputStream),162,166,"/**
* Initializes Visible Sign Designer with an image stream.
* @param imageStream input stream containing the design image
*/","* Constructor usable for signing existing signature fields.
     *
     * @param imageStream image as a stream
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureImage(java.lang.String),270,277,"/**
* Reads and processes mask design from file at specified path.
* @param path file system path to mask design file
*/","* Set the image for the signature.
     *
     * @param path Path of the image file.
     * @return Visible Signature Configuration Object
     * @throws IOException if the image for the signature could not be set",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[],int,int)",297,327,"/**
* Reads and processes a byte array in chunks, handling predictor logic.
* @param bytes the input byte array
* @param off starting offset
* @param len chunk length
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,flush,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:flush(),349,359,"/**
* Processes current row data and calls parent method.
* @throws IOException if processing fails
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.common.PDStream),36,39,"/**
* Constructs a new PDTransparencyGroup instance from a given PDStream.
* @param stream input stream containing transparency group data
*/","* Creates a Transparency Group for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",222,233,"/**
* Creates a PDF Form XObject from the provided resources and streams.
* @param holderFormResources form resources
* @param holderFormStream stream to create XObject from
* @param bbox bounding box for the XObject
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",269,279,"/**
* Creates a PDFormXObject from the provided resources and stream, 
* applying it to the specified bounding box within the PDF structure.",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:readEncodingFromFont(),283,304,"/**
* Returns an Encoding object based on the current state.
* @throws IOException if encoding cannot be determined
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:readEncodingFromFont(),492,513,"/**
* Returns the encoding mask based on font type and properties.
* @return Encoding object, either Type1 or Standard, depending on conditions
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionary,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionary(boolean),281,328,"/**
* Parses COSDictionary from input stream.
* @param isDirect whether to parse directly
* @return COSDictionary object or null on error
*/","* This will parse a PDF dictionary.
     *
     * @param isDirect indicates whether the dictionary to be read is a direct object
     * @return The parsed dictionary, never null.
     *
     * @throws IOException If there is an error reading the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(),1052,1067,"/**
* Reads and formats a mask from the input stream.
* @return The formatted mask string or null on error
*/","* This will read the next string from the stream.
     *
     * @return The string that was read from the stream, never null.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedString,"org.apache.pdfbox.pdfparser.BaseParser:readExpectedString(char[],boolean)",1076,1089,"/**
* Verifies a character array against the input stream, throwing an IOException if mismatched.
* @param expectedString character array to match
* @param skipSpaces whether to ignore spaces in the comparison (default: false)
*/","* Reads given pattern from {@link #source}. Skipping whitespace at start and end if wanted.
     * 
     * @param expectedString pattern to be skipped
     * @param skipSpaces if set to true spaces before and after the string will be skipped
     * @throws IOException if pattern could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(int),1117,1140,"/**
* Builds a string mask based on input length.
* @param length maximum characters to read from input
* @return encoded string or null if invalid data encountered
*/","* This will read the next string from the stream up to a certain length.
     *
     * @param length The length to stop reading at.
     *
     * @return The string that was read from the stream of length 0 to length.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readInt,org.apache.pdfbox.pdfparser.BaseParser:readInt(),1387,1406,"/**
* Extracts and parses an integer value from a binary stream.
* @return parsed integer value or throws IOException if invalid
*/","* This will read an integer from the stream.
     *
     * @return The integer that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLong,org.apache.pdfbox.pdfparser.BaseParser:readLong(),1416,1434,"/**
* Parses and returns long value from buffer using m7 method.
* @throws IOException if parsing fails
*/","* This will read an long from the stream.
     *
     * @return The long that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,calculateXRefFixedOffset,org.apache.pdfbox.pdfparser.XrefParser:calculateXRefFixedOffset(long),326,343,"/**
* Calculates and returns a fixed offset for an object's reference.
* @param objectOffset current object position
* @return corrected offset or 0 on failure
*/","* Try to find a fixed offset for the given xref table/stream.
     * 
     * @param objectOffset the given offset where to look at
     * @return the fixed offset
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",854,900,"/**
* Encrypts user credentials based on provided revision and encryption settings.
* @param password user password
* @param owner user identifier
* @param permissions access rights
* @param id unique user ID
* @param encRevision encryption revision
* @param keyLengthInBytes key length in bytes
* @param encryptMetadata whether to encrypt metadata
* @return encrypted credentials or empty byte array for REVISION_5/6","* This will compute the user password hash.
     *
     * @param password The plain text password.
     * @param owner The owner password hash.
     * @param permissions The document permissions.
     * @param id The document id.
     * @param encRevision The revision of the encryption.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return The user password.
     *
     * @throws IOException if the password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword234(byte[],byte[],int,int)",671,701,"/**
* Computes masked password for owner using RC4 encryption.
* @param ownerPassword raw owner password
* @param owner user ID or login credentials (depending on encRevision)
* @param encRevision encryption revision level (2, 3, or 4)
* @param length output buffer size
* @return encrypted password as byte array",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeOwnerPassword(byte[],byte[],int,int)",914,945,"/**
* Encrypts user password using RC4 algorithm with provided owner password.
* @param ownerPassword owner's password to derive encryption key
* @param userPassword user's password to encrypt
* @param encRevision encryption revision level
* @param length data length (must be 5 for REVISION_2)
* @return encrypted byte array or throws IOException on error","* Compute the owner entry in the encryption dictionary.
     *
     * @param ownerPassword The plaintext owner password.
     * @param userPassword The plaintext user password.
     * @param encRevision The revision number of the encryption algorithm.
     * @param length The length of the encryption key.
     *
     * @return The o entry of the encryption dictionary.
     *
     * @throws IOException if the owner password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,process,"org.apache.pdfbox.contentstream.operator.state.Concatenate:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,68,"/**
* Applies a mask operation to the specified COSBase arguments.
* @param operator Operator instance
* @param arguments List of COSBase objects (minimum 6 operands)
* @throws IOException if an I/O error occurs
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,77,"/**
* Applies FUNC_MASK operator to the given operands.
* @param operator the operator
* @param arguments list of operands (must contain at least 2)
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,rotate,org.apache.pdfbox.util.Matrix:rotate(double),278,281,"/**
 * Applies mask operation to matrix based on given angle.
 * @param theta input angle in radians
 */","* Rotates this matrix by the given factors.
     *
     * @param theta The angle of rotation measured in radians",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,applyTextAdjustment,"org.apache.pdfbox.contentstream.PDFStreamEngine:applyTextAdjustment(float,float)",722,726,"/**
 * Applies 2D transformation to the model by calling nested functions.
 * @param tx x-coordinate of the translation
 * @param ty y-coordinate of the translation
 */","* Applies a text position adjustment from the TJ operator. May be overridden in subclasses.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,org.apache.pdfbox.util.Matrix:translate(org.apache.pdfbox.util.Vector),237,240,"/**
* Recursively calls m3 on the components of the input Vector.
* @param vector input vector with two components
*/","* Translates this matrix by the given vector.
     *
     * @param vector 2D vector",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,"org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)",434,437,"/**
* Applies matrix multiplication with mask from 'b' to 'a'.
* @param a input matrix
* @param b matrix containing mask for multiplication
* @return resulting matrix after applying the mask
*/","* Produces a copy of the first matrix, with the second matrix concatenated.
     *
     * @param a The matrix to copy.
     * @param b The matrix to concatenate.
     * 
     * @return a copy of the first matrix with the second matrix concatenated",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument),202,205,"/**
* Initializes a new PDDocument instance from a COSDocument.
* @param cosDoc COSDocument object to import
* @param password password for encrypted document (null if none) 
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStroke,org.apache.pdfbox.rendering.PageDrawer:getStroke(),705,740,"/**
* Creates a Stroke object for basic drawing operations.
* @return a BasicStroke instance with customized settings
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getTriangles(),167,171,"/**
* Generates and returns a list of shaded triangles.
* @return List of ShadedTriangle objects
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.CharSequence),68,73,"/**
 * Recursively processes input text by extracting tokens and 
 * invoking this method on each token.",{@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanNewLine,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanNewLine(),220,232,"/**
* Processes a newline character in the input stream.
* @param state current parser state
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanWhitespace,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanWhitespace(),234,254,"/**
* Processes whitespace characters and passes non-whitespace data to the handler.
* @param state current parser state
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanComment,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanComment(),256,276,"/**
* Processes and masks input characters, handling line breaks.
* @param state current parser state
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanToken,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanToken(),278,315,"/**
* Processes a block of characters and updates the parser state.
* @param none
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getCurrentAccessPermission,org.apache.pdfbox.pdmodel.PDDocument:getCurrentAccessPermission(),1355,1362,"/**
* Returns cached AccessPermission instance or initializes it on first call. 
*/","* Returns the access permissions granted when the document was decrypted. If the document was not decrypted this
     * method returns the access permission for a document owner (ie can do everything). The returned object is in read
     * only mode so that permissions cannot be changed. Methods providing access to content should rely on this object
     * to verify if the current user is allowed to proceed.
     * 
     * @return the access permissions for the current user on the document.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRevisionNumber,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRevisionNumber(int),109,131,"/**
* Calculates revision mask based on version and access permissions.
* @param version system version
*/","* Computes the revision version of the StandardSecurityHandler to
     * use regarding the version number and the permissions bits set.
     * See PDF Spec 1.6 p98
     * 
     * @param version The version number.
     *
     * @return The computed revision number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAESother,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",317,346,"/**
* Decrypts/Encrypts data using a cipher with the provided key and IV.
* @param finalKey encryption key
* @param data input stream to process
* @param output output stream for encrypted/decrypted data
* @param decrypt whether to decrypt (true) or encrypt (false)
*/","* Encrypt or decrypt data with AES with key length other than 256 bits.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAES256,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",357,390,"/**
* Encrypts/decrypts binary data using a cipher with provided key and IV.
* @param data InputStream containing encrypted/encrypted data
* @param output OutputStream to write decrypted/decrypted data
* @param decrypt whether to encrypt or decrypt the data
*/","* Encrypt or decrypt data with AES256.
     *
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],byte[],java.io.OutputStream)",300,304,"/**
* Encrypts input data using RC4 algorithm and writes to output stream.
* @param finalKey encryption key
* @param input data to encrypt
* @param output stream for encrypted data
*/","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(java.io.InputStream,java.io.OutputStream)",139,147,"/**
* Copies input stream to output stream in chunks.
* @param data input stream containing data to be copied
* @param output output stream where the data will be written
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepQuery,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepQuery(java.lang.String),48,51,"/**
* Returns a string with function mask applied.
* @param str input string to be processed
* @return modified string with function mask applied
*/","* Return the {@code SASLPrep}-canonicalised version of the given {@code str} for use as a query
     * string. This implements the {@code SASLPrep} algorithm defined in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a query string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepStored,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepStored(java.lang.String),66,69,"/**
* Applies function mask to input string.
* @param str input string to process
* @return processed string or null if failed
*/","* Return the {@code SASLPrep}-canonicalised version of the given
     * @code str} for use as a stored string. This implements the {@code SASLPrep} algorithm defined
     * in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a stored string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,createDERForRecipient,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:createDERForRecipient(byte[],java.security.cert.X509Certificate)",471,521,"/**
* Encrypts and wraps user data using RC2 algorithm.
* @param in byte array to encrypt
* @param cert X509Certificate for encryption
* @return Encrypted ContentInfo object
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2A,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2A(byte[],byte[],byte[])",1116,1122,"/**
* Computes a masked hash of the given password.
* @param password password to be hashed
* @param salt random salt value
* @param u unknown data (e.g. user ID)
* @return byte array representing the hashed password
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLine,org.apache.pdfbox.text.PDFTextStripper:writeLine(java.util.List),1857,1870,"/**
* Processes a list of words with text positions.
* @param line List of WordWithTextPositions objects
*/","* Write a list of string containing a whole line of a document.
     * 
     * @param line a list with the words of the given line
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getFont(),131,157,"/**
* Retrieves FontBoxFont instance based on the specified format.
* @return FontBoxFont object or null if not found
*/","* {@inheritDoc}
         * <p>
         * The method returns null if there is there was an error opening the font.
         *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,saveDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:saveDiskCache(),410,434,"/**
* Writes font information to cache file.
* @throws SecurityException if unable to write
*/",* Saves the font metadata cache to disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,loadDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:loadDiskCache(java.util.List),493,652,"/**
* Processes a list of files to fetch FSFontInfo objects from the disk cache.
* @param files list of File objects
* @return List<FSFontInfo> or null if font cache needs to be rebuilt
*/",* Loads the font metadata cache from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,setProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:setProvider(org.apache.pdfbox.pdmodel.font.FontProvider),145,149,"/**
* Updates internal font provider and fetches font info by name.
* @param fontProvider FontProvider instance to update
*/",* Sets the font service provider.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:<init>(java.awt.geom.Point2D[],float[][])",58,92,"/**
* Initializes a shaded triangle object from given points and color data.
* @param p array of 3D points defining the triangle
* @param c array of RGB color values for the triangle's edges
*/","* Constructor.
     *
     * @param p an array of the 3 vertices of a triangle
     * @param c an array of color corresponding the vertex array p",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1CFont:getHeight(int),367,387,"/**
* Retrieves the height of a glyph by its code.
* @param code unique glyph identifier
* @return glyph height in float or 0 if not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeTo,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeTo(java.io.OutputStream),91,176,"/**
* Writes a CID font mask to the specified output stream.
* @param out OutputStream to write to
*/","* Writes the CMap as ASCII to the given output stream.
     *
     * @param out ASCII output stream
     * @throws IOException if the stream could not be written",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,load,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:load(java.lang.String,int)",48,64,"/**
* Loads a glyph list from the specified resource file.
* @param filename name of the glyph list resource
* @param numberOfEntries number of entries to read from the list
* @return GlyphList object or null if loading fails
*/",* Loads a glyph list from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getWidthFromFont(int),368,379,"/**
* Calculates the glyph width based on the provided code.
* @param code unique character identifier
* @return glyph width in EM units
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getHeight(int),381,391,"/**
* Calculates font metric M4 by ID.
* @param code unique font identifier
* @return floating-point value or 0 if not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getGIDToCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getGIDToCode(),452,465,"/**
* Builds a cache map of GID to code mappings.
* @return Map of GIDs to corresponding codes
*/","* Inverts the font's code -&gt; GID mapping. Any duplicate (GID -&gt; code) mappings will be lost.
     * 
     * @return the GID for the given code
     * 
     * @throws IOException if the data could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(int),594,598,"/**
* Checks if the given mask code is valid.
* @param code mask code to verify
* @return true if valid, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(int),181,195,"/**
* Processes a code and determines the hyphen/space type.
* @param code input code to process
* @return true if processing was successful, false otherwise
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(int),197,215,"/**
* Resolves user profile path based on input code.
* @param code input code
* @return GeneralPath object or empty path if not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNormalizedPath(int),217,240,"/**
* Builds a GeneralPath object based on the provided code.
* @param code unique identifier for font mask
* @return GeneralPath object or null if not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getWidthFromFont(int),349,359,"/**
* Calculates and returns the mask value based on the given code.
* @param code unique identifier
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1Font:codeToName(int),561,565,"/**
* Generates font mask string based on given code.
* @param code unique font identifier
* @return Font mask string or "".notdef"" if not found
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(java.lang.String),616,629,"/**
* Returns a GeneralPath representation based on the given font name.
* @param name Font name to process
* @return GeneralPath object or empty path if not applicable
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(java.lang.String),650,654,"/**
* Calls generic font's m2 method with result of m1(name).
* @param name input string to process
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGB(float[]),140,145,"/**
* Transforms color array using M2 conversion.
* @param value input color array
* @return transformed color array or null on failure
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImage(java.awt.image.WritableRaster),155,160,"/**
* Creates a function mask from input WritableRaster.
* @param raster Input image data
* @return Function mask as BufferedImage or null on failure
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkConverterState,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),591,648,"/**
* Validates PNG converter state.
* @param state PNGConverterState object to validate
* @return true if valid, false otherwise
*/","* Check if the converter state is sane.
     *
     * @param state the parsed converter state
     * @return true if the state seems plausible",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getTriangles(),123,132,"/**
* Computes shaded triangles from control points and levels.
* @return List of ShadedTriangle objects
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endTextClip,org.apache.pdfbox.rendering.PageDrawer:endTextClip(),474,493,"/**
* Updates graphics state and text clippings based on rendering mode.
* @param none
*/","* End buffering the text clipping path, if any.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,clip,org.apache.pdfbox.rendering.PageDrawer:clip(int),958,979,"/**
* Applies winding rule to clipping path.
* @param windingRule Winding rule value: -1 or a valid rule
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setClip,org.apache.pdfbox.rendering.PageDrawer:setClip(),411,424,"/**
* Updates clipping paths and notifies graphics context.
* @param graphics graphics context to notify
*/","* Sets the clipping path using caching for performance. We track lastClip manually because
     * {@link Graphics2D#getClip()} returns a new object instead of the same one passed to
     * {@link Graphics2D#setClip(java.awt.Shape) setClip()}. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getDataToSign,org.apache.pdfbox.pdfwriter.COSWriter:getDataToSign(),931,949,"/**
* Returns a sequence InputStream combining incremental input and increment part.
* @throws IOException if an I/O error occurs
*/","* Return the stream of PDF data to be signed. Clients should use this method only to create
     * signatures externally. {@link #write(PDDocument)} method should have been called prior. The
     * created signature should be set using {@link #writeExternalSignature(byte[])}.
     * <p>
     * When {@link SignatureInterface} instance is used, COSWriter obtains and writes the signature
     * itself.
     * </p>
     *
     * @return data stream to be signed
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if input data is closed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[]),61,65,"/**
 * Calls m1() with default offset and length parameters.
 * @param b byte array to process
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,mergeDiacritic,org.apache.pdfbox.text.TextPosition:mergeDiacritic(org.apache.pdfbox.text.TextPosition),667,745,"/**
* Applies a diacritic mask to the input text.
* @param diacritic TextPosition object containing diacritic details
*/","* Merge a single character TextPosition into the current object. This is to be used only for
     * cases where we have a diacritic that overlaps an existing TextPosition. In a graphical
     * display, we could overlay them, but for text extraction we need to merge them. Use the
     * contains() method to test if two objects overlap.
     *
     * @param diacritic TextPosition to merge into the current TextPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",31,69,"/**
* Compares two text positions based on their coordinates.
* @param pos1 first TextPosition object
* @param pos2 second TextPosition object
* @return negative, zero or positive integer indicating comparison result
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,contains,org.apache.pdfbox.text.TextPosition:contains(org.apache.pdfbox.text.TextPosition),568,608,"/**
* Checks if two TextPositions have significant overlap (> 15% width).
* @param tp2 TextPosition to check overlap with
* @return true if overlapping, false otherwise
*/","* Determine if this TextPosition logically contains another (i.e. they overlap and should be
     * rendered on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained in the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,completelyContains,org.apache.pdfbox.text.TextPosition:completelyContains(org.apache.pdfbox.text.TextPosition),618,657,"/**
* Checks for overlapping rectangles between two TextPositions.
* @param tp2 second TextPosition to compare
* @return true if rectangles overlap, false otherwise
*/","* Determine if this TextPosition perfectly contains another (i.e. the other TextPosition
     * overlaps 100% with this one and fits entirely inside its bounding box when they are rendered
     * on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained completely inside the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphSeparator,org.apache.pdfbox.text.PDFTextStripper:writeParagraphSeparator(),1701,1705,"/**
 * Performs initialization tasks (m1 and m2) to set up functionality. 
 * Throws IOException if any of these tasks fail. 
 */","* writes the paragraph separator string to the output.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,isParagraphSeparation,"org.apache.pdfbox.text.PDFTextStripper:isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1615,1687,"/**
* Updates position based on line start and max height.
* @param position current position
* @param lastPosition previous position
* @param lastLineStartPosition start of previous line
* @param maxHeightForLine maximum height for line
*/","* tests the relationship between the last text position, the current text position and the last text position that
     * followed a line separator to decide if the gap represents a paragraph separation. This should <i>only</i> be
     * called for consecutive text positions that first pass the line separation test.
     * <p>
     * This base implementation tests to see if the lastLineStartPosition is null OR if the current vertical position
     * has dropped below the last text vertical position by at least 2.5 times the current text height OR if the current
     * horizontal position is indented by at least 2 times the current width of a space character.
     * </p>
     * <p>
     * This also attempts to identify text that is indented under a hanging indent.
     * </p>
     * <p>
     * This method sets the isParagraphStart and isHangingIndent flags on the current position object.
     * </p>
     *
     * @param position the current text position. This may have its isParagraphStart or isHangingIndent flags set upon
     * return.
     * @param lastPosition the previous text position (should not be null).
     * @param lastLineStartPosition the last text position that followed a line separator, or null.
     * @param maxHeightForLine max height for text positions since lasLineStartPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,createWord,"org.apache.pdfbox.text.PDFTextStripper:createWord(java.lang.String,java.util.List)",2039,2042,"/**
* Creates WordWithTextPositions object from given word and positions.
* @param word input word
* @param wordPositions list of text positions for the word
*/",* Used within {@link #normalize(List)} to create a single {@link WordWithTextPositions} entry.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseDate,"org.apache.pdfbox.util.DateConverter:parseDate(java.lang.String,java.text.ParsePosition)",621,690,"/**
* Parses input text to find a calendar date.
* @param text input text to parse
* @param initialWhere initial position in the text where parsing should start
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,setSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:setSignature(byte[]),45,49,"/**
* Writes function mask signature to COS writer.
* @param signature byte array containing function mask data
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromName,org.apache.pdfbox.pdfwriter.COSWriter:visitFromName(org.apache.pdfbox.cos.COSName),1362,1366,"/**
* Applies M1 mask to COSName object.
* @param obj COSName instance to modify
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSName,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSName(java.io.OutputStream,org.apache.pdfbox.cos.COSName)",306,310,"/**
* Writes a COSName object to an OutputStream using specified formatting.
* @param output OutputStream to write to
* @param cosName COSName object containing data to be written
*/","* Write the given {@link COSName} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosName The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(org.apache.pdfbox.cos.COSName),1479,1483,"/**
* Writes COSName to output stream with formatting.
* @param name COSName object to format and write
*/","* Writes a COSName to the content stream.
     * 
     * @param name the name to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],boolean,java.io.OutputStream)",1644,1696,"/**
* Formats byte array as ASCII or hexadecimal string.
* @param bytes input byte data
* @param forceHex forces hexadecimal representation even if ASCII
* @param output OutputStream to write formatted string
*/","* This will output the given text/byte string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,sort,"org.apache.pdfbox.util.IterativeMergeSort:sort(java.util.List,java.util.Comparator)",61,78,"/**
* Applies a comparator to the specified list and updates its iterator.
* @param list input list
* @param cmp comparator to apply
*/","* Sorts this list according to the order induced by the specified
     * {@link Comparator}.
     * 
     * @param  <T> the class of the objects in the list
     * @param  list the list to be sorted.
     * @param  cmp the comparator to determine the order of the list.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
* Initializes non-stroking color settings.
* @param context PDF rendering engine context
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes Non-Stroking Device CMYK Color.
* @param context PDFStreamEngine instance
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes non-stroking device gray color settings.
* @param context PDFStreamEngine instance
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes non-stroking device RGB color settings.
* @param context PDFStreamEngine instance
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
* Initializes stroking color settings.
* @param context PDFStreamEngine instance
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes stroking device CMYK color.
 * @param context PDFStreamEngine instance
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes StrokingDeviceGrayColor instance.
* @param context PDFStreamEngine context
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Initializes stroking device with RGB color.
* @param context PDF stream engine instance
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LegacyFillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LegacyFillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
* Initializes LegacyFillNonZeroRule engine with provided graphics stream context.
* @param context PDFGraphicsStreamEngine instance to manage graphics operations
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(java.lang.String),62,70,"/**
* Initializes PDF extractor with marked content operators.
* @param encoding PDF document encoding
*/","* Constructor. Will apply encoding-specific conversions to the output text.
     *
     * @param encoding The encoding that the output will be written in.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper:<init>(),196,201,"/**
* Initializes PDFTextStripper with default marked content sequences.
*/",* Instantiate a new PDFTextStripper object.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(java.lang.String),1189,1192,"/**
* Resolves COSName instance to COSBase.
* @param key input string to resolve
* @return COSBase object or null if not found
*/","* This will do a lookup into the dictionary.
     * 
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(java.lang.String),1299,1302,"/**
* Recursively resolves COS name to internal representation.
* @param name name to resolve
* @return true if resolved successfully, false otherwise
*/","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(java.lang.String),77,80,"/**
* Creates and returns a Filter object based on the given COS name.
* @param filterName COS name to create a Filter from
*/","* Returns a filter instance given its name as a string.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSName,org.apache.pdfbox.pdfparser.BaseParser:parseCOSName(),861,918,"/**
* Parses and returns a COSName from the input stream.
*@return COSName object or null on error
*/","* This will parse a PDF name from the stream.
     *
     * @return The parsed PDF name.
     * @throws IOException If there is an error reading from the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:getCOSObject(),238,242,"/**
* Returns a COSBase representing the Symbol Encoding function.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:getCOSObject(),237,241,"/**
* Returns the COSBase instance for Zapf Dingbats encoding.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",51,79,"/**
* Initializes PDColor object from COSArray and color space.
* @param array COSArray containing color data (components or name)
* @param colorSpace ColorSpace to associate with the color
*/","* Creates a PDColor containing the given color value.
     * @param array a COS array containing the color value
     * @param colorSpace color space in which the color value is defined",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:getCOSObject(),35,39,"/**
* Calculates the mask value using m1 and m2 functions.
* @return COSBase object containing the calculated mask value
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,parseHex,org.apache.pdfbox.cos.COSString:parseHex(java.lang.String),136,193,"/**
* Converts hexadecimal string to COSString.
* @param hex input hexadecimal string
*/","* This will create a COS string from a string of hex characters.
     *
     * @param hex A hex string.
     * @return A cos string with the hex characters converted to their actual bytes.
     * @throws IOException If there is an error with the hex string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSIntegers,org.apache.pdfbox.cos.COSArray:ofCOSIntegers(java.util.List),751,756,"/**
* Converts list of integers to COSArray using specified function.
*/","* This will take a list of integer objects and return a COSArray of COSInteger objects.
     *
     * @param integer A list of integers
     *
     * @return An array of COSInteger objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSNames,org.apache.pdfbox.cos.COSArray:ofCOSNames(java.util.List),765,770,"/**
* Creates COSArray from list of string names.
* @param strings list of PDF object references
* @return COSArray containing PDF objects or null if empty
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSStrings,org.apache.pdfbox.cos.COSArray:ofCOSStrings(java.util.List),779,784,"/**
* Converts a list of strings to a COSArray.
* @param strings list of string values
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(),55,59,"/**
* Initializes an empty COSArrayList instance.
* @param none 
* @return none
*/",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",95,101,"/**
* Initializes COSArrayList with a given COSDictionary and key.
* @param dictionary the parent dictionary
* @param dictionaryKey unique identifier in the dictionary
*/","* This constructor is to be used if the array doesn't exist, but is to be created and added to
     * the parent dictionary as soon as the first element is added to the array.
     *
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is
     * added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,convertListOfByteArraysToCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:convertListOfByteArraysToCOSArray(java.util.List),640,645,"/**
* Creates a COSArray from a list of byte arrays.
* @param strings list of byte arrays to convert
* @return COSArray containing converted string values
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(),43,46,"/**
* Initializes a new instance of the page destination with an empty array.","* Constructor to create empty page destination.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float,float,float)",117,125,"/**
* Initializes a rectangle with the specified coordinates and dimensions.
* @param x left X-coordinate
* @param y top Y-coordinate
* @param width rectangle's width
* @param height rectangle's height
*/","* Constructor.
     *
     * @param x the x coordinate of the rectangle
     * @param y the y coordinate of the rectangle
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.fontbox.util.BoundingBox),132,140,"/**
* Initializes PDRectangle with bounding box coordinates.
* @param box BoundingBox object containing lower-left and upper-right corner values
*/","* Constructor.
     *
     * @param box the bounding box to be used for the rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFilters(java.util.List),257,260,"/**
 * Applies filter masks to the stream.
 * @param filters list of filter names
 */","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(),37,45,"/**
* Initializes the PDF with an array of four null colours.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setAlternateColorSpaces,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setAlternateColorSpaces(java.util.List),496,504,"/**
* Sets alternate color space in PDF stream.
* @param list List of PDColorSpace objects to set
*/","* Sets the list of alternateColorSpace color spaces.
     *
     * @param list the list of color space objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,org.apache.pdfbox.cos.COSDocument:createCOSStream(),172,180,"/**
* Creates and initializes a COSStream object with mask functionality.
*/","* Creates a new COSStream using the current configuration for scratch files.
     * 
     * @return the new COSStream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(),69,72,"/**
* Initializes a new COSStream instance with no stream.","* Creates a new stream with an empty dictionary.
     * <p>
     * Try to avoid using this constructor because it creates a new scratch file in memory. Instead,
     * use {@link COSDocument#createCOSStream() document.getDocument().createCOSStream()} which will
     * use the existing scratch file (in memory or in temp file) of the document.
     * </p>",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)",93,99,"/**
* Initializes COSStream with cached stream and read view.
* @param streamCache RandomAccessStreamCache instance
* @param randomAccessReadView RandomAccessReadView object
*/","* Creates a new stream with an empty dictionary. Data is read from the given random accessview. Written data is
     * stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.
     * @param randomAccessReadView source for the data to be read
     * @throws IOException if the length of the random access view isn't available",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,asUnmodifiableDictionary,org.apache.pdfbox.cos.COSDictionary:asUnmodifiableDictionary(),1335,1338,"/**
* Creates an unmodifiable COS dictionary with current function mask. 
* @return UnmodifiableCOSDictionary object containing function mask properties
*/","* Returns an unmodifiable view of this dictionary.
     * 
     * @return an unmodifiable view of this dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,getDecodeResult,org.apache.pdfbox.cos.COSInputStream:getDecodeResult(),96,106,"/**
* Returns the decode result based on current state.
* @return DecodeResult object indicating success or failure
*/","* Returns the result of the last filter, for use by repair mechanisms.
     * 
     * @return the result of the last filter",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getResources,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getResources(),174,190,"/**
* Retrieves PDF resources dictionary.
* @return PDResources object or null if not found
*/","* This will get the resources for this Form XObject.
     * This will return null if no resources are available.
     * 
     * @return The resources for this Form XObject.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormResources(),213,220,"/**
* Creates and initializes holder form resources.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormResource,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormResource(),260,267,"/**
* Initializes resources for an inner form.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormResources(),298,304,"/**
* Creates and initializes image form resources.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(),43,45,"/**
 * Initializes an empty PDAttributeObject instance.",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject),39,42,"/**
 * Initializes a new instance of PDUserProperty with the specified user attribute object.
 * @param userAttributeObject User attribute object to associate with this property. 
 */","* Creates a new user property.
     * 
     * @param userAttributeObject the user attribute object",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(),38,40,"/**
* Initializes an empty PDOutlineNode instance.",* Default Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(),37,39,"/**
* Creates an empty PDDestinationNameTreeNode instance.",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(),35,37,"/**
* Constructs an empty PDEmbeddedFilesNameTreeNode instance.",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(),36,38,"/**
* Constructs an empty PDJavascriptNameTree node.",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(),36,39,"/**
* Initializes a new instance of PDStructureElementNameTreeNode.",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDNonTerminalField instance from a PDAcroForm. 
 * @param acroForm containing non-terminal field information
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,47,"/**
 * Initializes a new instance of PDTerminalField with an associated PDAcroForm.
 * @param acroForm the parent AcroForm object
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),365,368,"/**
* Constructs a PDLayoutAttributeObject from a COSDictionary.","* Creates a new Layout attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),88,91,"/**
* Initializes a PDListAttributeObject with the given COSDictionary.
* @param dictionary COSDictionary containing attribute data
*/","* Creates a new List attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Initializes a new instance of PDPrintFieldAttributeObject from a COSDictionary.","* Creates a new PrintField attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
* Constructs PDTableAttributeObject from COSDictionary.","* Creates a new Table attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.cos.COSStream),38,41,"/**
 * Initializes PDAppearanceStream with COSStream data.
 * @param stream COSStream object containing appearance data
 */","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",47,50,"/**
* Initializes a new Transparency Group from the given COS Stream.
* @param stream COS Stream containing transparency group data
* @param cache Resource Cache for resolving resources
*/","* Creates a Transparency Group for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeCollection,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeCollection(java.io.File),657,670,"/**
 * Processes TrueType Collection (TTC) font file by extracting and validating checksum.
 * @param ttcFile TTC font file to process
 */","* Adds a TTC or OTC to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFontImpl,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFontImpl(org.apache.fontbox.ttf.FontHeaders,java.io.File,java.lang.String)",705,791,"/**
 * Processes a font file and extracts relevant information.
 * @param file the font file to process
 * @param hash unique identifier for the file
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addType1Font,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addType1Font(java.io.File),796,825,"/**
* Processes a PFB font file and adds its info to the list.
* @param pfbFile PFB font file
*/","* Adds a Type 1 font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes mesh-based shading type with a dictionary.
* @param shadingDictionary COSDictionary containing shading parameters
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(),108,112,"/**
* Calls itself with a null argument.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(),61,65,"/**
* Calls itself recursively with no argument.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(),129,133,"/**
* Calls itself with no parameters, effectively recursing into infinity.
* This is likely an error and should be replaced with actual implementation.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(),295,299,"/**
* Calls itself recursively with no arguments.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(),65,69,"/**
 * Calls itself recursively with no arguments. 
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(),119,123,"/**
* Calls itself with null argument, triggering recursive behavior.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(),415,419,"/**
* Calls itself recursively with no arguments.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(),227,231,"/**
* Calls itself with no arguments.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(),169,173,"/**
* Calls itself with a null argument, likely to demonstrate recursion.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(),185,189,"/**
* Calls itself with a null argument.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(),62,66,"/**
* Calls itself recursively with no arguments.
* This effectively triggers execution of the overridden method. 
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(),62,66,"/**
 * Calls itself with a null argument, effectively doing nothing.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(),65,69,"/**
* Calls itself with no arguments, effectively invoking default behavior. 
* @param none */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(),65,69,"/**
* Calls itself recursively with no arguments; likely used to trigger some initialization or setup process.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(),233,237,"/**
* Calls m1 with a null argument, likely for testing or demonstration purposes.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(),65,69,"/**
* Calls itself recursively with no arguments.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Initializes a checkbox form field with the given parameters.
* @param acroForm parent AcroForm object
* @param field COS dictionary representing the field
* @param parent parent non-terminal field","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Initializes a push button widget with specified form, field, and parent.","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Initializes a radio button widget with specified form and field properties.
* @param acroForm the PDF form containing this radio button
* @param field the AcroForm dictionary representing the radio button
* @param parent the parent non-terminal field of this radio button
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",65,68,"/**
* Initializes a new PDChoice object with the given form, field, and parent.
* @param acroForm the associated AcroForm
* @param field the field dictionary
* @param parent the non-terminal parent field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",57,60,"/**
* Initializes a PDTextField instance with given parameters.
* @param acroForm PDAcroForm instance for the form
* @param field COSDictionary representing the field
* @param parent PDNonTerminalField parent of this text field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsState(),991,994,"/**
* Applies mask to graphics context.
* @see graphicsStack.m1()
* @see graphicsStack.m2()
*/",* Pushes the current graphics state to the stack.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsStack,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsStack(),1009,1015,"/**
* Saves and returns the current graphics stack.
* @return saved graphics state deque or null if empty
*/","* Saves the entire graphics stack.
     * 
     * @return the saved graphics state stack.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(),101,104,"/**
 * Initializes a new COSDocument instance with in-memory stream caching.",* Constructor. Uses main memory to buffer PDF streams.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",182,191,"/**
* Initializes a COSParser instance from the given input stream and key store.
* @param source input stream to read from
* @param password encryption password (if applicable)
* @param keyStore input stream containing cryptographic keys
* @param keyAlias alias of the key to use for decryption
* @param streamCacheCreateFunction function to create a stream cache
*/","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException if the source data could not be read",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Applies mask operation to the current path.
* @param operator Masking operator
* @param arguments List of COSBase objects for masking
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,46,"/**
* Processes mask operation by applying close path and fill/stroke operators.
* @param operator current Operator instance
* @param operands list of COSBase objects for processing
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Executes mask operation on the current graphics state.
* @param operator operator to perform (masking)
* @param operands list of COSBase objects for masking
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,66,"/**
* Sets text leading and moves text to specified position.
* @param operator current operator
* @param arguments list of operands (must contain at least 2)
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.NextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,54,"/**
* Applies the FUNC_MASK operator with specified arguments.
* @param operator the operator to apply
* @param arguments list of base objects for operation
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Executes a mask operation with the given operator and arguments.
* @param operator the mask operator
* @param arguments list of COSBase objects for the operation
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
* Sets word and character spacing for text line.
* @param operator current operator
* @param arguments list of operands (word spacing, char spacing, show text line)
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFMarkedContentExtractor:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",105,123,"/**
* Updates the marked content for a COSName tag, merging with current content if applicable.
* @param tag unique COSName identifier
* @param properties associated dictionary of properties
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:constructAppearances(),193,213,"/**
* Suppresses mask annotation widget if conditions are met.
* @throws IOException 
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,transform,"org.apache.pdfbox.rendering.PDFRenderer:transform(java.awt.Graphics2D,int,org.apache.pdfbox.pdmodel.common.PDRectangle,float,float)",455,482,"/**
* Applies mask and rotation transformations to the Graphics2D context.
* @param graphics Graphics2D object to transform
* @param rotationAngle angle of rotation (0, 90, 180, or 270)
* @param cropBox bounding box for transformation
* @param scaleX horizontal scaling factor
* @param scaleY vertical scaling factor
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getBounds,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:getBounds(),1995,2022,"/**
* Computes and returns a rectangle with adjusted transform.
* @return Rectangle2D object representing transformed bounds
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,clipToRect,org.apache.pdfbox.contentstream.PDFStreamEngine:clipToRect(org.apache.pdfbox.pdmodel.common.PDRectangle),616,624,"/**
* Applies mask to the specified rectangle.
* @param rectangle PDRectangle object to be masked
*/","* Transforms the given rectangle using the CTM and then intersects it with the current
     * clipping area.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getTransformedAppearanceBBox,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getTransformedAppearanceBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),755,761,"/**
* Transforms and extracts the bounding box from a PDAppearanceStream.
* @param appearanceStream input stream containing graphical data
*/","* Calculate the transformed appearance box.
     * 
     * Apply the Matrix (or an identity transform) to the BBox of
     * the appearance stream
     * 
     * @param appearanceStream
     * @return the transformed rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),85,88,"/**
* Initializes graphics state with a clipping path from the given page rectangle.
* @param page page rectangle defining the clipping region
*/","* Constructor with a given page size to initialize the clipping path.
     * @param page the size of the page",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:getLeft(),65,68,"/**
* Returns the value at index 2 from the 'array' configuration. 
* @return The extracted value as an integer.","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getLeft(),61,64,"/**
* Returns the value at index 2 of the 'm1' array.
* @return integer value from the array
*/","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getBottom(),90,93,"/**
* Returns a specific value from an array using index 3.
* @return integer value","* Get the bottom y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The bottom y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getRight(),119,122,"/**
* Retrieves the mask value from the array at index 4. 
* @return The retrieved mask value.","* Get the right x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The right x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getTop(),149,152,"/**
* Returns the value at index 5 from an array named m1.
* @return integer value from array m1 at index 5
*/","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:getTop(),67,70,"/**
* Retrieves and returns a specific mask value from an array.","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getLeft(),64,67,"/**
* Returns the mask value from the array at index 2.
* @return integer mask value 
*/","* Get the left x coordinate.  Return values of 0 or -1 imply that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getTop(),93,96,"/**
* Returns a specific mask value from an array.
* @return A single integer value from the array.","* Get the top y coordinate.  Return values of 0 or -1 imply that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:fitBoundingBox(),64,67,"/**
* Checks function mask bit using bounded type and array value.
* @return true if enabled, false otherwise
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:fitBoundingBox(),93,96,"/**
* Evaluates mask functionality based on bounded type and array value.","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:fitBoundingBox(),95,98,"/**
* Determines if mask is enabled based on bounded type and array value. 
* @return true if enabled, false otherwise
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(),205,208,"/**
* Returns an OutputStream instance.
* @throws IOException if I/O error occurs
*/","* Returns a new OutputStream for writing stream data, using the current filters.
     *
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(org.apache.pdfbox.cos.COSName),170,173,"/**
* Returns an output stream based on the provided filter.
* @param filter COSName object used to filter the output
*/","* This will get a stream that can be written to, with the given filter.
     *
     * @param filter the filter to be used.
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createThumbnail,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createThumbnail(org.apache.pdfbox.cos.COSStream),156,161,"/**
* Creates an image XObject from the given COS stream.
* @param cosStream input COS stream
*/","* Creates a thumbnail Image XObject from the given COSBase and name.
     * @param cosStream the COS stream
     * @return an XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMask(),803,821,"/**
* Creates a PD image XObject with mask functionality.
* @return PDImageXObject instance or null on failure
*/","* Returns the Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return Mask Image XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSoftMask(),837,846,"/**
* Creates a PDImageXObject from the Function Mask stream.
* @return PDImageXObject instance or null if not found
*/","* Returns the Soft Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return the SMask Image XObject, or null.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeAffineTransform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeAffineTransform(java.awt.geom.AffineTransform),1535,1543,"/**
* Masks an AffineTransform object by applying a custom transformation.
* @param transform the affine transformation to mask
*/","* Writes an AffineTransform to the content stream as an array.
     * 
     * @param transform AffineTransfrom to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginText(),134,142,"/**
* Enters text mode, disallowing nested beginText() calls.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endText(),151,159,"/**
* Ends text mode and flushes internal state.
* @throws IOException on write error
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLeading(float),333,337,"/**
* Sets text leading mask with specified value.
* @param leading lead-in value
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLine(),345,352,"/**
* Advances to next line in text mode.
* @throws IllegalStateException if not in text mode
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLineAtOffset(float,float)",363,372,"/**
* Sets text mask at specified offsets.
* @param tx x-coordinate of the mask
* @param ty y-coordinate of the mask
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state by popping font and color stacks.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets color mask for stroking operations.
* @param r red intensity (0..1)
* @param g green intensity (0..1)
* @param b blue intensity (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Initializes CMYK color mask with specified values and device.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float),759,768,"/**
* Applies mask operation with specified parameter value.
* @param g float parameter value (must be within 0..1)
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Initializes color mask with RGB components.
* @param r red color component (0..1)
* @param g green color component (0..1)
* @param b blue color component (0..1)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Initializes CMYK color model with given values.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float),877,886,"/**
* Applies mask to image based on input value 'g'.
* @param g float value between 0 and 1
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the drawing context with specified position and size.
* @param x left edge of the rectangle
* @param y top edge of the rectangle
* @param width rectangle width
* @param height rectangle height
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Adds a Bezier curve to the path using coordinates x1, y1 and control points x2, y2 and x3, y3.
* @param x1 start point X-coordinate
* @param y1 start point Y-coordinate
* @param x2 first control point X-coordinate
* @param y2 first control point Y-coordinate
* @param x3 second control point X-coordinate
* @param y3 second control point Y-coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Draws a Bézier curve from point (x2, y2) to (x3, y3).
* @throws IOException if an error occurs during drawing
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Adds a Bezier curve to the drawing path.
* @param x1 starting point X-coordinate
* @param y1 starting point Y-coordinate
* @param x3 ending point X-coordinate
* @param y3 ending point Y-coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:moveTo(float,float)",995,1004,"/**
* Performs a move-to operation on the canvas, translating x and y coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the endpoint
* @param y y-coordinate of the endpoint
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:stroke(),1031,1038,"/**
* Throws an error or initiates stroke path drawing depending on mode.
* @throws IOException on mode-related error
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndStroke(),1046,1053,"/**
* Throws error and executes CLOSE_AND_STROKE operator when in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fill(),1061,1068,"/**
* Fills non-zero pixels in the image.
* @throws IOException 
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillEvenOdd(),1076,1083,"/**
* Throws an error and fills even/odd mask when not in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStroke(),1093,1100,"/**
* Disables fill and stroke for non-zero values.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes the shape using even-odd rule.
* @throws IOException if an I/O error occurs
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills non-zero areas, and strokes the current path.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Throws an error or closes and fills the shape in even/odd mode if in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closePath(),1177,1184,"/**
* Closes current path and sets mask state.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clip(),1192,1202,"/**
* Closes current drawing path and clips non-zero values.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clipEvenOdd(),1210,1220,"/**
* Executes clip even/odd mask operation.
* @throws IOException on IO error
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width mask using specified value.
* @param lineWidth new line width value
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style based on the provided integer value.
* @param lineJoinStyle integer value representing the desired join style (0-2)
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style using the provided value.
* @param lineCapStyle integer value representing the line cap style (0-2)
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets dashboard pattern using the provided array and phase.
* @param pattern array of float values
* @param phase float value representing phase
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit for rendering.
* @param miterLimit positive float value to set the limit
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endMarkedContent(),1370,1373,"/**
* Marks end of content with special marker. 
* @throws IOException on write error
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setCharacterSpacing(float),1603,1607,"/**
* Applies mask operation to set character spacing.
* @param spacing target spacing value
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setWordSpacing(float),1622,1626,"/**
 * Applies formatting mask with specified word spacing.
 * @param spacing new word spacing value
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies scaling mask to user interface.
* @param scale float value representing scaling factor
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode by executing M2 and SET_TEXT_RENDERINGMODE operators. 
* @param rm RenderingMode to apply","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise mask value.
* @param rise new rise value
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSNumber,org.apache.pdfbox.pdfparser.BaseParser:parseCOSNumber(),1018,1043,"/**
* Extracts mask number from input stream, ignoring non-digit characters.
* @return COSNumber object representing the extracted mask
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,getBFCOSObjectOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:getBFCOSObjectOffsets(),117,125,"/**
* Returns COS object key offsets map.
* @return Map of COSObjectKey to Long offset values
*/","* Returns all found objects of a brute force search.
     * 
     * @return map containing all found objects of a brute force search
     * 
     * @throws IOException if something went wrong
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,validateXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:validateXrefOffsets(java.util.Map),392,441,"/**
* Validates and corrects COS object key mappings in the provided map.
* @param xrefOffset input map containing COSObjectKey to Long mappings
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefTable,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefTable(),753,799,"/**
* Processes XReference entries in a loop, updating masks and ranges.
* @throws IOException if an I/O error occurs
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.OutputStream),201,205,"/**
 * Writes PDF mask to specified OutputStream.
 * @param output target stream for mask data
 */","* This will save the document to an output stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,clear,org.apache.pdfbox.cos.COSArray:clear(),140,144,"/**
* Calls methods on provided objects and returns results from nested calls.
*/",* This will remove all of the objects in the collection.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeAll,org.apache.pdfbox.cos.COSArray:removeAll(java.util.Collection),151,155,"/**
 * Calls methods on COSBase instances and invokes nested method calls.
 * @param objectsList collection of COSBase objects to operate on
 */","* This will remove all of the objects in the collection.
     *
     * @param objectsList The list of objects to remove from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,retainAll,org.apache.pdfbox.cos.COSArray:retainAll(java.util.Collection),162,168,"/**
* Invokes COSBase methods on provided collection.
* @param objectsList list of COSBase objects
*/","* This will retain all of the objects in the collection.
     *
     * @param objectsList The list of objects to retain from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,int)",242,246,"/**
* Calls nested methods with provided integer values.
* @param index index value
* @param intVal integer value to be processed
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param intVal The object to set.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(int),459,464,"/**
* Removes and returns an object from the collection based on index.
* @param i index of the object to remove
* @return COSBase object or null if not found
*/","* This will remove an element from the array.
     *
     * @param i The index of the object to remove.
     *
     * @return The object that was removed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(org.apache.pdfbox.cos.COSBase),474,482,"/**
* Removes object from collection and executes subsequent operation.
* @param o COSBase object to remove
* @return true if removal was successful, false otherwise
*/","* This will remove an element from the array.
     *
     * @param o The object to remove.
     *
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,clear,org.apache.pdfbox.cos.COSDictionary:clear(),130,134,"/**
* Calls methods m1 on the 'items' object and m3 on an object returned by m2.
*/",* This will clear all items in the map.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,removeItem,org.apache.pdfbox.cos.COSDictionary:removeItem(org.apache.pdfbox.cos.COSName),1164,1168,"/**
* Applies mask operation on COSName key.
* @param key COSName object to be masked
*/","* This will remove an item for the dictionary. This will do nothing of the object does not exist.
     *
     * @param key The key to the item to remove from the dictionary.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,updateDifferentOrigin,org.apache.pdfbox.cos.COSIncrement:updateDifferentOrigin(org.apache.pdfbox.cos.COSUpdateState),258,265,"/**
* Updates COS state based on origin and provided state.
* @param updateState current COS state to be updated
*/","* Check whether the given {@link COSUpdateState}´s {@link COSDocumentState} differs from the {@link COSIncrement}´s
     * known {@link #incrementOrigin}.<br>
     * Should that be the case, the {@link COSUpdateState} originates from another {@link COSDocument} and must be added
     * to the {@link COSIncrement}, hence call {@link COSUpdateState#update()}.
     *
     * @param updateState The {@link COSUpdateState} that shall be updated, if it's originating from another
     *                    {@link COSDocument}.
     * @see #incrementOrigin",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,setToNull,org.apache.pdfbox.cos.COSObject:setToNull(),135,143,"/**
* Resets the base object and parser to their default states.
*/",* Sets the referenced object to COSNull and removes the initially assigned parser.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,"org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState,boolean)",118,164,"/**
* Recursively updates origin document state with update info.
* @param originDocumentState current document state
* @param dereferencing whether to dereference update info
*/","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     * <p>
     * Additionally to {@link #setOriginDocumentState(COSDocumentState)}, this shall also deny changing
     * {@link #updated}, should the flag {@code dereferencing} indicate, that this is caused by dereferencing a
     * {@link COSObject}.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @param dereferencing       {@code true}, if this update of the {@link COSDocumentState} is caused by
     *                            dereferencing a {@link COSObject}.
     * @see #originDocumentState
     * @see #updated",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,org.apache.pdfbox.cos.COSArray:getString(int),407,410,"/**
* Delegate call to overloaded version with default value. 
* @param index zero-based index to use as default
*/","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The string or null if it does not exist.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValue(),110,140,"/**
* Returns a string representation of the mask value.
* @return ""On"" or ""Off"", or the numeric index if valid
*/","* Returns the selected value.
     * 
     * <p>Off is the default value which will also be returned if the
     * value hasn't been set at all.
     * 
     * @return A non-null string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(),35,38,"/**
* Initializes a new instance of PDSimpleFileSpecification with an empty file name.
*/","* Constructor.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:setFile(java.lang.String),66,70,"/**
 * Sets the mask file name.
 * @param fileName name of the mask file to load.","* This will set the file name.
     *
     * @param fileName The name of the file.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(java.lang.String),67,70,"/**
* Initializes a PDNamedDestination object with a given name.
* @param dest destination name as a string
*/","* Default constructor.
     *
     * @param dest The named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:setNamedDestination(java.lang.String),110,120,"/**
* Sets or clears the destination name.
* @param dest destination name to set (null to clear)
*/","* Set the named destination.
     *
     * @param dest The new named destination.
     *
     * @throws IOException If there is an error setting the named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,getPathForCharacterCode,org.apache.pdfbox.rendering.GlyphCache:getPathForCharacterCode(int),47,97,"/**
* Fetches the glyph path for a specific code point.
* @param code unique character identifier
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType2,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType2(),264,269,"/**
 * Applies byte alignment mask to data based on configuration.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType4,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType4(),271,298,"/**
* Processes input data according to formatting options.
* @throws IOException on I/O errors
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType6,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType6(),300,305,"/**
* Configures mask function based on byte alignment option.
* @throws IOException if an I/O error occurs
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRowType6,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRowType6(),130,132,"/**
* Performs function mask operation.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",174,179,"/**
* Convenience wrapper to decode input stream using default options.
* @param encoded input stream with encoded data
* @param decoded output stream for decoded result
* @param parameters dictionary of decoding parameters
* @param index index parameter (purpose unclear)
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[]),291,295,"/**
* Calls m1 with array index 0 and length of input byte array.",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readGenerationNumber,org.apache.pdfbox.pdfparser.BaseParser:readGenerationNumber(),1369,1378,"/**
* Validates and returns the generation number mask.
* @throws IOException if invalid generation number
*/","* This will read a integer from the Stream and throw an {@link IllegalArgumentException} if the integer value
     * has more than the maximum object revision (i.e. : bigger than {@link #GENERATION_NUMBER_THRESHOLD})
     * @return the generation number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readObjectNumber,org.apache.pdfbox.pdfparser.BaseParser:readObjectNumber(),1353,1361,"/**
* Validates and returns the object number mask.
* @throws IOException if object number exceeds threshold
*/","* This will read a long from the Stream and throw an {@link IOException} if
     * the long value is negative or has more than 10 digits (i.e. : bigger than
     * {@link #OBJECT_NUMBER_THRESHOLD})
     *
     * @return the object number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",1021,1036,"/**
* Verifies user access permissions using encrypted password and metadata.
* @param password encrypted password
* @param user user identifier
* @param owner owner identifier
* @param permissions access rights (int)
* @param id unique identifier
* @param encRevision encryption revision level
* @param length data length
* @param encryptMetadata whether to encrypt metadata
* @return true if access is granted, false otherwise
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword(byte[],byte[],int,int)",657,669,"/**
* Returns encrypted mask based on encryption revision and password.
* @param ownerPassword encrypted owner password
* @param owner user identifier
* @param encRevision encryption revision (5 or 6 returns empty byte array)
* @return encrypted mask byte array
*/","* Get the user password based on the owner password.
     *
     * @param ownerPassword The plaintext owner password.
     * @param owner The o entry of the encryption dictionary.
     * @param encRevision The encryption revision number.
     * @param length The key length.
     *
     * @return The u entry of the encryption dictionary.
     *
     * @throws IOException If there is an error accessing data while generating the user password.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a TensorPatch object with given control points and color.
* @param tcp array of 2D points for control points
* @param color 2D float array representing color data
*/","* Constructor of a patch for type 7 shading.
     *
     * @param tcp 16 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,tokenize,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:tokenize(),197,218,"/**
* Iterates through input buffer, processing tokens and advancing state machine.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)",284,289,"/**
* Encrypts and decrypts input data using RC4 algorithm.
* @param finalKey encryption key
* @param input encrypted or original data stream
* @param output decrypted or modified data stream
*/","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientsField,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientsField(byte[]),433,469,"/**
* Generates recipient field for public key protection.
* @param seed encryption seed
* @return array of encoded recipient fields
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword56(byte[],byte[],byte[],int)",619,643,"/**
* Verifies password based on owner's credentials.
* @param ownerPassword byte array containing owner's password
* @param user byte array containing user to verify
* @param owner byte array containing owner's info
* @param encRevision encryption revision level
* @return true if verification successful, false otherwise
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev56(byte[],boolean,byte[],byte[],byte[],byte[],int)",780,837,"/**
* Generates a file key from user or owner password and encryption revision.
* @param password user or owner password
* @param isOwnerPassword true for owner password, false for user password
* @param o owner entry (required if isOwnerPassword)
* @param u user entry (required if !isOwnerPassword)
* @param oe owner entry hash (required if isOwnerPassword)
* @param ue user entry hash (required if !isOwnerPassword)
* @param encRevision encryption revision
* @return encrypted file key or null on error
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword56(byte[],byte[],int)",1038,1057,"/**
* Validates user credentials by password and salt.
* @param password encrypted user password
* @param user raw user data
* @param encRevision encryption revision level
* @return true if valid, false otherwise
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getProvider(),154,161,"/**
* Returns the font provider instance with default mask functionality.
* @return FontProvider object or null if not initialized
*/",* Returns the font service provider. Defaults to using FileSystemFontProvider.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,createShadedTriangleList,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:createShadedTriangleList(int,int,org.apache.pdfbox.pdmodel.graphics.shading.Vertex[][])",157,188,"/**
* Creates a list of shaded triangles by iterating over the given lattice array.
* @param rowNum number of rows in the lattice
* @param numPerRow number of cells per row
* @return List<ShadedTriangle> containing generated triangles
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getShadedTriangles,org.apache.pdfbox.pdmodel.graphics.shading.Patch:getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][]),173,225,"/**
* Creates a list of shaded triangles from the given 2D array of CoordinateColorPairs.
* @param patchCC 2D array of CoordinateColorPair objects
* @return List of ShadedTriangle objects
*/","* An assistant method to accomplish type 6 and type 7 shading.
     *
     * @param patchCC all the crossing point coordinates and color of a grid
     * @return a ShadedTriangle list which can compose the grid patch",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1Font:getHeight(int),376,391,"/**
* Calculates M5 value based on AFM code.
* @param code AFM identifier
* @return calculated float value or throws IOException if failed
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getWidthFromFont(int),450,465,"/**
* Calculates the FUNC_MASK value for a given code.
* @param code int identifier
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(int),631,636,"/**
* Recursively generates a GeneralPath object based on input code.
* @param code unique identifier
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getNormalizedPath(int),638,648,"/**
* Returns a GeneralPath representing the font's FUNC_MASK glyph.
* @param code unique character identifier
* @return GeneralPath object or null if glyph not found
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a Coons Patch with control points and color.
* @param points array of Point2D objects defining the patch's shape
* @param color 2D array of float values specifying the patch's color
*/","* Constructor of a patch for type 6 shading.
     *
     * @param points 12 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endText,org.apache.pdfbox.rendering.PageDrawer:endText(),456,460,"/**
* Calls mask function m1.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginText,org.apache.pdfbox.rendering.PageDrawer:beginText(),449,454,"/**
 * Executes mask-related functions.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,getContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:getContent(),39,43,"/**
* Returns an input stream from COS writer.
* @throws IOException if I/O error occurs
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processTextPosition,org.apache.pdfbox.text.PDFMarkedContentExtractor:processTextPosition(org.apache.pdfbox.text.TextPosition),156,249,"/**
* Suppresses duplicate overlapping text characters within a given tolerance.
* @param text TextPosition object to process
*/","* This will process a TextPosition object and add the
     * text to the list of characters on a page.  It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripper:processTextPosition(org.apache.pdfbox.text.TextPosition),897,1056,"/**
* Updates the TextPosition object based on actualText and article divisions.
* @param text TextPosition object to update
*/","* This will process a TextPosition object and add the text to the list of characters on a page. It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,removeContainedSpaces,org.apache.pdfbox.text.PDFTextStripper:removeContainedSpaces(java.util.List),771,793,"/**
* Removes adjacent whitespace from text positions.
* @param textList list of text positions to process
*/",* Remove all space characters if contained within the adjacent letters,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleLineSeparation,"org.apache.pdfbox.text.PDFTextStripper:handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1563,1591,"/**
* Updates PositionWrapper based on current, last position & start position.
* @param current current state
* @param lastPosition previous state
* @param lastLineStartPosition last line's start position
* @return updated last line start position","* handles the line separator for a new line given the specified current and previous TextPositions.
     * 
     * @param current the current text position
     * @param lastPosition the previous text position
     * @param lastLineStartPosition the last text position that followed a line separator.
     * @param maxHeightForLine max height for positions since lastLineStartPosition
     * @return start position of the last line
     * @throws IOException if something went wrong",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeAdd,"org.apache.pdfbox.text.PDFTextStripper:normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",2115,2132,"/**
* Builds the mask string for a line of text.
* @param normalized list of words with positions
* @param lineBuilder StringBuilder to accumulate the mask
* @param wordPositions list of text positions for each word
* @param item LineItem object containing text position data
* @return StringBuilder containing the completed mask string","* Used within {@link #normalize(List)} to handle a {@link TextPosition}.
     * 
     * @return The StringBuilder that must be used when calling this method.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(java.lang.String),719,737,"/**
* Parses date string and returns a Calendar object.
* @param text input date string
* @return Calendar object or null on parse failure
*/","* Returns the Calendar for a given string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     *
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Performs masked content processing and marks beginning of marked content.
* @param tag COS name object
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Creates a marked content sequence with the specified MCID.
* @param tag COSName of the object being modified
* @param mcid unique identifier for marked content
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Sets mask on COSName object.
* @param tag COSName identifier
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",1621,1624,"/**
* Writes COS string contents to output stream.
* @param string COSString object containing data
* @param output OutputStream for writing data
*/","* This will output the given byte getString as a PDF object.
     *
     * @param string COSString to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],java.io.OutputStream)",1633,1636,"/**
* Writes byte array to output stream.
* @param bytes data to be written
* @param output target output stream
*/","* This will output the given text/byte getString as a PDF object.
     *
     * @param bytes byte array representation of a string to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFGraphicsStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:<init>(org.apache.pdfbox.pdmodel.PDPage),107,176,"/**
* Initializes a new PDFGraphicsStreamEngine instance for the specified page.
* @param page PDPage object to associate with this engine
*/","* Constructor.
     * 
     * @param page the page the content stream belongs to",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(),52,55,"/**
* Default constructor to initialize extractor with no input stream.",* Instantiate a new PDFMarkedContentExtractor object.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,<init>,org.apache.pdfbox.text.PDFTextStripperByArea:<init>(),45,48,"/**
* Initializes PDF text stripper with default settings.
*/","* Constructor.
     * @throws IOException If there is an error loading properties.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,65,"/**
* Applies a color mask to the specified operands.
* @param operator the operator applying the mask
* @param arguments list of operands (at least one required)
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSHexString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSHexString(),693,746,"/**
* Parses hexadecimal mask from input source and returns as COSString.
*/","* This will parse a PDF HEX string with fail fast semantic
     * meaning that we stop if a not allowed character is found.
     * This is necessary in order to detect malformed input and
     * be able to skip to next object start.
     *
     * We assume starting '&lt;' was already read.
     * 
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getConvertedContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getConvertedContents(java.io.InputStream),363,388,"/**
* Extracts and formats XML-like data from input stream.
* @param is InputStream containing potentially malformed XML
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFileFilters(java.util.List),378,382,"/**
* Applies filter list to PDF document.
* @param filters List of filter names
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(),93,96,"/**
* Constructs an empty PDRectangle with default coordinates (0, 0).","* Constructor.
     *
     * Initializes to 0,0,0,0",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float)",104,107,"/**
* Initializes a PDRectangle with specified width and height.
* @param width rectangle width
* @param height rectangle height
*/","* Constructor.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectangle(),164,168,"/**
* Creates a rectangle mask with dimensions based on the bounding box.
* @return PDRectangle object representing the mask
*/","* Returns the updated <code>Rect</code> entry for the annotation.
     * The rectangle completely contains the cloudy border.
     *
     * @return Annotation <code>Rect</code>.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectDifference(),185,201,"/**
* Calculates the bounding box mask rectangle.
*/","* Returns the updated <code>RD</code> entry for Square and Circle annotations.
     *
     * @return Annotation <code>RD</code> value.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,applyRectDiff,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",496,535,"/**
* Calculates a rectangle by combining two rectangles and masking.
* @param rd original rectangle
* @param min minimum value for clipping
* @return resulting rectangle or null if rd is null
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getPaddedRectangle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",218,222,"/**
* Adjusts the dimensions of a PDRectangle by applying a uniform padding.
* @param rectangle input PDRectangle object
* @param padding amount to add around each side
* @return updated PDRectangle with added padding
*/","* Get a padded rectangle.
     * 
     * <p>Creates a new rectangle with padding applied to each side.
     * .
     * @param rectangle the rectangle.
     * @param padding the padding to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,addRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",235,246,"/**
* Updates a PDRectangle by applying the given geometric differences.
* @param rectangle original rectangle
* @param differences array of 4 float values (dx, dy, dw, dh)
* @return updated PDRectangle or original if invalid differences provided
*/","* Get a rectangle enlarged by the differences.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,applyRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",259,269,"/**
* Updates a PDRectangle by applying a set of differences.
* @param rectangle original rectangle
* @param differences array of 4 floats to modify the rectangle's corners
* @return updated PDRectangle or original if invalid differences provided
*/","* Get a rectangle with the differences applied to each side.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,applyPadding,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",1045,1051,"/**
* Calculates a new rectangle with added padding.
* @param box original rectangle bounds
* @param padding amount to add around the box
* @return updated PDRectangle object
*/","* Apply padding to a box.
     * 
     * @param box box
     * @return the padded box.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createStream,org.apache.pdfbox.multipdf.Overlay:createStream(java.lang.String),602,611,"/**
* Compresses and encodes input content using FLATE or no compression.
* @return COSStream object representing compressed content
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,<init>,org.apache.pdfbox.pdfparser.PDFXRefStream:<init>(org.apache.pdfbox.cos.COSDocument),57,60,"/**
* Initializes a new PDFXRefStream instance from a COSDocument.
* @param cosDocument input document containing cross-reference data
*/","* Create a fresh XRef stream like for a fresh file or an incremental update.
     * 
     * @param cosDocument the COSDocmernt to be used to create a new COSStream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,createStream,org.apache.pdfbox.pdmodel.common.PDObjectStream:createStream(org.apache.pdfbox.pdmodel.PDDocument),51,57,"/**
* Creates a PDF object stream from the given PDDocument.
* @param document input PDDocument
* @return PDObjectStream instance or null if failed
*/","* This will create a new PDObjectStream object.
     *
     * @param document The document that the stream will be part of.
     * @return A new stream object.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),61,64,"/**
 * Initializes a new PDStream instance from the given PDDocument.
 * @param document PDDocument object to create COSStream from
 */","* Creates a new empty PDStream object.
     * 
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSDocument),71,74,"/**
* Creates a COS stream from a given COSDocument.
* @param document the input COS document
*/","* Creates a new empty PDStream object.
     *
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",131,138,"/**
* Creates a PDF stream from the given document and input stream.
* @param doc PDDocument instance
* @param input InputStream containing the data to write
* @param filters COSBase filter settings
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied, if any. This method closes the InputStream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createRawStream,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",166,175,"/**
* Creates a COSStream from the given PDDocument and input stream.
* @param document PDDocument instance
* @param rawInput InputStream containing PDF data
* @return COSStream object representing the processed PDF content
*/",* Creates a COS stream from raw (encoded) data.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createCOSStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createCOSStream(),106,109,"/**
* Returns a COSStream instance based on the document's state.
* If the document is null, returns an empty COSStream; otherwise,
* delegates to document's m1 method for further processing. 
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,encode,"org.apache.pdfbox.filter.Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,112,"/**
* Calls recursive helper function with parameter dictionary's compressed data.
* @param input input stream
* @param encoded output stream for encoded data
* @param parameters dictionary containing compressed data
* @param index unused parameter
*/","* Encodes data.
     * @param input the byte stream to encode
     * @param encoded the stream where encoded data will be written
     * @param parameters the parameters used for encoding
     * @param index the index to the filter being encoded
     * @throws IOException if the stream cannot be encoded",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(),38,40,"/**
* Initializes a new instance of the PDDefaultAttributeObject.",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(),43,46,"/**
* Initializes a new PDUserAttributeObject instance with default owner set to OWNER_USER_PROPERTIES.",* Default constructor,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(),44,46,"/**
 * Initializes an empty PDStandardAttributeObject.",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(),53,56,"/**
* Initializes a new PDOutlineItem instance.
*/",* Default Constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),47,50,"/**
 * Initializes a new instance of PDVariableText with the given PDAcroForm.
 * @param acroForm The parent AcroForm to associate with this text field.","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Initializes a new instance of PDExportFormatAttributeObject from a COS dictionary.","* Creates a new ExportFormat attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getAppearanceStream(),84,91,"/**
* Creates a PDAppearanceStream instance from the current entry.
* @throws IllegalStateException if entry is not an appearance stream
*/","* Returns the entry as an appearance stream.
     *
     * @return the entry as an appearance stream
     * 
     * @throws IllegalStateException if this entry is not an appearance stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFont(java.io.File),675,700,"/**
 * Processes a TTF or OTF font file and extracts its metadata.
 * @param ttfFile Font file to process
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
* Initializes PDShadingType6 with given COS dictionary.
* @param shadingDictionary dictionary containing type 6 shading data
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
* Initializes PDShadingType7 with COSDictionary.
* @param shadingDictionary dictionary containing shading data
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Initializes a new instance of PDComboBox with given parameters.
* @param acroForm AcroForm containing the form data
* @param field COSDictionary representing the field properties
* @param parent PDNonTerminalField parent container for this combo box
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",49,52,"/**
* Initializes a new instance of PDListBox with the specified form, field, and parent.","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,process,"org.apache.pdfbox.contentstream.operator.state.Save:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",39,43,"/**
* Applies mask operation to COSBase arguments.
* @param operator Operator instance defining the mask operation
* @param arguments list of COSBase objects to apply the mask on
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",165,169,"/**
* Initializes COS parser with given key store and alias.
* @param source input stream to read from
* @param password encryption password
* @param keyStore key store input stream
* @param keyAlias alias of the encryption key
*/","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     *
     * @throws IOException if the source data could not be read",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",91,95,"/**
* Initializes a PDF parser with given parameters.
* @param source input data source
* @param decryptionPassword password for decrypting the PDF (if applicable)
* @param keyStore keystore containing encryption keys
* @param alias alias of the encryption key to use
* @param streamCacheCreateFunction function to create a stream cache
*/","* Constructor.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException If something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(),158,161,"/**
* Returns an OutputStream instance via stream.m1().
* @throws IOException if error occurs during output operation
*/","* This will get a stream that can be written to.
     * 
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStreamElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStreamElement(org.w3c.dom.Element),185,283,"/**
* Parses a COSStream from an XML Element.
* @param streamEl the XML Element to parse
* @return a COSStream object representing the parsed data
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,createCOSStreamwithIccProfile,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:createCOSStreamwithIccProfile(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",409,461,"/**
* Creates a COS stream for the specified color space, 
* optionally incorporating an iCCP profile if provided. 
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,writeToStream,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",875,881,"/**
* Writes compressed data to the output stream.
* @param data byte array to be written
* @param appearanceStream PDAppearanceStream object for writing
*/","* Writes the stream to the actual stream in the COSStream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,boolean)",58,61,"/**
* Creates a content stream from the given appearance stream with optional compression.
* @param appearance PDAppearanceStream object
* @param compress true to enable compression, false otherwise
*/","* Create a new appearance stream.
     *
     * @param appearance The appearance stream to write to.
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @throws IOException If there is an error writing to the content stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets text matrix from input matrix.
* @param matrix input matrix to set
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies functional mask to a Matrix, modifying its contents.
* @param matrix input Matrix object
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginText(),134,142,"/**
* Enters text mode, beginning a text block.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDFormContentStream:beginText(),134,142,"/**
* Enters text mode, preventing further nested text mode activations.
* @throws IOException if an I/O error occurs
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPageContentStream:beginText(),134,142,"/**
* Begins text mode processing.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginText(),134,142,"/**
* Enters text mode, beginning a block of text.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endText(),151,159,"/**
* Ends text mode and writes END_TEXT operator.
* @throws IOException if an I/O error occurs
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDFormContentStream:endText(),151,159,"/**
* Ends text mode and updates internal state.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPageContentStream:endText(),151,159,"/**
* Ends text mode and sets flag to false.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPatternContentStream:endText(),151,159,"/**
* Ends text mode and writes END_TEXT operator.
* @throws IOException on write error
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLeading(float),333,337,"/**
* Sets text leading mask based on given float value.
* @param leading lead-in value to apply
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDFormContentStream:setLeading(float),333,337,"/**
* Sets text leading mask with specified value.
* @param leading new leading value
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPageContentStream:setLeading(float),333,337,"/**
* Sets leading text mask with specified value.
* @param leading leading text value
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLeading(float),333,337,"/**
* Sets text leading to specified value and updates mask.
* @param leading leading value
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLine(),345,352,"/**
* Advances to next line in text mode.
* @throws IllegalStateException if not in text mode
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDFormContentStream:newLine(),345,352,"/**
* Advances to next line in text mode.
* @throws IllegalStateException if not in text mode
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPageContentStream:newLine(),345,352,"/**
* Advances to next line in text mode, throwing an exception if not initialized. 
* @throws IllegalStateException if beginText() has not been called
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPatternContentStream:newLine(),345,352,"/**
* Advances to next line in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLineAtOffset(float,float)",363,372,"/**
* Sets text mask at specified offset.
* @param tx horizontal offset
* @param ty vertical offset
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDFormContentStream:newLineAtOffset(float,float)",363,372,"/**
* Updates text position at specified offsets using mask operations.
* @param tx x-coordinate offset
* @param ty y-coordinate offset
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPageContentStream:newLineAtOffset(float,float)",363,372,"/**
* Performs text-mode mask operation at specified offsets.
* @param tx x-coordinate offset
* @param ty y-coordinate offset
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPatternContentStream:newLineAtOffset(float,float)",363,372,"/**
* Renders text mask at specified offset.
* @param tx x-coordinate of the mask
* @param ty y-coordinate of the mask
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state by resetting font and color stacks.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state by resetting font and color stacks.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state by popping color spaces and font stacks.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state by resetting font and color stacks.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state by resetting font and color stacks.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state by popping color and font stacks.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state by popping color and font stacks.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state by popping font and color spaces.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets mask color components to specified RGB values.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Initializes color mask with RGB values.
* @param r red channel value (0..1)
* @param g green channel value (0..1)
* @param b blue channel value (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets the RGB color mask values.
* @param r red value (0..1)
* @param g green value (0..1)
* @param b blue value (0..1)
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Applies color mask with RGB values.
* @param r red channel value (0..1)
* @param g green channel value (0..1)
* @param b blue channel value (0..1)","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK mask values for printing.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Configures CMYK color model with specified values.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Configures CMYK color model with provided color components.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Initializes CMYK color model with specified values.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float),759,768,"/**
* Applies mask function with specified gamma value.
* @param g float value between 0 and 1
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float),759,768,"/**
* Applies mask function to input value and performs subsequent operations.
* @param g input float value (must be within 0..1)
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float),759,768,"/**
* Validates and processes input value with gray-scale conversion.
* @param g float value in range 0..1
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float),759,768,"/**
* Applies a function to the input parameter g and performs subsequent operations.
* @param g input value within 0..1 range
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Initializes color masks with RGB values.
* @param r red channel value (0..1)
* @param g green channel value (0..1)
* @param b blue channel value (0..1)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Applies color mask to device with specified RGB values.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Applies color mask with RGB values.
* @param r red channel value (0..1)
* @param g green channel value (0..1)
* @param b blue channel value (0..1)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Initializes color mask with RGB values.
* @param r red channel value (0..1)
* @param g green channel value (0..1)
* @param b blue channel value (0..1)
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Initializes CMYK color model with specified components.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Initializes CMYK color model with given components.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black value (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Initializes CMYK color model with specified values.
* @param c cyan value (0..1)
* @param m magenta value (0..1)
* @param y yellow value (0..1)
* @param k black key value (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Initializes CMYK mask with given color values.
* @param c cyan (0..1)
* @param m magenta (0..1)
* @param y yellow (0..1)
* @param k black (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float),877,886,"/**
* Applies mask operation to a grayscale image.
* @param g value between 0 and 1
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float),877,886,"/**
* Applies mask operations to an image with a specified gray value.
* @param g gray value between 0 and 1
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float),877,886,"/**
* Applies mask operation to image based on given grayscale value.
* @param g float value between 0 and 1
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float),877,886,"/**
* Applies mask operation to image based on input value.
* @param g input value in range 0..1
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the drawing context with specified position and size.
* @param x x-coordinate of top-left corner
* @param y y-coordinate of top-left corner
* @param width rectangle's width
* @param height rectangle's height
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDFormContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the current drawing context.
* @param x left coordinate
* @param y top coordinate
* @param width rectangle width
* @param height rectangle height
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPageContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the current graphics context.
* @param x left edge of rectangle
* @param y top edge of rectangle
* @param width rectangle width
* @param height rectangle height
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPatternContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the drawing context.
* @param x left coordinate of the rectangle
* @param y top coordinate of the rectangle
* @param width and height dimensions of the rectangle
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bezier curve from point (x1, y1) to (x2, y2) with control point (x3, y3).
* @throws IOException if invalid operation occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Adds a cubic Bezier curve to the path.
* @param x1 y1 x2 y2 x3 y3 control points of the curve
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Creates a cubic Bezier curve from three points.
* @param x1 x-coordinate of first point
* @param y1 y-coordinate of first point
* @param x2 x-coordinate of second point
* @param y2 y-coordinate of second point
* @param x3 x-coordinate of third point
* @param y3 y-coordinate of third point
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Adds a Bezier curve segment to the drawing path.
* @param x1, y1 first control point
* @param x2, y2 second control point
* @param x3, y3 third control point
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Applies a quadratic Bezier curve to the drawing context.
* @param x2, y2 coordinates of first control point
* @param x3, y3 coordinates of second control point
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Adds a quadratic Bezier curve to the current path.
* @param x2, y2 coordinates of first control point
* @param x3, y3 coordinates of second control point
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Adds a Bezier curve to the drawing context.
* @param x2 initial point's x-coordinate
* @param y2 initial point's y-coordinate
* @param x3 end point's x-coordinate
* @param y3 end point's y-coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Adds a Bezier curve to the current path using three points.
* @param x2, y2 first control point coordinates
* @param x3, y3 second and third control point coordinates (same as initial point)
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Adds a Bezier curve with two control points.
* @param x1 first point's x-coordinate
* @param y1 first point's y-coordinate
* @param x3 third point's x-coordinate (final point)
* @param y3 third point's y-coordinate (final point)
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Creates a Bezier curve from two points.
* @param x1 first point's X-coordinate
* @param y1 first point's Y-coordinate
* @param x3 third point's X-coordinate (replicates final point)
* @param y3 third point's Y-coordinate (replicates final point)","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Draws a Bezier curve from (x1, y1) to (x3, y3).
* @param x1 initial x-coordinate
* @param y1 initial y-coordinate
* @param x3 final x-coordinate
* @param y3 final y-coordinate
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Creates a quadratic Bezier curve to a specified point.
* @param x1, y1 coordinates of the first control point
* @param x3, y3 coordinates of the final and second control point
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:moveTo(float,float)",995,1004,"/**
* Moves to specified coordinates on the canvas.
* @param x x-coordinate
* @param y y-coordinate
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:moveTo(float,float)",995,1004,"/**
* Moves to a point on the canvas using absolute coordinates.
* @param x horizontal position
* @param y vertical position
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:moveTo(float,float)",995,1004,"/**
* Moves to specified coordinates on the canvas.
* @param x horizontal position
* @param y vertical position
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:moveTo(float,float)",995,1004,"/**
* Moves to point (x, y) on the canvas.
* @param x X-coordinate of the move location
* @param y Y-coordinate of the move location
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to specified coordinates.
* @param x the x-coordinate of the line's end point
* @param y the y-coordinate of the line's end point
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:lineTo(float,float)",1014,1023,"/**
* Performs a line-to operation at the specified coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates (x, y).
* @param x x-coordinate of the line end point
* @param y y-coordinate of the line end point
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the endpoint
* @param y y-coordinate of the endpoint
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:stroke(),1031,1038,"/**
* Throws an error or executes a stroke path operation based on the current mode.
* @throws IOException if an I/O exception occurs
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDFormContentStream:stroke(),1031,1038,"/**
* Disables drawing functionality by throwing an error in text mode and starting a new stroke path. 
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPageContentStream:stroke(),1031,1038,"/**
* Throws an exception when trying to draw outside of text mode, or starts drawing a stroked path. 
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:stroke(),1031,1038,"/**
* Throws error or starts stroke path drawing when in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndStroke(),1046,1053,"/**
* Aborts drawing operation and closes stroke. 
* @throws IOException on I/O error
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndStroke(),1046,1053,"/**
* Disables drawing by closing and stroking the current shape.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current element, throwing an error in text mode. 
* @throws IOException if an I/O operation fails
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current shape, throwing an error if in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fill(),1061,1068,"/**
* Fills non-zero values in mask image.
* @throws IOException on I/O error
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDFormContentStream:fill(),1061,1068,"/**
* Fills non-zero pixels in an image mask.
* @throws IOException on I/O error
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPageContentStream:fill(),1061,1068,"/**
* Fills non-zero pixels in an image, ignoring text mode. 
* @throws IOException if an I/O error occurs
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPatternContentStream:fill(),1061,1068,"/**
* Fills non-zero values in mask image.
* @throws IOException if I/O operation fails
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd bits based on the current operator.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd mask in binary mode.","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillEvenOdd(),1076,1083,"/**
* Throws an error or fills even/odd mask based on mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillEvenOdd(),1076,1083,"/**
* Throws error and fills even/odd pattern when in text mode.
* @throws IOException on error
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStroke(),1093,1100,"/**
* Disables fill and stroke for non-zero pixels.
* @throws IOException on failure
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStroke(),1093,1100,"/**
* Disables fill and stroke for the current shape.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStroke(),1093,1100,"/**
* Disables fill and stroke operations.
* @throws IOException on error
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStroke(),1093,1100,"/**
* Disables fill and stroke for non-zero areas.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Disables fill and stroke for even-odd mask operations.
* @throws IOException if an I/O error occurs
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Throws error or performs fill and stroke operation based on input mode.
* @throws IOException if an I/O exception occurs
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Throws error when trying to fill and stroke within a text block.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Throws an error or performs fill and stroke operation based on mode.
* @throws IOException if an I/O error occurs
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills non-zero areas, and strokes the current shape.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills non-zero pixels, and strokes the current shape.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills non-zero, and strokes the current shape.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills non-zero, and strokes the current path.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Disables fill and stroke for even and odd shapes.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Disables fill and stroke for odd/even shapes.
* @throws IOException if an I/O error occurs
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Disables fill and stroke for even/odd polygons.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Disables fill and stroke for even/odd shapes, throwing an error if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closePath(),1177,1184,"/**
* Closes current path, throwing an error if called in text mode.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDFormContentStream:closePath(),1177,1184,"/**
* Closes the current path, throwing an error if in text mode.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPageContentStream:closePath(),1177,1184,"/**
* Closes current path and clears mask.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPatternContentStream:closePath(),1177,1184,"/**
* Closes the current path and invalidates further drawing operations within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clip(),1192,1202,"/**
* Disables clipping for the current path.
* @throws IOException if an I/O error occurs
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDFormContentStream:clip(),1192,1202,"/**
* Closes current clipping path and resets operator stack.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPageContentStream:clip(),1192,1202,"/**
* Closes current path, clipping non-zero area.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPatternContentStream:clip(),1192,1202,"/**
* Terminates current path and clips non-zero values.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clipEvenOdd(),1210,1220,"/**
* Executes Clip Even/Odd operator and ends current path.
* @throws IOException if an I/O error occurs
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:clipEvenOdd(),1210,1220,"/**
* Executes clip even/odd mask operation.
* @throws IOException if an I/O error occurs
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:clipEvenOdd(),1210,1220,"/**
* Marks the end of an even-odd clipping path.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:clipEvenOdd(),1210,1220,"/**
* Executes clip even/odd operator and ends path.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width using two-stage masking process.
* @param lineWidth desired line width value
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width mask value.
 * @param lineWidth new line width value
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineWidth(float),1228,1232,"/**
 * Sets line width in the graphics context.
 * @param lineWidth new line width value
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width mask value.
* @param lineWidth desired line width
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style based on the provided integer value.
* @param lineJoinStyle one of 0, 1, or 2 (or an error is thrown)","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style based on the provided value.
* @param lineJoinStyle integer value representing the desired style (0-2)
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style based on a given parameter.
* @param lineJoinStyle integer value (0-2) representing the desired join style
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style based on the provided integer value.
* @param lineJoinStyle integer indicating the desired line join style (0-2)
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style based on the input integer.
* @param lineCapStyle one of 0, 1, or 2 (but not any other value)
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style based on the provided integer value.
* @param lineCapStyle integer value representing the line cap style (0-2)
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets line cap style based on provided integer code.
* @param lineCapStyle integer code representing line cap style (0-2)
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets line cap style using the specified integer value.
* @param lineCapStyle 0-2 or throws IOException
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets a DASH pattern on the device.
* @param pattern array of float values representing the pattern
* @param phase float value representing the phase
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDFormContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets a mask pattern and phase for the specified operator.
 * @param pattern array of float values representing the pattern
 * @param phase float value representing the phase
 */","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPageContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets a custom dash pattern on the graph.
* @param pattern array of float values defining the pattern
* @param phase float value representing the phase offset
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets the dash pattern and phase on a plot device.
* @param pattern array of float values representing the pattern
* @param phase float value representing the phase
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMiterLimit(float),1300,1308,"/**
* Sets or updates the line miter limit for rendering.
* @param miterLimit positive float value to set as miter limit
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDFormContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit for rendering.
* @param miterLimit non-negative value to set as miter limit
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPageContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit for rendering.
* @param miterLimit non-negative float value
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit for rendering.
* @param miterLimit positive float value controlling line join appearance
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endMarkedContent(),1370,1373,"/**
* Marks end of content in file.","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:endMarkedContent(),1370,1373,"/**
 * Masks content with end marked operator. 
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:endMarkedContent(),1370,1373,"/**
* Sets end marked content mask.
* @throws IOException on I/O error
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:endMarkedContent(),1370,1373,"/**
* Issues END MARKED CONTENT command to mask function.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setCharacterSpacing(float),1603,1607,"/**
* Applies mask operation with specified character spacing.
* @param spacing float value representing character spacing
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing based on provided float value.
* @param spacing float value representing character spacing
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Configures font mask with specified character spacing. 
 * @param spacing character spacing value
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setCharacterSpacing(float),1603,1607,"/**
* Applies character spacing mask with specified width.
* @param spacing new spacing value
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets word spacing mask based on provided float value.
 * @param spacing float value representing word spacing
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setWordSpacing(float),1622,1626,"/**
 * Applies word spacing mask with specified float value.
 * @param spacing float spacing value
 */","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in the document to the specified value.
* @param spacing new word spacing value
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing mask based on provided float value.
* @param spacing float value to set as word spacing
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies horizontal scaling mask to user interface.
* @param scale scaling factor
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDFormContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies scaling mask to text horizontally.
* @param scale horizontal scaling factor
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPageContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies scale factor to horizontal text scaling and performs associated operations.
* @param scale scale factor value
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPatternContentStream:setHorizontalScaling(float),1635,1639,"/**
* Applies scaling mask to horizontal text alignment.
* @param scale floating-point scale value
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Executes rendering mode mask function.
* @param rm RenderingMode object to process
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDFormContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode using M2 and SET_TEXT_RENDERINGMODE operators.
* @param rm RenderingMode to be set
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPageContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Applies rendering mode mask to text.
* @param rm RenderingMode object
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPatternContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode using given rendering mode.
* @param rm RenderingMode to be applied
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextRise(float),1662,1666,"/**
* Updates mask with specified rise value.
* @param rise float representing rise value
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextRise(float),1662,1666,"/**
* Updates mask based on specified rise value.
* @param rise float value representing the rise
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextRise(float),1662,1666,"/**
* Updates mask functionality based on specified rise value.
* @param rise float representing rise value
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextRise(float),1662,1666,"/**
* Sets mask text rise value and performs related operations.
* @param rise new rise value
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getObjectOffset,"org.apache.pdfbox.pdfparser.COSParser:getObjectOffset(org.apache.pdfbox.cos.COSObjectKey,boolean)",498,523,"/**
* Retrieves the functional mask for a COS object key, 
* optionally setting or throwing on missing/compressed objects.
* @param objKey COSObjectKey to fetch mask for
* @param requireExistingNotCompressedObj whether to throw on missing/compressed objects
* @return Long offset or null if not found
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:checkXrefOffsets(),448,462,"/**
* Replaces or updates the XREF table using brute-force search if necessary.
*/","* Check the XRef table by dereferencing all objects and fixing the offset if necessary.
     * 
     * @throws IOException if something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.File),174,180,"/**
* Writes data to file using an internal helper function.
* @param fileName unique file identifier
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setHighValue,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setHighValue(int),322,325,"/**
* Sets mask value in array at index 2 to given high byte.
* @param high high byte of mask value
*/","* Sets the highest value that is allowed. This cannot be higher than 255.
     * @param high the highest value for the lookup table",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPageNumber(int),166,169,"/**
 * Applies mask to array at specified page number.
 * @param pageNumber index of page in array to apply mask
 */","* Set the page number for a remote destination. For an internal destination, call 
     * {@link #setPage(PDPage) setPage(PDPage page)}.
     *
     * @param pageNumber The page for a remote destination.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(java.lang.Object),217,237,"/**
* Removes specified object from filtered List.
* @param o object to be removed
* @return true if removal successful, false otherwise
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(int),520,529,"/**
* Recursively calls M1 on backing arrays, ignoring filtering.
* @param index the position to call M1 on
* @return result of recursive M1 call
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,clear,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:clear(),136,141,"/**
 * Invokes M1 operation on both Map and Actuals data structures.
 */",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,remove,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:remove(java.lang.Object),117,122,"/**
* Calculates and stores value M3 using cached COS name.
* @param key unique object identifier
* @return calculated M3 value or null if failed
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSArray),166,184,"/**
* Recursively checks if any child demands parent update in COSArray.
* @param array COSArray to traverse
* @return true if any child demands parent update, false otherwise
*/","* Collect all updates made to the given {@link COSArray} and it's contained structures.
     *
     * @param array The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSArray}´s elements changed. A {@link COSArray} shall always be
     * treated as a direct structure, that would require it´s parent to be updated instead.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState),82,85,"/**
* Calls m1 with default flag value.
* @param originDocumentState COS document state object
*/","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see #updated",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,dereferenceChild,org.apache.pdfbox.cos.COSUpdateState:dereferenceChild(org.apache.pdfbox.cos.COSBase),324,330,"/**
* Updates origin document state using update info.
* @param child COSUpdateInfo object to apply
*/","* This shall {@link #setOriginDocumentState(COSDocumentState, boolean)} for the dereferenced child,
     * initializing its {@link #originDocumentState}.
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo} and will never change
     * the child´s {@link #updated} state.
     * </p>
     *
     * @param child The child, that has been dereferenced.
     * @see #setOriginDocumentState(COSDocumentState, boolean)",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValueAsString(),223,227,"/**
* Returns the functional mask as a string.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRow,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRow(),307,372,"/**
* Decodes and masks the image data based on the specified compression type.
* @throws IOException if the sum of run-lengths does not equal scan line width
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRow,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRow(),99,127,"/**
* Updates mask for current row and swaps reference/working data.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",608,617,"/**
* Validates user access by performing encryption and permission checks.
* @param ownerPassword encrypted password for the owner
* @param user user data to validate
* @param owner owner information
* @param permissions required access level
* @param id unique identifier
* @param encRevision encryption revision number
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata whether to encrypt metadata
* @return true if user has valid access, false otherwise
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a patch from an array of points and colors.
 * @param points 2D points that define the patch
 * @param color color values for each point in the patch
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,parse,"org.apache.pdfbox.pdmodel.common.function.type4.Parser:parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",44,48,"/**
* Masks syntax in the given input using the provided handler.
* @param input input text to process
* @param handler handler for syntax masking
*/","* Parses a Type 4 function and sends the syntactic elements to the given
     * syntax handler.
     * @param input the text source
     * @param handler the syntax handler",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptData,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",216,238,"/**
* Encrypts or decrypts data using AES or alternative algorithm based on configuration.
* @param objectNumber unique object identifier
* @param genNumber generation number
* @param data input stream to process
* @param output output stream for result
* @param decrypt true for decryption, false for encryption
*/","* Encrypt or decrypt a set of data.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKey,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)",722,735,"/**
* Determines encryption revision and calls corresponding method to process password.
* @param password input password to be processed
* @param o unused parameter (legacy)
* @param u unused parameter (legacy)
* @param oe unused parameter (legacy)
* @param ue unused parameter (legacy)
* @param permissions unused parameter (legacy)
* @param id unused parameter (legacy)
* @param encRevision encryption revision (5 or 6)
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata whether to encrypt metadata
* @param isOwnerPassword whether password is owner's
* @return processed password as byte array, or throws IOException on error","* Compute the encryption key.
     *
     * @param password The password to compute the encrypted key.
     * @param o The O entry of the encryption dictionary.
     * @param u The U entry of the encryption dictionary.
     * @param oe The OE entry of the encryption dictionary.
     * @param ue The UE entry of the encryption dictionary.
     * @param permissions The permissions for the document.
     * @param id The document id.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     * @param isOwnerPassword whether the password given is the owner password (for revision 6)
     *
     * @return The encrypted key bytes.
     *
     * @throws IOException If there is an error with encryption.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",1002,1019,"/**
* Determines whether the specified parameters are valid for encryption.
* @param password encrypted password
* @param user user identifier
* @param owner owner identifier
* @param permissions access permissions
* @param id unique ID
* @param encRevision encryption revision level
* @param keyLengthInBytes key length in bytes
* @param encryptMetadata whether to encrypt metadata
* @return true if valid, false otherwise
*/","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata.
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",399,464,"/**
* Fetches FontBoxFont object by PostScript name.
* @param format FontFormat instance
* @param postScriptName unique font identifier
* @return FontBoxFont object or null if not found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
* Creates a Coons patch from the given 2D points and colors.
* @param points array of Point2D objects defining the patch's shape
* @param color array of floats representing the patch's color values
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalize,org.apache.pdfbox.text.PDFTextStripper:normalize(java.util.List),1878,1894,"/**
* Normalizes a list of LineItems into WordWithTextPositions.
* @param line list of items to process
* @return normalized list or null if empty
*/","* Normalize the given list of TextPositions.
     * 
     * @param line list of TextPositions
     * @return a list of strings, one string for every word",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(org.apache.pdfbox.cos.COSString),701,708,"/**
* Recursively processes COSString input until it's empty.
* @param text non-null COSString to process
* @return null or the result of recursive processing
*/","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Applies mask functionality to the specified XML tag.
* @param tag COSName object representing the XML element
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Sets up function mask by calling underlying methods.
* @param tag COSName object representing the current tag
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Applies mask to COS object using specified tag.
* @param tag unique COS identifier
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Processes and masks COS content using specified tag.
* @param tag COSName object to process
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Sets the marked content ID.
* @param tag COSName object to modify
* @param mcid non-negative integer identifier value
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Writes a marked content sequence to the output stream.
* @param tag COSName object representing the tag
* @param mcid unique identifier for the marked content sequence
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Generates marked content sequence with specified MCID.
* @param tag COSName identifier
* @param mcid unique multi-page ID (must be non-negative)
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Sets the mask content for a COSName tag.
* @param tag COSName to set mask content for
* @param mcid unique identifier for marked content sequence
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Applies mask operation on COS object.
* @param tag COS reference to apply mask on
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Generates mask for specified COSName.
* @param tag COSName to generate mask for
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Applies mask operation to COSName object.
* @param tag COSName object to process
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Updates mask data for the given COSName tag.
* @param tag COSName identifier
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.cos.COSBase),160,222,"/**
* Writes a COS object to the output stream, handling various types and nesting. 
* @param o COS object to write
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSString,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSString(java.io.OutputStream,org.apache.pdfbox.cos.COSString)",258,262,"/**
* Writes a formatted string to the output stream with trailing space.
* @param output OutputStream to write to
* @param cosString String to be written in COS format
*/","* Write the given {@link COSString} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosString The content, that shall be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextInternal,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextInternal(java.lang.String),276,325,"/**
* Writes formatted text to PDF output stream. 
* @throws IOException if write operation fails
*/","* Outputs a string using the correct encoding and subsetting as required.
     *
     * @param text The Unicode text to show.
     * 
     * @throws IOException If an io exception occurs.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,org.apache.pdfbox.rendering.PageDrawer:<init>(org.apache.pdfbox.rendering.PageDrawerParameters),190,199,"/**
* Initializes PageDrawer with provided parameters.
* @param parameters PageDrawerParameters object with page, renderer, and other settings
*/","* Constructor.
     *
     * @param parameters Parameters for page drawing.
     * @throws IOException If there is an error loading properties from the file.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSString(),528,679,"/**
* Parses a string from the input stream, handling escape sequences and nested parentheses.
* @throws IOException if parsing fails
*/","* This will parse a PDF string.
     *
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:<init>(float,float)",31,34,"/**
* Initializes an immutable rectangle with specified width and height.
* @param width positive value representing rectangle's width
* @param height positive value representing rectangle's height
*/","* Constructor for immutable rectangle.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getBBox,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getBBox(),153,156,"/**
* Returns a rectangle with a mask based on previous calculations.
* @return PDRectangle object representing the mask
*/","* Returns the <code>BBox</code> entry (bounding box) for the
     * appearance stream form XObject.
     *
     * @return Bounding box for appearance stream form XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument),43,48,"/**
* Initializes PDMetadata with a PDDocument.
* @param document the underlying PDF document
*/","* This will create a new PDMetadata object with the /Type and /Subtype entries for a document
     * level metadata object.
     *
     * @param document The document that the stream will be part of.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument),40,44,"/**
* Creates an embedded file object within a PDF document.
* @param document the parent PDF document
*/",* {@inheritDoc},,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",125,130,"/**
* Initializes PDXObject with given document and subtype.
* @param document parent document
* @param subtype object subtype name
*/","* Creates a new XObject of the given subtype for writing.
     * @param document The document in which to create the XObject.
     * @param subtype The subtype of the new XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,102,"/**
 * Creates an image XObject from the given PDDocument.
 * @param document source PDDocument to extract image data from
 */","* Creates an Image XObject in the given document. This constructor is for internal PDFBox use
     * and is not for PDF generation. Users who want to create images should look at {@link #createFromFileByExtension(File, PDDocument)
     * }.
     *
     * @param document the current document",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument),205,211,"/**
* Processes and masks PDDocument content.
* @param template input document to mask
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument),251,258,"/**
* Processes the template document to create a mask for form fields.
* @param template PDDocument object containing the template data
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument),290,296,"/**
* Creates and configures a PDF image form stream from the provided template document.
* @param template PDDocument instance for creating the image form stream
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",94,97,"/**
* Initializes PDStream from PDDocument and InputStream.
* @param doc PDDocument instance
* @param input InputStream to read from
*/","* Constructor. Reads all data from the input stream and embeds it into the document. This
     * method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",108,111,"/**
* Constructs a new PDStream object from the given PDDocument, InputStream, and filter.
* @param doc the parent PDDocument
* @param input the InputStream to read from
* @param filter the COSName of the filter to apply
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filter applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filter Filter to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)",122,125,"/**
* Constructs a PDStream object from a PDDocument and input stream.
* @param doc the parent PDDocument
* @param input input stream to read data from
* @param filters optional COSArray of filter settings
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filters Filters to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",118,130,"/**
* Creates a PDImageXObject from the given parameters.
* @param document PDDocument instance
* @param encodedStream InputStream containing image data
* @param cosFilter COSBase filter object
* @param width image width in pixels
* @param height image height in pixels
* @param bitsPerComponent image bit depth (e.g., 8, 24)
* @param initColorSpace initial color space for the image
*/","* Creates an Image XObject in the given document using the given filtered stream. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param document the current document
     * @param encodedStream an encoded stream of image data
     * @param cosFilter the filter or a COSArray of filters
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @throws IOException if there is an error creating the XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,close,org.apache.pdfbox.cos.COSOutputStream:close(),104,153,"/**
* Applies filters in reverse order to the buffered data.
* @throws IOException if I/O error occurs
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(),355,358,"/**
* Initializes PDLayoutAttributeObject with default owner as OWNER_LAYOUT.",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(),78,81,"/**
 * Initializes PDListAttributeObject with default owner set to OWNER_LIST.",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(),71,74,"/**
* Initializes a new instance of PDPrintFieldAttributeObject with default owner.",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(),57,60,"/**
 * Initializes a new instance of PDTableAttributeObject with default owner set to OWNER_TABLE.",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isValidAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),297,313,"/**
* Checks if a PDAppearanceEntry has valid mask and bounding box.
* @param appearance PDAppearanceEntry object to check
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,scanFonts,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:scanFonts(java.util.List),365,386,"/**
* Processes font files in the provided list.
* @param files collection of Font objects to process
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead),150,153,"/**
 * Constructs a COSParser instance from a RandomAccessRead source.
 * @param source input source to parse
 */","* Default constructor.
     *
     * @param source input representing the pdf.
     * 
     * @throws IOException if something went wrong",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",74,78,"/**
* Initializes a new instance of PDFParser with provided parameters.
* @param source the input stream for reading PDF data
* @param decryptionPassword password for decrypting PDF content (if applicable)
* @param keyStore InputStream for accessing encryption keys
* @param alias identifier for selecting specific encryption key
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security 
     * @param alias alias to be used for decryption when using public key security
     *
     * @throws IOException If something went wrong.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),45,48,"/**
* Initializes content stream with given appearance stream.
* @param appearance PDAppearanceStream object to initialize from.","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to write to.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDFormContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),35,38,"/**
* Initializes PDFormContentStream with form content and resources.
* @param form FormXObject containing content stream and resources","* Create a new form XObject content stream.
     *
     * @param form The form XObject stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",209,212,"/**
* Creates a new page content stream from the given document and appearance.
* @param doc the parent document
* @param appearance the appearance stream to operate on
*/","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the page is part of.
     * @param appearance The appearance stream to write to.
     * @throws IOException If there is an error writing to the page contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectAppearanceStreams,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",354,374,"/**
* Injects form streams into PDF structure.
* @param properties VisibleSignDesigner properties
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text rendering matrix from a given 4x4 Matrix.
* @param matrix input matrix
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets text matrix from input matrix.
* @param matrix input Matrix object
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets text rendering matrix from provided Matrix object.
* @param matrix input Matrix to set
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets text rendering matrix from provided Matrix object.
* @param matrix input matrix to set
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies functional mask to a given Matrix.
* @param matrix input Matrix object
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDFormContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies function mask to input matrix, modifying its contents.
* @param matrix input matrix to modify
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPageContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a mask to the provided matrix.
* @param matrix input Matrix object
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPatternContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies functional mask operation to a given Matrix.
* @param matrix input matrix for modification
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,curveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:curveTo(double,double,double,double,double,double)",1067,1074,"/**
* Computes and outputs M2 value for three points.
* @param ax x-coordinate of first point
* @param ay y-coordinate of first point
* @param bx x-coordinate of second point
* @param by y-coordinate of second point
* @param cx x-coordinate of third point
* @param cy y-coordinate of third point
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",357,368,"/**
* Draws an arrow shape in the content stream.
* @param cs Content stream to draw on
* @param x Base x-coordinate of the arrow
* @param y Base y-coordinate of the arrow
* @param len Length of the arrow arms
*/","* Add the two arms of a horizontal arrow.
     * 
     * @param cs Content stream
     * @param x
     * @param y
     * @param len The arm length. Positive goes to the right, negative goes to the left.
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawShape,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawShape(float,boolean,boolean)",262,288,"/**
* Generates mask commands based on line width, stroke, and fill properties.
* @param lineWidth current line width
* @param hasStroke whether the shape has a stroke
* @param hasFill whether the shape has a fill
*/","* Draw a shape.
     *
     * <p>
     * Dependent on the lineWidth and whether or not there is a background to be generated there are
     * different commands to be used for draw a shape.
     *
     * @param lineWidth the line width of the path.
     * @param hasStroke shall there be a stroking color.
     * @param hasFill shall there be a fill color.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,finish,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:finish(),1076,1091,"/**
* Updates bounding box coordinates and outputs mask line.
* @throws IOException if output operation fails
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawDiamond,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",380,387,"/**
* Draws a circular mask on the content stream.
* @param cs PDAppearanceContentStream object
* @param x center x-coordinate
* @param y center y-coordinate
* @param r radius of the circle
*/","* Add a square diamond shape (corner on top) to the path.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius (to a corner)
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",399,409,"/**
* Generates a rounded rectangle mask in the PDAppearanceContentStream.
* @param cs content stream to draw on
* @param x center x-coordinate of the rectangle
* @param y center y-coordinate of the rectangle
* @param r radius of the corners
*/","* Add a circle shape to the path in clockwise direction.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     * 
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle2,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",422,432,"/**
* Generates a mask for the specified PDAppearanceContentStream using circular arcs.
* @param cs target content stream
* @param x center X-coordinate of the circle
* @param y center Y-coordinate of the circle
* @param r radius of the circle
*/","* Add a circle shape to the path in counterclockwise direction. You'll need this e.g. when
     * drawing a doughnut shape. See ""Nonzero Winding Number Rule"" for more information.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     *
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPaperclip,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPaperclip(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),100,130,"/**
* Generates a PDAppearanceContentStream by drawing various geometric shapes.
*/","* Draw a paperclip. Shape is from
     * <a href=""https://raw.githubusercontent.com/Iconscout/unicons/master/svg/line/paperclip.svg"">Iconscout</a>
     * (Apache licensed).
     *
     * @param contentStream
     * @throws IOException",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,addPath,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",617,667,"/**
* Processes a GeneralPath object and writes its contents to the provided PDAppearanceContentStream.
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidthOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidthOnDemand(float),239,248,"/**
* Applies mask function to line width value.
* @param lineWidth float representing line width
*/","* Sets the line width. The command is only emitted if the lineWidth is
     * different to 1.
     * 
     * @param lineWidth the line width of the path.
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setLineWidth(float)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,beginOutput,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:beginOutput(double,double)",1010,1019,"/**
* Initializes bounding box coordinates and output flags based on input point (x, y).
* @param x minimum X-coordinate
* @param y minimum Y-coordinate
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.lang.String),189,192,"/**
* Wraps file-based operation with a constructor call.
* @param fileName name of file to operate on
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSBase),83,103,"/**
* Recursively traverses the specified COSBase object and returns true if a null value is found.
*/","* Collect all updates made to the given {@link COSBase} and it's contained structures.<br>
     * This shall forward all {@link COSUpdateInfo} objects to the proper specialized collection methods.
     *
     * @param base The {@link COSBase} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSBase} represents a direct child structure, that would require it´s
     * parent to be updated instead.
     * @see #collect(COSDictionary)
     * @see #collect(COSArray)
     * @see #collect(COSObject)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setTrailer,org.apache.pdfbox.cos.COSDocument:setTrailer(org.apache.pdfbox.cos.COSDictionary),395,399,"/**
* Updates the document state based on the given COS dictionary.
* @param newTrailer COS dictionary containing updated state information
*/","* // MIT added, maybe this should not be supported as trailer is a persistence construct.
     * This will set the document trailer.
     *
     * @param newTrailer the document trailer dictionary",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSBase),255,262,"/**
* Recursively processes update info in document tree.
* @param child node to process, may be null
*/","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given child, initializing it´s {@link #updated} state
     * and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param child The child that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(java.lang.Iterable),297,311,"/**
* Processes update info from given iterable of base objects.
* @param children iterable of COSBase objects to process
*/","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,getObject,org.apache.pdfbox.cos.COSObject:getObject(),109,130,"/**
* Dereferences the current object and returns its COSBase representation.
*/","* This will get the object that this object encapsulates.
     *
     * @return The encapsulated object.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fetch,org.apache.pdfbox.filter.CCITTFaxDecoderStream:fetch(),126,150,"/**
* Resets decoder state and reinitializes CCITT stream.
* @throws IOException if malformed or end-of-file encountered
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int),78,87,"/**
* Appends an integer to the input buffer, potentially triggering a refill.
* @param b integer value to be appended
* @throws IOException if there is an error reading from the input source
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",589,606,"/**
* Determines whether to use encryption method 1 or 2 based on the revision number.
* @param ownerPassword password for the owner
* @param user user data
* @param owner owner information
* @param permissions access rights
* @param id unique identifier
* @param encRevision encryption revision number
* @param keyLengthInBytes length of encryption key
* @param encryptMetadata whether to encrypt metadata
* @return true if valid, false otherwise
*/","* Check for owner password.
     *
     * @param ownerPassword The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parse,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parse(java.lang.CharSequence),55,60,"/**
* Parses input text into an instruction sequence using Parser.m1.
* @param text input text to parse
* @return parsed InstructionSequence object
*/","* Parses the given text into an instruction sequence representing a Type 4 function
     * that can be executed.
     * @param text the Type 4 function text
     * @return the instruction sequence",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",566,583,"/**
* Encrypts and writes user data to COSStream.
* @param stream COSStream object
* @param objNum object number
* @param genNum generation number
*/","* This will encrypt a stream, but not the dictionary as the dictionary is
     * encrypted by visitFromString() in COSWriter and we don't want to encrypt
     * it twice.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptString(org.apache.pdfbox.cos.COSString,long,long)",632,653,"/**
* Decrypts and filters user ID strings.
* @param string input string to process
* @param objNum object number
* @param genNum generation number
* @return filtered COSString or original if decryption fails
*/","* This will decrypt a string.
     *
     * @param string the string to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     * 
     * @return the decrypted COSString",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptString(org.apache.pdfbox.cos.COSString,long,int)",666,672,"/**
* Masks a COS object using the provided string and numbers.
* @param string input string to mask
* @param objNum object number for masking
* @param genNum generation number for masking
* @return masked COS string or throws IOException if error occurs
*/","* This will encrypt a string.
     *
     * @param string the string to encrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @return the encrypted COSString
     * 
     * @throws IOException If an error occurs writing the new string.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1075,1089,"/**
* Determines encryption method based on revision.
* @param password input password
* @param user user data
* @param owner owner data
* @param permissions access rights
* @param id unique identifier
* @param encRevision encryption revision
* @param keyLengthInBytes encryption key length
* @param encryptMetadata whether to encrypt metadata
*/","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFontBoxFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFontBoxFont(java.lang.String),371,392,"/**
* Tries to fetch a font by its PostScript name from various formats.
* @param postScriptName the font's PostScript name
* @return FontBoxFont object or null if not found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePage,org.apache.pdfbox.text.PDFTextStripper:writePage(),495,728,"/**
* Processes text positions and generates line items.
*/","* This will print the text of the processed page to ""output"". It will estimate, based on the coordinates of the
     * text, where newlines and word spacings should be placed. The text will be sorted only if that feature was
     * enabled.
     *
     * @throws IOException If there is an error writing the text.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.cos.COSBase),70,73,"/**
 * Applies mask operation to COSBase data. 
 */","* Writes a single operand token.
     *
     * @param base The operand to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Formats text with positioning data into a JSON-like string.
* @param textWithPositioningArray array containing strings and floats to be formatted
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showText(java.lang.String),262,267,"/**
* Masks sensitive information in provided text.
* @param text input string to process
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createPageDrawer,org.apache.pdfbox.rendering.PDFRenderer:createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters),526,531,"/**
* Creates a PageDrawer instance with specified parameters.
* @param parameters PageDrawerParameters object
*/","* Returns a new PageDrawer instance, using the given parameters. May be overridden.
     * 
     * @param parameters parameters to be used when creating the PageDrawer instance
     * @return a new PageDrawer instance
     * 
     * @throws IOException id the PageDrawer instance could not be created",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,103,"/**
* Initializes a new PDFormXObject with the given PDDocument.
* @param document PDDocument instance
*/","* Creates a Form Image XObject for writing, in the given document.
     * @param document The current document",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,"org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",59,64,"/**
* Initializes a new PDMetadata object from the given PDDocument and InputStream.
* @param doc PDDocument instance
* @param str InputStream for metadata data
*/","* Constructor. Reads all data from the input stream and embeds it into the document, this will
     * close the InputStream. The /Type and /Subtype entries for a document level metadata object
     * will be created.
     *
     * @param doc The document that will hold the stream.
     * @param str The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",57,61,"/**
* Creates a PDEmbeddedFile object from the given PDDocument and input stream.
* @param doc PDDocument instance
* @param str InputStream containing embedded file data
*/",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",66,70,"/**
* Creates an embedded file in the PDDocument.
* @param doc parent document
* @param input stream containing file data
* @param filter optional filter name
*/",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,configureOutputProfile,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",108,115,"/**
* Creates a PDF stream from the provided color profile.
* @param doc PDDocument instance
* @param colorProfile InputStream containing ICC profile data
* @return PDStream object representing the color profile or null on failure
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createJPEG,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",305,328,"/**
* Creates a PDF image object from the given BufferedImage and parameters.
* @param document PDDocument instance
* @param image BufferedImage to convert
* @param quality compression quality (0-1)
* @param dpi dots per inch for image resolution
* @return PDImageXObject instance or null on failure
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",243,256,"/**
* Creates a PDI image from byte array using FLATE compression.
* @param document the parent PDDocument
* @param byteArray compressed image data
* @param width image width in pixels
* @param height image height in pixels
* @param bitsPerComponent number of color bits per component
* @param initColorSpace initial color space for the image
* @return a new PDImageXObject instance","* Create a PDImageXObject using the Flate filter.
     * 
     * @param document The document.
     * @param byteArray array with data.
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @return the newly created PDImageXObject with the data compressed.
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(java.lang.String),64,67,"/**
* Initializes PDExportFormatAttributeObject with an owner.
* @param owner unique identifier or name of the owning object
*/","* Default constructor.
     * 
     * @param owner the owner of the attributes",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<init>(org.apache.pdfbox.pdmodel.font.FontCache),323,363,"/**
* Initializes local font provider with FontCache instance.
* Scans the local system for font files, loads cached FontInfo objects,
* and builds on-disk cache if necessary. 
*/",* Constructor.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,<init>,org.apache.pdfbox.pdfparser.FDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),36,39,"/**
* Initializes parser from random access read source.
* @param source RandomAccessRead data stream
*/","* Constructs parser for given file using memory buffer.
     * 
     * @param source the source of the pdf to be parsed
     * 
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",58,61,"/**
* Constructs a new PDF parser instance from the given source.
* @param source input data to parse
* @param decryptionPassword password for decrypting encrypted PDFs (may be null)
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPushPin,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPushPin(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),132,183,"/**
* Applies a series of transformations to the provided PDAppearanceContentStream.
* @param contentStream stream object subject to transformation
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawGraph,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawGraph(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),185,271,"/**
* Applies a complex matrix transformation to the PDAppearanceContentStream.
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawTag,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawTag(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),273,323,"/**
* Applies a series of transformations to the PDAppearanceContentStream.
* @param contentStream stream object being transformed
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawStyle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",298,345,"/**
* Draws annotation line based on given style.
* @param style annotation line style
* @param cs content stream to draw on
* @param x x-coordinate of drawing position
* @param y y-coordinate of drawing position
* @param width line width
* @param hasStroke true if stroke should be drawn, false otherwise
* @param hasBackground true if background should be drawn, false otherwise
*/","* Draw a line ending style.
     * 
     * @param style
     * @param cs
     * @param x
     * @param y
     * @param width
     * @param hasStroke
     * @param hasBackground
     * @param ending false if left, true if right of an imagined horizontal line (important for
     * arrows).
     *
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(double,double)",1034,1046,"/**
* Dispatches output to either internal or external stream based on output state.
* @param x double value
* @param y double value
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(double,double)",1053,1065,"/**
* Toggles between internal and external output for point (x, y).
* @param x double coordinate
* @param y double coordinate
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSDictionary),112,157,"/**
* Recursively updates dictionary considering child demands parent update.
* @param dictionary COSDictionary object to process
* @return true if dictionary needs updating, false otherwise
*/","* Collect all updates made to the given {@link COSDictionary} and it's contained structures.
     *
     * @param dictionary The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSDictionary} represents a direct child structure, that would
     * require it´s parent to be updated instead.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,getObjects,org.apache.pdfbox.cos.COSIncrement:getObjects(),337,345,"/**
* Returns a set of COSBase objects.
*/","* Returns all indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.<br>
     * Calling this method will cause the increment to be initialized.
     *
     * @return All indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.
     * @see #objects",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.cos.COSBase),83,97,"/**
* Processes COSBase object based on type and attributes.
* @param object COSBase instance to process
*/","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,"org.apache.pdfbox.cos.COSArray:add(int,org.apache.pdfbox.cos.COSBase)",121,135,"/**
* Processes the given COSBase object and its associated data.
* @param i int parameter
* @param object COSBase object instance
*/","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param object The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.cos.COSBase)",220,234,"/**
* Processes and updates the given COSBase object in the object list.
* @param index position to update
* @param object COSBase object to process
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",198,219,"/**
* Sets a key-value pair in the document or dictionary.
* @param key COSName identifier
* @param value COSBase object to associate with key
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(java.util.Collection),175,181,"/**
* Invokes COSBase methods recursively on provided collection.
* @param objectsList list of COSBase objects
*/","* This will add an object to the array.
     *
     * @param objectsList The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,"org.apache.pdfbox.cos.COSArray:addAll(int,java.util.Collection)",206,212,"/**
* Invokes M1 on objects and executes M3 if result is true.
* @param i integer parameter
* @param objectList collection of COSBase objects
*/","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param objectList The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSArray),278,281,"/**
* Recursively converts COSArray to Iterable interface.","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getObject,org.apache.pdfbox.cos.COSArray:getObject(int),272,284,"/**
* Recursively fetches a COSBase object by index, 
* potentially unwrapping nested COSObjects.
* @param index unique index identifier
* @return COSBase object or null if not found
*/","* This will get an object from the array.  This will dereference the object.
     * If the object is COSNull then null will be returned.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeObject,org.apache.pdfbox.cos.COSArray:removeObject(org.apache.pdfbox.cos.COSBase),492,511,"/**
* Recursively checks for and removes a COS object by matching its attributes.
* @param o target object to match
* @return true if object was found and removed, false otherwise
*/","* This will remove an element from the array.
     * This method will also remove a reference to the object.
     *
     * @param o The object to remove.
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOfObject,org.apache.pdfbox.cos.COSArray:indexOfObject(org.apache.pdfbox.cos.COSBase),566,589,"/**
* Finds the index of a given object in an array by matching its mask.
* @param object COSBase object to search for
* @return index or -1 if not found
*/","* This will return the index of the entry or -1 if it is not found.
     * This method will also find references to indirect objects.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsValue,org.apache.pdfbox.cos.COSDictionary:containsValue(java.lang.Object),86,94,"/**
* Checks if the given object is present in the collection.
* @param value object to search for
* @return true if found, false otherwise
*/","* @see java.util.Map#containsValue(java.lang.Object)
     *
     * @param value The value to find in the map.
     *
     * @return true if the map contains this value.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getKeyForValue,org.apache.pdfbox.cos.COSDictionary:getKeyForValue(java.lang.Object),102,115,"/**
* Retrieves the mask name from the given value.
* @param value object to search for a matching mask
* @return COSName of the matching mask or null if not found
*/","* Search in the map for the value that matches the parameter and return the first key that maps to that value.
     *
     * @param value The value to search for in the map.
     * @return The key for the value in the map or null if it does not exist.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName),178,190,"/**
* Retrieves the value of a named item, unwrapping nested objects and returning null for COSNull values.
* @param key name of the item to fetch
* @return the retrieved item or null if not found or null
*/","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryString,"org.apache.pdfbox.cos.COSDictionary:getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",1357,1412,"/**
* Recursively formats a COSBase object and its children as a string.
* @param base the COSBase to format
* @param objs list of objects used for formatting (e.g. dictionaries)
* @return formatted string representation or ""null"" if base is null
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSDictionary:getIndirectObjectKeys(java.util.Collection),1435,1485,"/**
* Recursively processes objects in the collection, removing indirect references.
* @param indirectObjects Collection of COSObjectKeys to process
*/","* Collects all indirect objects numbers within this dictionary and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getLinearizedDictionary,org.apache.pdfbox.cos.COSDocument:getLinearizedDictionary(),207,230,"/**
* Retrieves a COSDictionary with LINEARIZED entry.
* @return COSDictionary object or null if not found
*/","* Get the dictionary containing the linearization information if the pdf is linearized.
     * 
     * @return the dictionary containing the linearization information",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,close,org.apache.pdfbox.cos.COSDocument:close(),440,486,"/**
* Closes and processes all COS streams.
* @throws IOException if any stream processing fails
*/","* This will close all storage and delete the tmp files.
     *
     * @throws IOException If there is an error close resources.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSObject),193,231,"/**
* Updates object state based on update state and children.
* @param object COSObject to update
*/","* Collect all updates made to the given {@link COSObject} and it's contained structures.
     *
     * @param object The {@link COSObject} updates shall be collected for.
     * @return Always returns {@code false}. {@link COSObject}s by definition are indirect and shall never cause a
     * parent structure to be updated.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,accept,org.apache.pdfbox.cos.COSObject:accept(org.apache.pdfbox.cos.ICOSVisitor),160,172,"/**
* Visits the underlying object, delegating to it or a default implementation if null.","* visitor pattern double dispatch method.
     *
     * @param visitor The object to notify when visiting this object.
     * @throws IOException If an error occurs while visiting this object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createContentStreamList,org.apache.pdfbox.multipdf.Overlay:createContentStreamList(org.apache.pdfbox.cos.COSBase),360,388,"/**
* Recursively fetches COSStream objects from the provided contents.
* @param contents COSBase object to process
* @return List of COSStream objects or empty list if not found
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,hasSelfReference,"org.apache.pdfbox.multipdf.PDFCloneUtility:hasSelfReference(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",244,258,"/**
* Checks if the given COSBase object has a reference to its parent.
* @param parent COSBase object to check for self-reference
* @param value COSBase object to inspect
* @return true if the object references its parent, false otherwise
*/","* Check whether an element (of an array or a dictionary) points to its parent.
     *
     * @param parent COSArray or COSDictionary
     * @param value an element",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getLength,org.apache.pdfbox.pdfparser.COSParser:getLength(org.apache.pdfbox.cos.COSBase),663,697,"/**
* Retrieves a COSNumber representing the mask from the given COSBase.
* @param lengthBaseObj COSBase containing the length or mask information
* @return COSNumber representing the mask, or null if not found
*/",* Returns length value referred to or defined in given object.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.NormalXReference:<init>(long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",47,62,"/**
* Creates a NormalXReference with the specified byte offset, key, and object.
* @param byteOffset file system offset
* @param key COSObjectKey for referencing
* @param object COSBase object to reference
*/","* Prepares a normal reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param byteOffset The byte offset of the {@link COSObject} in the PDF file.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,prepareIncrement,org.apache.pdfbox.pdfwriter.COSWriter:prepareIncrement(),319,338,"/**
* Processes and updates mask-related objects in the PDF document.
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addObjectToWrite,org.apache.pdfbox.pdfwriter.COSWriter:addObjectToWrite(org.apache.pdfbox.cos.COSBase),535,573,"/**
* Masks the given object, updating internal state and potentially writing to disk.
* @param object COSBase object to mask
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getObjectKey,org.apache.pdfbox.pdfwriter.COSWriter:getObjectKey(org.apache.pdfbox.cos.COSBase),1067,1106,"/**
* Resolves COSObjectKey for the given COSBase object.
* @param obj COSBase object to resolve key for
* @return resolved COSObjectKey or null if not found
*/","* This will get the object key for the object.
     *
     * @param obj The object to get the key for.
     *
     * @return The object key for the object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getKey(org.apache.pdfbox.cos.COSBase),93,105,"/**
* Retrieves a COSObjectKey from the pool or creates a new one.
* @param object input COSBase object
* @return COSObjectKey instance or null if not found
*/","* Returns the {@link COSObjectKey} for a given registered {@link COSBase}. Returns null if such an object is not
     * registered.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} shall be determined for.
     * @return key The {@link COSObjectKey}, that matches the registered {@link COSBase}, or null if such an object is
     * not registered.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSBase),137,142,"/**
* Checks if an object is in the mask, either directly or via its parent.
* @param object COSBase object to check
* @return true if object is masked, false otherwise
*/","* Returns true, if the given {@link COSBase} is a registered object of this pool.
     *
     * @param object The {@link COSBase} that shall be checked.
     * @return True, if such a {@link COSBase} is registered in this pool.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,prepareStreamObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:prepareStreamObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",81,89,"/**
* Prepares mask for given COSObjectKey and COSBase object.
* @param key COSObjectKey to be masked
* @param object COSBase object to be modified
*/","* Prepares the given {@link COSObject} to be written to this object stream, using the given {@link COSObjectKey} as
     * it's ID for indirect references.
     *
     * @param key The {@link COSObjectKey}, that shall be used for indirect references to the {@link COSObject}.
     * @param object The {@link COSObject}, that shall be written to this object stream.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,createFromCOSObject,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",244,264,"/**
* Resolves and caches PDColorSpace instance for given COSObject colorSpace.
* @param colorSpace COSObject representing color space
* @param resources PDResources object to use for caching
* @return PDColorSpace object or null if not found
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,toDictionary,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:toDictionary(org.apache.pdfbox.cos.COSBase),348,364,"/**
* Retrieves a dictionary from the given object, or returns null if not found.
* @param o input object to extract dictionary from
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(),427,442,"/**
* Fetches the next byte from the decoded data.
* @throws IOException if decoding fails
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(byte[],int,int)",444,465,"/**
* Reads and decodes a specified length from the input byte array.
* @param b input byte array
* @param off starting offset in the input array
* @param len length of data to be read
* @return actual number of bytes read or 0 if nothing was read
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,skip,org.apache.pdfbox.filter.CCITTFaxDecoderStream:skip(long),467,485,"/**
* Skips bytes in the decoded data stream based on a mask value.
* @param n mask value
* @return number of bytes skipped
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1107,1113,"/**
* Calls the internal method m2 with hashed password.
* @param password plaintext password
* @param user byte array representing user data
* @param owner byte array representing owner data
* @param permissions integer representing file permissions
* @param id unique identifier byte array
* @param encRevision encryption revision number
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to indicate metadata encryption
*/","* Check for owner password.
     *
     * @param password The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,writePage,org.apache.pdfbox.text.PDFTextStripperByArea:writePage(),155,164,"/**
* Iterates through regions, fetching character and text data.
* @throws IOException on I/O errors
*/","* This will print the processed page text to the output stream.
     *
     * @throws IOException If there is an error writing the text.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes text with positioning data in a JSON-like format.
* @param textWithPositioningArray Array containing string and float values
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDFormContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes text with positioning array, writing formatted output to console.
* @param textWithPositioningArray array containing Float positions and String texts
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPageContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes text with positioning data, iterating over the input array.
* @param textWithPositioningArray array containing float values and strings
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPatternContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes text with positioning data in a JSON-like format.
* @param textWithPositioningArray array containing float values (x, y coordinates) and string values (text)
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showText(java.lang.String),262,267,"/**
* Performs functional mask operation on input text.
* @param text string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDFormContentStream:showText(java.lang.String),262,267,"/**
* Applies mask to input text and performs subsequent operations.
* @param text input string to be processed
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPageContentStream:showText(java.lang.String),262,267,"/**
* Applies mask to input text.
* @param text string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPatternContentStream:showText(java.lang.String),262,267,"/**
* Performs mask operation on input text.
* @param text string to be masked
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.PDDocument),56,60,"/**
* Initializes a transparency group from a PDF document.
* @param document the parent PDDocument instance
*/","* Creates a Transparency Group for writing, in the given document.
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),48,51,"/**
* Initializes appearance stream from provided PDDocument.
* @param document PDDocument instance to fetch data from
*/","* Creates a Form Image XObject for writing, in the given document.
     * 
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",274,278,"/**
* Converts BufferedImage to PDDocument with mask.
* @param document target PDF document
* @param image source image
* @param quality compression quality (0-100)
* @param dpi dots per inch for image resolution
*/","* Creates a new JPEG Image XObject from a BufferedImage, a given quality and dpi metadata.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @param dpi the desired dpi (resolution) value of the JPEG to be stored in metadata. This
     * value has no influence on image content or size.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromGrayImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",136,162,"/**
* Converts BufferedImage to a PDImageXObject for PDF document.
* @param image BufferedImage object
* @param document PDDocument instance
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",164,229,"/**
* Creates a PDF ImageXObject from the given BufferedImage and PDDocument.
* @param image BufferedImage to convert
* @param document PDDocument to attach the image to
* @return PDImageXObject representing the converted image
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),45,48,"/**
* Initializes PDF parser from a RandomAccessRead source.
* @param source source data to read from
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source source representing the pdf.
     * @throws IOException If something went wrong.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,outputCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",475,494,"/**
* Applies mask functions to points in the template array.
* @param template array of Point2D.Double coordinates
* @param x x-coordinate offset
* @param y y-coordinate offset
*/","* Writes the curl template points to the output and applies translation (x, y).",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArcSegment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",639,700,"/**
* Generates Bezier curve points between two angles.
* @param startAng starting angle
* @param endAng ending angle
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param rx radius x-component
* @param ry radius y-component
* @param out collection of Point2D.Double objects to store curve points
* @param addMoveTo whether to include initial move-to point in the output
*/","* Creates a single Bézier curve that represents a section of an elliptical
     * arc. The sweep angle of the section must not be larger than 90 degrees.
     * If argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(java.awt.geom.Point2D$Double),1029,1032,"/**
 * Wraps Point2D.Double instance into native x and y coordinates.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(java.awt.geom.Point2D$Double),1048,1051,"/**
* Wraps Point2D.Double in primitive coordinates and delegates to overloaded version.
* @param p point with x and y coordinates
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,iterator,org.apache.pdfbox.cos.COSIncrement:iterator(),352,356,"/**
* Delegates call to m1() and returns its COSBase iterator.","* Return an iterator for the determined {@link #objects} contained in this {@link COSIncrement}.
     *
     * @return An iterator for the determined {@link #objects} contained in this {@link COSIncrement}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.pdmodel.common.COSObjectable),104,112,"/**
* Recursively processes an object's underlying COS structure.
* @param object COSObjectable instance to process
*/","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,"org.apache.pdfbox.cos.COSArray:growToSize(int,org.apache.pdfbox.cos.COSBase)",611,620,"/**
* Applies mask operation to the given object for specified size.
* @param size target size
* @param object COSBase object to process
*/","* This will add the object until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.
     * @param object The object to fill the array with.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setFloatArray,org.apache.pdfbox.cos.COSArray:setFloatArray(float[]),655,662,"/**
* Processes float values in the provided array using custom methods m1 and m2.
* @param value input float array to be processed
*/","* Clear the current contents of the COSArray and set it with the float[].
     *
     * @param value The new value of the float array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSArray,org.apache.pdfbox.pdfparser.BaseParser:parseCOSArray(),755,822,"/**
* Parses and returns a COSArray from the input stream.
*/","* This will parse a PDF array object.
     *
     * @return The parsed PDF array.
     *
     * @throws IOException If there is an error parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getStream,org.apache.pdfbox.pdfparser.PDFXRefStream:getStream(),67,116,"/**
* Processes and fetches compressed stream data.
* @throws IOException if I/O error occurs
*/","* Returns the stream of the XRef.
     * @return the XRef stream
     * @throws IOException if something went wrong",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,initParserValues,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:initParserValues(org.apache.pdfbox.cos.COSStream),66,102,"/**
* Parses and validates the Xref stream's W and INDEX arrays.
* @param stream COSStream object containing Xref data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",118,127,"/**
* Initializes a COSArrayList with the given item and actual object.
* @param actualObject the actual object to store in the list
* @param item the item to add to the array
* @param dictionary the parent dictionary
* @param dictionaryKey the key used to reference the array in the dictionary
*/","* This is a really special constructor.  Sometimes the PDF spec says
     * that a dictionary entry can either be a single item or an array of those
     * items.  But in the PDModel interface we really just want to always return
     * a java.util.List.  In the case were we get the list and never modify it
     * we don't want to convert to COSArray and put one element, unless we append
     * to the list.  So here we are going to create this object with a single
     * item instead of a list, but allow more items to be added and then converted
     * to an array.
     *
     * @param actualObject The PDModel object.
     * @param item The COS Model object.
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,converterToCOSArray,org.apache.pdfbox.pdmodel.common.COSArrayList:converterToCOSArray(java.util.List),304,349,"/**
* Converts a list of objects into a COSArray.
* @param cosObjectableList list of objects to be converted
* @return COSArray representation or null if input is null
*/","* This will convert a list of COSObjectables to an array list of COSBase objects.
     *
     * @param cosObjectableList A list of COSObjectable.
     *
     * @return A list of COSBase.
     * @throws IllegalArgumentException if an object type is not supported for conversion to a
     * COSBase object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(),37,43,"/**
* Initializes PDRange with default value range [0, 1].",* Constructor with an initial range of 0..1.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(org.apache.pdfbox.cos.COSArray),47,58,"/**
* Initializes PDFourColours with a COSArray of colours.
* @param array COSArray containing up to 4 colour values
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(),38,43,"/**
* Initializes an empty FDFOptionElement with default values.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getWidths(int[]),417,511,"/**
* Creates a COSArray representing a mask based on the provided widths.
* @param widths array of integers defining the mask structure
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getVerticalMetrics(int[]),547,668,"/**
* Generates a COSArray representation of motion data.
* @param values array of float values, where each group of 4 represents: 
*                cid, w1Value, vxValue, vyValue
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(),45,50,"/**
 * Initializes default PDF font settings with a single font and scale factor.
 */","* Creates a blank font setting, font will be null, size will be 1.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getCOSObject(),78,85,"/**
* Returns a COSBase object representing the functional mask.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toCOSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toCOSArray(),208,216,"/**
* Creates and populates COSArray with mask components.
* @return populated COSArray object
*/","* Returns the color component values as a COS array
     * @return the color component values as a COS array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(),72,81,"/**
* Initializes a new PDDevice object with default device name.
*/",* Creates a new DeviceN color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(),39,45,"/**
* Initializes a 3D point with zero coordinates.
*/","* Creates a new gamma.
     * Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getAlternateColorSpace(),389,432,"/**
* Returns the color space for image masking.
* @return PDColorSpace object
*/","* Returns a list of alternate color spaces for non-conforming readers.
     * WARNING: Do not use the information in a conforming reader.
     * @return A list of alternateColorSpace color spaces.
     * @throws IOException If there is an error getting the alternateColorSpace color spaces.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(),61,68,"/**
* Initializes a PDIndexed object with default properties.
*/","* Creates a new Indexed color space.
     * Default DeviceRGB, hival 255.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultRangeArray,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultRangeArray(),184,192,"/**
* Creates a COSArray representing a rectangular mask with 
* x and y coordinates ranging from -100 to 100.
*/","* creates a range array with default values (-100..100 -100..100).
     * @return the new range array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources),46,51,"/**
* Initializes a PDPattern object with the provided resources.
* @param resources PDResources instance for pattern configuration
*/","* Creates a new pattern color space.
     * 
     * @param resources The current resources.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(),69,77,"/**
* Initializes PDSeparation object with default values.
*/",* Creates a new Separation color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(),38,44,"/**
* Initializes PDTristimulus with default RGB values (0, 0, 0).
*/","* Constructor. Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(float[]),59,66,"/**
* Initializes a PDTristimulus object from a 1D float array.
* @param array input array containing up to 3 color values
*/","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setMatrix(java.awt.geom.AffineTransform),245,255,"/**
* Applies the given affine transformation to a mask.
* @param transform AffineTransform object
*/","* Sets the optional Matrix entry for the form XObject.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",95,139,"/**
* Creates a PDImageXObject from the given byte array and PDDocument.
* @param document PDDocument instance
* @param byteArray image data as bytes
* @return PDImageXObject object or null if not supported
*/","* Creates a new JPEG Image XObject from a byte array containing JPEG data.
     *
     * @param document the document where the image will be created
     * @param byteArray bytes of JPEG image
     * @return a new Image XObject
     *
     * @throws IOException if the input stream cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createProcSetArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createProcSetArray(),172,183,"/**
* Initializes PDF structure with a set of allowed drawing procedures.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toCOSArray,org.apache.pdfbox.util.Matrix:toCOSArray(),566,576,"/**
* Creates a COSArray with mask values from the single array.
* @return COSArray object containing 6 float values
*/","* Returns a COS array which represent the geometric relevant components of the matrix. The last column of the
     * matrix is ignored, only the first two columns are returned. This is analog to the Matrix(COSArray) constructor.
     * 
     * @return a COSArray representing the geometric relevant components of the matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",254,262,"/**
* Recursively processes a COSObjectable at the specified index.
* @param index current processing index
* @param object COSObjectable to process
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setInt,"org.apache.pdfbox.cos.COSArray:setInt(int,int)",338,341,"/**
 * Sets a bit in the mask at the specified index to the given value.
 * @param index the index of the bit to modify
 * @param value the new value for the bit (0 or 1)
 */","* Set the value in the array as an integer.
     *
     * @param index The index into the array.
     * @param value The value to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setName,"org.apache.pdfbox.cos.COSArray:setName(int,java.lang.String)",348,351,"/**
* Sets mask value at specified index with provided name.
* @param index index of mask to set
* @param name name associated with mask value
*/","* Set the value in the array as a name.
     * @param index The index into the array.
     * @param name The name to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setString,"org.apache.pdfbox.cos.COSArray:setString(int,java.lang.String)",389,399,"/**
* Calls m1 with COSString representation of input string or null.
* @param index integer parameter
* @param string string to be converted (may be null)
*/","* Set the value in the array as a string.
     * @param index The index into the array.
     * @param string The string to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteSignature,org.apache.pdfbox.pdfwriter.COSWriter:doWriteSignature(),863,916,"/**
* Updates the incrementPart array with a mask and optional digital signature.
* @throws IOException if not enough space to write the new byteRange
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMin,org.apache.pdfbox.pdmodel.common.PDRange:setMin(float),107,110,"/**
* Initializes mask values in the range array with minimum threshold.
* @param min minimum value to use as threshold
*/","* This will set the minimum value for the range.
     *
     * @param min The new minimum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMax,org.apache.pdfbox.pdmodel.common.PDRange:setMax(float),128,131,"/**
* Initializes mask values in rangeArray with specified maximum value.
* @param max maximum value to use in initialization
*/","* This will set the maximum value for the range.
     *
     * @param max The new maximum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftX(float),225,228,"/**
* Sets mask value in rectArray.
* @param value float value to set
*/","* This will set the lower left x coordinate.
     *
     * @param value The lower left x.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftY(float),245,248,"/**
* Sets a float value to the first element of the rectangular array.
* @param value the float value to be set
*/","* This will set the lower left y coordinate.
     *
     * @param value The lower left y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightX(float),265,268,"/**
* Sets the first element of rectArray's m1 array to the given value.
* @param value the float value to be assigned
*/","* This will set the upper right x coordinate.
     *
     * @param value The upper right x .",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightY(float),285,288,"/**
* Sets mask value in the rectangle array.
* @param value float value to set
*/","* This will set the upper right y coordinate.
     *
     * @param value The upper right y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setColourByIndex,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",175,187,"/**
* Updates array value at specified index with the given colour.
* @param index array index
* @param colour PDGamma object to be stored or null for default value
*/","* Sets the colour by edge index.
     * 
     * @param index the edge index
     * @param colour the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptArray,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptArray(org.apache.pdfbox.cos.COSArray,long,long)",683,689,"/**
* Masks COSArray elements with FUNC_MASK values.
* @param array COSArray to modify
* @param objNum object number
* @param genNum generation number
*/","* This will decrypt an array.
     *
     * @param array The array to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setOption(java.lang.String),91,94,"/**
* Sets option mask to specified value.
* @param opt option value as string 
*/","* This will set the string for an available option.
     *
     * @param opt One of the available options.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setDefaultAppearanceString(java.lang.String),111,114,"/**
* Sets a mask value using the provided string.
* @param da input string to set as mask
*/","* This will set the default appearance string.
     *
     * @param da The default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFontSize(float),115,118,"/**
* Sets font mask size.
* @param size float value representing font size
*/","* This will set the size of the font.
     *
     * @param size The new size of the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setColorantNames(java.util.List),494,498,"/**
* Masks colors in the provided list of names.
* @param names collection of colorant names to mask
*/","* Sets the list of colorants
     * @param names the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes),505,521,"/**
* Initializes or resets device N attributes based on input.
* @param attributes DeviceNAttributes object to use (null for default)
*/","* Sets the color space attributes.
     * If null is passed in then all attribute will be removed.
     * @param attributes the color space attributes, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),545,554,"/**
* Updates the color mask with a new color space.
* @param cs new color space to apply
*/","* This will set the alternate color space.
     *
     * @param cs The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setR(float),88,91,"/**
* Sets the first value of the mask to a cosine float with amplitude 'r'.
* @param r amplitude of the cosine float
*/","* Sets the r value of the tristimulus.
     * @param r the r value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setG(float),106,109,"/**
* Updates M1 value with cosine of input angle.
* @param g input angle in radians
*/","* Sets the g value of the tristimulus.
     * @param g the g value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setB(float),124,127,"/**
* Sets mask value to 2 times the input float value.
* @param b input float value
*/","* Sets the b value of the tristimulus.
     * @param b he b value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setBaseColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),312,316,"/**
* Sets the color space mask to the provided base color space.
* @param base base color space object
*/","* Sets the base color space.
     * @param base the base color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setColorantName(java.lang.String),274,277,"/**
* Sets the mask value in the array with the given name.
* @param name unique identifier of the array element
*/","* Sets the colorant name.
     * @param name the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),283,292,"/**
* Sets the alternate color space using the provided PDColorSpace.
* @param colorSpace alternate color space to set
*/","* Sets the alternate color space.
     * @param colorSpace The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setX(float),91,94,"/**
* Sets the value of the first element in the array to the given float.","* Sets the x value of the tristimulus.
     * @param x the x value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setY(float),109,112,"/**
 * Sets the value of M1 in the values array to 1 with a floating-point value.","* Sets the y value of the tristimulus.
     * @param y the y value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setZ(float),127,130,"/**
* Sets mask value at index 2 to input float 'z'. 
* @param z input value to be masked
*/","* Sets the z value of the tristimulus.
     * @param z the z value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",227,235,"/**
* Recursively sets or updates a dictionary item with the given key and value.
* @param key name of the item to set
* @param value new value for the specified item (or null to remove) 
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(java.lang.String,boolean)",254,257,"/**
* Sets mask flag with specified key and value.
* @param key unique identifier
* @param value true/false status of the mask","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(org.apache.pdfbox.cos.COSName,boolean)",265,268,"/**
* Sets a mask attribute with given key and value.
* @param key unique identifier
* @param value boolean flag to set or clear","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",276,279,"/**
* Recursively wraps value in a COSName object with the given key.","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(org.apache.pdfbox.cos.COSName,java.lang.String)",300,308,"/**
* Sets a mask value in the document.
* @param key COSName of the key to set
* @param value string representation of the mask value
*/","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(org.apache.pdfbox.cos.COSName,java.lang.String)",372,380,"/**
* Sets or clears a named flag using the given COS string.
* @param key COSName object representing the flag
* @param value String value to set or clear the flag with (null to clear)
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(org.apache.pdfbox.cos.COSName,int)",421,424,"/**
 * Sets a function mask attribute with the given name and value.
 * @param key unique identifier of the attribute
 * @param value new integer value for the attribute
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(org.apache.pdfbox.cos.COSName,long)",443,447,"/**
* Sets an integer value in the COS dictionary.
* @param key unique identifier
* @param value integer value to set
*/","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(org.apache.pdfbox.cos.COSName,float)",484,488,"/**
* Sets a floating-point mask value.
* @param key unique identifier
* @param value floating-point value to set
*/","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,"org.apache.pdfbox.cos.COSDocument:createCOSStream(org.apache.pdfbox.cos.COSDictionary,long,long)",192,200,"/**
* Processes a COSDictionary to produce a COSStream.
* @param dictionary input document object
* @param startPosition starting position in the stream
* @param streamLength length of the stream
* @return processed COSStream or null if error occurs
*/","* Creates a new COSStream using the current configuration for scratch files. Not for public use.
     * Only COSParser should call this method.
     * 
     * @param dictionary    the corresponding dictionary
     * @param startPosition the start position within the source
     * @param streamLength  the stream length
     * @return the new COSStream
     * @throws IOException if the random access view can't be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary),351,354,"/**
 * Updates the encryption trailer in the given dictionary.
 * @param encDictionary COSDictionary containing encryption information
 */","* This will set the encryption dictionary, this should only be called when
     * encrypting the document.
     *
     * @param encDictionary The encryption dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setDocumentID,org.apache.pdfbox.cos.COSDocument:setDocumentID(org.apache.pdfbox.cos.COSArray),374,377,"/**
* Applies mask to COSArray based on ID.
* @param id COSArray containing IDs to apply mask to
*/","* This will set the document ID. This should be an array of two strings. This method cannot be
     * used to remove the document id by passing null or an empty array; it will be recreated. Only
     * the first existing string is used when writing, the second one is always recreated. If you
     * don't want this, you'll have to modify the {@code COSWriter} class, look for {@link COSName#ID}.
     *
     * @param id The document id.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parseNextToken,org.apache.pdfbox.pdfparser.PDFStreamParser:parseNextToken(),97,321,"/**
* Parses and interprets the content stream to extract a JSON-like object.
* @throws IOException if an error occurs during parsing
*/","* This will parse the next token in the stream.
     *
     * @return The next token in the stream or null if there are no more tokens in the stream.
     *
     * @throws IOException If an io error occurs while parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),172,195,"/**
* Initializes a PDDocument with a StreamCacheCreateFunction.
* @param streamCacheCreateFunction function to create stream cache
*/","* Creates an empty PDF document. You need to add at least one page for the document to be valid.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache for buffering PDF streams",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation),778,782,"/**
* Updates document information with provided details.
* @param info PDDocumentInformation object containing updated data
*/","* This will set the document information for this document.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata) PDDocumentCatalog#setMetadata(PDMetadata)}.
     *
     * @param info The updated document information.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument),74,80,"/**
* Initializes the PDDocumentCatalog instance from a given PDDocument.
* @param doc the parent PDDocument object
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setThreads(java.util.List),239,244,"/**
* Sets thread mask in PDF document.
* @param threads list of PDThreads to update
*/","* Sets the list of threads for this pdf document.
     *
     * @param threads The list of threads, or null to clear it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOutputIntents(java.util.List),453,461,"/**
* Adds output intents to the PDF document's metadata.
* @param outputIntents list of PDOutputIntent objects
*/","* Replace the list of OutputIntents of the document.
     *
     * @param outputIntents the list of OutputIntents, if the list is empty all OutputIntents are
     * removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setCropBox,org.apache.pdfbox.pdmodel.PDPage:setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle),460,470,"/**
* Sets or clears the crop box mask.
* @param cropBox rectangle defining the crop area or null to clear","* This will set the CropBox for this page.
     * 
     * @param cropBox The new CropBox for this page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(java.util.List),622,625,"/**
 * Sets PDF content streams in the current page.
 * @param contents list of PDStream objects
 */","* This will set the contents of this page.
     *
     * @param contents Array of new contents of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setThreadBeads,org.apache.pdfbox.pdmodel.PDPage:setThreadBeads(java.util.List),661,664,"/**
* Masks thread beads in the page using the provided list.
* @param beads list of PDThreadBead objects to mask
*/","* This will set the list of thread beads.
     * 
     * @param beads A list of PDThreadBead objects or null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setAnnotations,org.apache.pdfbox.pdmodel.PDPage:setAnnotations(java.util.List),800,803,"/**
* Adds annotation list to PDF page metadata.
* @param annotations list of PDAnnotations to mask
*/","* This will set the list of annotations. Although this is optional, you should take care that
     * any newly created annotations link back to this page by calling
     * {@link PDAnnotation#setPage(org.apache.pdfbox.pdmodel.PDPage)}. Not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>.
     *
     * @param annotations The new list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setViewports,org.apache.pdfbox.pdmodel.PDPage:setViewports(java.util.List),860,868,"/**
* Updates the page's VP mask with the provided viewport dictionaries.
* @param viewports list of PDViewportDictionary objects
*/","* Set the viewports.
     *
     * @param viewports A list of viewports, or null if the entry is to be deleted.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(),54,61,"/**
 * Initializes a new PDPageTree object with an empty dictionary and default values.
 */",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,org.apache.pdfbox.pdmodel.common.COSArrayList:add(java.lang.Object),187,212,"/**
* Processes object o and recursively calls m3 on child objects.
* @param o object to process
* @return true if processing succeeded, false otherwise
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,clear,org.apache.pdfbox.pdmodel.common.COSArrayList:clear(),416,427,"/**
* Calls methods on child objects and performs additional operations.
* @param None 
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,set,"org.apache.pdfbox.pdmodel.common.COSArrayList:set(int,java.lang.Object)",460,485,"/**
* Replaces an element at the specified index with a new one.
* @param index position in the list
* @param element new value to replace
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,"org.apache.pdfbox.pdmodel.common.COSArrayList:add(int,java.lang.Object)",490,515,"/**
* Adds an element to the list at a specified index.
* @param index position in the list
* @param element item to be added (must implement COSObjectable)
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,put,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:put(java.lang.Object,java.lang.Object)",105,112,"/**
* Updates the map with a new key-value pair and delegates to another storage.
* @param key unique identifier
* @param value COSObjectable data
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getCOSObject,org.apache.pdfbox.pdmodel.common.PDPageLabels:getCOSObject(),180,192,"/**
* Returns a dictionary representing the FUNC_MASK.
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(),38,42,"/**
* Initializes PDF complex file specification object.
*/",* Default Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(org.apache.pdfbox.cos.COSDictionary),49,60,"/**
* Initializes PDComplexFileSpecification object from a COS dictionary.
* @param dict COS dictionary containing file specification data or null to create an empty one
*/","* Constructor. Creates empty COSDictionary if dict is null.
     *
     * @param dict The dictionary that fulfils this file specification.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setRangeValues(org.apache.pdfbox.cos.COSArray),196,200,"/**
* Updates range values and notifies associated components.
* @param rangeValues COSArray of updated range values
*/","* This will set the range values.
     *
     * @param rangeValues The new range values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setDomainValues(org.apache.pdfbox.cos.COSArray),239,243,"/**
* Initializes mask with given domain values.
* @param domainValues COSArray of domain values
*/","* This will set the domain values.
     *
     * @param domainValues The new domain values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setEncodeValues(org.apache.pdfbox.cos.COSArray),207,211,"/**
* Updates and encodes COS array values.
* @param encodeValues COS array to process
*/","* This will set the encode values.
     *
     * @param encodeValues The new encode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setDecodeValues(org.apache.pdfbox.cos.COSArray),236,240,"/**
* Initializes mask values from COSArray.
* @param decodeValues COSArray containing mask data
*/","* This will set the decode values.
     *
     * @param decodeValues The new decode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setK(org.apache.pdfbox.cos.COSBase),88,91,"/**
* Applies mask to COSBase object.
* @param k COSBase object to modify
*/","* Sets the K entry.
     * 
     * @param k the K value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setClassMap(java.util.Map),253,273,"/**
* Converts and stores class map data in a PDF document.
* @param classMap map of attribute names to objects
*/","* Sets the ClassMap.
     * 
     * @param classMap null, or a map whose elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:setUserProperties(java.util.List),81,85,"/**
* Applies mask to list of user properties.
* @param userProperties list of PDUserProperty objects
*/","* Sets the user properties.
     * 
     * @param userProperties the user properties",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setLineDashPattern(org.apache.pdfbox.cos.COSArray),185,193,"/**
* Applies a stroke-style pattern to the graphics context.
* @param dashArray line style pattern
*/","* Set the line dash pattern associated with this box style.
     *
     * @param dashArray The patter for this box style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setCryptFilterMethod(org.apache.pdfbox.cos.COSName),96,99,"/**
* Updates filter dictionary with specified mask.
* @param cfm COSName representing the filter mask
*/","* This will set the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @param cfm name of the crypt filter method.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setFilter(java.lang.String),149,152,"/**
* Sets filter mask using provided string value.
* @param filter filter string to apply
*/","* Sets the filter entry of the encryption dictionary.
     *
     * @param filter The filter name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerKey(byte[]),261,264,"/**
* Updates dictionary with masked byte array.
* @param o input byte array to mask
*/","* This will set the O entry in the standard encryption dictionary.
     *
     * @param o A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserKey(byte[]),300,303,"/**
* Updates dictionary with user data from binary array.
* @param u binary user data
*/","* This will set the U entry in the standard encryption dictionary.
     *
     * @param u A 32 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerEncryptionKey(byte[]),339,342,"/**
* Sets the OE mask in the PDF dictionary.
* @param oe byte array representing the OE mask
*/","* This will set the OE entry in the standard encryption dictionary.
     *
     * @param oe A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserEncryptionKey(byte[]),369,372,"/**
 * Updates the U-E mask in the PDF dictionary.
 * @param ue byte array representing the U-E mask
 */","* This will set the UE entry in the standard encryption dictionary.
     *
     * @param ue A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRecipients,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRecipients(byte[][]),429,439,"/**
* Adds a list of recipient masks to the PDF document.
* @param recipients 2D array of byte arrays representing recipient masks
*/","* This will set the Recipients field of the dictionary. This field contains an array
     * of string.
     * @param recipients the array of bytes arrays to put in the Recipients field.
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStreamFilterName(org.apache.pdfbox.cos.COSName),564,567,"/**
 * Sets the mask for the specified stream filter.
 * @param streamFilterName unique identifier of the stream filter
 */","* Sets the name of the filter which is used for de/encrypting streams.
     * 
     * @param streamFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStringFilterName(org.apache.pdfbox.cos.COSName),586,589,"/**
* Sets mask filter for the given COSName.
* @param stringFilterName name of the filter to apply
*/","* Sets the name of the filter which is used for de/encrypting strings.
     * 
     * @param stringFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPerms(byte[]),598,601,"/**
* Sets PDF permissions mask.
* @param perms byte array representing permission flags
*/","* Set the Perms entry in the encryption dictionary.
     *
     * @param perms A 16 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,removeV45filters,org.apache.pdfbox.pdmodel.encryption.PDEncryption:removeV45filters(),624,629,"/**
* Clears mask-related entries from the dictionary.
*/","* remove CF, StmF, and StrF entries. This is to be called if V is not 4 or 5.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(),107,111,"/**
 * Initializes an empty annotation object with default settings.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setColor(java.awt.Color),467,475,"/**
* Sets a color mask annotation with the specified Color object.
* @param c Color to be masked
*/","* Set the annotation color.
     *
     * @param c The annotation color.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRichContents(java.lang.String),876,879,"/**
* Sets function mask with given return code.
* @param rc return code to set in function mask
*/","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setInteriorColor(java.awt.Color),105,113,"/**
* Applies a color mask to the annotation.
* @param color Color object to apply
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setCallout(float[]),144,147,"/**
* Applies mask to float array.
* @param callout input float array
*/","* This will set the coordinates of the callout line.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:setInkList(java.util.List),123,131,"/**
* Initializes and sets the INKLIST annotation with a filtered InkList.
* @param inklist list of Ink arrays to process
*/","* Set the paths making up the freehand ""scribble"".
     * 
     * The ink annotation is made up of one ore more disjoint paths. Each array entry is an array representing a stroked
     * path, being a series of alternating horizontal and vertical coordinates in default user space.
     * 
     * @param inklist the List of arrays representing the paths.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLine(float[]),162,165,"/**
* Sets mask values in annot based on input array.
* @param line input float array
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param line array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setInteriorColor(java.awt.Color),251,259,"/**
* Sets mask annotation for the given color.
* @param color Color object to annotate
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setVertices(float[]),116,119,"/**
* Sets vertex data in the annotation model.
* @param vertices array of float values representing 3D vertices
*/","* This will set the coordinates of the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setInteriorColor(java.awt.Color),137,145,"/**
* Sets annotation mask for the given Color object.
* @param color Color object to set mask for
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the drawn area.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setVertices(float[]),133,136,"/**
* Sets 3D vertex mask array.
* @param vertices float array of vertices
*/","* This will set the coordinates of the the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setInteriorColor(java.awt.Color),220,228,"/**
* Applies a fill mask to the annotation based on the provided color.
* @param color Color object defining the fill color
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setInteriorColor(java.awt.Color),106,114,"/**
* Sets mask annotation on the current object with given color.
* @param color Color object to use for masking
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,setCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:setCoords(float[]),87,90,"/**
* Updates quadpoints in annotation model with 3D coordinates.
* @param coords array of 3D float coordinates
*/","* Set the coordinates of individual words or group of words.
     * 
     * The quadliterals shall encompasses a word or group of contiguous words in the text underlying the annotation. The
     * coordinates for each quadrilateral shall be given in the order x1 y1 x2 y2 x3 y3 x4 y4.
     *
     * @param coords an array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setID(org.apache.pdfbox.cos.COSArray),315,318,"/**
* Masks COSArray as user ID and updates FDF data.","* This will set the FDF id.
     *
     * @param id The new id for the FDF.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFields(java.util.List),346,349,"/**
* Adds field masks to PDF form data.
* @param fields list of FDFField objects to mask
*/","* This will set the list of fields. This should be a list of FDFField objects.
     *
     * @param fields The list of fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setPages(java.util.List),398,401,"/**
* Adds FDF page list to PDF document.
* @param pages collection of FDF pages
*/","* This will set the list of pages. This should be a list of FDFPage objects.
     *
     *
     * @param pages The list of pages.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setAnnotations(java.util.List),459,462,"/**
* Sets annotations in PDF with given list of FDF annotations.
* @param annots list of FDF annotations to set
*/","* This will set the list of annotations. This should be a list of FDFAnnotation objects.
     *
     *
     * @param annots The list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setDifferences(org.apache.pdfbox.cos.COSStream),479,482,"/**
 * Applies mask to COSStream.
 * @param diff input stream containing differences
 */","* This will set the differences stream.
     *
     * @param diff The new differences stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEmbeddedFDFs(java.util.List),534,537,"/**
* Adds a list of PDFileSpecifications as embedded files to the PDF.
* @param embedded list of file specifications
*/","* This will set the list of embedded FDFs. This should be a list of PDFileSpecification objects.
     *
     *
     * @param embedded The list of embedded FDFs.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setKids,org.apache.pdfbox.pdmodel.fdf.FDFField:setKids(java.util.List),197,200,"/**
* Sets field value to an array of FDFFields.
* @param kids list of FDF fields
*/","* This will set the list of kids.
     *
     * @param kids A list of FDFField objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(java.lang.Object),293,313,"/**
* Sets a field mask using the provided value.
* @param value Object representing the mask value
*/","* You should pass a String, or a List&lt;String&gt; to set the value.
     *
     * @param value The value that should populate when imported.
     *
     * @throws IOException If there is an error setting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(org.apache.pdfbox.cos.COSBase),320,323,"/**
* Sets function mask from COSBase value.
* @param value COSBase object containing function mask data
*/","* Sets the COS value of this field.
     *
     * @param value COS value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(java.lang.Integer),348,356,"/**
* Sets FF field with a masked integer value.
* @param ff the integer value to be set
*/","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(java.lang.Integer),392,400,"/**
* Updates FF mask field with specified integer value.
* @param ff the new mask value
*/","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(java.lang.Integer),436,444,"/**
* Sets field value to mask based on input flag.
* @param ff input flag to convert and set
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(java.lang.Integer),480,488,"/**
* Sets mask value in field using provided integer.
* @param f integer value to set as mask
*/","* This will set the widget field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(java.lang.Integer),524,532,"/**
* Applies mask to field with specified flags.
* @param ff Integer representing flag values
*/","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(java.lang.Integer),568,576,"/**
* Sets a mask value for the specified field.
* @param ff Integer value to be set
*/","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSString),765,768,"/**
* Sets masked return value in field.
* @param rv COSString containing masked value
*/","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSStream),775,778,"/**
* Sets mask value from COSStream.
* @param rv COSStream containing mask data
*/","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setBefore(java.lang.String),97,100,"/**
* Sets mask value to dictionary with specified string. 
* @param before input string to be masked
*/","* This will set the javascript code the will get execute before the import.
     *
     * @param before A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setAfter(java.lang.String),129,132,"/**
 * Updates mask value in dictionary with specified string.
 * @param after string to set as mask value
 */","* This will set the javascript code the will get execute after the import.
     *
     * @param after A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setDoc(java.util.Map),172,181,"/**
* Puts key-value pairs from the provided map into a COSArray and adds it to the dictionary.
* @param map collection of JavaScript actions to be masked
*/","* Sets the dictionary's ""Doc"" entry.
     * 
     * @param map Map of named ""JavaScript"" dictionaries.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:setTemplates(java.util.List),91,94,"/**
* Sets template array on page.
* @param templates collection of FDFTemplates to be set
*/","* A list of FDFTemplate objects.
     *
     * @param templates A list of templates for this Page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setFields(java.util.List),112,115,"/**
* Sets field mask using provided FDFFields.
* @param fields list of FDF fields to include in mask
*/","* This will set a list of fields for this template.
     *
     * @param fields The list of fields to set for this template.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(java.util.TreeMap),279,309,"/**
* Calculates and stores font widths for CID-to-GID mapping.
* @param cidToGid mapping of character IDs to glyph IDs
*/",* Builds widths with a custom CIDToGIDMap (for embedding font subset).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalHeader,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary),311,332,"/**
* Adds or updates the DW2 entry in the COSDictionary.
* @param cidFont COS dictionary to modify
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(),72,80,"/**
* Initializes a PDFont object with default settings.
*/",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(),54,58,"/**
* Initializes a font descriptor dictionary. 
* @param none
*/","* Package-private constructor, for embedding.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontName(java.lang.String),295,303,"/**
* Sets or updates the font name in the dictionary.
* @param fontName font name to set (null for removal)
*/","* This will set the font name.
     *
     * @param fontName The new name for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFamily(java.lang.String),320,328,"/**
* Sets font family mask in the PDF dictionary.
* @param fontFamily string value for the font family
*/","* This will set the font family.
     *
     * @param fontFamily The font family.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontStretch(java.lang.String),371,379,"/**
* Sets the font stretch attribute in the document dictionary.
* @param fontStretch string value for font stretch (e.g. 'normal', 'condensed') 
*/","* This will set the font stretch.
     *
     * @param fontStretch The new stretch for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),427,435,"/**
* Sets font bounding box mask for the specified rectangle.
* @param rect PDRectangle object to process
*/","* Set the fonts bounding box.
     *
     * @param rect The new bounding box.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCharacterSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCharacterSet(java.lang.String),711,719,"/**
* Sets character set for mask dictionary.
* @param charSet encoding scheme (e.g. UTF-8)
*/","* This will set the character set for the font.
     *
     * @param charSet The new character set for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:setGamma(float),123,126,"/**
* Sets gamma mask value.
* @param value gamma mask value to set
*/","* Set the gamma value.
     *
     * @param value The new gamma value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),157,165,"/**
* Updates the function mask in the PDF dictionary with the specified gamma value.
* @param gamma PDGamma object containing gamma data or null to clear
*/","* Sets the gamma value.
     * @param gamma the new gamma value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setMatrix(org.apache.pdfbox.util.Matrix),172,191,"/**
* Converts Matrix object to COSArray and stores it in the dictionary.
* @param matrix input Matrix object
*/","* Sets the linear interpretation matrix.
     * Passing in null will clear the matrix.
     * @param matrix the new linear interpretation matrix, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,setColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:setColorants(java.util.Map),127,135,"/**
* Adds colorant information to the PDF document.
* @param colorants Map of color space names to their corresponding PDColorSpace objects
*/","* Sets the colorant map.
     * @param colorants the map of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(),40,44,"/**
* Initializes transparency group attributes with default settings.
*/",* Creates a group object with /Transparency subtype entry.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),194,203,"/**
* Sets the color space mask for PDF rendering.
* @param colorSpace the color space to apply
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setFilters(java.util.List),266,270,"/**
 * Applies filter masks to the document.
 * @param filters list of filter strings
 */","* Sets which filters are applied to this stream.
     *
     * @param filters the filters to apply to this stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setDecode(org.apache.pdfbox.cos.COSArray),272,276,"/**
* Applies mask to COSArray.
* @param decode COSArray to process
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildDecodeParams,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",463,471,"/**
* Creates a COSDictionary for PNG compression.
* @param state PNGConverterState object
* @param colorSpace PDColorSpace object
* @return COSDictionary containing compression parameters
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(),38,41,"/**
* Initializes an empty PDF Optional Content Membership Dictionary.
*/",* Creates a new optional content membership dictionary (OCMD).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setVisibilityPolicy(org.apache.pdfbox.cos.COSName),118,121,"/**
 * Applies mask to visibility policy.
 * @param visibilityPolicy COSName representing new policy
 */","* Sets the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     * 
     * @param visibilityPolicy the visibility policy name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setMatrix(java.awt.geom.AffineTransform),143,153,"/**
* Sets the transformation matrix in a PDF page.
* @param transform AffineTransform object containing matrix data
*/","* Sets the optional Matrix entry for the Pattern.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),232,242,"/**
* Sets or clears the bounding box mask.
* @param bbox rectangle object to set; null to clear
*/","* This will set the BBox (bounding box) for this Pattern.
     * @param bbox The new BBox for this Pattern.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBackground(org.apache.pdfbox.cos.COSArray),142,146,"/**
* Updates the background and dictionary with a new COSArray.
* @param newBackground COSArray containing new background data
*/","* This will set the background.
     *
     * @param newBackground the new background",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),187,198,"/**
* Updates the bounding box and notifies PDF viewer of change.
* @param newBBox new rectangle bounds or null to clear
*/","* This will set the BBox (bounding box) for this Shading.
     *
     * @param newBBox the new BBox",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),254,265,"/**
* Sets the color space for masking.
* @param colorSpace PDColorSpace object or null to reset
*/","* This will set the color space for the shading.
     *
     * @param colorSpace the color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.cos.COSArray),324,329,"/**
* Initializes and updates internal function state from provided COSArray.
* @param newFunctions array of functions to initialize with
*/","* This will set the functions COSArray for the color conversion.
     *
     * @param newFunctions the new COSArray containing all functions",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setMatrix(java.awt.geom.AffineTransform),66,76,"/**
* Applies the provided AffineTransform to generate a PDF matrix.
* @param transform AffineTransform object
*/","* Sets the optional Matrix entry for the function based shading.
     *
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setDomain(org.apache.pdfbox.cos.COSArray),97,101,"/**
* Updates the domain of this object with the provided COS array.
* @param newDomain new domain to be applied
*/","* Sets the optional Domain entry for the function based shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setExtend(org.apache.pdfbox.cos.COSArray),70,74,"/**
* Updates the mask extension and notifies listeners.
* @param newExtend COSArray representing updated mask extensions
*/","* Sets the optional Extend entry for this shading.
     *
     * @param newExtend the extend array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setDomain(org.apache.pdfbox.cos.COSArray),95,99,"/**
* Updates the domain and notifies listeners of the change.
* @param newDomain new COSArray representing the updated domain
*/","* Sets the optional Domain entry for this shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setCoords(org.apache.pdfbox.cos.COSArray),120,124,"/**
* Updates mask coordinates with new values.
* @param newCoords array of updated coordinate values
*/","* Sets the Coords entry for this shading.
     *
     * @param newCoords the coordinates array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Updates the COSArray and invokes m1() with DECODE operation.
* @param decodeValues array to update
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(),46,51,"/**
* Initializes an extended graphics state object with default values.
*/","* Default constructor, creates blank graphics state.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),592,595,"/**
* Sets Blend Mode in dictionary based on input mode.
* @param bm BlendMode to be applied
*/","* Set the blending mode.
     * 
     * @param bm blend mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFloatItem,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",656,666,"/**
* Sets or clears a float value in the dictionary.
* @param key COSName key to update
* @param value Float value to set (null to clear)
*/","* This will set a float object.
     *
     * @param key The key to the data that we are setting.
     * @param value The value that we are setting.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer(org.apache.pdfbox.cos.COSBase),694,697,"/**
* Applies mask operation to COSBase object.
* @param transfer COSBase object to process
*/","* This will set the transfer function of the /TR dictionary.
     *
     * @param transfer The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer2(org.apache.pdfbox.cos.COSBase),727,730,"/**
 * Sets the mask attribute of the dictionary.
 * @param transfer2 COSBase object containing the new value
 */","* This will set the transfer function of the /TR2 dictionary.
     *
     * @param transfer2 The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setNext(java.util.List),156,159,"/**
* Updates the action's NEXT mask with a list of actions.
* @param next List of PDActions to update the mask with
*/","* This will set the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @param next The Next action or sequence of actions.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setT(org.apache.pdfbox.cos.COSBase),69,72,"/**
 * Sets mask action on the given COSBase object. 
 * @param t COSBase object to set mask action on
 */",* @param t annotation or annotations,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setH(boolean),87,90,"/**
 * Sets the action mask based on the given boolean value.
 * @param h true to set, false to clear
 */",* @param h hide flag,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setD(org.apache.pdfbox.cos.COSBase),108,111,"/**
* Sets mask value on the specified COSBase object.
* @param d COSBase object to modify
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFields(org.apache.pdfbox.cos.COSArray),67,70,"/**
* Applies mask to COSArray.
* @param array COSArray to be masked
*/",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSound(org.apache.pdfbox.cos.COSStream),61,64,"/**
* Applies mask to COSStream sound.
* @param sound COSStream object to be masked
*/","* Sets the sound object.
     * 
     * @param sound the sound object defining the sound that shall be played.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFields(org.apache.pdfbox.cos.COSArray),93,96,"/**
* Applies mask to COSArray.
* @param array COSArray to apply mask to
*/",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setD(org.apache.pdfbox.cos.COSBase),71,74,"/**
* Applies mask to COSBase object.
* @param d COSBase object to be masked
*/",* @param d The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setB(org.apache.pdfbox.cos.COSBase),109,112,"/**
* Applies function mask to COSBase instance.
* @param b COSBase object to modify
*/",* @param b The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setRelationship(org.apache.pdfbox.cos.COSName),88,95,"/**
* Validates and sets functional mask for the given relationship.
* @param relationship COSName representing the relationship type (P or C)
*/","* Set the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @param relationship Valid values are P (the target is the parent of the current document) and
     * C (the target is a child of the current document).
     *
     * throws IllegalArgumentException if the parameter is not P or C.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(),173,177,"/**
* Initializes a new PDF annotation object with type 'annotation'. 
*/",* Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),282,285,"/**
* Sets mask coordinates from a PDRectangle object.
* @param rectangle PDRectangle object containing mask bounds
*/","* This will set the rectangle for this annotation.
     * 
     * @param rectangle The new rectangle values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setBorder(org.apache.pdfbox.cos.COSArray),764,767,"/**
* Applies mask to COSArray representing border. 
* @param borderArray array of border elements
*/","* This will set the border array.
     * 
     * @param borderArray the border array to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float,float,float,float)",76,84,"/**
* Sets mask values for left, top, right, and bottom margins.
* @param differenceLeft left margin adjustment
* @param differenceTop top margin adjustment
* @param differenceRight right margin adjustment
* @param differenceBottom bottom margin adjustment
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float,float,float,float)",163,171,"/**
* Sets PDF page margins based on differences from default values.
* @param differenceLeft left margin adjustment
* @param differenceTop top margin adjustment
* @param differenceRight right margin adjustment
* @param differenceBottom bottom margin adjustment
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setCallout(float[]),194,197,"/**
* Applies function mask to float array.
* @param callout input float array
*/","* This will set the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:setInkList(float[][]),65,78,"/**
* Applies mask to user profile by updating Ink List.
* @param inkList 2D array of float paths
*/","* Sets the paths that make this annotation.
     *
     * @param inkList An array of arrays, each representing a stroked path. Each array shall be a
     * series of alternating horizontal and vertical coordinates. If the parameter is null the entry
     * will be removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLine(float[]),135,138,"/**
* Applies mask function to array of floats.
* @param l input float array
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param l array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setQuadPoints(float[]),201,204,"/**
* Sets quad points mask.
* @param quadPoints array of point coordinates
*/","* This will set the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @param quadPoints an array representing the set of area covered.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setRichContents(java.lang.String),156,159,"/**
* Sets mask value from input string.
* @param rc input string containing mask value
*/","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setVertices(float[]),124,127,"/**
* Applies mask operation on input point array.
* @param points array of float values representing points
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setVertices(float[]),170,173,"/**
* Applies mask to 2D points array.
* @param points input point coordinates
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setParent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup),84,87,"/**
* Applies markup mask to annotation.
* @param annot PDAnnotationMarkup object
*/","* This will set the markup annotation which this popup relates to.
     *
     * @param annot the markup annotation.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float,float,float,float)",152,160,"/**
* Sets page margins based on differences from default values.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:setQuadPoints(float[]),59,62,"/**
* Applies quad point mask to specified array.
* @param quadPoints float array of quad points
*/","* This will set the set of quadpoints which encompass the areas of this annotation.
     *
     * @param quadPoints an array representing the set of area covered",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(),36,41,"/**
* Initializes a new PDAppearanceDictionary instance with default settings. 
*/",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setDashStyle(org.apache.pdfbox.cos.COSArray),160,163,"/**
* Applies mask to COSArray. 
* @param dashArray array of coordinates to be masked
*/","* This will set the dash style used for drawing the border.
     *
     * @param dashArray the dash style to use",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(),83,88,"/**
* Initializes a new PDF seed value object with default settings.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilter(org.apache.pdfbox.cos.COSName),264,267,"/**
 * Sets the filter mask in the COS dictionary.
 * @param filter COSName representing the filter to apply
 */","* (Optional) The signature handler that shall be used to sign the signature field.
     *
     * @param filter is the filter that shall be used by the signature handler",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilter(java.util.List),292,296,"/**
* Applies a list of subfilters to the dictionary.
* @param subfilter list of filter names
*/","* (Optional) An array of names indicating encodings to use when signing. The first name
     * in the array that matches an encoding supported by the signature handler shall be the
     * encoding that is actually used for signing.
     *
     * @param subfilter is the name that shall be used for encoding",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethod(java.util.List),323,336,"/**
* Validates and appends allowed digest methods to a dictionary.
* @param digestMethod list of method names to validate
*/","* <p>(Optional, PDF 1.7) An array of names indicating acceptable digest
     * algorithms to use when signing. The value shall be one of <b>SHA1</b>,
     * <b>SHA256</b>, <b>SHA384</b>, <b>SHA512</b>, <b>RIPEMD160</b>. The default
     * value is implementation-specific.</p>
     *
     * <p>This property is only applicable if the digital credential signing contains RSA
     * public/privat keys</p>
     *
     * @param digestMethod is a list of possible names of the digests, that should be
     * used for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasons(java.util.List),390,393,"/**
* Sets mask reason(s) in dictionary.
* @param reasons list of reason strings
*/","* (Optional) An array of text strings that specifying possible reasons for signing
     * a document. If specified, the reasons supplied in this entry replace those used
     * by conforming products.
     *
     * @param reasons is a list of possible text string that specifying possible reasons",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setMPD,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP),427,433,"/**
* Stores MDP value in dictionary with key COSName.MDP.
* @param mdp PDSeedValueMDP object containing the value to store
*/","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @param mdp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp),478,484,"/**
* Stores timestamp value in the dictionary.
* @param timestamp PDSeedValueTimeStamp object containing time data
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @param timestamp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestation(java.util.List),505,509,"/**
* Updates legal attestations in the dictionary with specified values.
* @param legalAttestation list of attestations to update
*/","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @param legalAttestation is a list of possible text string that specifying possible
     * legal attestations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(),71,76,"/**
* Initializes a new PD Seed Value Certificate object.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubject(java.util.List),234,237,"/**
* Masks subject data using provided byte arrays and stores in dictionary.
* @param subjects list of subject data to be masked
*/","* (Optional) A list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing. if
     * <b>Subject</b> is not null and {@link #isSubjectRequired()} is true then the subject
     * constraint is enforced on the subjects in this array subjects.
     *
     * @param subjects list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDN(java.util.List),309,319,"/**
* Converts a list of subject DN maps to a COSDictionary array within the PDF dictionary.
* @param subjectDN list of subject DN name-value pairs
*/","* (Optional; PDF 1.7) A list of maps, where each map contains key value pairs, that specify the
     * Subject Distinguished Name (DN) that must be present within the certificate for it to be
     * acceptable for signing. The certificate must at a minimum contain all the attributes
     * specified in one of the maps entered.
     *
     * @param subjectDN list of maps that contains subject distinguished names",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsage(java.util.List),377,381,"/**
* Updates the KEY_USAGE extension in the dictionary with the specified list of key usages. 
* @param keyUsageExtensions list of key usage extensions to update
*/","* (Optional; PDF 1.7) A List of ASCII strings, where each string specifies an acceptable
     * key-usage extension that must be present in the signing certificate. Multiple strings specify
     * a range of acceptable key-usage extensions; where each string 9 characters long and each
     * character is one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't
     * care. each index in the string represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     *
     * @param keyUsageExtensions list of ASCII strings that consists only of {0, 1, X}",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuer(java.util.List),471,474,"/**
* Updates issuer list in dictionary with provided issuer identities.
* @param issuers list of byte arrays representing issuer identities
*/","* (Optional) A list of array of bytes containing DER-encoded X.509v3 certificates of acceptable
     * issuers. If the signer’s certificate chains up to any of the specified issuers (either
     * directly or indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuers A list of byte array containing DER-encoded X.509v3 certificates",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOID(java.util.List),527,530,"/**
* Updates OID values in the dictionary with the provided byte strings.
* @param oidByteStrings list of OID bytes
*/","* (Optional) A list of byte arrays that contain Object Identifiers (OIDs) of the certificate
     * policies that must be present in the signing certificate. This field is only applicable if
     * the value of Issuer is not empty.
     *
     * @param oidByteStrings list of byte arrays that contain OIDs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(),90,94,"/**
* Initializes PDSignature object with default signature type.
*/",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setType(org.apache.pdfbox.cos.COSName),122,125,"/**
* Sets mask type in dictionary.
* @param type COSName object representing the mask type
*/","* Set the dictionary type.
     *
     * @param type is the dictionary type.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setFilter(org.apache.pdfbox.cos.COSName),132,135,"/**
* Sets filter mask in COSName dictionary.
* @param filter COSName object to set as filter
*/","* Set the filter.
     *
     * @param filter the filter to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSubFilter(org.apache.pdfbox.cos.COSName),142,145,"/**
* Sets the SUB_FILTER attribute in the dictionary.
* @param subfilter COSName representing the filter to set
*/","* Set a subfilter that specify the signature that should be used.
     *
     * @param subfilter the subfilter that shall be used.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setByteRange(int[]),277,291,"/**
* Sets byte range mask in PDF document.
* @param range 4-element array of integers representing the byte range
*/","* Sets the byte range.
     *
     * @param range the byte range to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContents(byte[]),395,399,"/**
* Adds byte content to PDF document.
* @param bytes array of bytes to add
*/","* Sets the contents.
     *
     * @param bytes contents to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectProcSetArray,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",341,352,"/**
* Applies PROC_SET mask to specified resources and pages.
* @param innerForm inner form object
* @param page page object
* @param innerFormResources inner form resource
* @param imageFormResources image form resource
* @param holderFormResources holder form resource
* @param procSet procedure set array
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createWidgetDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",389,399,"/**
* Creates and adds a Widget Dictionary to the PDF structure.
* @param signatureField PDSignatureField object
* @param holderFormResources PDResources for the form
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(java.awt.Color),350,357,"/**
* Sets the mask color for a fill operation.
* @param textColor Color object to convert and apply
*/","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument),85,90,"/**
* Initializes an AcroForm object from a given PDF document.
* @param doc the source PDF document
*/","* Constructor.
     *
     * @param doc The document that this form is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setFields(java.util.List),409,412,"/**
 * Sets field mask using provided list of PDFields.
 * @param fields list of PDF form fields to be masked
 */","* Set the documents root fields.
     *
     * @param fields The fields that are part of the documents root fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCalcOrder(java.util.List),728,731,"/**
* Adds field masks to PDF document.
* @param fields list of PDFields to mask
*/","* Set the calculation order in which field values should be recalculated when the value of any
     * field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @param fields The field list.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),64,68,"/**
* Initializes a PDF button with the given PDAcroForm.
* @param acroForm parent form object
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setExportValues(java.util.List),270,282,"/**
* Applies mask to specified values.
* @param values list of strings to be masked
*/","* This will set the export values.
     * 
     * @see #getExportValues()
     * @param values List containing all possible export values. Supplying null or an empty list will remove the Opt entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),52,56,"/**
* Initializes a PDChoice object with an associated PDAcroForm.
* @param acroForm parent AcroForm object
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setChildren(java.util.List),160,164,"/**
* Sets PDF field children array.
* @param children list of PD fields to be set
*/","* Sets the child fields.
     *
     * @param children The list of child fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(org.apache.pdfbox.cos.COSBase),214,219,"/**
* Sets mask value on specified COS object.
* @param object COS object to set mask on
*/","* Sets the value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param object the new value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setDefaultValue(org.apache.pdfbox.cos.COSBase),258,261,"/**
* Updates the mask with the provided COSBase value.
* @param value COSBase object containing the new mask data
*/","* Sets the default of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param value the default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,54,"/**
* Initializes a PDSignatureField object with the given acroForm.
* @param acroForm parent AcroForm
*/","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroForm for this field.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,48,"/**
* Initializes PDTextField with PDAcroForm.
* @param acroForm parent form of the text field
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultStyleString(java.lang.String),166,176,"/**
* Applies a style mask to the document.
* @param defaultStyleString the style string to apply or null for default
*/","* Set the default style string.
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param defaultStyleString a string describing the default style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setRichTextValue(java.lang.String),238,248,"/**
* Sets mask value for Rich Text field.
* @param richTextValue text to be masked
*/","* Set the fields rich text value.
     * 
     * <p>
     * Setting the rich text value will not generate the appearance
     * for the field.
     * <br>
     * You can set {@link PDAcroForm#setNeedAppearances(Boolean)} to
     * signal a conforming reader to generate the appearance stream.
     * </p>
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param richTextValue a rich text string",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCoordSystemOrigin(float[]),311,314,"/**
* Initializes coordinate system origin with provided values.
* @param coordSystemOrigin array of float values representing origin coordinates
*/","* This will set the origin of the coordinate system.
     * 
     * @param coordSystemOrigin the origin",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(),49,53,"/**
* Initializes a new PDF thread object.
* @param none 
*/","* Default constructor.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection),139,142,"/**
* Applies mask for specified transition direction.
* @param direction PDTransitionDirection enum value
*/","* Sets the direction in which the specified transition effect shall move. Only for {@link PDTransitionStyle#Wipe},
     * {@link PDTransitionStyle#Glitter}, {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover},
     * {@link PDTransitionStyle#Uncover} and {@link PDTransitionStyle#Push}.
     * 
     * @param direction the direction in which the specified transition effect shall move",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDuration(float),155,158,"/**
* Sets animation duration using parametric formula. 
* @param duration animation duration in seconds
*/","* @param duration The duration of the transition effect, in seconds.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyScale(float),173,176,"/**
* Applies scaling factor to mask.
* @param scale floating-point value representing scaling factor
*/","* @param scale The starting or ending scale at which the changes shall be drawn. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyAreaOpaque(boolean),191,194,"/**
* Sets the mask flag of the current 3D object based on opacity.
* @param opaque true if the object is not transparent
*/","* @param opaque If true, the area that shall be flown in is rectangular and opaque. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(java.util.Collection),251,269,"/**
* Processes the given collection, handling filtered lists and recursive dictionary updates.
* @param c Collection to process
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFontColor,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFontColor(java.util.List),186,207,"/**
* Sets non-stroking color based on operand mask.
* @param operands list of color space identifiers
*/","* Process the font color operator.
     * 
     * This is assumed to be an RGB color.
     * 
     * @param operands the color components
     * @throws IOException in case of the color components not matching",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,"org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(int,java.util.Collection)",274,293,"/**
* Inserts element at specified index in the collection.
* @param index position to insert
* @param c Collection of elements to manipulate
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(org.apache.pdfbox.cos.COSArray),188,197,"/**
* Processes COS array of objects, invoking subsequent methods based on result.
* @param objectList list of objects to process
*/","* This will add all objects to this array.
     *
     * @param objectList The list of objects to add.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toFloatArray,org.apache.pdfbox.cos.COSArray:toFloatArray(),639,648,"/**
* Returns an array of float values by processing the COS hierarchy.
* @return Array of floats or null if not processed
*/","* This will take an COSArray of numbers and convert it to a float[].
     *
     * @return This COSArray as an array of float numbers.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberFloatList,org.apache.pdfbox.cos.COSArray:toCOSNumberFloatList(),703,719,"/**
* Extracts a list of float values from the data stream.
* @return List of Float objects or null if invalid
*/","* This will return a list of float values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of float values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberIntegerList,org.apache.pdfbox.cos.COSArray:toCOSNumberIntegerList(),726,742,"/**
* Generates a list of integers from the COSNumber objects in the given range.
* @return List of integers or null values if not applicable
*/","* This will return a list of int values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of int values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateParentEntry,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",1067,1082,"/**
* Updates COSArray with new parent and structure type for each dictionary entry.
* @param kArray COSArray to update
* @param newParent COSDictionary to set as parent
* @param newStructureType COSName of new structure type (optional)
*/","* Update the P reference to the new parent dictionary.
     *
     * @param kArray the kids array
     * @param newParent the new parent
     * @param newStructureType the new structure type in /S or null so it doesn't get replaced",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,hasMCIDs,org.apache.pdfbox.multipdf.Splitter$KCloner:hasMCIDs(org.apache.pdfbox.cos.COSBase),535,553,"/**
* Checks if a COSBase object is an integer or contains integers.
* @param kid COSBase object to check
* @return true if the object is an integer or contains integers, false otherwise
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneTreeElement,"org.apache.pdfbox.multipdf.Splitter:cloneTreeElement(java.util.Map,java.util.Map,int)",300,348,"/**
* Updates destination number tree with data from source tree at specified position.
* @param srcNumberTreeAsMap source tree to copy from
* @param dstNumberTreeAsMap destination tree to update
* @param sp position in the trees to update
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMin,org.apache.pdfbox.pdmodel.common.PDRange:getMin(),96,100,"/**
* Returns the minimum value from the specified array index.
*/","* This will get the minimum value of the range.
     *
     * @return The min value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMax,org.apache.pdfbox.pdmodel.common.PDRange:getMax(),117,121,"/**
* Retrieves and returns the maximum value from the range array. 
*/","* This will get the maximum value of the range.
     *
     * @return The max value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getColourByIndex,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getColourByIndex(int),158,167,"/**
* Retrieves a PDGamma value from the array at the specified index.
* @param index array index
* @return PDGamma object or null if not found
*/","* Gets the colour by edge index.
     * 
     * @param index edge index
     * @return the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getDocumentIDBytes,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getDocumentIDBytes(org.apache.pdfbox.cos.COSArray),299,314,"/**
* Retrieves the unique identifier bytes from a COS array.
* @param documentIDArray input array containing user ID
* @return byte[] representing the user ID or an empty array if invalid
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getOption(),81,84,"/**
* Retrieves and returns a string value from an Option object.","* This will get the string of one of the available options. A required element.
     *
     * @return An available option.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getDefaultAppearanceString(),101,104,"/**
* Retrieves and returns a string value from the 'option' object. 
* @return The retrieved string value or null if not available.","* This will get the string of default appearance string. A required element.
     *
     * @return A default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getInstance,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getInstance(org.apache.pdfbox.cos.COSBase),255,279,"/**
* Resolves the given COSBlendMode to a BlendMode enum value.
* @param cosBlendMode COS object representing the blend mode
* @return corresponding BlendMode enum value or NORMAL if not found","* Determines the blend mode from the BM entry in the COS ExtGState.
     *
     * @param cosBlendMode name or array
     * @return blending mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getColorantNames(),476,479,"/**
* Returns list of colorant names masked by functional group.
* @return List of String values representing colorant masks
*/","* Returns the list of colorants.
     * @return the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getAlternateColorSpace(),531,538,"/**
* Returns the alternate color space.
* @return PDColorSpace object or null if not initialized
*/","* This will get the alternate color space for this separation.
     *
     * @return The alternate color space.
     *
     * @throws IOException If there is an error getting the alternate color
     * space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,checkArray,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:checkArray(org.apache.pdfbox.cos.COSArray),134,144,"/**
* Validates ICC-based colorspace array format.
* @param iccArray COSArray containing color space data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getHival,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getHival(),250,253,"/**
* Retrieves and returns the function mask value from the COSNumber object at index 2 in the array.",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getColorantName(),264,268,"/**
* Returns the function mask as a string.
* @return function mask value
*/","* Returns the colorant name.
     * @return the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,create,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:create(org.apache.pdfbox.cos.COSBase),46,97,"/**
* Creates a PDDestination object from the given COSBase.
* @param base COSBase input
* @return PDDestination object or null if invalid
*/","* This will create a new destination depending on the type of COSBase
     * that is passed in.
     *
     * @param base The base level object.
     *
     * @return A new destination.
     *
     * @throws IOException If the base cannot be converted to a Destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPage(),66,78,"/**
* Creates a PDF page from the first item in the array, if it's a valid page.
* @return PDPage object or null if not valid
*/","* This will get the page for this destination. A page destination can either reference a page
     * (for a local destination) or a page number (when doing a remote destination to another PDF).
     * If this object is referencing by page number then this method will return null and
     * {@link #getPageNumber()} should be used.
     *
     * @return The page for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPageNumber(),98,110,"/**
* Returns a function mask value based on the given array.
* @return int function mask value or -1 if not found
*/","* This will get the page number for this destination. A page destination can either reference a
     * page (for a local destination) or a page number (when doing a remote destination to another
     * PDF). If this object is referencing by page number then this method will return that number,
     * otherwise -1 will be returned.
     *
     * @return The zero-based page number for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getZoom(),122,130,"/**
* Returns a float value from the 5th element of the array, or -1 if not a number.","* Get the zoom value.  Return values of 0 or -1 imply that the current zoom
     * will be used.
     *
     * @return The zoom value for the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(org.apache.pdfbox.cos.COSArray),67,77,"/**
* Initializes a new Matrix object from the given COSArray.
* Extracts and stores relevant values into the matrix's single array.","* Creates a matrix from a 6-element (a b c d e f) COS array.
     *
     * @param array source array, elements must be or extend COSNumber",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(java.lang.String),144,147,"/**
* Invokes M2 method with COSName.m1() result as input.
* @param key input string
*/","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,"org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",160,168,"/**
* Tries to fetch a COSBase object by the given first or second key. 
* If the first key is not found, attempts to use the second key instead.
* @param firstKey primary key to search for
* @param secondKey secondary key to search for if primary fails
* @return COSBase object or null if neither key is found
*/","* This is a special case of getDictionaryObject that takes multiple keys, it will handle the situation where
     * multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will
     * get an object from this dictionary. If the object is a reference then it will dereference it and get it from the
     * document. If the object is COSNull then null will be returned.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName),518,526,"/**
* Retrieves and returns a COSName object associated with the given key.
* @param key COSName to retrieve
* @return COSName object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name. Null is returned
     * if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName),552,560,"/**
* Retrieves a COSDictionary instance by name, or returns null if not found. 
* @param key unique COSName identifier
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSDictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSStream,org.apache.pdfbox.cos.COSDictionary:getCOSStream(org.apache.pdfbox.cos.COSName),587,595,"/**
* Retrieves a COS stream associated with the given key.
* @param key unique identifier for the COS stream
* @return COSStream object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSStream. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSStream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSArray,org.apache.pdfbox.cos.COSDictionary:getCOSArray(org.apache.pdfbox.cos.COSName),604,612,"/**
* Returns a COSArray instance associated with the given key, or null if not found.
* @param key unique identifier for the array
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSArray. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSArray.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,"org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",622,630,"/**
* Returns a COSName instance from the given key or default value.
* @param key COSName to fetch, or null for default
* @param defaultValue default value to return if key is invalid
* @return COSName instance or defaultValue if key is invalid
*/","* This is a convenience method that will get the dictionary object that is expected to be a name. Default is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName),651,664,"/**
* Retrieves a string mask value from the COSName or COSString object.
* @param key COSName to retrieve mask value from
* @return String mask value or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName),716,725,"/**
* Retrieves string representation from COSName object.
* @param key COSName to extract value from
* @return String representation or null if not applicable
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName),805,813,"/**
* Converts a COSName to a date mask.
* @param key COSName to convert
* @return Calendar object or null if conversion fails
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName,long)",1078,1087,"/**
* Retrieves a mask value for the given COSName key, 
* returning the default value if not found or not numeric.
* @param key COSName to fetch mask from
* @param defaultValue default value to return if not found
* @return long mask value or default value
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName,float)",1134,1143,"/**
* Retrieves a float value from a COSName key, or returns the default value.
* @param key unique identifier for the COSName
* @param defaultValue fallback value if not found
* @return float value associated with the key, or defaultValue if missing","* This is a convenience method that will get the dictionary object that is expected to be an float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,wrapInSaveRestore,org.apache.pdfbox.multipdf.LayerUtility:wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage),89,130,"/**
* Saves and restores graphics state for a PDF page.
* @param page PDPage object to process
*/","* Some applications may not wrap their page content in a save/restore (q/Q) pair which can
     * lead to problems with coordinate system transformations when content is appended. This
     * method lets you add a q/Q pair around the existing page's content.
     * @param page the page
     * @throws IOException if an I/O error occurs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.contentstream.operator.Operator),131,158,"/**
* Emits inline image operator and its content.
* @param op Operator object containing image data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentStreams,org.apache.pdfbox.pdmodel.PDPage:getContentStreams(),194,212,"/**
* Retrieves a collection of PDF streams from the page contents.
* @return Iterator of PDStream objects
*/","* Returns the content streams which make up this page.
     * 
     * @return content stream iterator",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,hasContents,org.apache.pdfbox.pdmodel.PDPage:hasContents(),309,321,"/**
* Checks for the presence of a stream or array in document contents.
*/","* Returns true if this page has one or more content streams.
     * 
     * @return true if the page has a non empty content stream, otherwise false",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convertBasicTypesToMap,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary),230,270,"/**
* Converts input dictionary to a COSDictionaryMap.
* @param map input dictionary
* @return COSDictionaryMap or null if map is null
*/","* This will take a COS dictionary and convert it into COSDictionaryMap.  All cos
     * objects will be converted to their primitive form.
     *
     * @param map The COS mappings.
     * @return A standard java map.
     * @throws IOException If there is an error during the conversion.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),263,289,"/**
* Updates and clears MASK attribute in the given PDAttributeObject.
* @param attributeObject PDAttributeObject to update
*/","* Removes an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getClassNames(),328,361,"/**
* Extracts and returns a collection of unique class names from the specified key.
* @return Revisions collection of class names
*/","* Returns the class names together with their revision numbers (C).
     * 
     * @return the class names as a list, never null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeClassName(java.lang.String),433,463,"/**
* Masks or unsets a class attribute by name.
* @param className the name of the attribute to mask
*/","* Removes a class name.
     * 
     * @param className the class name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.cos.COSBase),176,200,"/**
* Updates or creates the 'K' key in the document object.
* @param object COSBase object to update
*/","* Appends a COS base kid.
     * 
     * @param object the COS base",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",234,270,"/**
* Updates the mask for a given user by replacing or adding a new kid.
* @param newKid new COSBase object to replace or add
* @param refKid reference COSBase object to compare with
*/","* Inserts an COS base kid before a reference kid.
     * 
     * @param newKid the COS base
     * @param refKid the reference kid",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.cos.COSBase),309,349,"/**
* Checks if an object should be masked based on its parent-child relationship.
* @param object COSBase object to evaluate
*/","* Removes a COS base kid.
     * 
     * @param object the COS base
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getK(),78,81,"/**
* Returns the mask value of the current COSBase object.
* @return COSBase object representing the mask
*/","* Returns the K entry. This can be a dictionary representing a structure element, or an array
     * of them. To get it as a list of PDStructureElement objects, use {@link #getKids()} instead.
     *
     * @return the K entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getValue(),84,87,"/**
* Returns a COSBase instance based on specific mask values.
* @return COSBase object
*/","* Returns the property value.
     * 
     * @return the property value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:isEncryptMetaData(),117,127,"/**
* Returns a flag indicating whether to mask or not.
* @return boolean flag, defaulting to 'true' if metadata encryption is disabled
*/","* Will get the EncryptMetaData dictionary info.
     *
     * @return true if EncryptMetaData is explicitly set (the default is true)",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerEncryptionKey(),351,360,"/**
* Returns the Owner Encryption key as a byte array.
* @return byte[] Owner Encryption key or null if not present
*/","* This will get the OE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserEncryptionKey(),381,390,"/**
* Retrieves the user encryption key as a binary array.
* @return byte[] user encryption key or null if not set
*/","* This will get the UE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPerms(),610,619,"/**
* Retrieves the permissions string from the PDF document.
* @return byte array containing the permissions or null if not found
*/","* Get the Perms entry in the encryption dictionary.
     *
     * @return A 16 byte array or null if there is no Perms entry.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getPage(),421,430,"/**
* Retrieves the mask value from the annotation.
* @return The mask value as an Integer, or null if not found.","* This will get the page number or null if it does not exist.
     *
     * @return The page number.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getCOSValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getCOSValue(),269,284,"/**
* Retrieves the base object associated with a function mask.
* @return COSBase object or null if invalid
*/","* Returns the COS value of this field.
     *
     * @return The COS value of the field, maybe <code>null</code>.
     * @throws IOException If there is an error getting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getFieldFlags(),331,340,"/**
* Retrieves the FF mask value from the field.
* @return Integer representation of the FF mask or null if not found
*/","* This will get the 'Ff' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetFieldFlags(),375,384,"/**
* Retrieves the FF mask value from the SET_FF field.
* @return Integer representation of the mask or null if not set
*/","* This will get the 'SetFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearFieldFlags(),419,428,"/**
* Retrieves the FF mask value from the CLR_FF field.
* @return Integer representation of the FF mask or null if not found
*/","* This will get the 'ClrFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getWidgetFieldFlags(),463,472,"/**
* Retrieves the functional mask value.
* @return Integer representing the functional mask or null if not found
*/","* This will get the 'F' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetWidgetFieldFlags(),507,516,"/**
* Returns the function mask value.
* @return Function mask as an Integer, or null if not found
*/","* This will get the 'SetF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearWidgetFieldFlags(),551,560,"/**
* Retrieves the mask value from the CLR_F field.
* @return Integer mask value or null if not found
*/","* This will get the 'ClrF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultWidth(),245,260,"/**
* Calculates the default width for mask functionality.
* @return The default width value
*/","* This will get the default width. The default value for the default width is 1000.
     *
     * @return The default width for the glyphs in this font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getColorSpace(),76,84,"/**
* Retrieves the color space for the PDF document.
* @return PDColorSpace object or null if not found
*/","* Returns the process color space
     * @return the process color space
     * @throws IOException if the color space cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(org.apache.pdfbox.pdmodel.PDResources),79,86,"/**
* Retrieves the color space for a given PDF resource.
* @param resources PDF document resources
* @return PDColorSpace object or null if not found
*/","* Returns the group color space or null if it isn't defined.
     *
     * @param resources useful for its cache. Can be null.
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(org.apache.pdfbox.cos.COSDictionary),43,51,"/**
* Constructs an Optional Content Group from a PDF dictionary.
* @param dict COSDictionary containing OCG-specific data
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),47,55,"/**
* Initializes an OCMD membership dictionary from a COSDictionary.
* @param dict COSDictionary object to initialize with
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getOverprintMode(),403,413,"/**
* Retrieves the function mask value from the dictionary.
* @return The function mask integer or null if not found
*/","* This will get the overprint control mode.
     *
     * @return The overprint control mode or null if one has not been set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSoftMask(),602,606,"/**
* Returns a PDSoftMask object from the dictionary.
* @return PDSoftMask object or null if not found
*/","* Returns the soft mask stored in the COS dictionary
     *
     * @return the soft mask or null if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFloatItem,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFloatItem(org.apache.pdfbox.cos.COSName),637,648,"/**
* Retrieves the numeric value associated with a given key from the dictionary.
* @param key unique identifier in the dictionary
* @return Float value or null if not found
*/","* This will get a float item from the dictionary.
     *
     * @param key The key to the item.
     *
     * @return The value for that item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer(),676,684,"/**
* Returns the mask dictionary for function arguments.
* @return COSBase object representing the mask or null on error
*/","* This will get the transfer function of the /TR dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer2(),708,716,"/**
* Retrieves the mask array from the dictionary, checking for correct size.
* @return COSBase object representing the mask or null on failure
*/","* This will get the transfer function of the /TR2 dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getBackdropColor,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getBackdropColor(),172,179,"/**
* Returns the mask array for the backdrop color.
*/","* Returns the backdrop color.
     * 
     * @return the backdrop color",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getOpenInNewWindow(),129,137,"/**
* Returns the open mode based on user preference or new window flag.
* @return OpenMode enum value
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getT(),60,64,"/**
* Returns a mask of functional elements based on current action. 
* @return COSBase object representing functional mask 
*/","* The annotation or annotations to be hidden or shown
     *
     * @return The T entry of the specific thread action dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getOpenInNewWindow(),212,220,"/**
* Returns the open mode based on user preference or new window setting.
* @return OpenMode value: NEW_WINDOW, SAME_WINDOW, or USER_PREFERENCE
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getD(),92,95,"/**
* Returns a COSBase instance based on a specific mask.
* @return COSBase object representing the masked value
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getOpenInNewWindow(),119,127,"/**
* Returns the open mode based on user preference or window type.
* @return OpenMode enum value
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getD(),63,66,"/**
* Returns the mask value based on the current action.",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getB(),101,104,"/**
* Returns a COSBase instance based on a specific mask.
* @return COSBase object representing the result of the m1 operation with COSName.B
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getNamedDestination(),178,186,"/**
* Retrieves a named destination from the PDF dictionary.
* @return PDNamedDestination object or null if not found
*/","* If the value in the /P entry is a string, this will get a named destination in the current
     * document that provides the page number of the file attachment annotation.
     *
     * @return a named destination or null if the /P entry value is missing or not a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),184,196,"/**
* Initializes a PDAnnotation object from a COSDictionary.
* @param dict COS dictionary containing annotation data
*/","* Constructor.
     * 
     * @param dict The annotations dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(),319,327,"/**
* Returns function mask as a byte array.
* @return byte array representation of function mask or empty array if not found
*/","* Returns the /Contents string as a byte array, i.e. the embedded signature between the
     * byterange gap.
     *
     * @return a byte array containing the signature, or an empty array if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getXFA(),584,588,"/**
* Retrieves XFA resource from document dictionary.
* @return PDXFAResource object or null if not found
*/","* Get the XFA resource, the XFA resource is only used for PDF 1.5+ forms.
     *
     * @return The xfa resource or null if it does not exist.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptions(),87,91,"/**
* Retrieves a list of field masks.
* @return List of field identifiers as strings
*/","* This will get the option values ""Opt"".
     * 
     * <p>
     * For a choice field the options array can either be an array
     * of text strings or an array of a two-element arrays.<br>
     * The method always only returns either the text strings or,
     * in case of two-element arrays, an array of the first element of 
     * the two-element arrays
     * </p>   
     * <p>
     * Use {@link #getOptionsExportValues()} and {@link #getOptionsDisplayValues()}
     * to get the entries of two-element arrays.
     * </p>
     * 
     * @return List containing the export values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsDisplayValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsDisplayValues(),191,195,"/**
* Retrieves a list of mask values from the specified option.
* @return list of mask strings
*/","* This will get the display values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the display value is the 
     * second entry in the two-element array.
     * </p>
     * 
     * @return List containing all the display values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueFor,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueFor(org.apache.pdfbox.cos.COSName),451,463,"/**
* Extracts a list of string values from the given COSName.
* @param name COSName object to process
* @return List of strings or empty list if not found
*/","* Returns the selected values, or an empty List, for the given key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getInheritableAttribute,org.apache.pdfbox.pdmodel.interactive.form.PDField:getInheritableAttribute(org.apache.pdfbox.cos.COSName),88,102,"/**
* Retrieves COSBase object associated with the given key from the current or parent dictionary.
* @param key COSName identifier
* @return COSBase object or null if not found
*/","* Returns the given attribute, inheriting from parent nodes if necessary.
     *
     * @param key the key to look up
     * @return COS value for the given key",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValue(),187,190,"/**
* Returns a COSBase instance based on a specific mask value.
* @return COSBase object representing a masked value
*/","* Returns the COSBase value of the ""V"" entry.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the COSBase value of the ""V"" entry",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValueAsString(),198,203,"/**
* Retrieves and returns the function mask value.
* @return Function mask string or empty string if not found.","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getDefaultValue(),244,247,"/**
* Returns a COSBase instance with specific mask applied.
*/","* Returns the default value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the new default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,toString,org.apache.pdfbox.cos.COSDictionary:toString(),1343,1355,"/**
* Returns a string representation of the function mask.
* @return COSDictionary object as a string or an error message if IO occurs
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSArray:getIndirectObjectKeys(java.util.Collection),807,859,"/**
* Recursively processes a collection of indirect objects, removing any that conflict with the primary object. 
* @param indirectObjects Collection of COSObjectKeys to process
*/","* Collects all indirect objects numbers within this COSArray and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setHighestImportedObjectNumber,org.apache.pdfbox.pdmodel.PDDocument:setHighestImportedObjectNumber(org.apache.pdfbox.pdmodel.PDPage),723,731,"/**
* Updates the imported page's indirect object keys and masks.
* @param importedPage PDPage object being updated
*/","* Determine the highest object number from the imported page to avoid mixed up numbers when saving the new pdf.
     * 
     * @param importedPage the imported page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,close,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:close(),156,173,"/**
* Calls m1() on dependent objects and ensures cleanup of resources.
*/","* Closes the visual signature COSDocument, if any. Do not call this before you're saved your
     * signed PDF document, or saving will fail because COSStream objects held both by the
     * COSDocument and by the signed document would no longer be available.
     *
     * @throws IOException if the document could not be closed",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSArray,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSArray(org.apache.pdfbox.cos.COSArray),126,142,"/**
* Filters an array of COSBase objects and returns a new array with filtered values.
* @param array input array to filter
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSDictionary(org.apache.pdfbox.cos.COSDictionary),168,185,"/**
* Creates a filtered COSDictionary by cloning and modifying existing entries.
* @param dictionary the input dictionary to filter
* @return the filtered COSDictionary or null if invalid
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,"org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",583,605,"/**
* Generates a mask for the specified COS object.
* @param key COSObjectKey to use in masking
* @param obj COSBase object to be masked
*/","* This will write a COS object for a predefined key.
     *
     * @param key The key of the object to write.
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeReference,org.apache.pdfbox.pdfwriter.COSWriter:writeReference(org.apache.pdfbox.cos.COSBase),1381,1389,"/**
* Masks COS object with FUNC.
* @param obj COSBase object to mask
*/","* visitFromObjRef method comment.
     *
     * @param obj The object that is being visited.
     *
     * @throws IOException If there is an exception while visiting this object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getKey(org.apache.pdfbox.cos.COSBase),267,270,"/**
* Retrieves a key from the object pool.
* @param object input object to retrieve key for
*/","* Returns the {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} is registered for in this compression pool.
     * @return The {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool, if
     * such an object is contained.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,put,"org.apache.pdfbox.pdfwriter.compress.COSObjectPool:put(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",59,83,"/**
* Generates or updates a COSObjectKey based on the provided COSBase object.
* @param key existing COSObjectKey to reuse or null
* @return new COSObjectKey instance if generated or updated
*/","* Update the key and object maps.
     *
     * @param key The key, that shall be added.
     * @param object The object, that shall be added.
     * @return The actual key, the object has been added for.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:contains(org.apache.pdfbox.cos.COSBase),255,258,"/**
* Delegates object pool operation to object pool manager.
* @param object COSBase object to be operated on
*/","* Returns true, if the given {@link COSBase} is a registered object of this compression pool.
     *
     * @param object The object, that shall be checked.
     * @return True, if the given {@link COSBase} is a registered object of this compression pool.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,createObjectStreams,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:createObjectStreams(),302,317,"/**
* Creates and populates a list of COSWriterObjectStream objects.
* @return List of object streams
*/","* Creates {@link COSWriterObjectStream}s for all currently registered objects of this pool, that have been marked
     * as fit for being compressed in this manner. Such object streams may be added to a PDF document and shall be
     * declared in a document's {@link PDFXRefStream} accordingly. The objects contained in such a stream must not be
     * added to the document separately.
     *
     * @return The created {@link COSWriterObjectStream}s for all currently registered compressible objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,readFromDecoderStream,"org.apache.pdfbox.filter.CCITTFaxFilter:readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",126,139,"/**
* Reads and decodes CCITT Fax data into the provided byte array.
* @param decoderStream CCITTFaxDecoderStream instance
* @param result output buffer to store decoded data
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,processLines,"org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:processLines(java.util.List,boolean)",201,259,"/**
* Calculates and draws line layout with specified text alignment.
* @param lines list of text lines to be drawn
* @param isFirstParagraph true if this is the first paragraph, false otherwise
*/","* Process lines for output. 
     *
     * Process lines for an individual paragraph and generate the 
     * commands for the content stream to show the text.
     * 
     * @param lines the lines to process.
     * @throws IOException if there is an error writing to the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addFirstIntermediateCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addFirstIntermediateCurl(double,double,double,double,double)",444,453,"/**
* Calculates and updates mask positions based on current angle.
* @param angleCur current rotation angle
* @param r radius of the circle
* @param alpha offset angle
* @param cx center x coordinate
* @param cy center y coordinate
*/",* Generates the first intermediate curl for a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getIntermediateCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getIntermediateCurlTemplate(double,double)",458,470,"/**
* Calculates and returns an array of points that define a FUNC_MASK shape.
* @param angleCur the current angle
* @param r the radius
* @return Point2D.Double[] array of points or null if error occurs
*/",* Returns a template for intermediate curls in a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArc,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",592,631,"/**
* Generates a Bezier curve with specified parameters.
* @param startAng initial angle
* @param endAng final angle
* @param rx x-axis scaling factor
* @param ry y-axis scaling factor
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param out list of points on the curve
* @param addMoveTo whether to add a ""move to"" command at the start
*/","* Creates one or more Bézier curves that represent an elliptical arc.
     * Angles are in radians.
     * The arc will always proceed in the positive angle direction.
     * If the argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.pdmodel.PDDocument),75,81,"/**
* Initializes ICCBased object from PDDocument.
* @param doc the input PDF document
*/","* Creates a new ICC color space with an empty stream.
     * @param doc the document to store the ICC data",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",59,66,"/**
* Initializes a PDPattern object with given resources and color space.
* @param resources PDResources instance
* @param colorSpace PDColorSpace instance
*/","* Creates a new uncolored tiling pattern color space.
     * 
     * @param resources The current resources.
     * @param colorSpace The underlying color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setOCGs(java.util.List),93,101,"/**
* Adds OCGS arrays to the dictionary.
* @param ocgs list of PDPropertyLists
*/","* Set optional content groups as a list.
     * 
     * @param ocgs list of optional content groups to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),100,108,"/**
* Applies a list of number format dictionaries to the mask.
* @param changeXs Array of PDNumberFormatDictionary objects
*/","* This will set the changes along the x-axis.
     * 
     * @param changeXs changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),137,145,"/**
* Updates the Y mask in the PDF dictionary.
* @param changeYs array of PDNumberFormatDictionary updates
*/","* This will set the changes along the y-axis.
     * 
     * @param changeYs changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),174,182,"/**
* Applies mask to an array of number format dictionaries.
* @param distances array of PDNumberFormatDictionary objects
*/","* This will set the distances.
     * 
     * @param distances distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),211,219,"/**
* Applies mask to each PDF number format dictionary in the given array.
*/","* This will set the areas.
     * 
     * @param areas areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),248,256,"/**
* Processes an array of PDNumberFormatDictionary objects and updates the PDF document's ""T"" entry. 
* @param angles array of number format dictionaries to process
*/","* This will set the angles.
     * 
     * @param angles angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),285,293,"/**
* Adds a list of PDNumberFormatDictionaries to the parent element.
* @param lineSloaps collection of dictionaries to add
*/","* This will set the sloaps of a line.
     * 
     * @param lineSloaps the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,org.apache.pdfbox.cos.COSArray:growToSize(int),598,601,"/**
 * Calls overloaded version with default parameter.
 * @param size array size
 */","* This will add null values until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseDirObject,org.apache.pdfbox.pdfparser.BaseParser:parseDirObject(),948,1016,"/**
* Parses a directory entry character and returns the corresponding COSBase object.
* @return COSBase object or null if unknown or invalid
*/","* This will parse a directory object from the stream.
     *
     * @return The parsed object.
     *
     * @throws IOException If there is an error during parsing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:setDecodeParms(java.util.List),324,328,"/**
* Applies mask to decoded parameters.
* @param decodeParams list of decoded parameter values
*/","* This will set the list of decode parameters.
     * 
     * @param decodeParams The list of decode parameters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:setFileDecodeParams(java.util.List),389,392,"/**
* Sets mask for decoding parameters.
* @param decodeParams list of parameters to be decoded
*/","* This will set the list of decode params.
     * 
     * @param decodeParams The list of decode params.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,setKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:setKids(java.util.List),140,144,"/**
* Applies mask to kid objects in the provided list.
* @param kids collection of kid objects to mask
*/","* Sets the kids (K).
     * 
     * @param kids the kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:setOptions(java.util.List),691,695,"/**
* Sets an array of option values in the PDF document.
* @param options list of option objects
*/","* This will set the options for the choice field.
     * The objects in the list should either be <code>String</code> or {@link FDFOptionElement}.
     *
     * @param options The options to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getRangeForComponent,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getRangeForComponent(int),441,449,"/**
* Creates a PDRange object based on the given integer.
* @param n input value used to determine the PDRange instance
*/","* Returns the range for a certain component number.
     * This will never return null.
     * If it is not present then the range 0..1 will be returned.
     * @param n the component number to get the range for
     * @return the range for this component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(org.apache.pdfbox.cos.COSDictionary),398,410,"/**
* Computes and sets the CID font mask.
* @param cidFont COS dictionary for the CID font
*/",* Build widths with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),324,327,"/**
* Sets the line dash pattern mask.
* @param dashPattern line dash pattern to be applied
*/","* This will set the dash pattern for the graphics state.
     *
     * @param dashPattern The dash pattern",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuideLineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),106,114,"/**
* Sets the mask value in the PDF document.
* @param color PDColor object containing the mask data
*/","* Set the color space instance for this box style.  This must be a
     * PDDeviceRGB!
     *
     * @param color The new colorspace value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),778,781,"/**
* Applies color mask to PDF graphics state.
* @param c PDColor object containing color values
*/","* This will set the color used in drawing various elements. As of PDF 1.6 these are : Background of icon when
     * closed Title bar of popup window Border of a link annotation
     * 
     * Colour is in DeviceRGB colourspace
     * 
     * @param c colour in the DeviceRGB colourspace
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),230,233,"/**
* Sets mask color based on input PDColor object.
* @param ic input color to apply as mask
*/","* This will set interior color of the line endings defined in the LE entry. color is in DeviceRGB color space.
     *
     * @param ic color in the DeviceRGB color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),66,69,"/**
* Applies mask to color using internal function.
* @param ic input color object
*/","* This will set interior color.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),136,139,"/**
* Applies color mask to PDColor object.
* @param ic input color data
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),63,66,"/**
* Applies mask to color.
* @param ic input color to be masked
*/","* This will set interior color of the drawn area color is in DeviceRGB colorspace.
     *
     * @param ic color in the DeviceRGB color space.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor),96,99,"/**
* Applies mask to color.
* @param c color object
*/","* This will set the border color.
     * 
     * @param c the border color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor),116,119,"/**
* Sets color mask for background using provided PDColor object.
* @param c PDColor object containing color data
*/","* This will set the background color.
     * 
     * @param c the background color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),340,343,"/**
* Applies mask to PDColor object.
* @param textColor color data
*/","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage(java.awt.image.WritableRaster),146,197,"/**
* Converts raster to alternate color space.
* @param raster input WritableRaster
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isGray,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1964,1983,"/**
* Checks if the provided color space is a gray scale or has a gray scale mask.
* @param colorSpace color space to check
* @return true if gray scale, false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",80,84,"/**
* Creates an image object from the given input stream.
* @param document PDDocument instance
* @param stream InputStream containing image data
* @return PDImageXObject instance or null on failure
*/","* Creates a new JPEG Image XObject from an input stream containing JPEG data.
     * 
     * The input stream data will be preserved and embedded in the PDF file without modification.
     * @param document the document where the image will be created
     * @param stream a stream of JPEG data
     * @return a new Image XObject
     * 
     * @throws IOException if the input stream cannot be read",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFont(org.apache.pdfbox.pdmodel.font.PDFont),94,97,"/**
 * Applies default mask settings to the specified PDFont.
 * @param font target font object
 */","* This will set the font for this font setting.
     *
     * @param font The new font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),577,581,"/**
* Applies function mask transformation to the PDFunction object.
* @param tint input PDFunction object
*/","* This will set the tint transform function.
     *
     * @param tint The tint transform function.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),298,302,"/**
* Sets and stores function mask transformation.
* @param tint function to be masked
*/","* Sets the tint transform function.
     * @param tint the tint transform function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPage(org.apache.pdfbox.pdmodel.PDPage),85,88,"/**
 * Applies mask to PDPage object.
 * @param page the PDPage instance to modify
 */","* Set the page for a local destination. For an external destination, call {@link #setPageNumber(int) setPageNumber(int pageNumber)}.
     *
     * @param page The page for a local destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,adjustRectAndBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,float,float)",166,192,"/**
* Computes and returns the bounding box of a text annotation.
* @param annotation Text annotation object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,createRetranslatedRectangle,org.apache.pdfbox.pdmodel.common.PDRectangle:createRetranslatedRectangle(),192,198,"/**
* Creates a rectangle from mask functions m1 and m3.
* @return PDRectangle object representing the result
*/","* This will create a translated rectangle based off of this rectangle, such
     * that the new rectangle retains the same dimensions(height/width), but the
     * lower left x,y values are zero. <br>
     * 100, 100, 400, 400 (llx, lly, urx, ury ) <br>
     * will be translated to 0,0,300,300
     *
     * @return A new rectangle that has been translated back to the origin.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureRectangle,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",149,163,"/**
* Creates and applies a mask for the given signature field.
* @param signatureField PDSignatureField to apply mask to
* @param properties PDVisibleSignDesigner with design parameters
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createFormatterRectangle,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createFormatterRectangle(int[]),192,203,"/**
* Creates a PDRectangle based on input parameters.
* @param params array of 4 integers for width, left, height, and top positions
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),76,79,"/**
* Applies mask to PDGamma color.
* @param colour input color object
*/","* Sets the colour for the before edge.
     * 
     * @param colour the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),96,99,"/**
* Applies mask to PDGamma object.
* @param colour PDGamma object to be modified
*/","* Sets the colour for the after edge.
     * 
     * @param colour the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),116,119,"/**
* Applies mask to specified PDGamma colour.
* @param colour PDGamma object to be masked
*/","* Sets the colour for the start edge.
     * 
     * @param colour the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),136,139,"/**
* Applies a gamma mask to the specified color.
* @param colour PDGamma object representing the color
*/","* Sets the colour for the end edge.
     * 
     * @param colour the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decrypt,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decrypt(org.apache.pdfbox.cos.COSBase,long,long)",455,487,"/**
* Decrypts or processes a COSBase object based on its type.
* @param obj the COSBase object to process
* @param objNum and genNum are parameters for decryption/processing
*/","* This will dispatch to the correct method.
     *
     * @param obj The object to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation Number.
     * 
     * @return the encrypted/decrypted COS object
     *
     * @throws IOException If there is an error getting the stream data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",243,246,"/**
* Wraps primitive key in COSName object and delegates to m2.
* @param key string key
* @param value wrapped COSObjectable value
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),153,157,"/**
* Clears and resets the cached AcroForm object.
* @param acroForm PDAcroForm instance to reset
*/","* Sets the AcroForm for this catalog.
     *
     * @param acroForm The new AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences),186,189,"/**
 * Configures viewer preferences with a mask. 
 * @param prefs PDViewerPreferences instance to update
 */","* Sets the viewer preferences.
     *
     * @param prefs The new viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline),207,210,"/**
* Sets the document outline.
* @param outlines PDDocumentOutline object to set
*/","* Sets the document outlines.
     *
     * @param outlines The new document outlines.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),263,266,"/**
* Sets metadata from PDMetadata object.
* @param meta PDMetadata object to set
*/","* Sets the metadata for this object. This can be null.
     *
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction),273,276,"/**
 * Adds an open action to the PDF destination.
 * @param action PDDestinationOrAction object
 */","* Sets the Document Open Action for this object.
     *
     * @param action The action you want to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions),319,322,"/**
* Applies mask to document catalog.
* @param actions PDDocumentCatalogAdditionalActions object
*/","* Sets the additional actions for the document.
     *
     * @param actions The actions that are associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary),379,382,"/**
* Sets document name dictionary.
* @param names PDDocumentNameDictionary object
*/","* Sets the names dictionary for the document.
     *
     * @param names The names dictionary that is associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo),401,404,"/**
* Updates the root object with the given PDMarkInfo.
* @param markInfo PDMarkInfo object to update
*/","* Set information about the doc's usage of tagged features.
     *
     * @param markInfo The new MarkInfo data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary),548,551,"/**
* Sets URI mask on the root element.
* @param uri dictionary containing URI settings
*/","* Sets the document level URI.
     *
     * @param uri The new document level URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot),569,572,"/**
* Sets mask on PDStructureTreeRoot object.
* @param treeRoot root of structure tree
*/","* Sets the document's structure tree root.
     *
     * @param treeRoot The new structure tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels),631,634,"/**
* Sets page label mask on the PDF document.
* @param labels PDPageLabels object containing label settings
*/","* Sets the page label descriptor for the document.
     *
     * @param labels the new page label descriptor to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode),96,105,"/**
* Updates and clears destination masks in the PDDestinationNameTree.
* @param dests PDDestinationNameTreeNode to update
*/","* Set the named destinations that are associated with this document.
     *
     * @param dests The destination names.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode),124,127,"/**
* Masks PDE embedded files in the name dictionary.
* @param ef PDEmbeddedFilesNameTreeNode object
*/","* Set the named embedded files that are associated with this document.
     *
     * @param ef The new embedded files",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setJavascript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode),147,150,"/**
* Updates JavaScript name dictionary with tree node.
* @param js JavascriptNameTreeNode instance to process
*/","* Set the named javascript entries that are associated with this document.
     *
     * @param js The new Javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),92,97,"/**
* Initializes a PDF page with specified media box.
* @param mediaBox rectangle defining the page's dimensions
*/","* Creates a new instance of PDPage for embedding.
     * 
     * @param mediaBox The MediaBox of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setResources,org.apache.pdfbox.pdmodel.PDPage:setResources(org.apache.pdfbox.pdmodel.PDResources),347,358,"/**
* Sets and applies mask resources to the page.
* @param resources PDResources object or null to clear
*/","* This will set the resources for this page.
     * 
     * @param resources The new resources for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMediaBox,org.apache.pdfbox.pdmodel.PDPage:setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),423,434,"/**
* Updates the media box for the current PDF page.
* @param mediaBox new rectangle defining the page's boundaries
*/","* This will set the mediaBox for this page.
     * 
     * @param mediaBox The new mediaBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setBleedBox,org.apache.pdfbox.pdmodel.PDPage:setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle),490,500,"/**
* Sets the bleed box mask on the PDF page.
* @param bleedBox rectangle defining the bleed area or null for default
*/","* This will set the BleedBox for this page.
     * 
     * @param bleedBox The new BleedBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTrimBox,org.apache.pdfbox.pdmodel.PDPage:setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle),519,529,"/**
* Sets or clears the trim box on the PDF page.
* @param trimBox rectangle to set as trim box or null for clear
*/","* This will set the TrimBox for this page.
     * 
     * @param trimBox The new TrimBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setArtBox,org.apache.pdfbox.pdmodel.PDPage:setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle),549,559,"/**
* Sets or clears the Art Box mask.
* @param artBox rectangle to set as Art Box (null to clear)
*/","* This will set the ArtBox for this page.
     * 
     * @param artBox The new ArtBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(org.apache.pdfbox.pdmodel.common.PDStream),612,615,"/**
 * Sets the PDStream contents in the page model.
 * @param contents PDF stream object
 */","* This will set the contents of this page.
     * 
     * @param contents The new contents of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMetadata,org.apache.pdfbox.pdmodel.PDPage:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),683,686,"/**
* Applies metadata mask to PDMetadata object.
* @param meta PDMetadata object to be masked
*/","* Set the metadata for this object. This can be null.
     * 
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setActions,org.apache.pdfbox.pdmodel.PDPage:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions),709,712,"/**
* Applies mask to PDPageAdditionalActions object.
* @param actions object containing page actions
*/","* Set the page actions.
     * 
     * @param actions The actions for the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition),726,729,"/**
* Sets mask on transition.
* @param transition PDTransition object to apply mask to
*/",* @param transition The new transition to set on this page.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,"org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",738,742,"/**
* Applies a mask to a page transition.
* @param transition the transition effect
* @param duration the duration of the mask
*/","* Convenient method to set a transition and the display duration
     * 
     * @param transition The new transition to set on this page.
     * @param duration The maximum length of time, in seconds, that the page shall be displayed during presentations
     * before the viewer application shall automatically advance to the next page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setPage(org.apache.pdfbox.pdmodel.PDPage),79,82,"/**
* Applies mask to PDPage instance.
* @param page PDPage object to be masked
*/","* Sets the page.
     * 
     * @param page the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),135,138,"/**
* Applies mask to PDAnnotation.
* @param annotation PDAnnotation object to apply mask to
*/","* Sets the referenced annotation.
     * 
     * @param annotation the referenced annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),145,148,"/**
* Applies mask to PDX object.
* @param xobject PDXObject instance
*/","* Sets the referenced XObject.
     * 
     * @param xobject the referenced XObject",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setPage(org.apache.pdfbox.pdmodel.PDPage),172,175,"/**
* Applies mask to specified PDF page.
* @param page PDPage object to be masked
*/","* Sets the page on which the object shall be rendered. This is optional and overrides the /PG
     * entry in the structure element containing the object reference; shall be used if the
     * structure element contained no such entry.
     *
     * @param page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode),107,110,"/**
* Applies mask function to PDStructureNode.
* @param structureNode node to apply mask to
*/","* Sets the parent in the structure hierarchy (P).
     * 
     * @param structureNode the parent in the structure hierarchy",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setPage(org.apache.pdfbox.pdmodel.PDPage),151,154,"/**
 * Applies mask to specified PDF page.
 * @param page PDPage object to apply mask to
 */","* Sets the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * @param page the page on which some or all of the content items designated
     *  by the K entry shall be rendered.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),203,227,"/**
* Updates attribute mask with revisions from the provided attributes collection.
* @param attributes Revisions of PDAttributeObjects to update
*/","* Sets the attributes together with their revision numbers (A).
     * 
     * @param attributes the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),109,112,"/**
* Masks PDStructureElement tree based on ID.
* @param idTree PDNameTreeNode containing structure element IDs
*/","* Sets the ID tree.
     * 
     * @param idTree the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),144,147,"/**
* Sets mask on PDNumberTreeNode instance.
* @param parentTree PDNumberTreeNode to apply mask to
*/","* Sets the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     * <p>
     * To create an empty parent tree, call {@code new PDNumberTreeNode(PDParentTreeValue.class)}.
     *
     * @param parentTree the parent tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),722,725,"/**
* Sets mask annotation on PDF page.
* @param rectangle bounding box of the mask
*/","* Set the rectangle associated with this annotation.
     *
     * @param rectangle The annotation rectangle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),887,890,"/**
* Sets mask annotation for PDBorderStyleDictionary.
* @param bs PDBorderStyleDictionary to annotate
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the annotation.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),911,914,"/**
* Applies mask to PDBorderEffectDictionary.
* @param be dictionary with border effect data
*/","* This will set the border effect dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @param be the border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),104,107,"/**
* Applies mask to PDF rectangle.
* @param fringe PDRectangle object to mask
*/","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),141,144,"/**
* Sets mask on rectangle.
* @param fringe PDRectangle object to annotate
*/","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),260,263,"/**
 * Sets the mask for the given PDRectangle.
 * @param fringe rectangle to set mask for
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle
     * and where the drawing occurs. (To take account of any effects applied through the BE entry
     * for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),142,145,"/**
* Sets mask annotation on rectangle with specified coordinates.
* @param fringe rectangle to annotate
*/","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary),137,140,"/**
* Registers FDF dictionary with catalog.
* @param fdf FDF dictionary to register
*/","* This will set the FDF document.
     *
     * @param fdf The new FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),158,161,"/**
 * Updates functional mask of a PDSignature object in the catalog. 
 * @param sig PDSignature object to update","* This will set the signature that is associated with this catalog.
     *
     * @param sig The new signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),295,298,"/**
* Sets mask bit in PDF file specification.
* @param fs PDFileSpecification object to modify
*/","* This will set the file specification.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript),555,558,"/**
* Sets JavaScript function mask.
* @param js FDFJavaScript object to set
*/","* This will set the JavaScript entry.
     *
     * @param js The javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,setCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog),161,165,"/**
* Sets the FDF catalog mask in the PDF document.
* @param cat FDFCatalog object to set as the mask
*/","* This will set the FDF catalog for this FDF document.
     *
     * @param cat The FDF catalog.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),605,608,"/**
* Sets mask appearance properties from PDAppearanceDictionary.
* @param ap PDAppearanceDictionary object
*/","* This will set the appearance dictionary.
     *
     * @param ap The appearance dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),626,629,"/**
* Sets the named page reference mask.
* @param ref FDFNamedPageReference object
*/","* This will set the named page references.
     *
     * @param ref The named page references.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit),647,650,"/**
* Applies mask to FDF icon using specified fit type.
* @param fit icon fit type
*/","* This will set the icon fit 'IF' entry.
     *
     * @param fit The icon fit object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAction,org.apache.pdfbox.pdmodel.fdf.FDFField:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),712,715,"/**
* Applies mask action to the PDAction object.
* @param a PDAction object to modify
*/","* This will set the action that is associated with this field.
     *
     * @param a The new action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions),733,736,"/**
 * Applies mask functionality to additional actions.
 * @param aa PDAdditionalActions object to be masked
 */","* This will set the additional actions that are associated with this field.
     *
     * @param aa The additional actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange),174,177,"/**
* Applies mask to PDRange based on COSName.A.","* This will set frational space to allocate.
     *
     * @param space The space to allocate.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),101,104,"/**
* Applies mask to PD file specification.
* @param fs PD file specification to be masked
*/","* This will set the file specification for this named page reference.
     *
     * @param fs The file specification to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo),117,120,"/**
 * Sets the FDF page information mask.
 * @param info FDFPageInfo object containing page data
 */","* This will set the page info.
     *
     * @param info The new page info dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),82,85,"/**
* Sets mask value from named page reference.
* @param tRef Named page reference to set mask value from
*/","* This will set the template reference.
     *
     * @param tRef The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDToGIDMap(java.util.TreeMap),233,254,"/**
* Builds a CID-to-GID map from the provided TreeMap and embeds it into the PDF document.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile(org.apache.pdfbox.pdmodel.common.PDStream),737,740,"/**
* Sets font file from PDF stream.
* @param type1Stream PDF stream containing font data
*/","* Set the type 1 font program.
     *
     * @param type1Stream The type 1 stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream),758,761,"/**
* Applies font file mask to PDStream object.
* @param ttfStream input stream containing font data
*/","* Set the true type font program.
     *
     * @param ttfStream The true type stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream),779,782,"/**
* Applies mask to PDStream.
* @param stream input PDF stream","* Set a stream containing a font program that is not true type or type 1.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream),800,803,"/**
* Sets mask in PDStream.
* @param stream input stream to modify
*/","* Set a stream containing a CIDSet.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),155,163,"/**
* Sets the Tristimulus white point in the color space.
* @param whitepoint Tristimulus white point data
*/","* This will set the whitepoint tristimulus. As this is a required field, null should not be
     * passed into this function.
     *
     * @param whitepoint the whitepoint tristimulus.
     * @throws IllegalArgumentException if null is passed as argument.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),170,173,"/**
* Sets the black point of the display device.
* @param blackpoint PDTristimulus object containing color data
*/","* This will set the BlackPoint tristimulus.
     *
     * @param blackpoint the BlackPoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",43,50,"/**
* Configures output intent for a PDDocument.
* @param doc the document to configure
* @param colorProfile input stream of color profile data
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),79,83,"/**
* Sets the extended graphics state and notifies all interested objects.
* @param extendedGraphicsState new extended graphics state
*/","* This will set the external graphics state for this pattern.
     * @param extendedGraphicsState The new extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),107,111,"/**
* Sets and applies mask to given PDShading resources.
* @param shadingResources Shading resources to be masked
*/","* This will set the shading resources for this pattern.
     * @param shadingResources The new shading resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setResources(org.apache.pdfbox.pdmodel.PDResources),209,212,"/**
* Applies mask to PDResources.
* @param resources PDResources object to be masked
*/","* This will set the resources for this pattern.
     * @param resources The new resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction),312,317,"/**
* Replaces existing function with a new one in the array.
* @param newFunction Function object to replace the current one
*/","* This will set the function for the color conversion.
     *
     * @param newFunction the new function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting),448,451,"/**
 * Updates the font dictionary with the given PDFontSetting.
 * @param fs PDFontSetting object to update the font
 */","* This will set the font setting for this graphics state.
     *
     * @param fs The new font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),82,99,"/**
* Updates destination mask for the given PDDestination object.
* @param d PDDestination object to update
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     *
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),118,121,"/**
* Applies mask to PDFileSpecification.
* @param fs file specification object
*/","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),184,187,"/**
* Applies mask to target directory.
* @param targetDirectory directory to be masked
*/","* Sets the target directory.
     * 
     * @param targetDirectory the target directory",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),78,95,"/**
* Updates the mask for the specified destination.
* @param d PDDestination object to update
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     * 
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),71,74,"/**
 * Applies mask operation to PD file specification.
 * @param fs PDFileSpecification object to process
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),84,87,"/**
* Applies mask to PDFileSpecification.
* @param fs file specification object
*/","* This will set the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams),105,108,"/**
* Sets launch parameters with mask.
* @param win PDWindowsLaunchParams object to be masked
*/","* This will set a dictionary containing Windows-specific launch parameters.
     *
     * @param win The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),76,79,"/**
* Masks file specification with functional layer.
* @param fs PDFileSpecification object to mask
*/","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),74,77,"/**
 * Applies mask to PDF file specification.
 * @param fs PDFileSpecification object to be masked
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),92,95,"/**
 * Applies mask to PDFileSpecification using COSName.F. 
 * @param fs file specification to be masked","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),76,79,"/**
* Executes mask operation on PDAction.
* @param action PDAction object to operate on
*/","* Set the F action.
     *
     * @param action Get the F action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction),81,84,"/**
* Applies function mask to action.
* @param e PDAction object to modify
*/","* This will set an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @param e The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
* Applies mask action to specified PDAction instance.
* @param x PDAction object to apply mask to
*/","* This will set an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @param x The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction),129,132,"/**
* Applies mask action to the given PDAction.
* @param d PDAction object to apply mask to
*/","* This will set an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @param d The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction),154,157,"/**
* Performs functional mask operation on action.
* @param u PDAction object to process
*/","* This will set an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @param u The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction),177,180,"/**
* Applies mask action to the specified PDAction instance.
* @param fo the PDAction instance to apply the mask to
*/","* This will set an action to be performed when the annotation
     * receives the input focus.
     *
     * @param fo The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction),202,205,"/**
 * Applies mask action to PDAction instance. 
 * @param bl PDAction instance to modify
 */","* This will set an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @param bl The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),229,232,"/**
* Executes PDAction with COSName.PO mask.
* @param po PDAction object to execute
*/","* This will set an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @param po The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),254,257,"/**
* Sets the mask action for the given PDAction.
* @param pc PDAction object to set the mask for
*/","* This will set an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @param pc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),277,280,"/**
* Applies mask to PDAction.
* @param pv PDAction object to modify
*/","* This will set an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @param pv The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction),300,303,"/**
 * Applies mask to PDAction instance.
 * @param pi PDAction object to modify
 */","* This will set an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @param pi The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),83,86,"/**
* Applies mask to PDAction.
* @param wc PDAction object to apply mask to
*/","* This will set a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @param wc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),108,111,"/**
* Performs function mask operation on PD action.
* @param ws input PDAction object
*/","* This will set a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @param ws The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),133,136,"/**
* Applies mask to PDAction instance.
* @param ds PDAction object to modify
*/","* This will set a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @param ds The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),158,161,"/**
* Updates WP mask in actions using provided PDAction.
* @param wp PDAction object to update with
*/","* This will set a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @param wp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),183,186,"/**
* Applies mask action to PDAction object.
* @param dp PDAction object to modify
*/","* This will set a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @param dp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Updates action mask with provided PDAction instance.
* @param k PDAction object to update
*/","* This will set a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @param k The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Applies mask action to PDAction instance.
* @param f PDAction object to apply mask to
*/","* This will set a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @param f The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),137,140,"/**
* Applies mask action to PDAction instance.
* @param v PDAction object to modify
*/","* This will set a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @param v The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),166,169,"/**
 * Performs function masking on the given PDAction instance.
 * @param c PDAction instance to apply masking to
 */","* This will set a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Masks action with specified PDAction object.
* @param o PDAction object to mask
*/","* This will set an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @param o The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Applies mask to action.
* @param c action to modify
*/","* This will set an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),138,141,"/**
* Applies mask to PDTargetDirectory.
* @param targetDirectory directory object to be masked
*/","* Sets the target directory.
     *
     * @param targetDirectory the target directory or null if the current document is the target
     * file containing the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),194,204,"/**
* Sets or clears mask for a named destination.
* @param dest PDNamedDestination object to set mask for
*/","* This will set a named destination in the current document that provides the page number of
     * the file attachment annotation.
     *
     * @param dest a named destination or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),355,358,"/**
* Updates PDAppearanceDictionary with mask data.
* @param appearance PDAppearanceDictionary object to update
*/","* This will set the appearance associated with this annotation.
     * 
     * @param appearance The appearance dictionary for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),716,719,"/**
* Applies function mask to property list.
* @param oc PDPropertyList object to modify
*/","* Sets the optional content group or optional content membership dictionary for the annotation.
     *
     * @param oc The optional content group or optional content membership dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPage(org.apache.pdfbox.pdmodel.PDPage),831,834,"/**
 * Configures page masking functionality on the provided PDPage instance.
 * @param page the target PDPage object
 */","* This will set the corresponding page for this annotation. This is optional but recommended.
     * Not doing it <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when
     * PDFs get signed</a>.
     *
     * @param page is the corresponding page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),94,97,"/**
* Applies mask to PDFileSpecification.
*@param file specification to be masked
*/","* Set the attached file.
     *
     * @param file The file that is attached.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),242,245,"/**
* Updates mask with border effect dictionary.
* @param be PDBorderEffectDictionary object to update
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.6 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),267,270,"/**
* Applies mask to PDRectangle.
* @param rd rectangle to be masked
*/","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
* Updates mask using specified PDAction.
* @param action PDAction to apply
*/","* Set the annotation action. Either this or the destination entry should be set, but not both.
     *
     * @param action The annotation action.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),115,118,"/**
 * Updates mask properties in PDBorderStyleDictionary.
 * @param bs dictionary to update with mask properties
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set. 
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),150,153,"/**
* Applies mask to destination PDDestination object.
* @param dest PDDestination object to apply mask to
*/","* The new destination value. Either this or the action entry should be set, but not both.
     *
     * @param dest The updated destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI),180,183,"/**
* Sets mask for the given action URI.
* @param pa PDActionURI object to set the mask for
*/","* This will set the previous URI action, in case it needs to be retrieved at later date.
     *
     * @param pa The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setPopup(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup),104,107,"/**
* Applies mask to annotation popup.
* @param popup PDAnnotationPopup instance
*/","* This will set the popup annotation used for entering/editing the text for this annotation.
     *
     * @param popup the popup annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setInReplyTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),200,203,"/**
* Sets IRT mask for the given PD annotation.
* @param irt PDAnnotation object
*/","* This will set the annotation to which this one is ""In Reply To"" the actual relationship is specified by the RT
     * entry.
     *
     * @param irt the annotation this one is ""In Reply To"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setExternalData(org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary),285,288,"/**
* Masks external data dictionary in database.
* @param externalData external data dictionary to mask
*/","* This will set the external data dictionary.
     * 
     * @param externalData the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),296,299,"/**
 * Updates border style dictionary with mask functionality.
 * @param bs PDBorderStyleDictionary to modify
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),88,91,"/**
 * Applies mask to PDBorderEffectDictionary and processes it.
 * @param be dictionary containing border effect data
 */","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),85,88,"/**
* Applies mask to PDBorderEffectDictionary object.
* @param be border effect dictionary
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),110,113,"/**
* Applies mask to rectangle.
* @param rd rectangle data
*/","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary),131,135,"/**
* Masks PDA appearance characteristics.
* @param appearanceCharacteristics dictionary of appearance characteristics
*/","* Sets the appearance characteristics dictionary.
     * 
     * @param appearanceCharacteristics the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),153,156,"/**
* Applies mask operation to PDAction.
* @param action PDAction object to modify
*/","* Set the annotation action. As of PDF 1.6 this is only used for Widget Annotations
     * 
     * @param action The annotation action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions),175,178,"/**
* Applies mask to PDAnnotationAdditionalActions object.
* @param actions additional annotation actions
*/","* Set the actions of the field.
     *
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),186,189,"/**
* Applies mask function to PDBorderStyleDictionary.
* @param bs PDBorderStyleDictionary object
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField),224,231,"/**
* Marks the given PDTerminalField as having a parent.
* @param field PDTerminalField instance
*/","* Set the parent field of a widget annotation. This is only required if this widget annotation
     * is one of multiple children in a field, and not to be set otherwise. You will usually not
     * need this, because in most cases, fields have only one widget and share a common dictionary.
     * A usage can be found in the CreateMultiWidgetsForm example.
     *
     * @param field the parent field.
     * @throws IllegalArgumentException if setParent() was called for a field that shares a
     * dictionary with its only widget.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),77,80,"/**
 * Sets mask for PDAppearanceEntry in dictionary.
 * @param entry PDAppearanceEntry object to set mask for
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),87,90,"/**
* Masks PDAppearanceStream in dictionary using COSName.N.","* This will set the normal appearance when there is only one appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),111,114,"/**
* Masks PDA appearance entry.
* @param entry PDA appearance data to mask
*/","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),121,124,"/**
* Masks PDA appearance stream using provided dictionary. 
* @param ap PDAppearanceStream object to be masked
*/","* This will set the rollover appearance when there is rollover appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),145,148,"/**
* Updates appearance mask in dictionary.
* @param entry PDAppearanceEntry object to update
*/","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),155,158,"/**
 * Applies mask to appearance stream.
 * @param ap PDAppearanceStream object
 */","* This will set the down appearance when there is down appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),92,95,"/**
* Sets the filter data in the build dictionary.
* @param filter PDPropBuildDataDict instance with filter properties
*/","* Set the build data dictionary for the signature handler.
     * This entry is optional but is highly recommended for the signatures.
     *
     * @param filter is the PDPropBuildFilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),119,122,"/**
* Updates public security settings in the dictionary.
* @param pubSec PublicSecurity object to update
*/","* Set the build data dictionary for the PubSec Software module.
     *
     * @param pubSec is the PDPropBuildPubSec",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),147,150,"/**
 * Sets application-specific build data in the dictionary.
 * @param app PDPropBuildDataDict object containing build data
 */","* Set the build data dictionary for the viewing application
     * software module.
     *
     * @param app is the PDPropBuildApp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate),453,456,"/**
* Updates the mask value in the dictionary with the provided certificate.
* @param certificate PDSeedValueCertificate to update with
*/","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @param certificate dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild),460,463,"/**
 * Sets property build mask in dictionary.
 * @param propBuild Property build object to update
 */","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @param propBuild the prop build",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setPreviousSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),137,140,"/**
* Applies mask function to specified PDOutlineNode.
* @param outlineNode node to apply mask to
*/","* Set the previous sibling, this will be maintained by this class.
     *
     * @param outlineNode The new previous sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setNextSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),155,158,"/**
* Applies mask functionality to the specified PDOutlineNode.
* @param outlineNode node to process
*/","* Set the next sibling, this will be maintained by this class.
     *
     * @param outlineNode The new next sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),196,199,"/**
* Sets destination mask.
* @param dest PDDestination object to configure
*/","* Set the page destination for this node.
     *
     * @param dest The new page destination for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),291,294,"/**
* Applies mask to PDAction based on COSName A.
* @param action PDAction object to modify
*/","* Set the action for this node.
     *
     * @param action The new action for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),312,315,"/**
* Applies mask operation to PDStructureElement.
* @param structureElement element to process
*/","* Set the structure element for this node.
     *
     * @param structureElement The new structure element for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),67,70,"/**
* Applies functional mask to PDOutlineNode.
* @param parent node to apply mask to
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),194,197,"/**
* Applies mask to specified PDOutlineNode.
* @param outlineNode node to apply mask to
*/","* Set the first child, this will be maintained by this class.
     *
     * @param outlineNode The new first child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),212,215,"/**
* Applies functional mask to specified PDOutlineNode.
* @param outlineNode node to apply mask to
*/","* Set the last child, this will be maintained by this class.
     *
     * @param outlineNode The new last child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultResources(org.apache.pdfbox.pdmodel.PDResources),554,557,"/**
* Sets mask resources from PDResources object.
* @param dr PDResources containing mask data
*/","* This will set the default resources for the acroform.
     *
     * @param dr The new default resources.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource),595,598,"/**
 * Sets XFA resource mask in the dictionary.
 * @param xfa PDXFAResource object to set
 */","* Set the XFA resource, this is only used for PDF 1.5+ forms.
     *
     * @param xfa The xfa resource.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),104,108,"/**
* Masks PDSignature object.
* @param value PDSignature to mask
*/","* Sets the value of this field to be the given signature.
     * 
     * @param value is the PDSignatureField
     * 
     * @throws IOException if the new value could not be applied",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),131,134,"/**
* Sets mask on PDSignature object.
* @param value PDSignature object to modify
*/","* Sets the default value of this field to be the given signature.
     *
     * @param value is the PDSignatureField",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue),185,191,"/**
* Applies mask to PDSeedValue object.
* @param sv PDSeedValue object to apply mask to
*/","* <p>(Optional; PDF 1.) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @param sv is the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setActions,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions),66,69,"/**
* Applies additional form field actions to mask. 
* @param actions Form field actions to apply
*/","* Set the actions of the field.
     * 
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setWidgets(java.util.List),192,200,"/**
* Sets parent-child relationships between annotation widgets.
* @param children list of PDAnnotationWidgets to establish relationships for
*/","* Sets the field's widget annotations.
     *
     * @param children The list of widget annotations.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),95,98,"/**
* Applies mask to specified PDRectangle.
* @param rectangle target rectangle to apply mask to
*/","* This will set the rectangle specifying the location of the viewport.
     * 
     * @param rectangle the rectangle specifying the location.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary),136,139,"/**
* Applies mask to PDMeasureDictionary.
* @param measure PDMeasureDictionary object to be masked
*/","* This will set the measure dictionary.
     * 
     * @param measure the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation),82,85,"/**
* Sets PDF document information mask.
* @param info PDDocumentInformation object to modify
*/","* Set the thread info, can be null.
     *
     * @param info The info dictionary about this thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread),89,92,"/**
* Applies mask to PDThread.
* @param thread target thread to apply mask to
*/","* Set the thread that this bead is part of.  This is only required for the
     * first bead in a thread.  Note: This property is set for you by the PDThread.setFirstBead() method.
     *
     * @param thread The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),110,113,"/**
* Updates thread bead with mask from next bead. 
* @param next reference to next bead in sequence
*/","* Set the next bead in the thread.
     *
     * @param next The next bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),131,134,"/**
* Updates bead with next thread in sequence.
* @param previous previous thread bead
*/","* Set the previous bead in the thread.
     *
     * @param previous The previous bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPage(org.apache.pdfbox.pdmodel.PDPage),169,172,"/**
* Applies mask to specified PDF page.
* @param page target PDPage object
*/","* Set the page that this bead is part of.  This is a required property and must be
     * set when creating a new bead.  The PDPage object also has a list of beads in the natural
     * reading order.  It is recommended that you add this object to that list as well.
     *
     * @param page The page that this bead is on.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),190,193,"/**
 * Applies mask to rectangle.
 * @param rect PDRectangle object with coordinates and size
 */","* Set the rectangle on the page that this bead covers.
     *
     * @param rect The portion of the page that this bead covers.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setMarked(boolean),77,80,"/**
* Marks an entry with the given boolean status.
* @param value true to mark, false otherwise
*/","* Set if this is a tagged PDF.
     *
     * @param value The new marked value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setUserProperties(boolean),97,100,"/**
* Sets mask flag on user properties in dictionary.
* @param userProps true to enable, false otherwise
*/","* Set if the structure elements contain user properties.
     *
     * @param userProps The new value for this property.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setSuspect(boolean),120,123,"/**
* Updates dictionary entry for suspects based on input flag.
* @param suspect true to mark as suspect, false otherwise
*/","* Set the value of the suspects property.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this
     * property.
     *
     * @param suspect The new ""Suspects"" value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setTrackMousePosition(boolean),117,120,"/**
* Sets the ""IsMap"" flag based on the provided boolean value.
* @param value true to indicate map functionality, false otherwise
*/","* This will specify whether to track the mouse position when the URI is
     * resolved.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setOpen(boolean),64,67,"/**
 * Sets mask state based on the provided flag.
 * @param open true to open or false to close the mask
 */","* This will set the initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFD(boolean),211,214,"/**
* Sets mask flag using FD parameter.
* @param fd boolean value to set in mask
*/","* This will set the value indication if the denominator of the fractional value is reduced/truncated .
     * The denominator may not be reduced/truncated if true
     * @param fd fd",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setVolatile(boolean),205,208,"/**
 * Sets mask flag based on volatility of the file.
 * @param fileIsVolatile true if file is volatile, false otherwise
 */","* Tell if the underlying file is volatile and should not be cached by the
     * reader application.  Default: false
     *
     * @param fileIsVolatile The new value for the volatility of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setEncryptMetaData(boolean),134,137,"/**
* Configures mask functionality with optional metadata encryption.
* @param encryptMetaData true to enable encryption, false otherwise
*/","* Set the EncryptMetaData dictionary info.
     *
     * @param encryptMetaData true if EncryptMetaData shall be set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaption(boolean),286,289,"/**
* Applies CAP mask to annotation.
* @param cap boolean flag to enable/disable mask
*/","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleToFitAnnotation(boolean),194,197,"/**
* Sets mask flag to specified state.
* @param value true to enable or false to disable
*/","* This will tell the icon to scale.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setRename(boolean),132,135,"/**
* Sets mask value in template.
* @param value boolean flag to enable or disable mask
*/","* This will set if the fields can be renamed.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setInterpolate(boolean),235,239,"/**
* Sets mask value.
* @param value true to apply mask, false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setStencil(boolean),290,294,"/**
* Sets mask parameter based on stencil flag.
* @param isStencil true to enable stencil mode
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setAntiAlias(boolean),218,221,"/**
 * Sets anti-aliasing flag in the graphics context.
 * @param antiAlias true to enable, false to disable anti-aliasing
 */","* This will set the AntiAlias value.
     *
     * @param antiAlias the new AntiAlias value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingOverprintControl(boolean),372,375,"/**
* Sets operation flag in dictionary.
* @param op true to enable or false to disable operation
*/","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingOverprintControl(boolean),393,396,"/**
* Sets mask operation flag in dictionary.
* @param op true to enable or false to disable
*/","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAutomaticStrokeAdjustment(boolean),508,511,"/**
 * Sets or clears the SA flag in the dictionary.
 * @param sa true to set, false to clear
 */","* This will set the automatic stroke adjustment flag.
     *
     * @param sa The new automatic stroke adjustment flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAlphaSourceFlag(boolean),572,575,"/**
 * Sets mask state in dictionary based on alpha value.
 * @param alpha true to enable, false to disable mask
 */","* This will set the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @param alpha The alpha source flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTextKnockoutFlag(boolean),625,628,"/**
* Sets TK flag in dictionary.
* @param tk boolean value to set
*/","* This will set the text knockout flag.
     *
     * @param tk The text knockout flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),144,166,"/**
* Applies a mask to the open mode based on the provided value.
* @param value OpenMode enum value
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),227,249,"/**
* Handles mask open mode based on the provided value.
* @param value OpenMode enum value
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),134,156,"/**
* Sets the mask mode based on the provided OpenMode value.
* @param value OpenMode enum value to determine the mask behavior
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSynchronous(boolean),110,113,"/**
* Configures mask functionality to run synchronously or asynchronously.
* @param synchronous true for synchronous execution, false otherwise
*/","* A flag specifying whether to play the sound synchronously or asynchronously. When true, the
     * reader allows no further user interaction other than canceling the sound until the sound has
     * been completely played.
     *
     * @param synchronous Whether to play the sound synchronously (true) or asynchronously (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setRepeat(boolean),133,136,"/**
* Sets repeat flag on M1 action.
* @param repeat true to enable repeat, false otherwise
*/","* A flag specifying whether to repeat the sound indefinitely.
     *
     * @param repeat Whether to repeat the sound indefinitely.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setMix(boolean),156,159,"/**
* Applies mask to audio based on specified mixing flag.
* @param mix true to enable mixing, false otherwise
*/","* The flag specifying whether to mix this sound with any other sound already playing. If this
     * flag is false, any previously playing sound shall be stopped before starting this sound; this
     * can be used to stop a repeating sound (see Repeat). Default value: false.
     *
     * @param mix whether to mix this sound with any other sound already playing.
     * (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaption(boolean),251,254,"/**
* Sets mask behavior based on the provided flag.
* @param cap true to enable or false to disable masking
*/","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setOpen(boolean),146,149,"/**
* Sets mask state based on input flag.
* @param open true to enable, false to disable
*/","* This will set initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setPreRelease(boolean),202,205,"/**
 * Sets the PRE_RELEASE flag in the dictionary.
 * @param preRelease true to enable pre-release mode, false otherwise
 */","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @param preRelease is true if the signature was created with a unrelease
     *                   software, otherwise false.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setNonEFontNoWarn(boolean),284,287,"/**
* Sets the non-embedded font warning flag in the PDF dictionary.
* @param noEmbedFontWarning whether to suppress embedded font warnings
*/","* If true, the reader should not display a warning about fonts not being embedded.
     *
     * @param noEmbedFontWarning true if there is a Legal dictionary in the catalog and the
     * NonEmbeddedFonts attribute has a non-zero value
     *
     * Documentation says: (Optional; PDF 1.5) If there is a LegalPDF dictionary in the catalog of
     * the PDF file and the NonEmbeddedFonts attribute in this dictionary has a non zero value, and
     * the viewing application has a preference set to suppress the display of this warning then the
     * value of this attribute will be set to true.
     *
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/Acrobat_Signature_BuildDict.pdf#page=6"">Digital
     * Signature Build Dictionary Specification</a>
     * @see #getNonEFontNoWarn()
     * @see COSName#NON_EFONT_NO_WARN",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setTrustedMode(boolean),305,308,"/**
* Enables/disables trusted mode in the dictionary.
* @param trustedMode true to enable trusted mode, false otherwise
*/","* If true, the application was in trusted mode when signing took place.
     *
     * @param trustedMode true if the application is in trusted mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setNeedAppearances(java.lang.Boolean),532,535,"/**
* Sets appearance requirement flag in database.
* @param value boolean indicating whether appearances are needed
*/","* Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideToolbar(boolean),177,180,"/**
* Sets hide toolbar preference.
* @param value true to hide toolbar, false otherwise
*/","* Set the toolbar preference.
     *
     * @param value Set the toolbar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideMenubar(boolean),197,200,"/**
 * Sets whether to hide the menubar in the preferences.
 * @param value true to hide, false to show
 */","* Set the menubar preference.
     *
     * @param value Set the menubar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideWindowUI(boolean),217,220,"/**
* Toggles visibility of window UI based on specified boolean value.
* @param value true to hide, false to show window UI
*/","* Set the window UI preference.
     *
     * @param value Set the window UI preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setFitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setFitWindow(boolean),237,240,"/**
 * Sets the window fit mode preference.
 * @param value true to enable or false to disable
 */","* Set the fit window preference.
     *
     * @param value Set the fit window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setCenterWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setCenterWindow(boolean),257,260,"/**
* Sets the center window masking preference.
* @param value true to enable or false to disable masking
*/","* Set the center window preference.
     *
     * @param value Set the center window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDisplayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDisplayDocTitle(boolean),277,280,"/**
 * Sets display document title preference.
 * @param value boolean flag to enable or disable feature
 */","* Set the display doc title preference.
     *
     * @param value Set the display doc title preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStampAnnotationAppearanceXML,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStampAnnotationAppearanceXML(org.w3c.dom.Element),142,183,"/**
* Builds a COSDictionary for an Appearance XML element.
* @param appearanceXML the input XML element
*/","* This will create an Appearance dictionary from an appearance XML element.
     *
     * @param appearanceXML The XML element that contains the appearance data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(java.lang.String,java.lang.String)",288,291,"/**
 * Recursively processes key-value pairs using COSName encryption. 
 * @param key encrypted key to process
 * @param value associated value to process
 */","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageMode(org.apache.pdfbox.pdmodel.PageMode),494,497,"/**
* Sets page mode mask based on provided mode. 
* @param mode PageMode enumeration value
*/","* Sets the page mode.
     *
     * @param mode The new page mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLayout(org.apache.pdfbox.pdmodel.PageLayout),527,530,"/**
* Sets page layout mask on the root element.
* @param layout PageLayout object to apply
*/","* Sets the page layout.
     *
     * @param layout The new page layout.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setVersion(java.lang.String),609,612,"/**
* Sets mask version.
* @param version new mask version string
*/","* Sets the PDF specification version this document conforms to.
     *
     * @param version the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTrapped(java.lang.String),304,316,"/**
* Validates and logs a trapped status with the given value.
* @param value trapped status to validate ('True', 'False', or 'Unknown')
*/","* This will set the trapped of the document.  This will be
     * 'True', 'False', or 'Unknown'.
     *
     * @param value The new trapped value for the document.
     * 
     * @throws IllegalArgumentException if the parameter is invalid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStyle(java.lang.String),116,126,"/**
* Sets or clears mask style on the root element.
* @param style style to set (or null to clear)
*/","* Sets the numbering style for this page range.
     * 
     * @param style
     *            one of the STYLE_* constants or {@code null} if no page
     *            numbering is desired.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(java.lang.String),36,40,"/**
* Initializes a typed dictionary wrapper with the given data type. 
* @param type the COS name of the dictionary type to wrap
*/","* Creates a new instance with a given type.
     * 
     * @param type the type (Type)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,setOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:setOwner(java.lang.String),132,135,"/**
* Applies mask to user data based on ownership.
* @param owner unique identifier of entity owning data
*/","* Sets the owner of the attributes.
     * 
     * @param owner the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(),38,42,"/**
* Initializes a new instance of PDMarkedContentReference.
* Sets the type to the specified value. 
*/",* Default constructor,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(),58,62,"/**
* Initializes a new PDObjectReference instance with default values.
*/","* Default Constructor.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setStructureType(java.lang.String),86,89,"/**
* Applies mask function to specified structure type.
* @param structureType name of structure to mask
*/","* Sets the structure type (S).
     * 
     * @param structureType the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),368,394,"/**
* Processes revisions of class names and updates the catalog.
* @param classNames Revisions object containing class name data
*/","* Sets the class names together with their revision numbers (C).
     * 
     * @param classNames the class names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(java.lang.String),45,49,"/**
* Initializes a PDStructureNode with the specified type.
* @param type PDF document type (e.g., ""AcroForm"")","* Constructor.
     *
     * @param type the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineStyle(java.lang.String),156,159,"/**
 * Applies mask to font based on provided style. 
 * @param style type of font mask (e.g., bold, italic)
 */","* Set the style for the box.
     *
     * @param style The style for the box line.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setSubFilter(java.lang.String),179,182,"/**
* Sets specified sub-filter in the filter dictionary.
* @param subfilter sub-filter value to be set
*/","* Set the subfilter entry of the encryption dictionary.
     *
     * @param subfilter The value of the subfilter field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setIntent(java.lang.String),846,849,"/**
* Sets IT functional mask with specified intent. 
* @param intent functional mask intent string
*/","* The intent of the annotation.
     * 
     * @param intent The annotation's intent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setLineEndingStyle(java.lang.String),282,285,"/**
* Applies mask to annotation with specified style. 
* @param style formatting style for mask
*/","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setIcon(java.lang.String),92,95,"/**
* Sets mask icon.
* @param icon name of mask icon to set
*/","* This will set the icon (and hence appearance, AP taking precedence) For this annotation. See the
     * PDAnnotationText.NAME_XXX constants for valid values.
     *
     * @param icon The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setVersion(java.lang.String),106,109,"/**
* Updates COSName.VERSION attribute with specified version string. 
* @param version new version identifier to be updated
*/","* This will set the version of the FDF document.
     *
     * @param version The new version for the FDF document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEncoding(java.lang.String),424,427,"/**
 * Sets the PDF encoding mask using the specified encoding scheme.
 * @param encoding encoding scheme to set (e.g. ""UTF-8"")","* This will set the encoding.
     *
     * @param encoding The new encoding.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleOption(java.lang.String),110,113,"/**
 * Applies mask to given SW option.
 * @param option string option to be masked
 */","* This will set the scale option for the icon. Set the SCALE_OPTION_XXX constants.
     *
     * @param option The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleType(java.lang.String),136,139,"/**
* Applies a mask to the specified scale.
* @param scale the scale to be masked
*/","* This will set the scale type. See the SCALE_TYPE_XXX constants.
     *
     * @param scale The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(),71,75,"/**
* Initializes abstract pattern with an empty dictionary and sets its type to PATTERN.",* Creates a new Pattern dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setType(java.lang.String),94,97,"/**
* Sets mask type.
* @param type specific mask type to apply
*/","* This will set the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @param type The new Type for the PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setSubType(java.lang.String),114,117,"/**
* Sets mask value from given string.
* @param s input string containing mask value
*/","* This will set the type of action that the actions dictionary describes.
     *
     * @param s The new type of action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setSubtype(java.lang.String),234,237,"/**
* Sets subtype mask using the provided value.
* @param subType subtype name to set in COSName
*/","* This will set the sub type (and hence appearance, AP taking precedence) For this annotation. See the SUB_TYPE_XXX
     * constants for valid values.
     *
     * @param subType The subtype of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearanceState(java.lang.String),334,337,"/**
 * Applies mask to string using COSName.AS.","* This will set the annotations appearance state name.
     * 
     * @param as The name of the appearance stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setAttachmentName(java.lang.String),114,117,"/**
* Sets mask configuration by given name.
* @param name unique identifier of the mask configuration
*/","* Set the name used to draw the attachment icon. See the ATTACHMENT_NAME_XXX constants.
     *
     * @param name The name of the visual icon to draw.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setLineEndingStyle(java.lang.String),219,222,"/**
* Applies mask with specified style to current graphics context.
* @param style name of graphic style to apply
*/","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionPositioning(java.lang.String),342,345,"/**
 * Configures mask settings based on caption positioning.","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionPositioning caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setHighlightMode(java.lang.String),170,173,"/**
* Applies mask operation based on given mode.
* @param mode specifies the type of mask operation
*/","* Set the highlight mode. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @param mode The new highlight mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setReplyType(java.lang.String),242,245,"/**
* Sets mask value using provided runtime name.
* @param rt runtime name to set mask value for
*/","* This will set the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for the
     * available values.
     *
     * @param rt the reply type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setIntent(java.lang.String),264,267,"/**
* Applies mask to COS resource with given ID. 
* @param it unique identifier of COS resource to be masked
*/","* This will set the intent of the annotation The values and meanings are specific to the actual annotation See the
     * IT_* constants for the annotation classes.
     *
     * @param it the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:setName(java.lang.String),120,123,"/**
* Calls m2 on retrieved COS instance with given name.
* @param name COS name to pass to m2
*/","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the rubber stamp.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setName(java.lang.String),167,170,"/**
* Calls m1() and invokes m2 on its result with specified parameters.","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setHighlightingMode(java.lang.String),100,113,"/**
* Validates and applies the specified highlighting mode.
* @param highlightingMode valid mode: N, I, O, P, T
*/","* Sets the highlighting mode.
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @param highlightingMode the highlighting mode the defined values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setStyle(java.lang.String),140,143,"/**
* Applies mask to input string.
* @param s input string to be masked
*/","* This will set the border style, see the STYLE_* constants for valid values.
     *
     * @param s the border style to use",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(),35,39,"/**
* Initializes external data dictionary with default settings.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:setSubtype(java.lang.String),87,90,"/**
* Sets the subtype mask using the provided value.
* @param subtype subtype to set
*/","* This will set the subtype of the external data dictionary.
     * 
     * @param subtype the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setName(java.lang.String),81,84,"/**
* Updates COSName entry in dictionary with provided user name.
* @param name user name to update
*/","* The name of the software module that was used to create the signature.
     *
     * @param name is the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLType(java.lang.String),622,625,"/**
* Updates URL type in the dictionary.
* @param urlType new URL type to store
*/","* (Optional; PDF 1.7) A name indicating the usage of the URL entry. There are standard uses and
     * there can be implementation-specific uses for this URL. The following value specifies a valid
     * standard usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     * Third parties can extend the use of this attribute with their own attribute values, which
     * must conform to the guidelines specified in
     * <a href=""http://www.adobe.com/content/dam/acom/en/devnet/pdf/PDF32000_2008.pdf#page=681"">PDF
     * Spec 1.7 Appendix E (PDF Name Registry)</a>
     * if urlType is not set the default is Browser for URL
     *
     * @param urlType String of the urlType",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(),33,36,"/**
* Initializes document outline object.
*/",* Default Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(org.apache.pdfbox.cos.COSDictionary),43,47,"/**
* Constructs a PDDocumentOutline from a COS dictionary.
* @param dic the COS dictionary containing outline information
*/","* Constructor for an existing document outline.
     *
     * @param dic The storage dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(),39,43,"/**
* Initializes a new instance of the PDMeasureDictionary class.
* Sets the measure dictionary and type name in the underlying COS object.",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:setSubtype(java.lang.String),92,95,"/**
* Sets mask subtype.
* @param subtype new subtype value
*/","* This will set the subtype of the measure dictionary.
     * @param subtype the subtype of the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(),66,70,"/**
* Initializes PDNumberFormatDictionary object with default values.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setName(java.lang.String),115,118,"/**
* Calls nested method with COS name and user name.
* @param name user name to pass to nested method
*/","* This will set the name of the viewport.
    *  
    * @param name the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle),49,54,"/**
* Initializes a new transition with the specified style.
* @param style desired transition style
*/","* creates a new transition with the given style.
     * 
     * @param style the style to be used to create the new transition",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension),91,94,"/**
* Applies mask to given transition dimension.
* @param dimension PDTransitionDimension object to be masked
*/","* Sets the dimension in which the specified transition effect shall occur. Only for {@link PDTransitionStyle#Split}
     * and {@link PDTransitionStyle#Blinds}.
     * 
     * @param dimension the dimension in which the specified transition effect shall occur",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion),112,115,"/**
* Applies mask function to transition motion.
* @param motion PDTransitionMotion object
*/","* Sets the direction of motion for the specified transition effect. Only for {@link PDTransitionStyle#Split},
     * {@link PDTransitionStyle#Blinds} and {@link PDTransitionStyle#Fly}.
     * 
     * @param motion the direction of motion for the specified transition effect",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE),298,301,"/**
* Sets non-full screen page mode preference.
* @param value NON_FULL_SCREEN_PAGE_MODE enum value
*/","* Set the non full screen page mode preference.
     *
     * @param value Set the non full screen page mode preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION),318,321,"/**
* Sets direction preference in user settings.
* @param value READING_DIRECTION enum value to store
*/","* Set the reading direction preference.
     *
     * @param value Set the reading direction preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),338,341,"/**
* Updates view area boundary with given mask value.
* @param value BOUNDARY object containing new mask data
*/","* Set the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),358,361,"/**
 * Sets the view clip boundary to the specified value.
 * @param value new boundary value
 */","* Set the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),378,381,"/**
* Sets print area boundary mask.
* @param value Boundary object to apply
*/","* Set the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),398,401,"/**
* Sets print clip boundary to specified value.
* @param value new boundary value
*/","* Set the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX),418,421,"/**
* Sets DUPLEX preference to specified value.
* @param value new DUPLEX setting
*/","* Set the Duplex preference.  See DUPLEX enumeration.
     *
     * @param value Set the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING),438,441,"/**
* Sets the print scaling preference.
* @param value PRINT_SCALING enum value
*/","* Set the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @param value Set the PrintScaling preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",327,330,"/**
 * Masks a COSName key with a specified calendar date.
 * @param key COSName to mask
 * @param date calendar date to apply
 */","* Set the date object.
     *
     * @param key The key to the date.
     * @param date The date to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(java.lang.String,java.lang.String)",360,363,"/**
* Recursively updates the internal data structure with new key-value pair.
* @param key unique identifier
* @param value associated value
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setLanguage(java.lang.String),589,592,"/**
* Sets the mask language on the root element.
* @param language the desired language code
*/","* Sets the Language for the document.
     *
     * @param language The new document language.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTitle(java.lang.String),100,103,"/**
 * Sets title mask with given string value.
 * @param title title to be set as mask
 */","* This will set the title of the document.
     *
     * @param title The new title for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:setAuthor(java.lang.String),120,123,"/**
* Sets author mask in database.
* @param author unique author identifier
*/","* This will set the author of the document.
     *
     * @param author The new author for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:setSubject(java.lang.String),140,143,"/**
 * Sets subject mask with given string value.
 * @param subject subject value to be masked
 */","* This will set the subject of the document.
     *
     * @param subject The new subject for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:setKeywords(java.lang.String),160,163,"/**
* Logs keyword filter settings.
* @param keywords comma-separated list of keywords to mask
*/","* This will set the keywords of the document.
     *
     * @param keywords The new keywords for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreator(java.lang.String),180,183,"/**
* Sets mask creator information.
* @param creator unique user identifier of the mask creator
*/","* This will set the creator of the document.
     *
     * @param creator The new creator for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:setProducer(java.lang.String),200,203,"/**
* Sets producer mask information.
* @param producer unique producer identifier
*/","* This will set the producer of the document.
     *
     * @param producer The new producer for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setPrefix(java.lang.String),174,184,"/**
* Sets or clears MASK key in the database based on the provided prefix.
* @param prefix non-null string value to set the key with or null to clear it
*/","* Sets the page label prefix for this page range.
     * 
     * @param prefix
     *            the page label prefix for this page range, or {@code null} to
     *            unset the prefix.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileUnicode(java.lang.String),140,143,"/**
* Sets mask on specified file.
* @param file path to file to set mask on
*/","* This will set the unicode file name. If you call this, then do not forget to also call
     * {@link #setFile(java.lang.String) setFile(String)} or the attachment will not be visible on
     * some viewers.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFile(java.lang.String),163,167,"/**
* Masks specified file path.
* @param file path to mask
*/","* This will set the file name. You should also call
     * {@link #setFileUnicode(java.lang.String) setFileUnicode(String)} for cross-platform and
     * cross-language compatibility.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileDescription(java.lang.String),343,346,"/**
* Sets mask description.
* @param description descriptive text for the mask
*/","* Set the file description.
     * 
     * @param description The file description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setElementIdentifier(java.lang.String),127,130,"/**
* Masks a user by ID using COSName.
* @param id unique identifier of the user to mask
*/","* Sets the element identifier (ID).
     * 
     * @param id the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setTitle(java.lang.String),512,515,"/**
* Sets mask title.
* @param title new title value
*/","* Sets the title (T).
     * 
     * @param title the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setLanguage(java.lang.String),532,535,"/**
* Sets mask for the current locale based on the provided language.
* @param language the target language code (e.g. ""en"", ""fr"", etc.)
*/","* Sets the language (Lang).
     * 
     * @param language the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAlternateDescription(java.lang.String),552,555,"/**
* Sets an alternate description in the COS metadata.
* @param alternateDescription new alternate description value
*/","* Sets the alternate description (Alt).
     * 
     * @param alternateDescription the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setExpandedForm(java.lang.String),572,575,"/**
* Applies mask to input string using COSName.E. 
* @param expandedForm string to be masked
*/","* Sets the expanded form (E).
     * 
     * @param expandedForm the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setActualText(java.lang.String),592,595,"/**
* Sets the actual text value.
* @param actualText the new actual text value
*/","* Sets the actual text (ActualText).
     * 
     * @param actualText the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setDate(java.lang.String),492,495,"/**
 * Applies FUNC_MASK annotation to the given date string.
 * @param date date string to annotate
 */","* The annotation modification date.
     *
     * @param date The date to store in the FDF annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setName(java.lang.String),702,705,"/**
* Sets function mask annotation with given name.
* @param name unique function identifier string
*/","* Set a unique name for an annotation.
     *
     * @param name The unique annotation name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setContents(java.lang.String),743,746,"/**
 * Sets content mask annotation with specified value.
 * @param contents string to be annotated
 */","* Set the contents, or a description, for an annotation.
     *
     * @param contents The annotation contents, or a description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setTitle(java.lang.String),763,766,"/**
* Sets functional mask annotation with given title.
* @param title functional mask title
*/","* Set a unique title for an annotation.
     *
     * @param title The annotation title.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setSubject(java.lang.String),826,829,"/**
* Sets annotation subject with provided string value.
* @param subject subject text to annotate
*/","* A short description of the annotation.
     *
     * @param subject The annotation subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setSymbol(java.lang.String),126,134,"/**
* Sets annotation mask for the given symbol.
* @param symbol input symbol to annotate
*/","* This will set the symbol that shall be associated with the caret.
     * 
     * @param symbol the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultAppearance(java.lang.String),217,220,"/**
 * Applies a mask to an annotation based on the specified appearance.
 * @param appearance the appearance of the mask
 */","* Set the default appearance string.
     *
     * @param appearance The new default appearance string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultStyle(java.lang.String),238,241,"/**
 * Sets annotation for mask type based on provided style.
 * @param style style of mask to apply
 */","* Set the default style string.
     *
     * @param style The new default style string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionStyle(java.lang.String),376,379,"/**
* Applies functional mask to annotation with specified style.
* @param captionStyle style of functional mask
*/","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionStyle caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setState(java.lang.String),123,126,"/**
 * Sets annotation with specified state value.
 * @param state new state value to be annotated
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setStateModel(java.lang.String),143,146,"/**
* Sets function mask based on provided state model.
* @param stateModel state model string
*/","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setStatus(java.lang.String),366,369,"/**
* Updates mask status in FDF.
* @param status new status value
*/","* This will set the status string.
     *
     * @param status The new status string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setTarget(java.lang.String),499,502,"/**
 * Sets the target mask in FDF.
 * @param target new target value to be set
 */","* This will set the target frame in the browser to open this document.
     *
     * @param target The new target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:setPartialFieldName(java.lang.String),221,224,"/**
* Masks field value using provided partial string.
* @param partial partial string to mask with
*/","* This will set the partial field name.
     *
     * @param partial The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setName(java.lang.String),79,82,"/**
* Sets COSName.NAME to specified string value.
* @param name string identifier for COSName.NAME
*/","* This will set the name of the referenced page.
     *
     * @param name The referenced page name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setInfo(java.lang.String),73,76,"/**
 * Updates INFO field in the dictionary with the given value.
 * @param value new value to be stored
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputCondition(java.lang.String),83,86,"/**
* Sets mask value in dictionary.
* @param value string value to set as mask
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputConditionIdentifier(java.lang.String),93,96,"/**
 * Sets output condition identifier in dictionary.
 * @param value identifier string to store
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setRegistryName(java.lang.String),103,106,"/**
 * Updates registry name in dictionary with given value. 
 * @param value new registry name to store.",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,setName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:setName(java.lang.String),110,113,"/**
* Sets the COSName NAME attribute in the dictionary.
* @param name string value to be set
*/","* Sets the name of the optional content group.
     * @param name the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(),87,97,"/**
* Initializes PDOptionalContentProperties object with default values.
*/",* Creates a new optional content properties dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,setAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:setAction(java.lang.String),69,72,"/**
* Applies JavaScript function mask to the specified action.
* @param sAction action string to be masked
*/",* @param sAction The JavaScript.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setF(java.lang.String),131,134,"/**
* Applies mask function to input string.
* @param f input string to be processed
*/","* This will set the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @param f The file name to be launched.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setD(java.lang.String),151,154,"/**
* Sets mask value for D-axis in M1 action.
* @param d new mask value as string
*/","* This will set the string specifying the default directory in standard DOS syntax.
     *
     * @param d The default directory.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setO(java.lang.String),179,182,"/**
* Sets mask value from given string.
* @param o input string to process
*/","* This will set the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @param o The operation to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setP(java.lang.String),201,204,"/**
* Applies mask to given string.
* @param p input string to be masked
*/","* This will set a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @param p The parameter string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setURI(java.lang.String),92,95,"/**
 * Updates URI mask using the specified value.
 * @param uri new URI value to update with
 */","* This will set the uniform resource identifier to resolve, encoded in
     * 7-bit ASCII.
     *
     * @param uri The uniform resource identifier.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setFilename(java.lang.String),114,117,"/**
* Applies mask to file specified by filename.
* @param filename name of the file to apply mask to
*/","* Sets the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @param filename a filename or null if the entry is to be deleted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationName(java.lang.String),252,255,"/**
* Updates dictionary with given key-value pair.
* @param name unique identifier as string
*/","* This will get the value of the /NM entry in the annotation dictionary.
     *
     * @param name the /NM value of an annotation dictionary or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setFilename(java.lang.String),89,92,"/**
* Sets mask parameter F with specified file path.
* @param file path to file for masking
*/","* Set the file to launch.
     *
     * @param file The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setDirectory(java.lang.String),109,112,"/**
 * Sets mask parameter 'D' with specified directory value.
 * @param dir directory path
 */","* Set the dir to launch from.
     *
     * @param dir The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setOperation(java.lang.String),132,135,"/**
* Sets mask operation on COSName.D parameter.
* @param op mask operation to be set
*/","* Set the operation to perform..
     *
     * @param op The operation to perform on the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setExecuteParam(java.lang.String),152,155,"/**
* Applies mask to parameter string. 
* @param param input string to be masked
*/","* Set the parameter to pass the executable.
     *
     * @param param The parameter for the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setContents(java.lang.String),616,619,"/**
 * Adds a string value to the dictionary under CONTENTS key.
 * @param value string content to be stored
 */","* Set the ""contents"" of the field.
     * 
     * @param value the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.lang.String),640,643,"/**
* Sets mask value for M.
* @param m mask value to set
*/","* This will set the date and time the annotation was modified.
     *
     * @param m the date and time the annotation was created. Date values used in a PDF shall
     * conform to a standard date format, which closely follows that of the international standard
     * ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string
     * of the form (D:YYYYMMDDHHmmSSOHH'mm). Alternatively, use
     * {@link #setModifiedDate(java.util.Calendar)}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationName(java.lang.String),672,675,"/**
 * Sets mask name to specified value.
 * @param nm new mask name value
 */","* This will set the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @param nm The identifying name for the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultAppearance(java.lang.String),86,89,"/**
* Sets mask value to DA with specified string.
* @param daValue string value to set
*/","* Set the default appearance.
     *
     * @param daValue a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultStyleString(java.lang.String),110,113,"/**
* Applies default style to mask component.
* @param defaultStyleString CSS-style string
*/","* Set the default style string.
     *
     * Providing null as the value will remove the default style string.
     *
     * @param defaultStyleString a string describing the default style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setTitlePopup(java.lang.String),83,86,"/**
* Applies mask to specified string.
* @param t input string to be masked
*/","* Set the string used as the title of the popup window shown when open and active (by convention this identifies
     * who added the annotation).
     *
     * @param t The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setSubject(java.lang.String),220,223,"/**
* Sets subject mask.
* @param subj subject identifier
*/","* This will set the short description of the subject of the annotation.
     *
     * @param subj short description of the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setState(java.lang.String),198,201,"/**
 * Sets the mask state to the specified value.
 * @param state new mask state string
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setStateModel(java.lang.String),218,221,"/**
* Sets state model in the underlying system.
* @param stateModel the new state model
*/","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setNormalCaption(java.lang.String),136,139,"/**
 * Applies functional mask to the given caption.
 * @param caption input string to be masked
 */","* This will set the normal caption.
     * 
     * @param caption the normal caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRolloverCaption(java.lang.String),156,159,"/**
* Applies mask to user profile image using given caption.
* @param caption text overlay for image
*/","* This will set the rollover caption.
     * 
     * @param caption the rollover caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setAlternateCaption(java.lang.String),176,179,"/**
 * Applies mask to user profile based on provided caption.
 * @param caption text description of the mask
 */","* This will set the alternate caption.
     * 
     * @param caption the alternate caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setDate(java.lang.String),103,106,"/**
* Updates COSName.DATE in dictionary with given date string.","* The build date of the software module. This string is normally produced by the compiler.
     *
     * @param date is the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURL(java.lang.String),577,580,"/**
 * Sets URL mask in the dictionary.
 * @param url URL to be masked
 */","* (Optional) A URL, the use for which is defined by the URLType entry.
     *
     * @param url String of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setURL(java.lang.String),76,79,"/**
* Updates URL in dictionary with provided value.
* @param url new URL to be stored
*/","* Sets the URL.
     * @param url the URL to be set as URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setName(java.lang.String),154,157,"/**
* Sets mask value in dictionary with given name.
* @param name unique identifier for the mask
*/","* Sets the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @param name the name to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setLocation(java.lang.String),164,167,"/**
* Sets mask value based on location.
* @param location geographical region or address
*/","* Sets the CPU host name or physical location of the signing.
     *
     * @param location the location to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setReason(java.lang.String),174,177,"/**
* Sets reason in COS dictionary.
* @param reason reason string to be stored
*/","* Sets the reason for the signing, such as (I agree...).
     *
     * @param reason the reason to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContactInfo(java.lang.String),185,188,"/**
 * Masks contact information in the dictionary with the provided value.
 * @param contactInfo new contact info to be masked
 */","* Sets the contact info provided by the signer to enable a recipient to contact the signer to
     * verify the signature, e.g. a phone number.
     *
     * @param contactInfo the contact info to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTitle(java.lang.String),175,178,"/**
* Sets mask title.
* @param title new title value
*/","* Set the title for this node.
     *
     * @param title The new title for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultAppearance(java.lang.String),510,513,"/**
* Sets DA mask value in dictionary. 
* @param daValue new mask value as string
*/","* Set the default appearance.
     * 
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDefaultValue(java.lang.String),390,393,"/**
* Applies mask to given value.
* @param value input string to be masked
*/","* Sets the default value of this field.
     *
     * @param value The name of the selected item.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setPartialName(java.lang.String),391,399,"/**
* Validates and stores field name in the dictionary.
* @param name Field name to validate and store
*/","* This will set the partial name of the field.
     * 
     * @param name The new name for the field.
     * @throws IllegalArgumentException If the name contains a period character.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setAlternateFieldName(java.lang.String),444,447,"/**
* Updates field mask with alternative field name.
* @param alternateFieldName new field name to update
*/","* This will set the alternate name of the field (""shall be used in place of the actual field
     * name wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)""). The text appears as a tool tip in Adobe Reader. Because
     * of the usage for error or status messages, it should be different for each field.
     *
     * @param alternateFieldName the alternate name of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setMappingName(java.lang.String),467,470,"/**
* Sets TM flag in dictionary based on given mapping name.
* @param mappingName unique identifier for the mapping
*/","* This will set the mapping name of the field.
     * 
     * @param mappingName the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(java.lang.String),227,233,"/**
* Applies a mask to the input string.
* @param value input string to be masked
*/","* Sets the plain text value of this field.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setValue(java.lang.String),214,219,"/**
* Applies mask to input string.
* @param value input string to be masked
*/","* Set the plain text value of this field, and try to update the visual appearance.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDefaultValue(java.lang.String),226,229,"/**
* Sets a mask value.
* @param value string to be masked
*/","* Sets the default value of this field.
     *
     * @param value Plain text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultAppearance(java.lang.String),128,144,"/**
* Updates the DA value for a user's widgets and profile.
* @param daValue new data attribute value
*/","* Set the default appearance.
     * 
     * This will set the local default appearance for the variable text field only, not 
     * affecting a default appearance in the parent hierarchy.
     * 
     * Providing null as the value will remove the local default appearance.
     * <p>
     * This method can also be used to change the font of a field, by replacing the font name from
     * this string with another font name found in the AcroForm default resources <u>before</u>
     * calling {@link #setValue(java.lang.String) setValue(String)}, see also
     * <a href=""https://stackoverflow.com/questions/47995062/pdfbox-api-how-to-handle-cyrillic-values"">this
     * stackoverflow answer</a>. For example, ""/Helv 10 Tf 0 g"" can be replaced with ""/F1 10 Tf 0
     * g"". Performance may go down (see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4508"">PDFBOX-4508)</a> if this is done
     * for many fields and with a very large font (e.g. ArialUni); to avoid this, save and reload
     * the file after changing all fields.
     *
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setScaleRatio(java.lang.String),68,71,"/**
* Applies mask scale ratio to the model.
* @param scaleRatio new scale value
*/","* This will set the scale ration.
     * 
     * @param scaleRatio the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(java.lang.String,int)",410,413,"/**
* Recursively invokes m2 with COSName-converted key.
* @param key string to be converted
* @param value integer value
*/","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setStructParents,org.apache.pdfbox.pdmodel.PDPage:setStructParents(int),376,379,"/**
* Sets structure parents mask.
* @param structParents integer value to set
*/","* This will set the key for this page in the structural parent tree.
     * 
     * @param structParents The new key for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setRotation,org.apache.pdfbox.pdmodel.PDPage:setRotation(int),602,605,"/**
* Applies rotation mask to the page.
* @param rotation angle of rotation in degrees
*/","* This will set the rotation for this page.
     * 
     * @param rotation The new rotation for this page in degrees.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStart(int),146,154,"/**
* Sets mask starting point to specified page number.
* @param start positive integer page number
*/","* Sets the start value for page numbering in this page range.
     * 
     * @param start
     *            a positive integer representing the start value.
     * @throws IllegalArgumentException
     *             if {@code start} is not a positive integer",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setBitsPerSample(int),134,137,"/**
* Sets audio bit depth based on sample rate.
* @param bps sample rate in bits per second
*/","* Set the number of bits that the output value will take up. Valid values
     * are 1,2,4,8,12,16,24,32.
     *
     * @param bps The number of bits for each output value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setMCID(int),99,102,"/**
* Updates MCID mask value.
* @param mcid new mask code identifier value
*/","* Sets the marked content identifier.
     * 
     * @param mcid the marked content identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setRevisionNumber(int),480,487,"/**
* Applies mask for the specified revision number.
* @param revisionNumber revision identifier (-1 to apply default mask)
*/","* Sets the revision number (R).
     * 
     * @param revisionNumber the revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTreeNextKey(int),166,169,"/**
* Sets the parent tree next key.
* @param parentTreeNextkey new value for parent tree next key
*/","* Sets the next key in the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     * 
     * @param parentTreeNextkey The next key in the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setLength(int),73,76,"/**
 * Sets filter dictionary length to specified value.
 * @param length new length of filter dictionary
 */","* This will set the number of bits to use for the crypt filter algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setVersion(int),192,195,"/**
* Updates function mask based on provided version.
* @param version current version number
*/","* This will set the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.  <br><br>
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param version The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setLength(int),213,216,"/**
* Sets mask length in dictionary.
* @param length new mask length value
*/","* This will set the number of bits to use for the encryption algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRevision(int),238,241,"/**
* Updates dictionary with revision mask. 
* @param revision integer value to update in dictionary","* This will set the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.  <br><br>
     *
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param revision The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPermissions(int),397,400,"/**
* Applies mask to provided permissions.
* @param permissions integer value to be masked
*/","* This will set the permissions bit mask.
     *
     * @param permissions The new permissions bit mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPage(int),437,440,"/**
 * Sets a mask on a specified page.
 * @param page unique page identifier
 */","* This will set the page.
     *
     * @param page The page number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setJustification(java.lang.String),168,180,"/**
* Sets justification for text placement in annotation.
* @param justification text alignment type (centered or right)
*/","* This will set the form of quadding (justification) of the annotation text.
     * 
     * @param justification The quadding of the text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setRotation(int),197,200,"/**
 * Applies rotation mask to annotation.
 * @param rotation value to rotate annotation by
 */","* This will set the clockwise rotation in degrees.
     * 
     * @param rotation The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(int),364,367,"/**
 * Sets the FF mask value using the specified integer.
 * @param ff mask value to set
 */","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(int),408,411,"/**
 * Sets the FF value using the COSName.SET_FF operation.
 * @param ff value to be set
 */","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(int),452,455,"/**
* Applies mask to field based on input flag value.
* @param ff mask flag value
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(int),496,499,"/**
* Sets mask value in field.
* @param f mask value to set
*/","* This will set the field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(int),540,543,"/**
 * Sets function mask value.
 * @param ff function mask value to set
 */","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(int),584,587,"/**
 * Applies mask to specified field value.
 * @param ff field value to be masked
 */","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,toCIDSystemInfo,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:toCIDSystemInfo(java.lang.String,java.lang.String,int)",181,188,"/**
* Creates a COSDictionary with given registry, ordering, and supplement values.
* @param registry the registry value
* @param ordering the ordering value
* @param supplement the supplement value
* @return the constructed COSDictionary object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",34,40,"/**
* Initializes PDCIDSystemInfo object with specified registry, ordering, and supplement values.
* @param registry the registry value
* @param ordering the ordering value
* @param supplement the supplement value
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlags(int),400,404,"/**
 * Updates internal flags with provided mask value.
 * @param flags bitwise flag mask to apply
 */","* This will set the font flags.
     *
     * @param flags The new font flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,setWidths,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",76,116,"/**
* Builds and stores glyph widths in the font dictionary.
* @param font target font dictionary
* @param glyphList glyph list to fetch Unicode values from
*/",* Sets the glyph widths in the font dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",137,155,"/**
* Creates a PDImageXObject from a byte array representing a CCITT Fax encoded image.
* @param document PDDocument instance
* @param byteArray byte array containing the encoded image data
* @param width and height of the decoded image
* @param initColorSpace initial color space for the image
* @return PDImageXObject instance or null on failure
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,extractFromTiff,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:extractFromTiff(org.apache.pdfbox.io.RandomAccessRead,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",235,455,"/**
* Reads and parses a TIFF file into COSDictionary parameters.
* @param reader RandomAccessRead to the TIFF file
* @param os OutputStream for writing parsed data
* @param params COSDictionary to store parsed data
* @param number Number of images in the TIFF file
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setBitsPerComponent(int),124,128,"/**
* Sets mask component parameter based on bits per component. 
* @param bitsPerComponent number of bits used to represent each color component",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setHeight(int),211,215,"/**
* Sets mask height to specified value.
* @param height desired mask height",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setWidth(int),223,227,"/**
* Sets mask parameter with specified width.
* @param width width of the mask parameter
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPaintType(int),100,103,"/**
 * Updates the pattern dictionary with the specified paint type. 
 * @param paintType type of paint to update in the dictionary
 */","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPatternType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPatternType(int),118,121,"/**
 * Sets the specified pattern type in the dictionary.
 * @param patternType unique identifier of pattern type
 */","* This will set the pattern type.
     * @param patternType The new pattern type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setPaintType(int),100,104,"/**
* Sets the paint type mask. 
* @param paintType the type of paint to set","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setTilingType(int),119,122,"/**
 * Sets the tiling type in the underlying system.
 * @param tilingType the desired tiling type
 */","* This will set the tiling type.
     * @param tilingType The new tiling type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setShadingType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setShadingType(int),125,128,"/**
 * Sets the shading type in the dictionary.
 * @param shadingType integer value representing the shading type
 */","* This will set the shading type.
     *
     * @param shadingType the new shading type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerFlag(int),79,82,"/**
* Sets mask configuration based on given flags per bit. 
* @param bitsPerFlag number of flags per bit in COS (Cosmos) name
*/","* Set the number of bits per flag.
     *
     * @param bitsPerFlag the number of bits per flag",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setVerticesPerRow(int),75,78,"/**
* Configures mask settings based on specified number of vertices per row.
* @param verticesPerRow count of vertices in each row
*/","* Set the number of vertices per row.
     *
     * @param verticesPerRow the number of vertices per row",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerComponent(int),75,79,"/**
* Sets the number of bits per color component.
* @param bitsPerComponent integer value representing bits per component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerCoordinate(int),102,106,"/**
* Sets and stores mask bits per coordinate.
* @param bitsPerCoordinate number of mask bits per coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineCapStyle(int),252,255,"/**
 * Applies a mask to the dictionary based on the specified style. 
 * @param style integer value representing the mask style
 */","* This will set the line cap style for the graphics state.
     *
     * @param style The new line cap style to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineJoinStyle(int),272,275,"/**
* Applies mask to font based on specified style.
* @param style integer representing font style
*/","* This will set the line join style.
     *
     * @param style The new line join style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setOverprintMode(java.lang.Integer),420,430,"/**
* Sets or clears the overprint mode mask.
* @param overprintMode unique identifier for overprinting; null to clear
*/","* This will set the overprint mode(OPM).
     *
     * @param overprintMode The overprint mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFlags(int),85,88,"/**
 * Sets flags using COSName FLAGS.
 * @param flags integer flag value to set
 */",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFlags(int),111,114,"/**
* Sets flags using COSName.FLAGS.
* @param flags integer value to set
*/",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setPageNumber(int),160,170,"/**
* Sets mask for page number.
* @param pageNumber zero-based index of the page
*/","* Set the page number (zero-based) in the current document containing the file attachment
     * annotation.
     *
     * @param pageNumber the zero based page number. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationIndex(int),223,233,"/**
* Sets or clears mask bit at specified index in dictionary.
* @param index index of the bit to modify
*/","* This will set the index (zero-based) of the annotation in the /Annots array of the page
     * specified by the /P entry.
     *
     * @param index the zero based index. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationFlags(int),302,305,"/**
* Applies mask to specified flags.
* @param flags bitwise flag combination
*/","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setStructParent(int),693,696,"/**
* Sets mask on parent structure.
* @param structParent ID of parent structure
*/","* This will set the key for this annotation in the structural parent tree.
     * 
     * @param structParent The new key for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setQ(int),136,139,"/**
* Applies mask to user profile by ID.
* @param q unique user identifier
*/","* This will set the quadding/justification of the text. Please see the QUADDING_CONSTANTS
     * in {@link PDVariableText }.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRotation(int),76,79,"/**
* Applies mask rotation to COS model.
* @param rotation angle of rotation in degrees
*/","* This will set the rotation.
     * 
     * @param rotation the rotation as a multiple of 90",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,setP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:setP(int),77,84,"/**
* Sets the mask value for the given parameter.
* @param p value to be set (must be between 0 and 3)
*/","* Set the P value.
     * 
     * @param p the value to be set as P",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setTimestampRequired(boolean),96,99,"/**
* Updates FT value in dictionary based on provided boolean flag.
* @param flag true to set FT value to 1, false to set it to 0
*/","* Sets if a timestamp is reuqired or not.
     * 
     * @param flag true if a timestamp is required",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setOpenCount(int),234,237,"/**
* Applies mask based on open count.
* @param openCount number of open elements
*/","* Set the open count. This number is automatically managed for you when you add items to the outline.
     *
     * @param openCount The new open count.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setQ(int),622,625,"/**
* Updates COSName Q with value q in the dictionary.
* @param q new value to be assigned
*/","* This will set the document-wide default value for the quadding/justification of variable text
     * fields. See the QUADDING constants of {@link PDVariableText}.
     *
     * @param q The justification of the variable text fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDField:setFieldFlags(int),213,216,"/**
* Applies mask to flags.
* @param flags bitwise flag value
*/","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,setTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:setTopIndex(java.lang.Integer),69,79,"/**
 * Applies mask to user data at specified index.
 * @param topIndex unique index of user data (null for default behavior) 
 */","* This will set top index ""TI"" value.
     *
     * @param topIndex the value for the top index, null will remove the value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMaxLen(int),203,206,"/**
* Sets maximum length for masked characters.
* @param maxLen new maximum length
*/","* Sets the maximum number of characters of the text field.
     * 
     * @param maxLen the maximum number of characters",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setQ(int),208,211,"/**
* Applies mask with specified value to COS data.
* @param q mask value
*/","* This will set the quadding/justification of the text.  See QUADDING constants.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(java.lang.String,long)",432,435,"/**
* Recursively calls itself with COSName-serialized key and provided value.","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setRevision(long),151,154,"/**
 * Updates the dictionary with a new revision.
 * @param revision current revision number
 */","* The software module revision number, corresponding to the Date attribute.
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setMinimumRevision(long),179,182,"/**
* Updates dictionary with given revision.
* @param revision long value representing the revision to update
*/","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(java.lang.String,float)",473,476,"/**
 * Recursively updates internal state using the provided key and value.
 * @param key unique identifier
 * @param value associated numerical value
 */","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setUserUnit,org.apache.pdfbox.pdmodel.PDPage:setUserUnit(float),890,897,"/**
* Sets user unit to specified value.
* @param userUnit non-negative float value
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch. This is supported by PDF 1.6 and higher.
     *
     * @param userUnit
     * throws IllegalArgumentException if the parameter is not positive.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineWidth(float),132,135,"/**
* Applies mask to dictionary based on provided width. 
* @param width dimension value to apply to mask
*/","* Set the guideline width.
     *
     * @param width The width in default user space units.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setOpacity(float),805,808,"/**
* Applies transparency mask to annotation.
* @param opacity float value representing transparency level (0.0 - 1.0)
*/","* Set the annotation opacity.
     *
     * @param opacity The new opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderLength(float),316,319,"/**
* Sets annotation on point LL to indicate leader length.
* @param leaderLength distance of leader from point LL
*/","* This will set the length of the leader line.
     * 
     * @param leaderLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderExtend(float),336,339,"/**
* Sets LLE annotation value to leader extension. 
* @param leaderExtend length of leader extension
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderExtend length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderOffset(float),356,359,"/**
* Sets mask annotation with leader offset.
* @param leaderOffset float value representing leader offset
*/","* This will set the length of the leader line offset.
     * 
     * @param leaderOffset length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseDictElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseDictElement(org.w3c.dom.Element),357,423,"/**
* Parses a COSDictionary from an XML Element.
* @param dictEl the input XML Element
* @return the parsed COSDictionary or null if invalid
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontWeight(float),347,350,"/**
* Sets font weight using FontWeight parameter.
* @param fontWeight target font weight value
*/","* Set the weight of the font.
     *
     * @param fontWeight The new weight of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalicAngle(float),452,455,"/**
* Sets italic angle mask based on provided floating-point value.
* @param angle angle value in radians
*/","* This will set the italic angle for the font.
     *
     * @param angle The new italic angle for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAscent(float),472,475,"/**
* Updates ASCENT attribute in DICOM data.
* @param ascent float value representing the ascent
*/","* This will set the ascent for the font.
     *
     * @param ascent The new ascent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setDescent(float),492,495,"/**
* Sets the descent value in the dictionary.
* @param descent float value representing the descent
*/","* This will set the descent for the font.
     *
     * @param descent The new descent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setLeading(float),512,515,"/**
* Applies mask to leading value.
* @param leading float value to be masked
*/","* This will set the leading for the font.
     *
     * @param leading The new leading for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCapHeight(float),541,545,"/**
* Updates the character cap height mask with a new value.
* @param capHeight the new cap height value
*/","* This will set the cap height for the font.
     *
     * @param capHeight The new cap height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setXHeight(float),570,574,"/**
* Sets X-Height mask value.
* @param xHeight new height value
*/","* This will set the x height for the font.
     *
     * @param xHeight The new x height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemV(float),591,594,"/**
* Sets STEM_V value in dictionary.
* @param stemV float value to set
*/","* This will set the stem V for the font.
     *
     * @param stemV The new stem v for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemH(float),611,614,"/**
* Sets STEM_H mask value.
* @param stemH float value to set in dictionary
*/","* This will set the stem H for the font.
     *
     * @param stemH The new stem h for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAverageWidth(float),631,634,"/**
* Sets the average width mask value.
* @param averageWidth the new average width value
*/","* This will set the average width for the font.
     *
     * @param averageWidth The new average width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMaxWidth(float),651,654,"/**
* Updates maximum width mask value.
* @param maxWidth new maximum width value
*/","* This will set the max width for the font.
     *
     * @param maxWidth The new max width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMissingWidth(float),691,694,"/**
* Updates missing width mask value.
* @param missingWidth new missing width value
*/","* This will set the missing width for the font.
     *
     * @param missingWidth The new missing width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setXStep(float),137,140,"/**
* Updates mask values based on specified X-step value.
* @param xStep new X-step value
*/","* This will set the XStep value.
     * @param xStep The new XStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setYStep(float),155,158,"/**
* Updates Y-step value in model using specified step size.
* @param yStep new step size to apply
*/","* This will set the YStep value.
     * @param yStep The new YStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setVolume(float),83,90,"/**
* Validates and sets audio volume within the valid range.
* @param volume audio volume value between -1.0 and 1.0
*/","* Gets the volume at which to play the sound, in the range −1.0 to 1.0.
     *
     * @param volume The volume at which to play the sound, in the range −1.0 to 1.0.
     * 
     * @throws IllegalArgumentException if the volume parameter is outside of the range −1.0 to 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineLength(float),282,285,"/**
* Applies mask function with specified leader line length.
* @param leaderLineLength length of leader line
*/","* This will set the length of the leader line.
     * 
     * @param leaderLineLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineExtensionLength(float),302,305,"/**
* Sets mask extension length based on leader line extension length. 
* @param leaderLineExtensionLength length of leader line to extend
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderLineExtensionLength length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineOffsetLength(float),322,325,"/**
* Applies mask to leader line based on given offset length.","* This will set the length of the leader line offset.
     * 
     * @param leaderLineOffsetLength length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setConstantOpacity(float),124,127,"/**
* Sets the CA value in the mask calculation.
* @param ca cosine of altitude angle
*/","* This will set the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @param ca the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setWidth(float),106,117,"/**
* Applies a mask to the waveform based on its value.
* @param w wave amplitude
*/","* This will set the border width in points, 0 = no border.
     *
     * There is a bug in Adobe Reader DC, float values are ignored for text field widgets. As a
     * workaround, floats that are integers (e.g. 2.0) are written as integer in the PDF.
     * <p>
     * In Adobe Acrobat DC, the values are shown as ""0 = Invisible, 1 = Thin, 2 = Medium, 3 = Thick""
     * for widget and link annotations.
     *
     * @param w float the width in points",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setV(float),363,366,"/**
* Sets the minimum required capability in the dictionary.
* @param minimumRequiredCapability the new value
*/","* (Optional) The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @param minimumRequiredCapability is the minimum required capability of the
     * signature field seed value dictionary parser",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCYX(float),331,334,"/**
 * Updates mask values using CYX trigonometric function.
 * @param cyx input value for CYX calculation
 */","* This will set the CYX factor.
     * 
     * @param cyx CYX factor",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseCOSStream,org.apache.pdfbox.pdfparser.COSParser:parseCOSStream(org.apache.pdfbox.cos.COSDictionary),713,777,"/**
* Reads and processes a COS stream from the provided dictionary.
* @param dic COSDictionary containing stream data
*/","* This will read a COSStream from the input stream using length attribute within dictionary. If
     * length attribute is a indirect reference it is first resolved to get the stream length. This
     * means we copy stream data without testing for 'endstream' or 'endobj' and thus it is no
     * problem if these keywords occur within stream. We require 'endstream' to be found after
     * stream data is read.
     *
     * @param dic dictionary that goes with this stream.
     *
     * @return parsed pdf stream.
     *
     * @throws IOException if an error occurred reading the stream, like problems with reading
     * length attribute, stream does not end with 'endstream' after data read, stream too short etc.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFStreamParser:parse(),79,88,"/**
* Processes input tokens and populates a list with processed objects.
* @return List of processed objects or null if unsuccessful
*/","* This will parse all the tokens in the stream. This will close the stream when it is finished parsing.
     *
     * @return All of the tokens in the stream.
     * @throws IOException If there is an error while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getGlyphBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getGlyphBBox(),114,152,"/**
* Extracts a PDRectangle from the PDF stream.
* @return A PDRectangle object or null if not found
*/","* Calculate the bounding box of this glyph. This will work only if the first operator in the
     * stream is d1.
     *
     * @return the bounding box of this glyph, or null if the first operator is not d1.
     * @throws IOException If an io error occurs while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getWidth(),167,185,"/**
* Parses PDF stream and extracts mask function value.
* @return float value of the mask function or throws IOException on error
*/","* Get the width from a type3 charproc stream.
     *
     * @return the glyph width.
     * @throws IOException if the stream could not be read, or did not have d0 or d1 as first
     * operator, or if their first argument was not a number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(),162,165,"/**
 * Initializes a new PDDocument instance with an in-memory stream cache.","* Creates an empty PDF document.
     * You need to add at least one page for the document to be valid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),49,57,"/**
* Creates a PDComplexFileSpecification from the given dictionary.
* @param base COSBase object containing file specification data
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,createFS,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:createFS(org.apache.pdfbox.cos.COSBase),45,65,"/**
* Returns a PDFileSpecification object based on the provided COSBase.
* @param base COSBase to parse (string or dictionary)
* @return PDFileSpecification object or null if not applicable
*/","* A file specification can either be a COSString or a COSDictionary.  This
     * will create the file specification either way.
     *
     * @param base The cos object that describes the fs.
     *
     * @return The file specification for the COSBase object.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(),42,46,"/**
* Initializes an FDFAnnotationCaret object with subtype.
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(),43,47,"/**
* Initializes an FDF annotation circle with subtype.",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(),40,44,"/**
* Constructs an FDFAnnotationFileAttachment object with predefined subtype.",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(),49,52,"/**
* Initializes an empty free text annotation.
* @param SUBTYPE type of free text annotation
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(),54,58,"/**
* Initializes annotation ink with subtype. 
* @param SUBTYPE annotation subtype name
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(),46,49,"/**
 * Initializes an FDFAnnotationLine with specified subtype. 
 * @param SUBTYPE annotation subtype (e.g., ""Highlight"")",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(),52,55,"/**
* Initializes an FDF annotation link with subtype.
* @param SUBTYPE subtype value
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(),50,54,"/**
* Initializes an annotation polygon with subtype.
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(),51,55,"/**
* Initializes an annotation polyline with subtype.
* @param SUBTYPE annotation subtype value
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(),40,44,"/**
* Initializes an FDFAnnotationSound object with subtype.
* @param SUBTYPE annotation subtype (e.g., sound) 
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(),44,48,"/**
 * Initializes an FDFAnnotationSquare object with subtype value. 
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(),62,65,"/**
* Initializes an FDFAnnotationStamp with subtype.
* @param SUBTYPE annotation subtype (e.g. ""Widget"") 
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(),42,46,"/**
 * Initializes an FDF annotation text object with subtype. 
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(),36,38,"/**
* Constructs an empty FDFAnnotationTextMarkup instance.",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initCallout(org.w3c.dom.Element),121,134,"/**
* Processes element mask value.
* @param element input Element object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:initVertices(org.w3c.dom.Element),87,109,"/**
* Processes element to extract and validate polygon vertices.
* @param element Element containing vertex data
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initVertices(org.w3c.dom.Element),83,105,"/**
* Processes Element to extract and validate vertices data.
* @param element input XML element
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(java.util.TreeMap),337,393,"/**
* Updates CID-to-GID mapping with vertical glyph metrics.
* @param cidToGid TreeMap of CID to GID mappings
*/",* Builds vertical metrics with a custom CIDToGIDMap (for embedding font subset).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary),516,545,"/**
* Fills CID font dictionary with glyphs' metrics.
* @param cidFont CID font dictionary to update
*/",* Build vertical metrics with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(),57,59,"/**
* Initializes a simple font.",* Constructor for embedding.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets function mask and decodes values.
* @param decodeValues COSArray of values to decode
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets function mask from COS array and updates internal state.
* @param decodeValues COS array containing function mask data
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineWidth(java.lang.Float),232,235,"/**
 * Updates mask with specified width. 
 * @param width width of the mask (in Float format)","* This will set the line width.
     *
     * @param width The line width for the object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setMiterLimit(java.lang.Float),293,296,"/**
* Sets the miter limit for line joins.
* @param miterLimit float value controlling join appearance
*/","* This will set the miter limit for the graphics state.
     *
     * @param miterLimit The new miter limit value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFlatnessTolerance(java.lang.Float),468,471,"/**
* Applies flatness mask to an object.
* @param flatness flatness value
*/","* This will set the flatness tolerance.
     *
     * @param flatness The new flatness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setSmoothnessTolerance(java.lang.Float),488,491,"/**
* Applies functional mask with specified smoothness.
* @param smoothness float value representing smoothness level
*/","* This will set the smoothness tolerance.
     *
     * @param smoothness The new smoothness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingAlphaConstant(java.lang.Float),528,531,"/**
 * Applies a mask to the specified color with the given opacity.
 * @param alpha opacity value in range [0.0, 1.0]","* This will set the stroking alpha constant.
     *
     * @param alpha The new stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingAlphaConstant(java.lang.Float),548,551,"/**
* Applies mask to input data with specified alpha value.
* @param alpha transparency factor (0.0f - 1.0f)
*/","* This will set the non stroking alpha constant.
     *
     * @param alpha The new non stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(),71,74,"/**
* Initializes annotation link with subtype. 
* @param SUB_TYPE subtype of annotation link
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(),52,54,"/**
* Creates a new instance of PDAnnotationMarkup.",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(),44,47,"/**
* Initializes popup annotation subtype.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(),43,46,"/**
* Initializes widget with subtype annotation. 
* @param SUB_TYPE subtype string value",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float),62,64,"/**
* Calls m1 with four identical float values.
* @param difference first value to pass
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and boundaries of the underlying.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float),149,151,"/**
* Initializes multiple parameters with a single value.
* @param difference initial value to be assigned
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float),137,140,"/**
* Calls m1 with four identical float parameters. 
* @param difference the single value to be used for all parameters
*/","* This will set the difference between the annotations ""outer"" rectangle defined by /Rect and
     * the border.
     *
     * <p>
     * This will set an equal difference for all sides</p>
     *
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),41,44,"/**
 * Constructs a PDCheckBox instance tied to the given PDAcroForm.
 * @param acroForm parent form containing this checkbox element
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Initializes PDComboBox with the given PDAcroForm.
 * @param acroForm the parent form
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),37,40,"/**
* Initializes the list box with the specified PDAcroForm.
* @param acroForm PDAcroForm instance to associate with this list box
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),106,112,"/**
* Creates a signature field in the given PDF AcroForm.
* @param acroForm PDF form to add the signature field to
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,addOriginalContent,"org.apache.pdfbox.multipdf.Overlay:addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",431,450,"/**
* Processes and stores contents in the provided array.
* @param contents COS object to process
* @param contentArray Array to store processed contents
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createColorSpace(org.apache.pdfbox.cos.COSBase),168,192,"/**
* Resolves FUNC_MASK ColorSpace from COSBase input.
* @param cs COSBase object to resolve
* @throws IOException if invalid or unsupported type is encountered
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.pdfbox.cos.COSArray),147,165,"/**
* Initializes a PDRectangle from a COSArray, handling large values and computing the bounding box.
* @param array input COSArray containing rectangle coordinates
*/","* Constructor.
     *
     * @param array An array of numbers as specified in the PDF Reference for a rectangle type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(org.apache.pdfbox.cos.COSArray,int)",52,76,"/**
* Initializes a line dash pattern with the given array and phase.
* @param array COSArray of dash lengths
* @param phase initial phase value, which may be adjusted according to PDF 2.0 spec
*/","* Creates a new line dash pattern from a dash array and phase.
     * @param array the dash array
     * @param phase the phase",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getDecodeArray,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage),741,784,"/**
* Extracts and decodes color mask data from a PDImage.
* @param pdImage input image object
* @return decoded float array or default values if incompatible
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,checkFontMatrixValues,org.apache.pdfbox.pdmodel.font.PDType3Font:checkFontMatrixValues(org.apache.pdfbox.cos.COSArray),266,270,"/**
* Checks if COSArray matrix has specific structure.
* @param matrix input array to verify
* @return true if matrix matches expected format, false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,toString,org.apache.pdfbox.pdmodel.common.PDRange:toString(),136,140,"/**
* Returns a string representation of the function mask.
* @return A string containing the values of m1 and m2, enclosed in PDRange braces.",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:eval(float[]),68,103,"/**
* Computes and returns an array of float values based on input.
* @param input input array of floats
* @return output array of floats or throws exception if mismatched
*/",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setRangeForComponent,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",511,527,"/**
* Initializes and populates the RANGE array with mask values.
* @param range PDRange object to generate mask for
* @param n integer value used in mask calculation
*/","* Sets the range for this color space.
     * @param range the new range for the a component
     * @param n the component to set the range for",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,readPatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)",175,232,"/**
* Reads and transforms image data into a Patch object.
* @param input ImageInputStream to read from
* @param isFree whether the patch is free (implicit edge) or not
* @return Patch object or null on EOF
*/","* Read a single patch from a data stream, a patch contains information of its coordinates and color parameters.
     *
     * @param input the image source data stream
     * @param isFree whether this is a free patch
     * @param implicitEdge implicit edge when a patch is not free, otherwise it's not used
     * @param implicitCornerColor implicit colors when a patch is not free, otherwise it's not used
     * @param maxSrcCoord the maximum coordinate value calculated from source data
     * @param maxSrcColor the maximum color value calculated from source data
     * @param rangeX range for coordinate x
     * @param rangeY range for coordinate y
     * @param colRange range for color
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform transformation for user to device space
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return a single patch
     * @throws IOException when something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,readVertex,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)",196,236,"/**
* Fetches a vertex from an ImageInputStream.
* @param input ImageInputStream to read from
* @return Vertex object or null if not found
*/","* Read a vertex from the bit input stream performs interpolations.
     *
     * @param input bit input stream
     * @param maxSrcCoord max value for source coordinate (2^bits-1)
     * @param maxSrcColor max value for source color (2^bits-1)
     * @param rangeX dest range for X
     * @param rangeY dest range for Y
     * @param colRangeTab dest range array for colors
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform the affine transformation
     * @return a new vertex with the flag and the interpolated values
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getBeforeColour(),66,69,"/**
* Returns gamma function mask value.
*/","* Gets the colour for the before edge.
     * 
     * @return the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getAfterColour(),86,89,"/**
* Returns gamma function mask value.
* @return gamma function mask value as a PDGamma object
*/","* Gets the colour for the after edge.
     * 
     * @return the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getStartColour(),106,109,"/**
* Returns gamma function value at x=2.","* Gets the colour for the start edge.
     * 
     * @return the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getEndColour(),126,129,"/**
* Returns gamma function mask value using parameter 3.","* Gets the colour for the end edge.
     * 
     * @return the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getBlendMode(),582,585,"/**
* Returns blend mode M2 based on COSName.BM value.","* Returns the blending mode stored in the COS dictionary
     *
     * @return the blending mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithTintTransform(java.awt.image.WritableRaster),286,346,"/**
* Generates a masked image by transforming the input raster.
* @param raster input raster data
* @return BufferedImage with transformed pixel values
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getNumberOfComponents(),448,452,"/**
* Calculates and returns the FUNC_MASK value.
* Result is a combination of values from m1() and m2().
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toString(),584,605,"/**
* Builds CSS string for a styled element.
* @return formatted CSS string
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toString(),327,333,"/**
* Returns a string representation of the function's mask.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toString(),304,311,"/**
* Returns formatted color mask string.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,69,"/**
* Retrieves a PDPageDestination object from the given COSBase.
* @param base input COSBase to extract destination from
* @return PDPageDestination object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getDestination(),70,73,"/**
* Returns the destination with mask value.
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:getDestination(),66,69,"/**
* Generates a PDDestination with mask functionality.
* @return PDDestination object
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getDestination(),140,143,"/**
* Generates a PDF destination with mask functionality. 
* @return PDDestination object representing the destination 
*/","* Get the destination to be displayed when the annotation is activated. Either this or the
     * action entry should be set, but not both.
     *
     * @return The destination for this annotation.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getDestination(),186,189,"/**
* Creates a PDDestination object with a specific mask.","* Get the page destination of this node.
     *
     * @return The page destination of this node.
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createMatrix,org.apache.pdfbox.util.Matrix:createMatrix(org.apache.pdfbox.cos.COSBase),143,162,"/**
* Creates a Matrix object from a COSBase instance.
* @param base COSBase to convert, must be a COSArray with at least 6 elements and all sub-elements as COSNumbers
* @return populated Matrix object or empty Matrix if conditions not met
*/","* Convenience method to be used when creating a matrix from unverified data. If the parameter
     * is a COSArray with at least six numbers, a Matrix object is created from the first six
     * numbers and returned. If not, then the identity Matrix is returned.
     *
     * @param base a COS object, preferably a COSArray with six numbers.
     *
     * @return a Matrix object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getObjectFromPath,org.apache.pdfbox.cos.COSDictionary:getObjectFromPath(java.lang.String),1311,1328,"/**
* Navigates to a nested object in the PDF structure using an XPath-like path.
* @param objPath dot-separated path to the target object
* @return COSBase object at the specified path or null if not found
*/","* Nice method, gives you every object you want Arrays works properly too. Try ""P/Annots/[k]/Rect"" where k means the
     * index of the Annots array.
     *
     * @param objPath the relative path to the object.
     * @return the object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,getDestination,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:getDestination(java.lang.String),65,85,"/**
* Retrieves a PDDestination object for the given name, using dictionary lookup.
* @param name unique identifier
* @return PDDestination object or null if not found
*/","* Returns the destination corresponding to the parameter.
     *
     * @param name The destination name.
     * @return The destination for that name, or null if there isn't any.
     * 
     * @throws IOException if something goes wrong when creating the destination object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String),74,77,"/**
* Retrieves the mask value for the specified attribute name.
* @param attrName name of the attribute
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",86,94,"/**
* Retrieves attribute value from COSBase or returns default value if not found. 
* @param attrName name of the attribute to look up
* @param defaultValue default value to return when attribute is missing
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @param defaultValue the default value
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,isSpecified,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:isSpecified(java.lang.String),66,69,"/**
* Checks if a function mask exists by name.
* @param name unique function mask identifier
* @return true if found, false otherwise
*/","* Is the attribute with the given name specified in this attribute object?
     * 
     * @param name the attribute name
     * @return <code>true</code> if the attribute is specified,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getArrayOfString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getArrayOfString(java.lang.String),103,117,"/**
* Extracts an array of string masks from a COSArray by name.
* @param name the COSArray reference name
*/","* Gets an array of strings.
     * 
     * @param name the attribute name
     * @return the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfString(java.lang.String,java.lang.String[])",125,136,"/**
* Updates the named attribute with multiple string values.
* @param name attribute name
* @param values array of string values to update
*/","* Sets an array of strings.
     * 
     * @param name the attribute name
     * @param values the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNameOrArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNameOrArrayOfName(java.lang.String,java.lang.String)",168,190,"/**
* Retrieves a string array or single string value for the given name from the COSBase.
* @param name The key to look up
* @param defaultValue Default value to return if not found
* @return Array of strings or individual string, or default value
*/","* Gets a name value or array of name values.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a String or array of Strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfName(java.lang.String,java.lang.String[])",212,223,"/**
* Updates the value of a PDF object by ID.
* @param name unique object identifier
* @param values new values to assign
*/","* Sets an array of name values.
     * 
     * @param name the attribute name
     * @param values the array of name values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrName(java.lang.String,java.lang.String)",232,244,"/**
* Retrieves a masked value from the document, returning either a number or name.
* @param name  name of the mask
* @param defaultValue default value to return if not found
* @return Object representing the mask value or the default value
*/","* Gets a number or a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default name
     * @return a Float or a String",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrArrayOfNumber(java.lang.String,float)",302,328,"/**
* Retrieves a float array or single value from the document by name.
* @param name attribute name
* @param defaultValue default value to return if not found
* @return float array or single value, or null/defaultValue if unspecified
*/","* Gets a number or an array of numbers.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a Float or an array of floats",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfNumber(java.lang.String,float[])",364,375,"/**
* Updates a function's mask with specified values and name.
* @param name the name of the function to update
* @param values an array of float values for the function's mask
*/","* Sets an array of float numbers.
     * 
     * @param name the attribute name
     * @param values the float numbers",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColor,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColor(java.lang.String),383,391,"/**
* Retrieves a PDGamma object for the given PDF name.
* @param name PDF name to fetch
* @return PDGamma object or null if not found
*/","* Gets a colour.
     * 
     * @param name the attribute name
     * @return the colour",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColorOrFourColors,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColorOrFourColors(java.lang.String),399,417,"/**
* Returns a PDGamma or PDFourColours object based on the mask type.
* @param name mask name
*/","* Gets a single colour or four colours.
     * 
     * @param name the attribute name
     * @return the single ({@link PDGamma}) or a ({@link PDFourColours})",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,"org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",570,578,"/**
* Retrieves a COSDictionary instance for the given key pair.
* @param firstKey first key in the pair
* @param secondKey second key in the pair
* @return COSDictionary object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The COSDictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",910,919,"/**
* Evaluates a key pair and returns true if the value matches a specific condition.
* @param firstKey  key to evaluate
* @param secondKey secondary key used in evaluation
* @param defaultValue default boolean value to return when no match is found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",1021,1030,"/**
* Retrieves a value from the document by two keys and returns it as an integer.
* @param firstKey first key to search for
* @param secondKey second key to search for
* @param defaultValue default value to return if not found
* @return integer value or default value","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getDecodeParams,"org.apache.pdfbox.filter.Filter:getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",120,149,"/**
* Retrieves a dictionary from the given PDF object, using filter and index if applicable.
* @param dictionary the PDF object to search
* @param index optional index into an array of dictionaries
* @return the found dictionary or a new empty dictionary
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getFilters(),246,259,"/**
* Retrieves a list of filter names or values from the PDF document.
* @return List of Strings representing filter names or values
*/","* Returns A list of filters applied to this stream.
     *
     * @return A (possibly empty) list of filters applied to this stream, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getDecode(),278,282,"/**
* Returns a COSArray representing function mask. 
* @return COSArray object containing function mask information
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getColorSpace(),239,247,"/**
* Retrieves the PDF color space function mask.
* @return PDColorSpace object or null if not initialized
*/","* This will get the color space or null if none exists.
     *
     * @return the color space for the shading
     * @throws IOException if there is an error getting the color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(java.util.List,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",267,284,"/**
* Filters COSObjects by matching dictionary types.
* @param keys list of object keys to filter
* @param type1 first type to match (null for no match)
* @param type2 second type to match (null for no match)
* @return filtered list of COSObject instances",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,decode,"org.apache.pdfbox.filter.CryptFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,45,"/**
* Handles M3 decoding with specified crypt filter.
* @param encoded input stream
* @param decoded output stream
* @param parameters COSDictionary containing crypt filter settings
* @param index index of current operation
* @return DecodeResult object or throws IOException if unsupported
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,encode,"org.apache.pdfbox.filter.CryptFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",47,62,"/**
* Executes the specified cryptographic filter.
* @param input InputStream to process
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary containing filter parameters
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,hasOnlyDocumentsOrParts,org.apache.pdfbox.multipdf.PDFMergerUtility:hasOnlyDocumentsOrParts(org.apache.pdfbox.cos.COSArray),1041,1058,"/**
* Verifies a COSArray contains valid dictionary entries for document or part masks.
* @param kLevelOneArray COSArray to verify
* @return true if all entries are dictionaries containing 'S' key, false otherwise
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isCatalog,org.apache.pdfbox.pdfparser.BruteForceParser:isCatalog(org.apache.pdfbox.cos.COSDictionary),765,769,"/**
* Checks if the function mask is set in the given dictionary.
* @param dictionary COSDictionary object to check
* @return true if function mask is set, false otherwise
*/","* Tell if the dictionary is a PDF or FDF catalog.
     * 
     * @param dictionary the dictionary to be tested
     * @return true if the given dictionary is a root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",79,99,"/**
* Initializes a page tree with the given dictionary and document.
* @param root COSDictionary representing the page tree structure
* @param document PDDocument associated with the page tree
*/","* Constructor for reading.
     *
     * @param root A page tree root.
     * @param document The document which contains ""root"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,sanitizeType,org.apache.pdfbox.pdmodel.PDPageTree:sanitizeType(org.apache.pdfbox.cos.COSDictionary),271,283,"/**
* Sets or validates the TYPE field in a COSDictionary to 'Page'.
* @param dictionary COSDictionary object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,isPageTreeNode,org.apache.pdfbox.pdmodel.PDPageTree:isPageTreeNode(org.apache.pdfbox.cos.COSDictionary),371,378,"/**
* Checks if a COSDictionary has a mask of 2 or contains kids.
* @param node the COSDictionary to check
* @return true if masked or contains kids, false otherwise
*/",* Returns true if the node is a page tree node (i.e. and intermediate).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getCryptFilterMethod(),107,110,"/**
* Returns a COSName instance representing the mask value.
* @return COSName instance with specified value
*/","* This will return the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @return the name of the crypt filter method.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStreamFilterName(),553,557,"/**
* Returns COSName for function mask, or IDENTITY if not found.
* @return COSName representing the function mask
*/","* Returns the name of the filter which is used for de/encrypting streams.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStringFilterName(),575,579,"/**
* Returns the function mask string from the dictionary, or IDENTITY if not found.
*/","* Returns the name of the filter which is used for de/encrypting strings.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int),459,498,"/**
* Retrieves Unicode character representation for a given code point.
* @param code Unicode code point value
* @return String representation of the character or null if not found
*/","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @return Unicode character(s)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,createXObject,"org.apache.pdfbox.pdmodel.graphics.PDXObject:createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",52,90,"/**
* Creates a PDXObject from the given COSBase, handling various XObject types.
* @param base COSBase to create PDXObject from
* @param resources PDResources for PDXObject creation (optional)
* @return PDXObject instance or null if invalid input
*/","* Creates a new XObject instance of the appropriate type for the COS stream.
     *
     * @param base The stream which is wrapped by this XObject.
     * @param resources the resources of this XObject
     * @return A new XObject instance.
     * @throws java.io.IOException if there is an error creating the XObject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getSubType,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getSubType(),134,141,"/**
* Returns the function mask name based on subtype.
* @return COSName object representing the function mask
*/","* Returns the subtype of the soft mask (Alpha, Luminosity) - S entry
     * 
     * @return the subtype of the soft mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getRelationship(),74,77,"/**
* Returns the mask function name from the dictionary. 
* @return COSName object representing the mask function 
*/","* Get the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @return the relationship as a name. Valid values are P (the target is the parent of the
     * current document) and C (the target is a child of the current document). Invalid values or
     * null are also returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearanceState(),324,327,"/**
* Returns a COSName value representing the function mask.
* @return COSName object representing the function mask
*/","* Returns the annotations appearance state, which selects the applicable appearance stream from an appearance
     * subdictionary.
     * 
     * @return the annotations appearance state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",390,402,"/**
* Updates or creates a key-value pair in the embedded dictionary.
* @param embedded the dictionary to update
* @param key unique key identifier
* @param value associated string value
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param embedded The embedded dictionary to set the item in.
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",456,465,"/**
* Adds or updates a key-value pair in an embedded dictionary.
* @param embeddedDictionary the COSName of the embedded dictionary
* @param key the COSName of the key to add/update
* @param value the integer value associated with the key
*/","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param embeddedDictionary The embedded dictionary.
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,isEncrypted,org.apache.pdfbox.cos.COSDocument:isEncrypted(),329,332,"/**
* Checks if trailer contains encrypted data.
* @return true if trailer is valid and contains encrypted data, false otherwise
*/","* This will tell if this is an encrypted document.
     *
     * @return true If this document is encrypted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:getEncryptionDictionary(),340,343,"/**
* Returns dictionary with encryption mask.
* @return COSDictionary containing encryption mask
*/","* This will get the encryption dictionary if the document is encrypted or null if the document
     * is not encrypted.
     *
     * @return The encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneRoleMap,"org.apache.pdfbox.multipdf.Splitter:cloneRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",281,297,"/**
* Copies role map from source to destination structure tree.
* @param srcStructTree source structure tree
* @param destStructTree destination structure tree
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,initialParse,org.apache.pdfbox.pdfparser.FDFParser:initialParse(),48,58,"/**
* Parses PDF trailer to initialize parsing state.
* @throws IOException on missing root object specification
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,initialParse,org.apache.pdfbox.pdfparser.PDFParser:initialParse(),105,123,"/**
* Processes the PDF trailer and initializes the document.
* @throws IOException if trailer or root object is missing
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:getDocumentInformation(),753,767,"/**
* Retrieves or initializes the PDDocumentInformation instance based on the PDF document's metadata.
* @return The initialized PDDocumentInformation object
*/","* This will get the document info dictionary. If it doesn't exist, an empty document info
     * dictionary is created in the document trailer.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#getMetadata()}.
     *
     * @return The documents /Info dictionary, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocument:getDocumentCatalog(),789,805,"/**
* Retrieves and initializes the document catalog.
* @return PDDocumentCatalog object or null if failed
*/","* This will get the document CATALOG. This is guaranteed to not return null.
     * 
     * @return The documents /Root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(org.apache.pdfbox.pdmodel.fixup.PDDocumentFixup),128,146,"/**
* Retrieves or updates the AcroForm object with fixes applied.
* @param acroFormFixup AcroForm fixup document
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * Dependent on setting <code>acroFormFixup</code> some fixing/changes will be done to the AcroForm.
     * If you need to ensure that there are no fixes applied call <code>getAcroForm</code> with <code>null</code>.
     * 
     * Using <code>getAcroForm(PDDocumentFixup acroFormFixup)</code> might change the original content and
     * subsequent calls with <code>getAcroForm(null)</code> will return the changed content.
     * 
     * @param acroFormFixup the fix up action or null
     * @return The document's AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getViewerPreferences(),175,179,"/**
* Returns PDViewerPreferences object associated with the current PDF document or null if not found.","* Get the viewer preferences associated with this document or null if they do not exist.
     *
     * @return The document's viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getActions(),303,312,"/**
* Initializes and returns the PDDocumentCatalogAdditionalActions object.
*/",* @return The Additional Actions for this Document,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getNames(),327,331,"/**
* Returns document name dictionary with mask applied.
* @return PDDocumentNameDictionary object or null if not found
*/",* @return The names dictionary for this document or null if none exist.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDests(),336,340,"/**
* Returns a dictionary of name destinations for the PDF document, or null if not found.
*/",* @return The named destinations dictionary for this document or null if none exists.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMarkInfo(),390,394,"/**
* Retrieves PDMarkInfo object from root dictionary.
* @return PDMarkInfo object or null if not found
*/","* Get info about doc's usage of tagged features. This will return null if there is no
     * information.
     *
     * @return The new mark info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getURI(),537,541,"/**
* Creates a dictionary of URI masks from the PDF root object.
* @return PDURIDictionary object or null if not found
*/","* Returns the document-level URI.
     * 
     * @return the document level URI if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getStructureTreeRoot(),558,562,"/**
* Creates PDStructureTreeRoot instance from dictionary.
* @return PDStructureTreeRoot object or null if dictionary is null
*/","* Get the document's structure tree root, or null if none exists.
     * 
     * @return the structure tree root if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOCProperties(),641,645,"/**
* Retrieves PDF optional content properties.
* @return OptionalContentProperties object or null if not found
*/","* Get the optional content properties dictionary associated with this document.
     *
     * @return the optional properties dictionary or null if it is not present",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog),38,48,"/**
* Initializes PDDocumentNameDictionary with a PDDocumentCatalog.
* @param cat the document catalog to associate with this dictionary
*/","* Constructor.
     *
     * @param cat The document catalog that this dictionary is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getDests(),79,89,"/**
* Retrieves destination name tree node from catalog or document.
* @return PDDestinationNameTreeNode object or null if not found
*/","* Get the destination named tree node. The values in this name tree will be
     * PDPageDestination objects.
     *
     * @return The destination name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getEmbeddedFiles(),113,117,"/**
* Creates a PDEmbeddedFilesNameTreeNode instance from the embedded files dictionary.
* @return PDEmbeddedFilesNameTreeNode object or null if dictionary is null.","* Get the embedded files named tree node. The values in this name tree will
     * be PDComplexFileSpecification objects.
     *
     * @return The embedded files name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getJavaScript(),136,140,"/**
* Retrieves PDJavascriptNameTreeNode instance with specified mask.
* @return PDJavascriptNameTreeNode object or null if not found
*/","* Get the document level JavaScript name tree. When the document is opened, all the JavaScript
     * actions in it shall be executed, defining JavaScript functions for use by other scripts in
     * the document.
     *
     * @return The document level JavaScript name tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getIndirectResourceObjects,"org.apache.pdfbox.pdmodel.PDPage:getIndirectResourceObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",164,176,"/**
* Retrieves a list of COS objects associated with the given page resources and kind.
* @param pageResources dictionary containing page resources
* @param kind type of resources to filter by
* @return List of COS objects or empty list if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getActions,org.apache.pdfbox.pdmodel.PDPage:getActions(),693,702,"/**
* Creates and returns a PDPageAdditionalActions object associated with the given page.
*/","* Get the page actions.
     * 
     * @return The Actions for this Page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTransition,org.apache.pdfbox.pdmodel.PDPage:getTransition(),717,721,"/**
* Retrieves and converts a PDF transition dictionary to a PDTransition object.
* @return PDTransition object or null if the transition is not found.",* @return The page transition associated with this page or null if no transition is defined,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getIndirect,"org.apache.pdfbox.pdmodel.PDResources:getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",485,499,"/**
* Retrieves a COSObject from the resources dictionary based on kind and name.
* @param kind type of resource
* @param name unique identifier within that type
* @return COSObject instance or null if not found
*/","* Returns the resource with the given name and kind as an indirect object, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,get,"org.apache.pdfbox.pdmodel.PDResources:get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",504,508,"/**
* Retrieves a COS object based on its type and name.
* @param kind the type of COS object
* @param name the name of the COS object
* @return the COS object or null if not found
*/","* Returns the resource with the given name and kind, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getNames,org.apache.pdfbox.pdmodel.PDResources:getNames(org.apache.pdfbox.cos.COSName),583,587,"/**
* Returns an iterable collection of COS names based on the given kind.
* @param kind COS name kind
* @return Iterable of COS names or empty collection if not found
*/",* Returns the resource names of the given kind.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,createKey,"org.apache.pdfbox.pdmodel.PDResources:createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",740,758,"/**
* Generates a unique COSName by incrementing the prefix until an unused name is found.
* @param kind resource type
* @param prefix initial name prefix
* @return generated COSName or null if not found
*/",* Returns a unique key for a new resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",763,772,"/**
* Sets or updates an attribute in the dictionary for a given kind.
* @param kind type of entity
* @param name attribute name
* @param object attribute value
*/",* Sets the value of a given named resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEFDictionary(),73,80,"/**
* Returns the COS dictionary with function masks.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getPage(),68,72,"/**
* Retrieves a PDF page by name.
* @return PDPage object or null if not found
*/","* Gets the page.
     * 
     * @return the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getPage(),155,163,"/**
* Creates a PDPage object from the page dictionary.
* @return PDPage object or null if not found
*/","* Get the page on which the object shall be rendered.
     *
     * @return the referenced page or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getPage(),139,143,"/**
* Creates or fetches a PDF page based on its identifier.
* @return PDPage object or null if not found
*/","* Returns the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * 
     * @return the page on which some or all of the content items designated by
     *  the K entry shall be rendered",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getIDTree(),98,102,"/**
* Returns a PDNameTreeNode for the ID tree.
* @return PDStructureElementNameTreeNode or null if not found
*/","* Returns the ID tree.
     * 
     * @return the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTree(),125,129,"/**
* Retrieves a PDNumberTreeNode instance from the parent tree.
* @return PDNumberTreeNode object or null if not found
*/","* Returns the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     *
     * @return the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getClassMap(),211,245,"/**
* Creates a map of PDF attribute objects from the CLASS_MAP dictionary.
* @return Map of String to Object, or an empty map if CLASS_MAP is null
*/","* Sets the ClassMap.
     * 
     * @return the ClassMap, never null. The elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getCryptFilterDictionary(org.apache.pdfbox.cos.COSName),492,505,"/**
* Retrieves a PDCryptFilterDictionary instance from the dictionary.
* @param cryptFilterName COS name of the filter to fetch
* @return PDCryptFilterDictionary object or null if not found
*/","* Returns the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * 
     * @return the crypt filter with the given name if available",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setCryptFilterDictionary,"org.apache.pdfbox.pdmodel.encryption.PDEncryption:setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",513,523,"/**
* Adds a cryptographic filter to the PDF document's CF dictionary.
* @param cryptFilterName name of the cryptographic filter
* @param cryptFilterDictionary filter configuration and parameters
*/","* Sets the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * @param cryptFilterDictionary the crypt filter to set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderStyle(),898,902,"/**
* Retrieves border style dictionary by name.
*@return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the
     * annotation.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderEffect(),922,926,"/**
* Retrieves border effect dictionary from annotation.
* @return BorderEffectDictionary object or null if not found
*/","* This will retrieve the border style dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @return the border effect dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getSignature(),147,151,"/**
* Retrieves and constructs a PDSignature object from the catalog. 
* @return PDSignature object or null if not found in catalog
*/","* This will get the signature or null if there is none.
     *
     * @return The signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getJavaScript(),544,548,"/**
* Retrieves JavaScript function mask from FDF document.
* @return FDFJavaScript object or null if not found
*/","* This will get the java script entry.
     *
     * @return The java script entry describing javascript commands.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceDictionary(),594,598,"/**
* Returns appearance dictionary with mask functionality.
* @return PDAppearanceDictionary object or null if not found
*/","* This will get the appearance dictionary that specifies the appearance of a pushbutton field.
     *
     * @return The AP entry of this dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceStreamReference(),615,619,"/**
* Retrieves FDF named page reference from underlying dictionary.
* @return FDFNamedPageReference object or null if not found
*/","* This will get named page references.
     *
     * @return The named page references or <code>null</code>.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:getIconFit(),636,640,"/**
* Retrieves and initializes an FDFIconFit object from the IF dictionary.
* @return FDFIconFit object or null if the IF dictionary is not found
*/","* This will get the icon fit that is associated with this field.
     *
     * @return The 'IF' entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:getAdditionalActions(),722,726,"/**
* Fetches PDAdditionalActions instance from AA dictionary.
* @return PDAdditionalActions object or null if not found
*/","* This will get a list of additional actions that will get executed based on events.
     *
     * @return The 'AA' entry in this FDF field dictionary or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:getPageInfo(),101,110,"/**
* Retrieves FDF page information from the document.
* @return FDFPageInfo object or null if not found
*/","* This will get the FDF page info object.
     *
     * @return The Page info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getTemplateReference(),71,75,"/**
* Retrieves an FDF named page reference from a template.
* @return FDFNamedPageReference object or null if not found
*/","* This is the template reference.
     *
     * @return The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDFont:getFontDescriptor(),216,228,"/**
* Returns the font descriptor for this PDF object, lazily initializing it if necessary.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getCIDSystemInfo,org.apache.pdfbox.pdmodel.font.PDCIDFont:getCIDSystemInfo(),362,366,"/**
* Retrieves the CID system info dictionary and converts it to a PDC ID system info object.
* @return PDC ID system info object or null if not found
*/","* Returns the CIDSystemInfo, or null if it is missing (which isn't allowed but could happen).
     * 
     * @return the CIDSystemInfo, or null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getPanose,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getPanose(),810,823,"/**
* Creates a PDPanose object from the given style dictionary.
* @return PDPanose object or null if not found or incomplete
*/","* Returns the Panose entry of the Style dictionary, if any.
     *
     * @return A Panose wrapper object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3Font:getResources(),290,301,"/**
* Returns the PDF resources dictionary or initializes it from the document. 
* @return PDResources object or null if not initialized
*/","* Returns the optional resources of the type3 stream.
     *
     * @return the resources bound to be used when parsing the type3 stream",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProcs,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProcs(),380,387,"/**
* Retrieves dictionary object with character processing masks.
* @return COSDictionary object or null if not initialized
*/","* Returns the dictionary containing all streams to be used to render the glyphs.
     * 
     * @return the dictionary containing all glyph streams.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getColorants(org.apache.pdfbox.pdmodel.PDResources),80,98,"/**
* Extracts and maps PDSeparation objects from the provided PDF resources.
* @param resources PDResources object containing PDF data
* @return Map of String to PDSeparation or null on failure
*/","* Returns a map of colorants and their associated Separation color space.
     * @param resources resources, can be null.
     * @return map of colorants to color spaces, never null.
     * @throws IOException If there is an error reading a color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getProcess,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getProcess(),104,112,"/**
* Creates a PDDeviceNProcess object from the provided PDF PROCESS dictionary.
* @param dictionary input dictionary containing the PROCESS entry
* @return PDDeviceNProcess object or null if process is missing
*/","* Returns the DeviceN Process Dictionary, or null if it is missing.
     * @return the DeviceN Process Dictionary, or null if it is missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getRenderState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getRenderState(org.apache.pdfbox.rendering.RenderDestination),120,144,"/**
* Fetches render state based on destination type.
* @param destination target rendering location
* @return RenderState object or null if not found
*/","* @param destination to be rendered
     * @return state or null if undefined",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getD,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getD(),126,138,"/**
* Creates or retrieves a COS dictionary with the key 'D' and initializes it as the top-level directory. 
* @return initialized COSDictionary object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getExtendedGraphicsState(),62,73,"/**
* Returns the extended graphics state, initializing it if necessary.
*/","* This will get the external graphics state for this pattern.
     * @return The extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getResources(),198,203,"/**
* Retrieves PDF resources.
* @return PDResources object or null if not found
*/","* This will get the resources for this pattern.
     * This will return null if no resources are available at this level.
     * @return The resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getTargetDirectory(),173,177,"/**
* Creates PDTargetDirectory object from COSDictionary.
* @return PDTargetDirectory instance or null if dictionary is null
*/","* Get the target directory.
     *
     * @return the target directory or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getWinLaunchParams(),94,98,"/**
* Returns Windows launch parameters if available, otherwise null.","* This will get a dictionary containing Windows-specific launch parameters.
     *
     * @return The Win entry of of the specific launch action dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getTargetDirectory(),126,130,"/**
* Creates a PDTargetDirectory object from the given PDF dictionary.
* @return PDTargetDirectory object or null if dictionary is invalid
*/","* Get the target directory. If this entry is absent, the current document is the target file
     * containing the destination.
     *
     * @return the target directory or null if the current document is the target file containing
     * the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearance(),344,348,"/**
* Retrieves PDAppearanceDictionary instance from COSDictionary.
* @return PDAppearanceDictionary object or null if not found
*/","* This will get the appearance dictionary associated with this annotation. This may return null.
     * 
     * @return This annotations appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getPage(),843,847,"/**
* Retrieves a PDPage object by name.
* @return PDPage object or null if not found
*/","* This will retrieve the corresponding page of this annotation. See also
     * <a href=""https://stackoverflow.com/a/36894982/535646"">this answer</a> about what to do if
     * the page isn't available.
     *
     * @return The corresponding page or null if not available.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getBorderEffect(),253,257,"/**
* Returns a PDBorderEffectDictionary instance from the effect dictionary with key BE.
* @return PDBorderEffectDictionary or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getBorderStyle(),126,130,"/**
* Retrieves and wraps the border style dictionary in a PDBorderStyleDictionary object.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in
     * drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getPreviousURI(),190,194,"/**
* Returns a PDActionURI object if a matching URI exists, otherwise returns null. 
* @return PDActionURI object or null if not found
*/","* This will set the previous URI action, in case it's needed.
     *
     * @return The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getExternalData(),274,278,"/**
* Retrieves external data dictionary from PDF metadata.
* @return PDExternalDataDictionary object or null if not found
*/","* This will return the external data dictionary.
     * 
     * @return the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getBorderStyle(),306,310,"/**
* Retrieves border style dictionary from PDF.
* @return Border style dictionary or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getBorderEffect(),99,103,"/**
* Retrieves the border effect dictionary with mask functionality.
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getBorderEffect(),96,100,"/**
* Retrieves a border effect dictionary from the PDF.
* @return BorderEffectDictionary object or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAppearanceCharacteristics(),120,124,"/**
* Retrieves appearance characteristics dictionary with mask.
* @return PDAppearanceCharacteristicsDictionary object or null if not found
*/","* Returns the appearance characteristics dictionary.
     * 
     * @return the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getActions(),164,168,"/**
* Retrieves additional actions annotation from PDF document by name AA.
* @return PDAnnotationAdditionalActions object or null if not found
*/","* Get the additional actions for this field. This will return null if there are no additional actions for this
     * field. As of PDF 1.6 this is only used for Widget Annotations.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getBorderStyle(),196,200,"/**
* Returns a border style dictionary based on the 'BS' entry in the parent object.
* @return PDBorderStyleDictionary or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getNormalAppearance(),65,69,"/**
* Retrieves PDAppearanceEntry instance from dictionary.
* @return PDAppearanceEntry object or null if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"".
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getFilter(),75,84,"/**
* Retrieves the FILTER property from the dictionary as a PDPropBuildDataDict object.
* @return PDPropBuildDataDict representing the filtered data or null if not found
*/","* A build data dictionary for the signature handler that was
     * used to create the parent signature.
     *
     * @return the Filter as PDPropBuildFilter object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getPubSec(),103,112,"/**
* Retrieves the public security build data dictionary.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the PubSec software module
     * that was used to create the parent signature.
     *
     * @return the PubSec as PDPropBuildPubSec object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getApp(),130,139,"/**
* Retrieves the application build data as a PDF property dictionary.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the viewing application software
     * module that was used to create the parent signature.
     *
     * @return the App as PDPropBuildApp object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getMDP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getMDP(),408,412,"/**
* Retrieves MDP (Media Data Package) from PDF dictionary.
* @return PDSeedValueMDP object or null if not found
*/","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @return the mdp dictionary as PDSeedValueMDP",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSeedValueCertificate(),441,445,"/**
* Retrieves PDF seed value certificate from dictionary.
* @return PDSeedValueCertificate object or null if not found
*/","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @return dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getTimeStamp(),465,469,"/**
* Creates a PDSeedValueTimeStamp object from the TIME_STAMP dictionary.
* @return PDSeedValueTimeStamp object or null if dictionary is not found
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @return the timestamp dictionary as PDSeedValueTimeStamp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getPropBuild(),444,453,"/**
* Returns a PDPropBuild object from the PDF document's build dictionary.
* @return PDPropBuild object or null if not found
*/","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @return the pdf signature build dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getStructureElement(),301,305,"/**
* Retrieves the structure element mask from the dictionary.
* @return PDStructureElement object or null if not found
*/","* Get the structure element of this node.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,hasChildren,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:hasChildren(),170,173,"/**
* Checks if mask is configured.
*/",* @return true if the node has at least one child,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOutlineItem,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOutlineItem(org.apache.pdfbox.cos.COSName),175,179,"/**
* Retrieves a PDOutlineItem object from the COS dictionary.
* @param name the COSName identifying the item
* @return PDOutlineItem object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultResources(),542,547,"/**
* Returns a PDF resources object if available in the dictionary.
* @return PDResources object or null if not found
*/","* This will get the default resources for the AcroForm.
     *
     * @return The default resources or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getActions,org.apache.pdfbox.pdmodel.interactive.form.PDField:getActions(),224,228,"/**
* Creates PDFormFieldAdditionalActions instance from AA dictionary.
* @return PDFormFieldAdditionalActions object or null if AA is missing
*/","* Get the additional actions for this field. This will return null if there
     * are no additional actions for this field.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValue(),141,145,"/**
* Retrieves and constructs a PDSignature object from the specified dictionary value.
* @return PDSignature object or null if not found
*/","* Returns the signature contained in this field.
     * 
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getDefaultValue(),152,156,"/**
* Retrieves the PDF signature mask.
* @return PDSignature object or null if not found
*/","* Returns the default value, if any.
     *
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSeedValue(),172,176,"/**
* Creates a PD seed value from the specified dictionary.
* @return PDSeedValue object or null if dictionary is null
*/","* <p>(Optional; PDF 1.5) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @return the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getMeasure(),125,129,"/**
* Retrieves measure dictionary with mask function.
* @return PDMeasureDictionary object or null if not found
*/","* This will retrieve the measure dictionary.
     * 
     * @return the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getThreadInfo(),71,75,"/**
* Retrieves document information from the current thread's dictionary.
* @return PDDocumentInformation object or null if not found
*/","* Get info about the thread, or null if there is nothing.
     *
     * @return The thread information.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getFirstBead(),93,97,"/**
* Retrieves and wraps a PDThreadBead object from the thread's dictionary.
* @return PDThreadBead object or null if not found
*/","* Get the first bead in the thread, or null if it has not been set yet.  This
     * is a required field for this object.
     *
     * @return The first bead in the thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getThread(),77,81,"/**
* Creates a PDThread object from the specified dictionary.
* @return PDThread object or null if dictionary is invalid
*/","* This will get the thread that this bead is part of.  This is only required
     * for the first bead in a thread, so other beads 'may' return null.
     *
     * @return The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getNextBead(),100,103,"/**
* Creates a PDThreadBead instance with mask value.
* @return PDThreadBead object with masked bead
*/","* This will get the next bead.  If this bead is the last bead in the list then this
     * will return the first bead.
     *
     * @return The next bead in the list or the first bead if this is the last bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPreviousBead(),121,124,"/**
* Creates and returns a PDThreadBead instance with specified mask.
*/","* This will get the previous bead.  If this bead is the first bead in the list then this
     * will return the last bead.
     *
     * @return The previous bead in the list or the last bead if this is the first bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPage(),156,160,"/**
* Retrieves a PDF page object from a COS dictionary.
* @return PDPage object or null if not found
*/","* Get the page that this bead is part of.
     *
     * @return The page that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMetadata(),252,256,"/**
* Retrieves metadata from PDF document using given root object.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return null if there is no
     * meta data for this object.
     *
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMetadata,org.apache.pdfbox.pdmodel.PDPage:getMetadata(),672,676,"/**
* Retrieves PDMetadata object from page, or returns null if not found.","* Get the metadata that is part of the document catalog. This will return null if there is
     * no meta data for this object.
     * 
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getDifferences(),469,472,"/**
* Returns a stream containing fill mode differences.
*/","* This will get the incremental updates since the PDF was last opened.
     *
     * @return The differences entry of the FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile(),726,730,"/**
* Retrieves PDF font mask stream from dictionary.
* @return PDStream object or null if not found
*/","* A stream containing a Type 1 font program.
     *
     * @return A stream containing a Type 1 font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile2(),747,751,"/**
* Retrieves PDF stream from font file.
* @return PDStream object or null if not found
*/","* A stream containing a true type font program.
     *
     * @return A stream containing a true type font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile3(),768,772,"/**
* Returns a PDF stream from the font file.
* @return PDStream object or null if not found
*/","* A stream containing a font program that is not true type or type 1.
     *
     * @return A stream containing a font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCIDSet(),789,793,"/**
* Returns PDF stream containing CID set.
* @return PDStream object or null if not found
*/","* Get the CIDSet stream.
     *
     * @return A stream containing a CIDSet.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getDestOutputIntent,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getDestOutputIntent(),63,66,"/**
* Returns a COS stream representing the destination output profile mask.",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSound(),71,74,"/**
* Returns a COS stream with a specific mask.
* @return COSStream object containing the masked value
*/","* Gets the sound object.
     * 
     * @return The sound object defining the sound that shall be played.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalIcon(),186,190,"/**
* Creates a PDF form XObject with mask functionality.
* @return PDFormXObject instance or null if creation failed
*/","* This will retrieve the normal icon.
     * 
     * @return the normal icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverIcon(),197,201,"/**
* Creates a PDFormXObject instance from the specified resource.
* @return PDFormXObject object or null if creation fails
*/","* This will retrieve the rollover icon.
     * 
     * @return the rollover icon",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateIcon(),208,212,"/**
* Creates a form XObject from the PDF stream at specified index.
* @return FormXObject object or null if not found
*/","* This will retrieve the alternate icon.
     * 
     * @return the alternate icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getSubDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getSubDictionary(),100,120,"/**
* Maps appearance streams from a dictionary to a name-based map.
* @return Map of COSName to PDAppearanceStream or null if not an appearance subdictionary
*/","* Returns the entry as an appearance subdictionary.
     *
     * @return the entry as an appearance subdictionary
     * 
     * @throws IllegalStateException if this entry is not an appearance subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getDocumentID,org.apache.pdfbox.cos.COSDocument:getDocumentID(),361,364,"/**
* Returns a COS array with mask values.
* @return COS array containing mask data
*/","* This will get the document ID.
     *
     * @return The document id.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,removePossibleOrphanAnnotation,"org.apache.pdfbox.multipdf.Splitter$KCloner:removePossibleOrphanAnnotation(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)",555,582,"/**
* Masks annotations or links from source object.
* @param srcObj source COSDictionary
* @param srcDict source COSDictionary
* @param currentPageDict current page COSDictionary
* @param dstDict destination COSDictionary
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPagesDictionary,"org.apache.pdfbox.pdfparser.COSParser:checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",955,999,"/**
* Recursively counts the number of page objects in a COSDictionary.
* @param pagesDict COS dictionary containing page objects
* @param set Set of visited objects to avoid infinite recursion
* @return Total count of page objects
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteTrailer,org.apache.pdfbox.pdfwriter.COSWriter:doWriteTrailer(org.apache.pdfbox.cos.COSDocument),678,708,"/**
* Updates document trailer with size and ID information.
* @param doc COSDocument object
*/","* This will write the trailer to the PDF document.
     *
     * @param doc The document to create the trailer for.
     *
     * @throws IOException If there is an IOError while writing the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,detectPossibleSignature,org.apache.pdfbox.pdfwriter.COSWriter:detectPossibleSignature(org.apache.pdfbox.cos.COSDictionary),1267,1291,"/**
* Checks for signature reach in incremental updates.
* @param obj COSDictionary object to inspect
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getThreads(),217,232,"/**
* Retrieves a list of PDThreads from the document root.
* @return List of PDThread objects
*/","* Returns the document's article threads.
     * 
     * @return a list of all threads of the document",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOutputIntents(),411,428,"/**
* Retrieves a list of output intents from the PDF document.
* @return List of PDOutputIntent objects
*/","* Get the list of OutputIntents defined in the document.
     *
     * @return The list of PDOutputIntent, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,addOutputIntent,org.apache.pdfbox.pdmodel.PDDocumentCatalog:addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent),436,445,"/**
* Adds output intent to the PDF document's output intents array.
* @param outputIntent PDOutputIntent object containing intent data
*/","* Add an OutputIntent to the list.  If there is not OutputIntent, the list is created and the
     * first  element added.
     *
     * @param outputIntent the OutputIntent to add.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getThreadBeads,org.apache.pdfbox.pdmodel.PDPage:getThreadBeads(),634,654,"/**
* Converts COSArray of beads to a list of PDThreadBead objects.
* @return List<PDThreadBead> or empty list if input array is null
*/","* This will get a list of PDThreadBead objects, which are article threads in the document. This
     * will return an empty list if there are no thread beads.
     *
     * @return A list of article threads on this page, never null. The returned list is backed by
     * the beads COSArray, so any adding or deleting in this list will change the document too.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getViewports,org.apache.pdfbox.pdmodel.PDPage:getViewports(),832,853,"/**
* Retrieves a list of viewport dictionaries from the page's COS array.
* @return List of PDViewportDictionary objects or null if not found
*/","* Get the viewports.
     *
     * @return a list of viewports or null if there is no /VP entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getKids,org.apache.pdfbox.pdmodel.PDPageTree:getKids(org.apache.pdfbox.cos.COSDictionary),138,174,"/**
* Recursively extracts COS dictionary entries from a given node.
* @param node input COS dictionary
* @return list of extracted COS dictionaries or empty list if none found
*/","* Helper to get kids from malformed PDFs.
     * @param node page tree node
     * @return list of kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getKids(),114,129,"/**
* Retrieves a list of child nodes from the current node.
* @return A list of PDNameTreeNode objects or null if empty
*/","* Return the children of this node.  This list will contain PDNameTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getNames(),253,280,"/**
* Extracts key-value pairs from the Names array and returns a Map.
* @return Map of String keys to T values or null if no names found
*/","* This will return a map of names on this level. The key will be a string,
     * and the value will depend on where this class is being used.
     *
     * @return ordered map of COS objects or <code>null</code> if the dictionary
     * contains no 'Names' entry on this level.
     *
     * @throws IOException If there is an error while creating the sub types.
     * @see #getKids()",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getUpperLimit(),334,343,"/**
* Retrieves function mask value from the document's limits array.
* @return String representation of the function mask or null if not found
*/","* Get the highest value for a key in the name map.
     *
     * @return The highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setUpperLimit(java.lang.String),350,361,"/**
* Sets the upper limit for FUNC_MASK.
* @param upper the upper limit value
*/","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getLowerLimit(),368,377,"/**
* Retrieves function mask value from Limits array.
* @return Function mask string or null if not found
*/","* Get the lowest value for a key in the name map.
     *
     * @return The lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setLowerLimit(java.lang.String),384,395,"/**
* Updates the limits array with a mask for lowercase strings.
* @param lower the lowercase string to be masked
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getKids(),88,103,"/**
* Retrieves a list of child nodes from the current node.
* @return List<PDNumberTreeNode> containing child nodes or null if none
*/","* Return the children of this node.  This list will contain PDNumberTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getNumbers(),177,204,"/**
* Returns a map of page indices to COSObjectables, parsed from the 'numbers' array.
* @return Map<Integer, COSObjectable> or null if parsing fails
*/","* This will return a map of numbers on this level. The key will be a java.lang.Integer, the
     * value will depend on where this class is being used.
     *
     * @return A map of COS objects.
     *
     * @throws IOException If there is a problem creating the values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getUpperLimit(),281,290,"/**
* Retrieves a FUNC_MASK value from the limits array.
* @return null or an Integer mask value if found
*/","* Get the highest value for a key in the number map.
     *
     * @return The highest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setUpperLimit(java.lang.Integer),297,315,"/**
* Updates the limits array in the PDF document with a mask value.
* @param upper the maximum limit value or null to clear
*/","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getLowerLimit(),322,331,"/**
* Retrieves the mask value from the LIMITS array.
* @return Integer mask value or null if not available
*/","* Get the lowest value for a key in the number map.
     *
     * @return The lowest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setLowerLimit(java.lang.Integer),338,356,"/**
* Updates the LIMITS array in the document with a mask value.
* @param lower the lower bound of the mask or null to clear
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeValues(),264,271,"/**
* Returns the function mask array.
*/","* Returns all ranges for the output values as COSArray .
     * Required for type 0 and type 4 functions
     * @return the ranges array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainValues(),278,285,"/**
* Returns the domain array with applied mask.
*/","* Returns all domains for the input values as COSArray.
     * Required for all function types.
     * @return the domains array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSize,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getSize(),95,102,"/**
* Returns the mask array with specified size.
* @return COSArray object representing the mask
*/","* The ""Size"" entry, which is the number of samples in each input dimension
     * of the sample table.
     *
     * @return A List of java.lang.Integer objects.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeValues(),170,182,"/**
* Returns a COS array representing the decode mask.
*/","* Returns all decode values as COSArray.
     * 
     * @return the decode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getFunctions,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getFunctions(),133,140,"/**
* Retrieves and returns the array of functions.
*/","* Returns all functions values as COSArray.
     * 
     * @return the functions array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getBounds,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getBounds(),147,154,"/**
* Returns the array of function masks.
*/","* Returns all bounds values as COSArray.
     * 
     * @return the bounds array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncode,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncode(),161,168,"/**
* Returns the COSArray representing the encoding mask.
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,getOwnerUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:getOwnerUserProperties(),64,74,"/**
* Retrieves a list of user properties from the specified dictionary.
* @return List of PDUserProperty objects
*/","* Returns the user properties.
     * 
     * @return the user properties",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,addUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),92,97,"/**
* Updates mask property of a user.
* @param userProperty PDUserProperty object containing updated values
*/","* Adds a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,removeUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),104,115,"/**
* Masks the specified PDUserProperty based on its properties.
* @param userProperty property to mask
*/","* Removes a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineColor(),85,98,"/**
* Returns a PDF color object representing the mask color.
*/","* Get the RGB color to be used for the guidelines.  This is guaranteed to
     * not return null. The default color is [0,0,0].
     *
     *@return The guideline color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isAttached(java.lang.String),123,137,"/**
* Checks if the given edge matches any mask in the attached elements.
* @param edge edge to check
* @return true if a match is found, false otherwise
*/","* Is the artifact attached to the given edge?
     * 
     * @param edge the edge
     * @return <code>true</code> if the artifact is attached to the given edge,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getColor(),447,460,"/**
* Returns the color value from annotation 'C' as a Color object.
* @return Color object or null if not found
*/","* Get the annotation color.
     *
     * @return The annotation color, or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getInteriorColor(),120,133,"/**
* Returns the color defined by the mask annotation.
* @return Color object or null if not found
*/","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getCallout(),157,161,"/**
* Returns an array of floats from the annotation's COSArray.
* @return array of floats or null if not found
*/","* This will get the coordinates of the callout line.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:getInkList(),139,155,"/**
* Extracts ink list from annotation and returns as a list of float arrays.
* @return List of float arrays or null if not found
*/","* Get the paths making up the freehand ""scribble"".
     *
     * @see #setInkList(List)
     * @return the List of arrays representing the paths.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLine(),172,176,"/**
* Retrieves mask values from annotation array.
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setStartPointEndingStyle(java.lang.String),183,199,"/**
* Sets annotation line style mask.
* @param style the desired style (or null to reset)
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getStartPointEndingStyle(),206,210,"/**
* Returns function mask value from annotation line.
* @return function mask string or LE_NONE if not found
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setEndPointEndingStyle(java.lang.String),217,233,"/**
* Sets annotation line style mask.
* @param style desired line style (or null for none)
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getEndPointEndingStyle(),240,244,"/**
* Retrieves line function mask.
* @return Function mask value or default if not found
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getInteriorColor(),266,279,"/**
* Returns a Color object representing the mask color.
* @return Color object or null if not found
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionHorizontalOffset(float),386,398,"/**
* Updates the CO annotation with a mask value.
* @param offset floating-point mask value
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionHorizontalOffset(),405,409,"/**
* Retrieves the mask value from the annotation array.
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionVerticalOffset(float),416,427,"/**
* Updates the 'CO' annotation with or without offset.
* @param offset floating-point value to update the annotation
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionVerticalOffset(),434,438,"/**
* Returns the mask value from the annotation array.
* @return Mask value as a float or 0f if not found
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getVertices(),126,130,"/**
* Returns an array of mask values from the vertices annotation.
* @return Array of floats or null if not found
*/","* This will get the coordinates of the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getInteriorColor(),152,165,"/**
* Retrieves the color mask value as a Color object.
* @return null if no mask is specified, otherwise a Color with RGB values from the annotation
*/","* This will get interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getVertices(),143,147,"/**
* Retrieves and returns an array of vertex coordinates.
* @return Array of floats representing 3D vertices or null if not found
*/","* This will get the coordinates of the the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setStartPointEndingStyle(java.lang.String),154,169,"/**
* Sets annotation line style mask.
* @param style desired style (null for default)
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getStartPointEndingStyle(),176,180,"/**
* Returns the line mask from annotation.
* @return line mask string or default value if not found
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setEndPointEndingStyle(java.lang.String),187,202,"/**
* Sets line style mask for annotations.
* @param style line style (null to reset to default)
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getEndPointEndingStyle(),209,213,"/**
* Returns annotation line mask value.
* @return Line mask value or LE_NONE if not found
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getInteriorColor(),235,248,"/**
* Retrieves a color mask from annotation IC.
* @return Color object or null if not found
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getInteriorColor(),121,134,"/**
* Retrieves color value from annotation.
* @return Color object or null if not found
*/","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,getCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:getCoords(),98,109,"/**
* Retrieves and returns the quad points array from annotations.
* @return float[] array of quad points or null if not found
*/","* Get the coordinates of individual words or group of words.
     * 
     * @see #setCoords(float[])
     * @return the array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getID(),305,308,"/**
 * Returns a COS array representing mask values.
 */","* This is the FDF id.
     *
     * @return The FDF ID.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFields(),325,339,"/**
* Returns a list of FDF fields from the COS array.
* @return List of FDFField objects or null if empty
*/","* This will get the list of FDF Fields. This will return a list of FDFField objects.
     *
     * @return A list of FDF fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getPages(),376,390,"/**
* Fetches and constructs a list of FDFPages from the COSArray.
* @return List of FDFPages or null if empty
*/","* This will get the list of FDF Pages. This will return a list of FDFPage objects.
     *
     * @return A list of FDF pages.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getKids,org.apache.pdfbox.pdmodel.fdf.FDFField:getKids(),177,190,"/**
* Retrieves a list of FDF fields from the 'KIDS' array.
* @return List<FDFField> or null if not found
*/","* This will get the list of kids. This will return a list of FDFField objects.
     * This will return null if the underlying list is null.
     *
     * @return The list of kids.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:getOptions(),661,683,"/**
* Parses and returns a list of option elements from the given COSArray.
* @return List of Object containing parsed options or null if none found
*/","* This will return a list of options for a choice field.
     * The values in the list will be 1 of 2 types:<ul>
     *     <li><code>String</code> </li>
     *     <li>{@link FDFOptionElement}</li>
     * </ul>
     *
     * @return A list of all options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:getTemplates(),71,84,"/**
* Retrieves a list of FDF templates from the page's resources.
* @return List of FDFTemplate objects or null if not found
*/","* This will get a list of FDFTemplage objects that describe the named pages that serve as templates.
     *
     * @return A list of templates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getFields(),92,105,"/**
* Creates a list of FDFField objects from the 'FIELDS' array in the template.
* @return List<FDFField> or null if the 'FIELDS' array is missing
*/","* This will get a list of fields that are part of this template.
     *
     * @return A list of fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readWidths,org.apache.pdfbox.pdmodel.font.PDCIDFont:readWidths(),74,139,"/**
* Parses and populates the 'widths' map from a PDF dictionary.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readVerticalDisplacements,org.apache.pdfbox.pdmodel.font.PDCIDFont:readVerticalDisplacements(),141,192,"/**
* Calculates and populates dw2[], vertical displacement Y, and position vectors.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDFont:getAverageFontWidth(),388,430,"/**
* Calculates the average font width based on widths dictionary.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidths,org.apache.pdfbox.pdmodel.font.PDFont:getWidths(),525,540,"/**
* Returns a list of float values representing the width masks.
*/","* The widths of the characters. This will be null for the standard 14 fonts.
     *
     * @return The widths of the characters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getDescendantFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:getDescendantFont(org.apache.pdfbox.cos.COSDictionary),310,322,"/**
* Retrieves a COSDictionary representing the font mask from the given dictionary.
* @param dictionary input dictionary to search for the font mask
* @return COSDictionary object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,applyDifferences,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:applyDifferences(),151,175,"/**
* Processes differences in the PDF document.
* @param encoding PDF encoding object
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getWhitepoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getWhitepoint(),115,126,"/**
* Returns a PDTristimulus object with white point function mask.
* @return PDTristimulus object representing the standard white point
*/","* This will return the whitepoint tristimulus. As this is a required field
     * this will never return null. A default of 1,1,1 will be returned if the
     * pdf does not have any values yet.
     *
     * @return the whitepoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getBlackPoint(),135,146,"/**
* Creates a PDTristimulus with black point function values.
* @return PDTristimulus object representing black point
*/","* This will return the BlackPoint tristimulus. This is an optional field
     * but has defaults so this will never return null. A default of 0,0,0 will
     * be returned if the pdf does not have any values yet.
     *
     * @return the blackpoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getGamma(),121,133,"/**
* Returns a PDGamma object with a predefined mask value.
* @return PDGamma object with default mask values
*/","* Returns the gamma value.
     * If none is present then the default of 1,1,1 will be returned.
     * @return the gamma value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getMatrix(),140,151,"/**
* Returns a transformation matrix or a default identity matrix if none is found.
*/","* Returns the linear interpretation matrix, which is an array of nine numbers.
     * If the underlying dictionary contains null then the identity matrix will be returned.
     * @return the linear interpretation matrix",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getComponents(),90,103,"/**
* Extracts and returns a list of component names from the specified dictionary.
* @return List of String component names
*/","* Returns the names of the color components.
     * @return the names of the color components",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getARange(),199,207,"/**
* Creates a PDF Range object from the specified dictionary.
* @return PDRange object or default value if not found
*/","* This will get the valid range for the ""a"" component.
     * If none is found then the default will be returned, which is -100..100.
     * @return the ""a"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getBRange(),214,222,"/**
* Creates a PDF range object from the specified dictionary.
* @return PDRange object or default value if not found
*/","* This will get the valid range for the ""b"" component.
     * If none is found  then the default will be returned, which is -100..100.
     * @return the ""b"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setComponentRangeArray,"org.apache.pdfbox.pdmodel.graphics.color.PDLab:setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",244,264,"/**
* Sets or updates the specified range in the PDF document's dictionary.
* @param range PDRange object to update (null for default range)
* @param index index of range in dictionary
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOCGs(),115,124,"/**
* Retrieves or initializes the OCGs array from the dictionary.
* @return COSArray containing OCGs data
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBackground(),153,160,"/**
* Returns the mask array from the PDF background.
*/","* This will return the background.
     *
     * @return the background",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getDomain(),83,90,"/**
* Returns the domain as a COSArray.
*/","* This will get the optional Domain values of a function based shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getExtend(),56,63,"/**
* Returns the COSArray representing function masks.
*/","* This will get the optional Extend values for this shading.
     *
     * @return the extend values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getDomain(),81,88,"/**
* Returns the domain mask as a COS array.
*/","* This will get the optional Domain values for this shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getCoords(),106,113,"/**
* Returns an array of coordinate values.
* @return COSArray object containing coordinate data
*/","* This will get the Coords values for this shading.
     *
     * @return the coordinate values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeValues(),131,138,"/**
* Returns a COS array containing mask values.
*/","* Returns all decode values as COSArray.
     *
     * @return the decode array",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFontSetting(),437,441,"/**
* Retrieves PDF font setting from dictionary.
* @return PDFontSetting object or null if not found
*/","* This will get the font setting of the graphics state.
     *
     * @return The font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFields(),59,62,"/**
* Returns a COSArray of mask values.
* @return COSArray containing field masks
*/","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFields(),85,88,"/**
* Returns an array of field names.
*/","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getBorder(),731,757,"/**
* Creates a mask array for the PDF document.
* @return COSArray object representing the mask or null if not set
*/","* This will retrieve the border array. If none is available then it will create and return a
     * default array, which is [0 0 1]. The array consists of at least three numbers defining the
     * horizontal corner radius, vertical corner radius, and border width. The array may have a
     * fourth element, an optional dash array defining a pattern of dashes and gaps that shall be
     * used in drawing the border. If the array has less than three elements, the original array
     * will be copied and missing elements with value 0 will be added.
     *
     * @return the border array, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(org.apache.pdfbox.cos.COSName),799,822,"/**
* Retrieves a color object from the catalog for the given item name.
* @param itemName unique identifier of the color item
* @return PDColor object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:getRectDifferences(),92,96,"/**
* Returns mask array from COSArray with specified name.
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the boundaries of the underlying caret.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifferences(),179,183,"/**
* Returns an array of mask values.
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getCallout(),208,212,"/**
* Retrieves and returns a float array from the COSArray instance.
* @return float array or null if retrieval fails
*/","* This will get the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:getInkList(),86,107,"/**
* Extracts and converts InkList from COS array.
* @return 2D float array containing InkList data or empty array if not found
*/","* Get one or more disjoint paths that make this annotation.
     *
     * @return An array of arrays, each representing a stroked path. Each array shall be a series of
     * alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLine(),145,149,"/**
* Retrieves and returns array of floats from COSArray using m1(), m2(), and m3() methods. 
* @return float[] or null if operation fails
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setStartPointEndingStyle(java.lang.String),156,171,"/**
* Sets annotation line style mask.
* @param style desired annotation line style (null for default)
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getStartPointEndingStyle(),178,186,"/**
* Returns the function mask value based on the specified conditions.
* @return Function mask string or LE_NONE if not applicable
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setEndPointEndingStyle(java.lang.String),193,208,"/**
* Updates the line style mask for a PDF annotation.
* @param style new line style (null to reset)
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getEndPointEndingStyle(),215,223,"/**
* Returns mask value based on array size and content.
* @return String representation of mask value or LE_NONE by default
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionHorizontalOffset(float),352,363,"/**
* Applies a mask to the CO array with specified offset value.
* @param offset float value for masking
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionHorizontalOffset(),370,374,"/**
* Retrieves and returns the first element of the masked value from the COS array.
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionVerticalOffset(float),381,392,"/**
* Applies a mask to the CosArray with specified offset.
* @param offset float value representing the offset
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionVerticalOffset(),399,403,"/**
* Calculates and returns the mask value from the given array.
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getQuadPoints(),211,215,"/**
* Retrieves and returns quad points mask as a float array.
* @return Quad points mask or null if not available
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getVertices(),111,115,"/**
* Retrieves and returns an array of vertex mask values. 
* @return array of float values or null if unsuccessful
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getPath,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getPath(),136,157,"/**
* Returns a 2D array of floats representing the mask data.
*/","* PDF 2.0: This will retrieve the arrays that shall represent the alternating horizontal
     * and vertical coordinates for path building.
     *
     * @return An array of float arrays, each supplying the operands for a path building operator
     * (m, l or c). The first array should have 2 elements, the others should have 2 or 6 elements.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setStartPointEndingStyle(java.lang.String),62,77,"/**
* Updates the line style mask for annotations.
* @param style desired annotation line style (null to reset)
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getStartPointEndingStyle(),84,92,"/**
* Returns the function mask for PDF annotations.
* @return String representation of the function mask or LE_NONE if not applicable
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setEndPointEndingStyle(java.lang.String),99,114,"/**
* Updates line style mask with the specified style.
* @param style line style to apply (null for no style)
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getEndPointEndingStyle(),121,129,"/**
* Returns the line end mask for PDF annotations.
* @return line end mask value or default if not applicable
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getVertices(),157,161,"/**
* Returns an array of vertex values if available, otherwise null.
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifferences(),168,172,"/**
* Retrieves the mask array from COS data.
* @return Array of floats representing the mask or empty if not found
*/","* This will get the differences between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:getQuadPoints(),69,73,"/**
* Returns quadpoint mask values as an array of floats.
* @return Quadpoint mask values or null if failed
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getColor(org.apache.pdfbox.cos.COSName),214,237,"/**
* Retrieves PDF color information for a given item name.
* @param itemName COSName of the item
* @return PDColor object or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setOS(java.lang.String),233,250,"/**
* Sets or updates the OS mask in the dictionary.
* @param os the operating system name (or null to reset)
*/","* Indicates the operating system. The string format isn't specified yet. Value will be stored
     * as first item of the array, as specified in PDF Signature Build Dictionary Specification for
     * PDF v1.7.
     *
     * @param os is a string with the system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSubFilter(),279,283,"/**
* Retrieves and returns the SUBFILTER field values as a list of strings.","* If <b>SubFilter</b> is not null and the {@link #isSubFilterRequired()} indicates this
     * entry is a required constraint, then the first matching encodings shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isSubFilterRequired()}
     * indicates that this is an optional constraint, then the first matching encoding shall
     * be used if it is available. If it is not available, a different encoding may be used
     * instead.
     *
     * @return the subfilter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getDigestMethod(),305,309,"/**
* Retrieves an array of digest method names from the given dictionary.
* @return list of string values or empty list if not found
*/","* An array of names indicating acceptable digest algorithms to use when
     * signing. The value shall be one of <b>SHA1</b>, <b>SHA256</b>, <b>SHA384</b>,
     * <b>SHA512</b>, <b>RIPEMD160</b>. The default value is implementation-specific.
     *
     * @return the digest method that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getReasons(),377,381,"/**
* Returns a list of reason strings from the given dictionary.
* @return list of reason strings or empty list if not found
*/","* If the Reasons array is provided and {@link #isReasonRequired()} indicates that
     * Reasons is a required constraint, one of the reasons in the array shall be used
     * for the signature dictionary; otherwise signing shall not take place. If the
     * {@link #isReasonRequired()} indicates Reasons is an optional constraint, one of
     * the reasons in the array may be chose or a custom reason can be provided.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getLegalAttestation(),492,496,"/**
* Retrieves a list of strings from the legal attestation field in the dictionary.
* @return List of strings or an empty list if not found
*/","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubject(),219,223,"/**
* Fetches and processes subject keywords from PDF dictionary.
* @return list of byte arrays or null if not found
*/","* Returns list of byte arrays that contains DER-encoded X.509v3 certificates
     * 
     * @return list of byte arrays containing DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addSubject(byte[]),245,254,"/**
* Sets the subject of a PDF document using the provided byte array.
* @param subject byte array containing the subject text
*/","* (Optional) byte array containing DER-encoded X.509v3 certificate that is acceptable for
     * signing. works like {@link #setSubject(List)} but one byte array
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeSubject(byte[]),261,268,"/**
* Updates or initializes subject field in PDF dictionary.
* @param subject byte array representing subject value
*/","* removes a subject from the list
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getKeyUsage(),339,355,"/**
* Retrieves a list of string values from the 'key_usage' dictionary entry.
* @return List of key usage extensions or null if not found
*/","* Returns list of key usages of certificate strings where each string is 9 characters long and each character is
     * one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't care. each index in the string
     * represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     * 
     * @return list of key usages of certificate strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(java.lang.String),389,406,"/**
* Validates and sets the key usage extension in the dictionary.
* @param keyUsageExtension string representation of key usage
*/","* (Optional; PDF 1.7) specifies an acceptable key-usage extension that must be presennt in the
     * signing certificate for works like {@link #setKeyUsage(List)} but takes only one string
     *
     * @param keyUsageExtension String that consist only of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeKeyUsage(java.lang.String),444,451,"/**
* Updates or adds a PAdES Key Usage Extension to the PDF document.
* @param keyUsageExtension PAdES Key Usage Extension value
*/","* Removes a key usage extension
     *
     * @param keyUsageExtension ASCII string that consists of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getIssuer(),458,462,"/**
* Retrieves a list of issuer certificates from the dictionary.
* @return List of byte arrays representing the issuer certificates, or null if not found
*/","* Returns list of array of bytes of DER-encoded X.509v3 certificates
     * 
     * @return list of array of bytes of DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addIssuer(byte[]),483,492,"/**
* Updates the ISSUER entry in the Dictionary with the provided issuer byte array. 
* @param issuer byte array representing the issuer
*/","* array of bytes containing DER-encoded X.509v3 certificates of acceptable issuers. If the
     * signer’s certificate chains up to any of the specified issuers (either directly or
     * indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeIssuer(byte[]),499,506,"/**
* Updates the ISSUER attribute in the PDF dictionary with the provided issuer value.
* @param issuer byte array representing the issuer information
*/","* Removes an issuer from the issuers list
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getOID(),514,518,"/**
* Retrieves and parses OID mask from the PDF dictionary.
* @return list of byte arrays or null if not found
*/","* Returns A list of array of bytes that contain Object Identifiers (OIDs) of the certificate policies that must be
     * present in the signing certificate
     * 
     * @return list of array of bytes that contain Object Identifiers of the certificate policies",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addOID(byte[]),537,546,"/**
* Adds OID mask to the PDF dictionary.
* @param oid byte array representing the OID value
*/","* works like {@link #setOID(List)} but for one object
     *
     * @param oid Object Identifier of a certificate policy to be added",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeOID(byte[]),553,560,"/**
* Updates OID mask in PDF dictionary.
* @param oid byte array representing OID value
*/","* removes an OID from the list
     *
     * @param oid Object Identifier of the certificate policy to be removed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getByteRange(),298,311,"/**
* Returns an array of byte mask values from the dictionary.
* @return Array of int values representing byte masks
*/","* Read out the byterange from the file.
     *
     * @return an integer array with the byterange, or an empty array if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTextColor(),323,333,"/**
* Returns a mask color object with default values.
*/","* Get the RGB text color of this node.  Default is black and this method
     * will never return null.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getCalcOrder(),696,720,"/**
* Retrieves a list of PDFields that match the COSArray entries.
* @return List of matching PDField objects
*/","* Return the calculation order in which field values should be recalculated when the value of
     * any field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @return field list. Note these objects may not be identical to PDField objects retrieved from
     * other methods (depending on cache setting). The best strategy is to call
     * {@link #getCOSObject()} to check for identity. The list is not backed by the /CO COSArray in
     * the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,removeFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:removeFields(java.util.List),854,871,"/**
* Updates mask for each PDField in the provided list.
* @param fields List of PDF fields to update
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getSelectedOptionsIndex(),225,229,"/**
* Retrieves and returns a list of integers from a COS array.
*/","* This will get the indices of the selected options - the 'I' key.
     * <p>
     * This is only needed if a choice field allows multiple selections and
     * two different items have the same export value or more than one values
     * is selected.
     * </p>
     * <p>The indices are zero-based</p>
     *
     * @return List containing the indices of all selected options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeXs(),78,93,"/**
* Retrieves an array of number format dictionaries from the X object.
* @return Array of PDNumberFormatDictionary objects or null if not found
*/","* This will return the changes along the x-axis.
     * 
     * @return changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeYs(),115,130,"/**
* Retrieves and initializes an array of PDNumberFormatDictionary objects based on the 'Y' entry in the internal dictionary.
* @return Array of initialized PDNumberFormatDictionary objects or null if 'Y' is not found.","* This will return the changes along the y-axis.
     * 
     * @return changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getDistances(),152,167,"/**
* Retrieves an array of PDF number format dictionaries.
*/","* This will return the distances.
     * 
     * @return distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAreas(),189,204,"/**
* Returns an array of PDF number format dictionaries.
* @return Array of PDNumberFormatDictionary objects or null if empty
*/","* This will return the areas.
     * 
     * @return areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAngles(),226,241,"/**
* Retrieves and initializes an array of PDNumberFormatDictionary objects.
* @return array of PDNumberFormat dictionaries or null if none found
*/","* This will return the angles.
     * 
     * @return angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getLineSloaps(),263,278,"/**
* Returns an array of PDF number format dictionaries.
* @return Array of PDNumberFormatDictionary objects or null if not found
*/","* This will return the sloaps of a line.
     * 
     * @return the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCoordSystemOrigin(),300,304,"/**
* Retrieves and returns the mask array from the COS object.
* @return mask array or null if not found
*/","* This will return the origin of the coordinate system.
     * 
     * @return the origin",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getVisibilityPolicy(),108,111,"/**
 * Returns a mask of function names in the dictionary.
 */","* Get the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     *
     * @return the visibility policy, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String),639,642,"/**
* Recursively calls COSName.m1() with the provided key.
* @param key input string to be processed
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",687,695,"/**
* Returns COSName value or default string if not found.
* @param key unique identifier
* @param defaultValue fallback string to return
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefStreamOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefStreamOffset(long),352,390,"/**
* Checks if a cross-reference table exists at the specified offset.
* @param startXRefOffset zero-based offset to search for XRef
*/","* Check if the cross reference stream can be found at the current offset.
     * 
     * @param startXRefOffset the expected start offset of the XRef stream
     * @return the revised offset
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageMode(),468,487,"/**
* Returns the page mode based on the COSName.PAGE_MODE value.
* @return PageMode enum value or USE_NONE if not set
*/","* Returns the page display mode.
     * 
     * @return the PageMode of the document, if not present PageMode.USE_NONE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLayout(),504,520,"/**
* Returns the page layout for a given COS name, or defaults to single-page layout if invalid.
* @return The selected page layout
*/","* Returns the page layout.
     * 
     * @return the PageLayout of the document, if not present PageLayout.SINGLE_PAGE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getVersion(),599,602,"/**
* Returns a function mask string based on COSName.VERSION.","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTrapped(),251,254,"/**
* Returns a string representing the function mask.
* @return Function mask string
*/","* This will get the trapped value for the document.
     * This will return null if one is not found.
     *
     * @return The trapped value for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStyle(),104,107,"/**
* Returns a string mask from the ""root"" object's m1 property with key ""KEY_STYLE"". 
* @return string representation of the masked value.","* Returns the numbering style for this page range.
     * 
     * @return one of the STYLE_* constants",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,getType,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:getType(),58,61,"/**
* Returns COS name type as a string. 
* @return COS name type value","* Gets the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:create(org.apache.pdfbox.cos.COSDictionary),63,93,"/**
* Creates a PDAttributeObject based on the owner COSName from the provided dictionary.
* @param dictionary COSDictionary containing the attribute information
*/","* Creates an attribute object.
     * 
     * @param dictionary the dictionary
     * @return the attribute object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,getOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:getOwner(),122,125,"/**
* Returns function mask string.
* Uses COSName constants to determine mask value.","* Returns the owner of the attributes.
     * 
     * @return the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureType(),76,79,"/**
* Generates a mask string by invoking nested methods m1 and m2.
* @return The resulting mask string
*/","* Returns the structure type (S).
     * 
     * @return the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:create(org.apache.pdfbox.cos.COSDictionary),68,80,"/**
* Returns the appropriate PD structure node based on the COS dictionary type.
* @param node COSDictionary containing type information
* @return PDStructureNode instance or null for invalid types
*/","* Creates a node in the structure tree. Can be either a structure tree root,
     *  or a structure element.
     * 
     * @param node the node dictionary
     * @return the structure node",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getType(),99,102,"/**
* Returns the function mask as a string.
* @return Function mask value.","* Returns the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObjectFromDic,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObjectFromDic(org.apache.pdfbox.cos.COSDictionary),392,414,"/**
* Creates a COS object based on the type specified in the input dictionary.
* @param kidDic COS dictionary containing the type information
* @return COS objectable instance or null if unknown type
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getName(),63,66,"/**
* Returns a mask string based on COSName.N value.","* Returns the property name.
     * 
     * @return the property name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getLanguage(),108,112,"/**
* Retrieves a string value based on language-specific settings.
* @return null if not found, otherwise the retrieved string
*/","* Gets the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getType(),45,48,"/**
* Retrieves function mask based on COSName constants.
* @return Function mask string or null if not found
*/","* Gets the type (Type).
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getSubtype,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getSubtype(),110,113,"/**
* Returns a string representing the functional mask.
* @return string representation of the functional mask
*/","* Gets the subtype (Subtype).
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getFilter(),159,162,"/**
* Returns filter mask string from dictionary.
* @return filter mask string or null if not available
*/","* Get the name of the filter.
     *
     * @return The filter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSubFilter(),169,172,"/**
* Retrieves filter mask from dictionary. 
* @return filter mask string","* Get the name of the subfilter.
     *
     * @return The subfilter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,create,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:create(org.apache.pdfbox.cos.COSDictionary),323,403,"/**
* Creates an annotation instance based on the provided COSDictionary.
* @param fdfDic COSDictionary containing annotation subtype and data
* @return FDFAnnotation object or null if unknown subtype
*/","* Create the correct FDFAnnotation.
     *
     * @param fdfDic The FDF dictionary.
     *
     * @return A newly created FDFAnnotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getIntent(),856,859,"/**
* Returns the mask value using annot.m1 with COSName.IT.","* Get the intent of the annotation.
     * 
     * @return The intent of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getLineEndingStyle(),292,295,"/**
* Generates a function mask using annot.m1 with COSName.LE. 
* @return The generated function mask as a string
*/","* This will retrieve the line ending style.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getVersion(),96,99,"/**
* Returns function mask string from catalog.
* @return Function mask string (or null if failed)
*/","* This will get the version that was specified in the catalog dictionary.
     *
     * @return The FDF version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEncoding(),408,417,"/**
* Returns the PDF document encoding mask.
*/","* The encoding to be used for a FDF field. The default is PDFDocEncoding and this method will never return null.
     *
     * @return The encoding value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleOption(),95,103,"/**
* Returns functional mask value as a string, 
* defaulting to 'SCALE_OPTION_ALWAYS' if not found.","* This will get the scale option. See the SCALE_OPTION_XXX constants. This is guaranteed to never return null.
     * Default: Always
     *
     * @return The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleType(),121,129,"/**
* Returns functional mask string.
* @return functional mask value or default scale type (""SCALE_TYPE_PROPORTIONAL"") if not found
*/","* This will get the scale type. See the SCALE_TYPE_XXX constants. This is guaranteed to never return null. Default:
     * Proportional
     *
     * @return The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDCIDFont:getBaseFont(),205,208,"/**
* Returns font mask string based on base font name.
* @return Font mask string or null if not found
*/","* The PostScript name of the font.
     *
     * @return The postscript name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getRegistry,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getRegistry(),47,50,"/**
* Retrieves a string value from the registry.
* @return string value associated with COSName.REGISTRY key
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getOrdering,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getOrdering(),52,55,"/**
* Retrieves function mask value from dictionary.
* @return string representation of function mask value
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getType,org.apache.pdfbox.pdmodel.font.PDFont:getType(),505,508,"/**
* Returns a string mask based on dictionary value.
* @return COS Name type as a string
*/","* This will always return ""Font"" for fonts.
     * 
     * @return The type of object that this is.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSubType,org.apache.pdfbox.pdmodel.font.PDFont:getSubType(),515,518,"/**
* Retrieves and returns a subtype mask value from the dictionary. 
* @return subtype mask value as a string","* This will get the subtype of font.
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontName(),285,288,"/**
* Returns font name as mask string.
* @return font name string
*/","* Get the font name.
     *
     * @return The name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontStretch(),361,364,"/**
* Returns font stretch mask value from dictionary.","* A string representing the preferred font stretch.
     * According to the PDF Spec:
     * The font stretch value; it must be one of the following (ordered from
     * narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed,
     * Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
     *
     * @return The stretch of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,fixType0Subtype,"org.apache.pdfbox.pdmodel.font.PDFontFactory:fixType0Subtype(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",192,212,"/**
* Updates font descriptor and descendant font based on subtype.
* @param descendantFont COSDictionary for the descendant font
* @param fontDescriptor COSDictionary for the font descriptor
* @param newSubType new subtype to apply
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBaseFont(),258,261,"/**
* Returns font mask value from dictionary.
* @return string representation of font mask or default if not found
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType0Font:getBaseFont(),414,417,"/**
* Returns font mask value from dictionary.","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBaseFont(),153,156,"/**
* Returns font mask string from dictionary.
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getBaseFont(),371,374,"/**
 * Returns the function mask string from dictionary.
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType3Font:getName(),89,93,"/**
* Returns the functional mask value from dictionary. 
* @return COSName.NAME value as string or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:isNChannel(),118,121,"/**
 * Retrieves the functional mask value from the dictionary.
 * @return true if successful, false otherwise
 */","* Returns true if this is an NChannel (PDF 1.6) color space.
     * @return true if this is an NChannel color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getType(),83,86,"/**
* Returns a string representing the function mask.
* @return function mask value as a string
*/","* This will get the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @return The Type of PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getSubType(),104,107,"/**
* Returns a function mask string based on COSName.S.
* @return Function mask string
*/","* This will get the type of action that the actions dictionary describes.
     *
     * @return The S entry of actions dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,createAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:createAction(org.apache.pdfbox.cos.COSDictionary),46,104,"/**
* Creates a PDAction object based on the provided COSDictionary.
* @param action COSDictionary containing action data
* @return corresponding PDAction object or null if not found
*/","* This will create the correct type of action based on the type specified
     * in the dictionary.
     *
     * @param action An action dictionary.
     *
     * @return An action of the correct type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getSubtype(),244,247,"/**
* Returns function mask string.
* @return function mask value as a string
*/","* This will retrieve the subtype of the annotation.
     *
     * @return The subtype of this annotation, see the SUB_TYPE_XXX constants.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionPositioning(),332,335,"/**
* Returns a string representation of function mask.
* @return function mask string
*/","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getIntent(),253,256,"/**
* Generates function mask using COSName.IT.
* @return generated mask as string
*/","* This will retrieve the intent of the annotation The values and meanings are specific to the actual annotation See
     * the IT_* constants for the annotation classes.
     *
     * @return the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getSubtype(),77,80,"/**
* Returns function mask string based on subtype.
* @return function mask value as string
*/","* returns the subtype of the external data dictionary.
     * 
     * @return the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getName(),71,74,"/**
* Retrieves and returns a mask value from the dictionary. 
* @return string representation of the mask value","* The name of the software module that was used to create the signature.
     * @return the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getFilter(),254,257,"/**
* Retrieves filter mask from configuration dictionary. 
* @return Filter mask string value or null if not found
*/","* If <b>Filter</b> is not null and the {@link #isFilterRequired()} indicates this entry is a
     * required constraint, then the signature handler specified by this entry shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isFilterRequired()} indicates
     * that this is an optional constraint, this handler may be used if it is available. If it is
     * not available, a different handler may be used instead.
     *
     * @return the filter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURLType(),597,600,"/**
* Returns URL type mask from the dictionary.
* @return String representation of the mask","* A name indicating the usage of the URL entry. There are standard uses and there can be
     * implementation-specific use for this URL. The following value specifies a valid standard
     * usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     *
     * @return string of URL type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getFilter(),204,207,"/**
* Retrieves filter mask from dictionary. 
* @return String representation of filter mask","* Returns the filter.
     * @return the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSubFilter(),214,217,"/**
* Returns filter mask value from dictionary. 
* @return String representation of filter mask value","* Returns the subfilter.
     *
     * @return the subfilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldType(),172,176,"/**
* Returns a string representing the function mask.
* @return string representation of the function mask.","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getName(),105,108,"/**
* Returns the mask value using COSName.NAME.
* @return String representing the mask value
*/","* This will retrieve the name of the viewport.
     * 
     * @return the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getDuplex(),408,411,"/**
* Returns the DUPLEX mask value from preferences.
* @return string representation of the DUPLEX mask value
*/","* Get the Duplex preference.  See DUPLEX enumeration.
     *
     * @return the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String),704,707,"/**
* Recursively resolves COS name using m1() function.
* @param key input string to resolve
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName,java.lang.String)",748,756,"/**
* Returns the COS name value or default value if not found.
* @param key unique COS name identifier
* @param defaultValue default value to return if key is missing
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getLanguage(),579,582,"/**
* Returns a string representing the function mask.
* @return Function mask value as a string
*/","* Returns the language for the document, or null.
     * 
     * @return the language of the document if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTitle(),90,93,"/**
* Returns the title mask from COS configuration.
* @return title mask value as a string.","* This will get the title of the document.  This will return null if no title exists.
     *
     * @return The title of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:getAuthor(),110,113,"/**
* Returns author mask value.
*/","* This will get the author of the document.  This will return null if no author exists.
     *
     * @return The author of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:getSubject(),130,133,"/**
* Generates function mask using COSName.SUBJECT.
* @return string representation of the mask
*/","* This will get the subject of the document.  This will return null if no subject exists.
     *
     * @return The subject of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:getKeywords(),150,153,"/**
* Returns function mask string from keywords. 
* @return Function mask string 
*/","* This will get the keywords of the document.  This will return null if no keywords exists.
     *
     * @return The keywords of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreator(),170,173,"/**
* Returns creator mask string.
*/","* This will get the creator of the document.  This will return null if no creator exists.
     *
     * @return The creator of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:getProducer(),190,193,"/**
* Returns the function mask value.
* @return The COSName.PRODUCER value as a string
*/","* This will get the producer of the document.  This will return null if no producer exists.
     *
     * @return The producer of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getPrefix(),162,165,"/**
 * Returns the function mask value by calling m1 on the root object. 
 * @return function mask string or null if not found
 */","* Returns the page label prefix for this page range.
     * 
     * @return the page label prefix for this page range, or {@code null} if no
     *         prefix has been defined.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnicode(),128,131,"/**
* Returns function mask string.
* @return Function mask value from COSName.UF","* This will get the unicode file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFile(),150,154,"/**
* Returns the function mask value.
* @return Function mask string as per COSName.F
*/","* This will get the file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDos(),174,177,"/**
* Returns a string representation of a function mask.
*/","* This will get the name representing a Dos file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileMac(),184,187,"/**
* Returns the mask value using COSName.MAC. 
* @return the mask value as a string
*/","* This will get the name representing a Mac file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnix(),194,197,"/**
* Returns file system mask value.
* @return string representation of file system mask
*/","* This will get the name representing a Unix file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDescription(),353,356,"/**
* Returns function mask string from COSName.DESC. 
* @return Function mask string","* This will get the description.
     *
     * @return The file description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getElementIdentifier(),117,120,"/**
* Returns the function mask value.
* @return Function mask string from m1().m2(COSName.ID) call
*/","* Returns the element identifier (ID).
     * 
     * @return the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getTitle(),502,505,"/**
* Returns a string representation of the function mask.
* @return string containing the function mask information
*/","* Returns the title (T).
     * 
     * @return the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getLanguage(),522,525,"/**
* Returns function mask string using m1 and m2 methods.
* @return Function mask string
*/","* Returns the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAlternateDescription(),542,545,"/**
* Returns function mask string.
* @return Function mask value as string
*/","* Returns the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getExpandedForm(),562,565,"/**
* Returns a string representation of a function mask.
* @return function mask value as a string
*/","* Returns the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getActualText(),582,585,"/**
* Generates function mask string.
* @return Function mask value as a string.","* Returns the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getFormattedValue(),105,108,"/**
* Generates and returns a function mask.
*/","* Returns the string for the property value.
     * 
     * @return the string for the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getActualText(),119,123,"/**
* Returns actual text value as a string, or null if m1 returns null.
*/","* Gets the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getAlternateDescription(),130,134,"/**
* Fetches and returns user profile mask value.
* @return null if not found, otherwise masked string
*/","* Gets the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getExpandedForm(),141,145,"/**
* Returns a string value from m1's m2 method or null if m1 is null.
* @return String result or null
*/","* Gets the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getDate(),482,485,"/**
* Returns a mask string using annot.m1(COSName.M).
*/","* Modification date.
     *
     * @return The date as a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getName(),712,715,"/**
* Returns the function mask value using annot.m1(COSName.NM).
* @return Function mask string
*/","* Get the annotation name.
     *
     * @return The unique name of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getContents(),753,756,"/**
* Returns a string representing function mask.
* @return function mask value as a string
*/","* Get the text, or a description, of the annotation.
     *
     * @return The text, or a description, of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getTitle(),773,776,"/**
* Returns a string representing the function mask.
* @return The result of calling m1 with COSName.T as parameter.","* Get the annotation title.
     *
     * @return The title of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getSubject(),836,839,"/**
* Returns a subject mask string.
* @return subject-related mask value as a string
*/","* Get the description of the annotation.
     *
     * @return The subject of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getSymbol(),141,144,"/**
* Returns the function mask.
* @return COSName value representing the function mask.","* This will retrieve the symbol that shall be associated with the caret.
     * 
     * @return the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getRotation(),207,210,"/**
* Generates function mask using annotation library.
* @return COSName.ROTATE value as string representation
*/","* This will get the clockwise rotation in degrees.
     * 
     * @return The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultAppearance(),227,231,"/**
* Returns a string representing a function mask.
* @return String representation of a function mask.","* Get the default appearance string.
     *
     * @return The default appearance of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultStyle(),248,251,"/**
* Returns a string mask using annot.m1 with COSName.DS.","* Get the default style string.
     *
     * @return The default style of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionStyle(),366,369,"/**
* Returns a function mask using annot.m1(COSName.CP).
*/","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getState(),113,116,"/**
* Returns a string mask value using annot.m1 with COSName.STATE.","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getStateModel(),133,136,"/**
* Returns a string representation of the state model annotation mask.
*/","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getStatus(),356,359,"/**
* Returns mask value as string.
* @return COSName.STATUS constant value as string
*/","* This will get the status string to be displayed as the result of an action.
     *
     * @return The status.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getTarget(),489,492,"/**
* Returns the function mask value using COSName.TARGET. 
* @return string representation of the function mask
*/","* This will get the target frame in the browser to open this document.
     *
     * @return The target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:getPartialFieldName(),211,214,"/**
* Returns the function mask value using field m1 with COSName.T.
*/","* This will get the ""T"" entry in the field dictionary. A partial field name.
     * Where the fully qualified field name is a concatenation of the parent's fully qualified
     * field name and ""."" as a separator. For example<br>
     * Address.State<br>
     * Address.City<br>
     *
     * @return The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getName(),69,72,"/**
* Retrieves the COS mask value using the given name.
* @return COS mask value as a string or null if not found
*/","* This will get the name of the referenced page. A required parameter.
     *
     * @return The name of the referenced page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFamily(),310,313,"/**
* Returns font family mask value based on dictionary entry.
* @return string representation of font family mask value
*/","* A string representing the preferred font family.
     *
     * @return The font family.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCharSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCharSet(),701,704,"/**
* Returns the function mask string based on the character set. 
* @return function mask string or null if failed
*/","* This will get the character set for the font.
     *
     * @return The character set value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getInfo(),68,71,"/**
* Retrieves a function mask string from the dictionary.
* @return Function mask value as a string or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputCondition(),78,81,"/**
* Returns a string representation of the output condition mask.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputConditionIdentifier(),88,91,"/**
 * Returns the output condition identifier from the configuration dictionary. 
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getRegistryName(),98,101,"/**
 * Retrieves registry name from configuration.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getName(),101,104,"/**
* Returns COS name from dictionary.
* @return COS name string
*/","* Returns the name of the optional content group.
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroupNames,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroupNames(),228,251,"/**
* Retrieves an array of group names from the OCGS dictionary.
* @return Array of group names or empty array if not found
*/","* Lists all optional content group names.
     * @return an array of all names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getF(),118,121,"/**
* Returns function mask based on COSName constant.
* @return string representation of function mask
*/","* This will get the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @return The F entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getD(),141,144,"/**
* Returns a string representing a mask based on COSName.D.
* @return string representation of the mask
*/","* This will get the string specifying the default directory in standard DOS syntax.
     *
     * @return The D entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getO(),165,168,"/**
* Returns a string representing a function mask.
* @return Function mask value as a string
*/","* This will get the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @return The O entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getP(),190,193,"/**
* Returns function mask string using M1 operation on COS name P. 
* @return Function mask string or null if failed
*/","* This will get a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @return The P entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,getURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:getURI(),62,84,"/**
* Extracts and processes URI as a string.
* @return encoded string or null if invalid
*/","* This will get the uniform resource identifier to resolve. It should be encoded in 7-bit
     * ASCII, but UTF-8 and UTF-16 are supported too.
     *
     * @return The URI entry of the specific URI action dictionary or null if there isn't any.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getFilename(),103,106,"/**
* Returns the functional mask value as per COS specification.
* @return string representing the functional mask value
*/","* Get the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @return a filename or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationName(),242,245,"/**
* Returns a string mask from dictionary entry A.
* @return The retrieved string mask or null if not found
*/","* If the value in the /A entry is a string, this will get the value of the /NM entry in the
     * annotation dictionary.
     *
     * @return the /NM value of an annotation dictionary or null if the /A entry value is missing or
     * not a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getFilename(),79,82,"/**
* Returns the function mask value from Cosmos.
* @return function mask string
*/","* The file to launch.
     *
     * @return The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getDirectory(),99,102,"/**
* Returns the COS function name for the mask operation.
*/","* The dir to launch from.
     *
     * @return The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getExecuteParam(),142,145,"/**
* Returns a string mask value using COSName enum parameter P.
*/","* A parameter to pass the executable.
     *
     * @return The parameter to pass the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getContents(),606,609,"/**
* Returns function mask value from dictionary. 
* @return string representing function mask or null if not found
*/","* Get the ""contents"" of the field.
     * 
     * @return the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getModifiedDate(),626,629,"/**
* Generates function mask using COSName.M.
* @return string representation of the function mask
*/","* This will retrieve the date and time the annotation was modified.
     * 
     * @return the modified date/time (often in date format, but can be an arbitrary string).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationName(),661,664,"/**
* Generates a mask string using m1 and m2 functions.
* @return generated mask string
*/","* This will get the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @return The identifying name for the Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultAppearance(),76,79,"/**
* Generates a mask string using M1 and M2 methods with DA COS name.","* Get the default appearance.
     * 
     * @return a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultStyleString(),98,101,"/**
* Returns a string representation of the functional mask.
* @return Functional mask string
*/","* Get the default style string.
     *
     * The default style string defines the default style for rich text fields.
     *
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getTitlePopup(),72,75,"/**
* Generates functional mask value.
* @return unique mask identifier string
*/","* Retrieve the string used as the title of the popup window shown when open and active (by convention this
     * identifies who added the annotation).
     *
     * @return The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getSubject(),210,213,"/**
* Returns a string representation of the functional mask.
* @return Functional mask string
*/","* This will retrieve the short description of the subject of the annotation.
     *
     * @return the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getState(),188,191,"/**
* Returns a string representation of the functional mask.
*/","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getStateModel(),208,211,"/**
* Generates function mask string.
* @return Function mask value as a string.","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalCaption(),126,129,"/**
* Returns a string representation of a mask based on m1 and m2 values.
* @return a string representing the mask
*/","* This will retrieve the normal caption.
     * 
     * @return the normal caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverCaption(),146,149,"/**
* Generates function mask using COSName.RC.
* @return generated mask string
*/","* This will retrieve the rollover caption.
     * 
     * @return the rollover caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateCaption(),166,169,"/**
* Returns function mask string using m1 and m2 methods.","* This will retrieve the alternate caption.
     * 
     * @return the alternate caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getDate(),93,96,"/**
 * Retrieves the date mask from the dictionary. 
 */","* The build date of the software module. This string is normally produced by the compiler that
     * is used to compile the software, for example using the Date and Time preprocessor flags. As
     * such, this not likely to be in PDF Date format.
     *
     * @return the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getOS(),219,224,"/**
* Retrieves OS mask value from dictionary.
* @return OS mask string or default value if not found
*/","* Indicates the operating system. The string format isn't specified yet. In its PDF Signature
     * Build Dictionary Specifications Adobe differently specifies the value type to store operating
     * system string:<ul>
     * <li>Specification for PDF v1.5 specifies type as string;</li>
     * <li>Specification for PDF v1.7 specifies type as array and provided example for
     * <code>/PropBuild</code> dictionary indicate it as array of names.</li>
     * </ul>
     * This method supports both types to retrieve the value.
     *
     * @return the operating system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubjectDN(),276,299,"/**
* Extracts a list of DN maps from the subject dictionary.
* @return List of Map<String, String> objects or null if not found
*/","* Returns list of maps that contains subject distinguished names like [(cn: John Doe, o: Doe), (cn: John Smith)]
     * both keys are typically of the form 'cn', 'o', 'email', '2.5.4.43'; and values are text strings.
     * 
     * @return list maps that contains subject distinguished names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURL(),567,570,"/**
* Returns a function mask string from the dictionary.
* @return The function mask value associated with COSName.URL.","* returns String of the URL
     * 
     * @return string of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:getURL(),67,70,"/**
* Returns URL mask from configuration dictionary.
*/","* Returns the URL.
     * 
     * @return the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getName(),226,229,"/**
* Retrieves and returns the COSName constant from the dictionary. 
* @return The value of the COSName constant as a string.","* Returns the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getLocation(),236,239,"/**
* Retrieves functional mask value from dictionary using COSName.LOCATION key.","* Returns the CPU host name or physical location of the signing.
     *
     * @return the location",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getReason(),246,249,"/**
* Returns the reason mask from the dictionary.
* @return The dictionary's m1 value for COSName.REASON
*/","* Returns the reason for the signing, such as (I agree...).
     *
     * @return the reason",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContactInfo(),257,260,"/**
* Retrieves function mask from dictionary.
* @return Function mask string
*/","* Returns the contact info provided by the signer to enable a recipient to contact the signer
     * to verify the signature, e.g. a phone number.
     *
     * @return the contact info",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTitle(),165,168,"/**
* Returns a formatted string based on title-specific calculations.
*/","* Get the title of this node.
     *
     * @return The title of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getPartialName(),380,383,"/**
* Returns a string mask from the dictionary using COSName.T.","* Returns the partial name of the field.
     * 
     * @return the name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getAlternateFieldName(),431,434,"/**
* Returns the functional mask from the dictionary.
* @return The TU value as a string.","* Gets the alternate name of the field (""shall be used in place of the actual field name
     * wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)"").
     *
     * @return the alternate name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getMappingName(),457,460,"/**
* Returns a string mask from the COSName.TM dictionary.","* Gets the mapping name of the field.
     * 
     * The mapping name shall be used when exporting interactive form field
     * data from the document.
     * 
     * @return the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultStyleString(),154,157,"/**
* Generates mask value using COSName.DS.
* @return string representation of the generated mask
*/","* Get the default style string.
     * 
     * The default style string defines the default style for
     * rich text fields.
     * 
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getScaleRatio(),58,61,"/**
 * Extracts and returns the mask value.
 */","* This will return the scale ration.
     * 
     * @return the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String),793,796,"/**
 * Recursively resolves calendar instance by name.
 * @param key COSName identifier
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",834,842,"/**
* Returns user's calendar or default value if not found.
* @param key unique user identifier
* @param defaultValue calendar to use if user is not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreationDate(),210,213,"/**
* Returns creation date of a calendar in COS format.
* @return Calendar object representing creation date
*/","* This will get the creation date of the document.  This will return null if no creation date exists.
     *
     * @return The creation date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getModificationDate(),230,233,"/**
* Returns a calendar instance representing the modification date.
* @return Calendar object for MOD_DATE
*/","* This will get the modification date of the document.  This will return null if no modification date exists.
     *
     * @return The modification date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getCreationDate(),785,788,"/**
* Retrieves and returns creation date mask as a Calendar object.
* @throws IOException if an I/O error occurs
*/","* The annotation create date.
     *
     * @return The date of the creation of the annotation date
     *
     * @throws IOException If there is an error converting the string to a Calendar object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getCreationDate(),166,169,"/**
* Returns a Calendar instance based on creation date.
* @return Calendar object representing creation date
*/","* This will retrieve the date and time the annotation was created.
     *
     * @return the creation date/time.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignDate(),267,270,"/**
* Returns a Calendar object based on a predefined mask value.
* @return Calendar instance
*/","* Returns the sign date.
     *
     * @return the sign date",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String),1040,1043,"/**
* Calculates M^2 value using hash function.
* @param key input string to be hashed
*/","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     *
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName),1052,1055,"/**
* Returns default value of specified COS key.
* @param key unique COS identifier
*/","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String,long)",1065,1068,"/**
* Fetches value from cache with default value.
* @param key unique identifier
* @param defaultValue fallback value to return if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,decode,"org.apache.pdfbox.filter.Filter:decode(java.io.InputStream,java.util.List,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.filter.DecodeOptions,java.util.List)",231,299,"/**
* Applies a list of filters to encoded data, returning filtered output.
* @param encoded input stream of encoded data
* @param filterList list of filters to apply
* @param parameters decoding options and parameters
* @param options additional decode options
* @param results optional list of intermediate results
* @return filtered output as a RandomAccessRead object
*/","* Decodes data, with optional DecodeOptions. Not all filters support all options, and so callers should check the
     * options' <code>honored</code> flag to test if they were applied.
     *
     * @param encoded the input stream holding the encoded data
     * @param filterList list of filters to be used for decoding
     * @param parameters the parameters used for decoding
     * @param options additional options for decoding
     * @param results list of optional decoding results for each filter
     * @return the decoded stream data
     * @throws IOException if the stream cannot be decoded
     * @throws IllegalArgumentException if filterList is empty",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setStartxref,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setStartxref(long),233,302,"/**
* Fetches and initializes XRef trailer object from byte position.
* @param startxrefBytePosValue unique byte position value
*/","* Sets the byte position of the first XRef
     * (has to be called after very last startxref was read).
     * This is used to resolve chain of active XRef/trailer.
     *
     * In case startxref position is not found we output a
     * warning and use all XRef/trailer objects combined
     * in byte position order.
     * Thus for incomplete PDF documents with missing
     * startxref one could call this method with parameter value -1.
     * 
     * @param startxrefBytePosValue starting position of the first XRef
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String),1096,1099,"/**
* Calculates square of value returned by m1 with specified key.
* @param key input parameter for COSName.m1 function
*/","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName),1108,1111,"/**
 * Returns the first match value for the given COSName key. 
 * @param key unique COSName identifier
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String,float)",1121,1124,"/**
* Retrieves a float value from COS using the given key and returns default if not found.
* @param key unique identifier
* @param defaultValue fallback value to return if key is not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getUserUnit,org.apache.pdfbox.pdmodel.PDPage:getUserUnit(),877,881,"/**
* Returns the user unit value or a default of 1.0 if it's invalid.
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch, or 1 if it hasn't been set. This is supported by PDF 1.6
     * and higher.
     *
     * @return the user unit.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineWidth(),122,125,"/**
* Retrieves a float value from dictionary using COSName.W as key.","* Get the width of the of the guideline in default user space units.
     * The default is 1.
     *
     * @return The width of the guideline.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getOpacity(),815,819,"/**
 * Calculates and returns the mask value using annot.m1 function with CA constant.
 */","* Get the opacity value.
     *
     * @return The opacity of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontWeight(),337,340,"/**
* Retrieves font weight value from dictionary. 
* @return Font weight as a float value.","* The weight of the font.  According to the PDF spec ""possible values are
     * 100, 200, 300, 400, 500, 600, 700, 800 or 900""  Where a higher number is
     * more weight and appears to be more bold.
     *
     * @return The font weight.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getItalicAngle(),442,445,"/**
* Calculates the mask value using the specified angle and default value.
* @return Mask value as a float
*/","* This will get the italic angle for the font.
     *
     * @return The italic angle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAscent(),462,465,"/**
* Calculates and returns mask value using dictionary lookup.
* @return Mask value as a floating-point number
*/","* This will get the ascent for the font.
     *
     * @return The ascent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getDescent(),482,485,"/**
* Returns the function mask value using dictionary lookup. 
* @return Function mask value as a float.","* This will get the descent for the font.
     *
     * @return The descent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getLeading(),502,505,"/**
* Retrieves a floating-point value from the dictionary using the leading key. 
* @return the retrieved value or default value (0) if not found
*/","* This will get the leading for the font.
     *
     * @return The leading.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCapHeight(),522,533,"/**
* Calculates and returns the cap height value.
* @return Cap height value or recalculated default value if not set
*/","* This will get the CapHeight for the font.
     *
     * @return The cap height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getXHeight(),552,563,"/**
* Returns the x-height value from font metrics or initializes it.
*/","* This will get the x height for the font.
     *
     * @return The x height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemV(),581,584,"/**
* Calculates and returns a mask value using COSName.STEM_V and 0.
* @return mask value as a float
*/","* This will get the stemV for the font.
     *
     * @return The stem v value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemH(),601,604,"/**
 * Returns the value of 'stem_h' from the dictionary.
 */","* This will get the stemH for the font.
     *
     * @return The stem h value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAverageWidth(),621,624,"/**
* Calculates and returns the average width from dictionary. 
* @return Average width value as a float
*/","* This will get the average width for the font.
     *
     * @return The average width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMaxWidth(),641,644,"/**
 * Calculates and returns a floating-point mask value using MAX_WIDTH constant. 
 * @return calculated mask value as a float
 */","* This will get the max width for the font.
     *
     * @return The max width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMissingWidth(),681,684,"/**
* Calculates missing width mask value.
* @return float representing missing width mask value
*/","* This will get the missing width for the font from the /MissingWidth dictionary entry.
     *
     * @return The missing width value, or 0 if there is no such dictionary entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getGamma(),113,116,"/**
* Calculates gamma value from dictionary.
* @return gamma value as a floating-point number
*/","* This will get the gamma value. If none is present then the default of 1
     * will be returned.
     *
     * @return The gamma value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getXStep(),146,149,"/**
* Calculates and returns a float value using COSName.X_STEP.
*/","* This will return the XStep value.
     * @return The XStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getYStep(),164,167,"/**
 * Calculates and returns a floating-point value based on Y_STEP constant.
 */","* This will return the YStep value.
     * @return The YStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getVolume(),97,101,"/**
* Returns a normalized volume value between -1 and 1, or defaults to 1 if out of range.","* Sets the volume.
     *
     * @return The volume at which to play the sound, in the range −1.0 to 1.0. Default value: 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineLength(),272,275,"/**
* Calculates and returns a float value using m1() and m2() methods.
* @return float result of calculation
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineExtensionLength(),292,295,"/**
* Calculates and returns a floating-point value using m1().m2() with specified parameters.
*/","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineOffsetLength(),312,315,"/**
* Calculates mask value using m1 and m2 methods.
* @return calculated float value
*/","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getConstantOpacity(),114,117,"/**
* Calculates and returns a floating-point value by invoking m1().m2() with specific arguments.
* @return calculated float value
*/","* This will retrieve the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @return the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getWidth(),124,133,"/**
* Calculates mask value based on COSName instance and parameters.
* @return 0 if COSName is an instance of COSName; otherwise returns result from m3() 
*/","* This will retrieve the border width in points, 0 = no border.
     *
     * @return The width of the border in points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDuration(),147,150,"/**
 * Calculates and returns a floating-point mask value using the m1() and m2() methods.
 */",* @return The duration in seconds of the transition effect or the default 1 if no duration is found.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getFlyScale(),164,167,"/**
* Calculates and returns a masked floating-point value.
* @return Float value
*/","* @return The starting or ending scale at which the changes shall be drawn or the default 1 if no scale is found.
     * Only for {@link PDTransitionStyle#Fly}.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.contentstream.operator.Operator),81,84,"/**
* Applies mask operation to specified operator.
* @param op Operator instance to modify
*/","*  Writes a single operator token.
     *
     * @param op The operator to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(java.lang.Object),115,129,"/**
* Recursively processes COSBase or Operator objects, throwing an IOException for unknown types.",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,extractRegions,org.apache.pdfbox.text.PDFTextStripperByArea:extractRegions(org.apache.pdfbox.pdmodel.PDPage),113,130,"/**
* Processes page regions and updates associated data structures.
* @param page PDPage object
*/","* Process the page to extract the region text.
     *
     * @param page The page to extract the regions from.
     * @throws IOException If there is an error while extracting text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,internalGetDecodeParams,"org.apache.pdfbox.pdmodel.common.PDStream:internalGetDecodeParams(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",287,317,"/**
* Retrieves the mask (dictionary or array of dictionaries) for the given names.
* @param name1 first name
* @param name2 second name
* @return List of Object representing the mask, or null if not found
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getRoleMap(),176,191,"/**
* Retrieves and maps role information from the PDF.
* @return Map of role names to objects or an empty map if not found
*/","* Returns the role map.
     * 
     * @return the role map",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),162,169,"/**
* Applies mask to COSObjectable instance.
* @param objectable COSObjectable instance to modify
*/","* Appends an objectable kid.
     * 
     * @param objectable the objectable",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertObjectableBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",219,226,"/**
* Updates mask functionality with new kid object.
* @param newKid COSObjectable containing updated mask data
* @param refKid reference kid object for updating
*/","* Inserts an objectable kid before a reference kid.
     * 
     * @param newKid the objectable
     * @param refKid the reference kid",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),294,301,"/**
* Checks whether an object has a valid mask.
* @param objectable COSObjectable to check
* @return true if the object has a valid mask, false otherwise
*/","* Removes an objectable kid.
     * 
     * @param objectable the objectable
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setValue(org.apache.pdfbox.cos.COSBase),94,98,"/**
* Applies mask operation to COS object.
* @param value COS object to apply mask to
*/","* Sets the property value.
     * 
     * @param value the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,validatePerms,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)",318,356,"/**
* Verifies and extracts permissions from encrypted PDEncryption object.
* @param encryption PDEncryption object to extract permissions from
* @param dicPermissions expected permissions value
* @param encryptMetadata whether metadata should be encrypted
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidthForCID,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidthForCID(int),272,280,"/**
* Returns the width value associated with the given category ID.
* @param cid unique category identifier
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getAverageFontWidth(),326,355,"/**
* Calculates and returns the average character width.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(),67,70,"/**
 * Returns the default color space.
 */","* Returns the group color space or null if it isn't defined.
     *
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,create,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:create(org.apache.pdfbox.cos.COSDictionary),40,56,"/**
* Creates a PDPropertyList based on the provided dictionary type.
* @param dict COSDictionary object to determine property list type
* @return PDPropertyList instance or subclass instance if applicable
*/","* Creates a property list from the given dictionary.
     * 
     * @param dict COS dictionary
     * @return a new instance of a PDPropertyList using the given dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineWidth(),222,225,"/**
* Calculates and returns a mask value using trigonometric function m1.","* This will get the line width.  This will return null if there is no line width
     *
     * @return null or the LW value of the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getMiterLimit(),283,286,"/**
* Calculates and returns the mask value using the M1 function with COSName ML. 
* @return The calculated mask value as a Float object. 
*/","* This will get the miter limit.
     *
     * @return null or the ML value in the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFlatnessTolerance(),458,461,"/**
* Calculates and returns the mask value.
* @return The calculated mask value as a Float.","* This will get the flatness tolerance.
     *
     * @return The flatness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSmoothnessTolerance(),478,481,"/**
* Calculates and returns a float value using the COSName.SM constant. 
* @return calculated float value 
*/","* This will get the smothness tolerance.
     *
     * @return The smothness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingAlphaConstant(),518,521,"/**
* Calculates and returns mask value using COSName.CA.
* @return Mask value as a float.","* This will get the stroking alpha constant.
     *
     * @return The stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingAlphaConstant(),538,541,"/**
* Calculates and returns the mask value using COSName.CA_NS.
* @return calculated mask value as a Float
*/","* This will get the non stroking alpha constant.
     *
     * @return The non stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
* Constructs a new PDAnnotationLink object from a COS dictionary.","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDAnnotationMarkup object from a COS dictionary.
 * @param dict COS dictionary containing annotation markup data
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Initializes PDAnnotationPopup with COS dictionary.
* @param field COS dictionary containing popup data.","* Creates a popup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnknown.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:<init>(org.apache.pdfbox.cos.COSDictionary),35,38,"/**
 * Constructs a PDAnnotationUnknown object from a COS dictionary.
 * @param dic COS dictionary containing annotation data
 */","* Creates an arbitrary annotation from a COSDictionary, expected to be a correct object definition for some sort of
     * annotation.
     *
     * @param dic The dictionary which represents this Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(org.apache.pdfbox.cos.COSDictionary),53,57,"/**
* Initializes PDAnnotationWidget with COSDictionary.
* @param field COS dictionary containing annotation data
*/","* Creates a PDWidget from a COSDictionary, expected to be a correct object definition for a field in PDF.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsExportValues(),209,212,"/**
* Returns a list of string masks.
*/","* This will get the export values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the export value is the 
     * first entry in the two-element array.
     * </p>
     *
     * @return List containing all export values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValue(),432,435,"/**
* Returns list of strings representing mask values.
* @return list of string mask values
*/","* Returns the selected values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getDefaultValue(),443,446,"/**
* Retrieves a list of mask names.
* @return list of string values representing mask names
*/","* Returns the default values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSBaseForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSBaseForNewDocument(org.apache.pdfbox.cos.COSBase),105,124,"/**
* Applies a mask to the given COSBase object, delegating to specific methods based on its type.
* @param base COSBase object to be masked
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSBase),629,635,"/**
* Recursively processes COS object and writes it to storage.
* @param obj COSBase object to process
*/","* This will write a COS object.
     *
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeArray,org.apache.pdfbox.pdfwriter.COSWriter:writeArray(org.apache.pdfbox.cos.COSArray),1154,1165,"/**
* Handles COSArray based on its type, invoking specific methods accordingly.
* @param array COSArray object to process
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeDictionary,org.apache.pdfbox.pdfwriter.COSWriter:writeDictionary(org.apache.pdfbox.cos.COSDictionary),1167,1178,"/**
* Processes COSDictionary based on its type, invoking specific handlers.
* @param dictionary the COSDictionary to process
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObject(java.io.OutputStream,org.apache.pdfbox.cos.COSBase,boolean)",168,250,"/**
* Writes a COSBase object to the output stream.
* @param object COSBase object to write
* @param topLevel true if writing at top level, false otherwise
*/","* This method prepares and writes COS data to the object stream by selecting appropriate specialized methods for
     * the content.
     *
     * @param output The stream, that shall be written to.
     * @param object The content, that shall be written.
     * @param topLevel True, if the currently written object is a top level entry of this object stream.
     * @throws IOException Shall be thrown, when an exception occurred for the write operation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addCornerCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addCornerCurl(double,double,double,double,double,double,double,boolean)",428,439,"/**
* Updates curve segment based on user input.
* @param anglePrev previous angle
* @param angleCur current angle
* @param radius curve radius
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param alpha rotation delta
* @param alphaPrev previous rotation delta
* @param addMoveTo whether to add a move-to command
*/",* Creates a corner curl for polygons and ellipses.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,drawBasicEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:drawBasicEllipse(double,double,double,double)",1000,1008,"/**
* Calculates and applies mask for rectangle region.
* @param left left edge of the rectangle
* @param bottom bottom edge of the rectangle
* @param right right edge of the rectangle
* @param top top edge of the rectangle
*/",* Draws an ellipse without a cloudy border effect.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,preparePredictorPDImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",566,620,"/**
* Creates a PDImageXObject from a binary stream and color space.
* @param stream binary data
* @param bitsPerComponent pixel component depth
* @return PDImageXObject object or null on error
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(),42,47,"/**
* Initializes page fit destination with default settings.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:setFitBoundingBox(boolean),74,85,"/**
* Applies mask to array based on bounding box fitting flag.
* @param fitBoundingBox true to apply bounded mask, false for standard mask
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(),42,47,"/**
* Initializes page destination with fit height setup. 
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setLeft(int),75,86,"/**
* Updates array values based on input mask value.
* @param x input mask value (-1 or positive integer)
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setFitBoundingBox(boolean),103,114,"/**
* Configures the mask array based on bounding box fitting flag.
* @param fitBoundingBox true to fit within bounding box, false otherwise
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(),38,43,"/**
* Initializes page fit rectangle destination with default properties.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setLeft(int),71,82,"/**
* Updates an array with masked value based on input integer.
* @param x input value to determine masking logic
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setBottom(int),100,111,"/**
* Applies mask to array based on input value.
* @param y input value determining mask operation
*/","* Set the bottom y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The bottom y coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setRight(int),129,140,"/**
* Applies a mask operation on the data structure based on input value 'x'.
* @param x input value to determine mask operation (-1 for special case)
*/","* Set the right x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The right x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setTop(int),159,170,"/**
* Updates the specified array elements based on the input mask value.
* @param y mask value to determine which array method to invoke
*/","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(),43,48,"/**
* Initializes page destination with fixed width. 
* @param TYPE type of destination (not specified in this snippet)","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setTop(int),77,88,"/**
* Updates array values based on input mask 'y'. 
* If 'y' is -1, sets value 2 to null; otherwise, sets value 2 to 'y'.
*/","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setFitBoundingBox(boolean),105,116,"/**
* Configures the mask array with specified type based on bounding box fit flag.
* @param fitBoundingBox true to apply bounded mask, false for regular mask
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(),42,46,"/**
* Initializes page destination with default values.
* @param array underlying data structure
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setLeft(int),74,85,"/**
* Updates array with mask values based on input integer.
* @param x input value (-1 for special case or user ID)
*/","* Set the left x-coordinate, values 0 or -1 imply that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setTop(int),103,114,"/**
* Applies a mask to an array based on the input value.
* @param y input value (-1 for special case or positive value for data)
*/","* Set the top y-coordinate, values 0 or -1 imply that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setZoom(float),137,148,"/**
* Applies zoom mask to the array based on input value.
* @param zoom float representing zoom level
*/","* Set the zoom value for the page, values 0 or -1 imply that the current zoom
     * will be used.
     * @param zoom The zoom value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryValue,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryValue(),222,261,"/**
* Retrieves a COSBase object based on the provided functional mask.
* @return COSBase object or null if invalid
*/","* This will parse a PDF dictionary value.
     *
     * @return The parsed Dictionary object.
     *
     * @throws IOException If there is an error parsing the dictionary object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNote,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNote(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",194,217,"/**
* Draws a mask for the given annotation text on the content stream.
* @param annotation PDAnnotationText object to draw
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawInsert,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawInsert(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",263,276,"/**
* Draws mask for PDAnnotationText annotation.
* @param annotation the annotation to draw a mask for
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",416,434,"/**
* Applies mask to annotation text by writing appearance stream commands.
* @param annotation PDAnnotationText object
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpLeftArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",436,456,"/**
* Applies a mask to the given annotation using the specified appearance settings.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream object for rendering
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawKey,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawKey(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",549,590,"/**
* Sets up PDF appearance stream with user profile data.
* @param annotation PDAnnotationText object
* @throws IOException if error occurs during stream setup
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveBoundingBox,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",1028,1037,"/**
* Retrieves the bounding box of a PDF annotation widget or its parent.
* @param fieldWidget PDAnnotationWidget instance
* @param appearanceStream PDAppearanceStream instance
* @return PDRectangle object representing the bounding box, or null if not found
*/","* Resolve the bounding box.
     * 
     * @param fieldWidget the annotation widget.
     * @param appearanceStream the annotations appearance stream.
     * @return the resolved boundingBox.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptDictionary,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",594,621,"/**
* Masks values in the dictionary based on object and generation numbers.
* @param dictionary input dictionary to modify
* @param objNum object number
* @param genNum generation number
*/","* This will decrypt a dictionary.
     *
     * @param dictionary The dictionary to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error creating a new string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,setBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),857,864,"/**
* Updates the bounds of an annotation by applying a mask.
* @param bbox new bounds to apply
*/","* Sets the bounding box.
     * 
     * @param bbox the bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setColor,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",425,431,"/**
* Updates the functional mask with new value.
* @param name unique identifier for the mask
* @param value new PDGamma value or null to remove
*/","* Sets a colour.
     * 
     * @param name the attribute name
     * @param value the colour",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setFourColors,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",439,445,"/**
* Updates the FOURCOLORS field with new value and notifies listeners.
* @param name field name
* @param value new FOURCOLORS value or null for removal
*/","* Sets four colours.
     * 
     * @param name the attribute name
     * @param value the four colours",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(),82,85,"/**
* Initializes a new page with standard letter size.","* Creates a new PDPage instance for embedding, with a size of U.S. Letter (8.5 x 11 inches).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createPage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),67,74,"/**
* Creates a PDF page with specified dimensions and structure.
* @param properties PDVisibleSignDesigner object containing page dimensions
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:initFringe(org.w3c.dom.Element),79,96,"/**
* Validates and extracts fringe rectangle coordinates from the given Element.
* @param element input Element object
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:initFringe(org.w3c.dom.Element),81,98,"/**
* Sets mask rectangle from 'fringe' attribute of given Element.
* @param element input Element with 'fringe' attribute
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initFringe(org.w3c.dom.Element),102,119,"/**
* Processes the 'fringe' attribute of an Element, creating a PDRectangle if valid.
* @param element input Element object
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:initFringe(org.w3c.dom.Element),82,99,"/**
* Validates and processes the 'fringe' attribute of an Element.
* @param element input element to process
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getFDF(),116,130,"/**
* Retrieves the FDF dictionary with mask functionality.
* @return FDFDictionary object or a new instance if not found
*/","* This will get the FDF dictionary.
     *
     * @return The FDF dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(),60,73,"/**
* Initializes an empty FDFDocument with default settings.
*/","* Constructor, creates a new FDF document.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,getCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:getCatalog(),139,154,"/**
* Creates an FDF catalog with optional root dictionary.
* @return FDFCatalog object
*/","* This will get the FDF Catalog. This is guaranteed to not return null.
     *
     * @return The documents /Root dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getFractionalSpaceToAllocate(),151,167,"/**
* Creates a PDRange object with default or calculated values based on the 'A' page.
* @return PDRange object
*/","* This is guaranteed to never return null.<br>
     *
     * To quote the PDF Spec ""An array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to
     * allocate at the left and bottom of the icon. A value of [0.0 0.0] positions the icon at the bottom-left corner of
     * the annotation rectangle; a value of [0.5 0.5] centers it within the rectangle. This entry is used only if the
     * icon is scaled proportionally. Default value: [0.5 0.5].""
     *
     * @return The fractional space to allocate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDSet,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDSet(java.util.TreeMap),260,274,"/**
* Generates a FONT MASK and updates the document's font descriptor.
*/","* Builds the CIDSet entry, required by PDF/A. This lists all CIDs in the font, including those
     * that don't have a GID.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(),59,68,"/**
* Initializes a new TilingPattern object.
*/",* Creates a new tiling pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareNonVisibleSignature,org.apache.pdfbox.pdmodel.PDDocument:prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),542,555,"/**
* Configures the given widget with a mask annotation.
* @param firstWidget target widget to modify
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAppearanceDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",235,249,"/**
* Creates and sets up PDF appearance dictionary for a PDSignatureField.
* @param holderForml form object containing the signature field
* @param signatureField the signature field to be processed
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingBefore,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),102,120,"/**
* Updates the outline structure by inserting a sibling item.
* @param newSibling the newly created PDOutlineItem to insert
*/","* Insert a single sibling before this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingAfter,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),75,93,"/**
* Updates the mask of a PDOutlineItem.
* @param newSibling item to update
*/","* Insert a single sibling after this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),105,112,"/**
* Calls m1 on bead and m2 on thread with COSName.F and bead.","* This will set the first bead in the thread.  When this is set it will
     * also set the thread property of the bead object.
     *
     * @param bead The first bead in the thread.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(),52,58,"/**
* Initializes a new PD Thread Bead with default values.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setRoleMap(java.util.Map),198,203,"/**
* Configures the ROLE_MAP dictionary with roles from the input map.
* @param roleMap Map of role names to values
*/","* Sets the role map.
     * 
     * @param roleMap the role map",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setName(java.lang.String,java.lang.String)",198,204,"/**
* Updates a named attribute in the current COS object.
* @param name attribute name
* @param value new attribute value
*/","* Sets a name value.
     * 
     * @param name the attribute name
     * @param value the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setRenderingIntent(java.lang.String),352,355,"/**
 * Updates dictionary with RI value.
 * @param ri new RI string to store in dictionary
 */","* This will set the rendering intent for the graphics state.
     *
     * @param ri The new rendering intent",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,setN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:setN(java.lang.String),64,67,"/**
* Applies mask 'N' to specified field with given name.
* @param name identifier of field to apply mask to
*/","* This will set the name of the action to be performed.
     *
     * @param name The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setStyle(java.lang.String),101,104,"/**
* Sets input string as mask value.
* @param s input string to be set
*/","* This will set the border effect, see the STYLE_* constants for valid values.
     *
     * @param s the border effect to use",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument),62,69,"/**
* Initializes page label ranges for the given PDDocument.
* @param document PDDocument instance to configure
*/","* Creates an empty page label dictionary for the given document.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",53,58,"/**
* Constructs a new PDStructureElement with specified type and parent node.
* @param structureType the element's type
* @param parent the parent node of this element","* Constructor with required values.
     *
     * @param structureType The structure type. Constants are available in the
     * {@link StandardStructureTypes} class.
     * @param parent The parent structure node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(),57,60,"/**
* Initializes PDStructureTreeRoot with default type.","* Default Constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(),38,41,"/**
* Initializes a new Shading Pattern instance with default properties.",* Creates a new shading pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(),50,54,"/**
* Initializes a new Action instance with specified type.
* @param TYPE predefined action type
*/",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDocumentOutline(),196,200,"/**
* Retrieves the document outline, wrapping it in a PDDocumentOutline object if present. 
* @return PDDocumentOutline object or null if not found
*/","* Get the outline associated with this document or null if it does not exist.
     *
     * @return The document's outline.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getParent(),53,65,"/**
* Creates a PDOutlineNode instance based on the parent node's type.
* @return PDOutlineNode or null if no valid parent node found
*/",* @return The parent of this node or null if there is no parent.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(),38,41,"/**
 * Initializes a new PDRectlinearMeasureDictionary instance with subtype set to SUBTYPE.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(),39,42,"/**
* Constructs a new PDTransition instance with default style (R). 
* @param style ignored in this constructor; defaults to R anyway.","* creates a new transition with default ""replace"" style {@link PDTransitionStyle#R}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(java.lang.String,java.util.Calendar)",316,319,"/**
* Recursively calls itself with COSName-converted input key.
* @param key input string to be converted
* @param date date object (not used in this method)
*/","* Set the value of a date entry in the dictionary.
     *
     * @param key The key to the date value.
     * @param date The date value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",339,351,"/**
* Updates a dictionary with a key-value pair based on the embedded object.
* @param embedded embedded object
* @param key key to update in the dictionary
* @param date date value to associate with the key
*/","* Set the date object.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the date.
     * @param date The date to set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreationDate(java.util.Calendar),220,223,"/**
 * Sets creation date in metadata.
 * @param date Calendar object representing the creation date
 */","* This will set the creation date of the document.
     *
     * @param date The new creation date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setModificationDate(java.util.Calendar),240,243,"/**
* Updates MOD_DATE metadata with current date.
* @param date Calendar object representing current date
*/","* This will set the modification date of the document.
     *
     * @param date The new modification date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setCreationDate(java.util.Calendar),795,798,"/**
* Sets creation date annotation on a calendar.
* @param date Calendar object to annotate
*/","* Set the creation date.
     *
     * @param date The date the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.util.Calendar),650,653,"/**
* Calculates and applies mask to given calendar date.
* @param c Calendar object with date to be masked
*/","* This will set the date and time the annotation was modified.
     *
     * @param c the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setCreationDate(java.util.Calendar),176,179,"/**
* Sets creation date mask in database.
* @param creationDate date to be masked
*/","* This will set the date and time the annotation was created.
     *
     * @param creationDate the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSignDate(java.util.Calendar),195,198,"/**
* Updates calendar with mask value.
* @param cal Calendar instance to modify
*/","* Set the sign date.
     *
     * @param cal the date to be used as sign date",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCustomMetadataValue,"org.apache.pdfbox.pdmodel.PDDocumentInformation:setCustomMetadataValue(java.lang.String,java.lang.String)",291,294,"/**
 * Logs a field value using the info.m1() method.
 * @param fieldName name of the field to log
 * @param fieldValue actual value being logged
 */","* Set the custom metadata value.
     *
     * @param fieldName The name of the custom metadata field.
     * @param fieldValue The value to the custom metadata field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setString(java.lang.String,java.lang.String)",89,95,"/**
* Updates a named attribute in the document.
* @param name attribute name
* @param value new attribute value
*/","* Sets a string attribute value.
     * 
     * @param name the attribute name
     * @param value the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,setBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:setBase(java.lang.String),85,88,"/**
 * Sets the base value in the nested structure.
 * @param base new base value to be set
 */","* This will set the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @param base The base URI to be used.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setVersion(java.lang.String),119,122,"/**
 * Updates the 'REx' value in the dictionary with the provided application version.
 * @param applicationVersion current application version string
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     * <p>
     * NOTE: Version value is specific for build data dictionary when used as the <code>App</code>
     * dictionary in a build properties dictionary.
     * </p>
     *
     * @param applicationVersion the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setUnits(java.lang.String),119,122,"/**
* Applies mask to specified units.
* @param units string value to be masked
*/","* This will set the label for the units.
     * 
     * @param units the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFractionalDisplay(java.lang.String),160,174,"/**
* Validates and sets display mask for user profile.
* @param fractionalDisplay one of ""D"", ""F"", ""R"", or ""T"" or null
*/","* This will set the value for the manner to display a fractional value.
     * Allowed values are ""D"", ""F"", ""R"", ""T"" and null.
     * 
     * @param fractionalDisplay the manner to display a fractional value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setThousandsSeparator(java.lang.String),231,234,"/**
* Formats numeric values with specified thousand separator.
* @param thousandsSeparator string to use as thousand separator
*/","* This will set the text to be used between orders of thousands in display of numerical values.
     * 
     * @param thousandsSeparator thousands separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDecimalSeparator(java.lang.String),251,254,"/**
 * Configures the decimal separator for number formatting.
 * @param decimalSeparator character to use as decimal point (e.g. dot or comma)
 */","* This will set the text to be used as the decimal point in displaying numerical values.
     * 
     * @param decimalSeparator decimal separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPrefixString(java.lang.String),269,272,"/**
* Sets mask prefix based on given string.
* @param labelPrefixString input string to set as prefix
*/","* This will set the text to be concatenated to the left of the label specified by U.
     * @param labelPrefixString label prefix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelSuffixString(java.lang.String),289,292,"/**
* Sets mask configuration based on provided suffix.
* @param labelSuffixString suffix string to configure
*/","* This will set the text to be concatenated after the label specified by U.
     * 
     * @param labelSuffixString label suffix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPositionToValue(java.lang.String),310,322,"/**
* Validates and processes label position to value mapping.
* @param labelPositionToValue string value (""S"", ""P"", or null)
*/","* This will set the value indicating the ordering of the label specified by U to the calculated
     * unit value. Possible values are ""S"", ""P"" and null.
     *
     * @param labelPositionToValue label position",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.w3c.dom.Element),75,108,"/**
* Initializes a new FDFField object from an XML field element.
* @param fieldXML the XML element representing the field
*/","* This will create an FDF field from an XFDF XML document.
     *
     * @param fieldXML The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:exportFDF(),141,152,"/**
* Calculates the FUNC_MASK field value.
* @return calculated FUNC_MASK field value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(java.lang.String),33,37,"/**
* Initializes an Optional Content Group (OCG) with the given name.
* @param name unique identifier for the OCG
*/","* Creates a new optional content group (OCG).
     * @param name the name of the content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setInteger(java.lang.String,int)",264,270,"/**
* Updates the mask value for a given name.
* @param name unique identifier
* @param value new mask value
*/","* Sets an integer.
     * 
     * @param name the attribute name
     * @param value the integer",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,int)",350,356,"/**
* Updates a named mask with the given value.
* @param name unique mask identifier
* @param value new mask value
*/","* Sets an integer number.
     * 
     * @param name the attribute name
     * @param value the integer number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDenominator(int),191,194,"/**
* Sets mask value based on given denominator.
* @param denominator input value to set mask with
*/","* This will set the precision or denominator of a fractional amount.
     * 
     * @param denominator the precision or denominator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",60,91,"/**
* Converts BufferedImage to a 1-bit binary image.
* @param document PDDocument instance
* @param image BufferedImage object
* @return PDImageXObject representation or null if invalid image type
*/","* Creates a new CCITT group 4 (T6) compressed image XObject from a b/w BufferedImage. This
     * compression technique usually results in smaller images than those produced by {@link LosslessFactory#createFromImage(PDDocument, BufferedImage)
     * }.
     *
     * @param document the document to create the image as part of.
     * @param image the image.
     * @return a new image XObject.
     * @throws IOException if there is an error creating the image.
     * @throws IllegalArgumentException if the BufferedImage is not a b/w image.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerComponent(int),75,79,"/**
* Sets color component bit depth and notifies dependent components.
* @param bitsPerComponent new bit depth value
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerComponent(int),75,79,"/**
* Sets color component bit depth and updates internal state.
* @param bitsPerComponent number of bits per color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerCoordinate(int),102,106,"/**
* Sets and stores the number of coordinates per bit mask.
* @param bitsPerCoordinate number of coordinates per bit
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerCoordinate(int),102,106,"/**
* Sets and stores the number of bits per coordinate.
* @param bitsPerCoordinate the new value for bits per coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,float)",336,342,"/**
* Updates the mask for a given name with a specified value.
* @param name unique identifier
* @param value float value to apply
*/","* Sets a float number.
     * 
     * @param name the attribute name
     * @param value the float number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setIntensity(float),81,84,"/**
 * Applies mask value to input data.
 * @param i input float value
 */","* This will set the intensity of the applied effect.
     *
     * @param i the intensity of the effect values 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setConversionFactor(float),139,142,"/**
* Applies mask to data using specified conversion factor.
* @param conversionFactor scaling value for masking
*/","* This will set the conversion factor.
     * 
     * @param conversionFactor the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseArrayElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseArrayElement(org.w3c.dom.Element),285,355,"/**
* Parses and populates a COSArray from the given Element.
* @param arrayEl input Element containing array data
* @return populated COSArray or null on failure
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFile,org.apache.pdfbox.pdmodel.common.PDStream:getFile(),337,341,"/**
* Extracts file specification from PDF document.
* @return PDFileSpecification object
*/","* This will get the file specification for this stream. This is only
     * required for external files.
     * 
     * @return The file specification.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFile(),285,288,"/**
* Returns PDF file specification with mask functionality enabled.
* @return PDFileSpecification object
*/","* The source file or target file: the PDF document file that this FDF file was exported from or is intended to be
     * imported into.
     *
     * @return The F entry of the FDF dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEmbeddedFDFs(),512,526,"/**
* Retrieves list of PDF file specifications from embedded array.
* @return List<PDFileSpecification> or null if empty
*/","* This will get the list of embedded FDF entries, or null if the entry is null. This will return a list of
     * PDFileSpecification objects.
     *
     * @return A list of embedded FDF files.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getFileSpecification(),91,94,"/**
* Returns PDF file specification with mask functionality.
* @return PDFileSpecification object
*/","* This will get the file specification of this reference. An optional parameter.
     *
     * @return The F entry for this dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getFile(),108,111,"/**
* Creates PDF file specification with mask functionality enabled.
* @return PDFileSpecification object representing masked PDF file
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific embedded go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:getFile(),61,64,"/**
* Retrieves PDF file specification based on COSName F.
* @return PDFileSpecification object
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getFile(),70,73,"/**
* Creates PDFileSpecification instance with mask functionality.
* @return PDFileSpecification object
*/","* This will get the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @return The F entry of the specific launch action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getFile(),66,69,"/**
* Returns PDF file specification with mask functionality enabled.
* @return PDFileSpecification object
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific remote go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFile(),64,67,"/**
* Returns file specification with mask functionality enabled.
* @return PDFileSpecification object
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getFile(),82,85,"/**
 * Creates a PDFileSpecification instance with mask functionality.
 * @return PDFileSpecification object
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific thread action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getFile(),84,87,"/**
* Returns PDF file specification with mask functionality. 
* @throws IOException if an I/O error occurs
*/","* Return the attached file.
     *
     * @return The attached file.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(),40,44,"/**
 * Initializes a new instance of FDFAnnotationHighlight with subtype set to SUBTYPE.",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(),40,44,"/**
* Initializes an instance of FDFAnnotationSquiggly with subtype.",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(),40,44,"/**
* Creates an annotation with strikeout effect. 
* @param SUBTYPE subtype of strikeout annotation (e.g., COSName.SUBTYPE) 
*/",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(),40,44,"/**
* Initializes an underline annotation with subtype.",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(),39,42,"/**
 * Initializes PDAnnotationCaret with subtype.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(),62,65,"/**
* Initializes the attachment with subtype.
* @param SUB_TYPE subtype value
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(),56,59,"/**
* Initializes free text annotation subtype.
* @param SUB_TYPE subtype value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(),43,46,"/**
 * Initializes PDAnnotationInk with subtype name. 
 * @param SUB_TYPE subtype name (e.g., ""ink"")",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(),113,118,"/**
* Initializes a PDAnnotationLine object with subtype and line values.
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(),43,46,"/**
 * Initializes annotation polygon with subtype.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(),42,45,"/**
 * Initializes annotation polyline subtype.
 * @param SUB_TYPE subtype value
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(),99,102,"/**
* Initializes the PDAnnotationRubberStamp with subtype.
* @param SUB_TYPE subtype value
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(),37,40,"/**
* Initializes PD annotation sound with subtype. 
* @param SUB_TYPE subtype of annotation sound
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(java.lang.String),39,42,"/**
* Initializes a new instance of PDAnnotationSquareCircle with subtype.
* @param subType annotation type
*/","* Creates a Circle or Square annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(),126,129,"/**
* Initializes PDAnnotationText with subtype. 
* @param SUB_TYPE subtype value to be set
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(java.lang.String),36,42,"/**
* Initializes PDAnnotationTextMarkup with subtype and no quad points.
* @param subType annotation subtype
*/","* Creates a TextMarkup annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignSignatureRectangle,"org.apache.pdfbox.pdmodel.PDDocument:assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",600,612,"/**
* Updates widget rectangle if necessary and sets it to annotation dictionary.
* @param firstWidget the widget to update
* @param annotDict annotation dictionary
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getBBox(),55,59,"/**
* Retrieves PDF rectangle mask.
* @return PDRectangle object or null if not found
*/","* Gets the artifact's bounding box (BBox).
     * 
     * @return the artifact's bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:getBBox(),841,850,"/**
* Retrieves a PDRectangle object from the PDF document's resources.
* @return PDRectangle object or null if not found
*/","* Gets the bounding box.
     * 
     * @return the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRectangle(),732,736,"/**
* Returns a PDF rectangle based on annotation's bounding box.
* @return PDRectangle object or null if not found
*/","* The rectangle associated with this annotation.
     *
     * @return The annotation rectangle.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getFringe(),115,119,"/**
* Retrieves PDF rectangle from annotation's resource dictionary.
* @return PDRectangle object or null if not found
*/","* This will retrieve the fringe. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getFringe(),152,156,"/**
* Returns a PDRectangle object representing the function mask.
* @return PDRectangle object or null if not found
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getFringe(),271,275,"/**
* Retrieves and returns a PDRectangle object from the annotation's 'RD' 
* attribute, or null if it does not exist.","* This will get the fringe. Giving the difference between the annotations rectangle and where
     * the drawing occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getFringe(),153,157,"/**
* Retrieves PDF rectangle from annotation's resource dictionary. 
* @return PDRectangle object or null if not found
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontBoundingBox(),411,420,"/**
* Retrieves and converts font bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* This will get the fonts bounding box.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBBox(),308,312,"/**
* Retrieves the bounding box of a font as a rectangle.
* @return PDRectangle object representing the font's bounding box, or null if not found
*/","* This will get the fonts bounding box from its dictionary.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getBBox(),208,213,"/**
* Retrieves PDF bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges, respectively,
     * of the form XObject's bounding box.
     * These boundaries are used to clip the form XObject and to determine its size for caching.
     * @return The BBox of the form.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getBBox(),221,226,"/**
* Retrieves bounding box rectangle from PDF page.
* @return PDRectangle object or null if not found
*/","* An array of four numbers in the form coordinate system (see
     * below), giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the pattern's bounding box.
     *
     * @return The BBox of the pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBBox(),169,180,"/**
* Returns the bounding box of the PDF content, or initializes it from the document's BBOX entry. 
* @return PDRectangle object representing the bounding box
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the shading's bounding box.
     *
     * @return the BBox of the form",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getRectangle(),256,275,"/**
* Creates a PDF rectangle from the given dictionary.
* @return PDRectangle object or null if invalid
*/","* The annotation rectangle, defining the location of the annotation on the page in default user space units. This
     * is usually required and should not return null on valid PDF documents. But where this is a parent form field with
     * children, such as radio button collections then the rectangle will be null.
     * 
     * @return The Rect value of this annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifference(),279,283,"/**
* Creates a PDF rectangle mask.
* @return PDRectangle object or null if failed
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifference(),122,126,"/**
* Creates a PDRectangle object from the difference array.
* @return PDRectangle or null if difference array is null
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getBBox(),84,88,"/**
* Retrieves page box rectangle from PDF object.
* @return PDRectangle object or null if not found
*/","* This will retrieve the rectangle specifying the location of the viewport.
     * 
     * @return the location",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getRectangle(),179,183,"/**
* Creates a PDF rectangle mask from an array of values.
* @return PDRectangle object or null if the input array is invalid
*/","* The rectangle on the page that this bead is part of.
     *
     * @return The part of the page that this bead covers.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setLineDashPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:setLineDashPattern(org.apache.pdfbox.cos.COSArray,int)",1080,1084,"/**
* Configures line dash pattern and delegates to m1() method.
* @param array COSArray object
* @param phase integer value for line dash configuration
*/","* @param array dash array
     * @param phase dash phase",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getLineDashPattern(),167,178,"/**
* Creates a default dash pattern for lines in PDF.
*/","* Get the line dash pattern for this box style.  This is guaranteed to not
     * return null.  The default is [3],0.
     *
     * @return The line dash pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineDashPattern(),303,317,"/**
* Creates a PDF line dash pattern from the specified dictionary entry.
* @return PDLineDashPattern object or null if invalid data
*/","* This will get the dash pattern.
     *
     * @return null or the D value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getDashStyle(),170,180,"/**
* Creates a line dash pattern with an initial length of 0.
* @return PDLineDashPattern object
*/","* This will retrieve the dash style used for drawing the border.
     *
     * @return the dash style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getStencilImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",61,125,"/**
* Creates a mask for the given image using the specified paint.
* @param pdImage input image
* @param paint paint to use for masking
* @return BufferedImage representing the masked image or null on error
*/","* Returns an ARGB image filled with the given paint and using the given image as a mask.
     * @param paint the paint to fill the visible portions of the image with
     * @return a masked image filled with the given paint
     * @throws IOException if the image cannot be read
     * @throws IllegalStateException if the image is not a stencil.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,readRasterFromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:readRasterFromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)",263,357,"/**
* Applies image decoding and scaling to a PDImage.
* @param pdImage input PDF image
* @param raster output raster
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from1Bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",359,458,"/**
* Fetches and decodes a portion of the image, applying subsampling.
* @param pdImage input PDImage object
* @param clipped region to fetch and decode
* @param subsampling level (1 = no subsampling)
* @param width output width
* @param height output height
* @return decoded BufferedImage or null on error
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,fromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",554,703,"/**
* Processes a PDF image and produces a masked RGB image.
* @param pdImage input PDF image
* @param raster output WritableRaster
* @param colorKey optional color key array for masking
* @param clipped rectangle specifying the region of interest
* @param subsampling factor for downsampling the image
* @return processed RGB image or a composite image with a mask if colorKey is provided
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(java.awt.image.WritableRaster),193,281,"/**
* Creates a BufferedImage with a mask for the given WritableRaster.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getDefaultDecode(int),454,464,"/**
* Generates a decoding mask array based on the given bits per component.
* @param bitsPerComponent number of bits per color component
* @return float[] decoding mask array of length n*2, where n is calculated by m1()
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontMatrix(),254,264,"/**
* Returns the font matrix, either by custom processing or fallback to superclass implementation.
* @return Font matrix Matrix object or null if not initialized
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getMatrix(),235,239,"/**
* Returns a predefined 3x3 matrix mask.","* This will get the optional matrix of an XObjectForm. It maps the form space to user space.
     * @return the form matrix if available, or the identity matrix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getMatrix(),134,137,"/**
* Returns a Matrix instance based on predefined matrix operations.
* @return Matrix object representing m1().m2(COSName.MATRIX) result
*/","* Returns the pattern matrix, or the identity matrix is none is available.
     * 
     * @return the pattern matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getMatrix(),56,59,"/**
* Returns a matrix with specific values.
* @return Matrix object representing the result of m1().m2(COSName.MATRIX) operation.","* This will get the optional Matrix of a function based shading.
     *
     * @return the matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,setAttribute,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",102,107,"/**
* Updates attribute with specified name and value.
* @param attrName attribute name
* @param attrValue new attribute value
*/","* Sets an attribute.
     * 
     * @param attrName the attribute name
     * @param attrValue the attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getInheritableAttribute,"org.apache.pdfbox.pdmodel.PDPageTree:getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",108,122,"/**
* Recursively fetches a named value from the PDF node and its ancestors.
* @param node PDF node to search
* @param key name of the value to find
* @return COSBase object or null if not found
*/","* Returns the given attribute, inheriting from parent tree nodes if necessary.
     *
     * @param node page object
     * @param key the key to look up
     * @return COS value for the given key",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,findFieldType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:findFieldType(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",132,147,"/**
* Recursively fetches the media type from a COS dictionary.
* @param dic COS dictionary to traverse
* @param seen set of visited dictionaries to prevent cycles
* @return media type string or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,boolean)",895,898,"/**
* Returns default value if COSName key is not set.
* @param key COSName to check
* @param defaultValue value to return when key is null or empty
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getInterpolate(),229,233,"/**
 * Determines whether to use interpolation in calculations.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,isStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:isStencil(),284,288,"/**
* Checks if image mask is enabled.
* @return true if image mask is enabled, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,int)",994,997,"/**
* Returns default value if COSName is null.
* @param key COSName object
* @param defaultValue default integer value
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the defaultvalue will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1007,1010,"/**
* Calls m1 with default third parameter value of -1.
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value -1 will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getHeight(),205,209,"/**
* Returns a mask value based on height parameter.
* @return integer mask value or -1 if invalid
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getWidth(),217,221,"/**
* Returns functional mask value based on width parameter.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:<init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",68,103,"/**
* Decodes inline image data using filters.
* @param parameters COSDictionary containing image parameters
* @param data byte array of encoded image data
* @param resources PDResources for decoding
*/","* Creates an inline image from the given parameters and data.
     *
     * @param parameters the image parameters
     * @param data the image data
     * @param resources the current resources
     * @throws IOException if the stream cannot be decoded",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(java.util.List),309,329,"/**
* Applies a pipeline of filters to the raw data, stopping at first matching stop filter.
* @param stopFilters list of stop filters
* @return InputStream containing filtered data or null if stopped by stop filter
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getSuffix(),386,407,"/**
* Determines image file format based on filter types.
* @return file extension (""png"", ""jpg"", or ""tiff"")","* Returns the suffix for this image type, e.g. jpg/png.
     *
     * @return The image suffix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",252,265,"/**
* Retrieves COS objects based on two types and returns merged results.
* @param type1 first object type
* @param type2 second object type
* @return List of COSObject objects
*/","* This will get all dictionaries objects by type.
     *
     * @param type1 The first possible type of the object, mandatory.
     * @param type2 The second possible type of the object, usually an abbreviation, optional.
     *
     * @return This will return all objects with the specified type(s).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary),382,450,"/**
* Searches for a trailer dictionary in the COSDictionary stream.
* @param trailer input COSDictionary to search
* @return true if trailer is found, false otherwise
*/","* Brute force search for all trailer marker.
     * 
     * @param trailer dictionary to be used as trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchForTrailerItems,org.apache.pdfbox.pdfparser.BruteForceParser:searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary),460,497,"/**
* Extracts and stores root and info dictionaries in the given trailer.
* @param trailer COSDictionary to populate with extracted data
*/","* Search for the different parts of the trailer dictionary.
     *
     * @param trailer dictionary to be used as trailer dictionary
     * @return true if the root was found, false if not.
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPages,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPages(),164,168,"/**
* Creates a page tree with mask functionality.
* @return A PDPageTree object representing the masked pages.","* Returns all pages in the document, as a page tree.
     * 
     * @return PDPageTree providing all pages of the document",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary),68,71,"/**
* Initializes a new PDF page tree from a COS dictionary.
* @param root COS dictionary representing the root of the page tree
*/","* Constructor for reading.
     *
     * @param root A page tree root.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,next,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:next(),230,243,"/**
* Creates a PDPage object from the next COSDictionary in the queue.
* @return PDPage object or throws NoSuchElementException if invalid
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",448,451,"/**
* Redirects to default glyph list fetching method.
* @param code unknown parameter (not used)
*/","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @param customGlyphList a custom glyph list to use instead of the Adobe Glyph List
     * @return Unicode character(s)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",276,331,"/**
* Fetches Unicode glyph by code and custom or system glyph list.
* @param code character code
* @param customGlyphList user-provided glyph list
* @return Unicode glyph string or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getGroup,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getGroup(),149,165,"/**
* Returns the transparency group with FUNC_MASK filter.
* @return PDTransparencyGroup object or null if not found
*/","* Returns the G entry of the soft mask object
     * 
     * @return form containing the transparency group
     * @throws IOException if the group could not be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacSubtype(java.lang.String),190,202,"/**
* Sets MAC subtype value in parameters dictionary.
* @param macSubtype MAC subtype string
*/","* Set the mac subtype.
     *
     * @param macSubtype The mac subtype.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacCreator(java.lang.String),220,232,"/**
* Sets MAC creator value in PDF document parameters.
* @param macCreator the creator of the MAC
*/","* Set the mac Creator.
     *
     * @param macCreator The mac Creator.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacResFork(java.lang.String),250,262,"/**
* Sets MAC RES FORK parameter in PDF dictionary.
* @param macResFork MAC RES FORK value
*/","* Set the mac ResFork.
     *
     * @param macResFork The mac ResFork.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,isEncrypted,org.apache.pdfbox.pdmodel.PDDocument:isEncrypted(),812,815,"/**
* Calls m1() on the associated document object.","* This will tell if this document is encrypted or not.
     * 
     * @return true If this document is encrypted.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,parse,org.apache.pdfbox.pdfparser.FDFParser:parse(),66,88,"/**
* Creates and returns an FDFDocument instance.
* @throws IOException if header version info is invalid
*/","* This will parse the stream and populate the FDFDocument object.
     *
     * @return the parsed FDFDocument
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(boolean),149,186,"/**
* Creates a PDDocument instance with optional lenient processing.
* @param lenient whether to throw exceptions or log warnings
* @return PDDocument object or throws IOException if failed
*/","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing.
     *
     * @param lenient activate leniency if set to true
     * @return the populated PDDocument
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroForm,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroForm(org.apache.pdfbox.pdmodel.PDDocument),91,98,"/**
* Creates and configures an AcroForm for the given PDF document.
* @param template PDDocument instance to configure
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(),111,114,"/**
* Returns an instance of PDAcroForm.
* @return PDAcroForm object
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * @return The document's AcroForm.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,findNamedDestinationPage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),348,372,"/**
* Retrieves PDPageDestination for a given PDNamedDestination.
* @param namedDest PDNamedDestination object to resolve
* @return PDPageDestination or null if not found
*/","* Find the page destination from a named destination.
     * @param namedDest the named destination.
     * @return a PDPageDestination object or null if not found.
     * @throws IOException if there is an error creating the PDPageDestination object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removeResources,org.apache.pdfbox.pdmodel.PDPage:removeResources(org.apache.pdfbox.cos.COSDictionary),134,162,"/**
* Recursively removes and caches resources from the given dictionary.
* @param resources COSDictionary containing resources to remove
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,"org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",206,236,"/**
* Retrieves a PDF ColorSpace object by name or ID.
* @param name COSName identifier
* @param wasDefault whether the color space is default
* @return PDColorSpace object or null if not found
*/","* Returns the color space resource with the given name, or null if none exists. This method is
     * for PDFBox internal use only, others should use {@link #getColorSpace(COSName)}.
     *
     * @param name Name of the color space resource.
     * @param wasDefault if current color space was used by a default color space. This parameter is
     * to
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,hasColorSpace,org.apache.pdfbox.pdmodel.PDResources:hasColorSpace(org.apache.pdfbox.cos.COSName),244,247,"/**
* Checks if COSName is a valid color space mask.
* @param name COSName object to check
* @return true if valid color space mask, false otherwise
*/","* Returns true if the given color space name exists in these resources.
     *
     * @param name Name of the color space resource.
     * @return true if the given color space name exists in these resources, otherwise false",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGState,org.apache.pdfbox.pdmodel.PDResources:getExtGState(org.apache.pdfbox.cos.COSName),255,280,"/**
* Retrieves or creates a PDExtendedGraphicsState object based on the given name.
* @param name COSName identifier for the extended graphics state
*/","* Returns the extended graphics state resource with the given name, or null if none exists.
     *
     * @param name Name of the graphics state resource.
     * @return the extended graphics state with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isImageXObject,org.apache.pdfbox.pdmodel.PDResources:isImageXObject(org.apache.pdfbox.cos.COSName),391,409,"/**
* Checks if a PDF object is an image by its subtype.
* @param name COSName of the object to check
*/","* Tells whether the XObject resource with the given name is an image.
     *
     * @param name Name of the XObject resource.
     * @return true if it is an image XObject, false if not.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpaceNames,org.apache.pdfbox.pdmodel.PDResources:getColorSpaceNames(),515,518,"/**
* Returns an iterable collection of COSName objects representing color spaces.","* Returns the names of the color space resources, if any.
     * 
     * @return an iterable containing all names of available colorspaces",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObjectNames,org.apache.pdfbox.pdmodel.PDResources:getXObjectNames(),525,528,"/**
* Returns an iterable collection of COS names used as masks.
* @return Iterable of COSName objects
*/","* Returns the names of the XObject resources, if any.
     * 
     * @return an iterable containing all names of available xobjects",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFontNames,org.apache.pdfbox.pdmodel.PDResources:getFontNames(),535,538,"/**
* Returns an iterable collection of COSName objects with font masks.
*/","* Returns the names of the font resources, if any.
     * 
     * @return an iterable containing all names of available fonts",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPropertiesNames,org.apache.pdfbox.pdmodel.PDResources:getPropertiesNames(),545,548,"/**
* Returns an iterable collection of COSName objects based on properties.
*/","* Returns the names of the property list resources, if any.
     * 
     * @return an iterable containing all names of available property lists",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShadingNames,org.apache.pdfbox.pdmodel.PDResources:getShadingNames(),555,558,"/**
* Returns an iterable of COSName objects based on shading masks.
* @return Iterable of COSName objects
*/","* Returns the names of the shading resources, if any.
     * 
     * @return an iterable containing all names of available shadings",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPatternNames,org.apache.pdfbox.pdmodel.PDResources:getPatternNames(),565,568,"/**
* Returns an iterable collection of COSName objects. 
* @return COSName instances with pattern matching enabled.","* Returns the names of the pattern resources, if any.
     * 
     * @return an iterable containing all names of available patterns",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGStateNames,org.apache.pdfbox.pdmodel.PDResources:getExtGStateNames(),575,578,"/**
* Retrieves an iterable collection of COSNames filtered by EXT_G_STATE.
* @return Iterable collection of COSNames or empty if none found
*/","* Returns the names of the extended graphics state resources, if any.
     * 
     * @return an iterable containing all names of available extended graphics states",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",708,735,"/**
* Resolves function mask for the given kind and object.
* @param kind type of function
* @param prefix prefix string
* @param object target object
* @return COSName representing the resolved function
*/",* Adds the given resource if it does not already exist.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",780,783,"/**
* Convenience overload for m1, using COSName.FONT as the first parameter.","* Sets the font resource with the given name.
     *
     * @param name the name of the resource
     * @param font the font to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",791,794,"/**
* Calls m1 with default colorspace and passes user-provided name.
* @param name User-supplied name
* @param colorSpace User-provided color space (not used)
*/","* Sets the color space resource with the given name.
     *
     * @param name the name of the resource
     * @param colorSpace the color space to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",802,805,"/**
* Calls m1 with default EXT_G_STATE parameter.
* @param name COSName object
* @param extGState PDExtendedGraphicsState object
*/","* Sets the extended graphics state resource with the given name.
     *
     * @param name the name of the resource
     * @param extGState the extended graphics state to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",813,816,"/**
* Calls m1 with default COSName parameter.
* @param name user name
* @param shading user shading
*/","* Sets the shading resource with the given name.
     *
     * @param name the name of the resource
     * @param shading the shading to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",824,827,"/**
* Invokes overloaded m1 with default parameter values.
* @param name COSName object
* @param pattern PDAbstractPattern object
*/","* Sets the pattern resource with the given name.
     *
     * @param name the name of the resource
     * @param pattern the pattern to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",835,838,"/**
* Calls the overloaded version with default property list.
* @param name COSName object
* @param properties PDPropertyList to pass (default is used)
*/","* Sets the property list resource with the given name.
     *
     * @param name the name of the resource
     * @param properties the property list to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",846,849,"/**
* Convenience wrapper to invoke m1 with XOBJECT as first parameter.
*/","* Sets the XObject resource with the given name.
     *
     * @param name the name of the resource
     * @param xobject the XObject to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getObjectFromEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName),82,90,"/**
* Retrieves a value from the dictionary using the provided key.
* @param key unique identifier
* @return COSBase object or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),242,254,"/**
* Adds or updates the embedded file mask for a given PDEmbeddedFile object.
* @param file PDEmbeddedFile object to be masked
*/","* Set the embedded file for this spec. You should also call
     * {@link #setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFileUnicode(PDEmbeddedFile)}
     * for cross-platform and cross-language compatibility.
     *
     * @param file The file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),324,336,"/**
* Sets the embedded file's mask in the PDF dictionary.
* @param file PDEmbeddedFile object to be masked
*/","* Set the embedded Unicode file for this spec. If you call this, then do not forget to also
     * call
     * {@link #setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFile(PDEmbeddedFile)}
     * or the attachment will not be visible on some viewers.
     *
     * @param file The Unicode file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStdCryptFilterDictionary(),470,473,"/**
* Returns a PDCryptFilterDictionary instance with specific mask settings.
* @return PDCryptFilterDictionary object
*/","* Returns the standard crypt filter.
     * 
     * @return the standard crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getDefaultCryptFilterDictionary(),480,483,"/**
* Returns the default crypt filter dictionary.
* @return PDCryptFilterDictionary object
*/","* Returns the default crypt filter (for public-key security handler).
     * 
     * @return the default crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),530,534,"/**
* Configures and initializes PDCryptFilterDictionary instance.
* @param cryptFilterDictionary dictionary to configure
*/","* Sets the standard crypt filter.
     * 
     * @param cryptFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),541,545,"/**
* Initializes and configures the PDCryptFilterDictionary.
* @param defaultFilterDictionary dictionary to configure
*/","* Sets the default crypt filter (for public-key security handler).
     *
     * @param defaultFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType0Font:getFontDescriptor(),449,453,"/**
* Returns the font descriptor of the direct descendant font. 
* @return FontDescriptor object of the descendant font or null if not found 
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getResources(),88,99,"/**
* Retrieves resources dictionary from character stream, 
* otherwise delegates to font-specific method.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType3Font:hasGlyph(java.lang.String),135,140,"/**
* Checks if PDF file contains function mask with given name.
* @param name name of the function mask to search for
* @return true if found, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProc,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProc(int),395,404,"/**
* Creates a font subset procedure from the given code.
* @param code character code to process
*/","* Returns the stream of the glyph for the given character code
     * 
     * @param code character code
     * @return the stream to be used to render the glyph",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:toString(),137,171,"/**
* Builds a string representation of the device process and colorants.
*@return formatted string or ""ERROR"" if colorant info cannot be retrieved
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getBaseState(),207,212,"/**
* Retrieves BaseState mask from internal dictionary.
* @return BaseState value or null if not found
*/","* Returns the base state for optional content groups.
     * @return the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState),218,222,"/**
* Updates base state in dictionary with given state.
* @param state BaseState object to update
*/","* Sets the base state for optional content groups.
     * @param state the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",400,460,"/**
* Updates the ON/OFF mask arrays in the PDF optional content group dictionary.
* @param group PDOptionalContentGroup to update
* @param enable true to add to OFF, false to add to ON
* @return true if a change was made, false otherwise
*/","* Enables or disables an optional content group.
     * @param group the group object
     * @param enable true to enable, false to disable
     * @return true if the group already had an on or off setting, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDPatternContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),35,38,"/**
* Initializes a PDPatternContentStream instance with the given PDTilingPattern.
* @param pattern PDTilingPattern object containing content stream and resources.","* Create a new tiling pattern content stream.
     *
     * @param pattern The tiling pattern stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearance(),120,129,"/**
* Initializes and returns the PDAppearanceDictionary instance.
* If not already initialized, populates it via annotation.m1() and m2().
*/","* Get the annotations appearance dictionary.
     * 
     * <p>
     * This will get the annotations appearance dictionary. If this is not
     * existent an empty appearance dictionary will be created.
     * 
     * @return the annotations appearance dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getRolloverAppearance(),99,103,"/**
* Retrieves PDAppearanceEntry from dictionary with key R.
* @return PDAppearanceEntry object or alternative value if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getDownAppearance(),133,137,"/**
* Returns a PDAppearanceEntry instance from the given dictionary.
* @return PDAppearanceEntry object or null if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDButton:constructAppearances(),284,304,"/**
* Updates FUNC_MASK for each PDAnnotationWidget based on appearance.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByValue(java.lang.String),389,410,"/**
* Updates mask for each PDAnnotationWidget based on the provided value.
* @param value new mask value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getFirstChild(),184,187,"/**
* Returns PDOutlineItem with first child mask.",* @return The first child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getLastChild(),202,205,"/**
* Returns the last outline item in the PDF document.",* @return The last child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAcroFormDefaultResource,"org.apache.pdfbox.pdmodel.PDDocument:assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",622,647,"/**
* Updates the DR (Data Reference) dictionary in a PDAcroForm instance.
* @param acroForm target PDF AcroForm object
* @param newDict updated resources to apply
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSignature,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSignature(),92,95,"/**
* Returns a PDSignature instance with mask value from m1().
*/","* Get the signature dictionary.
     * 
     * @return the signature dictionary
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValueAsString(),158,163,"/**
* Returns function mask based on generated signature.
* @return function mask string or empty if failed to generate signature.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,appendBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),142,149,"/**
* Updates a thread bead with the given append object.
* @param append the thread bead to be updated
*/","* Append a bead after this bead.  This will correctly set the next/previous beads in the
     * linked list.
     *
     * @param append The bead to insert.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getNormalAppearanceStream(),366,390,"/**
* Retrieves PDAppearanceStream for a specific appearance type.
* @return PDAppearanceStream object or null if not found
*/","* Returns the appearance stream for this annotation, if any. The annotation state is taken into account, if
     * present.
     * 
     * @return the appearance stream",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValueForWidget,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),351,370,"/**
* Extracts and returns the mask from the given PDAnnotationWidget.
* @param widget PDAnnotationWidget to extract mask from
* @return COSName of the mask or an empty string if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:getOnValue(),100,121,"/**
* Retrieves the mask name from the appearance dictionary.
*/","* Get the value which sets the check box to the On state.
     * 
     * <p>The On value should be 'Yes' but other values are possible
     * so we need to look for that. On the other hand the Off value shall
     * always be 'Off'. If not set or not part of the normal appearance keys
     * 'Off' is the default</p>
     *
     * @return the value setting the check box to the On state. 
     *          If an empty string is returned there is no appearance definition.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPages,org.apache.pdfbox.pdfparser.COSParser:checkPages(org.apache.pdfbox.cos.COSDictionary),938,953,"/**
* Validates and rebuilds page tree in the COSDictionary.
* @param root COSDictionary to process
*/","* Check if all entries of the pages dictionary are present. Those which can't be dereferenced are removed.
     * 
     * @param root the root dictionary of the pdf
     * @throws java.io.IOException if the page tree root is null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,enqueueKids,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:enqueueKids(org.apache.pdfbox.cos.COSDictionary),190,222,"/**
* Recursively traverses the COSDictionary tree, processing each node.
* @param node current COSDictionary node
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,findPage,"org.apache.pdfbox.pdmodel.PDPageTree:findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",396,414,"/**
* Recursively traverses the XML tree and performs search operations.
* @param context SearchContext object containing search result status
* @return true if search target is found, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getIDTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),1131,1157,"/**
* Recursively fetches PD structure element names from the given tree node.
* @param idTree root node of the tree
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getValue(java.lang.String),213,241,"/**
* Fetches data of type T by name, searching in both names and kids (sub-nodes) trees.
* @param name the target data identifier
* @return object of type T or null if not found
*/","* The name to retrieve.
     *
     * @param name The name in the tree.
     * @return The value of the name in the tree.
     * @throws IOException If there is a problem creating the destinations.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,calculateLimits,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:calculateLimits(),160,204,"/**
* Calculates and applies page name limits based on node type.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getNumberTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),1161,1187,"/**
* Recursively fetches COS objects from a PD number tree node hierarchy.
* @param tree root node of the tree
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,findLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),100,124,"/**
* Recursively processes PDNumberTreeNode and its children.
* @param node the current tree node
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getValue(java.lang.Integer),141,167,"/**
* Retrieves a numeric value by index from a tree structure or map.
* @param index unique identifier for the value to retrieve
* @return The requested numeric value, or null if not found
*/","* Returns the value corresponding to an index in the number tree.
     *
     * @param index The index in the number tree.
     *
     * @return The value corresponding to the index.
     *
     * @throws IOException If there is a problem creating the values.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setKids(java.util.List),112,130,"/**
* Updates the node's kids and limits based on the provided child nodes.
* @param kids list of PDNumberTreeNode children
*/","* Set the children of this number tree.
     *
     * @param kids The children of this number tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNumbers(Map)} with a map and pass a single
     * element list here.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setNumbers(java.util.Map),245,274,"/**
* Processes a map of numbers and updates the node's NUMS and LIMITS.
* @param numbers map of integers to COSObjectables
*/","* Set the numbers for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param numbers The map of numbers to objects, or <code>null</code> for nothing.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfOutputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfOutputParameters(),159,174,"/**
* Calculates the mask value based on output values.
* @return The calculated mask value
*/","* This will get the number of output parameters that
     * have a range specified.  A range for output parameters
     * is optional so this may return zero for a function
     * that does have output parameters, this will simply return the
     * number that have the range specified.
     *
     * @return The number of output parameters that have a range
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeForOutput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeForOutput(int),185,189,"/**
* Creates a PDRange object with values from the array and the given index.","* This will get the range for a certain output parameters.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The output parameter number to get the range for.
     *
     * @return The range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,clipToRange,org.apache.pdfbox.pdmodel.common.function.PDFunction:clipToRange(float[]),293,313,"/**
* Computes a subset of input values within specified ranges.
* @param inputValues input array to process
* @return filtered float array or original input if no valid ranges found
*/","* Clip the given input values to the ranges.
     * 
     * @param inputValues the input values
     * @return the clipped values",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfInputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfInputParameters(),209,217,"/**
* Calculates and returns the number of input values.
* If initial value is unknown, fetches from database and calculates. 
* @return Number of input values
*/","* This will get the number of input parameters that
     * have a domain specified.
     *
     * @return The number of input parameters that have a domain
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainForInput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainForInput(int),228,232,"/**
* Creates a PDRange object with domain values from m1() and input n.
*/","* This will get the range for a certain input parameter.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The parameter number to get the domain for.
     *
     * @return The domain range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,calcSampleIndex,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:calcSampleIndex(int[]),351,372,"/**
* Calculates a function mask value from an input vector.
* @param vector array of dimension and values
*/","* calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
         *
         * @param vector with coordinates
         * @return index in flat array",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeValues(),144,163,"/**
* Initializes and returns the COSArray for function mask values.
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeForParameter(int),220,229,"/**
* Computes the parameter range for a given function mask index.
* @param paramNum function mask index
* @return PDRange object or null if invalid input
*/","* Get the decode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The decode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncodeForParameter(int),177,181,"/**
* Encodes input value into a PDF range object.
* @param n input value to be encoded
*/","* Get the encode for the input parameter.
     *
     * @param n The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isTopAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isTopAttached(),67,70,"/**
* Returns true if top mask is enabled.
*/","* Is the artifact attached to the top edge?
     * 
     * @return <code>true</code> if the artifact is attached to the top edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isBottomAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isBottomAttached(),78,81,"/**
* Returns true if the bottom mask is enabled.","* Is the artifact attached to the bottom edge?
     * 
     * @return <code>true</code> if the artifact is attached to the bottom edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isLeftAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isLeftAttached(),89,92,"/**
* Checks if left mask is enabled. 
* @return true if left mask is enabled, false otherwise
*/","* Is the artifact attached to the left edge?
     * 
     * @return <code>true</code> if the artifact is attached to the left edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isRightAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isRightAttached(),100,103,"/**
* Returns true if ""Right"" mask is set.","* Is the artifact attached to the right edge?
     * 
     * @return <code>true</code> if the artifact is attached to the right edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initStyles,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initStyles(org.w3c.dom.Element),107,126,"/**
* Processes element styles and colors.
* @param element Element object to process
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFont:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",66,72,"/**
* Initializes a new PDCIDFont object from the given COS dictionary and parent type 0 font.
* @param fontDictionary COS dictionary containing font data
* @param parent parent PDType0Font instance
*/","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontDescriptor(org.apache.pdfbox.cos.COSDictionary),296,308,"/**
* Retrieves the font descriptor from the given dictionary or its descendant.
* @param dictionary input dictionary to search for FONT_DESC
* @return COSDictionary font descriptor or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",48,71,"/**
* Initializes DictionaryEncoding with base encoding and differences.
* @param baseEncoding COSName of the base encoding
* @param differences COSArray of encoding differences
*/","* Creates a new DictionaryEncoding for embedding.
     *
     * @param baseEncoding the base encoding of this encoding
     * @param differences the differences of this encoding with regard to the base encoding",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary),78,100,"/**
* Initializes DictionaryEncoding from a COSDictionary.
* @param fontEncoding COSDictionary containing font encoding information
*/","* Creates a new DictionaryEncoding for a Type 3 font from a PDF.
     *
     * @param fontEncoding The Type 3 encoding dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",109,149,"/**
* Initializes DictionaryEncoding from COSDictionary, built-in encoding and symbolic flag.
* @param fontEncoding COS dictionary containing font information
* @param isNonSymbolic whether the font is non-symbolic (true) or symbolic (false)
* @param builtIn built-in encoding for symbolic fonts (null if unknown)
*/","* Creates a new DictionaryEncoding from a PDF.
     *
     * @param fontEncoding The encoding dictionary.
     * @param isNonSymbolic True if the font is non-symbolic. False for Type 3 fonts.
     * @param builtIn The font's built-in encoding. Null for Type 3 fonts.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSName),43,51,"/**
* Initializes a PDCIEDictionaryBasedColorSpace object with the given color space name.
* @param cosName COSName representing the color space
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSArray),58,64,"/**
* Initializes PDCIEDictionaryBasedColorSpace object from COSArray.
* @param rgb COSArray containing color space data
*/","* Creates a new CalRGB color space using the given COS array.
     *
     * @param rgb the cos array which represents this color space",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:toRGB(float[]),77,114,"/**
* Applies a transformation to the input vector using a gamma and matrix.
* @param value Input vector of length 3
* @return Transformed vector or original if m1() returns false
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:toString(),105,126,"/**
* Formats and returns a process string with component names.
* @return Formatted process string or ""ERROR"" on failure
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGBImage(java.awt.image.WritableRaster),64,112,"/**
* Transforms input raster to a masked RGB image.
* @param raster input WritableRaster
* @return BufferedImage with transformed data
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultDecode(int),158,164,"/**
* Calculates and returns an array of mask values based on the input bitsPerComponent.
* @param bitsPerComponent number of bits per color component
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getInitialColor(),166,178,"/**
* Calculates and returns the initial color for mask functionality.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setARange(org.apache.pdfbox.pdmodel.common.PDRange),229,232,"/**
* Applies mask operation to PDRange.
* @param range input data range
*/","* This will set the a range for the ""a"" component.
     * @param range the new range for the ""a"" component, 
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setBRange(org.apache.pdfbox.pdmodel.common.PDRange),239,242,"/**
* Applies mask to PDRange using m1 with offset of 2.","* This will set the ""b"" range for this color space.
     * @param range the new range for the ""b"" component,
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroup(java.lang.String),146,163,"/**
* Finds and returns the first optional content group with matching name.
* @param name the group name to search for
* @return OptionalContentGroup object or null if not found
*/","* Returns the first optional content group of the given name.
     *
     * @param name the group name
     * @return the optional content group or null, if there is no such group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,addGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),169,182,"/**
* Adds optional content group to the document's structure and order.
* @param ocg PDOptionalContentGroup object
*/","* Adds an optional content group (OCG).
     * @param ocg the optional content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOptionalContentGroups,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOptionalContentGroups(),188,201,"/**
* Retrieves a collection of optional content groups.
* @return Collection of PDOptionalContentGroup objects
*/","* Returns the collection of all optional content groups.
     * @return the optional content groups",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,72,"/**
* Initializes ShadingContext with given parameters.
* @param shading PDShading object to wrap
* @param cm ColorModel for the context
* @param xform AffineTransform for transformations
* @param matrix Matrix for further processing
*/","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws java.io.IOException if there is an error getting the color space
     * or doing background color conversion.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeForParameter(int),157,166,"/**
* Retrieves a parameter range from the decoded values array.
* @param paramNum index of the parameter to retrieve (0-based)
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(),794,797,"/**
* Returns a predefined color.
* @return Color C as per COSName enum
*/","* This will retrieve the color used in drawing various elements. As of PDF 1.6 these are :
     * <ul>
     * <li>Background of icon when closed</li>
     * <li>Title bar of popup window</li>
     * <li>Border of a link annotation</li>
     * </ul>
     *
     * @return Color object representing the colour
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getPathArray,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getPathArray(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon),157,178,"/**
* Converts annotation polygon to a float array of vertex coordinates.
* @param annotation PDAnnotationPolygon object
* @return float[][] containing vertex coordinates or null if invalid
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBorderColour(),86,89,"/**
* Returns a color mask using BC COS Name. 
* @return PDColor object representing the color mask
*/","* This will retrieve the border color.
     * 
     * @return the border color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBackground(),106,109,"/**
* Returns a color mask using COSName.BG.
*/","* This will retrieve the background color.
     * 
     * @return the background color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(char,char,char,char,char,char,char,char,char)",421,437,"/**
* Configures a digital certificate with specified extensions.
* @param digitalSignature whether to enable signature
* @param nonRepudiation whether to enable non-repudiation
* and other key usage properties
*/","* works like {@link #addKeyUsage(String)} but enters each character separately
     *
     * @param digitalSignature char that is one of {0, 1, X}
     * @param nonRepudiation char that is one of {0, 1, X}
     * @param keyEncipherment char that is one of {0, 1, X}
     * @param dataEncipherment char that is one of {0, 1, X}
     * @param keyAgreement char that is one of {0, 1, X}
     * @param keyCertSign char that is one of {0, 1, X}
     * @param cRLSign char that is one of {0, 1, X}
     * @param encipherOnly char that is one of {0, 1, X}
     * @param decipherOnly char that is one of {0, 1, X}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(java.io.InputStream),337,344,"/**
* Extracts and returns the specified range of bytes from a PDF file.
* @param pdfFile input stream representing the PDF file
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(byte[]),354,361,"/**
* Extracts a specified range from the provided PDF file.
* @param pdfFile input PDF file contents
* @return extracted byte array or null on failure
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(java.io.InputStream),412,418,"/**
* Extracts mask from PDF file.
* @param pdfFile input PDF file stream
* @return byte array representing the extracted mask or null on error
*/","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(byte[]),431,437,"/**
* Extracts and returns a mask from the given PDF file.
* @param pdfFile input PDF byte array
*/","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String),144,147,"/**
* Generates mask string by applying m1 and m2 functions to input name.
* @param name input string to process
*/","* Gets a name value.
     * 
     * @param name the attribute name
     * @return the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getRenderingIntent(),334,345,"/**
* Retrieves the rendering intent from a dictionary, or returns null if not found. 
* @return RenderingIntent object or null if not available
*/","* This will get the rendering intent.
     *
     * @return null or the RI value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,getN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:getN(),54,57,"/**
* Returns the function mask string ""N"".
* @return Function mask value as a string
*/","* This will get the name of the action to be performed.
     *
     * @return The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String,java.lang.String)",674,677,"/**
* Looks up configuration value using COSService.
* @param key configuration key
* @param defaultValue default value to return if not found
* @return configured or default value as a string
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineStyle(),144,147,"/**
* Returns a mask string based on guideline style solid. 
* @return String representation of the mask
*/","* Get the style for the guideline.  The default is ""S"" for solid.
     *
     * @return The guideline style.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getIcon(),103,106,"/**
* Retrieves function mask value using annotation.
* @return function mask string","* This will retrieve the icon (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the PDAnnotationText.NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getAttachmentName(),104,107,"/**
* Generates mask by invoking nested methods m1 and m2 with specified parameters.","* This is the name used to draw the type of attachment. See the ATTACHMENT_NAME_XXX constants.
     *
     * @return The name that describes the visual cue for the attachment.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getLineEndingStyle(),230,233,"/**
* Generates mask string using COS and annotation line settings. 
* @return generated mask string
*/","* This will retrieve the line ending style.
     *
     * @return The line ending style, possible values shown in the LE_ constants section, LE_NONE if
     * missing, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getHighlightMode(),160,163,"/**
* Returns a string mask based on inverted highlight mode.
* @return string representation of the mask
*/","* Set the highlight mode for when the mouse is depressed. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @return The string representation of the highlight mode.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getReplyType(),231,234,"/**
* Returns function mask string by invoking nested methods.
*/","* This will retrieve the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for
     * the available values.
     *
     * @return the relationship.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:getName(),131,134,"/**
* Returns a formatted string using COSName and NAME_DRAFT.
*/","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * DRAFT.
     *
     * @return The name of this rubber stamp, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getName(),178,181,"/**
* Generates a mask string using COSName.NAME and NAME_NOTE constants. 
* @return generated mask string
*/","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getHighlightingMode(),77,80,"/**
* Generates mask string by calling nested functions.
* @return Masked string or null if failed
*/","* Returns the highlighting mode. Default value: <code>I</code>
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @return the highlighting mode",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getStyle(),150,153,"/**
* Generates a mask string using COSName and STYLE_SOLID. 
* @return generated mask string
*/","* This will retrieve the border style, see the STYLE_* constants for valid values.
     *
     * @return the style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getType,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getType(),67,70,"/**
* Retrieves functional mask value.
* @return Functional mask string
*/","* returns the type of the external data dictionary. It must be ""ExData"", if present
     * 
     * @return the type of the external data dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:getSubtype(),82,86,"/**
* Returns a string representation of a function mask.
* @return The function mask as a string.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getStyle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getStyle(),70,73,"/**
* Generates function mask using COSName and transition style.
* @return generated function mask string
*/","* @return the style for this transition
     * @see PDTransitionStyle#valueOf(String)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDimension(),80,83,"/**
* Generates function mask by calling sub-functions and applying cosine transformation. 
* @return Function mask as a string
*/","* @return The dimension in which the specified transition effect shall occur or the default
     * {@link PDTransitionDimension#H} if no dimension is found.
     * @see PDTransitionDimension",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getMotion(),101,104,"/**
* Generates function mask using M and I.
* @return generated mask string
*/","* @return The direction of motion for the specified transition effect or the default {@link PDTransitionMotion#I}
     * if no motion is found.
     * @see PDTransitionMotion",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getNonFullScreenPageMode(),287,291,"/**
* Returns function mask preference value.
* @return String representation of function mask preference
*/","* Get the non full screen page mode preference.
     *
     * @return the non full screen page mode preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getReadingDirection(),308,311,"/**
* Returns the function mask value based on system direction.
*/","* Get the reading direction preference.
     *
     * @return the reading direction preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewArea(),328,331,"/**
* Returns a string mask from preferences using crop box boundaries.
*/","* Get the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @return the ViewArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewClip(),348,351,"/**
* Returns string mask value from preferences.
* @return string representation of mask value
*/","* Get the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @return the ViewClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintArea(),368,371,"/**
* Returns a string mask based on crop box boundaries.
*/","* Get the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @return the PrintArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintClip(),388,391,"/**
* Returns the function mask value.
* @return string representation of the function mask
*/","* Get the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @return the PrintClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintScaling(),428,431,"/**
* Returns function mask string based on print scaling preferences.
* @return Function mask string or default value if not set
*/","* Get the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @return the PrintScaling preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefOffset(long),295,316,"/**
* Calculates a function mask based on the given start XREF offset.
* @param startXRefOffset starting XREF offset
* @return calculated function mask or -1 if not found
*/","* Check if the cross reference table/stream can be found at the current offset.
     * 
     * @param startXRefOffset
     * @return the revised offset
     * @throws IOException",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getVersion,org.apache.pdfbox.pdmodel.PDDocument:getVersion(),1415,1441,"/**
* Calculates and returns the maximum version number between a header and a catalog.
* @return The maximum version float or -1.0f if invalid
*/","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. 1.4f)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAttributes(),161,196,"/**
* Retrieves revisions of PDAttributeObjects.
*@return Revisions<PDAttributeObject> collection
*/","* Returns the attributes together with their revision numbers (A).
     * 
     * @return the attributes as a list, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,isEmpty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:isEmpty(),143,147,"/**
* Checks mask condition based on m1 and m3 values.
* @return true if m1.m2() equals 1 and m3 is not null, false otherwise
*/","* Detects whether there are no properties in the attribute object.
     * 
     * @return <code>true</code> if the attribute object is empty,
     *  <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:toString(),193,197,"/**
* Returns functional mask as string in format ""O=<mask>"".
* @return Functional mask string or null if calculation fails.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getParent(),96,100,"/**
* Returns a PDStructureNode instance based on the parent dictionary.
* @return PDStructureNode instance or null if parent is null
*/","* Returns the parent in the structure hierarchy (P).
     * 
     * @return the parent in the structure hierarchy",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObject(org.apache.pdfbox.cos.COSBase),364,390,"/**
* Retrieves a mask object from the given COSBase instance.
* @param kid COSBase instance to extract the mask from
* @return Object representing the mask or null if not found
*/","* Creates an object for a kid of this structure node.
     * The type of object depends on the type of the kid. It can be
     * <ul>
     * <li>a {@link PDStructureElement},</li>
     * <li>a {@link PDObjectReference},</li>
     * <li>a {@link PDMarkedContentReference},</li>
     * <li>an {@link Integer}</li>
     * </ul>
     * 
     * @param kid the kid
     * @return the object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setName(java.lang.String),73,77,"/**
* Updates user data and notifies listeners with the given name.
* @param name user identifier to update
*/","* Sets the property name.
     * 
     * @param name the property name",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(org.apache.pdfbox.cos.COSDictionary),93,97,"/**
* Initializes PDEncryption object with COSDictionary.
* @param dictionary COSDictionary instance
*/","* creates a new encryption dictionary from the low level dictionary provided.
     * @param dictionary a COS encryption dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSecurityHandler,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSecurityHandler(),104,112,"/**
* Returns the security handler instance.
* @throws IOException if no security handler is set
*/","* Returns the security handler specified in the dictionary's Filter entry.
     * @return a security handler instance
     * @throws IOException if there is no security handler available which matches the Filter",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getAnnotations(),437,451,"/**
* Retrieves a list of FDF annotations from the PDF document.
* @return List of FDFAnnotation objects or null if none found
*/","* This will get the list of FDF Annotations. This will return a list of FDFAnnotation objects or null if the entry
     * is not set.
     *
     * @return A list of FDF annotations.
     *
     * @throws IOException If there is an error creating the annotation list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getName,org.apache.pdfbox.pdmodel.font.PDCIDFont:getName(),210,214,"/**
* Returns the function mask string.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,isCharSetMatch,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",666,710,"/**
* Checks if CID system info matches font info mask.
* @param cidSystemInfo PDC ID system information
* @param info Font information
* @return true if match, false otherwise
*/","* Returns true if the character set described by CIDSystemInfo is present in the given font.
     * Only applies to Adobe-GB1, Adobe-CNS1, Adobe-Japan1, Adobe-Korea1, as per the PDF spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,createCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:createCIDFont(),190,221,"/**
* Creates a CID font dictionary with specified properties.
*@return COSDictionary object representing the CID font
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,addNameTag,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:addNameTag(java.lang.String),223,231,"/**
* Updates the base font name with a prefix.
* @param tag unique identifier to append
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getName,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getName(),323,327,"/**
* Returns the function mask value by calling m1(). 
* @return The function mask string.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType0Font:getName(),613,617,"/**
* Returns function mask string using m1() method.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toString,org.apache.pdfbox.pdmodel.font.PDType0Font:toString(),672,681,"/**
* Generates the function mask string by combining values from different objects.
* @return Function mask string or null if any dependency is missing
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getName,org.apache.pdfbox.pdmodel.font.PDType1CFont:getName(),248,252,"/**
* Returns the function mask value.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType1Font:getName(),531,535,"/**
* Returns a string representing the function mask.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:isNChannel(),437,440,"/**
* Checks if the attributes collection is valid and calls its m1() method.
* @return true if attributes are valid and m1() returns true, false otherwise
*/","* Returns true if this color space has the NChannel subtype.
     * @return true if subtype is NChannel",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOpenAction(),284,299,"/**
* Returns a PDF destination or action based on the OPEN_ACTION dictionary/array.
*/","* Get the Document Open Action for this object.
     *
     * @return The action to perform when the document is opened.
     * @throws IOException If there is an error creating the destination or action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),50,58,"/**
* Creates a JavaScript action from the given PDF dictionary.
* @param base COSBase object containing dictionary data
* @return PDActionJavaScript instance or throws IOException if invalid
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAction,org.apache.pdfbox.pdmodel.fdf.FDFField:getAction(),702,705,"/**
* Creates a mask action based on field value A.
* @return PDAction object representing the mask action
*/","* This will get the action that is associated with this field.
     *
     * @return The 'A' entry in the FDF field dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getDoc(),140,165,"/**
* Retrieves a map of JavaScript actions from the document's dictionary.
* @return Map of action names to PDActionJavaScript objects or null if empty
*/","* Returns the dictionary's ""Doc"" entry, that is, a map of key value pairs to be added to the document's JavaScript
     * name tree.
     * 
     * @return Map of named ""JavaScript"" dictionaries.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getNext(),126,147,"/**
* Retrieves a list of PDF actions from the given document structure.
*/","* This will get the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @return The Next action or sequence of actions.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:getF(),66,69,"/**
* Creates a PDAction instance with a mask action.
* @return PDAction object
*/","* Get the F action.
     *
     * @return The F action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getE(),69,73,"/**
* Creates a new PDAction instance from the specified dictionary.
* @return PDAction object or null if dictionary is invalid
*/","* This will get an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @return The E entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getX(),92,96,"/**
* Creates a PDF action mask from X object.
* @return PDAction object or null if X is null
*/","* This will get an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @return The X entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getD(),116,120,"/**
* Creates a new action from the dictionary with key 'D' in the actions map.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @return The d entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getU(),141,145,"/**
* Creates a PDF Action object using the mask from the user dictionary. 
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @return The U entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getFo(),165,169,"/**
* Retrieves a PDAction object from FO dictionary, or returns null if not found. 
* @return PDAction object or null if not found in FO dictionary
*/","* This will get an action to be performed when the annotation
     * receives the input focus.
     *
     * @return The Fo entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getBl(),189,193,"/**
* Creates a PDF action by fetching the BL (Begin) dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @return The Bl entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPO(),215,219,"/**
* Creates a PDAction object from the ""PO"" dictionary.
* @return PDAction object or null if ""PO"" dictionary is not found
*/","* This will get an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @return The PO entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPC(),241,245,"/**
* Creates a PDAction object from a COSDictionary using PC name.
* @return PDAction object or null if dictionary is invalid
*/","* This will get an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @return The PC entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPV(),265,269,"/**
* Returns a PDAction object from the page viewer dictionary.
*/","* This will get an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @return The PV entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPI(),288,292,"/**
* Creates a PDF action mask from an existing PDF item.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @return The PI entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWC(),70,74,"/**
* Retrieves a PDF action instance from the WC dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @return The WC entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWS(),95,99,"/**
* Creates a PDAction instance from the first page's workspace dictionary.
* @return PDAction object or null if workspace is null
*/","* This will get a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @return The WS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDS(),120,124,"/**
* Creates a PDF Action using the mask dictionary.
* @return PDAction object or null if no mask found
*/","* This will get a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @return The DS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWP(),145,149,"/**
* Creates a PDAction object from the first page's WP dictionary.
* @return PDAction object or null if WP dictionary is missing
*/","* This will get a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @return The WP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDP(),170,174,"/**
* Creates a PDF action mask from the document's structure.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @return The DP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getK(),71,75,"/**
* Creates a PDF action mask from the given dictionary.
* @return PDAction object or null if invalid input
*/","* This will get a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @return The K entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getF(),97,101,"/**
* Creates a PDAction instance from the 'F' dictionary in actions.
* @return PDAction object or null if 'F' dictionary is missing
*/","* This will get a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @return The F entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getV(),123,127,"/**
* Creates a mask action from the 'V' dictionary in the actions array.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @return The V entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getC(),151,155,"/**
* Creates a PDF action mask from a dictionary.
* @return PDAction object or null if invalid input
*/","* This will get a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @return The C entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getO(),71,75,"/**
* Creates a mask action from user-provided data. 
* @return PDAction object or null if invalid input
*/","* This will get an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @return The O entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getC(),97,101,"/**
* Retrieves a PDF action from the dictionary with key ""C"".
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @return The C entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getAction(),92,96,"/**
* Creates a PDF action mask.
* @return PDAction object or null if creation fails
*/","* Get the action to be performed when this annotation is to be activated. Either this or the
     * destination entry should be set, but not both.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAction(),142,146,"/**
* Creates a PDF action mask.
* @return PDAction object or null if creation fails
*/","* Get the action to be performed when this annotation is to be activated.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getAction(),281,284,"/**
* Creates a PDAction instance with a mask action.
* @return PDAction object representing a mask operation
*/","* Get the action of this node.
     *
     * @return The action of this node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldType(),87,96,"/**
* Retrieves field type by ID, or from parent if not found.
*@return Field type string or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getPropertyStringValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getPropertyStringValue(java.lang.String),80,83,"/**
* Retrieves a mask value from information store.
* @param propertyKey unique key for the desired mask value
*/","* Return the properties String value.
     * <p>
     * Allows to retrieve the
     * low level date for validation purposes.
     * </p> 
     * 
     * @param propertyKey the dictionaries key
     * @return the properties value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCustomMetadataValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCustomMetadataValue(java.lang.String),280,283,"/**
* Generates field mask from given field name.
* @param fieldName name of the field to be masked
*/","*  This will get the value of a custom metadata information field for the document.
     *  This will return null if one is not found.
     *
     * @param fieldName Name of custom metadata field from pdf document.
     *
     * @return String Value of metadata field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getString(java.lang.String),78,81,"/**
* Calls nested method m1() and invokes its m2() on the result with input name.
*/","* Gets a string attribute value.
     * 
     * @param name the attribute name
     * @return the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,getBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:getBase(),70,73,"/**
* Generates mask string by invoking m1 and m2 methods.
* @return computed mask value as a string
*/","* This will get the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @return The URI entry of the specific URI dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getVersion(),131,134,"/**
* Retrieves function mask from dictionary. 
* @return string representation of function mask
*/","* A text string indicating the version of the application implementation, as described by the
     * <code>/Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     *
     * @return the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getUnits(),109,112,"/**
* Returns a string representation of the function mask.
*/","* This will return the label for the units.
     * 
     * @return the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String,java.lang.String)",735,738,"/**
* Resolves COSName by key and returns default value if not found.
* @param key COSName key to resolve
* @param defaultValue fallback value if resolution fails
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",780,784,"/**
* Retrieves a value from an embedded dictionary using the provided key.
* If not found, returns the specified default value.
* @param embedded embedded dictionary
* @param key COSName to search for
* @param defaultValue fallback value if key is missing
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getOperation(),122,125,"/**
* Returns functional mask string using m1 operation with COSName.O and OPERATION_OPEN.","* Get the operation to perform on the file.  This method will not return null,
     * OPERATION_OPEN is the default.
     *
     * @return The operation to perform for the file.
     * @see PDWindowsLaunchParams#OPERATION_OPEN
     * @see PDWindowsLaunchParams#OPERATION_PRINT",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultAppearance(),500,503,"/**
* Retrieves function mask value from dictionary.
* @return string representation of function mask value","* Get the default appearance.
     * 
     * @return the DA element of the dictionary object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeLanguage,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",938,948,"/**
* Copies the source language from the srcCatalog to the destCatalog.
* @param destCatalog target document catalog
* @param srcCatalog source document catalog
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFilename,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFilename(),101,121,"/**
* Attempts to fetch a valid filename from multiple sources.
* @return the first non-null filename or null
*/","* <p>Preferred method for getting the filename.
     * It will determinate the recommended file name.</p>
     * <p>First of all we try to get the unicode filename if it exist.
     * If it doesn't exist we take a look at the DOS, MAC UNIX filenames.
     * If no one exist the required F entry will be returned.</p>
     *
     * @return The preferred file name.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setFormattedValue(java.lang.String),115,119,"/**
* Updates mask with given formatted value.
* @param formattedValue user-input string to apply formatting rules
*/","* Sets the string for the property value.
     * 
     * @param formattedValue the string for the property value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFTextStripper:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",862,874,"/**
* Processes PDMarkedContent from COSDictionary and updates internal state.
* @param tag COSName identifier
* @param properties COSDictionary containing marked content data
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFTextStripper:endMarkedContentSequence(),876,889,"/**
* Resets marked content and clears text when marked content is found.
* @see #currentMarkedContents
* @see #actualText
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,probablyBarcodeFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),646,660,"/**
* Checks if the font descriptor matches a barcode or code font.
* @param fontDescriptor PDFontDescriptor object to check
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,toString,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:toString(),146,150,"/**
* Concatenates result of superclass's m1() with result of m2(). 
* @return concatenated string or null if either method returns null.",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,hasGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:hasGroup(java.lang.String),258,269,"/**
* Checks if a group matches any of its functional masks.
* @param groupName name of the group to check
* @return true if a match is found, false otherwise
*/","* Indicates whether a particular optional content group is found in the PDF file.
     * @param groupName the group name
     * @return true if the group exists, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractNonStrokingColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),364,428,"/**
* Extracts and returns the stroke color from a PDF annotation's default appearance.
* @param annotation PDAnnotationFreeText object to parse
* @return PDColor representing the stroke color or null if not found
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getFullyQualifiedName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getFullyQualifiedName(),406,422,"/**
* Concatenates full name from child and parent, if present.
* @return Full name as a string or null if no parent
*/","* Returns the fully qualified name of the field, which is a concatenation of the names of all the parents fields.
     * 
     * @return the name of the field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String,java.util.Calendar)",822,825,"/**
* Maps a string key to a Calendar object using COSName mapping.
* @param key string key to map
* @param defaultValue default calendar value if key is not found
* @return Calendar object or defaultValue if key is not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",866,870,"/**
* Retrieves a dictionary value by key or returns the default value.
* @param embedded embedded dictionary
* @param key key to retrieve
* @param defaultValue default value if not found
* @return COSDictionary value or defaultValue
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was
     * invalid.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getRevision(),141,144,"/**
* Returns a function mask value using COSName.R.","* The software module revision number, corresponding to the Date attribute.
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getMinimumRevision(),165,168,"/**
* Returns a function mask value from the dictionary.","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions)",65,75,"/**
* Applies a list of filters to the input stream and returns the result as a COSInputStream.
* @param filters List of filters to apply
* @param parameters COSDictionary of parameter values
* @param in Input stream to process
* @param options DecodeOptions for filtering
*/","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @param options decode options for the encoded stream
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createView,org.apache.pdfbox.cos.COSStream:createView(),181,197,"/**
* Creates a RandomAccessRead instance based on filters and options.
* @throws IOException if an I/O error occurs
*/","* Returns a new RandomAccessRead which reads the decoded stream data.
     * 
     * @return RandomAccessRead containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(java.util.List),200,220,"/**
* Applies filters to stream and returns filtered InputStream.
* @param stopFilters list of filters to stop on
*/","* This will get a stream with some filters applied but not others. This is
     * useful when doing images, ie filters = [flate,dct], we want to remove
     * flate but leave dct
     * 
     * @param stopFilters  A list of filters to stop decoding at.
     * @return A stream with decoded data.
     * @throws IOException If there is an error processing the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String),290,293,"/**
* Calculates function mask value based on input name.
* @param name string identifier of function to calculate mask for
*/","* Gets a number value.
     * 
     * @param name the attribute name
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getConversionFactor(),129,132,"/**
* Calculates function mask value.
* @return calculated function mask float value
*/","* This will return the conversion factor.
     * 
     * @return the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:<init>(org.apache.pdfbox.cos.COSBase),54,71,"/**
* Initializes a PDFunctionType2 object from the given COS function.
* @param function COS representation of the function
*/","* Constructor.
     *
     * @param function The function.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderLength(),306,309,"/**
* Calculates and returns the mask value using annot.m1(COSName.LL).
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderExtend(),326,329,"/**
* Calculates and returns a mask value using annot.m1 with COSName.LLE.","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderOffset(),346,349,"/**
 * Calculates the mask value using annotation m1 and COSName LLO.","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getV(),348,351,"/**
* Returns a float value from the dictionary based on COSName.V. 
* @return A float value corresponding to COSName.V","* The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @return the minimum required capability of the signature field seed value
     * dictionary parser",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCYX(),321,324,"/**
* Calculates and returns the mask value using m1 and m2 methods.
* @return calculated mask value
*/","* This will return the CYX factor.
     * 
     * @return CYX factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String,float)",279,282,"/**
* Retrieves mask value by name with default value fallback.
* @param name unique identifier of mask
* @param defaultValue initial value to use if not found
*/","* Gets a number value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getIntensity(),91,94,"/**
* Calculates and returns a floating-point mask value.
*/","* This will retrieve the intensity of the applied effect.
     *
     * @return the intensity value 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,computeFontHeight,org.apache.pdfbox.text.LegacyPDFStreamEngine:computeFontHeight(org.apache.pdfbox.pdmodel.font.PDFont),324,369,"/**
* Calculates the mask height of a PDF font.
* @param font PDF font object
* @return mask height in points or NaN if not found
*/","* Compute the font height. Override this if you want to use own calculations.
     * 
     * @param font the font.
     * @return the font height.
     * 
     * @throws IOException if there is an error while getting the font bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:toRGB(float[]),83,105,"/**
* Applies functional mask to input value.
* @param value input array with single element
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:getLineWidth(),148,170,"/**
* Calculates the FUNC_MASK value based on annotation and border characteristics.
* @return float value representing the FUNC_MASK
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:getLineWidth(),174,196,"/**
* Calculates the function mask value based on annotation and border characteristics.
* @return float function mask value or default value 1.0
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getLineWidth(),207,229,"/**
* Calculates the mask value based on annotation and border characteristics.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:getLineWidth(),125,147,"/**
* Calculates a mask value based on annotation and border characteristics.
* @return Mask value as a float or default value 1.0
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.util.List),107,113,"/**
* Applies mask function to each element in the input list.
* @param tokens List of elements to process
*/","* This will write out the list of tokens to the stream.
     *
     * @param tokens The tokens to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:getDecodeParms(),269,273,"/**
* Retrieves masked list of objects.
* @return List of Object instances or empty list if not found
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:getFileDecodeParams(),282,285,"/**
* Retrieves a list of parameter masks.
* @return List of Object containing parameter mask values
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),151,155,"/**
* Applies mask operations to the given PDStructureElement.
* @param structureElement element to be masked
*/","* Appends a structure element kid and sets the parent property (/P) to this.
     * 
     * @param structureElement the structure element",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)",208,211,"/**
* Masks PD structure element with reference kid.
* @param newKid PDStructureElement to mask
* @param refKid reference kid object
*/","* Inserts a structure element kid before a reference kid.
     * 
     * @param newKid the structure element
     * @param refKid the reference kid",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),278,286,"/**
* Removes PDStructureElement and updates its reference.
* @param structureElement element to be removed
* @return true if removed, false otherwise
*/","* Removes a structure element kid and if successful also removes the parent property (/P).
     *
     * @param structureElement the structure element
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultPositionVector(int),267,270,"/**
* Calculates and returns a Vector representing the function mask.
* @param cid unknown identifier (purpose unclear without context)
*/","* Returns the default position vector (v).
     *
     * @param cid CID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidth(int),317,324,"/**
* Applies a series of bitwise transformations to the input code.
* @param code integer value to be processed
* @return result as a floating-point number
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getAverageFontWidth(),485,489,"/**
* Delegates font size calculation to descendant font.
* @return calculated font size value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getProperties,org.apache.pdfbox.pdmodel.PDResources:getProperties(org.apache.pdfbox.cos.COSName),358,383,"/**
* Fetches a PDF properties list by name.
* @param name COSName of the property to fetch
* @return PDPropertyList object or null if not found
*/","* Returns the property list resource with the given name, or null if none exists.
     * 
     * @param name Name of the property list resource.
     * @return the property list with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getOptionalContent(),284,288,"/**
* Retrieves the function mask from the PDF document.
* @return PDPropertyList object or null if not found
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOptionalContent(),1055,1059,"/**
* Retrieves PDPropertyList from optional content dictionary.
* @return PDPropertyList object or null if not found
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getOCGs(),62,86,"/**
* Retrieves a list of PD property lists from the OC GS dictionary.
* @return List of PDPropertyList objects or empty list if not found
*/","* Get a list of optional content groups.
     * 
     * @return List of optional content groups, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getOptionalContent(),705,709,"/**
* Returns PDF property list based on optional content dictionary.
* @return PDPropertyList object or null if not found
*/","* This will get the optional content group or optional content membership dictionary for the
     * annotation.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOrVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenOrVisibilityExpression(org.apache.pdfbox.cos.COSArray),2240,2267,"/**
* Checks if all items in the COSArray are hidden.
* @param veArray COSArray to check
* @return true if all items are hidden, false otherwise
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationCaret instance from a COS dictionary.
 * @param field COS dictionary containing annotation caret properties
 */","* Creates a Caret annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
* Constructs a PDAnnotationFileAttachment from a COS dictionary.
* @param field COS dictionary containing attachment data
*/","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),66,69,"/**
 * Creates an instance of PDAnnotationFreeText from a COS dictionary.
 * @param field COSDictionary containing annotation data
 */","* Creates a FreeText annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Constructs a PDAnnotationInk object from a COS dictionary.
* @param dict COS dictionary containing annotation ink data
*/","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),125,128,"/**
* Constructs a PDAnnotationLine object from a COSDictionary.
* @param field COS dictionary representing annotation line data
*/","* Creates a Line annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Initializes a new instance of PDAnnotationPolygon from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new PDAnnotationPolyline instance from the provided PDF dictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(org.apache.pdfbox.cos.COSDictionary),109,112,"/**
* Creates a new PDAnnotationRubberStamp instance from a COS dictionary.
* @param field COS dictionary containing stamp properties
*/","* Creates a Rubber Stamp annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Constructs a PDAnnotationSound instance from a COS dictionary.","* Creates a sound annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
* Initializes a new instance of PDAnnotationSquareCircle from COS dictionary.
* @param dict COS dictionary containing annotation properties
*/","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),136,139,"/**
* Initializes PDAnnotationText from COS dictionary.
* @param field COSDictionary containing annotation text data
*/","* Creates a Text annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
* Initializes PDAnnotationTextMarkup from COSDictionary.","* Creates a TextMarkup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getPopup(),93,97,"/**
* Creates a PDF annotation popup object from its dictionary representation.
* @return PDAnnotationPopup object or null if the dictionary is invalid
*/","* This will retrieve the popup annotation used for entering/editing the text for this annotation.
     *
     * @return the popup annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getWidgets(),162,185,"/**
* Returns a list of annotation widgets in the PDF.
*/","* Returns the widget annotations associated with this field.
     *
     * @return The list of widget annotations. Be aware that this list is <i>not</i> backed by the
     * actual widget collection of the field, so adding or deleting has no effect on the PDF
     * document until you call {@link #setWidgets(java.util.List) setWidgets()} with the modified
     * list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueAsString(),465,469,"/**
* Calculates function mask value by invoking nested m1 and m2 methods.
* @return string representation of calculated mask value
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneForNewDocument(org.apache.pdfbox.cos.COSBase),81,103,"/**
* Clones a COSBase object with masking.
* @param base the COSBase object to clone
* @return the cloned TCOSBase object or null if failed
*/","* Deep-clones the given object for inclusion into a different PDF document identified by the destination parameter.
     * 
     * Expert use only, don’t use it if you don’t know exactly what you are doing.
     * 
     * @param base the initial object as the root of the deep-clone operation
     * @return the cloned instance of the base object
     * @throws IOException if an I/O error occurs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObjects,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObjects(),527,533,"/**
* Continuously calls m2 with data from objectsToWrite until all data is processed.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefInc,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefInc(org.apache.pdfbox.cos.COSDocument),710,750,"/**
* Updates the PDF trailer dictionary with cross-reference information.
* @param doc COSDocument instance
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromArray,org.apache.pdfbox.pdfwriter.COSWriter:visitFromArray(org.apache.pdfbox.cos.COSArray),1108,1152,"/**
* Processes COSArray elements.
* @param array COSArray to process
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDictionary,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDictionary(org.apache.pdfbox.cos.COSDictionary),1186,1265,"/**
* Processes COSDictionary object, recursively processing its contents.
* @param obj the COSDictionary to process
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectsToStream,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectsToStream(org.apache.pdfbox.cos.COSStream),109,157,"/**
* Packs and writes COSStream contents to the given stream.
* @param stream target COSStream
*/","* Writes all prepared {@link COSObject}s to the given {@link COSStream}.
     *
     * @param stream The stream for the compressed objects.
     * @return The given {@link COSStream} of this object stream.
     * @throws IOException Shall be thrown, if writing the object stream failed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSArray,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSArray(java.io.OutputStream,org.apache.pdfbox.cos.COSArray)",318,334,"/**
* Writes a COSArray to the OutputStream.
* @param output OutputStream to write to
* @param cosArray COSArray object containing values
*/","* Write the given {@link COSArray} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosArray The content, that shall be written.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyPolygonImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",279,393,"/**
* Applies a mask to the given polygon vertices.
* @param vertices array of polygon points
* @param isEllipse true if shape is an ellipse, false otherwise
*/","* Cloudy polygon implementation.
     *
     * @param vertices polygon vertices; first and last point must be equal
     * @param isEllipse specifies if the polygon represents an ellipse",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,encode,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:encode(),343,500,"/**
* Compresses and fetches image data using lossless RLE algorithm.
* @throws IOException if compression fails
*/","* Tries to compress the image using a predictor.
         *
         * @return the image or null if it is not possible to encoded the image (e.g. not supported
         * raster format etc.)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.PDPage),206,215,"/**
* Recursively processes the destination of a PDF page.
* @param page PDPage object to process
*/","* A convenience method that will create an XYZ destination using only the defaults.
     *
     * @param page The page to refer to.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryNameValuePair,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary),377,402,"/**
* Validates and stores a COSDictionary entry with a valid mask value.
* @param obj the dictionary to update
* @return true if successful, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",498,553,"/**
* Encrypts a PDF object stream using the provided COSStream.
* @param stream COSStream to encrypt
* @param objNum Object number to encrypt
* @param genNum Generation number to encrypt
*/","* This will decrypt a stream.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(),48,51,"/**
* Initializes an embedded goto action.
* @see #setSubType(String) 
* Sets sub-type to predefined constant. 
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(),44,47,"/**
* Initializes goto action with subtype.
* @see #setSubType(int) 
* @param SUB_TYPE predefined subtype value
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(),40,43,"/**
 * Initializes a new instance of a hide action.",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(),40,43,"/**
* Initializes import data action with subtype.
* @param SUB_TYPE predefined subtype value
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(),40,43,"/**
* Initializes JavaScript action with subtype.
* @see #setSubType(String)
*/",* Constructor #1.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(),44,47,"/**
 * Initializes a new action launch with the specified subtype.
 * @param SUB_TYPE predefined subtype value
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(),36,39,"/**
* Initializes a new PDActionMovie object with subtype set to SUB_TYPE.
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(),34,37,"/**
* Initializes a new instance of PDActionNamed with subtype set. 
* @see #setSubType(String) */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(),44,47,"/**
* Initializes remote goto action with subtype.
*/",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(),38,41,"/**
 * Initializes a new instance of the reset form action.",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(),41,44,"/**
* Initializes an action sound with default subtype.",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(),43,46,"/**
 * Initializes submit form with default subtype. 
 */",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(),44,47,"/**
 * Initializes a new instance of PDActionThread with default subtype.",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(),41,44,"/**
* Initializes a new PDActionURI with default subtype.",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(),36,39,"/**
 * Initializes a new instance of PDAnnotationCircle with specified subtype.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(),37,40,"/**
* Initializes annotation square with specified subtype.
* @param SUB_TYPE annotation subtype identifier
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(),40,43,"/**
* Initializes annotation highlight with specific subtype. 
* @param SUB_TYPE subtype identifier (assumed to be defined elsewhere)",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(),40,43,"/**
 * Initializes PDAnnotationSquiggly with subtype. 
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(),40,43,"/**
* Initializes a new instance of PDAnnotationStrikeout.
*/",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(),40,43,"/**
* Initializes PDAnnotationUnderline with subtype.
*/",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:toString(),1477,1684,"/**
* Constructs a string representation of the element's attributes.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:generateBoundingBox(),215,237,"/**
* Calculates a bounding box for the current font, using CID or TTF fonts if available.
* @return A non-empty BoundingBox object or an empty one on error.",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:generateBoundingBox(),206,222,"/**
* Calculates bounding box for font glyphs.
* @return BoundingBox object with glyph dimensions or default values if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:generateBoundingBox(),339,350,"/**
* Calculates the bounding box for a font mask.
* @return BoundingBox object or uses default from TTF if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:generateBoundingBox(),264,275,"/**
* Computes and returns a bounding box for the current font, or uses the default bounding box from the generic font if not applicable. 
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:generateBoundingBox(),547,558,"/**
* Calculates the bounding box for a font, using cached data if available.
* @return BoundingBox object or default values from genericFont
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType3Font:getHeight(int),206,240,"/**
* Calculates the M3 value based on the provided code.
* @param code unique identifier
* @return calculated float value or 0 if null
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getBBox(),101,105,"/**
* Returns the mask rectangle of the first (m1) glyph. 
* @return PDRectangle representing the mask bounds.",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:generateBoundingBox(),324,373,"/**
* Calculates and returns a bounding box for this font.
* @return BoundingBox object or empty rectangle if unavailable
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getImage,"org.apache.pdfbox.rendering.TilingPaint:getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",127,179,"/**
* Creates a rasterized mask for the given page drawing context.
* @param drawer PageDrawer object
* @param pattern Tiling Pattern to apply
* @param color Color to use
* @param xform AffineTransform to apply
* @param anchorRect Rectangle2D bounding box of the mask
* @return Rasterized BufferedImage or null if failed",* Returns the pattern image in parent stream coordinates.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getAnchorRect,org.apache.pdfbox.rendering.TilingPaint:getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),201,246,"/**
* Calculates and returns the rectangle for a tiling pattern.
* @param pattern TilingPattern object containing pattern properties
*/","* Returns the anchor rectangle, which includes the XStep/YStep and scaling.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRectangle(),101,104,"/**
* Calls the 'm1' method on an underlying annotation object.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,resolveTransformationMatrix,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:resolveTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",733,744,"/**
* Computes the transformation matrix for annotating appearance streams.
* @param annotation PDAnnotation object
* @param appearanceStream PDAppearanceStream to annotate
* @return Matrix representing the transformation
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,84,"/**
* Applies dash mask to an array of numbers.
* @param operator the operator performing this action
* @param arguments list containing the array and phase values
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getStencilImage(java.awt.Paint),562,570,"/**
* Processes image using Paint object.
* @param paint Paint object for processing
* @return Processed BufferedImage or throws exception if failed
*/","* {@inheritDoc}
     * The returned images are not cached.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRawRaster(org.apache.pdfbox.pdmodel.graphics.image.PDImage),226,261,"/**
* Creates a writable raster from the given PD image.
* @param pdImage input PDF image
*/","* Extract the raw unconverted raster of the given image
     * @param pdImage  The image to get the raw raster data from
     * @return the raw raster of this image
     * @throws IOException",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",170,218,"/**
* Generates a downscaled BufferedImage from a PDImage.
* @param pdImage input image
* @param region rectangle to clip the image
* @param subsampling factor for downsampling
* @param colorKey optional color key array (null if not used)
*/","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param region The region of the source image to get, or null if the entire image is needed.
     *               The actual region will be clipped to the dimensions of the source image.
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value
     * of 1 meaning every pixel will be read. It must not be larger than the image width or height.
     * @param colorKey an optional color key mask
     * @return content of this image as an (A)RGB buffered image
     * @throws IOException if the image cannot be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBImage(java.awt.image.WritableRaster),177,188,"/**
* Returns a masked image based on raster data, using either m1 or m2 method depending on attributes presence.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getMatrix,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getMatrix(),154,158,"/**
* Returns matrix mask from font configuration.
* @return Matrix representation of font mask.",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getResources,org.apache.pdfbox.pdmodel.PDPage:getResources(),326,340,"/**
* Returns the resources for the current page.
* @return PDResources object or null if not loaded
*/",* A dictionary containing any resources required by the page.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMediaBox,org.apache.pdfbox.pdmodel.PDPage:getMediaBox(),400,416,"/**
* Returns the PDF page's media box rectangle.
* @return PDRectangle object representing the page's boundaries
*/","* A rectangle, expressed in default user space units, defining the boundaries of the physical medium on which the
     * page is intended to be displayed or printed.
     * 
     * @return the media box of the page",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getRotation,org.apache.pdfbox.pdmodel.PDPage:getRotation(),583,595,"/**
* Calculates the function mask based on page rotation.
* @return Function mask value or 0 if no valid rotation angle found
*/","* Returns the rotation angle in degrees by which the page should be rotated
     * clockwise when displayed or printed. Valid values in a PDF must be a
     * multiple of 90.
     *
     * @return The rotation angle in degrees in normalized form (0, 90, 180 or
     * 270) or 0 if invalid or not set at this level.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(java.lang.String,boolean)",881,884,"/**
* Recursively fetches and returns COSName value by key.
* @param key key to look up
* @param defaultValue default value if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a cos boolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The value converted to a boolean.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,isVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:isVolatile(),215,218,"/**
* Returns a boolean value based on m1 result from COSName.V.
*/","* Get if the file is volatile.  Default: false
     *
     * @return True if the file is volatile attribute is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isHidden(),127,130,"/**
* Calculates and returns a boolean mask value.
* @return true/false result of m1().m2() operation
*/","* Shall the property be hidden?
     * 
     * @return <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDEncryption:isEncryptMetaData(),417,421,"/**
* Retrieves a boolean value from the dictionary using the specified key.
* @return True if the key exists and its value is true; false otherwise
*/","* Will get the EncryptMetaData dictionary info.
     * 
     * @return true if EncryptMetaData is explicitly set to false (the default is true)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaption(),296,299,"/**
* Checks if mask is enabled.
* @return true if mask is enabled, false otherwise
*/","* This will retrieve if the contents are shown as a caption or not.
     *
     * @return boolean if the content is shown as a caption.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,shouldScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:shouldScaleToFitAnnotation(),184,187,"/**
* Checks function mask value using m1 API.
* @return true if valid, false otherwise
*/","* This will tell if the icon should scale to fit the annotation bounds. Default: false
     *
     * @return A flag telling if the icon should scale.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,shouldRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:shouldRename(),122,125,"/**
* Evaluates function mask flag.
* @return true/false indicating flag state
*/","* A flag telling if the fields imported from the template may be renamed if there are conflicts.
     *
     * @return A flag telling if the fields can be renamed.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isIsolated,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isIsolated(),94,97,"/**
* Calculates and returns a boolean flag based on M1 and COS name I.
* @return true/false flag value
*/","* Returns true if this group is isolated. Isolated groups begin with the fully transparent image, non-isolated
     * begin with the current backdrop.
     * 
     * @return true if this group is isolated",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isKnockout,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isKnockout(),105,108,"/**
* Evaluates mask function.
* @return true/false result of evaluation","* Returns true if this group is a knockout. A knockout group blends with original backdrop, a non-knockout group
     * blends with the current backdrop.
     * 
     * @return true if this group is a knockout",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getAntiAlias(),228,231,"/**
* Checks if anti-aliasing is enabled in the rendering pipeline.
* @return true if enabled, false otherwise
*/","* This will return the AntiAlias value.
     *
     * @return the AntiAlias value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingOverprintControl(),362,365,"/**
* Checks and returns a specific flag value.
* @return true/false indicating flag status
*/","* This will get the overprint control.
     *
     * @return The overprint control or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAutomaticStrokeAdjustment(),498,501,"/**
* Retrieves the mask value from the dictionary. 
* @return true/false indicating mask state
*/","* This will get the automatic stroke adjustment flag.
     *
     * @return The automatic stroke adjustment flag or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAlphaSourceFlag(),560,563,"/**
* Retrieves and evaluates a specific flag value from the dictionary. 
* @return true if the flag is enabled, false otherwise
*/","* This will get the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @return The alpha source flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTextKnockoutFlag(),615,618,"/**
* Checks if function masking is enabled.
* @return true if enabled, false otherwise
*/","/**
     * This will get the text knockout flag.
     *
     * @return The text knockout flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getH(),79,82,"/**
* Checks the mask value using action interface.
* @return true if mask is valid, false otherwise
*/","* A flag indicating whether to hide the annotation or show it
     *
     * @return true if annotation is hidden",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSynchronous(),123,126,"/**
* Returns a mask indicating whether the current function is enabled.
* @return true if enabled, false otherwise
*/","* Gets the synchronous flag. It specifyes whether to play the sound synchronously or
     * asynchronously. When true, the reader allows no further user interaction other than canceling
     * the sound until the sound has been completely played.
     *
     * @return Whether to play the sound synchronously (true) or asynchronously (false, also the
     * default).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getRepeat(),143,146,"/**
* Evaluates repeat mask functionality.
* @return true/false indicating enabled/disabled state
*/","* Gets whether to repeat the sound indefinitely.
     *
     * @return Whether to repeat the sound indefinitely (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getMix(),168,171,"/**
* Returns a flag indicating whether to mask function names.
* @return true/false indicating masking status
*/","* Gets the flag specifying whether to mix this sound with any other sound already playing. If
     * this flag is false, any previously playing sound shall be stopped before starting this sound;
     * this can be used to stop a repeating sound (see Repeat).
     *
     * @return whether to mix this sound with any other sound already playing (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,hasCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:hasCaption(),262,265,"/**
* Calculates and returns function mask value.
* @return true/false indicating function availability status
*/","* This will retrieve whether the text specified by the /Contents or /RC entries shall be
     * shown as a caption in the appearance of the line.
     *
     * @return boolean if the contents shall be shown as a caption (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getOpen(),156,159,"/**
* Evaluates the mask function using M2 and COSName. 
* @return true if successful, false otherwise
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getPreRelease(),190,193,"/**
* Returns true if pre-release functionality is enabled.
* @return true if enabled, false otherwise
*/","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @return true if the software module or signature handler was a pre release.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getNonEFontNoWarn(),262,265,"/**
* Returns whether to mask non-EFont fonts.
* @return true if masking is enabled, false otherwise
*/","* If there is a LegalPDF dictionary in the catalog
     * of the PDF file and the NonEmbeddedFonts attribute in this dictionary
     * has a non zero value, and the viewing application has a preference
     * set to suppress the display of this warning then the value of this
     * attribute will be set to true.
     *
     * @return true if NonEFontNoWarn is set to true
     * @see #setNonEFontNoWarn(boolean)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getTrustedMode(),295,298,"/**
* Retrieves and evaluates trusted mode flag from dictionary.
* @return true if trusted mode is enabled, false otherwise
*/","* If true, the application was in trusted mode when signing took place.
     *
     * @return true if the application was in trusted mode while signing.
     *              default: false",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getNeedAppearances(),521,524,"/**
 * Checks if mask functionality is enabled. 
 * @return true if enabled, false otherwise
 */","* True if the viewing application should construct the appearances of all field widgets.
     * The default value is false.
     * 
     * @return the value of NeedAppearances, false if the value isn't set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,isFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:isFlyAreaOpaque(),182,185,"/**
* Evaluates function mask using COSName.B and default flags.
* @return true if successful, false otherwise
*/","* @return true if the area that shall be flown in is rectangular and opaque. Default is false. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideToolbar(),167,170,"/**
* Checks if toolbar should be hidden.
* @return true if toolbar is to be hidden, false otherwise
*/","* Get the toolbar preference.
     *
     * @return the toolbar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideMenubar(),187,190,"/**
* Determines whether to hide the menu bar.
* @return true if menu bar should be hidden, false otherwise
*/","* Get the menubar preference.
     *
     * @return the menubar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideWindowUI(),207,210,"/**
* Returns whether to hide window UI based on user preference.
* @return true if hidden, false otherwise
*/","* Get the window UI preference.
     *
     * @return the window UI preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,fitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:fitWindow(),227,230,"/**
* Checks if fit window functionality is enabled.
* @return true if enabled, false otherwise
*/","* Get the fit window preference.
     *
     * @return the fit window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,centerWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:centerWindow(),247,250,"/**
* Returns whether center window functionality is enabled. 
* @return true if enabled, false otherwise
*/","* Get the center window preference.
     *
     * @return the center window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,displayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:displayDocTitle(),267,270,"/**
* Returns whether to display document title in UI.
* @return true if enabled, false otherwise
*/","* Get the display doc title preference.
     *
     * @return the display doc title preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getBitsPerComponent(),111,122,"/**
* Returns a mask value based on condition m1().
* If true, returns 1; otherwise, calls m2() with specified arguments.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getColorSpace(),130,148,"/**
* Determines the color space for inline images based on PDF parameters.
* @throws IOException if color space cannot be determined
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getStencilImage(java.awt.Paint),371,379,"/**
* Returns a sampled image from the current stencil image using the provided Paint object.
* @param paint Paint object to apply to the image
* @return BufferedImage representation of the processed image or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFlag,"org.apache.pdfbox.cos.COSDictionary:setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",497,509,"/**
* Sets or clears a flag in the COSName field.
* @param field COSName field to modify
* @param bitFlag flag bitmask value
* @param value true to set, false to clear the flag
*/","* Sets the given boolean value at bitPos in the flags.
     *
     * @param field The COSName of the field to set the value into.
     * @param bitFlag the bit position to set the value in.
     * @param value the value the bit position should have.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",943,947,"/**
* Retrieves value from embedded dictionary using specified key.
* @param embeddedDictionary COS dictionary to search
* @param key name of the value to retrieve
* @param defaultValue default value if key not found
* @return retrieved value or defaultValue if key not found","* Get an integer from an embedded dictionary. Useful for 1-1 mappings.
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     * @param defaultValue The value if there is no embedded dictionary or it does not contain the key.
     *
     * @return The value of the embedded integer.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String),956,959,"/**
* Recursively calls m2 with COSName result and default value.
* @param key input string to process
*/","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName),968,971,"/**
* Returns index of given COSName in default list.
* @param key COSName to search for
*/","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value..",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String,int)",981,984,"/**
* Wraps call to m2 with COSName lookup.
* @param key lookup key
* @param defaultValue default value if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFlag,"org.apache.pdfbox.cos.COSDictionary:getFlag(org.apache.pdfbox.cos.COSName,int)",1153,1157,"/**
* Checks if a COSName field matches a specific mask.
* @param field COSName to check
* @param bitFlag bitmask flag
* @return true if the field matches the mask, false otherwise
*/","* Gets the boolean value from the flags at the given bit position.
     *
     * @param field The COSName of the field to get the flag from.
     * @param bitFlag the bitPosition to get the value from.
     *
     * @return true if the number at bitPos is '1'",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,decode,"org.apache.pdfbox.filter.CCITTFaxFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",37,124,"/**
* Decodes CCITT T4/T6/Modified Huffman RLE compressed data from the given InputStream.
* @param encoded input stream containing compressed data
* @param decoded output stream for decompressed data
* @param parameters dictionary of decoding parameters
* @param index index parameter (not used in this implementation)
* @return DecodeResult object indicating success or failure of the decode operation
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,"org.apache.pdfbox.pdmodel.PDPageTree:get(int,org.apache.pdfbox.cos.COSDictionary,int)",295,366,"/**
* Searches for a 1-based page number within a COSDictionary.
* @param pageNum the target page number
* @param node the dictionary to search in
* @return the parent COSDictionary if found, or null otherwise
*/","* Returns the given COS page using a depth-first search.
     *
     * @param pageNum 1-based page number
     * @param node page tree node to search
     * @param encountered number of pages encountered so far
     * @return COS dictionary of the Page object
     * @throws IllegalStateException if the requested page number isn't found
     * @throws IndexOutOfBoundsException if the requested page number is higher than the page count",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getCount,org.apache.pdfbox.pdmodel.PDPageTree:getCount(),439,442,"/**
* Calculates and returns the function mask value.
* @return The calculated function mask integer value
*/","* Returns the number of leaf nodes (page objects) that are descendants of this root within the page tree.
     * 
     * @return the number of leaf nodes, 0 if not present",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStart(),133,136,"/**
* Calculates the mask value using the root's m1 function.
* @return integer mask value
*/","* Returns the start value for page numbering in this page range.
     * 
     * @return a positive integer the start value for numbering.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getOrder,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getOrder(),123,126,"/**
* Calculates a mask value based on COSName.ORDER and an offset of 1.","* Get the order of interpolation between samples. Valid values are 1 and 3,
     * specifying linear and cubic spline interpolation, respectively. Default
     * is 1. See p.170 in PDF spec 1.7.
     *
     * @return order of interpolation.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRevisionNumber(),470,473,"/**
* Calculates and returns a mask value using m1 and m2 methods.
* @return calculated mask value
*/","* Returns the revision number (R).
     * 
     * @return the revision number",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getLength(),84,87,"/**
* Returns a mask value based on dictionary filter.
* @return mask value as an integer
*/","* This will return the Length entry of the crypt filter dictionary.<br><br>
     * The length in <b>bits</b> for the crypt filter algorithm. This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getVersion(),203,206,"/**
* Returns a mask value from the dictionary.
* @return integer mask value
*/","* This will return the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.
     *
     * @return The encryption version to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getLength(),224,227,"/**
* Returns a mask value based on dictionary lookup.
* @return integer mask value","* This will return the Length entry of the encryption dictionary.<br><br>
     * The length in <b>bits</b> for the encryption algorithm.  This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRevision(),249,252,"/**
* Retrieves function mask value from dictionary.
* @return function mask integer value
*/","* This will return the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.
     *
     * @return The encryption revision to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPermissions(),407,410,"/**
* Returns the mask value from the dictionary using COSName.P as key.","* This will get the permissions bit mask.
     *
     * @return The permissions bit mask.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getJustification(),187,190,"/**
* Generates a function mask string using annot.m1(). 
* @return function mask string
*/","* This will get the form of quadding (justification) of the annotation text.
     * 
     * @return The quadding of the text.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDFont:getWidth(int),255,311,"/**
* Calculates the width of a character represented by the given code.
* @param code character code
* @return character width or 0f if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFlags(),386,393,"/**
* Retrieves and returns the function mask value.
* @return The current function mask value
*/","* This will get the font flags.
     *
     * @return The font flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDSimpleFont:hasExplicitWidth(int),452,464,"/**
* Checks if the given font mask code is valid.
* @param code font mask code
* @return true if code matches font characteristics, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,create,"org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:create(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",48,64,"/**
* Creates a PDAbstractPattern instance based on the given COSDictionary.
* @param dictionary COSDictionary containing pattern details
* @param resourceCache ResourceCache for resolving resources
* @return PDAbstractPattern object or throws IOException for unknown patterns
*/","* Create the correct PD Model pattern based on the COS base pattern.
     * @param dictionary the COS pattern dictionary
     * @param resourceCache the resource cache, may be null, useful for tiling patterns.
     * @return the newly created pattern object
     * @throws IOException If we are unable to create the PDPattern object.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getPaintType(),110,113,"/**
* Calculates and returns a mask value using COSName.PAINT_TYPE.
* @return calculated mask value
*/","* This will return the paint type.
     * @return The paint type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getTilingType(),128,131,"/**
* Returns a function mask value.
* @return function mask integer value
*/","* This will return the tiling type.
     * @return The tiling type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,create,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:create(org.apache.pdfbox.cos.COSDictionary),274,305,"/**
* Creates a PDShading object based on the provided COSDictionary.
* @param shadingDictionary dictionary containing shading information
* @return PDShading object or null if unsupported type is encountered
*/","* Create the correct PD Model shading based on the COS base shading.
     *
     * @param shadingDictionary the COS shading dictionary
     * @return the newly created shading resources object
     * @throws IOException if we are unable to create the PDShading object",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerFlag(),69,72,"/**
* Calculates and returns a mask value based on COSName.BITS_PER_FLAG.
*/","* The bits per flag of this shading. This will return -1 if one has not
     * been set.
     *
     * @return The number of bits per flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getVerticesPerRow(),65,68,"/**
* Calculates and returns the mask value using m1() and m2().
*/","* The vertices per row of this shading. This will return -1 if one has not
     * been set.
     *
     * @return the number of vertices per row",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerComponent(),60,68,"/**
* Retrieves the number of bits per color component.
* @return Number of bits per color component or -1 if not set
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerCoordinate(),87,95,"/**
* Returns the number of bits per coordinate.
* @return The number of bits used to represent a single coordinate
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFlags(),77,80,"/**
* Calculates and returns a function mask value.
* @return function mask value as an integer
*/","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFlags(),103,106,"/**
* Returns the function mask value.
* @return integer representing the function mask
*/","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getPageNumber(),149,152,"/**
* Returns mask value using dictionary and COSName constant.
* @return integer mask value
*/","* If the value in the /P entry is an integer, this will get the page number (zero-based) in the
     * current document containing the file attachment annotation.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationIndex(),212,215,"/**
* Retrieves and returns the mask value from dictionary.
* @return The retrieved mask value
*/","* If the value in the /A entry is an integer, this will get the index (zero-based) of the
     * annotation in the /Annots array of the page specified by the /P entry.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationFlags(),292,295,"/**
* Calculates and returns a function mask value.
* @return calculated function mask integer value
*/","* This will get the flags for this field.
     * 
     * @return flags The set of flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getQ(),125,128,"/**
* Calculates and returns a function mask value.
* @return integer function mask value","* This will get the 'quadding' or justification of the text to be displayed.
     * <br>
     * 0 - Left (default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * Please see the QUADDING_CONSTANTS in {@link PDVariableText }.
     *
     * @return The justification of the text strings.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRotation(),66,69,"/**
* Returns a function mask value using COSName constants.
* @return integer function mask value
*/","* This will retrieve the rotation of the annotation widget. It must be a multiple of 90. Default is 0
     * 
     * @return the rotation",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,isTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:isTimestampRequired(),86,89,"/**
* Checks if function mask is enabled.
* @return true if enabled, false otherwise
*/","* Indicates if a timestamp is required.
     * 
     * @return true if a timestamp is required",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOpenCount(),224,227,"/**
* Returns a mask value based on COSName.COUNT and initialization value.
* @return integer mask value
*/","* Get the number of open nodes or a negative number if this node is closed.
     * See PDF Reference 32000-1:2008 table 152 and 153 for more details. This
     * value is updated as you append children and siblings.
     *
     * @return The Count attribute of the outline dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getTextAlign,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getTextAlign(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),648,652,"/**
* Calculates function mask from annotation widget.
* @param widget PDAnnotationWidget instance
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getQ(),611,614,"/**
* Retrieves a function mask value from the dictionary.
* @return function mask integer value
*/","* This will get the document-wide default value for the quadding/justification of variable text
     * fields. 
     * <p>
     * 0 - Left(default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * See the QUADDING constants of {@link PDVariableText}.
     *
     * @return The justification of the variable text fields.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createChoiceSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",97,109,"/**
* Creates a PDField instance based on the given COSDictionary's flags.
* @param form PDAcroForm reference
* @param field COSDictionary representing the form field
* @param parent PDNonTerminalField parent of the field
* @return PDComboBox or PDListBox instance, depending on the flag value
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createButtonSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",111,130,"/**
* Creates a PDField instance based on the field's functionality flags.
* @param form PDAcroForm containing the field
* @param field COSDictionary representing the field
* @param parent PDNonTerminalField parent of the field
* @return corresponding PDField subclass (RadioButton, PushButton, or CheckBox)",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,getTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:getTopIndex(),59,62,"/**
 * Calculates and returns a function mask.
 */","* This will get the top index ""TI"" value.
     *
     * @return the top index, default value 0.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldFlags(),68,73,"/**
* Retrieves a functional mask value using COSName FF and default value.
* @return functional mask value as an integer.",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,process,"org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,62,"/**
* Processes the MASK operator by creating a PDF image from the specified operands.
* @param operator operator instance with parameters
* @param operands list of COSBase objects (operands)
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName),239,242,"/**
* Returns list of COS objects based on given type.
* @param type COS object type
*/","* This will get all dictionaries objects by type.
     *
     * @param type The type of the object.
     *
     * @return This will return all objects with the specified type.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPages,org.apache.pdfbox.pdmodel.PDDocument:getPages(),1246,1249,"/**
 * Calls m1() to set up page tree and then calls its m2() method.
 */","* Returns the page tree.
     * 
     * @return the page tree",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int),270,274,"/**
* Calls m2 with default glyph list.
* @param code unique identifier
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.File),74,89,"/**
* Parses an FDF document from the specified file.
* @param file input file containing FDF data
* @return parsed FDFDocument object or throws IOException if parsing fails
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to
     * read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.InputStream),102,109,"/**
* Parses an InputStream into a FDFDocument object.
* @param input InputStream containing the PDF form data
* @return FDFDocument object or null on parsing failure
*/","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document. To read the stream
     * {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(),134,137,"/**
* Creates a new PDF document instance.
* @throws IOException if creation fails
*/","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing. Lenient mode is active by default.
     *
     * @return the populated PDDocument
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removePageResourceFromCache,org.apache.pdfbox.pdmodel.PDPage:removePageResourceFromCache(),124,132,"/**
* Loads resource mask from cache or page.
*/","* Remove all page resources from the cache to avoid relying on the implementation of the Cache. Does make sense
     * after processing a page.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName),191,194,"/**
* Retrieves color space by name.
* @param name COS name of the color space
*/","* Returns the color space resource with the given name, or null if none exists.
     * 
     * @param name Name of the color space resource.
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isAllowedCache,org.apache.pdfbox.pdmodel.PDResources:isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject),453,480,"/**
* Checks if the given PDXObject meets the mask criteria.
* @param xobject PDXObject to check
* @return true if object does not match any masked color spaces, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.font.PDFont),596,599,"/**
* Returns the font name as a COSName object.
* @param font PDFont object
*/","* Adds the given font to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param font the font to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),608,611,"/**
* Returns COSName representation of PDColorSpace. 
* @param colorSpace Color space object to convert. 
*/","* Adds the given color space to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param colorSpace the color space to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),620,623,"/**
* Returns the Cos name for extended graphics state.
* @param extGState extended graphics state object
*/","* Adds the given extended graphics state to the resources of the current page and returns the
     * name for the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param extGState the extended graphics state to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),632,635,"/**
 * Returns a COSName instance based on the given PDShading object.
 * @param shading PDShading instance to be converted
 */","* Adds the given shading to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param shading the shading to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern),644,647,"/**
* Returns the name of the given abstract pattern.
* @param pattern PDAbstractPattern instance to extract name from
*/","* Adds the given pattern to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param pattern the pattern to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),656,666,"/**
* Returns a COSName based on the type of input PDPropertyList.
* @param properties input property list
*/","* Adds the given property list to the resources of the current page and returns the name for
     * the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param properties the property list to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),675,678,"/**
* Creates a COSName object from an image XObject.
* @param image PDImageXObject to create COSName from
*/","* Adds the given image to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param image the image to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),687,690,"/**
* Returns a COSName object representing the Form XObject.
* @param form PDFormXObject instance
*/","* Adds the given form to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param form the form to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",700,703,"/**
* Creates a COSName object with a specific type and prefix.
* @param xobject PDXObject instance
* @param prefix string prefix for the name
*/","* Adds the given XObject to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param xobject the XObject to add
     * @param prefix the prefix to be used when creating the resource name
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,insertInnerFormToHolderResources,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",281,288,"/**
* Inserts a PDFormXObject into the PDF structure and resources.
* @param innerForm the form object to be inserted
* @param holderFormResources resources for the holder form
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createBackgroundLayerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",328,339,"/**
* Creates a form xobject for the PDF document.
* @param innerFormResource resources for the form
* @param bbox bounding box for the form
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFile(),225,233,"/**
* Retrieves an embedded file from the PDF document with mask functionality.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileDos(),261,269,"/**
* Retrieves a file embedded in the PDF as a DOS stream.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded dos file.
     *
     * @return The embedded dos file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileMac(),276,284,"/**
* Retrieves an embedded file from the MAC attribute.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded Mac file.
     *
     * @return The embedded Mac file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnix(),291,299,"/**
* Returns a PDEmbeddedFile instance from the specified Unix stream.
* @return embedded file object or null on failure
*/","* Get the embedded Unix file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnicode(),306,314,"/**
* Retrieves the embedded file from the parent document.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded unicode file.
     *
     * @return The embedded unicode file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",562,571,"/**
* Configures PDEncryption with AES filter and updates internal state.
* @param encryptionDictionary dictionary to configure
* @param aesVName name of AES filter to use
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",414,431,"/**
* Configures PDEncryption dictionary with filter and recipients.
* @param encryptionDictionary PDEncryption object to configure
* @param aesVName AES value name
* @param recipients array of recipient byte arrays
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidthFromFont(int),184,193,"/**
* Computes a float value based on the given code and returns it.
* @param code an integer code
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),304,346,"/**
* Checks if a PDOptionalContentGroup is masked based on its properties.
* @param group PDOptionalContentGroup object to check
* @return true if the group is masked, false otherwise
*/","* Indicates whether an optional content group is enabled.
     * @param group the group object
     * @return true if the group is enabled",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(java.lang.String,boolean)",374,392,"/**
* Recursively checks for a group with the given name and enables/disables optional content.
* @param groupName unique group identifier
* @param enable flag to enable or disable optional content
*/","* Enables or disables all optional content groups with the given name.
     *
     * @param groupName the group name
     * @param enable true to enable, false to disable
     * @return true if at least one group with this name already had an on or off setting, false
     * otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearance(),477,489,"/**
* Retrieves and configures the default appearance entry for a dictionary.
* @return PDAppearanceEntry object or null if not found
*/","* Get the annotations normal appearance.
     * 
     * <p>
     * This will get the annotations normal appearance. If this is not existent
     * an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the normal appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRolloverAppearance(),195,207,"/**
* Retrieves a PDAppearanceEntry, optionally replacing it with a new instance.
*/","* Get the annotations rollover appearance.
     * 
     * <p>
     * This will get the annotations rollover appearance. If this is not
     * existent an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the rollover appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDownAppearance(),172,184,"/**
* Creates and updates the down PDAppearanceEntry based on the dictionary.
* @return The updated down PDAppearanceEntry
*/","* Get the annotations down appearance.
     * 
     * <p>
     * This will get the annotations down appearance. If this is not existent an
     * empty appearance entry will be created.
     * 
     * @return the appearance entry representing the down appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(int),178,190,"/**
* Validates and sets mask value at specified index.
* @param index field index (must be within bounds)
*/","* Set the selected option given its index, and try to update the visual appearance.
     * 
     * NOTE: this method is only usable if there are export values and used for 
     * radio buttons with FLAG_RADIOS_IN_UNISON not set.
     * 
     * @param index index of option to be selected
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the index provided is not a valid index.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,prepend,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),141,155,"/**
* Updates the outline item hierarchy by adding a child and adjusting parent-child relationships.
* @param newChild the newly added child PDOutlineItem
*/","* Prepends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,append,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),119,133,"/**
* Updates the outline item hierarchy by adding or replacing a child.
* @param newChild new child item to be added or replaced
*/","* Appends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareVisibleSignature,"org.apache.pdfbox.pdmodel.PDDocument:prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",557,598,"/**
* Processes annotation widget and acroform in visual signature document.
* @param firstWidget PDAnnotationWidget to process
* @param acroForm PDAcroForm to associate with annotation
* @param visualSignature COSDocument containing visual signature data
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,findSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",483,500,"/**
* Retrieves the PDSignatureField from the iterator that matches the given signature.
* @param fieldIterator iterator of PDFields to search
* @param sigObject the PDSignature object to match
* @return matching PDSignatureField or null if not found
*/","* Search acroform fields for signature field with specific signature dictionary.
     * 
     * @param fieldIterator iterator on all fields.
     * @param sigObject signature object (the /V part).
     * @return a signature field if found, or null if none was found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getAppearance,org.apache.pdfbox.contentstream.PDFStreamEngine:getAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),466,469,"/**
 * Returns a PDAppearanceStream instance based on the provided PDAnnotation.
 */","* Returns the appearance stream to process for the given annotation. May be used to render
     * a specific appearance such as ""hover"".
     *
     * @param annotation The current annotation.
     * @return The stream to process.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,addFontFromWidget,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:addFontFromWidget(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation)",153,190,"/**
* Adds or updates font resources in the AcroForm based on annotations.
* @param acroFormResources PDResources containing AcroForm fonts
* @param annotation PDAnnotation object to process
*/","* Add font resources from the widget to the AcroForm to make sure embedded fonts are being used
     * and not added by ensureFontResources potentially using a fallback font.
     * 
     * @param acroFormResources AcroForm default resources, should not be null.
     * @param annotation annotation, should not be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValues(),316,333,"/**
* Retrieves a set of annotation values based on export rules and PDAnnotationWidgets.
* @return Set of String annotation values
*/","* Get the values to set individual buttons within a group to the on state.
     * 
     * <p>The On value could be an arbitrary string as long as it is within the limitations of
     * a PDF name object. The Off value shall always be 'Off'. If not set or not part of the normal
     * appearance keys 'Off' is the default</p>
     *
     * @return the potential values setting the check box to the On state. 
     *         If an empty Set is returned there is no appearance definition.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValue(int),338,346,"/**
* Returns a function mask string based on the widget at the specified index.
* @param index index of PDAnnotationWidget in the list
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,isChecked,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:isChecked(),64,67,"/**
* Checks if mask value is valid by calling intermediate functions. 
* @return true if mask value is valid, false otherwise
*/","* This will tell if this radio button is currently checked or not.
     * This is equivalent to calling {@link #getValue()}.
     *
     * @return true If this field is checked.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,check,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:check(),74,77,"/**
 * Calls m1() and then calls m2() with its result. 
 */","* Checks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,indexOf,org.apache.pdfbox.pdmodel.PDPageTree:indexOf(org.apache.pdfbox.pdmodel.PDPage),386,394,"/**
* Returns index of matching page in search tree.
* @param page PDPage object to search for
*/","* Returns the index of the given page, or -1 if it does not exist.
     *
     * @param page The page to search for.
     * @return the zero-based index of the given page, or -1 if the page is not found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneIDTree,"org.apache.pdfbox.multipdf.Splitter:cloneIDTree(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",252,278,"/**
* Merges ID trees from source and destination structure trees.
* @param srcStructTree source tree
* @param destStructTree destination tree
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setParent,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),93,97,"/**
* Updates the current node to the specified parent and calls m1(). 
* @param parentNode PDNameTreeNode object representing the new parent
*/","* Sets the parent to the given node.
     * 
     * @param parentNode the node to be set as parent",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setKids(java.util.List),138,158,"/**
* Updates node with kids and masks names if necessary.
* @param kids list of PDNameTreeNode children
*/","* Set the children of this named tree.
     *
     * @param kids The children of this named tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNames(Map)} with a map and pass a single
     * element list here.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setNames(java.util.Map),307,327,"/**
* Updates the 'names' and 'limits' properties of a PDF object with name-value pairs from the provided map.
* @param names map of names to values
*/","* Set the names for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param names map of names to objects, or <code>null</code> for nothing.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,98,"/**
* Initializes a PDPageLabels object from a PDDocument and COSDictionary.
* @param document the parent PDF document
* @param dict the dictionary containing page label information
*/","* Creates an page label dictionary for a document using the information in
     * the given COS dictionary.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @param dict
     *            an existing page label dictionary
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)
     * @throws IOException
     *             If something goes wrong during the number tree conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeForParameter(int),191,200,"/**
* Creates a PDRange object for the given parameter number.
* @param paramNum index of the parameter
*/","* Get the encode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncoding(),95,113,"/**
* Initializes the function mask using dictionary-based encoding.
* @throws IOException on encoding or IO errors
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(),44,47,"/**
* Initializes CALGRAY calendar type.",* Create a new CalGray color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(),39,42,"/**
* Initializes a new instance of PDCalRGB with default color space. 
* @see super(COSName.CALRGB) */",* Creates a new CalRGB color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(),41,44,"/**
* Initializes a new instance of PDLab with default COS name.",* Creates a new Lab color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
* Initializes a PDCalGray instance from a COSArray.
* @param array COSArray containing data to initialize the PDCalGray object
*/","* Creates a new CalGray color space using the given COS array.
     *
     * @param array the COS array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(org.apache.pdfbox.cos.COSArray),48,51,"/**
* Initializes a PDCalRGB object from a COSArray of RGB values.
* @param rgb array of color values in COS format
*/","* Creates a new CalRGB color space using the given COS array.
     * @param rgb the cos array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a new instance of PDLab with the specified COSArray data.
 * @param lab COSArray containing lab data
 */","* Creates a new Lab color space from a PDF array.
     * @param lab the color space array",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",69,129,"/**
* Initializes AxialShadingContext with the provided parameters.
* @param shading PDShadingType2 object to fetch axial shading context from
* @param colorModel ColorModel used in this context
* @param xform AffineTransform for device and user space transformation
* @param matrix Matrix defining transform and affine properties
* @param deviceBounds Rectangle representing device bounds
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",71,135,"/**
* Initializes RadialShadingContext with provided parameters.
* @param shading PDShadingType3 object representing radial shading type
* @param colorModel ColorModel used in context
* @param xform AffineTransform for device space transformation
* @param matrix Matrix for coordinate system transformation
* @param deviceBounds Rectangle defining device bounds
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,58,"/**
* Initializes a triangle-based shading context from given parameters.
* @param shading PDShading object to use for rendering
* @param cm ColorModel to apply when rendering
* @param xform AffineTransform to apply to the geometry
* @param matrix Matrix representing the transformation to apply
*/","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if there is an error getting the color space or doing background color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",50,82,"/**
* Initializes Type1ShadingContext with provided parameters.
* @param shading the PDShadingType1 object
* @param colorModel the ColorModel object
* @param xform the AffineTransform object
* @param matrix the Matrix object
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getDecodeForParameter(int),157,166,"/**
* Creates a PDRange object based on the provided parameter number.
* @param paramNum index of the parameter to create a range for
* @return PDRange object or null if not possible","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getDecodeForParameter(int),157,166,"/**
* Retrieves a PDRange object for the given parameter number.
* @param paramNum index of the parameter in the decode values
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getColor(),96,99,"/**
* Returns color value from annotation.",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String,java.lang.String)",156,159,"/**
* Generates mask string using m1 and m2 functions.
* @param name input name
* @param defaultValue default value to use if generation fails
*/","* Gets a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the name value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getStyle(),111,114,"/**
* Generates mask string with solid style.
* @return formatted mask string
*/","* This will retrieve the border effect, see the STYLE_* constants for valid values.
     *
     * @return the effect of the border or {@link #STYLE_SOLID} if none is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:generateNormalAppearance(),48,90,"/**
* Draws a mask annotation with attachment based on type.
* @throws IOException if I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setBorderLine,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",206,229,"/**
* Configures line mask based on style dictionary and border settings.
* @param lineWidth line width value
*/","* Convenience method for annotations: sets the line with and dash style.
     *
     * @param lineWidth The line width.
     * @param bs The border style, may be null.
     * @param border The border array, must have at least three entries. This is
     * only used if the border style is null.
     *
     * @throws IOException If there is an error writing to the content stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,getAnnotationBorder,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary)",38,87,"/**
* Creates AnnotationBorder object from annotation and border style.
* @param annotation PDAnnotation object
* @param borderStyle PDBorderStyleDictionary object or null for automatic detection
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocument,org.apache.pdfbox.multipdf.Splitter:createNewDocument(),743,783,"/**
* Creates a PDDocument with masked function based on existing catalog.
*@return PDDocument object
*/","* Create a new document to write the split contents to.
     *
     * @return the newly created PDDocument. 
     * @throws IOException If there is an problem creating the new document.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setVersion,org.apache.pdfbox.pdmodel.PDDocument:setVersion(float),1449,1473,"/**
* Updates application version.
* @param newVersion new version to apply
*/","* Sets the PDF specification version for this document.
     *
     * @param newVersion the new PDF version (e.g. 1.4f)
     *",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:toString(),109,125,"/**
* Generates a string representation of user attributes.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:toString(),127,131,"/**
* Combines parent class result with current object's properties.
* @return concatenated string result
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureTreeRoot(),739,751,"/**
* Retrieves the root of a PD structure tree.
* @return PDStructureTreeRoot object or null if not found
*/","* Returns the structure tree root.
     * 
     * @return the structure tree root",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getKids(),109,133,"/**
* Retrieves a list of objects associated with the given COSBase.
*/","* Returns a list of objects for the kids (K).
     * 
     * @return a list of objects for the kids, never null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getEncryption,org.apache.pdfbox.pdmodel.PDDocument:getEncryption(),825,832,"/**
* Retrieves or initializes PDEncryption instance. 
* If not initialized, attempts to initialize using document.m2(). 
* @return PDEncryption object or null if initialization failed.","* This will get the encryption dictionary for this document. This will still return the parameters if the document
     * was decrypted. As the encryption architecture in PDF documents is pluggable this returns an abstract class,
     * but the only supported subclass at this time is a
     * PDStandardEncryption object.
     *
     * @return The encryption dictionary(most likely a PDStandardEncryption object)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,prepareDecryption,org.apache.pdfbox.pdfparser.COSParser:prepareDecryption(),1197,1245,"/**
* Initializes encryption settings from document.
* @throws IOException on errors
*/","* Prepare for decryption.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException if something went wrong",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readEncodingFromFont(),263,315,"/**
* Determines the encoding for a font based on various conditions.
* @throws IOException if an I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,encode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:encode(int),393,443,"/**
* Retrieves the glyph ID or encoded code point for a given Unicode value.
* @param unicode the input Unicode value
* @return byte array containing the glyph ID or encoded code point, or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(int),473,500,"/**
* Fetches and returns a GeneralPath representation of a glyph by ID.
* @param code unique glyph identifier
* @return GeneralPath object or empty path if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType0Font:readEncoding(),321,355,"/**
* Initializes font-specific CMap and checks for descendant CJK ordering.
* @throws IOException if required CMap is missing
*/","* Reads the font's Encoding entry, which should be a CMap name/stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDType0Font:toUnicode(int),535,611,"/**
* Fetches Unicode string by code point using multiple fallbacks.
* @param code the code point to look up
* @return Unicode string or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,encode,org.apache.pdfbox.pdmodel.font.PDType1CFont:encode(int),389,412,"/**
* Retrieves the Unicode code point for a given character.
* @param unicode unique Unicode identifier
* @return encoded byte array containing the Unicode code point",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getStringWidth(java.lang.String),414,436,"/**
* Calculates the total width of a string based on its Unicode code points and embedded CFF font.
* @param string input string
* @return total width or 0 if no embedded font is present
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength1,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength1(byte[],int)",292,318,"/**
* Calculates FUNC_MASK value based on input byte array and length.
* @param bytes input byte array
* @param length1 input length value
* @return calculated FUNC_MASK value or adjusted length if invalid
*/","* Some Type 1 fonts have an invalid Length1, which causes the binary segment of the font
     * to be truncated, see PDFBOX-2350, PDFBOX-3677.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @return repaired Length1 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength2,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength2(byte[],int,int)",355,364,"/**
* Calculates the valid mask length from byte array.
* @param bytes input byte array
* @param length1 starting index
* @return valid mask length or default value if invalid
*/","* Some Type 1 fonts have an invalid Length2, see PDFBOX-3475. A negative /Length2 brings an
     * IllegalArgumentException in Arrays.copyOfRange(), a huge value eats up memory because of
     * padding.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @param length2 Length2 from the Type 1 stream
     * @return repaired Length2 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType1Font:encode(int),393,448,"/**
* Fetches glyph data for a Unicode character.
* @param unicode unique character identifier
* @throws IOException if I/O error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,initColorConversionCache,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:initColorConversionCache(org.apache.pdfbox.pdmodel.PDResources),111,175,"/**
* Initializes colorant-to-component mapping and spot colorspaces.
* @param resources PDResources object for attribute lookup
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getFormattedValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getFormattedValue(java.lang.String),274,295,"/**
* Formats input string according to field's scripting handler.
* @param apValue input string to format
* @return formatted string or original input if no formatting action found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getFractionalDisplay(),149,152,"/**
* Returns a formatted string mask.
*/","* This will return the value for the manner to display a fractional value.
     *  
     * @return the manner to display a fractional value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getThousandsSeparator(),221,224,"/**
* Returns a formatted string mask.
* @return concatenated string result
*/","* This will return the text to be used between orders of thousands in display of numerical values.
     * 
     * @return thousands separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDecimalSeparator(),241,244,"/**
* Generates function mask string using m1 and m2 methods.
* @return function mask string
*/","* This will return the text to be used as the decimal point in displaying numerical values.
     * 
     * @return decimal separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPrefixString(),260,263,"/**
* Generates a mask string using m1 and m2 methods.
* @return formatted string containing PS and space characters
*/","* This will return the text to be concatenated to the left of the label specified by U.
     * @return label prefix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelSuffixString(),279,282,"/**
* Returns a formatted string mask.
* @return Formatted string with 'SS' replaced by spaces
*/","* This will return the text to be concatenated after the label specified by U.
     * 
     * @return label suffix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPositionToValue(),299,302,"/**
* Generates function mask using m1 and m2 methods.
* @return Function mask string
*/","* This will return a value indicating the ordering of the label specified by U to the calculated unit value.
     * 
     * @return label position",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",766,769,"/**
* Wraps call to m1 with null as third parameter.","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractFontDetails,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractFontDetails(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),432,489,"/**
* Extracts font name and size from annotation's default appearance.
* @param annotation PDAnnotationFreeText object
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontMatches,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",553,644,"/**
* Evaluates font matches based on the provided PDFontDescriptor and PDCIDSystemInfo.
* @param fontDescriptor descriptor of the target font
* @param cidSystemInfo information about the CID system
* @return PriorityQueue of FontMatch objects, sorted by score
*/","* Returns a list of matching fonts, scored by suitability. Positive scores indicate matches
     * for certain attributes, while negative scores indicate mismatches. Zero scores are neutral.
     * 
     * @param fontDescriptor FontDescriptor, always present.
     * @param cidSystemInfo Font's CIDSystemInfo, may be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,toString,org.apache.pdfbox.pdmodel.interactive.form.PDField:toString(),472,477,"/**
* Generates the function mask string.
* @return function mask JSON string",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",852,855,"/**
* Wraps a call to m1 with null as the third parameter.
* @param embedded name of embedded object
* @param key name of cryptographic key
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream)",49,53,"/**
* Returns an input stream configured with specified filters and parameters.
* @param filters List of filter configurations
* @param parameters Dictionary of parameter settings
* @param in Input stream to configure
*/","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),169,173,"/**
* Creates a COSInputStream instance with specified decode options.
* @param options DecodeOptions object for masking
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFObjectStreamParser:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",49,73,"/**
* Initializes the parser with a COSStream and COSDocument.
* @param stream COSStream containing PDF objects
* @param document associated COSDocument
*/","* Constructor.
     *
     * @param stream The stream to parse.
     * @param document The document for the current parsing.
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:<init>(org.apache.pdfbox.cos.COSStream),52,64,"/**
* Initializes the parser with a given PDF COS stream.
* @param stream COSStream object containing PDF data
*/","* Constructor.
     *
     * @param stream The stream to parse.
     *
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.PDPage:getContentsForRandomAccess(),259,302,"/**
* Fetches and returns a RandomAccessRead object based on the page contents.
* @throws IOException if an error occurs while reading content
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",74,166,"/**
* Initializes a PDCIDFontType0 from the given COS dictionary and parent PDType0Font.
* @param fontDictionary COS dictionary containing font metadata
* @param parent PDType0Font to which this font belongs
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * 
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",83,155,"/**
* Initializes a PDCIDFontType2 object from the given font dictionary and parent font.
* If a TrueTypeFont is provided, it will be used; otherwise, an embedded font will be fetched if available;
* otherwise, a substitute font will be found. The resulting font's OTF support and embedding status are determined accordingly.
* @param fontDictionary COS dictionary containing the font information
* @param parent PDType0Font parent font
* @param trueTypeFont TrueTypeFont object to use (optional)
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @param trueTypeFont The true type font used to create the parent font
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,readCMap,org.apache.pdfbox.pdmodel.font.PDFont:readCMap(org.apache.pdfbox.cos.COSBase),208,228,"/**
* Retrieves a CMap from the given COSBase, either by name or stream.
* @param base COSBase object containing the CMap data
* @throws IOException if the input is invalid
*/","* Reads a CMap given a COS Stream or Name. May return null if a predefined CMap does not exist.
     *
     * @param base COSName or COSStream
     * @return the CMap if present
     * 
     * @throws IOException if the CMap could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontHeader,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontHeader(org.apache.pdfbox.cos.COSDictionary),324,360,"/**
* Extracts font file header from COSDictionary.
* @param fontDescriptor dictionary containing font information
* @return font file header as byte array or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentsForRandomAccess(),82,86,"/**
* Returns a random access read stream with function mask data.
* @return RandomAccessRead stream or null if not available
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentsForRandomAccess(),163,167,"/**
* Returns a RandomAccessRead object with FUNC_MASK functionality.
* @return RandomAccessRead object or null if failed to fetch
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentsForRandomAccess(),182,191,"/**
* Retrieves a Random Access Read mask from the dictionary.
* @throws IOException if an error occurs while accessing the dictionary
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(java.util.List),925,929,"/**
* Delegate to underlying service to fetch data.
* @param stopFilters list of filters to apply
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getPositionVector(int),288,298,"/**
* Retrieves a vector of function masks by code.
* @param code unique identifier
* @return Vector of function masks or null if not found
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getWidth(int),511,515,"/**
* Calls descendant font's m1 method with given code.
* @param code int value passed to descendantFont's m1 method
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,78,"/**
* Applies a mask to the given PDF stream using the specified operator and operands.
* @param operator the masking operator
* @param operands list of operands for the operation
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,75,"/**
* Applies mask operation to PDF stream.
* @param operator PDF operator
* @param operands list of operands (at least 2 required)
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenVisibilityExpression(org.apache.pdfbox.cos.COSArray),2187,2209,"/**
* Evaluates the mask operation on a COSArray.
* @param veArray input array
* @return true if operation is valid, false otherwise
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
* Creates a new circle annotation from the given COS dictionary.
* @param field COS dictionary representing the annotation properties
*/","* Creates a circle annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Initializes a new PDAnnotationSquare with the given COSDictionary.
* @param field COS dictionary containing annotation properties
*/","* Creates a square annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDAnnotationHighlight from a COS dictionary.
 * @param dict COS dictionary containing annotation highlight data
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Constructs a new PDAnnotationSquiggly instance from a COS dictionary.
* @param dict COS dictionary containing annotation data
*/","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Constructs a strikeout annotation from a COS dictionary.
* @param dict COSDictionary containing strikeout annotation data
*/","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Constructs an underline annotation from a COS dictionary.","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,transferDict,"org.apache.pdfbox.multipdf.LayerUtility:transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",289,300,"/**
* Copies specified dictionary entries from original to target.
* @param filter set of keys to copy
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSStream,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSStream(org.apache.pdfbox.cos.COSStream),144,166,"/**
* Merges input stream into a new COS stream while applying mask rules.
* @param stream input stream to process
* @return modified COS stream or null if error occurs
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMergeCOSBase,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMergeCOSBase(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",204,236,"/**
* Merges or updates fields from source to target COS object.
* @param source the source COSBase object
* @param target the target COSBase object
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeKEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",968,1039,"/**
* Masks source structure tree with destination.
* @param cloner PDFCloneUtility instance
* @param srcStructTree source structure tree root
* @param destStructTree destination structure tree root
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeIDTree,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",1084,1127,"/**
* Copies source ID tree to destination, masking out existing keys.
* @param srcStructTree source structure tree root
* @param destStructTree destination structure tree root
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeRoleMap,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.multipdf.PDFCloneUtility)",1189,1220,"/**
* Copies role map from source to destination structure tree, masking existing keys.
* @param srcStructTree source structure tree
* @param destStructTree destination structure tree
* @param cloner PDFCloneUtility instance for cloning values
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOutputIntents,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOutputIntents(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",1341,1369,"/**
* Copies output intents from source catalog to destination catalog, skipping duplicates.
* @param srcCatalog source document catalog
* @param destCatalog destination document catalog
* @param cloner utility for cloning PDF objects
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",1427,1478,"/**
* Recursively clones the page tree and object structure.
* @param cloner PDFCloneUtility instance
* @param parentTreeEntry current dictionary entry
* @param objMapping mapping of dictionaries to cloned objects
*/","* Update the Pg and Obj references to the new (merged) page.
     *
     * @param parentTreeEntry
     * @param objMapping mapping between old and new references",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeInto,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Set)",1546,1555,"/**
* Copies non-excluded entries from the source COSDictionary to the destination, 
* using the provided PDFCloneUtility for cloning.
* @param src source dictionary
* @param dst destination dictionary
* @param cloner utility for cloning objects
* @param exclude set of names to exclude from copying
*/","* This will add all of the dictionaries keys/values to this dictionary, but
     * only if they are not in an exclusion list and if they don't already
     * exist. If a key already exists in this dictionary then nothing is
     * changed.
     *
     * @param src The source dictionary to get the keys/values from.
     * @param dst The destination dictionary to merge the keys/values into.
     * @param exclude Names of keys that shall be skipped.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBody,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBody(org.apache.pdfbox.cos.COSDocument),426,449,"/**
* Processes and updates the trailer dictionary of a COSDocument.
* @param doc COSDocument object to be processed
*/","* This will write the body of the document.
     *
     * @param doc The document to write the body for.
     *
     * @throws IOException If there is an error writing the data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyPolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyPolygon(float[][]),104,125,"/**
* Converts and processes a float path into a polygon representation.
* @param path 2D array of floats representing the path
*/","* Creates a cloudy border for a Polygon annotation.
     *
     * @param path polygon path
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyRectangleImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyRectangleImpl(double,double,double,double,boolean)",225,271,"/**
* Draws a rectangular or elliptical mask with specified bounds.
* @param left left X coordinate
* @param bottom bottom Y coordinate
* @param right right X coordinate
* @param top top Y coordinate
* @param isEllipse true to draw an ellipse, false for rectangle
*/","* Cloudy rectangle implementation is based on converting the rectangle
     * to a polygon.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFileObject,"org.apache.pdfbox.pdfparser.COSParser:parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey)",525,611,"/**
* Parses and processes a COS object from the input stream.
* @param objOffset offset of the object in the stream
* @param objKey unique identifier for the object
* @return parsed COSBase object or null if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(java.lang.String),50,54,"/**
* Initializes JavaScript action with given script.
* @param js JavaScript code to execute
*/","* Constructor.
     *
     * @param js Some javascript code.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:toString(),235,264,"/**
* Constructs and returns a formatted string representation of attributes.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getBoundingBox(),205,213,"/**
* Returns the bounding box of the font.
* @return BoundingBox object or cached result if not initialized
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getBoundingBox(),196,204,"/**
* Returns the bounding box of the font mask.
* @return BoundingBox object representing the font mask bounds or null if not initialized
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBoundingBox(),329,337,"/**
* Returns the bounding box of the font.
* @return BoundingBox object representing the font's dimensions or null if not initialized
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBoundingBox(),254,262,"/**
* Returns the bounding box of the font.
* @return BoundingBox object representing the font's bounds or null if not initialized
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:getBoundingBox(),537,545,"/**
* Returns the bounding box of the font mask.
* @return BoundingBox object representing the font's spatial extent
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getBoundingBox(),314,322,"/**
* Returns the bounding box of the font mask.
* @return BoundingBox object representing the font mask bounds, or null if not initialized
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",97,104,"/**
* Creates a texture paint for tiling a page with the given pattern.
* @param drawer PageDrawer object
* @param pattern PDTilingPattern to be used for tiling
* @param color PDColor of the tile
* @param xform AffineTransform for transformation
*/","* Creates a new tiling Paint. The parameters color and colorSpace must be null for a colored
     * tiling Paint (because it has its own colors), and non null for an uncolored tiling Paint.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param colorSpace color space for this tiling
     * @param color color for this tiling
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setTransformationMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),509,516,"/**
* Applies a mask to the given PDAppearanceStream, using the bounding box and transformation from the first m1() method call.
* @param appearanceStream input stream for applying the mask
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,handleBorderBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:handleBorderBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle,float)",518,549,"/**
* Calculates the mask rectangle for a PDAnnotationSquareCircle.
* @param annotation PDAnnotationSquareCircle instance
* @param lineWidth line width to apply
* @return PDRectangle representing the mask rectangle
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawRaster(),525,529,"/**
* Returns a WritableRaster from this SampledImageReader.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawRaster(),359,363,"/**
* Returns a WritableRaster instance.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(java.awt.Rectangle,int)",597,600,"/**
* Creates a sampled image mask within the specified region.
* @param region rectangle defining the area of interest
* @param subsampling sampling factor for the image mask
*/","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @param region The region of the source image to get, or null if the entire image is needed. The actual region
     * will be clipped to the dimensions of the source image.
     * 
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value of 1 meaning every
     * pixel will be read. It must not be larger than the image width or height.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(java.awt.Rectangle,int)",353,357,"/**
* Reads image data from current object into a buffered image.
* @param region rectangle defining the area of interest
* @param subsampling factor for downsampling the image
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)",136,139,"/**
* Creates a BufferedImage from the given PDImage and color key.
* @param pdImage input image
* @param colorKey color key array
*/","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param colorKey an optional color key mask
     * @return content of this image as an RGB buffered image
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,pushResources,org.apache.pdfbox.contentstream.PDFStreamEngine:pushResources(org.apache.pdfbox.contentstream.PDContentStream),576,602,"/**
* Returns the parent resources for the given content stream.
* If available, uses the stream's resources; otherwise, falls back to page or creates a new resources object. 
* @param contentStream the content stream to fetch resources from
* @return the parent resources (or null if not found)
*/","* Pushes the given stream's resources, returning the previous resources.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",127,200,"/**
* Creates a PDPageContentStream for the specified page, stream, and resources.
* @param document PDDocument instance
* @param sourcePage PDPage to append/prepend content to
* @param appendContent AppendMode specifying whether to append or prepend
* @param compress Whether to compress the output stream
* @param resetContext Whether to save the initial graphics context
* @param stream PDStream containing the new content
* @param resources PDResources instance to use for the page",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,hasBlendMode,org.apache.pdfbox.rendering.PDFRenderer:hasBlendMode(org.apache.pdfbox.pdmodel.PDPage),533,556,"/**
* Checks if a page has non-normal blend mode.
* @param page PDPage object to check
* @return true if not normal, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,calculateAffineTransform,"org.apache.pdfbox.multipdf.Overlay:calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",575,583,"/**
* Calculates AffineTransform to position overlay media box in the center of page.
* @param page PDPage object
* @return AffineTransform object for overlay positioning
*/","* Calculate the transform to be used when positioning the overlay. The default implementation
     * centers on the destination. Override this method to do your own, e.g. move to a corner, or
     * rotate.
     *
     * @param page The page that will get the overlay.
     * @param overlayMediaBox The overlay media box.
     * @return The affine transform to be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,clipToMediaBox,org.apache.pdfbox.pdmodel.PDPage:clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),564,573,"/**
* Calculates the intersection of two rectangles.
* @param box input rectangle
* @return intersecting rectangle or null if empty
*/",* Clips the given box to the bounds of the media box.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedMediaBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage),348,361,"/**
* Computes the media box rectangle for a page with possible rotation.
* @param page PDPage object containing rotation and media box information
* @return adjusted or original media box rectangle depending on rotation angle
*/","* This will find the MediaBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The MediaBox at this level in the hierarchy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isMarked(),67,70,"/**
* Checks if an item is marked.
* @return true if marked, false otherwise
*/","* Tells if this is a tagged PDF.
     *
     * @return true If this is a tagged PDF.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,usesUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:usesUserProperties(),87,90,"/**
* Checks if UserProperties flag is set in the dictionary.
* @return true if flag is set, false otherwise
*/","* Tells if structure elements use user properties.
     *
     * @return A boolean telling if the structure elements use user properties.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isSuspect(),108,111,"/**
* Checks if ""Suspects"" is present in the dictionary.
* @return true if key exists, false otherwise
*/","* Tells if this PDF contain 'suspect' tags.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this property.
     *
     * @return true if the suspect flag has been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,shouldTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:shouldTrackMousePosition(),106,109,"/**
* Checks if map is enabled.
* @return true if map is enabled, false otherwise
*/","* This will specify whether to track the mouse position when the URI is
     * resolved. Default value: false. This entry applies only to actions
     * triggered by the user's clicking an annotation; it is ignored for actions
     * associated with outline items or with a document's OpenAction entry.
     *
     * @return A flag specifying whether to track the mouse position when the
     * URI is resolved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getOpen(),74,77,"/**
* Checks mask status by executing two-level function calls.
* @return true if mask is valid, false otherwise
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,isFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:isFD(),201,204,"/**
* Checks the mask flag using m1 and m2 methods.
* @return true if mask is valid, false otherwise
*/","* This will return the value indication if the denominator of the fractional value is reduced/truncated .
     * 
     * @return fd",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setHidden(boolean),138,142,"/**
* Configures mask visibility based on input flag.
* @param hidden true to hide, false to show
*/","* Specifies whether the property shall be hidden.
     * 
     * @param hidden <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:toString(),145,152,"/**
* Returns a formatted string containing user profile details.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingOverprintControl(),383,386,"/**
* Evaluates a function mask using COSName.OP_NS and result of m1().
* @return true if mask is valid, false otherwise
*/","* This will get the overprint control for non stroking operations.  If this
     * value is null then the regular overprint control value will be returned.
     *
     * @return The overprint control or null if one has not been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws a PDInlineImage at specified coordinates with given dimensions.
* @param inlineImage image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width image width
* @param height image height
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setInvisible(boolean),512,515,"/**
* Sets flag indicating visibility of an annotation.
* @param invisible true to hide, false to show
*/","* Set the invisible flag.
     *
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setHidden(boolean),532,535,"/**
 * Sets the hidden flag in the annotation.
 * @param hidden true to hide, false to show
 */","* Set the hidden flag.
     *
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPrinted(boolean),552,555,"/**
 * Sets the printed flag in the annotation.
 * @param printed whether the annotation should be printed
 */","* Set the printed flag.
     *
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoZoom(boolean),572,575,"/**
* Sets mask flag based on zoom preference.
* @param noZoom true to disable zoom or false otherwise
*/","* Set the noZoom flag.
     *
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoRotate(boolean),592,595,"/**
 * Sets flag to disable rotation based on input.
 * @param noRotate whether to disable rotation (true) or not (false)
 */","* Set the noRotate flag.
     *
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoView(boolean),612,615,"/**
 * Applies mask to function based on visibility flag.
 * @param noView true to hide view, false otherwise
 */","* Set the noView flag.
     *
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setReadOnly(boolean),632,635,"/**
* Sets read-only flag on annotation.
* @param readOnly true to enable read-only mode
*/","* Set the readOnly flag.
     *
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLocked(boolean),652,655,"/**
 * Sets flag indicating whether function is locked.
 * @param locked true if function is locked, false otherwise
 */","* Set the locked flag.
     *
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setToggleNoView(boolean),672,675,"/**
* Toggles flag to show/hide view based on input value.
* @param toggleNoView true to hide view, false to show
*/","* Set the toggleNoView flag.
     *
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLockedContents(boolean),692,695,"/**
* Sets flag indicating whether contents are locked.
* @param lockedContents true if contents are locked, false otherwise
*/","* Set the LockedContents flag.
     * 
     * @param lockedContents The new LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setInvisible(boolean),407,410,"/**
* Sets mask visibility.
* @param invisible true to hide, false to show
*/","* Set the invisible flag.
     * 
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setHidden(boolean),427,430,"/**
* Sets flag to indicate whether mask is visible or hidden.
* @param hidden true if mask should be hidden, false otherwise
*/","* Set the hidden flag.
     * 
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPrinted(boolean),447,450,"/**
* Sets mask flag based on print status.
* @param printed whether to set printed flag
*/","* Set the printed flag.
     * 
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoZoom(boolean),467,470,"/**
* Applies zoom mask to graphics context.
* @param noZoom whether to disable zoom functionality
*/","* Set the noZoom flag.
     * 
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoRotate(boolean),487,490,"/**
* Applies mask operation with optional rotation flag.
* @param noRotate whether to disable rotation
*/","* Set the noRotate flag.
     * 
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoView(boolean),507,510,"/**
* Sets mask flags based on view visibility.
* @param noView whether to hide or show view
*/","* Set the noView flag.
     * 
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setReadOnly(boolean),527,530,"/**
 * Configures function mask with read-only flag.
 * @param readOnly true to enable read-only mode
 */","* Set the readOnly flag.
     * 
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLocked(boolean),547,550,"/**
* Sets lock flag on functional mask.
* @param locked new lock status
*/","* Set the locked flag.
     * 
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setToggleNoView(boolean),567,570,"/**
* Toggles no-view flag in COS object.
* @param toggleNoView true to enable or false to disable no-view mode
*/","* Set the toggleNoView flag.
     * 
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLockedContents(boolean),596,599,"/**
* Sets lock status on contents.
* @param lockedContents true to lock, false to unlock
*/","* Set the LockedContents flag. If set, do not allow the contents of the annotation to be
     * modified by the user. This flag does not restrict deletion of the annotation or changes to
     * other annotation properties, such as position and size.
     *
     * @param lockedContents The new LockedContents flag value.
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/PDF32000_2008.pdf#page=393"">PDF
     * 32000-1:2008 12.5.3, Table 165</a>
     * @see #isLockedContents()
     * @see #FLAG_LOCKED_CONTENTS
     * @since PDF 1.7",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilterRequired(boolean),126,129,"/**
* Configures mask filter based on input flag.
* @param flag boolean value to enable/disable mask filtering
*/","* set true if the filter shall be required.
     * 
     * @param flag if true, the specified Filter shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilterRequired(boolean),145,148,"/**
* Sets mask flag based on input boolean value.
* @param flag true to enable or false to disable
*/","* set true if the subfilter shall be required.
     * 
     * @param flag if true, the first supported SubFilter in the array shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethodRequired(boolean),164,167,"/**
* Sets mask flag based on input value.
* @param flag boolean value to set as mask
*/","* set true if the DigestMethod shall be required.
     * 
     * @param flag if true, one digest from the array shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setVRequired(boolean),183,186,"/**
 * Sets the mask flag based on input.","* set true if the V entry shall be required.
     * 
     * @param flag if true, the V entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasonRequired(boolean),202,205,"/**
* Sets mask functionality based on input flag.
* @param flag true to enable, false to disable","* set true if the Reason shall be required.
     * 
     * @param flag if true, the Reason entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestationRequired(boolean),221,224,"/**
* Applies mask to legal attestation based on input flag.
* @param flag boolean value controlling mask application
*/","* set true if the LegalAttestation shall be required.
     * 
     * @param flag if true, the LegalAttestation entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setAddRevInfoRequired(boolean),240,243,"/**
* Sets mask flag based on input boolean value.
* @param flag true to enable or false to disable
*/","* set true if the AddRevInfo shall be required.
     * 
     * @param flag if true, the AddRevInfo shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectRequired(boolean),114,117,"/**
* Sets mask flag in subject dictionary.
* @param flag boolean value to set
*/","* set true if subject shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuerRequired(boolean),133,136,"/**
 * Sets issuer flag in the dictionary based on the provided boolean value.
 * @param flag true to set, false to reset the issuer flag
 */","* set true if Issuer shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Issuer shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOIDRequired(boolean),152,155,"/**
* Sets the mask flag in the underlying dictionary.
* @param flag boolean value to set
*/","* set true if OID shall be required as a constraint on signature.
     *
     * @param flag if true, the specified OID shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDNRequired(boolean),171,174,"/**
 * Updates subject DN mask in the dictionary with the given flag.
 * @param flag boolean value to set or clear the mask
 */","* set true if subject DN shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject DN shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsageRequired(boolean),190,193,"/**
* Sets flag value in dictionary.
* @param flag boolean indicator to update
*/","* set true if KeyUsage shall be required as a constraint on signature.
     *
     * @param flag if true, the specified KeyUsage shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLRequired(boolean),209,212,"/**
* Sets flag value in dictionary.
* @param flag boolean flag to set
*/","* set true if URL shall be required as a constraint on signature.
     *
     * @param flag if true, the specified URL shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setItalic(boolean),374,377,"/**
* Applies italic mask to font.
* @param italic true to apply italic, false otherwise
*/","* Set the italic property of the text.
     *
     * @param italic The new italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setBold(boolean),394,397,"/**
 * Applies or removes font bolding to the current graphics context.
 * @param bold true to apply bolding, false to remove it
 */","* Set the bold property of the text.
     *
     * @param bold The new bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setSignaturesExist(boolean),642,645,"/**
 * Sets flag indicating whether signatures exist in the dictionary.
 * @param signaturesExist true if signatures are present, false otherwise
 */","* Set the SignaturesExist bit.
     *
     * @param signaturesExist The value for SignaturesExist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setAppendOnly(boolean),682,685,"/**
* Sets mask flag in database.
* @param appendOnly whether to enable append-only mode
*/","* Set the AppendOnly bit.
     *
     * @param appendOnly The value for AppendOnly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSort(boolean),283,286,"/**
 * Configures mask functionality with optional sorting.
 * @param sort whether to enable sorting
 */","* Set the Sort bit.
     * 
     * @see #isSort()
     * @param sort The value for Sort.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setMultiSelect(boolean),303,306,"/**
* Configures mask behavior based on multi-select flag.
* @param multiSelect true to enable, false to disable multi-select mode
*/","* Set the MultiSelect bit.
     *
     * @param multiSelect The value for MultiSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDoNotSpellCheck(boolean),323,326,"/**
* Disables or enables spell checking.
* @param doNotSpellCheck true to disable spell checking, false otherwise
*/","* Set the DoNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for DoNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCommitOnSelChange(boolean),343,346,"/**
* Configures mask behavior based on selection change.
* @param commitOnSelChange whether to commit changes on selection change
*/","* Set the CommitOnSelChange bit.
     *
     * @param commitOnSelChange The value for CommitOnSelChange.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCombo(boolean),363,366,"/**
* Sets mask flag based on combo status.
* @param combo true to enable or false to disable combo functionality
*/","* Set the Combo bit.
     *
     * @param combo The value for Combo.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,setEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:setEdit(boolean),73,76,"/**
* Applies edit mask to COS name.
* @param edit true to enable editing
*/","* Set the Edit bit.
     *
     * @param edit The value for Edit.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:setReadOnly(boolean),148,151,"/**
* Sets read-only flag in user profile dictionary.
* @param readonly true to mark as read-only, false otherwise
*/","* sets the field to be read-only.
     * 
     * @param readonly The new flag for readonly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:setRequired(boolean),168,171,"/**
* Sets mask flag in dictionary based on requirement.
* @param required true to set flag, false otherwise
*/","* sets the flag whether the field is to be required to have a value at the time it is exported
     * by a submit-form action.
     *
     * @param required The new flag for required.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:setNoExport(boolean),187,190,"/**
* Sets flag to exclude export based on input parameter.
* @param noExport true to exclude export, false otherwise
*/","* sets the field to be not exported.
     * 
     * @param noExport The new flag for noExport.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
* Initializes a push button with an associated AcroForm.
* @param acroForm the AcroForm to associate with this button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),43,47,"/**
* Initializes radio button with flag set to FF and radio type.
* @param acroForm parent AcroForm object
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,setRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:setRadiosInUnison(boolean),69,72,"/**
* Sets radio mask flag based on input.
* @param radiosInUnison true to enable or false to disable
*/","* From the PDF Spec <br>
     * If set, a group of radio buttons within a radio button field that use the same value for the on state will turn
     * on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually
     * exclusive (the same behavior as HTML radio buttons).
     *
     * @param radiosInUnison The new flag for radiosInUnison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMultiline(boolean),75,78,"/**
* Sets mask flag with optional multiline option.
* @param multiline true to enable multiline flags
*/","* Set the multiline bit.
     *
     * @param multiline The value for the multiline.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setPassword(boolean),93,96,"/**
* Sets mask flag on user profile based on password visibility.
* @param password true to show/hide password
*/","* Set the password bit.
     *
     * @param password The value for the password.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setFileSelect(boolean),111,114,"/**
* Sets file selection flag in mask settings.
* @param fileSelect true to enable or false to disable file selection
*/","* Set the file select bit.
     *
     * @param fileSelect The value for the fileSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotSpellCheck(boolean),129,132,"/**
* Enables or disables spell checking based on parameter.
* @param doNotSpellCheck true to disable, false to enable
*/","* Set the doNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for the doNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotScroll(boolean),147,150,"/**
* Configures mask behavior with optional scrolling suppression.
* @param doNotScroll true to prevent scrolling on mask creation
*/","* Set the doNotScroll bit.
     *
     * @param doNotScroll The value for the doNotScroll.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setComb(boolean),165,168,"/**
* Sets mask combination flag.
* @param comb boolean value indicating mask combination
*/","* Set the comb bit.
     *
     * @param comb The value for the comb.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setRichText(boolean),183,186,"/**
* Sets mask flag based on rich text preference.
* @param richText true to enable rich text formatting
*/","* Set the richText bit.
     *
     * @param richText The value for the richText.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",929,932,"/**
* Calls m1 with default timeout (-1).","* Get an integer from an embedded dictionary. Useful for 1-1 mappings. default:-1
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     *
     * @return The value of the embedded integer.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDenominator(),181,184,"/**
* Returns FUNC mask value.
* @return integer representing FUNC mask
*/","* This will return the precision or denominator of a fractional amount.
     * 
     * @return the precision or denominator",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,encode,"org.apache.pdfbox.filter.CCITTFaxFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,158,"/**
* Encodes input stream into CCITT fax format.
* @param input InputStream to encode
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary with columns and rows
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,readJPX,"org.apache.pdfbox.filter.JPXFilter:readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",116,203,"/**
* Processes JPEG 2000 (JPX) image from input stream.
* @param input InputStream containing the JPX image
* @param options DecodeOptions object for configuration
* @param result DecodeResult object to store processed data
* @return BufferedImage representation of the processed image, or null on failure
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,wrapPredictor,"org.apache.pdfbox.filter.Predictor:wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",235,250,"/**
* Returns an OutputStream with optional prediction and color filtering.
* @param out the underlying output stream
* @param decodeParams dictionary containing filter parameters
* @return OutputStream instance or original out if no filters applied
*/","* Wraps and <code>OutputStream</code> in a predictor decoding stream as necessary.
     * If no predictor is specified by the parameters, the original stream is returned as is.
     *
     * @param out The stream to which decoded data should be written
     * @param decodeParams Decode parameters for the stream
     * @return An <code>OutputStream</code> is returned, which will write decoded data
     * into the given stream. If no predictor is specified, the original stream is returned.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getStructParents,org.apache.pdfbox.pdmodel.PDPage:getStructParents(),366,369,"/**
* Returns integer mask value from page.m1 operation.
* @return Mask value result of page.m1 operation
*/","* This will get the key of this Page in the structural parent tree.
     * 
     * @return the integer key of the page's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.cos.COSDictionary),473,491,"/**
* Recursively updates the count of parent nodes when a child is removed.
* @param node COSDictionary representing the child being removed
*/",* Removes the given COS page.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,add,org.apache.pdfbox.pdmodel.PDPageTree:add(org.apache.pdfbox.pdmodel.PDPage),498,520,"/**
* Recursively increments the page count of a given PDF page's ancestors.
* @param page PDPage object to start from
*/","* Adds the given page to this page tree.
     * 
     * @param page The page to add.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,increaseParents,org.apache.pdfbox.pdmodel.PDPageTree:increaseParents(org.apache.pdfbox.cos.COSDictionary),586,595,"/**
* Recursively traverses the PDF document tree and updates the COUNT key in each dictionary.
* @param parentDict the current dictionary to process
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getBitsPerSample(),111,114,"/**
* Calculates the function mask.
* @return integer function mask value","* Get the number of bits that the output value will take up.  
     * 
     * Valid values are 1,2,4,8,12,16,24,32.
     *
     * @return Number of bits for each output value.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getMCID(),89,92,"/**
* Computes and returns a function mask value.
* @return integer function mask value
*/","* Gets the marked content identifier.
     * 
     * @return the marked content identifier",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTreeNextKey(),155,158,"/**
* Returns the mask value using m1 and m2 methods with parent tree next key.","* Returns The next key for the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     *
     * @return The next key for the parent tree",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getMCID(),97,101,"/**
* Calculates and returns the function mask value.
* @return integer mask value or -1 if m1 is null
*/","* Gets the marked-content identifier.
     * 
     * @return the marked-content identifier, or -1 if it doesn't exist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getSupplement,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getSupplement(),57,60,"/**
* Returns the function mask value from the dictionary. 
* @return The integer function mask value.",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromRandomAccessImpl,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,int)",209,232,"/**
* Creates a PDImageXObject from the specified image data.
* @param document PDDocument instance
* @param reader RandomAccessRead stream containing image bytes
* @param number Image identifier
* @return PDImageXObject object or null on failure
*/","* Creates a new CCITT Fax compressed image XObject from a TIFF file.
     * 
     * @param document the document to create the image as part of.
     * @param reader the random access TIFF file which contains a suitable CCITT
     * compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject, or null if no such page
     * @throws IOException if there is an error reading the TIFF data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineCapStyle(),242,245,"/**
* Returns the mask value from the dictionary using COSName.LC key.","* This will get the line cap style.
     *
     * @return null or the LC value of the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineJoinStyle(),262,265,"/**
* Returns a mask integer value based on dictionary key LJ.
* @return An integer representing the mask.","* This will get the line join style.
     *
     * @return null or the LJ value in the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getStructParent(),683,686,"/**
* Retrieves a mask value using m1 and m2 methods.
* @return an integer mask value
*/","* This will get the key of this annotation in the structural parent tree.
     *
     * @return the integer key of the annotation's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,getP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:getP(),67,70,"/**
 * Retrieves and returns the mask value from the dictionary.
 */","* Return the P value.
     * 
     * @return the P value",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getMaxLen(),193,196,"/**
* Generates a mask value using COSName.MAX_LEN.","* Returns the maximum number of characters of the text field.
     * 
     * @return the maximum number of characters, returns -1 if the value isn't present",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getInteger(java.lang.String,int)",253,256,"/**
* Returns function mask value based on input string and default value.
* @param name input string
* @param defaultValue default value to return if not found
*/","* Gets an integer.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the integer",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isInvisible(),502,505,"/**
 * Checks if the function mask is enabled.
 */","* Get the invisible flag.
     *
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isHidden(),522,525,"/**
 * Determines whether to include function mask annotation.
 */","* Get the hidden flag.
     *
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isPrinted(),542,545,"/**
* Checks if mask flag is set.
* @return true if mask flag is enabled, false otherwise
*/","* Get the printed flag.
     *
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoZoom(),562,565,"/**
 * Checks functional mask state. 
 * @return true if enabled, false otherwise
 */","* Get the noZoom flag.
     *
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoRotate(),582,585,"/**
* Returns true if mask flag is enabled.
* @return true if mask flag is set, false otherwise
*/","* Get the noRotate flag.
     *
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoView(),602,605,"/**
* Returns true if mask is enabled.
* @return true if mask is enabled, false otherwise
*/","* Get the noView flag.
     *
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isReadOnly(),622,625,"/**
* Checks mask flag value using annotation. 
* @return true if read-only, false otherwise
*/","* Get the readOnly flag.
     *
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLocked(),642,645,"/**
* Checks mask flag.
* @return true if masked, false otherwise
*/","* Get the locked flag.
     *
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isToggleNoView(),662,665,"/**
* Returns whether to toggle view flags based on annotation M1.","* Get the toggleNoView flag.
     *
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLockedContents(),682,685,"/**
* Checks flag for locked contents.
* @return true if flagged, false otherwise
*/","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isInvisible(),397,400,"/**
 * Calculates the mask value based on the invisible flag.
 */","* Get the invisible flag.
     * 
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isHidden(),417,420,"/**
* Checks flag mask with user input. 
* @return true/false result of comparison
*/","* Get the hidden flag.
     * 
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isPrinted(),437,440,"/**
* Evaluates function mask condition.
* @return true if condition is met, false otherwise
*/","* Get the printed flag.
     * 
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoZoom(),457,460,"/**
* Evaluates function mask using m1() and m2() methods.
* @return true if mask is valid, false otherwise
*/","* Get the noZoom flag.
     * 
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoRotate(),477,480,"/**
* Calculates and returns a flag based on COSName.F and FLAG_NO_ROTATE.","* Get the noRotate flag.
     * 
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoView(),497,500,"/**
* Checks function mask by invoking m1() with F flag and no view.","* Get the noView flag.
     * 
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isReadOnly(),517,520,"/**
* Checks functionality mask.
* @return true if enabled, false otherwise
*/","* Get the readOnly flag.
     * 
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLocked(),537,540,"/**
 * Checks mask condition using m1().m2() with specific parameters.
 * @return true if condition is met, false otherwise
 */","* Get the locked flag.
     * 
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isToggleNoView(),557,560,"/**
* Returns true/false toggle value based on COS calculation.
*/","* Get the toggleNoView flag.
     * 
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLockedContents(),578,581,"/**
* Checks if mask is enabled.
* @return true if enabled, false otherwise
*/","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.
     * @see #setLockedContents(boolean)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isFilterRequired(),116,119,"/**
* Calculates the mask value using m1 and m2 methods.
* @return true if successful, false otherwise
*/","*
     * @return true if the Filter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isSubFilterRequired(),135,138,"/**
* Evaluates function mask using FF flag and subfilter option.
* @return true if mask is valid, false otherwise
*/","*
     * @return true if the SubFilter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isDigestMethodRequired(),154,157,"/**
* Returns true if function masking is enabled.
* @return true if enabled, false otherwise
*/","*
    * @return true if the DigestMethod is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isVRequired(),173,176,"/**
* Evaluates the function mask using FF flag and V value. 
* @return true if evaluation is successful, false otherwise
*/","*
    * @return true if the V entry is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isReasonRequired(),192,195,"/**
* Returns true/false flag based on masked result from m1().
* @return true if mask succeeded, false otherwise
*/","*
    * @return true if the Reason is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isLegalAttestationRequired(),211,214,"/**
* Evaluates the functional mask.
* @return true if valid, false otherwise
*/","*
    * @return true if the LegalAttestation is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isAddRevInfoRequired(),230,233,"/**
* Calculates a flag mask using COSName and FLAG constants.
* @return computed flag value
*/","*
    * @return true if the AddRevInfo is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectRequired(),104,107,"/**
* Returns true if mask flag is enabled.
* @return boolean value indicating mask flag status
*/","*
     * @return true if the Subject is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isIssuerRequired(),123,126,"/**
* Checks if issuer flag is set in the dictionary.","*
     * @return true if the Issuer is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isOIDRequired(),142,145,"/**
* Checks flag OID in dictionary.
* @return true if present, false otherwise
*/","*
     * @return true if the OID is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectDNRequired(),161,164,"/**
* Checks if subject DN flag is enabled in the dictionary configuration.
* @return true if enabled, false otherwise
*/","*
     * @return true if the Subject DN is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isKeyUsageRequired(),180,183,"/**
* Checks flag key usage in dictionary.
* @return true if FF flag is set, false otherwise
*/","*
     * @return true if the KeyUsage is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isURLRequired(),199,202,"/**
* Checks flag URL using COS dictionary. 
* @return true if flag is valid, false otherwise
*/","*
     * @return true if the URL is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isItalic(),364,367,"/**
* Returns a flag indicating whether the font mask is enabled.
* @return true if font mask is enabled, false otherwise
*/","* A flag telling if the text should be italic.
     *
     * @return The italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isBold(),384,387,"/**
* Returns true if the mask is enabled.
* @return true if mask is enabled, false otherwise
*/","* A flag telling if the text should be bold.
     *
     * @return The bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isSignaturesExist(),632,635,"/**
 * Checks if signature flags exist in the dictionary.
 */","* Determines if SignaturesExist is set.
     * 
     * @return true if the document contains at least one signature.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isAppendOnly(),652,655,"/**
* Checks if flag is set to append-only.
* @return true if flag is set, false otherwise
*/","* Determines if AppendOnly is set.
     * 
     * @return true if the document contains signatures that may be invalidated if the file is saved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isPushButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isPushButton(),87,90,"/**
* Returns true if mask is enabled.
* @return true if mask is enabled, false otherwise
*/","* Determines if push button bit is set.
     * 
     * @return true if type of button field is a push button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isRadioButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isRadioButton(),97,100,"/**
 * Returns true if mask is enabled.
 */","* Determines if radio button bit is set.
     * 
     * @return true if type of button field is a radio button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isSort(),272,275,"/**
 * Performs bitmask operation and returns true if successful.
 * @return true if operation is successful, false otherwise
 */","* Determines if Sort is set.
     * 
     * <p>
     * If set, the field’s option items shall be sorted alphabetically.
     * The sorting has to be done when writing the PDF. PDF Readers are supposed to
     * display the options in the order in which they occur in the Opt array. 
     * </p>
     * 
     * @return true if the options are sorted.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isMultiSelect(),293,296,"/**
* Evaluates function mask based on FF flag and multi-selection.
* @return true if function mask is enabled, false otherwise
*/","* Determines if MultiSelect is set.
     * 
     * @return true if multi select is allowed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isDoNotSpellCheck(),313,316,"/**
* Determines whether to mask function names.
* @return true if masking is enabled, false otherwise
*/","* Determines if DoNotSpellCheck is set.
     * 
     * @return true if spell checker is disabled.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCommitOnSelChange(),333,336,"/**
* Determines whether to apply a mask.
* @return true if mask should be applied, false otherwise
*/","* Determines if CommitOnSelChange is set.
     * 
     * @return true if value shall be committed as soon as a selection is made.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCombo(),353,356,"/**
* Evaluates the function mask condition.
* @return true if condition is met, false otherwise
*/","* Determines if Combo is set.
     * 
     * @return true if value the choice is a combo box..",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,isEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:isEdit(),63,66,"/**
* Checks edit flag functionality.
* @return true if successful, false otherwise
*/","* Determines if Edit is set.
     * 
     * @return true if the combo box shall include an editable text box as well as a drop-down list.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:isReadOnly(),157,160,"/**
* Checks function mask flag.
* @return true if function is read-only, false otherwise
*/","* 
     * @return true if the field is readonly",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:isRequired(),177,180,"/**
* Checks flag requirement status.
* @return true if flag is required, false otherwise
*/","* @return true if the field is required to have a value at the time it is exported by a
     * submit-form action.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:isNoExport(),196,199,"/**
* Returns flag indicating whether to export function mask.
* @return true if function should be exported, false otherwise
*/","* 
     * @return true if the field is not to be exported.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,isRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:isRadiosInUnison(),78,81,"/**
* Checks mask functionality.
* @return true if enabled, false otherwise
*/","*
     * @return true If the flag is set for radios in unison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isMultiline(),65,68,"/**
* Evaluates flag mask using COSName.FF and FLAG_MULTILINE.
* @return true if evaluated successfully, false otherwise
*/",* @return true if the field is multiline,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isPassword(),83,86,"/**
* Evaluates function mask condition.
* @return true/false result of condition evaluation
*/",* @return true if the field is a password field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isFileSelect(),101,104,"/**
* Performs a specific function mask operation.
* @return true if successful, false otherwise
*/",* @return true if the field is a file select field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotSpellCheck(),119,122,"/**
* Configures function mask settings.
* @return true if successful, false otherwise
*/",* @return true if the field is not suppose to spell check.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotScroll(),137,140,"/**
* Evaluates mask function using m1() and m2() methods.
* @return true if mask is valid, false otherwise
*/",* @return true if the field is not suppose to scroll.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isComb(),155,158,"/**
 * Evaluates function mask using COSName.FF and FLAG_COMB. 
 * @return true if successful, false otherwise
 */",* @return true if the field is not suppose to comb the text display.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isRichText(),173,176,"/**
* Checks mask functionality.
* @return true if enabled, false otherwise
*/",* @return true if the field is a rich text field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,org.apache.pdfbox.pdmodel.PDPageTree:get(int),261,269,"/**
* Creates a PDPage object from the given index and resources.
* @param index page index
*/","* Returns the page at the given index.
     *
     * @param index zero-based index
     * @return the page at the given index
     * 
     * @throws IllegalStateException if the requested index isn't found or doesn't point to a valid page dictionary
     * @throws IndexOutOfBoundsException if the requested index is higher than the page count",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getNumberOfPages,org.apache.pdfbox.pdmodel.PDDocument:getNumberOfPages(),1256,1259,"/**
* Computes a function mask value by chaining method calls.
* @return computed integer value
*/","* This will return the total page count of the PDF document.
     * 
     * @return The total number of pages in the PDF document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,next,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:next(),314,341,"/**
* Builds and returns a formatted string mask.
* @return A string representing the mask
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),234,256,"/**
* Updates the attribute object with a mask value.
* @param attributeObject PDAttributeObject to update
*/","* Adds an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,attributeChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),296,321,"/**
* Replaces attribute value in an array or sets a new array with the specified mask value.
* @param attributeObject PDAttributeObject to update
*/","* Updates the revision number for the given attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addClassName(java.lang.String),401,426,"/**
* Sets mask for a class by name.
* @param className unique class identifier
*/","* Adds a class name.
     * 
     * @param className the class name",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,incrementRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:incrementRevisionNumber(),492,495,"/**
* Increments the result of m1 and passes it to m2. 
* @param none 
*/",* Increments th revision number.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",119,289,"/**
* Decrypts user profile using provided encryption and decryption material.
* @param encryption PDEncryption object
* @param documentIDArray COSArray of document IDs
* @param decryptionMaterial DecryptionMaterial to use for decryption
*/","* Prepares everything to decrypt the document.
     *
     * @param encryption encryption dictionary, can be retrieved via
     * {@link PDDocument#getEncryption()}
     * @param documentIDArray document id which is returned via
     * {@link org.apache.pdfbox.cos.COSDocument#getDocumentID()} (not used by
     * this handler)
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws IOException If there is an error accessing data. If verbose mode
     * is enabled, the exception message will provide more details why the
     * match wasn't successful.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerKey(),273,291,"/**
* Generates a byte array representing the mask for the current object.
* @return byte[] representing the mask or null if not applicable
*/","* This will get the O entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserKey(),312,330,"/**
* Generates a byte array mask based on user data.
* @return byte[] user mask or null if undefined
*/","* This will get the U entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDFont:getDisplacement(int),250,253,"/**
* Converts integer code to vector representation.
* @param code input code value
* @return Vector object representing the encoded data
*/","* Returns the displacement vector (w0, w1) in text space, for the given character. For horizontal text only the x
     * component is used, for vertical text only the y component.
     *
     * @param code character code
     * @return displacement vector
     * @throws IOException if the data could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDFont:getStringWidth(java.lang.String),367,380,"/**
* Calculates the width of a text using custom function masks.
* @param text input string
* @return calculated width as float or throws IOException if error occurs
*/","* Returns the width of the given Unicode string.
     *
     * @param text The text to get the width of.
     * @return The width of the string in 1/1000 units of text space.
     * @throws IOException If there is an error getting the width information.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFlagBitOn,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFlagBitOn(int),250,253,"/**
* Checks if a specific bit is set in a mask.
* @param bit bit to check
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlagBit,"org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlagBit(int,boolean)",255,267,"/**
* Sets or clears a flag bit in the system state.
* @param bit flag bit mask
* @param value true to set, false to clear
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPattern,org.apache.pdfbox.pdmodel.PDResources:getPattern(org.apache.pdfbox.cos.COSName),325,350,"/**
* Fetches a PDAbtractPattern object by name, caching the result if applicable.
* @param name unique COSName identifier
*/","* Returns the pattern resource with the given name, or null if none exists.
     * 
     * @param name Name of the pattern resource.
     * @return the pattern with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStreamOperators,org.apache.pdfbox.contentstream.PDFStreamEngine:processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream),531,571,"/**
* Processes PDF stream content for masking.
* @param contentStream PDContentStream object to process
*/","* Processes the operators of the given content stream.
     *
     * @param contentStream to content stream to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShading,org.apache.pdfbox.pdmodel.PDResources:getShading(org.apache.pdfbox.cos.COSName),290,315,"/**
* Retrieves PDShading object by name.
* @param name COSName identifier
* @return PDShading object or null if not found
*/","* Returns the shading resource with the given name, or null if none exists.
     *
     * @param name Name of the shading resource.
     * @return the shading state with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getShading(),90,101,"/**
* Retrieves the PDF Shading object for FUNC_MASK.
* @return PDShading object or null if not found
*/","* This will get the shading resources for this pattern.
     * @return The shading resources for this pattern.
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerComponent(),60,68,"/**
* Retrieves the number of color component bits per pixel.
* @return Number of bits per color component or -1 if unknown
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerComponent(),60,68,"/**
* Retrieves the number of color component bits.
* @return Number of bits per color component or -1 if undefined
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerCoordinate(),87,95,"/**
* Returns the number of bits per coordinate.
* @return bitsPerCoordinate value or calculated default if not set
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerCoordinate(),87,95,"/**
* Retrieves the number of bits per coordinate. If not set, fetches from configuration.
* @return bitsPerCoordinate value or -1 if unknown
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveRotation,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveRotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),346,355,"/**
* Retrieves and returns the functional mask from the given annotation widget's appearance dictionary.
* @param widget PDAnnotationWidget instance
* @return functional mask value or 0 if no valid dictionary found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,isNodeOpen,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:isNodeOpen(),274,277,"/**
* Checks if mask value is positive.
* @return true if mask value is greater than zero, false otherwise
*/","* @return true if this node count is greater than zero, false otherwise.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createField,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",50,95,"/**
* Determines the type of PDF field based on its dictionary and properties.
* @param form PDAcroForm object
* @param field COSDictionary representing the field
* @param parent PDNonTerminalField parent field
* @return PDField object or null if unknown type
*/","* Creates a COSField subclass from the given field.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created 
     * @return the corresponding PDField instance",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxSelectionHighlight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",772,811,"/**
* Draws a highlighted list box with dynamic index entries and values.
* @param field PDListBox object
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldFlags(),71,85,"/**
* Retrieves FF value or its default from child object, if available.
* @return int FF value or 0 if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean,org.apache.pdfbox.rendering.PDFRenderer)",139,148,"/**
* Initializes a new instance of PDFPrintable with specified settings.
* @param document PDDocument to print
* @param scaling Scaling factor for the output
* @param showPageBorder Whether to display page borders
* @param dpi Dots per inch for the output
* @param center Whether to center the content
* @param renderer PDFRenderer instance for rendering pages
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).
     * @param renderer the document renderer. Useful if {@link PDFRenderer} has been subclassed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,<init>,org.apache.pdfbox.rendering.PDFRenderer:<init>(org.apache.pdfbox.pdmodel.PDDocument),71,75,"/**
* Initializes PDFRenderer with a PDDocument instance.
* @param document the PDDocument to render pages from
*/","* Creates a new PDFRenderer.
     * @param document the document to render",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.lang.String),59,62,"/**
 * Loads an FDFDocument from a file.
 * @param filename path to the FDF file
 */","* This will load a document from a file.
     *
     * @param filename The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used
     * to read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",223,239,"/**
* Decrypts and parses a PDF document using the provided key.
* @param input encrypted PDF data
* @param password decryption password
* @param keyStore key store for decryption
* @param alias key alias in the key store
* @param streamCacheCreateFunction function to create stream cache
* @return decrypted PDDocument object or throws IOException if failed
*/","* Parses a PDF.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",474,481,"/**
* Creates a PDDocument instance from encrypted or masked PDF data.
* @param randomAccessRead Random access read object for PDF data
* @param password Encryption password (if applicable)
* @param keyStore Key store input stream
* @param alias Alias for decryption (if applicable)
* @param streamCacheCreateFunction Function to create a stream cache
* @return PDDocument instance or throws IOException if error occurs","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,initFromRandomAccessRead,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead),96,101,"/**
* Parses and extracts visual signature from PDF data.
* @param rar RandomAccessRead object containing PDF bytes
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Applies mask to PDF stream using provided operator and arguments.
* @param operator PDF mask operation
* @param arguments list of COSBase objects containing mask data
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes CMYK color space configuration for PDF stream engine.
* @param operator Operator object
* @param arguments List of COSBase objects (not used in this method)
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes a PDF command with device gray color space.
* @param operator the operator to process
* @param arguments list of COSBase objects for processing
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Implements custom PDF color space processing for device RGB.
* @param operator Operator object
* @param arguments List of COSBase objects
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Applies color mask to PDF stream using specified operator and arguments.
* @param operator PDF operator to apply
* @param arguments list of COSBase objects containing color space information
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,52,"/**
* Processes CMYK color space for PDF stream engine.
* @param operator Operator instance
* @param arguments List of COSBase objects
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes operator for device gray color space conversion.
* @param operator Operator instance
* @param arguments List of COSBase objects
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",49,60,"/**
* Processes operator-specific PDF stream logic.
* @param operator the Operator instance
* @param arguments list of COSBase objects for processing
*/","* RG Set the stroking colour space to DeviceRGB and set the colour to
     * use for stroking operations.
     *
     * @param operator The operator that is being executed.
     * @param arguments List
     * @throws IOException If the color space cannot be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObject,org.apache.pdfbox.pdmodel.PDResources:getXObject(org.apache.pdfbox.cos.COSName),419,451,"/**
* Retrieves PDXObject for the given COSName.
* @param name unique identifier
* @return PDXObject instance or null if not found
*/","* Returns the XObject resource with the given name, or null if none exists.
     * 
     * @param name Name of the XObject resource.
     * @return the XObject with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies font and size settings to the document context.
* @param font PDFont object
* @param fontSize font size value
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,getName,org.apache.pdfbox.pdmodel.PDAbstractContentStream:getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),637,649,"/**
* Resolves the color space name based on the provided device color space.
* @param colorSpace device color space object
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters and executes mask operation.
* @param state extended graphics state context
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a fill mask to the given PDShading object.
* @param shading PDShading object to apply mask to
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Adds a mask annotation to the PDF document.
* @param tag COSName of the annotation
* @param propertyList PDPropertyList containing annotation properties
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Applies mask functionality to a COS object and its properties.
* @param tag COSName representing the object
* @param propertyList PDPropertyList containing object properties
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image mask at specified position and size.
* @param image the PDImageXObject to draw
* @param x x-coordinate of top-left corner
* @param y y-coordinate of top-left corner
* @param width image width
* @param height image height
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Applies the given transformation to the image using the specified matrix.
* @param image image object
* @param matrix transformation matrix
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDFormXObject on the page, disallowing text mode.
* @param form PDFormXObject object to be drawn
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayXObject,"org.apache.pdfbox.multipdf.Overlay:createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.multipdf.PDFCloneUtility)",501,530,"/**
* Creates a COSName for the function mask of a given page.
* @param page target PDF page
* @param layoutPage associated layout page
* @param cloner utility for cloning resources
* @return COSName object representing the function mask
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",306,326,"/**
* Creates and configures a PDFormXObject from provided resources and streams.
* @param imageFormResources resource bundle for the image form
* @param innerFormResource resource bundle for the inner form
* @param imageFormStream stream containing image data
* @param bbox bounding box for the image form
* @param at affine transformation matrix
* @param img image xobject to be used in the form
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev6,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",426,515,"/**
* Encrypts user and owner passwords, generates authentication keys, 
* and stores encrypted data in the PDEncryption dictionary.
* @param ownerPassword owner's password
* @param userPassword user's password
* @param encryptionDictionary dictionary to store encrypted data
* @param permissionInt permission integer value
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev234(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",517,560,"/**
* Encrypts user data using the provided PDEncryption dictionary.
* @param ownerPassword password of the document owner
* @param userPassword password of the current user
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidth(int),155,182,"/**
* Calculates the mask value for a given code.
* @param code unique identifier
* @return mask value or 0 if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(java.lang.String),279,297,"/**
* Recursively checks if a group with the given name exists in the optional content hierarchy.
* @param groupName name of the group to search for
* @return true if found, false otherwise
*/","* Indicates whether <em>at least one</em> optional content group with this name is enabled.
     * There may be disabled optional content groups with this name even if this function returns
     * true.
     *
     * @param groupName the group name
     * @return true if at least one group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isGroupEnabled,org.apache.pdfbox.rendering.PDFRenderer:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),448,452,"/**
* Checks if the given content group is valid based on optional content properties.
* @param group PDOptionalContentGroup object to validate
* @return true if valid, false otherwise
*/","* Indicates whether an optional content group is enabled.
     * @param group the group
     * @return true if the group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addFirst,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),93,98,"/**
* Applies a set of operations to a PDOutlineItem instance.
* @param newChild PDOutlineItem instance to process
*/","* Adds the given node to the top of the children list.
     * 
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addLast,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),79,84,"/**
* Invokes a series of methods to process and mask a PDOutlineItem.
* @param newChild the item to be processed
*/","* Adds the given node to the bottom of the children list.
     *
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,checkValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:checkValue(java.lang.String),378,387,"/**
* Validates input string against a set of allowed values.
* @param value input string to validate
*/","* Checks value.
     *
     * @param value Name of radio button to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByOption,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByOption(java.lang.String),412,439,"/**
* Validates and sets mask value for PDAnnotationWidget.
* @param value mask value to be set
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOpenAction,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOpenAction(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",849,892,"/**
* Copies and applies OpenAction from source to destination catalog if it exists.
* @param srcCatalog source document catalog
* @param dstCatalog destination document catalog
* @param cloner utility for cloning objects
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createDictionaryClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createDictionaryClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",413,533,"/**
* Creates a new dictionary by masking the given source dictionary.
* @param src source dictionary to be masked
* @param dstParent parent dictionary for page and kid references
* @return new masked dictionary or null if not possible
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,fixDestinations,org.apache.pdfbox.multipdf.Splitter:fixDestinations(org.apache.pdfbox.pdmodel.PDDocument),160,185,"/**
* Updates page destinations in the destination document.
* @param destinationDocument PDDocument to update
*/","* Replace the page destinations, if the source and destination pages are in the target
     * document. This must be called after all pages (and its annotations) are processed.
     *
     * @param destinationDocument",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,indexOfPageTree,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:indexOfPageTree(org.apache.pdfbox.cos.COSDictionary),138,158,"/**
* Retrieves the parent dictionary's page tree and fetches user profile by ID.
* @param pageDict COSDictionary object representing a page
* @return int indicating success (-1) or failure (other values)
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLabels(),620,624,"/**
* Retrieves page labels dictionary from PDF document.
* @return PDPageLabels object or null if not found
*/","* Returns the page labels descriptor of the document.
     *
     * @return the page labels descriptor of the document.
     * @throws IOException If there is a problem retrieving the page labels.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",56,69,"/**
* Creates PaintContext for axial shading.
* @param cm ColorModel
* @param deviceBounds Rectangle representing device bounds
* @return PaintContext object or default black context if error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a PaintContext for radial shading.
* @param cm ColorModel
* @param deviceBounds Device bounds rectangle
* @param userBounds User-defined bounds rectangle
* @param xform Affine transformation matrix
* @param hints Rendering hints
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",51,55,"/**
* Initializes a new GouraudShadingContext instance with the specified parameters.
* @param shading PDShading object
* @param colorModel ColorModel instance
* @param xform AffineTransform to apply
* @param matrix Matrix for transformation
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for Type1Shading.
* @throws IOException if an error occurs during painting
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:generateNormalAppearance(),54,145,"/**
* Draws a mask for the annotation.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:generateNormalAppearance(),50,198,"/**
* Updates annotation border and draws the annotation with specified styles.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocumentIfNecessary,org.apache.pdfbox.multipdf.Splitter:createNewDocumentIfNecessary(),704,715,"/**
* Initializes or refreshes the destination document and dictionary maps.
* @throws IOException if an I/O error occurs
*/","* Helper method for creating new documents at the appropriate pages.
     *
     * @throws IOException If there is an error creating the new document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteHeader,org.apache.pdfbox.pdfwriter.COSWriter:doWriteHeader(org.apache.pdfbox.cos.COSDocument),644,668,"/**
* Updates document header and writes FDF/PDF mask.
* @param doc COSDocument object
*/","* This will write the header to the PDF document.
     *
     * @param doc The document to get the data from.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties),653,662,"/**
* Updates PDF optional content properties and adjusts the document version.
* @param ocProperties PDOptionalContentProperties object to update
*/","* Sets the optional content properties dictionary. The document version is incremented to 1.5
     * if lower.
     *
     * @param ocProperties the optional properties dictionary",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildToUnicodeCMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildToUnicodeCMap(java.util.Map),124,179,"/**
* Updates the font's cmap by re-encoding glyphs using Unicode.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRoleMap(),758,766,"/**
* Recursively fetches and returns the M2 structure from the PD Structure Tree.
* @return A map of string to object containing the M2 data, or an empty map if not found
*/","* Returns the role map.
     * 
     * @return the role map",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromStream,org.apache.pdfbox.pdfwriter.COSWriter:visitFromStream(org.apache.pdfbox.cos.COSStream),1391,1423,"/**
* Encrypts and writes COSStream object to output stream.
* @param obj COSStream object to process
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromString,org.apache.pdfbox.pdfwriter.COSWriter:visitFromString(org.apache.pdfbox.cos.COSString),1425,1441,"/**
* Encrypts or writes the given COSString object to the output stream.
* @param obj COSString object to process
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,"org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",1480,1593,"/**
* Updates the PDF document with a new signature.
* @param doc PDDocument to update
* @param signInterface SignatureInterface to use for signing
*/","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     * @param signInterface class to be used for signing; {@code null} if external signing would be performed
     *                      or there will be no signing at all
     *
     * @throws IOException If an error occurs while generating the data.
     * @throws IllegalStateException If the document has an encryption dictionary but no protection
     * policy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addObjectToPool,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addObjectToPool(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",100,157,"/**
* Updates or adds object to the document's object pool.
* @param key COSObjectKey for the object
* @param base existing COSBase object (optional)
*/","* Adds the given {@link COSBase} to this pool, using the given {@link COSObjectKey} as it's referencable ID. This
     * method shall determine an appropriate key, for yet unregistered objects, to register them. Depending on the type
     * of object, it shall either be appended as-is or shall be appended to a compressed {@link COSWriterObjectStream}.
     *
     * @param key The {@link COSObjectKey} that shall be used as the {@link COSBase}s ID, if possible.
     * @param base The {@link COSBase}, that shall be registered in this pool.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,protect,org.apache.pdfbox.pdmodel.PDDocument:protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),1323,1345,"/**
* Initializes and configures protection policy with specified security handler.
* @param policy ProtectionPolicy object
*/","* Protects the document with a protection policy. The document content will be really
     * encrypted when it will be saved. This method only marks the document for encryption. It also
     * calls {@link #setAllSecurityToBeRemoved(boolean)} with a false argument if it was set to true
     * previously and logs a warning.
     * <p>
     * Do not use the document after saving, because the structures are encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @see org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy
     * @see org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy
     *
     * @param policy The protection policy.
     * @throws IOException if there isn't any suitable security handler.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),322,412,"/**
* Encrypts document with AES algorithm.
* @param doc PDDocument to encrypt
*/","* Prepare the document for encryption.
     *
     * @param doc The document that will be encrypted.
     *
     * @throws IOException If there is an error while encrypting.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getNormalizedPath(int),540,569,"/**
* Computes and returns a GeneralPath based on the given code.
* @param code input value to determine the path
* @return GeneralPath object or an empty path if not found
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getGlyphName,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getGlyphName(int),306,314,"/**
* Returns Unicode string representation for the given font code.
* @param code font code value
*/","* Returns the name of the glyph with the given character code. This is done by looking up the
     * code in the parent font's ToUnicode map and generating a glyph name from that.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToGID(int),249,333,"/**
* Fetches the FUNC_MASK value for a given code.
* @param code unique font code
*/","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID
     * @throws IOException if the mapping could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacSubtype(),179,183,"/**
* Retrieves mask value from parameters dictionary.
* @return string representation of mask or null if not found
*/","* Get the mac subtype.
     *
     * @return The mac subtype.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacCreator(),209,213,"/**
* Retrieves mask information from parameters dictionary.
* @return formatted string with MAC and CREATOR fields or null if not found
*/","* Get the mac Creator.
     *
     * @return The mac Creator.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacResFork(),239,243,"/**
* Retrieves mask value from parameters dictionary.
* @return string representation of the mask or null if not found
*/","* Get the mac ResFork.
     *
     * @return The mac ResFork.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getCIDFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",494,544,"/**
* Finds a suitable CIDFontMapping based on the provided parameters.
* @param baseFont base font name
* @param fontDescriptor PDFontDescriptor object for font matching
* @param cidSystemInfo PDCIDSystemInfo object for collection and priority matching
* @return CIDFontMapping object or null if not found
*/","* Finds a CFF CID-Keyed font with the given PostScript name, or a suitable substitute, or null.
     * This method can also map CJK fonts via their CIDSystemInfo (ROS).
     * 
     * @param fontDescriptor FontDescriptor
     * @param cidSystemInfo the CID system info, e.g. ""Adobe-Japan1"", if any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(),164,167,"/**
* Returns a COS input stream with default decode options. 
* @throws IOException if an I/O error occurs.","* Returns a new InputStream which reads the decoded stream data.
     * 
     * @return InputStream containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),186,189,"/**
* Wraps the given input stream with COSInputStream. 
* @param options DecodeOptions object
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreams(java.util.Map),303,373,"/**
* Processes object stream offsets and updates XREF table.
* @param xrefTable map of COSObjectKey to Long
*/","* Brute force search for all objects streams of a pdf.
     * 
     * @param xrefTable the cross reference table of the document
     * 
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectStreamObject,"org.apache.pdfbox.pdfparser.COSParser:parseObjectStreamObject(long,org.apache.pdfbox.cos.COSObjectKey)",621,658,"/**
* Fetches COSBase object by key from decompressed objects or document.
* @param objstmObjNr object stream number
* @param key COSObjectKey to search for
* @return COSBase object or null if not found
*/","* Parse the object with the given key from the object stream with the given number.
     * 
     * @param objstmObjNr the number of the offset stream
     * @param key the key of the object to be parsed
     * @return the parsed object
     * @throws IOException if something went wrong when parsing the object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefObjStream,"org.apache.pdfbox.pdfparser.XrefParser:parseXrefObjStream(long,boolean)",265,286,"/**
* Resolves cross-reference stream for a given object offset.
* @param objByteOffset byte offset of the object
* @param isStandalone whether to resolve standalone trailer
*/","* Parses an xref object stream starting with indirect object id.
     * 
     * @return value of PREV item in dictionary or <code>-1</code> if no such item exists",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContents,org.apache.pdfbox.pdmodel.PDPage:getContents(),221,230,"/**
* Returns an input stream containing the file's contents for random access.
* @return InputStream object or a zero-byte ByteArrayInputStream if not available
*/","* Returns the content stream(s) of this page as a single input stream.
     *
     * @return An InputStream, never null. Multiple content streams are concatenated and separated
     * with a newline. An empty stream is returned if the page doesn't have any content stream.
     * @throws IOException If the stream could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForStreamParsing,org.apache.pdfbox.pdmodel.PDPage:getContentsForStreamParsing(),232,257,"/**
* Fetches random access read for function mask, handling Flate encoded streams.
* @throws IOException if decoding fails
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",70,73,"/**
* Constructs a new PDCIDFontType2 instance from the given font dictionary and parent font.
* @param fontDictionary COS dictionary representing the font
* @param parent parent Type 0 font
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @throws IOException if the font could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getCIDFont(),673,676,"/**
* Creates a PDCIDFont object with mask functionality.
* @return PDCIDFont instance
*/",* Returns the descendant CIDFont.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadUnicodeCmap,org.apache.pdfbox.pdmodel.font.PDFont:loadUnicodeCmap(),134,172,"/**
* Retrieves and initializes the ToUnicode CMap, handling potential issues with identity mappings.
* @return Initialized CMap object or null if failed
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontTypeFromFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontTypeFromFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",214,258,"/**
* Determines the font type based on the provided font descriptor and name.
* @param fontDescriptor COSDictionary containing font information
* @return FontType enum value or null if unknown
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContents,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContents(),76,80,"/**
* Returns an input stream with random access capabilities to a masked data source.
* @throws IOException if an I/O error occurs
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContents,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContents(),157,161,"/**
* Returns an input stream to a random access data source.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContents,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContents(),174,180,"/**
* Returns an InputStream for random access, or null if not available.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDType0Font:getPositionVector(int),491,496,"/**
* Calls descendant font method m1 with given code and returns result of m2 with adjusted value.
* @param code input parameter for method m1
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCMD,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary),2148,2185,"/**
* Evaluates the visibility mask for a given PDF membership dictionary.
* @param ocmd PDOptionalContentMembershipDictionary object
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenAndVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenAndVisibilityExpression(org.apache.pdfbox.cos.COSArray),2211,2238,"/**
* Checks if any array or dictionary in the COSArray contains a hidden property.
* @param veArray COSArray to search
* @return true if a hidden property is found, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenNotVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenNotVisibilityExpression(org.apache.pdfbox.cos.COSArray),2269,2288,"/**
* Checks if the given COSArray has a valid mask by recursively checking its contents.
* @param veArray COSArray to check
* @return true if the array has a valid mask, false otherwise
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,createAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:createAnnotation(org.apache.pdfbox.cos.COSBase),106,168,"/**
* Creates a PDAnnotation object based on the given COSBase.
* @param base COSBase to process
* @return PDAnnotation object or null if unknown subtype
*/","* Create the correct annotation from the base COS object.
     *
     * @param base The COS object that is the annotation.
     * @return The correctly typed annotation object, never null.
     *
     * @throws IOException If the annotation type is unknown.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)",1480,1496,"/**
 * Recursively clones child entries in a PDF tree structure.
 * @param cloner utility for cloning PDF objects
 * @param parentTreeEntry root array containing child entries
 * @param objMapping map of object mappings used during cloning
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeViewerPreferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",894,936,"/**
* Copies viewer preferences from source to destination catalog.
* @param destCatalog destination PDF document catalog
* @param srcCatalog source PDF document catalog
* @param cloner utility for cloning objects
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:generateNormalAppearance(),55,155,"/**
* Draws a polygon annotation with optional border effect and line width.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),86,96,"/**
* Calculates and applies mask for the given PDRectangle.
* @param rd input rectangle data
*/","* Creates a cloudy border for a rectangular annotation.
     * The rectangle is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     * <p>
     * This can be used for Square and FreeText annotations. However, this does
     * not produce the text and the callout line for FreeTexts.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyEllipseImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyEllipseImpl(double,double,double,double)",743,935,"/**
* Adjusts the bounding box of a polygon based on its width and height.
* @param leftOrig original left boundary
* @param bottomOrig original bottom boundary
* @param rightOrig original right boundary
* @param topOrig original top boundary
*/",* Cloudy ellipse implementation.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveGlyphHeight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveGlyphHeight(org.apache.pdfbox.pdmodel.font.PDFont,int)",979,1019,"/**
* Calculates the mask value for a given character code in a PDFont.
* @param font the PDFont to use
* @param code the character code to calculate the mask for
* @return the calculated mask value or -1 if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",79,83,"/**
* Initializes tiling paint with specified pattern and transform.
* @param drawer PageDrawer instance
* @param pattern PDTilingPattern object
* @param xform AffineTransform to apply
*/","* Creates a new colored tiling Paint, i.e. one that has its own colors.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,create,"org.apache.pdfbox.rendering.TilingPaintFactory:create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",53,71,"/**
* Creates a Paint object for the given tiling pattern.
* @param pattern TilingPattern to be painted
* @param colorSpace Color space of the paint
* @param color Paint color
* @param xform Transformation matrix for painting
* @return Paint object or null if not found in cache
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearanceEntryAsContentStream,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry,boolean)",492,507,"/**
* Creates a content stream for the given appearance entry.
* @param appearanceEntry appearance data to process
* @param compress whether to compress the output
* @return PDAppearanceContentStream object
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawImage(),365,369,"/**
* Generates image mask using intermediate functions m1 and m2.
* @return Masked BufferedImage object.",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(),579,582,"/**
* Generates default image with specified level.
* @throws IOException if image generation fails
*/","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(),347,351,"/**
* Retrieves and returns a sample image mask.
* @throws IOException if an I/O error occurs during image processing.",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",120,125,"/**
* Initializes a PDF page content stream for the given document and page.
* @param document target PDDocument instance
* @param sourcePage source PDPage to append content from
*/","* Create a new PDPage content stream.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @param resetContext Tell if the graphic context should be reset. This is only relevant when
     * the appendContent parameter is set to {@link AppendMode#APPEND}. You should use this when
     * appending to an existing stream, because the existing stream may have changed graphic
     * properties (e.g. scaling, rotation).
     * @throws IOException If there is an error writing to the page contents.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayStream,"org.apache.pdfbox.multipdf.Overlay:createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",532,564,"/**
* Creates a PDF stream for an overlay object with specified transformations.
*@param page PDPage object
*@param layoutPage LayoutPage object containing overlay settings
*@param xObjectId COSName of the overlay object
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getCropBox,org.apache.pdfbox.pdmodel.PDPage:getCropBox(),442,453,"/**
* Returns the mask rectangle for the given page.
* @return PDRectangle object representing the mask bounds
*/","* A rectangle, expressed in default user space units, defining the visible region of default user space. When the
     * page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
     * 
     * @return the cropbox of the page",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeMarkInfo,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",950,966,"/**
 * Updates the destination catalog's mark with masked values from the source.
 * @param destCatalog updated document catalog
 * @param srcCatalog source document catalog
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Initializes PDInlineImage with specified coordinates and metadata.
* @param inlineImage image object
* @param x horizontal position
* @param y vertical position
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws inline image with specified bounds and metadata.
* @param inlineImage PDInlineImage object
* @param x float left coordinate
* @param y float top coordinate
* @param width float image width
* @param height float image height
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws a PDInlineImage within the current graphics context.
* @param inlineImage image to draw
* @param x image x-coordinate
* @param y image y-coordinate
* @param width image width
* @param height image height
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws a PDF inline image at the specified position with the given dimensions.
* @param inlineImage PDInlineImage object to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width image width
* @param height image height
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws a mask for the given inline image at specified position and size.
* @param inlineImage PDInlineImage to draw
* @param x x-coordinate of top-left corner
* @param y y-coordinate of top-left corner
* @param width image width
* @param height image height
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.w3c.dom.Element),130,314,"/**
 * Constructs an FDFAnnotation object from the given XML element.
 * @param element XML element containing annotation attributes
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting data from the element.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",61,106,"/**
* Decodes image data from InputStream and writes it to OutputStream.
* @param encoded InputStream containing encoded image
* @param decoded OutputStream for writing decoded image
* @param parameters COSDictionary with decoding options
* @return DecodeResult object with decoding result
*/",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,decode,"org.apache.pdfbox.filter.FlateFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",35,48,"/**
* Decodes and predicts data using the provided parameters.
* @param encoded InputStream containing compressed data
* @param decoded OutputStream for decompressed data
* @param parameters COSDictionary with decoding settings
* @param index Index parameter (purpose unclear)
* @return DecodeResult object indicating success or failure
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,decode,"org.apache.pdfbox.filter.LZWFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",64,72,"/**
* Performs decoding operation based on provided parameters.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded data
* @param parameters dictionary of decoding parameters
* @param index index value used in decoding process
* @return DecodeResult object containing result of the operation
*/",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(int),454,458,"/**
* Recursively traverses the tree starting from the given index.
* @param index current index to explore
*/","* Removes the page with the given index from the page tree.
     * @param index zero-based page index",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.pdmodel.PDPage),465,468,"/**
* Recursively calls m2 on child pages.
* @param page parent PDPage object
*/","* Removes the given page from the page tree.
     *
     * @param page The page to remove.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addPage,org.apache.pdfbox.pdmodel.PDDocument:addPage(org.apache.pdfbox.pdmodel.PDPage),240,244,"/**
 * Applies mask functionality to the specified PDPage.
 * @param page target PDF page
 */","* This will add a page to the document. This is a convenience method, that will add the page to the root of the
     * hierarchy and set the parent of the page to the root.
     * 
     * @param page The page to add to the document.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertBefore,"org.apache.pdfbox.pdmodel.PDPageTree:insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",530,552,"/**
* Inserts a new page after the specified next page in the page tree.
* @param newPage new page to be inserted
* @param nextPage page to insert after
*/","* Insert a page before another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param nextPage the page that is to be after the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertAfter,"org.apache.pdfbox.pdmodel.PDPageTree:insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",562,584,"/**
* Inserts a new page after the specified previous page.
* @param newPage new page to be inserted
* @param prevPage previous page for which the new page will follow
*/","* Insert a page after another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param prevPage the page that is to be before the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:toString(),105,109,"/**
* Returns a string representation of the function mask.
* @return function mask identifier as a string
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),635,647,"/**
* Processes PDMarkedContent object.
* @param markedContent PDMarkedContent object to process
*/","* Appends a marked-content sequence kid.
     * 
     * @param markedContent the marked-content sequence with the MCID.
     * @throws IllegalArgumentException if the mcid is negative or doesn't exist.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:toString(),68,72,"/**
* Concatenates three mask values with separators.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,fetchCMapUCS2,org.apache.pdfbox.pdmodel.font.PDType0Font:fetchCMapUCS2(),360,407,"/**
* Fetches and initializes the CMap for UCS-2 encoding.
* @throws IOException if unable to retrieve or initialize the CMap
*/",* Fetches the corresponding UCS2 CMap if the font's CMap is predefined.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",128,135,"/**
* Creates a PDImageXObject from the given byte array and document.
* @param document input PDDocument
* @param byteArray image data in byte form
* @param number mask value
* @return created PDImageXObject or null on failure
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)",190,197,"/**
* Creates a PD Image XObject from an image file with the specified mask.
* @param document PDDocument instance
* @param file File containing the image data
* @param number Mask identifier
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the TIFF file which contains a suitable CCITT compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isVisibleAnnotation,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isVisibleAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),319,332,"/**
* Checks if a PDF annotation has valid mask properties.
* @param annotation PDAnnotation object to check
* @return true if annotation is valid, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List),108,123,"/**
* Applies mask to display values.
* @param displayValues list of strings to be masked
*/","* This will set the display values - the 'Opt' key.
     * 
     * <p>
     * The Opt array specifies the list of options in the choice field either
     * as an array of text strings representing the display value 
     * or as an array of a two-element array where the
     * first element is the export value and the second the display value.
     * </p>
     * <p>
     * To set both the export and the display value use {@link #setOptions(List, List)}
     * </p> 
     *
     * @param displayValues List containing all possible options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List,java.util.List)",143,177,"/**
* Validates and processes export and display value lists.
* @param exportValues list of export values
* @param displayValues list of display values
*/","* This will set the display and export values - the 'Opt' key.
     *
     * <p>
     * This will set both, the export value and the display value
     * of the choice field. If either one of the parameters is null or an 
     * empty list is supplied the options will
     * be removed.
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the
     * number of items in the list differ.
     * </p>
     *
     * @see #setOptions(List)
     * @param exportValues List containing all possible export values.
     * @param displayValues List containing all possible display values.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSelectedOptionsIndex(java.util.List),244,259,"/**
* Sets mask values from a list of integers.
* @param values list of indices to set
*/","* This will set the indices of the selected options - the 'I' key.
     * <p>
     * This method is preferred over {@link #setValue(List)} for choice fields which
     * <ul>
     *  <li>do support multiple selections</li>
     *  <li>have export values with the same value</li>
     * </ul>
     * <p>
     * Setting the index will set the value too.
     *
     * @param values List containing the indices of all selected options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isMultiLine,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isMultiLine(),681,684,"/**
* Checks if the field instance is of type PDTextField and has m1() enabled.",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,shallComb,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:shallComb(),698,706,"/**
* Validates PDTextField instance based on specified conditions.
* @return true if validation succeeds, false otherwise
*/","* Determine if the appearance shall provide a comb output.
     * 
     * <p>
     * May be set only if the MaxLen entry is present in the text field dictionary
     * and if the Multiline, Password, and FileSelect flags are clear.
     * If set, the field shall be automatically divided into as many equally spaced positions,
     * or combs, as the value of MaxLen, and the text is laid out into those combs.
     * </p>
     * 
     * @return the comb state",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPage,org.apache.pdfbox.pdmodel.PDDocument:getPage(int),1236,1239,"/**
* Creates a PDF page with mask functionality.
* @param pageIndex index of the page to be created
*/","* Returns the page at the given 0-based index.
     * <p>
     * This method is too slow to get all the pages from a large PDF document
     * (1000 pages or more). For such documents, use the iterator of
     * {@link PDDocument#getPages()} instead.
     *
     * @param pageIndex the 0-based page index
     * @return the page at the given index.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument),42,46,"/**
* Initializes the PageExtractor with a PDDocument instance.
* @param sourceDocument the PDF document to extract pages from
*/","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float,boolean)",106,115,"/**
* Initializes PDFPageable object with PDDocument and display settings.
* @param document PDDocument instance
* @param orientation page orientation (e.g. Portrait, Landscape)
* @param showPageBorder whether to display page borders
* @param dpi dots per inch for rendering
* @param center whether to center the content on each page
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero, and optionally be centered.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,computeLabels,"org.apache.pdfbox.pdmodel.common.PDPageLabels:computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler,int)",257,287,"/**
* Generates label masks for a range of pages.
* @param handler LabelHandler instance to process labels
* @param numberOfPages total number of pages in the document
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,notifyChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:notifyChanged(),185,191,"/**
* Invokes mask operation on user profile.
* @param none
*/","* Notifies the attribute object change listeners about a change in this
     * attribute object.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",145,297,"/**
* Performs encryption operations on a PDF document.
* @param encryption PDEncryption object containing encryption parameters
* @throws IOException if decryption material is incompatible or password is invalid
*/","* Prepares everything to decrypt the document.
     *
     * Only if decryption of single objects is needed this should be called.
     *
     * @param encryption  encryption dictionary
     * @param documentIDArray  document id
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType0Font:getDisplacement(int),498,509,"/**
* Calculates and returns a Vector based on the given code.
* @param code input value used for calculation
* @return Vector object with calculated values or null if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSpaceWidth,org.apache.pdfbox.pdmodel.font.PDFont:getSpaceWidth(),553,605,"/**
* Calculates the width of a space character in the current font.
* @return Width of a space character, defaulting to 250 if calculation fails
*/","* Determines the width of the space character. This is very important for text extraction.
     *
     * @return the width of the space character",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,calculateWidth,"org.apache.pdfbox.pdmodel.interactive.PlainText$Line:calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",258,276,"/**
* Calculates the total width of a line of text.
* @param font PDFont object for rendering
* @return The total width, or 0 if no words were processed
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedCombAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",717,770,"/**
* Draws a string of characters in a field with specified quadding and font metrics.
* @param contents content stream to draw into
* @param appearanceStream appearance settings for the field
* @param font font used for drawing the text
* @throws IOException if an I/O error occurs during drawing
*/","* Generate the appearance for comb fields.
     * 
     * @param contents the content stream to write to
     * @param appearanceStream the appearance stream used
     * @param font the font to be used
     * @param fontSize the font size to be used
     * @throws IOException",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",814,868,"/**
* Adjusts font mask for a listbox field.
* @param contents PDAppearanceContentStream to draw on
* @param appearanceStream PDAppearanceStream for font metrics
* @param contentRect bounding box of the field
* @param font Font object used for rendering
* @param fontSize size of the text in points
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFixedPitch(),75,78,"/**
* Returns true if fixed pitch mode is enabled.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSerif(),95,98,"/**
* Returns true if serif font is enabled.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSymbolic(),115,118,"/**
* Returns true if symbolic flag is set.
* @param FLAG_SYMBOLIC input flag value
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isScript(),135,138,"/**
* Evaluates mask flag.
* @return true if script flag is set, false otherwise
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isNonSymbolic(),155,158,"/**
* Returns a flag indicating whether the function mask is non-symbolic.
* @return true if the function mask is non-symbolic, false otherwise
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isItalic(),175,178,"/**
* Returns true if italic formatting is enabled.","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isAllCap(),195,198,"/**
* Returns true if all caps flag is set.","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSmallCap(),215,218,"/**
* Returns true if small-cap flag is set.
* @return true if small-cap flag is enabled, false otherwise
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isForceBold(),235,238,"/**
* Returns true if bold formatting is enabled.
* @return whether bold formatting is forced on.","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFixedPitch(boolean),85,88,"/**
* Applies mask based on input flag.
* @param flag boolean toggle for masking functionality","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSerif(boolean),105,108,"/**
* Applies serif mask based on input flag.
* @param flag true to apply serif mask, false otherwise
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSymbolic(boolean),125,128,"/**
* Sets mask based on input flag.
* @param flag symbolic flag value to apply or clear mask
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setScript(boolean),145,148,"/**
* Sets flag in script data.
* @param flag boolean value to set
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setNonSymbolic(boolean),165,168,"/**
* Sets mask based on provided boolean flag.
* @param flag non-symbolic flag value
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalic(boolean),185,188,"/**
* Applies italic mask to text based on the provided flag.
* @param flag boolean indicator to enable or disable italic formatting
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAllCap(boolean),205,208,"/**
 * Applies a mask to all flags based on the provided boolean value.
 * @param flag true to enable, false to disable
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSmallCap(boolean),225,228,"/**
 * Applies small-cap mask to UI elements based on input flag.
 * @param flag true to apply mask, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setForceBold(boolean),245,248,"/**
* Applies bold formatting to the mask based on the given condition.
* @param flag boolean flag to enable/disable bold formatting
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getPattern,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor),117,128,"/**
* Retrieves a PDF pattern by color.
* @param color PDColor object identifying the pattern
* @return PDAbstractPattern object or throws IOException if not found
*/","* Returns the pattern for the given color.
     * 
     * @param color color containing a pattern name
     * @return pattern for the given color
     * @throws java.io.IOException if the pattern name was not found.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),227,269,"/**
* Processes transparency group in current page context.
* @param group PDTransparencyGroup to process
*/","* Processes a transparency group stream.
     * 
     * @param group transparency group to be processed
     * @throws IOException if the transparency group cannot be processed",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processType3Stream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",278,310,"/**
* Saves and restores graphics state while rendering text.
* @param charProc PDType3CharProc object
* @param textRenderingMatrix transformation matrix for text
*/","* Processes a Type 3 character stream.
     *
     * @param charProc Type 3 character procedure
     * @param textRenderingMatrix the Text Rendering Matrix
     * @throws IOException if there is an error reading or parsing the character content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processAnnotation,"org.apache.pdfbox.contentstream.PDFStreamEngine:processAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",319,370,"/**
* Updates annotation mask based on appearance stream.
* @param annotation PDAnnotation object
* @param appearance PDAppearanceStream object
*/","* Process the given annotation with the specified appearance stream.
     *
     * @param annotation The annotation containing the appearance stream to process.
     * @param appearance The appearance stream to process.
     * @throws IOException If there is an error reading or parsing the appearance content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",396,442,"/**
* Applies a tiling pattern with specified color and matrix.
* @param tilingPattern the PD Tiling Pattern to apply
* @param color the fill color
* @param colorSpace the color space (optional)
* @param patternMatrix the transformation matrix for the pattern
*/","* Process the given tiling pattern. Allows the pattern matrix to be overridden for custom
     * rendering.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @param patternMatrix the pattern matrix, may be overridden for custom rendering.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStream,org.apache.pdfbox.contentstream.PDFStreamEngine:processStream(org.apache.pdfbox.contentstream.PDContentStream),496,523,"/**
* Saves and restores graphics state while processing page contents.
* @param contentStream PDContentStream object containing page data
*/","* Process a content stream.
     *
     * @param contentStream the content stream
     * @throws IOException if there is an exception while processing the stream",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,prepareNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),315,337,"/**
* Generates PDAppearanceStream for a given PDAnnotationWidget.
* @param widget the annotation widget to process
* @return PDAppearanceStream object representing the processed widget
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,updateParentOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:updateParentOpenCount(int),284,305,"/**
* Updates outline node's position and size based on the given delta.
* @param delta positional adjustment value
*/","* The count parameter needs to be updated when you add, remove, open or close outline items.
     *
     * @param delta The amount to update by.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveNonRootField,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveNonRootField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",196,219,"/**
* Recursively finds and creates a PDField for the given acroForm's parent node.
* @param nonTerminalFieldsMap map of non-terminal fields
* @return created or existing PDField object, or null if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,fromDictionary,"org.apache.pdfbox.pdmodel.interactive.form.PDField:fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Creates a PDField instance with a function mask.
* @param form PDAcroForm object
* @param field COSDictionary representing the field
* @param parent PDNonTerminalField parent field
*/","* Creates a COSField subclass from the given COS field. This is for reading fields from PDFs.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created, or null if root.
     * @return a new PDField instance",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean)",121,125,"/**
* Initializes a new instance of the PDFPrintable class with specified settings.
* @param document PDDocument object to print from
* @param scaling Scaling factor for the printed output
* @param showPageBorder Flag to include page borders in the printout
* @param dpi Resolution (dots per inch) of the printed output
* @param center Flag to center the content horizontally and/or vertically
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String)",201,205,"/**
* Encrypts and loads a PDF document using a custom encryption algorithm.
* @param input PDF data to encrypt
* @param password encryption password
* @param keyStore keystore containing encryption keys
* @param alias specific key alias for decryption
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",348,363,"/**
* Loads PDDocument from file with optional encryption and streaming.
* @param file input PDF file
* @param password decryption password or null for none
* @param keyStore keystore containing certificate for encryption
* @param alias alias of certificate to use for encryption
* @param streamCacheCreateFunction function to create cache for streaming
* @return PDDocument object or throws IOException if loading fails
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead),376,379,"/**
* Loads PDDocument from RandomAccessRead.
* @param randomAccessRead input stream to read PDF data
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF new streams.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",394,399,"/**
* Wraps and calls loader's m1 method with empty parameters.
*/","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",413,417,"/**
* Decrypts and loads PDDocument from encrypted data.
* @param randomAccessRead encrypted data stream
* @param password decryption key
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     *
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",432,437,"/**
* Decrypts and loads a PDF document using provided credentials.
* @param randomAccessRead Random access read object
* @param password decryption password
* @param keyStore InputStream containing encryption keys
* @param alias key alias for decryption
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",453,457,"/**
* Wraps Loader.m1 call with provided stream cache creation function.
* @param randomAccessRead input data source
* @param password encryption key
* @param streamCacheCreateFunction factory for cached streams
*/","* Parses a PDF.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.File),80,83,"/**
* Applies masking to file contents.
* @param file input file to process
*/","* Reads the visual signature from the given file.
     *
     * @param file the file containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.InputStream),91,94,"/**
 * Processes input stream using random access read buffer.
 * @param is input stream to process
 */","* Reads the visual signature from the given input stream.
     *
     * @param is the input stream containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.graphics.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,104,"/**
* Processes a MASK operator with the given operands.
* @param operator the operator to process
* @param operands list of COSBase objects containing the mask operand and other necessary data
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processResources,"org.apache.pdfbox.multipdf.Splitter:processResources(org.apache.pdfbox.pdmodel.PDResources,java.util.Map,java.util.Map,java.util.Set)",586,620,"/**
* Recursively traverses and synchronizes form objects in the PDResources.
* @param res PDResources object to process
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasTransparency,org.apache.pdfbox.rendering.PageDrawer:hasTransparency(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1611,1635,"/**
* Recursively checks for presence of transparency group in the form.
* @param form PD Form XObject to search
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasBlendMode,"org.apache.pdfbox.rendering.PageDrawer:hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",2025,2083,"/**
* Recursively checks if a transparency group contains non-normal blend modes.
* @param group PDTransparencyGroup to check
* @param groupsDone Set of processed groups
* @return true if non-normal blend mode found, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies a font mask to the document resources and logs potential issues.
* @param font PDFont object
* @param fontSize float value of the font size
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDFormContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the current font and size, handling font stacks and type0 fonts with GSUB. 
* @param font the PDFont to set
* @param fontSize the new font size
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPageContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies font mask and sets font size.
* @param font PDFont object
* @param fontSize float font size value
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Applies font and size settings to the PDF document.
* @param font target font
* @param fontSize desired text size
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Processes a color object, generating commands for stroking colors.
* @param color the PDColor object to process
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a PDColor object and generates mask operations.
* @param color the PDColor object to process
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDFormContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Updates graphics mask parameters.
* @param state PDExtendedGraphicsState object containing current graphics settings
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPageContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state PDExtendedGraphicsState object
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPatternContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies graphics state mask to extended graphics state.
* @param state PDExtendedGraphicsState object
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a fill mask to the given PDShading object.
* @param shading PDShading object to be masked
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDFormContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a mask to the specified PDShading object.
* @param shading PDShading object to be masked
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPageContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies function mask for the given PDShading object.
* @param shading PDShading object to apply mask to
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPatternContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a fill mask to the given PDShading object.
* @param shading PDShading object to process
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Adds a mask to the PDF content stream.
* @param tag COSName representing the object being masked
* @param propertyList PDPropertyList containing relevant metadata
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Adds a mask annotation to the PDF document.
* @param tag COSName of the annotation
* @param propertyList PDPropertyList containing annotation properties
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Applies mask to specified PDF resource.
* @param tag COSName representing the resource
* @param propertyList PDPropertyList containing resource properties
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Processes a PDF property list, applying mask functionality.
* @param tag COSName object
* @param propertyList PDPropertyList object
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Sets mask properties using the provided COSName and PDPropertyList.
* @param tag COSName object
* @param propertyList PDPropertyList containing mask properties
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Applies mask to a COSName object and its properties.
* @param tag COSName object to be masked
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Updates mask properties in the specified COSName and PropertyList.
* @param tag COSName object to update
* @param propertyList PDPropertyList containing mask properties
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Applies mask operations to a COSName and PDPropertyList.
* @param tag COSName object
* @param propertyList PDPropertyList object
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Applies a mask to the specified image within the given bounds.
* @param image PDImageXObject instance
* @param x left edge of the bounding box
* @param y top edge of the bounding box
* @param width and height dimensions of the bounding box
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws a masked image object onto the page.
* @param image PDImageXObject to draw
* @param x top-left X coordinate of drawing area
* @param y top-left Y coordinate of drawing area
* @param width and height of drawing area
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws a masked image on the canvas with specified dimensions and position.
* @param image PDImageXObject to draw
* @param x left coordinate of the drawing area
* @param y top coordinate of the drawing area
* @param width and height of the drawing area
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws a PDImageXObject with the specified dimensions at the given coordinates.
* @param image the image to draw
* @param x top-left X coordinate of the image
* @param y top-left Y coordinate of the image
* @param width image width
* @param height image height
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Applies image transformation and mask to the provided image object.
* @param image PDImageXObject to be transformed
* @param matrix AffineTransform object containing transformation parameters
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Applies a mask transformation to the image using the provided matrix.
* @param image PDImageXObject to be transformed
* @param matrix Matrix object defining the transformation
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Applies image mask using provided image and transformation matrix.
* @param image the PDImageXObject to apply
* @param matrix transformation matrix for masking
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Performs image transformation and drawing on the PDImageXObject.
* @param image input image to be transformed
* @param matrix transformation matrix
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Processes and draws a PDFormXObject, throwing an error if in text mode.
* @param form PDFormXObject object to process
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDFormContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Processes and draws the given PDF form object, 
* throwing an exception if in text mode.","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPageContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Processes the form object, throwing an exception if in text mode.
* @param form PDFormXObject to process
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPatternContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Processes a PD Form XObject for drawing.
* @param form the PDFormXObject to process
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),365,424,"/**
* Updates PDDocument with user profile and permissions.
* @param document the document to update
*/","* Prepare document for encryption.
     *
     * @param document The document to encrypt.
     *
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType3Font:getDisplacement(int),149,153,"/**
* Returns vector of function masks based on input code.
* @param code function code value
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setDefaultValue(java.lang.String),217,221,"/**
* Applies mask operation to input string.
* @param value input string subject to masking
*/","* Sets the default value.
     *
     * @param value Name of option to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(java.lang.String),149,166,"/**
* Updates mask based on provided value.
* @param value input string to process
*/","* Set the selected option given its name, and try to update the visual appearance.
     * 
     * @param value Name of option to select
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",374,388,"/**
* Determines the type of operation to perform based on the source object.
* @param src object to operate on
* @param dstParent parent dictionary for operation
* @param currentPageDict current page dictionary context
* @return COSBase result of operation or original object if not applicable
*/","* Creates a clone of the source.
         *
         * @param src source dictionary or array.
         * @param dstParent for the /P entry; parameter needed because arrays don't keep a parent.
         * @param currentPageDict used to remember whether we have a page parent somewhere or not.
         * Starts with null.
         * @return a clone, or null if source is null or if there is no clone because it belongs to a
         * different page or to no page.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,retrievePageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:retrievePageNumber(),119,135,"/**
* Retrieves the mask value from the given array.
* @return The mask value, or -1 if not found
*/","* Returns the page number for this destination, regardless of whether this is a page number or
     * a reference to a page.
     *
     * @see org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem
     * @return the 0-based page number, or -1 if the destination type is unknown.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importOcProperties,org.apache.pdfbox.multipdf.LayerUtility:importOcProperties(org.apache.pdfbox.pdmodel.PDDocument),309,330,"/**
* Copies optional content properties from source to target PDF document.
* @param srcDoc source PDF document
*/","* Imports OCProperties from source document to target document so hidden layers can still be
     * hidden after import.
     *
     * @param srcDoc The source PDF document that contains the /OCProperties to be copied.
     * @throws IOException If an I/O error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",101,122,"/**
* Processes a subset of glyphs from the given TTF file.
* @param ttfSubset input glyph subset
* @param tag unknown parameter (purpose unclear)
* @param gidToCid mapping of old GIDs to new CIDs
*/",* Rebuild a font subset.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStandardStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStandardStructureType(),603,612,"/**
* Retrieves a string representation of the function mask.
*/","* Returns the standard structure type, the actual structure type is mapped
     * to in the role map.
     * 
     * @return the standard structure type",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument),1463,1466,"/**
* Calls m1 with given document and default parameters.
* @param doc PDDocument object
*/","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream),1105,1114,"/**
* Writes PDF content to the specified OutputStream.
* @param output target output stream
*/","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     * <p>
     * Other usages of this method are for experienced users only. You will usually never need it. It is useful only if
     * you are required to keep the current revision and append the changes. A typical use case is changing a signed
     * file without invalidating the signature.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Another problem with page-based modifications can occur if the page tree isn't flat: there
     * won't be an closed update path from the catalog to the page. To fix this, add code like this:
     * <pre>{@code
     * COSDictionary parent = page.getCOSObject().getCOSDictionary(COSName.PARENT);
     * while (parent != null)
     * {
     *     parent.setNeedToBeUpdated(true);
     *     parent = parent.getCOSDictionary(COSName.PARENT);
     * }
     * }</pre>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,"org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream,java.util.Set)",1142,1151,"/**
* Writes PDF objects to OutputStream using COSWriter.
* @param output OutputStream to write to
* @param objectsToWrite Set of COS dictionaries to write
*/","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. This allows to include objects even if there is no path of objects
     * that have {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only dictionaries
     * are supported; if you need to update other objects classes, then add their parent dictionary.
     * <p>
     * This method is for experienced users only. You will usually never need it. It is useful only if you are required
     * to keep the current revision and append the changes. A typical use case is changing a signed file without
     * invalidating the signature. To know which objects are getting changed, you need to have some understanding of the
     * PDF specification, and look at the saved file with an editor to verify that you are updating the correct objects.
     * You should also inspect the page and document structures of the file with PDFDebugger.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addStructure,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addStructure(org.apache.pdfbox.cos.COSBase),165,191,"/**
* Applies mask to specified PDF object, handling various types and nested structures.
* @param current the PDF object to process
*/","* Attempts to find yet unregistered streams and dictionaries in the given structure.
     *
     * @param current The object to be added for compressing.
     * @throws IOException Shall be thrown, if compressing the object failed.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getPath(int),316,338,"/**
* Renders GeneralPath based on font code.
* @param code font code
* @return rendered GeneralPath or null if failed
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:hasGlyph(int),346,363,"/**
* Checks if a font code is valid.
* @param code font code to validate
* @return true if valid, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getWidthFromFont(int),408,429,"/**
* Calculates the width of a glyph given its code.
* @param code unique glyph identifier
* @return glyph width in points or NaN if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getWidthFromFont(int),343,354,"/**
* Calculates font width from code, applying unit scaling adjustment.
* @param code unique font identifier
* @return scaled font width in EM units or throws IOException if error occurs
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPathFromOutlines(int),491,497,"/**
* Retrieves a Type2 CharString from the CFF font by code.
* @param code unique character identifier
* @return GeneralPath object or null if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:hasGlyph(int),499,503,"/**
* Checks if a mask exists based on provided code.
* @param code integer representing the mask to check
* @return true if mask exists, false otherwise
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,toTextString,org.apache.pdfbox.cos.COSStream:toTextString(),363,376,"/**
* Retrieves a mask value from an input stream.
* @return String representation of the mask or an empty string on failure
*/","* Returns the contents of the stream as a PDF ""text string"".
     * 
     * @return the PDF string representation of the stream content",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",63,139,"/**
* Decodes JBIG2 encoded data and writes the decoded image to an OutputStream.
* @param encoded InputStream containing the encoded image
* @param decoded OutputStream for the decoded image
* @param parameters COSDictionary with decoding options and settings
* @param index int identifier for the decoding process
* @param options DecodeOptions object with additional settings
* @return DecodeResult object indicating success or failure
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createCombinedContentStream,org.apache.pdfbox.multipdf.Overlay:createCombinedContentStream(org.apache.pdfbox.cos.COSBase),340,357,"/**
* Concatenates and compresses PDF content streams.
* @param contents COSBase object to process
* @return compressed COSStream or null on failure
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(),181,184,"/**
*Merges and returns input streams.","* This will get a stream that can be read from.
     * 
     * @return An input stream that can be read from.
     * @throws IOException If an IO error occurs during reading.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFont:readCIDToGIDMap(),399,419,"/**
* Reads and decodes CID-to-GID mapping from COSStream.
* @return int[] array of GIDs or null if failed
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,collectPatches,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:collectPatches(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",61,155,"/**
* Returns a list of Patch objects based on the provided AffineTransform, Matrix, and control points.
* @param xform AffineTransform object
* @param matrix Matrix object
* @param controlPoints int representing the number of control points
* @return List<Patch> containing patch objects or an empty list if not found
*/","* Create a patch list from a data stream, the returned list contains all the patches contained in the data stream.
     *
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return the obtained patch list
     * @throws IOException when something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",90,209,"/**
* Fetches a list of ShadedTriangle objects from the provided COSStream.
* @param xform AffineTransform object
* @param matrix Matrix object
* @return List<ShadedTriangle> containing the fetched triangles or an empty list if not found
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",86,155,"/**
* Creates a list of ShadedTriangles from a COSStream.
* @param xform AffineTransform object
* @param matrix Matrix object
* @return List<ShadedTriangle> or empty list if invalid input
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromStream,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromStream(org.apache.pdfbox.cos.COSStream),110,116,"/**
* Reads and returns the byte array from the given COSStream.
* @param stream input COSStream containing the data to read
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(org.apache.pdfbox.filter.DecodeOptions),919,923,"/**
* Delegates to underlying 'm1()' method to perform M2 operation.
* @param options decode options
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,rebuildTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:rebuildTrailer(java.util.Map),820,859,"/**
* Resolves xref table for the given COS dictionary.
* @param xrefTable map of xref keys to values
* @return resolved COSDictionary object or null if failed
*/","* Rebuild the trailer dictionary if startxref can't be found.
     *
     * @param xrefTable the cross reference table of the pdf
     * 
     * @return the rebuild trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectDynamically,"org.apache.pdfbox.pdfparser.COSParser:parseObjectDynamically(org.apache.pdfbox.cos.COSObjectKey,boolean)",465,496,"/**
* Fetches a compressed object or references an existing one by key.
* @param objKey unique object identifier
* @param requireExistingNotCompressedObj whether to reference existing non-compressed object if available
* @return COSBase object representing the original object or null if not found
*/","* Parse the object for the given object key.
     * 
     * @param objKey key of object to be parsed
     * @param requireExistingNotCompressedObj if <code>true</code> the object to be parsed must be defined in xref
     * (comment: null objects may be missing from xref) and it must not be a compressed object within object stream
     * (this is used to circumvent being stuck in a loop in a malicious PDF)
     * 
     * @return the parsed object (which is also added to document object)
     * 
     * @throws IOException If an IO error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXref,"org.apache.pdfbox.pdfparser.XrefParser:parseXref(org.apache.pdfbox.cos.COSDocument,long)",90,198,"/**
* Resolves cross-reference (XRef) stream in the given COSDocument.
* @param document COSDocument to process
* @param startXRefOffset starting offset of XRef stream
* @return resolved XRef trailer dictionary or null if not found
*/","* Parses cross reference tables.
     * 
     * @param document the corresponding COS document of the pdf.
     * @param startXRefOffset start offset of the first table
     * 
     * @return the trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createDescendantFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",368,386,"/**
* Creates a PDCIDFont object based on the provided dictionary and parent font.
* @param dictionary COSDictionary containing font data
* @param parent PDType0Font parent font
* @return PDCIDFont object or throws IOException for invalid font types
*/","* Creates a new PDCIDFont instance with the appropriate subclass.
     *
     * @param dictionary descendant font dictionary
     * @return a PDCIDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCG,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),2123,2146,"/**
* Evaluates a PDF property list to determine if it should be masked.
* @param propertyList the PDPropertyList instance to check
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(org.apache.pdfbox.pdmodel.interactive.annotation.AnnotationFilter),766,789,"/**
* Filters PDF annotations based on the provided filter criteria.
* @param annotationFilter filter object to apply
* @return filtered list of PDAnnotations or empty if none match
*/","* This will return a list of the annotations for this page.
     *
     * @param annotationFilter the annotation filter provided allowing to filter out specific annotations
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getReferencedObject(),92,128,"/**
* Retrieves a COSObjectable instance from the dictionary by its type.
* @return COSObjectable instance or null if not found
*/","* Gets a higher-level object for the referenced object.
     * Currently this method may return a {@link PDAnnotation},
     * a {@link PDXObject} or <code>null</code>.
     * 
     * @return a higher-level object for the referenced object",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getInReplyTo(),188,192,"/**
* Retrieves PDF annotation mask from dictionary.
* @return PDAnnotation object or null if not found
*/","* This will retrieve the annotation to which this one is ""In Reply To"" the actual relationship
     * is specified by the RT entry.
     *
     * @return the other annotation or null if there is none.
     * @throws IOException if there is an error creating the other annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getParent(),94,114,"/**
* Retrieves PDAnnotationMarkup instance from page's parent annotation.
* @return PDAnnotationMarkup object or null on error
*/","* This will retrieve the markup annotation which this popup relates to.
     *
     * @return The parent markup annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",1398,1419,"/**
* Recursively traverses the number tree map and clones its contents.
* @param cloner PDF cloning utility
* @param numberTreeAsMap Map of COSObjectables to clone
* @param objMapping Mapping of COSDictionaries for cloning
*/",* Update the Pg and Obj references to the new (merged) page.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:generateNormalAppearance(),55,96,"/**
* Draws annotation mask with custom border effect or rectangle.
* @throws IOException if I/O operation fails
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyEllipse,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle),135,145,"/**
* Computes and applies a mask function to the given rectangle.
* @param rd PDRectangle object containing dimensions
*/","* Creates a cloudy border for a Circle annotation.
     * The ellipse is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveCapHeight,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveCapHeight(org.apache.pdfbox.pdmodel.font.PDFont),965,967,"/**
* Calculates the mask value for a given PDFont object.
* @param font PDFont object to calculate the mask value for
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveDescent,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveDescent(org.apache.pdfbox.pdmodel.font.PDFont),974,976,"/**
* Calculates the mask value by subtracting y and a values from the font.
* @param font PDFont object
* @return float mask value
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(boolean),157,161,"/**
* Creates PDAppearanceContentStream based on appearance entry and compression flag.
* @param compress whether to compress the content
*/","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to.
     * 
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",80,87,"/**
* Creates a new PDPageContentStream for writing to the specified page.
* @param document PDDocument instance
* @param sourcePage PDPage to write contents to
*/","* Create a new PDPage content stream. This constructor overwrites all existing content streams
     * of this page.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",101,105,"/**
* Initializes a new page content stream from the specified source page.
* @param document PDDocument instance (required)
* @param sourcePage PDPage instance to copy from (required)
*/","* Create a new PDPage content stream. If the appendContent parameter is set to
     * {@link AppendMode#APPEND}, you may want to use
     * {@link #PDPageContentStream(PDDocument, PDPage, PDPageContentStream.AppendMode, boolean, boolean)}
     * instead, with the fifth parameter set to true.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayPage,"org.apache.pdfbox.multipdf.Overlay:overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.multipdf.PDFCloneUtility)",452,464,"/**
* Updates a PDF page's mask with the specified page and resources.
* @param page PDPage object to update
* @param layoutPage LayoutPage object for layout information
* @param array COSArray to store updated mask data
* @param cloner PDFCloneUtility instance for cloning objects
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,initPage,org.apache.pdfbox.contentstream.PDFStreamEngine:initPage(org.apache.pdfbox.pdmodel.PDPage),120,131,"/**
* Initializes and configures graphics state for the given page.
* @param page non-null PDPage object to configure
*/",* Initializes the stream engine for the given page.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBBox,org.apache.pdfbox.pdmodel.PDPage:getBBox(),381,385,"/**
* Returns the functional mask rectangle.",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBleedBox,org.apache.pdfbox.pdmodel.PDPage:getBleedBox(),479,483,"/**
* Returns the bleed box rectangle, or a default rectangle if not found.
*/","* A rectangle, expressed in default user space units, defining the region to which the contents
     * of the page should be clipped when output in a production environment. The default is the
     * CropBox.
     * 
     * @return The BleedBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTrimBox,org.apache.pdfbox.pdmodel.PDPage:getTrimBox(),508,512,"/**
* Returns trimmed box rectangle.
* @return PDRectangle object or null if not found
*/","* A rectangle, expressed in default user space units, defining the intended dimensions of the
     * finished page after trimming. The default is the CropBox.
     * 
     * @return The TrimBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getArtBox,org.apache.pdfbox.pdmodel.PDPage:getArtBox(),538,542,"/**
* Returns an ArtBox rectangle from the page dictionary or a default empty box if not found.
*/","* A rectangle, expressed in default user space units, defining the extent of the page's
     * meaningful content (including potential white space) as intended by the page's creator The
     * default is the CropBox.
     * 
     * @return The ArtBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedCropBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage),327,340,"/**
* Computes the function mask rectangle for a given page.
* @param page PDPage object containing page information
*/","* This will find the CropBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The CropBox at this level in the hierarchy.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,fillBeadRectangles,org.apache.pdfbox.text.PDFTextStripper:fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage),386,421,"/**
* Computes and stores rectangle masks for beads on the given page.
* @param page PDPage object containing bead information
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Calls overloaded m3 method with additional parameters.
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Calls extended version of m3 with default parameters.
* @param inlineImage PDInlineImage object
* @param x horizontal offset
* @param y vertical offset
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Invokes internal processing for PDInlineImage at specified coordinates.
* @param inlineImage image data
* @param x horizontal coordinate
* @param y vertical coordinate
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Invokes internal PDInlineImage processing with custom coordinates.
* @param inlineImage PDInlineImage object to process
* @param x horizontal coordinate
* @param y vertical coordinate
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.w3c.dom.Element),65,77,"/**
* Initializes an FDFAnnotationCaret object from the provided Element.
* @param element PDF element to process
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.w3c.dom.Element),66,79,"/**
* Initializes a circle FDF annotation from the given Element.
* @param element PDF object containing annotation data
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.w3c.dom.Element),63,67,"/**
* Initializes an FDF annotation file attachment with the given XML element.
* @param element XML element containing attachment details
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.w3c.dom.Element),71,100,"/**
* Creates an FDFAnnotationFreeText object from the given XML Element.
* @param element XML representation of the free text annotation
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.w3c.dom.Element),77,113,"/**
* Parses ink list from XML element, extracting gesture values.
* @param element input XML element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.w3c.dom.Element),68,155,"/**
* Creates an FDFAnnotationLine object from an Element.
* @param element XML node containing annotation line data
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.w3c.dom.Element),74,101,"/**
* Initializes FDFAnnotationLink from an Element.
* @param element input XML element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.w3c.dom.Element),73,85,"/**
* Initializes FDFAnnotationPolygon from given Element.
* @param element XML element containing polygon data
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.w3c.dom.Element),74,81,"/**
* Initializes an FDFAnnotationPolyline object from a given Element.
* @param element the input Element to process
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.w3c.dom.Element),63,67,"/**
* Creates an instance of FDFAnnotationSound from an Element.
* @param element XML element containing sound annotation details
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.w3c.dom.Element),67,80,"/**
* Initializes a FDFAnnotationSquare object from an Element.
* @param element input XML element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.w3c.dom.Element),84,135,"/**
* Initializes a FDFAnnotationStamp object from an XFDF Element.
* @param element XFDF Element containing stamp data
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.w3c.dom.Element),65,84,"/**
* Creates a FDFAnnotationText object from the given PDF Element.
* @param element the PDF Element to parse
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.w3c.dom.Element),57,77,"/**
* Parses FDF annotation text markup from an XML element.
* @param element XML element containing 'coords' attribute
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,113,"/**
* Convenience wrapper to invoke m1 with default decode options.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded data
* @param parameters dictionary of parameters (if any)
* @param index index value (if required by the algorithm)
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(int),668,671,"/**
* Applies mask to page number.
* @param pageNumber integer value of page being masked
*/","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     * 
     * @param pageNumber 0 based index to page number.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(org.apache.pdfbox.pdmodel.PDPage),656,659,"/**
* Applies mask to PDPage.
* @param page The page to be masked
*/","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     *
     * @param page The page to remove from the document.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,importPage,org.apache.pdfbox.pdmodel.PDDocument:importPage(org.apache.pdfbox.pdmodel.PDPage),698,716,"/**
* Creates a new PDPage with the same content as the input page, applying mask functionality.
* @param page input page to be masked
* @return the newly created masked page
*/","* This will import and copy the contents from another location. Currently the content stream is
     * stored in a scratch file. The scratch file is associated with the document. If you are adding
     * a page to this document from another document and want to copy the contents to this
     * document's scratch file then use this method otherwise just use the {@link #addPage addPage()}
     * method.
     * <p>
     * Unlike {@link #addPage addPage()}, this method creates a new PDPage object. If your page has
     * annotations, and if these link to pages not in the target document, then the target document
     * might become huge. What you need to do is to delete page references of such annotations. See
     * <a href=""http://stackoverflow.com/a/35477351/535646"">here</a> for how to do this.
     * <p>
     * Inherited (global) resources are ignored because these can contain resources not needed for
     * this page which could bloat your document, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-28"">PDFBOX-28</a> and related issues.
     * If you need them, call <code>importedPage.setResources(page.getResources());</code>
     * <p>
     * This method should only be used to import a page from a loaded document, not from a generated
     * document because these can contain unfinished parts, e.g. font subsetting information.
     *
     * @param page The page to import.
     * @return The page that was imported.
     *
     * @throws IOException If there is an error copying the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createTemplate(org.apache.pdfbox.pdmodel.PDPage),83,89,"/**
* Applies mask to PDPage and saves modified structure.
* @param page input PDF page
*/","* Creates a PDDocument and adds the page parameter to it and keeps this as a template in the PDF template
     * Structure.
     *
     * @param page the page to be added
     * @throws IOException if the document could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",107,111,"/**
* Creates an image XObject from a given byte array and PDDocument.
* @param document PDDocument object
* @param byteArray byte array containing the image data
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",170,174,"/**
* Creates a PDImageXObject from a file.
* @param document PDDocument object
* @param file input image file
*/","* Creates a new CCITT Fax compressed image XObject from the first image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage)}
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the  TIFF file which contains a suitable CCITT compressed image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.lang.String),374,383,"/**
* Applies mask operation on given string value.
*@param value input string to be masked
*/","* Set the selected value of this field, and try to update the visual appearance.
     *
     * @param value The name of the selected item.
     * @throws IOException if the value could not be set",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,updateSelectedOptionsIndex,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:updateSelectedOptionsIndex(java.util.List,java.util.List)",474,486,"/**
* Masks and sorts list of string values based on corresponding options.
* @param values list of values to be processed
* @param options list of options for masking and sorting
*/",* Update the 'I' key based on values set.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSize,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",195,208,"/**
* Initializes page mask settings from the first page of the PDF document.
* @param document PD Document object
* @param page Page number to use (must be at least 1)
*/","* Each page of document can be different sizes. This method calculates the page size based on
     * the page media box.
     * 
     * @param document
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IllegalArgumentException if the page argument is lower than 0.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,findDestinationPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument),228,274,"/**
* Retrieves a PDF page based on the document's destination.
* @param doc PDDocument object
* @return PDPage object or null if not found
*/","* This method will attempt to find the page in this PDF document that this outline points to.
     * If the outline does not point to anything then this method will return null. If the outline
     * is an action that is not a GoTo action then this method will also return null.
     *
     * @param doc The document to get the page from.
     *
     * @return The page that this outline will go to when activated or null if it does not point to
     * anything.
     * @throws IOException If there is an error when trying to find the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument),50,53,"/**
* Initializes a new instance of PDFPageable from a PDDocument.","* Creates a new PDFPageable.
     *
     * @param document the document to print",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation)",61,64,"/**
* Constructs a new PDFPageable instance from a PDDocument with specified orientation.
* @param document the underlying PDDocument
* @param orientation page orientation (e.g. Portrait, Landscape)","* Creates a new PDFPageable with the given page orientation.
     *
     * @param document the document to print
     * @param orientation page orientation policy",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean)",74,77,"/**
* Constructs a new PDFPageable instance with default zoom and page number.
* @param document PDDocument instance
* @param orientation Orientation to display pages in
* @param showPageBorder whether to display border around pages
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)",89,93,"/**
* Constructs a new PDFPageable instance with default zoom.
* @param document PDDocument to render pages from
* @param orientation page layout orientation
* @param showPageBorder flag to display page borders
* @param dpi dots per inch for rendering
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndicesByLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndicesByLabels(),208,214,"/**
* Creates a map of labels to page indices.
*/","* Returns a mapping with computed page labels as keys and corresponding
     * 0-based page indices as values. The returned map will contain at most as
     * much entries as the document has pages.
     * 
     * <p>
     * <strong>NOTE:</strong> If the document contains duplicate page labels,
     * the returned map will contain <em>less</em> entries than the document has
     * pages. The page index returned in this case is the <em>highest</em> index
     * among all pages sharing the same label.
     * </p>
     * 
     * @return a mapping from labels to 0-based page indices.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getLabelsByPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getLabelsByPageIndices(),223,235,"/**
* Retrieves and populates an array of page labels based on document metadata.
* @return Array of page labels or null if not populated
*/","* Returns a mapping with 0-based page indices as keys and corresponding
     * page labels as values as an array. The array will have exactly as much
     * entries as the document has pages.
     * 
     * @return an array mapping from 0-based page indices to labels.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",156,162,"/**
* Updates mask based on changes in COSBase objects.
* @param oldBase previous COSBase instance
* @param newBase updated COSBase instance
*/","* Notifies the attribute object change listeners if the attribute is changed.
     * 
     * @param oldBase old value
     * @param newBase new value",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,showGlyph,"org.apache.pdfbox.text.LegacyPDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",160,314,"/**
* Updates the text rendering matrix for a given character.
* @param textRenderingMatrix current text rendering matrix
* @param font PDFont object
* @param code Unicode code point of the character
* @param displacement Vector representing character position and size
*/","* Called when a glyph is to be processed. The heuristic calculations here were originally
     * written by Ben Litchfield for PDFStreamEngine.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getLines,"org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",159,237,"/**
* Calculates and formats text into lines based on given width.
* @param font PDFont object
* @param fontSize float representing font size
* @param width float representing maximum line width
* @return List<Line> containing formatted text lines
*/","* Break the paragraph into individual lines.
         *
         * @param font the font used for rendering the text.
         * @param fontSize the fontSize used for rendering the text.
         * @param width the width of the box holding the content.
         * @return the individual lines.
         * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getSymbolicFlag,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getSymbolicFlag(),260,268,"/**
* Returns functional mask value if m1 is not null.
* @return Boolean value or null if m1 is null
*/","* Returns the value of the symbolic flag, allowing for the fact that the result may be indeterminate.
     * 
     * @return the value of the isSymbolic flag form the font descriptor",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFallbackFontName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),231,307,"/**
* Generates font mask string based on PDFontDescriptor.
* @param fontDescriptor input descriptor
* @return font mask string (e.g. ""Courier-Bold"") or default (""Times-Roman"")
*/",* Attempts to find a good fallback based on the font descriptor.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.type1.Type1Font),110,127,"/**
* Creates a PDFontDescriptor for the given Type1 font.
* @param type1 Type1Font object to process
* @return PDFontDescriptor instance or null on failure
*/","* Returns a PDFontDescriptor for the given PFB.
     * 
     * @throws IOException if the font bounding box isn't available",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.afm.FontMetrics),134,153,"/**
* Creates a PDFontDescriptor with specified metrics and flags.
* @param metrics FontMetrics object containing font data
*/","* Returns a PDFontDescriptor for the given AFM. Used only for Standard 14 fonts.
     *
     * @param metrics AFM",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,createFontDescriptor,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont),182,279,"/**
* Creates a PDFontDescriptor from the given TrueTypeFont.
* @param ttf the font to process
* @return PDFontDescriptor object or null if an error occurs
*/",* Creates a new font descriptor dictionary for the given TTF.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getPaint,org.apache.pdfbox.rendering.PageDrawer:getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor),349,402,"/**
* Creates a Paint object based on the provided color.
* @param color PDColor to process
* @return Paint object or null if not applicable
*/","* Returns an AWT paint for the given PDColor.
     * 
     * @param color The color to get a paint for. This can be an actual color or a pattern.
     * @return an AWT paint for the given PDColor
     * 
     * @throws IOException if the AWT paint could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,intersectShadingBBox,"org.apache.pdfbox.rendering.PageDrawer:intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",865,883,"/**
* Applies a mask to the given area based on the provided color pattern.
* @param color PDColor object with pattern data
* @param area Area object to apply the mask to
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),169,172,"/**
* Masks the specified transparency group with default values.
* @param form PDTransparencyGroup object to mask
*/","* Shows a transparency group from the content stream.
     *
     * @param form transparency group (form) XObject
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processSoftMask,org.apache.pdfbox.contentstream.PDFStreamEngine:processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),199,219,"/**
* Applies transparency group mask to the graphics context.
* @param group TransparencyGroup object
*/","* Processes a soft mask transparency group stream.
     * 
     * @param group transparency group used for the soft mask
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showType3Glyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",867,875,"/**
* Processes a single character in the PDF page content.
* @param textRenderingMatrix matrix for rendering characters
* @param font font to use for character processing
* @param code unique character identifier
* @param displacement vector representing character position
*/","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showAnnotation,org.apache.pdfbox.contentstream.PDFStreamEngine:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),450,457,"/**
* Processes annotation mask data.
* @param annotation PDAnnotation object
*/","* Shows the given annotation.
     *
     * @param annotation An annotation on the current page.
     * @throws IOException If an error occurred reading the annotation",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",380,384,"/**
* Calls nested method m1() and passes result as additional argument.
*/","* Process the given tiling pattern.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showForm,org.apache.pdfbox.contentstream.PDFStreamEngine:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),180,191,"/**
* Process form x-object and apply mask if necessary.
* @param form the PDFormXObject to process
*/","* Shows a form from the content stream.
     *
     * @param form form XObject
     * @throws IOException if the form cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,switchNodeCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:switchNodeCount(),264,269,"/**
* Updates mask counters based on previous operations.
* @param none
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,handleAnnotations,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:handleAnnotations(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.PDResources,java.util.List,java.util.List,java.util.Map)",115,144,"/**
* Processes annotations in the acroForm and associates them with fields.
* @param acroForm the AcroForm to process
* @param acroFormResources resources for the AcroForm
* @param fields list of fields to update
* @param annotations list of annotations to process
* @param nonTerminalFieldsMap map of non-terminal fields
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFields(),381,402,"/**
* Retrieves the list of PDF fields from the dictionary.
* @return List of PDField objects
*/","* This will return all of the documents root fields.
     * 
     * A field might have children that are fields (non-terminal field) or does not
     * have children which are fields (terminal fields).
     * 
     * The fields within an AcroForm are organized in a tree structure. The documents root fields 
     * might either be terminal fields, non-terminal fields or a mixture of both. Non-terminal fields
     * mark branches which contents can be retrieved using {@link PDNonTerminalField#getChildren()}.
     * 
     * @return A list of the documents root fields, never null. If there are no fields then this
     * method returns an empty list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,findKid,"org.apache.pdfbox.pdmodel.interactive.form.PDField:findKid(java.lang.String[],int)",331,352,"/**
* Recursively fetches a nested PDField by name and index.
* @param name array of field names
* @param nameIndex current field name index
* @return PDField object or null if not found
*/","* This will find one of the child elements. The name array are the components of the name to search down the tree
     * of names. The nameIndex is where to start in that array. This method is called recursively until it finds the end
     * point based on the name array.
     * 
     * @param name An array that picks the path to the field.
     * @param nameIndex The index into the array.
     * @return The field at the endpoint or null if none is found.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getChildren(),125,153,"/**
* Retrieves child fields from the PDF structure.
* @return list of PDField objects
*/","* Returns this field's children. These may be either terminal or non-terminal fields.
     *
     * @return the list of child fields. Be aware that this list is <i>not</i> backed by the
     * children of the field, so adding or deleting has no effect on the PDF document until you call
     * {@link #setChildren(java.util.List) setChildren()} with the modified list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPrintable,org.apache.pdfbox.printing.PDFPageable:getPrintable(int),235,246,"/**
* Creates a Printable object for the specified page.
* @param i page index (0-based)
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float)",105,108,"/**
* Initializes a new instance of PDFPrintable with default print settings.
* @param document the PDDocument to be printed
* @param scaling the scaling factor for printing
* @param showPageBorder whether to display page borders during printing
* @param dpi the dots per inch resolution
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String)",182,185,"/**
* Decrypts and loads PDF document using given password.
* @param input encrypted PDF data
* @param password decryption key
* @throws IOException if loading fails
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",270,274,"/**
* Loads PDDocument from specified file using provided stream cache creation function.
* @param file input PDF file
* @param streamCacheCreateFunction function to create stream cache
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String)",288,291,"/**
* Loads PDDocument from file with optional password protection.
* @param file input file
* @param password encryption key (null for no protection)
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",307,312,"/**
* Wraps Loader.m1 to create a PDDocument from the specified file and password.
* @param file PDF file to load
* @param password optional password for encrypted files
* @param streamCacheCreateFunction callback function for creating stream caches
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",327,331,"/**
* Loads encrypted PDF document using a custom keystore.
* @param file input PDF file
* @param password decryption password for the PDF
* @param keyStore custom keystore containing encryption keys
* @param alias keystore alias for decryption key
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties),111,114,"/**
* Recursively processes visible signature properties.
* @param visSignatureProperties PDVisibleSigProperties object
*/","* Reads the visual signature from the given visual signature properties
     *
     * @param visSignatureProperties the <code>PDVisibleSigProperties</code> object containing the
     * visual signature
     *
     * @throws IOException when something went wrong during parsing",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:generateNormalAppearance(),51,326,"/**
* Draws an annotation border with optional text and background.
* @param annotation PDAnnotationLine object
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts Color object to PDF color and invokes recursive method. 
* @param color the input color to convert
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Writes a color mask operation to the output stream.
* @param color PDColor object containing color data
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Processes a color object, potentially updating the stroking color space and adding color values.
* @param color PDColor object to process
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Writes a color mask to the output stream.
* @param color color object containing color data
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Processes a PDF color object, potentially updating stroking color space and adding color values or pattern data.
* @param color PDColor object to process
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color object to PDF color and processes it.
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a PDF color and generates mask commands.
* @param color PDColor object to process
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color object, generating PDF operators as needed.
* @param color PDColor object to process
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes color mask operation for the given color.
* @param color PDColor object to process
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color object, emitting PDF operators as needed.
* @param color PDColor object to process
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setOpacity,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",271,281,"/**
* Applies a mask to the graphics stream with specified opacity.
* @param contentStream PDAppearanceContentStream object
* @param opacity float value between 0 and 1 representing transparency level
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCircles,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCircles(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",219,261,"/**
* Draws a rounded rectangle with masks for the provided annotation.
* @param annotation text to be masked
* @param contentStream appearance stream to draw on
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawRightArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawRightArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",458,497,"/**
* Applies a mask to the annotation text in the content stream.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream object
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawComment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawComment(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",499,547,"/**
* Applies a mask to the annotation text using the provided appearance content stream.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream object
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createArrayClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createArrayClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",390,411,"/**
* Recursively transforms COSBase objects in the source array to PDF objects.
* @param src source array of COSBase objects
* @param dstParent parent dictionary for transformed objects
* @return transformed COSArray or null if any object fails transformation
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",165,228,"/**
* Creates a PDF FormXObject from a source page, applying transformations and filtering.
* @param sourceDoc the source PDDocument
* @param page the source PDPage
* @return the resulting PDFormXObject
*/","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param page the page in the source PDF document to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.cos.COSDocument),1449,1453,"/**
* Recursively processes COSDocument and its nested PDFs.
* @param doc the root document to process
*/","* This will write the pdf document.
     *
     * @throws IOException If an error occurs while generating the data.
     * @param doc The document to write.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1044,1060,"/**
* Saves the document to the specified output stream with optional compression.
* @param output OutputStream to write to
* @param compressParameters Compress parameters (null for no compression)
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,<init>,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",74,90,"/**
* Initializes compression pool for the given PDDocument and parameters.
* @param document PDDocument to compress
* @param parameters CompressParameters or null for default settings
*/","* <p>
     * Constructs an object that can be used to compress the contents of a given {@link PDDocument}. It provides the
     * means to:
     * </p>
     * <ul>
     * <li>Compress the COSStructure of the document, by streaming {@link COSBase}s to compressed
     * {@link COSWriterObjectStream}s</li>
     * </ul>
     *
     * @param document The document, that shall be compressed.
     * @param parameters The configuration of the compression operations, that shall be applied.
     * @throws IOException Shall be thrown if a compression operation failed.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addElements,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addElements(java.util.Iterator),193,224,"/**
* Recursively processes elements in the COSBase iterator, applying masks.
* @param elements COSBase iterator to process
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getNormalizedPath(int),340,344,"/**
* Generates a GeneralPath representing a function mask based on the given code.
* @param code int value to generate function mask for
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPath(int),438,453,"/**
* Retrieves and constructs a GeneralPath object based on the provided code.
* @param code unique identifier for path construction
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getStringOrStream,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getStringOrStream(org.apache.pdfbox.cos.COSBase),936,954,"/**
* Extracts and formats content from a COSBase object.
* @param base input COSBase object
*/","* Get a text or text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getValue(),234,261,"/**
* Retrieves a mask object based on the field's value.
* @throws IOException if an unknown field type is encountered
*/","* This will get the value for the field. The return type will either be: <ul>
     * <li>String: for Checkboxes, Radio Button, Textfields</li>
     * <li>List&lt;String&gt;: for a Choice Field</li>
     * </ul>
     * @return The value of the field.
     * @throws IOException If there is an error getting the value.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:getRichText(),743,758,"/**
* Retrieves the function mask value as a string.
* @return Function mask string or null if not found
*/","* This will set the rich text that is associated with this field.
     *
     * @return The rich text XHTML stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getBefore(),75,90,"/**
* Retrieves the function mask from the dictionary.
* @return function mask as a string or null on failure
*/","* This will get the javascript that is executed before the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getAfter(),107,122,"/**
* Retrieves the function mask as a string or stream.
* @return Function mask as a string, stream, or null if not found
*/","* This will get the javascript that is executed after the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,getAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:getAction(),77,92,"/**
* Retrieves a string value from the JavaScript object.
* @return string representation or null on failure
*/",* @return The Javascript Code.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getRichContents(),134,149,"/**
* Retrieves the function mask value from the document.
* @return Function mask string or null if not found
*/","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getStringOrStream,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getStringOrStream(org.apache.pdfbox.cos.COSBase),258,269,"/**
* Returns a mask value from the given COSBase object.
* @param base COSBase instance to fetch mask from
*/","* Get a text as text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",141,146,"/**
* Wraps the default decode call with a convenience overload.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded results
* @param parameters dictionary of decoding options and settings
* @param index current decoding step or index
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createLayoutPage,org.apache.pdfbox.multipdf.Overlay:createLayoutPage(org.apache.pdfbox.pdmodel.PDPage),316,326,"/**
* Creates a LayoutPage object from the given PDF page.
* @param page the input PDF page
* @return LayoutPage object or null on IOException
*/","* Create a LayoutPage object from given PDPage object.
     *
     * @return
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,toByteArray,org.apache.pdfbox.pdmodel.common.PDStream:toByteArray(),400,406,"/**
 * Reads and returns the function mask data from an input stream.
 * @throws IOException if reading fails
 */","* This will copy the stream into a byte array.
     * 
     * @return The byte array of the filteredStream.
     * @throws IOException if an I/O error occurs.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSamples,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:getSamples(),379,418,"/**
* Initializes and returns a pre-computed 2D array for function evaluation.
* @return 2D array containing function values or null if initialization failed
*/","* Get all sample values of this function.
         *
         * @return an array with all samples.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,loadICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:loadICCProfile(),164,224,"/**
* Initializes color profile from stream and sets up AWT color space.
* @throws IOException if initialization fails
*/","* Load the ICC profile, or init alternateColorSpace color space.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,initJPXValues,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:initJPXValues(),730,757,"/**
* Initializes JPX mask and color space from input stream.
* @throws IOException if reading fails
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(),913,917,"/**
* Calls m1() and returns its m2() result as an InputStream.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",247,266,"/**
* Computes the bounding box of a shape given an affine transform and matrix.
* @param xform AffineTransform object
* @param matrix Matrix object
* @return Rectangle2D bounding box or null if not found
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",51,58,"/**
* Initializes PatchMeshesShadingContext with provided parameters.
* @param shading PDMeshBasedShadingType to use
* @param colorModel Color model for rendering
* @param xform AffineTransform for mesh transformation
* @param matrix Matrix for mesh transformation
* @param deviceBounds Device bounds for pixel table creation
* @param controlPoints Number of control points for patching
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,58,"/**
* Initializes a Type4ShadingContext with provided shading data.
* @param shading PDShadingType4 object
* @param cm ColorModel
* @param xform AffineTransform
* @param matrix Matrix
* @param deviceBounds Rectangle representing device bounds
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,56,"/**
* Creates a Type 5 shading context.
* @param shading PDShadingType5 object
* @param cm ColorModel
* @param xform AffineTransform
* @param matrix Matrix
* @param deviceBounds bounding box of the device
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromPacket,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromPacket(org.apache.pdfbox.cos.COSArray),91,105,"/**
* Extracts and concatenates stream contents from COSArray.
* @param cosArray input PDF object array
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,dereferenceCOSObject,org.apache.pdfbox.pdfparser.COSParser:dereferenceCOSObject(org.apache.pdfbox.cos.COSObject),428,444,"/**
* Parses and fetches COSBase object with specified mask key.
* @param obj COSObject to parse
* @return Parsed COSBase object or null on failure
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,retrieveTrailer,org.apache.pdfbox.pdfparser.COSParser:retrieveTrailer(),241,295,"/**
* Reconstructs the COSDictionary trailer, optionally rebuilding it if necessary.
* @return reconstructed COSDictionary object or null on failure
*/","* Read the trailer information and provide a COSDictionary containing the trailer information.
     * 
     * @return a COSDictionary containing the trailer information
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shouldSkipAnnotation,org.apache.pdfbox.rendering.PageDrawer:shouldSkipAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1587,1609,"/**
* Evaluates a PDAnnotation for mask functionality based on render destination and annotation type.
* @param annotation PDAnnotation object to evaluate
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showForm,org.apache.pdfbox.rendering.PageDrawer:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1640,1654,"/**
* Overridden method to handle PDFormXObject; 
* skips processing if m2() returns true, otherwise
* calls superclass's implementation and restores line path.",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginMarkedContentSequence,"org.apache.pdfbox.rendering.PageDrawer:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",2088,2104,"/**
* Updates the hidden OCG count based on the given tag and properties.
* @param tag COSName of the element to check
* @param properties COSDictionary containing additional data
*/",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(),752,755,"/**
* Retrieves all PDAnnotations.
*/","* This will return a list of the annotations for this page.
     *
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:generateNormalAppearance(),54,119,"/**
* Draws a border around an annotation circle with optional cloudy effect.
* @throws IOException if I/O error occurs during drawing
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(),141,144,"/**
* Returns a PDAppearanceContentStream instance with default settings.
*/","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to. It will be
     * uncompressed.
     *
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,appendFormAsLayer,"org.apache.pdfbox.multipdf.LayerUtility:appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",248,287,"/**
* Creates an optional content group for the given page and form.
* @param targetPage page to associate with the group
* @param form form to include in the group
* @param transform transformation to apply to the form
* @param layerName unique name for the group
* @return created PDOptionalContentGroup instance","* Places the given form over the existing content of the indicated page (like an overlay).
     * The form is enveloped in a marked content section to indicate that it's part of an
     * optional content group (OCG), here used as a layer. This optional group is returned and
     * can be enabled and disabled through methods on {@link PDOptionalContentProperties}.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before calling this method to make
     * sure that the graphics state is reset.
     *
     * @param targetPage the target page
     * @param form the form to place
     * @param transform the transformation matrix that controls the placement of your form. You'll
     * need this if your page has a crop box different than the media box, or if these have negative
     * coordinates, or if you want to scale or adjust your form.
     * @param layerName the name for the layer/OCG to produce
     * @return the optional content group that was generated for the form usage
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,processPages,org.apache.pdfbox.multipdf.Overlay:processPages(org.apache.pdfbox.pdmodel.PDDocument),390,429,"/**
* Modifies PDF document by applying a mask to each page.
* @param document target PDDocument instance
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processPage,org.apache.pdfbox.contentstream.PDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),152,161,"/**
* Processes a PDPage, applying masks and setting processing flag.
* @param page PDPage object to process
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws IOException if there is an error accessing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processChildStream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)",478,488,"/**
* Resets the current page and flushes content stream.
* @param contentStream PDContentStream to process
* @param page PDPage object
*/","* Process a child stream of the given page. Cannot be used with {@link #processPage(PDPage)}.
     *
     * @param contentStream the child content stream
     * @param page the page to be used for processing
     * @throws IOException if there is an exception while processing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPageFormat,org.apache.pdfbox.printing.PDFPageable:getPageFormat(int),177,233,"/**
* Calculates the page format for a given page index.
* @param pageIndex unique page identifier
* @return PageFormat object describing the page's dimensions and orientation
*/","* {@inheritDoc}
     * 
     * Returns the actual physical size of the pages in the PDF file. May not fit the local printer.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.w3c.dom.Element),63,67,"/**
* Initializes an FDF annotation highlight object from an Element.
* @param element input Element to initialize with
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.w3c.dom.Element),63,67,"/**
* Initializes a new instance of FDFAnnotationSquiggly with the given Element.
* @param element PDF element to associate with this annotation.","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.w3c.dom.Element),63,67,"/**
* Initializes an FDF annotation strikeout object from the given PDF element.
* @param element the underlying PDF element to process.","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.w3c.dom.Element),63,67,"/**
* Initializes an underline annotation with subtype.
* @param element PDF element to annotate
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.util.List),401,424,"/**
* Validates and applies mask to list of values.
* @param values List of strings to validate
*/","* Sets the entry ""V"" to the given values. Requires {@link #isMultiSelect()} to be true.
     * 
     * @param values the list of values
     * @throws IOException if the appearance couldn't be generated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",101,105,"/**
* Initializes PDVisibleSignDesigner with document and image stream.
* @param document PDDocument instance
* @param imageStream input stream containing the image data
* @param page page number to process
*/","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param imageStream Image as a stream.
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException If we can't read, flush, or can't close stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",150,154,"/**
* Initializes a new PDVisibleSignDesigner instance with given document and image.
* @param document PDDocument instance
* @param image BufferedImage to be used for design
* @param page index of the page in the document
*/","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromRandomAccessRead,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead,int)",177,185,"/**
* Applies mask to PDF document.
* @param documentSource source of the PDF document
* @param page target page number for masking
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,format,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:format(),144,190,"/**
* Renders text content with masking functionality.
* @throws IOException if rendering fails
*/","* Format the text block.
     * 
     * @throws IOException if there is an error writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateFontSize,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",890,958,"/**
* Calculates minimum font size based on content rectangle and font properties.
* @param font PDFont object
* @param contentRect PDRectangle containing text content
* @return minimum required font size or original font size (if not applicable)","* My ""not so great"" method for calculating the fontsize. It does not work superb, but it
     * handles ok.
     * 
     * @return the calculated font-size
     * @throws IOException If there is an error getting the font information.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDSimpleFont:readEncoding(),86,138,"/**
* Initializes encoding based on PDF dictionary.
* @throws IOException if an error occurs
*/","* Reads the Encoding from the Font dictionary or the embedded or substituted font file.
     * Must be called at the end of any subclass constructors.
     *
     * @throws IOException if the font file could not be read",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isFontSymbolic(),197,253,"/**
* Determines the mask for a font based on its properties and encoding.
* @return Boolean value indicating whether to apply the mask or not
*/","* Internal implementation of isSymbolic, allowing for the fact that the result may be indeterminate.
     * 
     * @return true if isSymbolic",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",314,335,"/**
* Resolves TrueTypeFont for given baseFont or PDFontDescriptor.
* @param baseFont base font identifier
* @param fontDescriptor PDFontDescriptor object
* @return FontMapping with resolved TrueTypeFont or last resort font
*/","* Finds a TrueType font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param fontDescriptor FontDescriptor",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontBoxFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",343,364,"/**
* Resolves font mapping by base font and PDFontDescriptor.
* @param baseFont base font name
* @param fontDescriptor PDFontDescriptor object
* @return FontMapping object or null if not resolved
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null. This allows
     * any font to be substituted with a PFB, TTF or OTF.
     *
     * @param fontDescriptor the FontDescriptor of the font to find",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",56,103,"/**
* Embeds a Type1 font into the PDF document.
* @param doc the PDF document
* @param dict the COS dictionary for the font
* @param pfbStream the input stream of the PFB file
* @param encoding the font encoding (optional)
*/","* This will load a PFB to be embedded into a document.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param dict The Font dictionary to write to.
     * @param pfbStream The pfb input.
     * @throws IOException If there is an error loading the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),85,98,"/**
* Initializes a PDFont object with the specified base font.
* @param baseFont name of the font to use
*/",* Constructor for Standard 14.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFont:loadFontDescriptor(),116,132,"/**
* Retrieves a PDF font descriptor, either from the COS dictionary or the AFM standard 14. 
* @return PDFontDescriptor object or null if not found",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",70,114,"/**
* Embeds TrueType font into PDF document.
* @param document the PDF document to embed into
* @param dict COSDictionary for font descriptor
* @param ttf TrueTypeFont object to embed
* @param embedSubset whether to embed subset or full font
*/",* Creates a new TrueType font for embedding.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,buildFontFile2,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:buildFontFile2(java.io.InputStream),116,135,"/**
* Embeds and processes TrueType font from input stream.
* @param ttfStream input stream containing TTF data
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showGlyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",828,839,"/**
* Dispatches mask operation based on font type.
* @param textRenderingMatrix transformation matrix
* @param font PDFont object
* @param code glyph code point
* @param displacement vector offset
*/","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,92,"/**
* Processes the FUNC_MASK operator, handling recursion and form XObjects.
* @param operator PDF operator
* @param arguments list of COSBase objects (must contain exactly one operand)
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,92,"/**
* Processes a FUNC_MASK operator with arguments.
* @param operator the operator
* @param arguments list of COSBase objects
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,openNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:openNode(),243,250,"/**
* Conditionally calls m2() based on the result of m1().
* @see m1()
* @see m2()
*/","* This will set this node to be open when it is shown in the viewer. By default, when a new node is created it will
     * be closed. This will do nothing if the node is already open.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,closeNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:closeNode(),256,262,"/**
 * Executes task m2 if condition m1 is true.","* Close this node.
     *",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroFormDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",131,147,"/**
* Updates and configures AcroForm for the given signature field.
* @param acroForm PDAcroForm object to update
* @param signatureField related PDSignatureField object
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:exportFDF(),151,172,"/**
* Creates FDFDocument with populated catalog and fields.
* @return fully populated FDFDocument object
*/","* This will export all FDF form data.
     *
     * @return An FDF document used to export the document.
     * @throws IOException If there is an error when exporting the document.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,xfaIsDynamic,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:xfaIsDynamic(),574,577,"/**
* Combines results of m1 and m2.m3 using logical AND operator.","* This will tell if the AcroForm is a dynamic XFA form.
     *
     * @return true if the AcroForm is a dynamic XFA form",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,enqueueKids,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField),108,129,"/**
* Recursively processes a PDField node and its children.
* @param node PDField node to process
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:exportFDF(),100,116,"/**
* Creates and populates an FDFField object.
*@return fully constructed FDFField
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean)",90,93,"/**
* Initializes PDFPrintable with basic settings.
* @param document PDDocument to print
* @param scaling Scaling factor for printing
* @param showPageBorder flag to display page borders
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(byte[]),165,168,"/**
* Loads PDF document from byte array.
* @param input byte array representing PDF data
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,"org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File,java.lang.String)",230,234,"/**
* Loads a PDDocument from a file with optional encryption.
* @param file input PDF file
* @param password encryption key (may be null)
* @return PDDocument object or null on failure
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File, String)} instead",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(java.io.File),252,255,"/**
* Loads PDDocument from specified file using custom loader.
* @param file input file to load
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to a PDF color and processes it.
* @param color input Color object
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to a PDF color and processes it.
* @param color Color object to convert
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts a Color object to a PDF color and calls the overloaded method.
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Converts Color object to PDF color and recursively processes it.
* @param color input color to convert
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:generateNormalAppearance(),47,132,"/**
* Draws an annotation ink with a border and fills it with the specified color.
* @throws IOException if drawing fails
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:generateNormalAppearance(),46,143,"/**
* Draws a strikethrough annotation on the PDF page.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:generateNormalAppearance(),46,142,"/**
* Draws a PDAnnotationUnderline object with custom border and dash pattern.
* @param annotation PDAnnotationUnderline instance to draw
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color object to PDF-compatible color and delegates processing.
* @param color Color object to convert
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color object to PDF color and calls self.
* @param color the Color object to convert
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color object to PDF color and calls self recursively. 
* @param color Color object to convert
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts Color object to PDF color and passes it to another method.
* @param color Color object to convert
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:generateNormalAppearance(),49,100,"/**
* Draws a mask for the annotation.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,initializeAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",369,434,"/**
* Applies mask to PDAnnotationWidget based on appearance characteristics.
* @param widget annotation widget
* @param appearanceCharacteristics appearance dictionary
* @param appearanceStream appearance stream
*/","* Initialize the content of the appearance stream.
     * 
     * Get settings like border style, border width and colors to be used to draw a rectangle and background color 
     * around the widget
     * 
     * @param widget the field widget
     * @param appearanceCharacteristics the appearance characteristics dictionary from the widget or
     * null
     * @param appearanceStream the appearance stream to be used
     * @throws IOException in case we can't write to the appearance stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,writeTo,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:writeTo(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",290,303,"/**
* Applies font mask to appearance content stream.
* @param contents PDAppearanceContentStream instance
* @param zeroFontSize fallback font size when m1() returns 0.0f
*/","* Write font name, font size and color from the /DA string to the given content stream.
     *
     * @param contents The content stream.
     * @param zeroFontSize The calculated font size to use if the /DA string has a size 0
     * (autosize). Otherwise the size from the /DA string is used.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:generateNormalAppearance(),53,212,"/**
* Calculates and draws annotation highlight with border.
* @param m1() must return PDAnnotationHighlight object
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:generateNormalAppearance(),57,169,"/**
* Updates annotation appearance with mask and border.
* @param annotation PDAnnotationSquiggly object to update
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",144,148,"/**
* Extracts form XObject from specified PDDocument and page number.
* @param sourceDoc input PDF document
* @param pageNumber page index (0-based)
* @return extracted PDFormXObject or null if not found
*/","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param pageNumber the 0-based page number of the page to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,getVisualSignatureAsStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument),157,165,"/**
* Converts a COSDocument to an InputStream representation.
* @param visualSignature input COS document
* @return InputStream containing the converted data or null on failure
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream),975,978,"/**
 * Writes compressed data to the specified output stream using default compression parameters.
 * @param output target output stream
 */","* This will save the document to an output stream.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     *
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",994,1007,"/**
* Overwrites an existing file with compressed data.
* @param file File object
* @param compressParameters Compress parameters
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param file The file to save as.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBodyCompressed,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBodyCompressed(org.apache.pdfbox.cos.COSDocument),457,525,"/**
* Processes trailer dictionary and encrypt section of COSDocument.
* @param document input COSDocument
*/","* This will write the compressed body of the document.
     *
     * @param document The document to write the body for.
     * @throws IOException If there is an error writing the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getNormalizedPath(int),455,489,"/**
* Creates a GeneralPath for the given font code.
* @param code unique font identifier
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRichContents(),866,869,"/**
* Returns the function mask for the given COS name.
* @return string representation of the function mask
*/","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:writeXML(java.io.Writer),117,158,"/**
* Writes a single field to the output stream.
* @param output Writer instance
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getRichTextValue(),218,221,"/**
* Generates a mask string using COSName constants.
* @return generated mask string
*/","* Get the fields rich text value.
     * 
     * @return the rich text value string",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,org.apache.pdfbox.multipdf.Overlay:getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument),305,308,"/**
* Applies mask to PDDocument and returns resulting LayoutPage.
* @param doc input PDF document
*/","* Create a LayoutPage object from the first page of the given document.
     *
     * @param doc
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPages,org.apache.pdfbox.multipdf.Overlay:getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument),328,338,"/**
* Creates a map of page IDs to LayoutPage objects from the provided PDF document.
* @param doc PDDocument object containing pages to process
* @return Map of page IDs (keys) to LayoutPage objects (values)
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<init>(org.apache.pdfbox.cos.COSBase),48,54,"/**
* Parses COS stream into PDFunctionType4 object.
* @param functionStream COSBase object containing the stream to parse
*/","* Constructor.
     *
     * @param functionStream The function stream.
     * @throws IOException if an I/O error occurs while reading the function",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readLookupData,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readLookupData(),256,278,"/**
* Loads and initializes the lookup data from the array.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpol,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpol(int[],int)",299,343,"/**
* Recursively generates a float array by interpolating between input values.
* @param coord current coordinate index
* @param step current step index
* @return interpolated float array
*/","* Do a linear interpolation if the two coordinates can be known, or
         * call itself recursively twice.
         *
         * @param coord coord partially set coordinate (not set from step
         * upwards); gets fully filled in the last call (""leaf""), where it is
         * used to get the correct sample
         * @param step between 0 (first call) and dimension - 1
         * @return interpolated result sample",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.cos.COSArray),90,97,"/**
* Initializes a PDICCBased object from an ICC color profile COS array.
* @param iccArray ICC color profile data
*/","* Creates a new ICC color space using the PDF array.
     *
     * @param iccArray the ICC stream object.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getBitsPerComponent(),848,860,"/**
* Calculates and returns the function mask value based on conditions.
* @return integer function mask value
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getColorSpace(),868,911,"/**
* Retrieves and initializes the PDF color space.
* @throws IOException if color space cannot be determined
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getHeight(),945,950,"/**
* Calculates and returns a function mask value.
* @return integer representing the calculated function mask
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getWidth(),958,963,"/**
* Calculates and returns the functional mask based on width.
* @return an integer representing the functional mask value.",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Constructs a Type6 Shading Context from the given parameters.
* @param shading PDShadingType6 object
* @param colorModel ColorModel instance
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix for scaling and rotation
* @param deviceBounds Rectangle representing device bounds
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Initializes Type7 Shading Context with specified parameters.
* @param shading PDShadingType7 object
* @param colorModel Color model for rendering
* @param xform Affine transform for coordinate mapping
* @param matrix Matrix for geometric transformations
* @param deviceBounds Device bounds for rendering
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates PaintContext for Type4 shading.
* @param cm color model
* @return ShadingPaintContext or default black if error occurs
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for Type5 shading.
* @param cm ColorModel
* @return PaintContext or default context if error occurs
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytes,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytes(),74,86,"/**
* Retrieves the mask data based on the underlying data type.
* @return a byte array containing the mask data or an empty array if not found
*/","* Get the XFA content as byte array.
     * 
     * The XFA is either a stream containing the entire XFA resource or an array specifying individual packets that
     * together make up the XFA resource.
     * 
     * A packet is a pair of a string and stream. The string contains the name of the XML element and the stream
     * contains the complete text of this XML element. Each packet represents a complete XML element, with the exception
     * of the first and last packet, which specify begin and end tags for the xdp:xdp element. [IS0 32000-1:2008:
     * 12.7.8]
     * 
     * @return the XFA content
     * @throws IOException if the XFA content could not be created",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showAnnotation,org.apache.pdfbox.rendering.PageDrawer:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1543,1585,"/**
* Processes PDAnnotation with custom rendering logic.
* @param annotation PDAnnotation object to process
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateStructParentEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",1504,1523,"/**
* Updates annotation parent offsets in the given page.
* @param page PDPage object to modify
* @param structParentOffset offset value to add to parent IDs
*/","* Update the StructParents and StructParent values in a PDPage.
     *
     * @param page the new page
     * @param structParentOffset the offset which should be applied",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneStructureTree,org.apache.pdfbox.multipdf.Splitter:cloneStructureTree(org.apache.pdfbox.pdmodel.PDDocument),194,250,"/**
* Merges structure tree and page trees from source document into the given destination document.
* @param destinationDocument the target PDDocument
*/","* Clone the structure tree from the source to the current destination document. This must be
     * called after all pages are processed.
     *
     * @param destinationDocument
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processAnnotations,org.apache.pdfbox.multipdf.Splitter:processAnnotations(org.apache.pdfbox.pdmodel.PDPage),820,965,"/**
* Clones and updates annotations on the given page.
* @param imported PDPage object to update
*/","* Clone all annotations because of changes possibly made, and because the structure tree is
     * cloned.
     *
     * @param imported
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignature,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",114,129,"/**
* Creates a PDSignature for the given PDPage and signer name.
* @param pdSignatureField signature field to update
* @param page PDF page to add signature to
* @param signerName name of signatory (optional)
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,buildPagesWidgetsMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:buildPagesWidgetsMap(java.util.List,org.apache.pdfbox.pdmodel.PDPageTree)",771,816,"/**
* Builds a map of COS dictionaries to sets of corresponding widget dictionaries.
* @param fields list of PD fields
* @param pages list of PD pages
* @return map of page annotations or empty if missing page references found
*/","* Build a map of page => set of widgets to be flattened
     *
     * @param fields a list of fields to be flattened
     * @param pages the page tree
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.LegacyPDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Initializes page properties and translation matrix from the provided PDPage.
* @param page PDPage object containing page dimensions
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.w3c.dom.Element),74,230,"/**
* Parses FDF XML element and populates the FDFDictionary object.
*/","* This will create an FDF dictionary from an XFDF XML document.
     *
     * @param fdfXML The XML document that contains the XFDF data.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),236,305,"/**
* Applies FDF import mask to specified FDFField.
* @param fdfField FDFField object containing import data
*/","* This will import a fdf field from a fdf document.
     * 
     * @param fdfField The fdf field to import.
     * @throws IOException If there is an error importing the data for this field.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.io.InputStream,int)",83,91,"/**
* Initializes PDVisibleSignDesigner with document source and image stream.
* @param documentSource RandomAccessRead to document data
* @param imageStream InputStream containing visible signature image
* @param page current page number
*/","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param imageStream Image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.awt.image.BufferedImage,int)",133,141,"/**
* Initializes the PDVisibleSignDesigner with a document source, image, and page number.
* @param documentSource RandomAccessRead to calculate page size from
* @param image BufferedImage for visible signature image
* @param page int representing the current page number
*/","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isSymbolic(),174,190,"/**
* Determines whether the mask is symbolic or not.
* @return True if symbolic, false otherwise
*/","* Returns true if the font is a symbolic (that is, it does not use the Adobe Standard Roman character set).
     * 
     * @return true if the font is a symbolic",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",170,180,"/**
* Initializes a Type 1 font from an embedded PFB stream.
* @param doc the parent PDDocument
* @param pfbIn input stream containing the font data
* @param encoding optional character encoding for the font
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @param encoding encoding to be used for the font
     * @throws IOException if the font could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),64,68,"/**
* Initializes simple font with specified base font.
* @param baseFont base font to build upon
*/",* Constructor for Standard 14.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.cos.COSDictionary),105,114,"/**
* Initializes a PDFont object from the given COSDictionary.
* @param fontDictionary dictionary containing font metadata
*/","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",71,96,"/**
* Creates a PDCIDFontType2Embedder instance, setting up the CID font and its descriptor.
* @param document target PDF document
* @param dict COS dictionary for this font
* @param ttf TrueType font to embed
* @param embedSubset whether to embed subset or not
* @param parent Type 0 font that contains this CID font
* @param vertical whether the font is vertical or not
*/","* Creates a new TrueType font embedder for the given TTF as a PDCIDFontType2.
     *
     * @param document parent document
     * @param dict font dictionary
     * @param ttf True Type Font
     * @param parent parent Type 0 font
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",54,71,"/**
* Embeds a TrueType font into the given PDDocument.
* @param document target PDF document
* @param dict COS dictionary to store font metadata
* @param ttf TrueType font object
* @param encoding font encoding scheme
*/","* Creates a new TrueType font embedder for the given TTF as a PDTrueTypeFont.
     *
     * @param document The parent document
     * @param dict Font dictionary
     * @param ttf TrueType font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,isDynamicXfa,org.apache.pdfbox.multipdf.PDFMergerUtility:isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),1531,1534,"/**
* Checks if PDAcroForm has valid mask functionality.
* @param acroForm PDAcroForm object to check
* @return true if mask is enabled, false otherwise
*/","* Test for dynamic XFA content.
     * 
     * @param acroForm the AcroForm
     * @return true if there is a dynamic XFA form.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),76,83,"/**
* Initializes FieldIterator by enqueuing children of all PDFields in the given PDAcroForm. 
* @param form PDAcroForm containing fields to process
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling)",78,81,"/**
* Creates a PDF printable object from a PDDocument and scaling settings.
* @param document the underlying PDDocument
* @param scaling  the scaling factor to apply
*/","* Creates a new PDFPrintable with the given page scaling.
     *
     * @param document the document to print
     * @param scaling page scaling policy",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDF,org.apache.pdfbox.multipdf.Overlay:loadPDF(java.lang.String),274,277,"/**
* Loads and returns a PDF document instance.
* @param pdfName path to the PDF file
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File),211,215,"/**
 * Loads and returns a PDDocument instance from a file.
 * @param file input PDF file to load
 * @return loaded PDDocument object or null on failure
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File)} instead",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromFile,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromFile(java.lang.String,int)",168,175,"/**
* Loads and processes PDF file with mask functionality.
* @param filename path to PDF file
* @param page     page number for processing
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",487,640,"/**
* Creates and writes a mask for the given PDAnnotationWidget to the specified OutputStream.
* @param widget the annotation widget
* @param appearanceStream the appearance stream
* @param output the output stream
*/",* Generate and insert text content and clipping around it.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,buildPDF,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),76,155,"/**
* Generates PDF mask with signature field and returns it as an input stream.
* @param properties PDVisibleSignDesigner object containing design parameters
*/","* Build a PDF with a visible signature step by step, and return it as a stream.
     *
     * @param properties properties to be used for the creation
     * @return InputStream stream containing the pdf holding the visible signature
     * @throws IOException if the PDF could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File),955,958,"/**
* Writes data to the specified file using default compression parameters.
* @param file target file
*/","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param file The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1024,1027,"/**
* Wraps file-based call to m1 with a String parameter.
* @param fileName path to the file
* @param compressParameters compression settings
*/","* Save the document to a file using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param fileName The file to save as.
     * @param compressParameters The parameters for the document's compression.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDocument,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDocument(org.apache.pdfbox.cos.COSDocument),1293,1348,"/**
* Performs mask-related operations on a COSDocument.
* @param doc the document to process
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:writeXML(java.io.Writer),239,264,"/**
* Outputs PDF metadata and field specifications to the given Writer.
* @param output target output stream
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,create,org.apache.pdfbox.pdmodel.common.function.PDFunction:create(org.apache.pdfbox.cos.COSBase),115,147,"/**
* Converts a COSBase to a PDF Function object based on its type.
* @param function COSBase representation of the function
* @return PDFunction object or throws IOException if invalid
*/","* Create the correct PD Model function based on the COS base function.
     *
     * @param function The COS function dictionary.
     *
     * @return The PDModel Function object, never null.
     *
     * @throws IOException If we are unable to create the PDFunction object.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readColorTable(),283,306,"/**
* Initializes and populates the color table based on lookup data.
* @throws IOException if an I/O error occurs
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpolate,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpolate(),284,287,"/**
* Creates float array mask using input values and initial value. 
* @return float array of size numberOfInputValues
*/","* Calculate the interpolation.
         *
         * @return interpolated result sample",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",108,132,"/**
* Creates a PDICCBased mask from the given COSArray and resources.
* @param iccArray ICC color profile array
* @param resources PDF resources
* @return PDICCBased mask or null if not created
*/","* Creates a new ICC color space using the PDF array, optionally using a resource cache.
     *
     * @param iccArray the ICC stream object.
     * @param resources resources to use as cache, or null for no caching.
     * @return an ICC color space.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",79,116,"/**
* Creates PDImageXObject for the given image using predictor encoder if possible.
* @param document PDDocument context
* @param image BufferedImage to encode
* @return PDImageXObject or null if creation fails
*/","* Creates a new lossless encoded image XObject from a BufferedImage.
     * <p>
     * <u>New for advanced users from 2.0.12 on:</u><br>
     * If you created your image with a non standard ICC colorspace, it will be
     * preserved. (If you load images in java using ImageIO then no need to read
     * this segment) However a new colorspace will be created for each image. So
     * if you create a PDF with several such images, consider replacing the
     * colorspace with a common object to save space. This is done with
     * {@link PDImageXObject#getColorSpace()} and
     * {@link PDImageXObject#setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) PDImageXObject.setColorSpace()}
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new image XObject
     * @throws IOException if something goes wrong",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawImage(),519,523,"/**
* Generates and returns a BufferedImage representing the function mask.
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,extractMatte,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),538,556,"/**
* Extracts and processes image mask data.
* @param softMask image object containing mask information
*/","* Extract the matte color from a softmask.
     * 
     * @param softMask
     * @return the matte color.
     * @throws IOException if the color conversion fails.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Convenience wrapper to perform operation m3 with default parameters.
* @param image input image object
* @param x and y coordinates for operation
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildTransparencyMaskFromIndexedData,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",257,302,"/**
* Applies mask to a PDDocument using the provided image and state.
* @param doc PDDocument instance
* @param image PDImageXObject to apply as a mask
* @param state PNGConverterState containing masking parameters
* @return masked PDDocument or null on failure",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a PaintContext for Type6Shading.
* @throws IOException if an I/O error occurs
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates and returns a PaintContext instance for type-7 shading.
* @param cm color model
* @return PaintContext object or default context if error occurs
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getDocument,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getDocument(),128,132,"/**
* Converts internal data to PDF document using XMLUtil.
* @return Document object or null on failure
*/","* Get the XFA content as W3C document.
     * 
     * @see #getBytes()
     * 
     * @return the XFA content
     * 
     * @throws IOException if something went wrong when reading the XFA content.
     *",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawPage,"org.apache.pdfbox.rendering.PageDrawer:drawPage(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.common.PDRectangle)",268,294,"/**
* Applies mask to the graphics context, scaling and clipping based on page size.
* @param pageSize PDRectangle representing page dimensions
*/","* Draws the page to the requested context.
     * 
     * @param g The graphics context to draw onto.
     * @param pageSize The size of the page to draw.
     * @throws IOException If there is an IO error while drawing the page.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPage,org.apache.pdfbox.multipdf.Splitter:processPage(org.apache.pdfbox.pdmodel.PDPage),792,811,"/**
* Processes a PDPage for masking, importing resources and removing /B entries.
* @param page the input PDPage to process
*/","* Interface to start processing a new page.
     *
     * @param page The page that is about to get processed.
     *
     * @throws IOException If there is an error creating the new document.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.PDFMarkedContentExtractor:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Initializes page transform based on provided PDPage object.
* @param page PDPage object containing page dimensions and rotation
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPage,org.apache.pdfbox.text.PDFTextStripper:processPage(org.apache.pdfbox.pdmodel.PDPage),340,384,"/**
* Processes a PDPage based on current page and bookmark ranges.
* @param page the input PDF page
*/","* This will process the contents of a page.
     *
     * @param page The page to process.
     *
     * @throws IOException If there is an error processing the page.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.w3c.dom.Element),60,65,"/**
* Constructs an FDFCatalog instance from an XML Element.
* @param element XML Element containing catalog data
*/","* This will create an FDF catalog from an XFDF XML document.
     *
     * @param element The XML document that contains the XFDF data.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),75,98,"/**
* Matches FDF fields with PDF children based on field names.
* @param fdfField FDF field to match
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),98,139,"/**
* Updates PDAnnotationWidgets with field flags and clear flag.
* @param fdfField FDFField object containing flags to update
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",157,160,"/**
* Creates a new PDType1Font instance from a PFB stream.
* @param doc the parent document
* @param pfbIn input stream containing font data
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @throws IOException if the font could not be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),104,148,"/**
* Initializes a Type 1 font from the specified base font.
* @param baseFont the font to create a Type 1 representation of
*/","* Creates a Type 1 standard 14 font for embedding.
     *
     * @param baseFont One of the standard 14 PostScript names, e.g. {@link FontName#HELVETICA_BOLD}.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,78,"/**
* Initializes a simple font with the given dictionary.
* @param fontDictionary COS dictionary containing font data
*/","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.cos.COSDictionary),71,100,"/**
* Initializes PDType0Font from a COSDictionary object.
* @param fontDictionary input dictionary containing font data
*/","* Constructor for reading a Type0 font from a PDF file.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @throws IOException if the descendant font is missing.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)",114,142,"/**
* Initializes a PDType0 font from a TrueType font, optionally embedding or closing it.
* @param document parent PDDocument object
* @param ttf TrueType font to initialize from
* @param embedSubset whether to embed the subset of the TTF
* @param closeTTF whether to close the underlying data source after initialization
* @param vertical whether to enable vertical substitutions in the font
*/","* Private. Creates a new PDType0Font font for embedding.
     *
     * @param document
     * @param ttf
     * @param embedSubset
     * @param closeTTF whether to close the ttf parameter after embedding. Must be true when the ttf
     * parameter was created in the load() method, false when the ttf parameter was passed to the
     * load() method.
     * @param vertical whether to enable vertical substitutions.
     * @throws IOException",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",156,175,"/**
 * Initializes a PDTrueTypeFont object from a TrueType font, embedding it into a PDDocument.
 * @param document PDDocument instance
 * @param ttf TrueTypeFont object
 * @param encoding Encoding scheme
 * @param closeTTF whether to close the TTF resource after initialization
 */",* Creates a new TrueType font for embedding.,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,iterator,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:iterator(),58,62,"/**
* Returns an iterator over fields in the acroForm.
*/","* Returns an iterator which walks all fields in the tree, in order.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,70,"/**
* Constructs a PDF printable object from a PDDocument instance.
* @param document PDDocument instance to wrap
*/","* Creates a new PDFPrintable.
     *
     * @param document the document to print",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDFs,org.apache.pdfbox.multipdf.Overlay:loadPDFs(),205,272,"/**
* Initializes input and overlay documents, and calculates total overlay pages.
* @throws IOException on document loading errors
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.io.InputStream,int)",65,73,"/**
* Initializes a PDVisibleSignDesigner with image data from file and stream.
* @param filename path to PDF file
* @param imageStream input stream containing visible sign image
* @param page page number for which to set signature image
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param imageStream image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.awt.image.BufferedImage,int)",115,123,"/**
* Initializes a Visible Sign Designer with an image from file.
* @param filename path to the image file
* @param image image data to display
* @param page page number for calculation purposes
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,buildSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:buildSignature(),44,49,"/**
* Builds PDF template by executing a series of operations.
*/","* start building of visible signature
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String),936,939,"/**
 * Wraps file-based operation by delegating to overloaded version with File parameter.
 * @param fileName name of file to process
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,optimizedMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:optimizedMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",375,433,"/**
 * Creates a new PDF document by cloning pages from source documents and compressing the output.
 * @param streamCacheCreateFunction function to create a stream cache
 * @param compressParameters compression parameters for the output
 */",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:writeXML(java.io.Writer),74,78,"/**
* Serializes FDF dictionary to writer.
* @param output Writer instance
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:eval(float[]),61,126,"/**
* Evaluates a type-3 PDFunction for the given input and returns the result.
* @param input single input value
* @return array containing the evaluated function result or throws IOException if not found
*/",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",91,108,"/**
* Initializes a PDDeviceN object from the provided COS array and resources.
* @param deviceN COS array containing device N attributes
* @param resources PDResources object for color conversion cache initialization
*/","* Creates a new DeviceN color space from the given COS array.
     * 
     * @param deviceN an array containing the color space information
     * @param resources resources, can be null.
     * 
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getTintTransform(),563,570,"/**
* Returns the tint transform function.
*/","* This will get the tint transform function.
     *
     * @return The tint transform function.
     *
     * @throws IOException if there is an error creating the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",85,98,"/**
* Initializes PDSeparation object from COSArray and resources.
* @param separation COSArray containing color space and tint transform
* @param resources PDResources for creating color spaces and functions
*/","* Creates a new Separation color space from a PDF color space array.
     * @param separation an array containing all separation information.
     * @param resources resources, can be null.
     * @throws IOException if the color space or the function could not be created.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunction(),337,348,"/**
* Retrieves the function object from the PDF document.
* @return The function object or null if not initialized
*/","* This will return the function used to convert the color values.
     *
     * @return the function
     * @throws java.io.IOException if we were not able to create the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunctionsArray,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunctionsArray(),356,382,"/**
* Initializes and returns the array of functions.
* @return Array of PDFunction objects
*/","* Provide the function(s) of the shading dictionary as array.
     *
     * @return an array containing the function(s).
     * @throws IOException if we were unable to create a function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getTransferFunction,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getTransferFunction(),187,198,"/**
* Returns the transfer function, loading it from COS if not already initialized. 
* @throws IOException if there's an issue reading the COS data
*/","* Returns the transfer function.
     * 
     * @return the transfer function
     * @throws IOException If we are unable to create the PDFunction object.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applyTransferFunction,"org.apache.pdfbox.rendering.PageDrawer:applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",1397,1484,"/**
* Applies transfer function to image and returns resulting BufferedImage.
* @param image input image
* @param transfer COSBase object representing transfer function
* @return processed BufferedImage or null if failed
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",88,96,"/**
* Initializes a PDIndexed color space object from an indexed array and resources.
* @param indexedArray COSArray containing the index map
* @param resources PDResources for the color space
*/","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @param resources the resources, can be null. Allows to use its cache for the colorspace.
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:eval(float[]),424,467,"/**
* Performs input data processing and interpolation.
* @param input float array to process
* @return processed float array or throws IOException on error
*/",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildImageObject,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",329,407,"/**
* Creates a PDImageXObject from the given document and PNGConverterState.
* @param document PDDocument object
* @param state PNGConverterState object containing image metadata
* @return PDImageXObject or null if creation fails
*/",* Build the base image object from the IDATs and profile information,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByExtension,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",213,250,"/**
* Creates a PDImageXObject from the specified file and document.
* @param file input image file
* @param doc PDDocument object
* @return PDImageXObject or null if creation fails
*/","* Create a PDImageXObject from an image file. The file format is determined by the file name
     * suffix. The following suffixes are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This is
     * a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByContent,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",273,317,"/**
* Creates a PDImageXObject from the specified file for the given PDDocument.
* @param file input image file
* @param doc target PDDocument
* @return created PDImageXObject or null if unsupported
* @throws IOException on file access errors
*/","* Create a PDImageXObject from an image file. The file format is determined by the file
     * content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This
     * is a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureImage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",185,190,"/**
* Creates and embeds a visible mask from the provided image into the PDDocument.
* @param template PDDocument to modify
* @param image BufferedImage to use for masking
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(java.awt.Rectangle,int)",467,517,"/**
* Generates a masked image for the specified region and subsampling level.
* @param region rectangle defining the image area
* @param subsampling subsampling factor (0-3)
*/",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Invokes an internal processing routine on the provided image.","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Invokes private methods 1 and 2 on the PDImageXObject with specified coordinates.
* @param image PDImageXObject instance
* @param x x-coordinate
* @param y y-coordinate
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with default parameters.
* @param image PDImageXObject instance
* @param x X-coordinate
* @param y Y-coordinate
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Invokes variant of m3 with additional parameters.
* @param image PDImageXObject to process
* @param x horizontal coordinate
* @param y vertical coordinate
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",260,348,"/**
* Draws a PDF page into an image.
* @param pageIndex unique page identifier
* @param scale scaling factor for the image
* @param imageType desired image type (e.g. ARGB, RGB)
* @param destination rendering destination (e.g. screen, printer)
* @return BufferedImage object containing the drawn page
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @param destination controlling visibility of optional content groups
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",423,441,"/**
* Draws a PDF page at the specified index with graphics and scaling.
* @param pageIndex unique page identifier
* @param graphics Graphics2D context for drawing
* @param scaleX horizontal scale factor
* @param scaleY vertical scale factor
* @param destination RenderDestination to draw on
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Known problems:
     * <ul>
     * <li>rendering of PDF files with transparencies is not supported on Ubuntu, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4581"">PDFBOX-4581</a> and
     * <a href=""https://bugs.openjdk.java.net/browse/JDK-6689349"">JDK-6689349</a>. Rendering will
     * not abort, but the pages will be rendered incorrectly.</li>
     * <li>Clipping the Graphics2D will not work properly, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4583"">PDFBOX-4583</a>.</li>
     * </ul>
     * If you encounter these problems, then you should render into an image by using the
     * {@link #renderImage(int) renderImage} methods.
     * 
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @param destination controlling visibility of optional content groups
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPages,org.apache.pdfbox.multipdf.Splitter:processPages(),676,697,"/**
* Iterates over pages in a document, applying mask to relevant pages.
* @throws IOException on input/output error
*/","* Interface method to handle the start of the page processing.
     *
     * @throws IOException If an IO error occurs.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPages,org.apache.pdfbox.text.PDFTextStripper:processPages(org.apache.pdfbox.pdmodel.PDPageTree),263,308,"/**
* Updates bookmark information and processes pages in the PDF document.
* @param pages PDPageTree object containing all pages
*/","* This will process all of the pages and the text that is in them.
     *
     * @param pages The pages object in the document.
     *
     * @throws IOException If there is an error parsing the text.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.w3c.dom.Document),94,105,"/**
* Imports an XFDF document into an FDFDocument.
* @param doc XFDF document to import
*/","* This will create an FDF document from an XFDF XML document.
     *
     * @param doc The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getDefaultFont,org.apache.pdfbox.contentstream.PDFStreamEngine:getDefaultFont(),137,144,"/**
* Returns the default font used for masking functionality. 
* If not initialized, initializes Helvetica as the default font.
*/","* Provide standard 14 Helvetica font as default if there isn't any font available.  
     * @return the default font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,verifyOrCreateDefaults,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:verifyOrCreateDefaults(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),70,114,"/**
* Initializes the Adobe-specific settings for the given AcroForm.
* @param acroForm target PDAcroForm object
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFont,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFont(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),245,259,"/**
* Returns the FontBox font for a given base name, synchronizing access to generic fonts as needed.
* @param baseName the base name of the font
* @return FontBoxFont object or null if not found
*/","* Returns the mapped font for the specified Standard 14 font. The mapped font is cached.
     *
     * @param baseName name of the standard 14 font
     * @return the mapped font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDefaultFont,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDefaultFont(),82,89,"/**
* Returns the default font used for masking.
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.cos.COSDictionary),103,152,"/**
* Creates a TrueType font object from the provided COS dictionary.
* @param fontDictionary COS dictionary containing font metadata
*/","* Creates a new TrueType font from a Font dictionary.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,140,"/**
* Initializes a PDType1CFont object from a COSDictionary.
* @param fontDictionary the COSDictionary containing font data
*/","* Constructor.
     * 
     * @param fontDictionary the corresponding dictionary
     * @throws IOException it something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),189,282,"/**
* Parses a Type1 font from the provided COSDictionary.
* @param fontDictionary COS dictionary containing font information
*/","* Creates a Type 1 font from a Font dictionary in a PDF.
     * 
     * @param fontDictionary font dictionary.
     * @throws IOException if there was an error initializing the font.
     * @throws IllegalArgumentException if /FontFile3 was used.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",82,87,"/**
 * Initializes a PDF Type 3 font from a COS dictionary and cache.
 * @param fontDictionary COS dictionary containing font metadata
 * @param resourceCache Resource cache for font resources
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param resourceCache Resource cache, can be null.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,boolean,boolean)",199,204,"/**
* Creates a PDType0Font object from the given PDDocument and font data.
* @param doc PDDocument instance
* @param randomAccessRead RandomAccessRead to font data
* @param embedSubset whether to embed subset fonts
* @param vertical whether to create a vertical font
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead source of a TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @param vertical whether to enable vertical substitutions.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",216,220,"/**
* Creates a PDF Type 0 font from the given TTF font.
* @param doc PDDocument instance
* @param ttf TrueTypeFont object to convert
* @param embedSubset whether to embed subset of font in PDF
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",272,276,"/**
* Creates a PDF Type 0 font from the given TTF font and PDDocument.
* @param doc PDDocument instance
* @param ttf TrueTypeFont to convert
* @param embedSubset whether to embed subset of font in PDF
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",227,231,"/**
* Creates a PDTrueTypeFont object from given parameters.
* @param doc PDDocument instance
* @param ttf TrueType font to use
* @return PDTrueTypeFont object
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.
     * </p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A true type font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",247,251,"/**
* Creates a PDTrueTypeFont object from the given PDDocument, 
* RandomAccessReader and Encoding.","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.
     * </p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead the source of the TTF.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureFields,org.apache.pdfbox.pdmodel.PDDocument:getSignatureFields(),866,881,"/**
* Retrieves a list of signature fields from the PDF document.
* @return List of PDSignatureField objects
*/","* Retrieve all signature fields from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(),339,348,"/**
* Applies mask to terminal fields.
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of all fields.
     * 
     * @throws IOException if the appearance streams could not be refreshed",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldIterator,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldIterator(),419,422,"/**
* Returns an iterator over filtered PDF fields.
*/","* Returns an iterator which walks all fields in the field tree, in order.
     * 
     * @return an iterator which walks all fields in the field tree",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCacheFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCacheFields(boolean),442,457,"/**
* Initializes or clears the field cache.
* @param cache true to populate, false to clear
*/","* This will tell this form to cache the fields into a Map structure
     * for fast access via the getField method.  The default is false.  You would
     * want this to be false if you were changing the COSDictionary behind the scenes,
     * otherwise setting this to true is acceptable.
     *
     * @param cache A boolean telling if we should cache the fields.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getField(java.lang.String),475,493,"/**
* Retrieves a PDField instance by fully qualified name from cache or data source.
* @param fullyQualifiedName unique identifier for the PDField
* @return PDField object or null if not found in cache or data source
*/","* This will get a field by name, possibly using the cache if setCache is true.
     *
     * @param fullyQualifiedName The name of the field to get.
     * @return The field with that name of null if one was not found.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlay,org.apache.pdfbox.multipdf.Overlay:overlay(java.util.Map),114,134,"/**
* Creates a PDDocument with masked pages based on the provided overlay map.
* @param specificPageOverlayMap Map of page IDs to overlay paths
* @return Modified PDDocument object
*/","* This will add overlays to a document.
     *
     * @param specificPageOverlayMap Optional map of overlay files of which the first page will be
     * used for specific pages of the input document. The page numbers are 1-based. The map must be
     * empty (but not null) if no specific mappings are used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong.
     * @throws IllegalArgumentException if the input document is missing.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayDocuments,org.apache.pdfbox.multipdf.Overlay:overlayDocuments(java.util.Map),150,163,"/**
* Applies overlays from the provided map to the input PDF document.
* @param specificPageOverlayDocumentMap map of overlay documents keyed by page number
* @return modified PDDocument object or null on failure
*/","* This will add overlays documents to a document. If you created the overlay documents with
     * subsetted fonts, you need to save them first so that the subsetting gets done.
     *
     * @param specificPageOverlayDocumentMap Optional map of overlay documents for specific pages. The
     * page numbers are 1-based. The map must be empty (but not null) if no specific mappings are
     * used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDocument:writeXML(java.io.Writer),114,122,"/**
* Generates an XFDF XML document and writes it to the specified Writer.
* @param output target Writer for writing the XML content
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",89,242,"/**
* Resolves the specified color space.
* @param colorSpace COSBase representation of the color space
* @param resources PDResources object for accessing default colorspace
* @param wasDefault whether the current colorspace is the default
* @return a PDColorSpace object or throws an exception if not found
*/","* Creates a color space given a name or array. Abbreviated device color names are not supported
     * here, please replace them first. This method is for PDFBox internal use only, others should
     * use {@link #create(COSBase, PDResources)}.
     *
     * @param colorSpace the color space COS object
     * @param resources the current resources.
     * @param wasDefault if current color space was used by a default color space.
     * @return a new color space.
     * @throws MissingResourceException if the color space is missing in the resources dictionary
     * @throws IOException if the color space is unknown or cannot be created.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float[]),403,436,"/**
* Applies a series of functions to input data and returns the results, 
* clamping values between 0 and 1.
* @param input input data array
* @return float[] array of function outputs
*/","* Convert the input values using the functions of the shading dictionary.
     *
     * @param input the input values
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applySoftMaskToPaint,"org.apache.pdfbox.rendering.PageDrawer:applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",604,653,"/**
* Creates a Paint object with soft mask functionality.
* @param parentPaint base paint
* @param softMask PDSoftMask object containing mask data
* @return Paint object or null if creation fails
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray),76,79,"/**
 * Initializes a new instance of PDIndexed from a COS array.
 * @param indexedArray COS array containing index data
 */","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @throws IOException if the colorspace could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)",187,190,"/**
* Creates a PDImageXObject from an image file and adds it to a PDF document.
* @param imagePath path to the image file
* @param doc the target PDF document
* @return the created PDImageXObject or null on failure
*/","* Create a PDImageXObject from an image file, see {@link #createFromFileByExtension(File, PDDocument)} for
     * more details.
     *
     * @param imagePath the image file path.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject, or if the image type is not supported.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(),458,462,"/**
* Generates default image with specified level.
*/","* {@inheritDoc}
     * The returned images are cached via a SoftReference.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",244,249,"/**
* Generates a BufferedImage based on page index, scale, and image type.
* @param pageIndex the current page number
* @param scale the scaling factor for the image
* @param imageType the type of the generated image
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,print,"org.apache.pdfbox.printing.PDFPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int)",199,319,"/**
* Draws a page from the page tree.
* @param graphics Graphics context
* @param pageFormat Page format
* @param pageIndex Page index
* @return int indicating page existence status
*/",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float)",394,399,"/**
* Renders page content at specified index using provided graphics context and scale factors.
* @param pageIndex index of the page to render
* @param graphics Graphics2D context for rendering
* @param scaleX horizontal scaling factor
* @param scaleY vertical scaling factor
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,split,org.apache.pdfbox.multipdf.Splitter:split(org.apache.pdfbox.pdmodel.PDDocument),128,152,"/**
* Processes a PDF document and generates masked documents.
* @param document the input PDF document
* @return list of processed PDDocuments
*/","* This will take a document and split into several other documents.
     *
     * @param document The document to split.
     *
     * @return A list of all the split documents. These should all be saved before closing any
     * documents, including the source document. Any further operations should be made after
     * reloading them, to avoid problems due to resource sharing. For the same reason, they should
     * not be saved with encryption.
     *
     * @throws IOException If there is an IOError",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeText,"org.apache.pdfbox.text.PDFTextStripper:writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)",239,254,"/**
* Processes a PDDocument for output, updating formatting settings and invoking related methods.
* @param doc the input document
* @param outputStream writer stream for output
*/","* This will take a PDDocument and write the text of that document to the print writer.
     *
     * @param doc The document to get the data from.
     * @param outputStream The location to put the text.
     *
     * @throws IOException If the doc is in an invalid state.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.InputStream),149,152,"/**
* Creates an FDFDocument instance from the given InputStream.
* @param input input stream containing XML data
*/","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showText,org.apache.pdfbox.contentstream.PDFStreamEngine:showText(byte[]),735,816,"/**
* Renders a string of bytes into graphics state.
* @param string input byte array to render
*/","* Process text from the PDF Stream. You should override this method if you want to
     * perform an action when encoded text is being processed.
     *
     * @param string the encoded text
     * @throws IOException if there is an error processing the string",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:process(),46,60,"/**
* Processes AcroForm with a specified mask.
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphPath,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphPath(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName,java.lang.String)",271,307,"/**
* Fetches the glyphs for a given font and glyph name.
* @param baseName FontName of the target font
* @param glyphName Name of the glyph to fetch
* @return A GeneralPath object representing the glyph, or null if not found
*/","* Returns the path for the character with the given name for the specified Standard 14 font. The mapped font is
     * cached. The path may differ in different environments as it depends on the mapped font.
     *
     * @param baseName name of the standard 14 font
     * @param glyphName name of glyph
     * @return the mapped font
     * 
     * @throws IOException if the data could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDMMType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDMMType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),37,40,"/**
* Initializes a PDMMType1Font object from a COS dictionary.","* Creates an MMType1Font from a Font dictionary in a PDF.
     *
     * @param fontDictionary font dictionary
     * 
     * @throws IOException if the font could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Initializes a new instance of a Type 3 font from a COS dictionary. 
 * @param fontDictionary dictionary containing font information
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",153,156,"/**
* Loads font from a specified file into the given document.
* @param doc target PDDocument instance
* @param file font file to load
*/","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",182,186,"/**
* Creates a Type 0 font from an input stream.
* @param doc the document to associate with the font
* @param input input stream containing font data
* @param embedSubset whether to embed and subset the font
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when
     * creating a font for AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",230,233,"/**
* Extracts font from PDDocument and writes it to file.
* @param doc PDDocument object
* @param file target file for font extraction
* @return extracted PDType0Font or null if failed
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",243,246,"/**
* Creates a PDDocument font from an InputStream.
* @param doc the parent document
* @param input the font data stream
* @return PDType0Font object or null on error
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",257,261,"/**
* Creates a font by reading from an input stream.
* @param doc the document
* @param input input stream containing font data
* @param embedSubset whether to embed subset in PDF
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",189,193,"/**
* Wraps PDDocument with buffered file stream.
* @param doc target document
* @param file file to read from
* @param encoding font encoding
* @return PDTrueTypeFont object
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.</p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TTF file.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",207,211,"/**
* Wraps an InputStream as a RandomAccessReadBuffer.
* @param input the InputStream to wrap
* @return PDTrueTypeFont object or null if failed
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.</p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TTF file stream
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureDictionaries,org.apache.pdfbox.pdmodel.PDDocument:getSignatureDictionaries(),888,900,"/**
* Retrieves a list of PDF signature objects from the input document.
* @return List of PDSignature objects or empty list if no signatures found
*/","* Retrieve all signature dictionaries from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:process(),36,61,"/**
* Generates and writes PDF form field appearance streams.
* @throws IOException if I/O error occurs
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",317,474,"/**
* Adds a digital signature to the PDDocument.
* @param sigObject Signature object
* @param signatureInterface Interface for signing
* @param options Options for signature (e.g. size)
*/","* This will add a signature to the document. If the 0-based page number in the options
     * parameter is smaller than 0 or larger than max, the nearest valid page number will be used
     * (i.e. 0 or max) and no exception will be thrown.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormLegacyMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1285,1337,"/**
* Copies form fields from source to destination AcroForm while updating field numbers.
* @param cloner PDF clone utility
* @param destAcroForm target AcroForm
* @param srcAcroForm source AcroForm containing fields to copy
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument),128,143,"/**
* Updates PDF document fields from FDF fields.
* @param fdf FDFDocument instance
*/","* This method will import an entire FDF document into the PDF document
     * that this acroform is part of.
     *
     * @param fdf The FDF document to import.
     *
     * @throws IOException If there is an error doing the import.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.Writer),242,255,"/**
* Flushes mask data to the specified writer.
* @param output Writer stream for output
*/","* This will save the document to an output stream and close the stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float),391,394,"/**
* Returns an array of floats containing the result of processing the input value.
* @param inputValue single float value to process
*/","* Convert the input value using the functions of the shading dictionary.
     *
     * @param inputValue the input value
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,evalFunctionAndConvertToRGB,org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:evalFunctionAndConvertToRGB(float[]),160,167,"/**
* Computes function mask based on input array.
* @param values float array to process
* @return int result of computation or throws IOException if error occurs
*/","* Convert color to RGB color value, using function if required, then convert from the shading
     * color space to an RGB value, which is encoded into an integer.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getStrokingPaint(),682,687,"/**
* Generates a mask image using the provided graphics state.
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getNonStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getNonStrokingPaint(),697,702,"/**
* Returns a paint object representing the function mask.
*/","* Returns the non-stroking AWT Paint. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.
     *
     * @return The non-stroking AWT Paint.
     * @throws IOException if the non-stroking AWT Paint could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawBufferedImage,"org.apache.pdfbox.rendering.PageDrawer:drawBufferedImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",1296,1395,"/**
* Applies a mask to the given PDImage using the provided BufferedImage and AffineTransform.
* @param pdImage the PDImage to be masked
* @param image the BufferedImage used for masking
* @param at the AffineTransform used for masking
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shadingFill,org.apache.pdfbox.rendering.PageDrawer:shadingFill(org.apache.pdfbox.cos.COSName),1486,1541,"/**
* Applies a mask from the given COSName to the current graphics context.
* @param shadingName name of the mask to apply
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroupOnGraphics,"org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroupOnGraphics(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.awt.Graphics2D)",1669,1738,"/**
* Draws transparency group and soft mask onto the graphics context.
* @param form PDTransparencyGroup to render
* @param graphics Graphics2D context for drawing
*/","* For advanced users, to extract the transparency group into a separate graphics device.
     * 
     * @param form the transparency group to be extracted
     * @param graphics the target graphics device
     * @throws IOException if the transparency group could not be extracted",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,setupIndexedColorSpace,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",304,324,"/**
* Creates a PDF indexed image with custom colors and mask.
* @param doc PDDocument instance
* @param lookupTable Chunk containing color table data
* @param image PDImageXObject to be indexed
* @param highVal High value for the indexed array
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float)",205,208,"/**
* Generates a BufferedImage for the given page index and scale.
* @param pageIndex unique page identifier
* @param scale image scaling factor
*/","* Returns the given page as an RGB image at the given scale.
     * A scale of 1 will render at 72 DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float)",217,220,"/**
* Generates a mask image based on page index and DPI.
* @param pageIndex unique page identifier
* @param dpi device resolution in dots per inch
*/","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)",230,234,"/**
* Generates a BufferedImage mask based on page index and DPI.
* @param pageIndex unique page identifier
* @param dpi dots per inch (scaled to 72 for calculation)
* @param imageType type of the generated image
*/","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float)",376,380,"/**
* Convenience constructor to call overloaded variant with equal width and height scales.
* @param pageIndex current page index
* @param graphics Graphics context for rendering
* @param scale scaling factor (width equals this value)
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scale the scaling factor, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,extract,org.apache.pdfbox.multipdf.PageExtractor:extract(),73,85,"/**
* Creates a PDDocument with masked pages.
* @return PDDocument object
*/","* This will take a document and extract the desired pages into a new 
     * document.  Both startPage and endPage are included in the extracted 
     * document.  If the endPage is greater than the number of pages in the 
     * source document, it will go to the end of the document.  If startPage is
     * less than 1, it'll start with page 1.  If startPage is greater than 
     * endPage or greater than the number of pages in the source document, a 
     * blank document will be returned.
     * 
     * @return The extracted document
     * @throws IOException If there is an IOError",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getText,org.apache.pdfbox.text.PDFTextStripper:getText(org.apache.pdfbox.pdmodel.PDDocument),216,221,"/**
* Converts PDDocument to a string representation.
* @param doc input PDF document
*/","* This will return the text of a document. See writeText. <br>
     * NOTE: The document must not be encrypted when coming into this method.
     *
     * <p>IMPORTANT: By default, text extraction is done in the same sequence as the text in the PDF page content stream.
     * PDF is a graphic format, not a text format, and unlike HTML, it has no requirements that text one on page
     * be rendered in a certain order. The order is the one that was determined by the software that created the
     * PDF. To get text sorted from left to right and top to botton, use {@link #setSortByPosition(boolean)}.
     * 
     * @param doc The document to get the text from.
     * @return The text of the PDF document.
     * @throws IOException if the doc state is invalid or it is encrypted.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.lang.String),120,123,"/**
* Loads FDF document from file.
* @param filename path to the FDF file
* @return FDFDocument object or null on failure
*/","* This will load a document from a file.
     *
     * @param filename The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.File),134,137,"/**
* Loads FDFDocument from specified file.
* @param file input file containing FDFDocument data
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextString,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextString(byte[]),654,657,"/**
* Applies function mask to input byte array.
* @param string input data to be processed
*/","* Called when a string of text is to be shown.
     *
     * @param string the encoded text
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextStrings,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextStrings(org.apache.pdfbox.cos.COSArray),665,714,"/**
* Processes COSArray of font-related data, applying TJ transformation.
* @param array input COSArray to process
*/","* Called when a string of text with spacing adjustments is to be shown.
     *
     * @param array array of encoded text strings and adjustments
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawHelp,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawHelp(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",278,318,"/**
* Draws a mask with question mark on the specified annotation.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream to draw on
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",320,360,"/**
* Applies a mask to the given PDAnnotationText using the provided PDAppearanceContentStream.
* @param annotation text to be masked
* @param contentStream stream used for masking operations
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNewParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",362,388,"/**
* Applies font masks to the given PDAnnotationText annotation.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream object for rendering
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCrossHairs,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",390,414,"/**
* Applies functional mask to annotation text.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream for rendering
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawZapf,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawZapf(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,int,int,java.lang.String)",592,615,"/**
* Draws a character from the Zapf Dingbats font.
* @param annotation PDAnnotationText object
* @param contentStream PDAppearanceContentStream to draw on
* @param by X-coordinate of bounding box
* @param ty Y-coordinate of bounding box
* @param glyphName Character name in the font",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",124,190,"/**
* Creates a PDFont object based on the provided COSDictionary and ResourceCache.
* @param dictionary COSDictionary containing font metadata
* @param resourceCache ResourceCache for font resources
* @return PDFont object or throws IOException if invalid font type
*/","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @param resourceCache resource cache, only useful for type 3 fonts, can be null
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",167,170,"/**
* Creates a type 0 font from an InputStream.
* @param doc parent PDDocument
* @param input stream containing font data
*/","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getLastSignatureDictionary,org.apache.pdfbox.pdmodel.PDDocument:getLastSignatureDictionary(),850,859,"/**
* Retrieves a PDSignature from the list of dictionaries.
* @return PDSignature object or null if empty
*/","* This will return the last signature from the field tree. Note that this may not be the
     * last in time when empty signature fields are created first but signed after other fields.
     * 
     * @return the last signature as <code>PDSignatureField</code>.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncrementalForExternalSigning,org.apache.pdfbox.pdmodel.PDDocument:saveIncrementalForExternalSigning(java.io.OutputStream),1190,1224,"/**
* Creates external signing support with specified output stream.
* @param output OutputStream to write signature data
* @return ExternalSigningSupport instance or null on error
*/","* Save PDF incrementally without closing for external signature creation scenario. The general sequence is:
     * 
     * <pre>
     *    PDDocument pdDocument = ...;
     *    OutputStream outputStream = ...;
     *    SignatureOptions signatureOptions = ...; // options to specify fine tuned signature options or null for defaults
     *    PDSignature pdSignature = ...;
     *
     *    // add signature parameters to be used when creating signature dictionary
     *    pdDocument.addSignature(pdSignature, signatureOptions);
     *    // prepare PDF for signing and obtain helper class to be used
     *    ExternalSigningSupport externalSigningSupport = pdDocument.saveIncrementalForExternalSigning(outputStream);
     *    // get data to be signed
     *    InputStream dataToBeSigned = externalSigningSupport.getContent();
     *    // invoke signature service
     *    byte[] signature = sign(dataToBeSigned);
     *    // set resulted CMS signature
     *    externalSigningSupport.setSignature(signature);
     *
     *    // last step is to close the document
     *    pdDocument.close();
     * </pre>
     * <p>
     * Note that after calling this method, only {@code close()} method may invoked for {@code PDDocument} instance and
     * only AFTER {@link ExternalSigningSupport} instance is used.
     * </p>
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write the final PDF. It will be closed when the document is closed. It <i><b>must
     * never</b></i> point to the source file or that one will be harmed!
     * @return instance to be used for external signing and setting CMS signature
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream or signature options were
     * not set.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(java.util.List,boolean)",227,317,"/**
* Updates field masks in the PDF document, handling XFA forms and refresh appearances.
* @param fields list of PDField objects to process
* @param refreshAppearances whether to update visual field appearances
*/","* This will flatten the specified form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * @param fields a list of fields to be flattened
     * @param refreshAppearances if set to true the appearances for the form field widgets will be updated
     * @throws IOException if something went wrong flattening the fields",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",278,281,"/**
* Wraps calling m1 with default signature options.
* @param sigObject PDSignature object
* @param options SignatureOptions (null for defaults)
*/","* Add parameters of signature to be created externally. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",296,299,"/**
* Configures and executes PDSignature operation.
* @param sigObject PDSignature object to operate on
* @param signatureInterface interface for configuration options
*/","* Add a signature to be created using the instance of given interface.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     * 
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormJoinFieldsMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1270,1274,"/**
* Copies form fields from source AcroForm to destination AcroForm. 
* @param cloner utility for cloning PDF objects
* @param destAcroForm target AcroForm to update
* @param srcAcroForm source AcroForm to copy fields from
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.File),214,221,"/**
* Writes data to file using BufferedWriter.
* @param fileName name of the output file
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,addLinePoints,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:addLinePoints(org.apache.pdfbox.pdmodel.graphics.shading.Line,int[][])",125,131,"/**
* Updates line mask in 2D array based on line points and slope.
* @param line Line object with points and slope
* @param array 2D array to update with line mask values
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,strokePath,org.apache.pdfbox.rendering.PageDrawer:strokePath(),793,805,"/**
* Updates graphics with masked data and clears line path.
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawGlyph,"org.apache.pdfbox.rendering.PageDrawer:drawGlyph(java.awt.geom.GeneralPath,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",525,575,"/**
* Applies font-specific mask to a GeneralPath, transforming and rendering it.
* @param path the path to transform
* @param font the PDFont to apply font-specific rules from
*/","* Renders a glyph.
     * 
     * @param path the GeneralPath for the glyph
     * @param font the font
     * @param code character code
     * @param displacement the glyph's displacement (advance)
     * @param at the transformation
     * @throws IOException if something went wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillPath,org.apache.pdfbox.rendering.PageDrawer:fillPath(int),807,860,"/**
* Applies winding rule and renders path.
* @param windingRule integer value for winding rule
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawImage,org.apache.pdfbox.rendering.PageDrawer:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage),1074,1262,"/**
* Renders a PDImageXObject.
* @param pdImage the image to render
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroup,org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),1656,1660,"/**
* Processes transparency group mask.
* @param form PDTransparencyGroup object to process
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildIndexImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",211,255,"/**
* Converts indexed image to PDImageXObject.
* @param doc PDDocument object
* @param state PNGConverterState object
* @return PDImageXObject object or null on error
*/",* Build a indexed image,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,org.apache.pdfbox.rendering.PDFRenderer:renderImage(int),192,195,"/**
* Returns a BufferedImage for the specified page index.
* @param pageIndex unique page identifier
* @return BufferedImage object or null if not found
*/","* Returns the given page as an RGB image at 72 DPI
     * @param pageIndex the zero-based index of the page to be converted.
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D)",360,363,"/**
* Draws page content on the specified graphics context.
* @param pageIndex current page index
* @param graphics graphics context to draw on
*/","* Renders a given page to an AWT Graphics2D instance at 72 DPI.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,64,"/**
* Applies mask to PDF stream using specified operator and string argument.
* @param operator PDF operator for masking
* @param arguments list of COSBase objects, must contain a single COSString
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,62,"/**
* Applies mask operation to the given array.
* @param operator Operator instance
* @param arguments List of COSBase objects
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:generateNormalAppearance(),81,164,"/**
* Processes annotation text based on its type.
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFont,org.apache.pdfbox.pdmodel.PDResources:getFont(org.apache.pdfbox.cos.COSName),142,182,"/**
* Retrieves a PDFont object from the cache or creates it from COSName reference.
* @param name COSName reference to the font
*/","* Returns the font resource with the given name, or null if none exists.
     *
     * @param name Name of the font resource.
     * @return the font with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
* Returns a PDFont object based on the provided COSDictionary.
* @param dictionary COSDictionary containing font metadata
*/","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(),192,208,"/**
* Processes PDFields and calls recursive flattening if necessary.
*/","* This will flatten all form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * <p>
     * The appearances for the form fields widgets will <strong>not</strong> be generated
     * </p>
     * 
     * @throws IOException if something went wrong flattening the fields",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),259,262,"/**
* Processes a PDSignature object using default signature options.
* @param sigObject PDSignature to process
*/","* Add parameters of signature to be created externally using default signature options. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeAcroForm,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",1222,1259,"/**
* Merges or replaces the AcroForm in the destination catalog with the source.
* @param cloner PDF clone utility
* @param destCatalog destination document catalog
* @param srcCatalog source document catalog
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.lang.String),230,233,"/**
* Wraps file-based operation by delegating to overloaded version with File object.
* @param fileName path to file in string form
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,calcPixelTable,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:calcPixelTable(java.util.List,int[][],java.awt.Rectangle)",80,123,"/**
* Processes and renders a list of shaded triangles.
* @param triangleList List of ShadedTriangle objects
* @param array 2D array for rendering data
* @param deviceBounds Device bounds rectangle
*/","* Get the points from the triangles, calculate their color and add point-color mappings.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showFontGlyph,"org.apache.pdfbox.rendering.PageDrawer:showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",495,513,"/**
* Processes a single PDF character by fetching and rendering its glyph.
* @param textRenderingMatrix transformation matrix for text rendering
* @param font PDFont object for the current font
* @param code unique identifier of the character to render
* @param displacement additional position offset for the character
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillAndStrokePath,org.apache.pdfbox.rendering.PageDrawer:fillAndStrokePath(int),948,956,"/**
* Updates the line path with a new winding rule and recalculates its state.
* @param windingRule integer specifying the new winding rule
*/","* Fills and then strokes the path.
     *
     * @param windingRule The winding rule this path will use.
     * @throws IOException If there is an IO error while filling the path.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPng,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",132,206,"/**
* Parses and validates the IHDR chunk of a PNG image.
* @param doc PDDocument object
* @param state PNGConverterState object to store parsed data
* @return PDImageXObject or null on parsing error
*/","* Convert the image using the state.
     *
     * @param doc   the document to put the image in
     * @param state the parser state containing the PNG chunks.
     * @return null or the converted image",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,process,"org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",50,78,"/**
* Applies a font mask to the PDF stream engine.
* @param operator current operation
* @param arguments list of COSBase objects, expected to contain a COSName and a COSNumber
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,ensureFontResources,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:ensureFontResources(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",231,265,"/**
* Adds missing font resource if necessary, using FontMapper.
* @param defaultResources PDResources instance
* @param field PDVariableText field object
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:generateNormalAppearance(),71,361,"/**
* Draws a free text callout annotation with the specified properties.
* @param annotation PDAnnotationFreeText object containing the annotation's properties
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,validateAndEnsureAcroFormResources,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:validateAndEnsureAcroFormResources(),134,180,"/**
* Merges fonts from widgets into the AcroForm resources.
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFont,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFont(java.util.List),146,176,"/**
* Sets font for PDF document.
* @param operands list of COSBase objects containing font name and size
*/","* Process the set font and font size operator.
     * 
     * @param operands the font name and size
     * @throws IOException in case there are missing operators or the font is not within the resources",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,copyNeededResourcesTo,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),309,325,"/**
* Initializes and updates resources in the given PDAppearanceStream.
* @param appearanceStream PDAppearanceStream instance to modify
*/","* Copies any needed resources from the document’s DR dictionary into the stream’s Resources
     * dictionary. Resources with the same name shall be left intact.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFont(),78,87,"/**
* Initializes a PDFont object from the default mask font setting.
* @return PDFont object or null if initialization fails
*/","* This will get the font for this font setting.
     *
     * @return The font for this setting of null if one was not found.
     *
     * @throws IOException If there is an error getting the font.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,appendDocument,"org.apache.pdfbox.multipdf.PDFMergerUtility:appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",510,847,"/**
* Merges the source PDF into the destination PDF.
* @param destination the PDF to merge into
* @param source the PDF to merge from
*/","* append all pages from source to destination.
     *
     * @param destination the document to receive the pages
     * @param source the document originating the new pages
     *
     * @throws IOException If there is an error accessing data from either
     * document.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPNGImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])",113,123,"/**
* Converts image data to a PDImageXObject using the specified converter.
* @param doc PDDocument instance
* @param imageData byte array containing image data
* @return PDImageXObject object or null if conversion fails
*/","* Try to convert a PNG into a PDImageXObject. If for any reason the PNG can not
     * be converted, null is returned.
     * <p>
     * This usually means the PNG structure is damaged (CRC error, etc.) or it uses
     * some features which can not be mapped to PDF.
     *
     * @param doc       the document to put the image in
     * @param imageData the byte data of the PNG
     * @return null or the PDImageXObject built from the png",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveFieldsFromWidgets,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveFieldsFromWidgets(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),78,113,"/**
* Rebuilds fields from widgets and updates AcroForm.
* @param acroForm target form to update
*/",,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processOperator,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",123,138,"/**
* Executes operator-specific functionality based on the provided operator and operands.
* @param operator The operator to execute
* @param operands List of COSBase objects representing the operator's parameters
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",439,482,"/**
* Generates and writes PDF mask stream for a widget.
* @param widget PDAnnotationWidget instance
* @param appearanceStream PDAppearanceStream to process
*/",* Constructs and sets new contents for given appearance stream.,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,copyIntoGraphicsState,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState),82,190,"/**
* Applies graphics state settings from the dictionary to the PDGraphicsState.
* @param gs PDGraphicsState object to update
*/","* This will implement the gs operator.
     *
     * @param gs The state to copy this dictionaries values into.
     *
     * @throws IOException If there is an error copying font information.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,legacyMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:legacyMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",444,499,"/**
* Combines source PDF documents into a single document.
* @param streamCacheCreateFunction function to create a PDDocument
* @param compressParameters compression parameters for the output
*/","* Merge the list of source documents, saving the result in the destination file.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String,org.apache.pdfbox.pdmodel.graphics.image.CustomFactory)",362,410,"/**
* Creates a PDImageXObject from the given byte array and custom factory.
* @param document PDDocument object
* @param byteArray image data
* @param name file name
* @param customFactory optional custom factory for unsupported formats
* @return PDImageXObject or throws exception if not supported
*/","* Create a PDImageXObject from an image byte array. This overloaded version allows providing 
     * a custom factory to handle specific image formats, such as BMP and GIF, or to act as a 
     * fallback strategy when the default converters (e.g., for PNG or TIFF) fail.
     *
     * @param document the document that shall use this PDImageXObject.
     * @param byteArray bytes from an image file.
     * @param name name of image file for exception messages, can be null.
     * @param customFactory optional factory used to handle BMP, GIF, or fallback cases 
     *                       (e.g., for PNG or TIFF). If {@code null}, this method delegates to
     *                       {@link #createFromByteArray(PDDocument, byte[], String)}.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:process(),60,76,"/**
* Processes and updates AcroForm fields.
*/",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processAppearanceStringOperators,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processAppearanceStringOperators(byte[]),96,114,"/**
* Parses PDF stream to extract COSBase objects.
* @param content byte array representing the PDF stream
*/","* Processes the operators of the given content stream.
     *
     * @param content the content to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,process,"org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,70,"/**
* Processes 'gs' operator with extended graphics state.
* @param operator the 'gs' operator
* @param arguments list of operands (must contain exactly one)
*/",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",362,373,"/**
* Routes stream cache creation based on document merge mode.
* @param streamCacheCreateFunction function to create stream cache
* @param compressParameters parameters for compression
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * @param compressParameters defines if compressed object streams are enabled
     * 
     * @throws IOException If there is an error saving the document.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",341,344,"/**
* Creates a PDImageXObject from the given byte array.
* @param document PDDocument instance
* @param byteArray image data in bytes
* @param name name of the image object
*/","* Create a PDImageXObject from bytes of an image file. The file format is determined by the
     * file content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG.
     * This is a convenience method that calls {@link JPEGFactory#createFromByteArray},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param byteArray bytes from an image file.
     * @param document the document that shall use this PDImageXObject.
     * @param name name of image file for exception messages, can be null.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,apply,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:apply(),32,58,"/**
* Processes and generates appearances for an AcroForm.
* @param document the PDF document being processed
*/",,,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:<init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)",73,88,"/**
* Initializes the PDF page's default appearance.
* @param defaultAppearance string value for /DA parameter
* @param defaultResources PDResources object for /DR parameter
*/","* Constructor for reading an existing DA string.
     * 
     * @param defaultResources DR entry
     * @param defaultAppearance DA entry
     * @throws IOException If the DA could not be parsed",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),345,348,"/**
* Creates a stream cache with default compression.
* @param streamCacheCreateFunction function to create stream cache
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getWidgetDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),339,344,"/**
* Creates a default appearance string for the given annotation widget.
* @param widget AnnotationWidget to generate appearance string for
*/",,,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearanceString(),96,106,"/**
* Creates a default appearance string for PDF generation.
* @throws IOException if an error occurs during resources retrieval
*/","* Get the default appearance.
     *
     * This is an inheritable attribute.
     *
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     *
     * @return the DA element of the dictionary object",,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceValue(java.lang.String),188,272,"/**
* Processes field mask for the given PDF value.
* @param apValue PDF value to process
*/","* This is the public method for setting the appearance stream.
     *
     * @param apValue the String value which the appearance should represent
     * @throws IOException If there is an error creating the stream.",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText),113,128,"/**
* Initializes AppearanceGeneratorHelper with a PDVariableText field.
* @param field the PDVariableText field to process
*/","* Constructs a COSAppearance from the given field.
     *
     * @param field the field which you wish to control the appearance of
     * @throws IOException",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:constructAppearances(),78,93,"/**
* Generates appearance mask based on provided data.
* @throws IOException if an I/O error occurs
*/",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:constructAppearances(),81,87,"/**
* Generates appearance mask.
* @throws IOException if I/O error occurs during generation
*/",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:constructAppearances(),257,263,"/**
* Generates appearance mask.
*/",,,,True,29
