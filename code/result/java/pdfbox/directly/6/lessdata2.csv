file_path,Name,full_name,Start Line,End Line,Comment,Pre_Comment,child Name,domain,inner_method,node_level
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,<init>,org.apache.pdfbox.Loader:<init>(),45,47,"/**
 * Private constructor to prevent direct instantiation of Loader.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorName.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorName:<init>(),114,116,"/**
 * Private constructor to prevent direct instantiation of OperatorName.
 */",* private constructor,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes the OperatorProcessor with a PDFStreamEngine context.
 * @param context The PDFStreamEngine instance.
 */
","* Creates a new OperatorProcessor.
     * 
     * @param context the processing context to be used",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBase.java,<init>,org.apache.pdfbox.cos.COSBase:<init>(),37,39,"/**
* Default constructor for COSBase class. Provides no initialization.
*/
",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,<init>,org.apache.pdfbox.cos.COSUpdateState:<init>(org.apache.pdfbox.cos.COSUpdateInfo),53,56,"/**
 * Initializes the COSUpdateState with the provided update info.
 * @param updateInfo The COSUpdateInfo object to use for initialization.
 */
","* Creates a new {@link COSUpdateState} for the given {@link COSUpdateInfo}.
     *
     * @param updateInfo The {@link COSUpdateInfo}, that shall be managed by this {@link COSUpdateState}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<init>,org.apache.pdfbox.cos.PDFDocEncoding:<init>(),108,110,"/**
 * Private constructor to prevent instantiation of this class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream$Code:<init>(int,int)",272,275,"/**
 * Constructs a Code object.
 * @param code The code value.
 * @param length The length of the code.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(),44,47,"/**
 * Default constructor. Intentionally left empty.
 */",* Constructs an empty DecodeOptions instance,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(java.awt.Rectangle),55,58,"/**
 * Initializes DecodeOptions with a specified source region.
 * @param sourceRegion Rectangle defining the source region.
 */","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param sourceRegion Region of the source image that should be decoded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(int),81,85,"/**
 * Initializes DecodeOptions with the given subsampling factor.
 * @param subsampling Subsampling factor for X and Y dimensions.
 */
","* Constructs an instance specifying the image should be decoded using subsampling. The
     * subsampling will be the same for the X and Y axes.
     *
     * @param subsampling The number of rows and columns to advance in the source for each pixel in
     * the decoded image.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary),36,39,"/**
 * Initializes the DecodeResult with the provided parameters.
 * @param parameters COSDictionary containing decoding parameters
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,"org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)",41,45,"/**
 * Initializes a DecodeResult with parameters and color space.
 * @param parameters COSDictionary containing decoding parameters.
 * @param colorSpace PDJPXColorSpace for color interpretation.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<init>,org.apache.pdfbox.filter.Filter:<init>(),66,68,"/**
 * Default constructor for the Filter class.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,org.apache.pdfbox.filter.Predictor:<init>(),33,35,"/**
 * Private constructor to prevent direct instantiation of Predictor.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$LayoutPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,short)",289,295,"/**
 * Constructs a LayoutPage with provided media box, stream, resources, and rotation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,"org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)",54,59,"/**
 * Initializes a PageExtractor with document, start, and end pages.
 */","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.
     * @param startPage The first page you want extracted (1-based, inclusive)
     * @param endPage The last page you want extracted (1-based, inclusive)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<init>,org.apache.pdfbox.pdfparser.XrefParser:<init>(org.apache.pdfbox.pdfparser.COSParser),64,68,"/**
 * Initializes the XrefParser with a COSParser.
 * @param cosParser The COSParser to use for parsing.
 */
","* Default constructor.
     *
     * @param cosParser the parser to be used to read the pdf.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,<init>,org.apache.pdfbox.pdfparser.xref.AbstractXReference:<init>(org.apache.pdfbox.pdfparser.xref.XReferenceType),37,40,"/**
 * Constructs an AbstractXReference with the given type.
 * @param type The type of the XReference.
 */
","* Creates a crossreference stream entry of the given {@link XReferenceType}.
     *
     * @param type The {@link XReferenceType} of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,<init>,org.apache.pdfbox.pdfwriter.ContentStreamWriter:<init>(java.io.OutputStream),59,62,"/**
 * Initializes a ContentStreamWriter with the provided output stream.
 * @param out The output stream to write to.
 */
","* This will create a new content stream writer.
     *
     * @param out The stream to write the data to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(boolean),42,45,"/**
 * Constructs a DefaultResourceCacheCreateImpl.
 * @param enableStableCache Whether to enable the stable cache.
 */
","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,93,"/**
 * Initializes a PDDocumentCatalog with a document and root dictionary.
 */","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.
     * @param rootDictionary The root dictionary that this object wraps.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes PDDocumentInformation with a COSDictionary.
 * @param dic The COSDictionary containing document information.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),41,44,"/**
 * Initializes the destination dictionary.
 * @param dict The COSDictionary representing the destination.
 */","* Constructor.
     *
     * @param dict The dictionary of names and corresponding destinations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.cos.COSDictionary)",56,60,"/**
 * Initializes a PDDocumentNameDictionary with a catalog and name dictionary.
 */","* Constructor.
     *
     * @param cat The document that this dictionary is part of.
     * @param names The names dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary),104,107,"/**
 * Creates a new PDPage instance.
 * @param pageDictionary COSDictionary representing the page.
 */
","* Creates a new instance of PDPage for reading.
     * 
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,"org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",114,118,"/**
 * Constructs a PDPage with the given dictionary and resource cache.
 * @param pageDictionary COSDictionary representing the page.
 * @param resourceCache Resource cache for accessing resources.
 */
","* Creates a new instance of PDPage for reading.
     *
     * @param pageDictionary A page dictionary in a PDF document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,<init>,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:<init>(java.util.Map,org.apache.pdfbox.cos.COSDictionary)",50,54,"/**
 * Initializes a COSDictionaryMap with given map and dictionary.
 * @param actualsMap The actual map to use.
 * @param dicMap The COSDictionary to associate with the map.
 */
","* Constructor for this map.
     *
     * @param actualsMap The map with standard java objects as values.
     * @param dicMap The map with COSBase objects as values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDDictionaryWrapper with the given COSDictionary.
 * @param dictionary The COSDictionary to wrap.
 */
","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a PDNameTreeNode from a COSDictionary.
 * @param dict The COSDictionary representing the node.
 */
","* Constructor.
     *
     * @param dict The dictionary that holds the name information.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,"org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)",66,70,"/**
 * Creates a PDNumberTreeNode with a dictionary and value class.
 * @param dict The COS dictionary for the node.
 * @param valueClass The class of the node's value.
 */
","* Constructor.
     *
     * @param dict The dictionary that holds the number information.
     * @param valueClass The PD Model type of object that is the value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(org.apache.pdfbox.cos.COSDictionary),83,86,"/**
 * Creates a PDPageLabelRange from a COSDictionary.
 * @param dict The COSDictionary containing label range data.
 */
","* Creates a new page label range object from the given dictionary.
     * 
     * @param dict
     *            the base dictionary for the new object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:<init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)",301,306,"/**
 * Initializes a LabelGenerator with label range and number of pages.
 * @param label Label information for page labels.
 * @param pages Total number of pages.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a PDRange with the given COSArray.
 * @param range The COSArray representing the range.
 */
","* Constructor assumes a starting index of 0.
     *
     * @param range The array that describes the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray,int)",64,68,"/**
 * Initializes a PDRange with a COSArray and an index.
 * @param range The COSArray representing the range.
 * @param index The starting index of the range.
 */
","* Constructor with an index into an array.  Because some arrays specify
     * multiple ranges ie [ 0,1,  0,2,  2,3 ] It is convenient for this
     * class to take an index into an array.  So if you want this range to
     * represent 0,2 in the above example then you would say <code>new PDRange( array, 1 )</code>.
     *
     * @param range The array that describes the index
     * @param index The range index into the array for the start of the range.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSStream),81,84,"/**
 * Initializes a PDStream object with the provided COSStream.
 * @param str The COSStream to be wrapped by this PDStream.
 */
","* Creates a PDStream which wraps the given COSStream.
     * 
     * @param str The stream parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of ArithmeticOperators class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of BitwiseOperators class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of ConditionalOperators.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of the Parser class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of this class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators:<init>(),30,33,"/**
 * Private constructor, prevents instantiation of StackOperators class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes a PDMarkInfo object with the given COSDictionary.
 */","* Constructor for an existing MarkInfo element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Creates a MarkedContentReference with the given COSDictionary.
 * @param dictionary The COSDictionary for this reference.
 */
","* Constructor for an existing marked content reference.
     * 
     * @param dictionary the page dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Constructs a PDObjectReference with the given COSDictionary.
 * @param theDictionary The COSDictionary for this reference.
 */
","* Constructor for an existing object reference.
     *
     * @param theDictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSArray),37,40,"/**
 * Constructs a PDParentTreeValue with the given COS array.
 * @param obj The COS array representing the parent tree value.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes a PDParentTreeValue with the given COSDictionary.
 * @param obj The COSDictionary to initialize with.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Constructs a PDStructureNode using the provided COSDictionary.
 */","* Constructor for an existing structure node.
     *
     * @param dictionary The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:<init>(),37,39,"/**
 * Default constructor for the Revisions class.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(org.apache.pdfbox.cos.COSDictionary),71,74,"/**
 * Initializes PDPropertyList with a given COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor for subclasses.
     * 
     * @param dict the dictionary to be used to create an instance of PDPropertyList",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Initializes a PDBoxStyle with the given COSDictionary.
 * @param dic The COSDictionary to use for initialization.
 */
","* Constructor for an existing BoxStyle element.
     *
     * @param dic The existing dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<init>(),317,319,"/**
 * Private constructor to prevent instantiation of StandardStructureTypes.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(),70,73,"/**
 * Constructs an AccessPermission object with default permissions.
 */","* Create a new access permission object.
     * By default, all permissions are granted.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(byte[]),82,92,"/**
 * Initializes AccessPermission from a byte array.
 * @param b byte array containing permission data.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(int),99,102,"/**
 * Initializes an AccessPermission with the given permissions.
 * @param permissions Integer representing access permissions.
 */
","* Creates a new access permission object from a single integer.
     *
     * @param permissions The permission bits.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,<init>,org.apache.pdfbox.pdmodel.encryption.MessageDigests:<init>(),28,30,"/**
 * Private constructor to prevent instantiation of MessageDigests.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes the PDCryptFilterDictionary with the provided COSDictionary.
 */","* creates a new crypt filter dictionary from the low level dictionary provided.
     * @param d the low level dictionary that will be managed by the newly created object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,<init>,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:<init>(),37,40,"/**
 * Initializes the RC4 cipher with a 256-element salt array.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,<init>,org.apache.pdfbox.pdmodel.encryption.SaslPrep:<init>(),32,34,"/**
 * Private constructor to prevent instantiation of the SaslPrep class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:<init>(),31,33,"/**
 * Private constructor to prevent direct instantiation of SecurityProvider.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),118,121,"/**
 * Constructs a FDFAnnotation with the given COSDictionary.
 * @param a The COSDictionary representing the annotation.
 */
","* Constructor.
     *
     * @param a The FDF annotation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a FDFCatalog with the provided COSDictionary.
 * @param cat The COSDictionary representing the catalog.
 */
","* Constructor.
     *
     * @param cat The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Initializes a FDFDictionary with a COSDictionary.
 * @param fdfDictionary The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param fdfDictionary The FDF documents catalog.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Initializes a FDFField with the provided COSDictionary.
 * @param f The COSDictionary representing the field.
 */
","* Constructor.
     *
     * @param f The FDF field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(org.apache.pdfbox.cos.COSDictionary),73,76,"/**
 * Initializes the FDFIconFit with the provided COSDictionary.
 * @param f The COSDictionary to use for fitting.
 */
","* Constructor.
     *
     * @param f The icon fit dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes the FDFJavaScript object with a COSDictionary.
 * @param javaScript The COSDictionary containing JavaScript.
 */
","* Constructor.
     *
     * @param javaScript The FDF java script.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a FDFNamedPageReference with the given reference dictionary.
 * @param r The COSDictionary representing the reference.
 */
","* Constructor.
     *
     * @param r The FDF named page reference dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a FDFOptionElement with the given COSArray.
 * @param o The COSArray representing the option element.
 */
","* Constructor.
     *
     * @param o The option element.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a new FDFPage with the given COSDictionary.
 * @param p The COSDictionary representing the page.
 */
","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a FDFPageInfo object with the provided COSDictionary.
 */","* Constructor.
     *
     * @param p The FDF page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a FDFTemplate with the provided COSDictionary.
 * @param t The COSDictionary representing the template.
 */
","* Constructor.
     *
     * @param t The FDF page template.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AbstractFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AbstractFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes a new AbstractFixup instance.
 * @param document The document this fixup applies to.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AbstractProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AbstractProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes the processor with a provided PDDocument.
 * @param document The document to process.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",31,36,"/**
 * Constructs a CIDSystemInfo object.
 * @param registry The registry string.
 * @param ordering The ordering string.
 * @param supplement The supplement integer.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<init>,org.apache.pdfbox.pdmodel.font.CMapManager:<init>(),35,37,"/**
 * Private constructor to prevent external instantiation of CMapManager.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:<init>(org.apache.pdfbox.pdmodel.font.FontInfo),720,723,"/**
 * Initializes a FontMatch object with the provided FontInfo.
 * @param info The FontInfo object to use for matching.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers:<init>(),29,31,"/**
 * Private constructor to prevent direct instantiation of FontMappers.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes the PDCIDSystemInfo with the provided COSDictionary.
 * @param dictionary The COSDictionary containing system info.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Initializes a PDFontDescriptor with the provided COSDictionary.
 * @param desc The COSDictionary containing font descriptor information.
 */
","* Creates a PDFontDescriptor from a COS dictionary.
     *
     * @param desc The wrapped COS Dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",90,94,"/**
* Creates a FontType object.
* @param type Font type.
* @param subtype Font subtype.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<init>(),48,50,"/**
 * Private constructor to prevent direct instantiation of PDFontFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanose:<init>(byte[]),37,40,"/**
 * Initializes a PDPanose object with the provided byte array.
 * @param bytes The byte array representing the Panose data.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:<init>(byte[]),35,38,"/**
 * Initializes a PDPanoseClassification with the given byte array.
 * @param bytes The Panose classification bytes.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:<init>(org.apache.pdfbox.pdmodel.font.PDType3Font,org.apache.pdfbox.cos.COSStream)",54,58,"/**
 * Initializes a PDType3CharProc with a font and character stream.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<init>(),118,120,"/**
 * Private constructor to prevent direct instantiation of Standard14Fonts.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,<init>,org.apache.pdfbox.pdmodel.font.UniUtil:<init>(),27,29,"/**
 * Private constructor to prevent instantiation of the UniUtil class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(org.apache.pdfbox.cos.COSArray),57,60,"/**
 * Initializes a PDFontSetting with the provided font setting array.
 * @param fs The COSArray representing the font setting.
 */
","* Constructs a font setting from an existing array.
     *
     * @param fs The new font setting value.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(),41,45,"/**
 * Constructs a PDLineDashPattern with an empty dash array and phase 0.
 */","* Creates a new line dash pattern, with no dashes and a phase of 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",80,84,"/**
 * Constructs a BlendComposite with given blend mode and alpha.
 * @param blendMode Blend mode to use.
 * @param constantAlpha Constant alpha value.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendChannelFunction,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendFunction)",201,207,"/**
 * Constructs a BlendMode with a name, blend channel, and blend function.
 */","* Private constructor due to the limited set of possible blend modes.
     * 
     * @param name the corresponding COSName of the blend mode
     * @param blendChannel the blend function for separable blend modes
     * @param blend the blend function for non-separable blend modes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",121,126,"/**
 * Constructs a PDColor with a pattern name and color space.
 */","* Creates a PDColor containing the given pattern name.
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern is defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes a PDDeviceNAttributes object with the given attributes.
 * @param attributes COSDictionary containing device attributes.
 */
","* Creates a new DeviceN colour space attributes dictionary from the given dictionary.
     * @param attributes a dictionary that has all of the attributes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(org.apache.pdfbox.cos.COSDictionary),57,60,"/**
 * Initializes a PDDeviceNProcess with the given attributes.
 * @param attributes COSDictionary containing device process attributes
 */
","* Creates a new  DeviceN Process Dictionary from the given attributes.
     * @param attributes a DeviceN attributes dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(org.apache.pdfbox.cos.COSArray),51,54,"/**
 * Initializes a PDGamma object with the given COSArray.
 * @param array The COSArray containing gamma values.
 */
","* Creates a new gamma from a COS array.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Creates a PDOutputIntent object from a COSDictionary.
 * @param dictionary The COSDictionary containing intent data.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a PDTristimulus with the given COS array.
 * @param array COS array containing tristimulus values.
 */
","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a TransparencyGroupAttributes object with a COSDictionary.
 */","* Creates a group object from a given dictionary
     * @param dic {@link COSDictionary} object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:<init>(),45,47,"/**
 * Private constructor to prevent direct instantiation of CCITTFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<init>(),66,68,"/**
 * Private constructor to prevent direct instantiation of JPEGFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:<init>(),58,60,"/**
 * Private constructor to prevent direct instantiation of LosslessFactory.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<init>(),98,100,"/**
 * Private constructor to prevent instantiation of the class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<init>(),50,52,"/**
* Private constructor to prevent direct instantiation.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(org.apache.pdfbox.cos.COSDictionary),103,106,"/**
 * Initializes the PDOptionalContentProperties with a COSDictionary.
 * @param props The COSDictionary containing properties.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param props the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Initializes the pattern with the provided COSDictionary.
 * @param dictionary The COSDictionary containing pattern data.
 */
","* Creates a new Pattern dictionary from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(org.apache.pdfbox.cos.COSDictionary),94,97,"/**
 * Initializes a PDShading object with the provided dictionary.
 * @param shadingDictionary The COSDictionary for shading data.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,org.apache.pdfbox.util.Matrix)",34,38,"/**
 * Initializes a ShadingPaint with a shading and a matrix.
 * @param shading The shading to be used.
 * @param matrix The transformation matrix.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",69,73,"/**
 * Initializes a PDExtendedGraphicsState with a dictionary and cache.
 */","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",117,121,"/**
 * Initializes a PDSoftMask with a dictionary and resource cache.
 */","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.
     * @param resourceCache Resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:<init>(java.lang.String),135,138,"/**
 * Constructs a Paragraph object with the given text content.
 * @param text The text to be displayed within the paragraph.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Word:<init>(java.lang.String),305,308,"/**
 * Initializes a Word object with the given text content.
 * @param text The text content of the word.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),72,75,"/**
 * Initializes a Builder with the provided content stream.
 * @param contents The appearance content stream.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:<init>(org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder),127,137,"/**
 * Constructs a PlainTextFormatter with values from the Builder.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDAction object from a COSDictionary.
 * @param a The COSDictionary containing action data.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:<init>(),33,36,"/**
 * Private constructor to prevent instantiation; utility class.
 */",* Utility Class.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes the AdditionalActions object with the provided dictionary.
 * @param a The COSDictionary containing the additional actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the annotation actions with the provided COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the catalog actions with the provided COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the additional actions for a PDF form field.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the PDPageAdditionalActions with a COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDTargetDirectory with the given COSDictionary.
 * @param dictionary The COSDictionary for this target directory.
 */
","* Create a target directory from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes the PDURIDictionary with a given COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Initializes Windows launch parameters from a COSDictionary.
 * @param p The COSDictionary containing launch parameters.
 */
","* Constructor.
     *
     * @param p The params dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a PDAppearanceCharacteristicsDictionary with a COSDictionary.
 */","* Constructor.
     * 
     * @param dict dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDAppearanceDictionary with the given dictionary.
 * @param dictionary The COSDictionary to use for the appearance.
 */
","* Constructor for reading.
     *
     * @param dictionary The annotations dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(),37,39,"/**
 * Private constructor, prevents direct instantiation of this class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDAppearanceEntry from a COSDictionary.
 * @param entry The COSDictionary containing appearance data.
 */
","* Constructor for reading.
     * 
     * @param entry the dictionary of the appearance entry",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes the PDBorderEffectDictionary with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),79,82,"/**
 * Initializes the PDBorderStyleDictionary with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict a border style dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes the ExternalDataDictionary with a COSDictionary.
 * @param dictionary The COSDictionary to use for initialization.
 */
","* Constructor.
     * 
     * @param dictionary Dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,double,double,org.apache.pdfbox.pdmodel.common.PDRectangle)",66,73,"/**
 * Initializes a CloudyBorder object with provided parameters.
 * @param stream ContentStream for output.
 * @param intensity Intensity of the cloudy effect.
 * @param lineWidth Width of the border line.
 * @param rect Rectangle defining the border area.
 */
","* Creates a new <code>CloudyBorder</code> that writes to the specified
     * content stream.
     *
     * @param stream content stream
     * @param intensity intensity of cloudy effect (entry <code>I</code>); typically 1.0 or 2.0
     * @param lineWidth line width for annotation border (entry <code>W</code>)
     * @param rect annotation rectangle (entry <code>Rect</code>)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,80,"/**
 * Constructs a PDAbstractAppearanceHandler with annotation and document.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(org.apache.pdfbox.cos.COSDictionary),52,56,"/**
 * Initializes a PDPropBuild with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(org.apache.pdfbox.cos.COSDictionary),49,54,"/**
 * Initializes the PDPropBuildDataDict with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(org.apache.pdfbox.cos.COSDictionary),95,99,"/**
 * Creates a PDSeedValue object from a COSDictionary.
 * @param dict The COSDictionary containing the seed value data.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(org.apache.pdfbox.cos.COSDictionary),83,87,"/**
 * Constructs a PDSeedValueCertificate from a COSDictionary.
 * @param dict The COSDictionary containing certificate data.
 */
","* Constructor.
     *
     * @param dict The certificate seed value dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Constructs a PDSeedValueMDP with the given COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes a PDSeedValueTimeStamp with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(org.apache.pdfbox.cos.COSDictionary),101,104,"/**
 * Initializes a PDSignature with the provided COSDictionary.
 * @param dict The COSDictionary containing signature data.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:<init>(),49,52,"/**
 * Default constructor. Initializes pageNo to 0.
 */",* Creates the default signature options.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:<init>(org.apache.pdfbox.pdfwriter.COSWriter),34,37,"/**
* Initializes SigningSupport with a COSWriter instance.
* @param cosWriter The COSWriter used for writing COS objects.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<init>(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateBuilder),54,57,"/**
 * Constructs a PDFTemplateCreator with a given PDFTemplateBuilder.
 * @param templateBuilder The builder used to create the PDF template.
 */
","* Constructor.
     * 
     * @param templateBuilder the template builder",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:<init>(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),33,36,"/**
* Initializes the iterator with a starting outline item.
* @param startingItem The initial PDOutlineItem for iteration.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:<init>(java.lang.String,java.lang.String)",49,53,"/**
 * Constructs a KeyValue object with the given key and value.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<init>(),75,77,"/**
 * Private constructor to prevent instantiation of FieldUtils class.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",62,67,"/**
* Constructs a PDField object.
* @param acroForm The parent AcroForm.
* @param field The field dictionary.
* @param parent The parent non-terminal field.
*/
","* Constructor.
     *  @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:<init>(),38,40,"/**
 * Private constructor to prevent direct instantiation of the class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:<init>(org.apache.pdfbox.cos.COSBase),45,48,"/**
 * Initializes a PDXFAResource with the provided XFA base object.
 * @param xfaBase The XFA base object to associate with this resource.
 */
","* Constructor.
     *
     * @param xfaBase The xfa resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a PDMeasureDictionary with the provided COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),77,80,"/**
* Initializes the PDNumberFormatDictionary with a COSDictionary.
* @param dictionary The COSDictionary to use for initialization.
*/
","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a PDViewportDictionary with the given COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Initializes a PDThread object with a COSDictionary.
 * @param t The COSDictionary representing the thread.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param t The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(org.apache.pdfbox.cos.COSDictionary),43,46,"/**
 * Initializes a PDThreadBead with the provided COSDictionary.
 * @param b The COSDictionary representing the thread bead.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param b The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(org.apache.pdfbox.cos.COSDictionary),146,149,"/**
 * Initializes PDViewerPreferences with a given COSDictionary.
 * @param dic The COSDictionary containing viewer preferences.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawerParameters.java,<init>,"org.apache.pdfbox.rendering.PageDrawerParameters:<init>(org.apache.pdfbox.rendering.PDFRenderer,org.apache.pdfbox.pdmodel.PDPage,boolean,org.apache.pdfbox.rendering.RenderDestination,java.awt.RenderingHints,float)",43,53,"/**
 * Initializes a PageDrawerParameters object with rendering details.
 * @param renderer PDFRenderer instance, page, flags, destination, hints, threshold
 */
",* Package-private constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(),2148,2151,"/**
 * Default constructor. Initializes textPosition to null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(org.apache.pdfbox.text.TextPosition),2153,2156,"/**
 * Constructs a LineItem with the given text position.
 * @param textPosition The position of the text in the line.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper:<init>(org.apache.pdfbox.text.TextPosition),2222,2225,"/**
 * Constructs a PositionWrapper with the given text position.
 * @param position The text position to wrap.
 */
","* Constructs a PositionWrapper around the specified TextPosition object.
         *
         * @param position the text position.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,"org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions:<init>(java.lang.String,java.util.List)",2180,2184,"/**
 * Initializes a WordWithTextPositions object.
 * @param word The word to be associated.
 * @param positions Text positions associated with the word.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<init>,org.apache.pdfbox.util.DateConverter:<init>(),69,71,"/**
 * Private constructor to prevent instantiation of the class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<init>,org.apache.pdfbox.util.Hex:<init>(),45,45,"/**
 * Private constructor to prevent instantiation of the Hex class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,<init>,org.apache.pdfbox.util.IterativeMergeSort:<init>(),47,50,"/**
 * Private constructor to prevent instantiation; utility class.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(),41,51,"/**
 * Initializes a 3x3 matrix with identity values.
 */",* Constructor. This produces an identity matrix.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(float[]),57,60,"/**
 * Initializes a Matrix with data from a float array.
 * @param src The float array to initialize the matrix.
 */
","* Constructor. This produces a matrix with the given array as data.
     * The source array is not copied or cloned.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,"org.apache.pdfbox.util.Matrix:<init>(float,float,float,float,float,float)",101,111,"/**
 * Initializes a 3x3 matrix with given values.
 * @param a, b, c, d, e, f matrix elements
 */
","* Creates a transformation matrix with the given 6 elements. Transformation matrices are
     * discussed in 8.3.3, ""Common Transformations"" and 8.3.4, ""Transformation Matrices"" of the PDF
     * specification. For simple purposes (rotate, scale, translate) it is recommended to use the
     * static methods below.
     *
     * Produces the following matrix:
     * a b 0
     * c d 0
     * e f 1
     *
     * @see Matrix#getRotateInstance(double, float, float)
     * @see Matrix#getScaleInstance(float, float)
     * @see Matrix#getTranslateInstance(float, float)
     *
     * @param a the X coordinate scaling element (m00) of the 3x3 matrix
     * @param b the Y coordinate shearing element (m10) of the 3x3 matrix
     * @param c the X coordinate shearing element (m01) of the 3x3 matrix
     * @param d the Y coordinate scaling element (m11) of the 3x3 matrix
     * @param e the X coordinate translation element (m02) of the 3x3 matrix
     * @param f the Y coordinate translation element (m12) of the 3x3 matrix",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,<init>,org.apache.pdfbox.util.NumberFormatUtil:<init>(),55,57,"/**
 * Private constructor to prevent instantiation of NumberFormatUtil.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,<init>,"org.apache.pdfbox.util.Vector:<init>(float,float)",28,32,"/**
* Constructs a Vector with specified x and y coordinates.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<init>,org.apache.pdfbox.util.Version:<init>(),38,41,"/**
 * Private constructor, prevents external instantiation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,<init>,org.apache.pdfbox.util.XMLUtil:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of XMLUtil class.
 */","* Utility class, should not be instantiated.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<init>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<init>(),73,75,"/**
 * Private constructor to prevent instantiation of the class.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFStreamEngine:<init>(),103,105,"/**
 * Private constructor to prevent direct instantiation of PDFStreamEngine.
 */",* Creates a new PDFStreamEngine.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,addOperator,org.apache.pdfbox.contentstream.PDFStreamEngine:addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor),112,115,"/**
* Processes an operator using operators.m2 with provided data.
*/","* Adds an operator processor to the engine.
     *
     * @param op operator processor",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,createBlendModeMap,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:createBlendModeMap(),165,187,"/**
 * Creates a map of COSName to BlendMode constants.
 * @return Map containing blend mode mappings.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,setTerminator,org.apache.pdfbox.filter.ASCII85OutputStream:setTerminator(char),71,78,"/**
* Sets the terminator character.
* @param term The terminator character (118-126, excluding 'z').
* @throws IllegalArgumentException if term is invalid.
*/
","* This will set the terminating character.
     *
     * @param term The terminating character.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setSplitAtPage,org.apache.pdfbox.multipdf.Splitter:setSplitAtPage(int),632,639,"/**
 * Sets the page split size.
 * @param split The number of pages to split into. Must be > 0.
 */","* This will tell the splitting algorithm where to split the pages.  The default
     * is 1, so every page will become a new document.  If it was two then each document would
     * contain 2 pages.  If the source document had 5 pages it would split into
     * 3 new documents, 2 documents containing 2 pages and 1 document containing one
     * page.
     *
     * @param split The number of pages each split document should contain.
     * @throws IllegalArgumentException if the page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setStartPage,org.apache.pdfbox.multipdf.Splitter:setStartPage(int),647,654,"/**
* Sets the start page.
* @param start The start page number (must be > 0).
*/","* This will set the start page.
     *
     * @param start the 1-based start page
     * @throws IllegalArgumentException if the start page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setEndPage,org.apache.pdfbox.multipdf.Splitter:setEndPage(int),662,669,"/**
* Sets the end page value. Throws exception if end <= 0.
*/","* This will set the end page.
     *
     * @param end the 1-based end page
     * @throws IllegalArgumentException if the end page is smaller than one.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,setLenient,org.apache.pdfbox.pdfparser.COSParser:setLenient(boolean),419,426,"/**
 * Sets the lenient parsing mode. Throws exception if parsing is done.
 * @param lenient The lenient mode to set.
 */","* Change the parser leniency flag.
     *
     * This method can only be called before the parsing of the file.
     *
     * @param lenient try to handle malformed PDFs.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(int),46,53,"/**
 * Initializes CompressParameters with the given object stream size.
 * @param objectStreamSize The size of the object stream.
 */
","* Sets the number of objects, that can be contained in compressed object streams. Higher object stream sizes may
     * cause PDF readers to slow down during the rendering of PDF documents, therefore a reasonable value should be
     * selected. A value of 0 disables the compression.
     *
     * @param objectStreamSize The number of objects, that can be contained in compressed object streams.
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache,java.util.Map)",109,123,"/**
 * Constructs a PDResources object.
 * @param resourceDictionary Resource dictionary.
 * @param resourceCache Resource cache.
 * @param directFontCache Direct font cache.
 */
","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.
     * @param directFontCache The document's direct font cache. Must be mutable",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),307,314,"/**
* Sets the blend mode.
* @param blendMode The blend mode to set; throws IllegalArgumentException if null.
*/","* Sets the blend mode in the current graphics state
     *
     * @param blendMode blend mode
     * @throws IllegalArgumentException if blendMode is null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,53,"/**
 * Constructs a PDFieldTree with the given AcroForm.
 * @param acroForm The root AcroForm for the tree.
 * @throws IllegalArgumentException if acroForm is null.
 */
","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getLength,org.apache.pdfbox.cos.COSStream:getLength(),331,340,"/**
* Returns the length of the COS stream.
* Throws IllegalStateException if stream is open.
*/","* Returns the length of the encoded stream.
     *
     * @return length in bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setValue,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:setValue(java.lang.Object),45,52,"/**
 * Sets the value of the trie node. Throws exception if already set.
 * @param value The value to set.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,org.apache.pdfbox.multipdf.PDFMergerUtility:<init>(),147,150,"/**
 * Default constructor. Initializes an empty list of PDF sources.
 */",* Instantiate a new PDFMergerUtility.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<init>(org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool),69,72,"/**
* Initializes the COSWriterObjectStream with a compression pool.
* @param compressionPool Compression pool to use for compression.
*/
","* Creates an object stream for compressible objects from the given {@link COSWriterCompressionPool}. The objects
     * must first be prepared for this object stream, by adding them via calling
     * {@link COSWriterObjectStream#prepareStreamObject(COSObjectKey, COSBase)} and will be written to this
     * {@link COSStream}, when {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @param compressionPool The compression pool an object stream shall be created for.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObjects,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObjects(),41,48,"/**
 * Returns the list of objects. Creates a new list if it's null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumbers,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumbers(),50,57,"/**
 * Returns the list of revision numbers. Creates if null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:<init>(),68,70,"/**
 * Default constructor for the PublicKeyProtectionPolicy class.
 */",* Creates a new PublicKeyProtectionPolicy with an empty recipients list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginTextClip,org.apache.pdfbox.rendering.PageDrawer:beginTextClip(),465,469,"/**
 * Initializes the textClippings list as a new ArrayList.
 */","* Begin buffering the text clipping path, if any.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,equals,org.apache.pdfbox.cos.COSName:equals(java.lang.Object),737,741,"/**
* Checks if object is COSName and recurses with its name.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,fromString,org.apache.pdfbox.pdmodel.PageLayout:fromString(java.lang.String),54,64,"/**
 * Finds PageLayout by value.
 * @param value The value to search for.
 * @throws IllegalArgumentException if not found.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,fromString,org.apache.pdfbox.pdmodel.PageMode:fromString(java.lang.String),45,55,"/**
 * Finds PageMode by value. Throws IllegalArgumentException if not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,fromString,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:fromString(java.lang.String),47,59,"/**
* Finds RenderingIntent by value; returns RELATIVE_COLORIMETRIC if not found.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.io.File),308,311,"/**
* Delegates file processing to sources.m1.
* @param source The file to be processed.
*/","* Add a source file to the list of files to merge.
     *
     * @param source File representing source document
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(org.apache.pdfbox.io.RandomAccessRead),319,322,"/**
* Delegates reading to the 'sources' object's m1 method.
* @param source RandomAccessRead object to be used for reading.
*/","* Add a source to the list of documents to merge.
     *
     * @param source RandomAccessRead representing source document. To pass an InputStream, wrap it
     * into a {@link RandomAccessReadBuffer}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addName,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addName(java.lang.String),35,38,"/**
* Delegates instruction execution to the m1 method.
* @param name The name to pass to the m1 method.
*/","* Add a name (ex. an operator)
     * @param name the name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addProc,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence),71,74,"/**
* Adds an instruction sequence to the instruction list.
* @param child The instruction sequence to add.
*/
","* Adds a proc (sub-sequence of instructions).
     * @param child the child proc",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,addRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),76,79,"/**
* Delegates recipient processing to the recipients manager.
* @param recipient The recipient to be processed.
*/","* Adds a new recipient to the recipients list.
     * @param recipient A new recipient.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,addWord,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:addWord(org.apache.pdfbox.pdmodel.interactive.PlainText$Word),288,291,"/**
* Calls the m1 method on the 'words' object with the given word.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,addRegion,"org.apache.pdfbox.text.PDFTextStripperByArea:addRegion(java.lang.String,java.awt.geom.Rectangle2D)",68,72,"/**
* Registers a region and its area.
* @param regionName Region identifier.
* @param rect Bounding rectangle of the region.
*/","* Add a new region to group text by.
     *
     * @param regionName The name of the region.
     * @param rect The rectangle area to retrieve the text from. The y-coordinates are java
     * coordinates (y == 0 is top), not PDF coordinates (y == 0 is bottom).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ClosePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,52,"/**
* Closes the current path, logging if no MoveTo exists.
* @param operator The operator being processed.
* @param operands The operands for the operator.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setTrailer(org.apache.pdfbox.cos.COSDictionary),197,206,"/**
* Sets the trailer of the current Xref trailer object.
* @param trailer The COSDictionary representing the trailer.
*/","* Adds trailer information for current XRef object.
     *
     * @param trailer the current document trailer dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(),296,300,"/**
 * Creates an InputStream from the decoded data.
 * @return InputStream backed by the decoded data.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getObject(org.apache.pdfbox.cos.COSObjectKey),126,129,"/**
* Retrieves a COSBase object from the key pool.
* @param key The key to retrieve the COSBase object with.
* @return The COSBase object associated with the key.
*/
","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.
     *
     * @param key The {@link COSObjectKey} a registered {@link COSBase} shall be found for.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,getOperator,org.apache.pdfbox.pdmodel.common.function.type4.Operators:getOperator(java.lang.String),136,139,"/**
* Retrieves an operator by name.
* @param operatorName Name of the operator to retrieve.
* @return The operator object.
*/
","* Returns the operator for the given operator name.
     * @param operatorName the operator name
     * @return the operator (or null if there's no such operator",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,sequenceToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:sequenceToName(java.lang.String),197,205,"/**
 * Converts a Unicode sequence to a name, or "".notdef"" if not found.
 */","* Returns the name for a given sequence of Unicode characters.
     *
     * @param unicodeSequence sequence of Unicode characters
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getStreamCache,org.apache.pdfbox.cos.COSDocument:getStreamCache(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),140,165,"/**
 * Creates a RandomAccessStreamCache, falling back to memory if errors occur.
 * @param streamCacheCreateFunction Function to create the cache.
 * @return RandomAccessStreamCache or null if creation fails.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,operatorException,"org.apache.pdfbox.contentstream.PDFStreamEngine:operatorException(org.apache.pdfbox.contentstream.operator.Operator,java.util.List,java.io.IOException)",959,986,"/**
* Handles exceptions during operator execution, logging specific types.
* @param operator The operator being executed.
* @param operands List of operands.
* @param exception The exception to handle.
*/","* Called when an exception is thrown by an operator.
     *
     * @param operator The unknown operator.
     * @param operands The list of operands.
     * @param exception the excpetion which occured when processing the operator
     * 
     * @throws IOException if there is an error processing the operator exception",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsState(),1039,1042,"/**
 * Retrieves the masked graphics state from the graphics stack.
 */",* @return Returns the graphicsState.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,restoreGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:restoreGraphicsState(),999,1002,"/**
* Calls the m1 method on the graphicsStack object.
*/",* Pops the current graphics state from the stack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsStackSize,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsStackSize(),1031,1034,"/**
* Retrieves a value from the graphics stack.
* @return An integer value obtained from the graphics stack.
*/
",* @return Returns the size of the graphicsStack.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transformPoint,"org.apache.pdfbox.util.Matrix:transformPoint(float,float)",345,354,"/**
 * Transforms coordinates (x, y) using a predefined matrix.
 * @param x x-coordinate
 * @param y y-coordinate
 * @return Transformed Point2D.Float object
 */","* Transforms the given point by this matrix.
     *
     * @param x x-coordinate
     * @param y y-coordinate
     *
     * @return the transformed point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,decreaseLevel,org.apache.pdfbox.contentstream.PDFStreamEngine:decreaseLevel(),1170,1177,"/**
 * Decrements the 'level' variable and logs if it becomes negative.
 */","* Decrease the level. Call this after running a potentially recursive operation. A log message
     * is shown if the level is below 0. This can happen if the level is not decreased after an
     * operation is done, e.g. by using a ""finally"" block.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addInteger,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addInteger(int),44,47,"/**
* Delegates processing of the given value to m1 in instructions.
* @param value The integer value to be processed.
*/","* Adds an int value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,createDiacritics,org.apache.pdfbox.text.TextPosition:createDiacritics(),125,160,"/**
 * Creates a map of integer codes to Unicode combining characters.
 * @return Map containing the code-character mappings.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:isDataEmpty(),83,87,"/**
* Checks if a patch is needed based on the patch list.
* @return True if a patch is required, false otherwise.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:setExportValues(java.util.List),64,71,"/**
* Validates input list; throws exception if invalid.
* @param values List of strings to validate.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toString,org.apache.pdfbox.pdmodel.font.PDFont:toString(),666,670,"/**
* Concatenates the result of m1().m2() and m3, separated by a space.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toString,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:toString(),65,69,"/**
* Returns a string representation of the key-value pair.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/MissingOperandException.java,<init>,"org.apache.pdfbox.contentstream.operator.MissingOperandException:<init>(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",29,32,"/**
 * Constructs a MissingOperandException with operator and operands.
 * @param operator The operator involved.
 * @param operands List of operands provided.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/EmptyGraphicsStackException.java,<init>,org.apache.pdfbox.contentstream.operator.state.EmptyGraphicsStackException:<init>(),32,35,"/**
 * Constructs an EmptyGraphicsStackException with a descriptive message.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,checkClosed,org.apache.pdfbox.cos.COSStream:checkClosed(),105,114,"/**
 * Throws IOException if randomAccess is closed and cannot be read.
 */","* Throws if the random access backing store has been closed. Helpful for catching cases where
     * a user tries to use a COSStream which has outlived its COSDocument.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,reset,org.apache.pdfbox.filter.ASCII85InputStream:reset(),269,273,"/**
* Throws an IOException to indicate reset functionality is unsupported.
*/","* Unsupported.
     *
     * @throws IOException telling that this is an unsupported action.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,reset,org.apache.pdfbox.filter.CCITTFaxDecoderStream:reset(),492,495,"/**
* Throws an IOException indicating mark/reset functionality is unsupported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,reset,org.apache.pdfbox.filter.FlateFilterDecoderStream:reset(),239,243,"/**
* Throws an IOException indicating that reset is not supported.
*/","* Unsupported.
     *
     * @throws IOException always throw as reset is an unsupported feature.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/MissingImageReaderException.java,<init>,org.apache.pdfbox.filter.MissingImageReaderException:<init>(java.lang.String),33,36,"/**
 * Constructs a MissingImageReaderException with the given message.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getEncryption,org.apache.pdfbox.pdfparser.COSParser:getEncryption(),1164,1172,"/**
* Returns the encryption object for the document.
* @throws IOException if the document hasn't been parsed.
*/","* This will get the encryption dictionary. The document must be parsed before this is called.
     *
     * @return The encryption dictionary of the document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getAccessPermission,org.apache.pdfbox.pdfparser.COSParser:getAccessPermission(),1181,1189,"/**
* Returns the access permission for the document.
* @throws IOException if document is not parsed.
*/","* This will get the AccessPermission. The document must be parsed before this is called.
     *
     * @return The access permission of document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/MissingResourceException.java,<init>,org.apache.pdfbox.pdmodel.MissingResourceException:<init>(java.lang.String),27,30,"/**
 * Constructs a MissingResourceException with the specified message.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/InvalidPasswordException.java,<init>,org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException:<init>(java.lang.String),31,34,"/**
 * Constructs an InvalidPasswordException with the given error message.
 */
","* Creates a new InvalidPasswordException.
     * @param message A msg to go with this exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<init>,org.apache.pdfbox.contentstream.operator.Operator:<init>(java.lang.String),44,51,"/**
 * Constructs an Operator with the given operator string.
 * @param aOperator The operator string; must not start with '/'.
 */
","* Constructor.
     *
     * @param aOperator The operator that this object will represent.
     * @throws IllegalArgumentException if the operator starts with ""/"".",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,toString,org.apache.pdfbox.contentstream.operator.Operator:toString(),102,106,"/**
 * Returns a string representation of the PDF operator.
 * @return String representation of the operator.
 */
","* This will print a string rep of this class.
     *
     * @return A string rep of this class.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toString,org.apache.pdfbox.cos.COSArray:toString(),516,520,"/**
 * Returns a string representation of the COSArray object.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,toString,org.apache.pdfbox.cos.COSName:toString(),731,735,"/**
 * Returns a string representation of the COSName object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,toString,org.apache.pdfbox.cos.COSObject:toString(),148,152,"/**
* Returns a string representation of COSObject, including m1().
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(org.apache.pdfbox.cos.COSName),88,96,"/**
* Retrieves a filter by name.
* @param filterName The name of the filter to retrieve.
* @return The filter object or throws IOException if invalid.
*/
","* Returns a filter instance given its COSName.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,checkArrayTypesClass,"org.apache.pdfbox.contentstream.operator.OperatorProcessor:checkArrayTypesClass(java.util.List,java.lang.Class)",77,80,"/**
* Checks if the first operand is an instance of the given class.
* @param operands List of operands.
* @param clazz Class to check against.
* @return True if the first operand is an instance of clazz.
*/
","* Check whether all operands list elements are an instance of a specific class.
     *
     * @param operands The operands list.
     * @param clazz The expected class.
     * @return true if all operands list elements are an instance of the given class",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addReal(float),53,56,"/**
* Executes instruction 'm1' with the given float value.
*/","* Adds a real value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,width,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:width(float),361,366,"/**
 * Sets the image width and updates related parameters.
 * @param width The desired width of the image.
 * @return The current PDVisibleSignDesigner object.
 */
","* 
     * @param width signature image width
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,height,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:height(float),382,387,"/**
* Sets the image height and updates related parameters.
* @param height The desired height of the image.
* @return The current PDVisibleSignDesigner instance.
*/
","* 
     * @param height signature image height
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getLen,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:getLen(java.awt.geom.Point2D,java.awt.geom.Point2D)",130,135,"/**
 * Calculates the squared distance between two points.
 * @param ps Start point.
 * @param pe End point.
 * @return Squared distance.
 */
","* Calculate the distance from point ps to point pe.
     *
     * @param ps one end of a line
     * @param pe the other end of the line
     * @return length of the line",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",162,165,"/**
 * Calculates a masked value using three Point2D objects.
 */","* A line from point p1 to point p2 defines an equation, adjust the form of
     * the equation to let the rhs equals 0, then calculate the lhs value by
     * plugging the coordinate of p in the lhs expression.
     *
     * @param p target point
     * @param p1 one end of a line
     * @param p2 the other end of a line
     * @return calculated value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",213,217,"/**
 * Calculates a masked value based on three 2D points.
 * @param p, p1, p2 Points to calculate the masked value from.
 * @return A double representing the masked value.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",64,69,"/**
 * Creates a new PDMarkedContent with tag and properties.
 * @param tag The tag for the marked content.
 * @param properties The properties of the marked content.
 */
","* Creates a new marked content object.
     * 
     * @param tag the tag
     * @param properties the properties",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getName(),59,63,"/**
* Delegates to COSName.CALGRAY.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getName(),53,57,"/**
* Returns the string representation of COSName.CALRGB.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getName(),116,120,"/**
* Delegates to COSName.DEVICECMYK.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:getName(),42,46,"/**
* Returns the string representation of COSName.DEVICEGRAY.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getName(),442,446,"/**
* Delegates to COSName.DEVICEN.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:getName(),43,47,"/**
* Returns the string representation of COSName.DEVICERGB.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getName(),146,150,"/**
* Delegates to COSName.ICCBASED.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getName(),98,102,"/**
* Delegates to COSName.INDEXED.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getName(),55,59,"/**
* Delegates to COSName.LAB.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getName(),68,72,"/**
* Delegates to COSName.PATTERN.m1() and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getName(),100,104,"/**
 * Delegates to COSName.SEPARATION.m1() and returns the result.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getType(),109,112,"/**
* Returns a pattern COS name.
*/","* This will return the paint type.
     * @return The type of object that this is.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getType(),115,118,"/**
* Returns the shading COS name.
*/","* This will return the type.
     *
     * @return the type of object that this is",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getDefaultValue(),198,209,"/**
 * Retrieves a string value from COSName.DV, or """" if not a COSName.
 */","* Returns the default value, if any.
     *
     * @return A non-null string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,unCheck,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:unCheck(),84,87,"/**
* Calls m2 with COSName.Off.m1() as an argument.
*/","* Unchecks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(java.util.List),356,365,"/**
 * Processes a list of PDFields, calling m1 on terminal fields.
 */","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of the specified fields.
     * 
     * @param fields a list of fields to be refreshed
     * @throws IOException if the appearance streams could not be refreshed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,53,"/**
* Processes COS arguments, extracting a tag and invoking m1().m2.
* @param operator Operator object, arguments list.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,44,"/**
* Executes a masked operation using the given operator and arguments.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,isWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:isWhitePoint(),71,76,"/**
 * Checks if wpX, wpY, and wpZ are all equal to 1.
 */","* Tests if the current point is the white point.
     *
     * @return true if the current point is the white point.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:calcColorTable(),138,156,"/**
* Generates an integer map based on domain values and shading type.
*/","* Calculate the color on the axial line and store them in an array.
     *
     * @return an array, index denotes the relative position, the corresponding
     * value is the color on the axial line
     * @throws IOException if the color conversion fails.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calcColorTable(),143,161,"/**
 * Generates an integer map based on radial shading values.
 * @return Integer array representing radial shading map.
 */","* Calculate the color on the line that connects two circles' centers and store the result in an
     * array.
     *
     * @return an array, index denotes the relative position, the corresponding value the color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createInitialCodeTable,org.apache.pdfbox.filter.LZWFilter:createInitialCodeTable(),261,271,"/**
 * Creates a list of byte arrays representing a code table.
 * @return List of byte arrays, including null terminators.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createCodeTable,org.apache.pdfbox.filter.LZWFilter:createCodeTable(),252,257,"/**
 * Creates and initializes a list of byte arrays.
 * Returns the initialized list.
 */",* Init the code table with 1 byte entries and the EOD and CLEAR_TABLE markers.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSources,org.apache.pdfbox.multipdf.PDFMergerUtility:addSources(java.util.List),329,332,"/**
* Delegates processing of a list of sources to the 'sources' object.
* @param sourcesList List of RandomAccessRead objects to process.
*/","* Add a list of sources to the list of documents to merge.
     *
     * @param sourcesList List of RandomAccessRead objects representing source documents",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,get,org.apache.pdfbox.cos.COSArray:get(int),294,297,"/**
 * Delegates to the objects list to retrieve an element by index.
 * @param index Index of the element to retrieve.
 * @return COSBase object at the specified index.
 */","* This will get an object from the array.  This will NOT dereference
     * the COS object.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,get,org.apache.pdfbox.pdmodel.common.COSArrayList:get(int),450,455,"/**
 * Delegates the m1 call to the actual implementation.
 * @param index Index of the element to retrieve.
 * @return The element at the given index.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,size,org.apache.pdfbox.cos.COSArray:size(),437,440,"/**
* Delegates the call to m1() to the objects instance.
*/","* This will get the size of this array.
     *
     * @return The number of elements in the array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,size,org.apache.pdfbox.pdmodel.common.COSArrayList:size(),132,136,"/**
 * Delegates m1() call to the actual implementation.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getNumberOfRecipients,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getNumberOfRecipients(),123,126,"/**
 * Retrieves a value from the recipients object using m1().
 */","* Returns the number of recipients
     * @return the number of recipients",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,ensureStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:ensureStream(),498,509,"/**
 * Advances to the next input stream if available.
 * Returns true if successful, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getInterWordSpacing,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:getInterWordSpacing(float),283,286,"/**
* Calculates a masked value based on width and lineWidth.
* @param width The total width.
* @return The calculated masked value.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,isEmpty,org.apache.pdfbox.cos.COSArray:isEmpty(),447,450,"/**
* Delegates the call to objects.m1() and returns the result.
*/","* Returns true if the container is empty, false otherwise.
     *
     * @return true if the container is empty, false otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSArrayList:isEmpty(),141,145,"/**
 * Delegates m1() call to the actual implementation.
 * @return The result of the actual implementation's m1().
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:isDataEmpty(),82,86,"/**
* Delegates to triangleList's m1() method and returns the result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,removeRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:removeRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),86,89,"/**
* Checks if the recipient is valid.
* @param recipient The recipient to check.
* @return True if valid, false otherwise.
*/
","* Removes a recipient from the recipients list.
     * @param recipient The recipient to remove.
     * @return true If a recipient was found and removed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,iterator,org.apache.pdfbox.cos.COSArray:iterator(),527,531,"/**
* Delegates to the objects iterator.
* @return An iterator for the objects.
*/","* Get access to the list.
     *
     * @return an iterator over the array elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,iterator,org.apache.pdfbox.pdmodel.common.COSArrayList:iterator(),159,163,"/**
* Delegates to the underlying iterator.
* @return Iterator for the underlying collection.
*/
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getRecipientsIterator,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getRecipientsIterator(),96,99,"/**
 * Returns an iterator for PublicKeyRecipient objects.
 */","* Returns an iterator to browse the list of recipients.
     * Object found in this iterator are <code>PublicKeyRecipient</code>.
     * @return The recipients list iterator.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toList,org.apache.pdfbox.cos.COSArray:toList(),669,672,"/**
 * Returns a new list containing all objects.
 * Returns a copy of the internal 'objects' list.
 */","*  Return contents of COSArray as a Java List.
     *
     *  @return the COSArray as List",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNameStringList,org.apache.pdfbox.cos.COSArray:toCOSNameStringList(),679,684,"/**
 * Extracts COS names from objects, returning them as a list.
 */","* This will return a list of names if the COSArray consists of COSNames only.
     * 
     * @return the list of names of the COSArray of COSNames",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSStringStringList,org.apache.pdfbox.cos.COSArray:toCOSStringStringList(),691,696,"/**
* Extracts string values from COS objects using a stream.
*/","* This will return a list of names if the COSArray consists of COSStrings only.
     * 
     * @return the list of names of the COSArray of COSStrings",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,getBoolean,org.apache.pdfbox.cos.COSBoolean:getBoolean(java.lang.Boolean),99,102,"/**
* Delegates to m2 with the primitive boolean value.
* @param value The boolean value to delegate.
* @return COSBoolean representation of the input.
*/","* This will get the boolean value.
     *
     * @param value Parameter telling which boolean value to get.
     *
     * @return The single boolean instance that matches the parameter.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,toString,org.apache.pdfbox.cos.COSBoolean:toString(),121,125,"/**
* Returns a masked version of the value using String.m1.
*/","* Return a string representation of this object.
     *
     * @return The string value of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,writePDF,org.apache.pdfbox.cos.COSBoolean:writePDF(java.io.OutputStream),151,161,"/**
 * Writes TRUE_BYTES or FALSE_BYTES to the output stream.
 * @param output The OutputStream to write to.
 */","* This will write this object out to a PDF stream.
     *
     * @param output The stream to write this object out to.
     *
     * @throws IOException If an error occurs while writing out this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,writePDF,org.apache.pdfbox.cos.COSNull:writePDF(java.io.OutputStream),65,68,"/**
 * Writes NULL_BYTES to the provided OutputStream.
 * @param output The OutputStream to write to.
 */","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeBytes,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeBytes(byte[]),1524,1527,"/**
* Writes byte array to the output stream.
* @param data The byte array to write.
* @throws IOException If an I/O error occurs.
*/","* Writes binary data to the content stream.
     * 
     * @param data as byte formatted to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,entrySet,org.apache.pdfbox.cos.COSDictionary:entrySet(),1233,1236,"/**
* Delegates to the wrapped collection's m1() method.
*/","* Returns the name-value entries in this dictionary. The returned set is in the order the entries were added to the
     * dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return name-value entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isEntryChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isEntryChanged(java.lang.Object,java.lang.Object)",177,184,"/**
 * Checks if a new entry replaces the old one, handling nulls.
 * @param oldEntry The previous entry.
 * @param newEntry The new entry.
 * @return True if the new entry replaces the old one.
 */
","* Is the value changed?
     * 
     * @param oldEntry old entry
     * @param newEntry new entry
     * @return <code>true</code> if the entry is changed, <code>false</code>
     * otherwise",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,size,org.apache.pdfbox.cos.COSDictionary:size(),122,125,"/**
 * Delegates the call to the m1 method of the items object.
 */","* This will return the number of elements in this dictionary.
     *
     * @return The number of elements in the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName),1177,1180,"/**
* Retrieves a COSBase object associated with the given key.
* @param key The key to look up in the items map.
* @return The COSBase object or null if not found.
*/
","* This will do a lookup into the dictionary.
     *
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,keySet,org.apache.pdfbox.cos.COSDictionary:keySet(),1221,1224,"/**
 * Delegates to the underlying items' m1() method.
 * @return A set of COS names.
 */
","* Returns the names of the entries in this dictionary. The returned set is in the order the entries were added to
     * the dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return names of the entries in this dictionary",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,forEach,org.apache.pdfbox.cos.COSDictionary:forEach(java.util.function.BiConsumer),1244,1247,"/**
* Applies the given action to each item in the items collection.
*/","* Convenience method that calls {@link Map#forEach(java.util.function.BiConsumer) Map.forEach(BiConsumer)}.
     *
     * @param action The action to be performed for each entry
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getValues,org.apache.pdfbox.cos.COSDictionary:getValues(),1254,1257,"/**
 * Returns a collection of COSBase objects from the 'items' collection.
 */","* This will get all of the values for the dictionary.
     *
     * @return All the values for the dictionary.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,addAll,org.apache.pdfbox.cos.COSDictionary:addAll(org.apache.pdfbox.cos.COSDictionary),1277,1280,"/**
* Processes dictionary items using the m1 method of the items object.
*/","* This will add all of the dictionaries keys/values to this dictionary. Existing key/value pairs will be
     * overwritten.
     *
     * @param dict The dictionaries to get the key/value pairs from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(org.apache.pdfbox.cos.COSName),1288,1291,"/**
* Delegates the call to the items' m1 method.
* @param name COSName to pass to the delegated method.
*/","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,tokenizeOnSpace,org.apache.pdfbox.util.StringUtil:tokenizeOnSpace(java.lang.String),36,39,"/**
 * Splits string by spaces, using lookbehind and lookahead assertions.
 * @param s The string to split.
 * @return String array of split substrings.
 */","* Split at spaces but keep them
     *
     * @param s
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseInt,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseInt(java.lang.String),112,115,"/**
 * Delegates to Integer.parseInt(token).
 * @param token The string to parse as an integer.
 * @return The integer value of the token.
 */
","* Parses a value of type ""int"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,java.lang.String)",73,88,"/**
 * Initializes a FontType object.
 * @param type Font type.
 * @param subtypeString Subtype string to determine font subtype.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunction:toString(),362,366,"/**
* Returns a string combining ""FunctionType"" and the result of m1().
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,setEncryptionKeyLength,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:setEncryptionKeyLength(int),46,53,"/**
* Sets the encryption key length.
* @param l Key length (40, 128, or 256). Throws IllegalArgumentException if invalid.
*/","* set the length in (bits) of the secret key that will be
     * used to encrypt document data.
     * The default value is 40 bits, which provides a low security level
     * but is compatible with old versions of Acrobat Reader.
     *
     * @param l the length in bits (must be 40, 128 or 256)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setStartPage,org.apache.pdfbox.text.PDFTextStripper:setStartPage(int),1077,1084,"/**
 * Sets the starting page number.
 * @param startPageValue The starting page (must be positive).
 */","* This will set the first page to be extracted by this class.
     *
     * @param startPageValue New value of 1-based startPage property.
     * 
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setEndPage,org.apache.pdfbox.text.PDFTextStripper:setEndPage(int),1105,1112,"/**
 * Sets the end page value. Throws exception if value is invalid.
 * @param endPageValue The end page value to set (must be > 0).
 */","* This will set the last page to be extracted by this class.
     *
     * @param endPageValue New value of 1-based endPage property.
     *
     * @throws IllegalArgumentException if the parameter is below 1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,hashCode,org.apache.pdfbox.cos.COSString:hashCode(),286,291,"/**
* Calculates a result based on bytes and a boolean flag.
* @return The calculated integer result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<init>,org.apache.pdfbox.filter.FilterFactory:<init>(),39,69,"/**
 * Initializes the filter factory by registering various decompression filters.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<init>,"org.apache.pdfbox.pdfparser.BruteForceParser:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.COSParser)",92,97,"/**
 * Initializes the BruteForceParser with a COSDocument and COSParser.
 */","* Constructor. Triggers a brute force search for all objects of the document.
     *
     * @param cosDocument the corresponding COS document
     * @param cosParser the COSParser to be used for reading the pdf
     * 
     * @throws IOException if the source data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:<init>(),72,75,"/**
 * Initializes an XrefTrailerObj with XRefType set to TABLE.
 */",*  Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary),74,83,"/**
 * Initializes PDResources with a COSDictionary.
 * @param resourceDictionary The COSDictionary containing resources.
 */
","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",91,100,"/**
 * Initializes a PDResources object.
 * @param resourceDictionary COSDictionary for resources.
 * @param resourceCache Resource cache to use.
 */
","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<init>(),82,129,"/**
 * Initializes the operators map with various operator constants.
 */",* Creates a new Operators object with the default set of operators.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGB(float[]),124,141,"/**
* Retrieves or calculates RGB color based on input float array.
* @param value Input float array representing color value.
* @return RGB color array or null if not found.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",98,102,"/**
 * Initializes a PDAcroForm with a document and form dictionary.
 */","* Constructor.
     *
     * @param doc The document that this form is part of.
     * @param form The existing acroForm.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<init>,org.apache.pdfbox.rendering.GlyphCache:<init>(org.apache.pdfbox.pdmodel.font.PDVectorFont),42,45,"/**
 * Initializes the GlyphCache with the provided PDF vector font.
 * @param font The PDF vector font to use for glyph caching.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getTrailerCount,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getTrailerCount(),142,145,"/**
* Returns a value from the bytePosToXrefMap.
*/","* Returns the count of trailers.
     *
     * @return the count of trailers.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getAllFilters,org.apache.pdfbox.filter.FilterFactory:getAllFilters(),99,102,"/**
* Retrieves a collection of filters.
* @return A collection of Filter objects.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectFromPool,org.apache.pdfbox.cos.COSDocument:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),505,514,"/**
 * Retrieves a COSObject from the object pool by key.
 * @param key COSObjectKey to retrieve the object with.
 * @return COSObject or null if the key is null.
 */
","* This will get an object from the pool.
     *
     * @param key The object key.
     *
     * @return The object in the pool or a new one if it has not been parsed yet.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,addXRefTable,org.apache.pdfbox.cos.COSDocument:addXRefTable(java.util.Map),521,524,"/**
* Updates the xref table with provided values.
* @param xrefTableValues Map of COSObjectKey to Long values.
*/","* Populate XRef HashMap with given values.
     * Each entry maps ObjectKeys to byte offsets in the file.
     * @param xrefTableValues  xref table entries to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseReal(java.lang.String),122,125,"/**
 * Delegates to Float.m1(token).
 * @param token The token to pass to Float.m1.
 * @return The result of Float.m1(token).
 */
","* Parses a value of type ""real"".
     * @param token the token to be parsed
     * @return the parsed value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,coerce,org.apache.pdfbox.cos.COSFloat:coerce(float),120,137,"/**
 * Handles special float values, returns value or adjusted float.
 */","* Check and coerce the value field to be between MIN_NORMAL and MAX_VALUE.
     * 
     * @param floatValue the value to be checked
     * @return the coerced value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getDir,org.apache.pdfbox.text.TextPosition:getDir(),245,284,"/**
* Adjusts the 'direction' based on textMatrix values.
* Returns the adjusted 'direction' value.
*/
","* Return the direction/orientation of the string in this object based on its text matrix. Only
     * angles of 0, 90, 180, or 270 are supported. To get other angles, use this code:
     * <pre>
     * TextPosition text = ...
     * Matrix m = text.getTextMatrix().clone();
     * m.concatenate(text.getFont().getFontMatrix());
     * int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY())));
     * </pre>
     *
     * @return The direction of the text (0, 90, 180, or 270).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,equals,org.apache.pdfbox.cos.COSFloat:equals(java.lang.Object),175,180,"/**
* Checks if object is COSFloat with matching value.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,hashCode,org.apache.pdfbox.cos.COSFloat:hashCode(),185,189,"/**
* Calls the m1 method on the value object.
* @return The result of calling m1 on the value object.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,formatString,org.apache.pdfbox.cos.COSFloat:formatString(),204,214,"/**
* Returns a masked string representation of the value.
* Uses valueAsString if available, otherwise calculates it.
*/","* Builds, if needed, and returns the string representation of the current value.
     * @return current value as string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSNull,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSNull(java.io.OutputStream),385,389,"/**
 * Writes ""null"" followed by a space to the output stream.
 */","* Write {@link COSNull} to the given stream.
     *
     * @param output The stream, that shall be written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,<init>,org.apache.pdfbox.cos.COSIncrement:<init>(org.apache.pdfbox.cos.COSUpdateInfo),67,70,"/**
* Initializes COSIncrement with the provided increment origin.
* @param incrementOrigin The source of the increment information.
*/
","* Creates a new {@link COSIncrement} for the given {@link COSUpdateInfo}, the increment will use it´s
     * {@link COSDocumentState} as it´s own origin and shall collect all updates contained in the given
     * {@link COSUpdateInfo}.<br>
     * Should the given object be {@code null}, the resulting increment shall be empty.
     *
     * @param incrementOrigin The {@link COSUpdateInfo} serving as an update source for this {@link COSIncrement}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<init>,org.apache.pdfbox.multipdf.PDFCloneUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),57,60,"/**
 * Initializes PDFCloneUtility with the destination document.
 * @param dest The destination PDDocument to clone to.
 */
","* Creates a new instance for the given target document.
     * 
     * @param dest the destination PDF document that will receive the clones",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(boolean),102,105,"/**
* Initializes the cache.
* @param enableStableCache Whether to enable stable cache.
*/
","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,isNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:isNeedToBeUpdated(),30,33,"/**
* Delegates to m1().m2() and returns the boolean result.
*/","* Get the update state for the COSWriter. This indicates whether an object is to be written
     * when there is an incremental save.
     *
     * @return the update state.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,contains,org.apache.pdfbox.cos.COSIncrement:contains(org.apache.pdfbox.cos.COSBase),243,246,"/**
* Checks if a COSBase object is present.
* Uses objects and processedObjects for the check.
*/","* Returns {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     *
     * @param base The {@link COSBase} to check.
     * @return {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     * @see #objects
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,isExcluded,org.apache.pdfbox.cos.COSIncrement:isExcluded(org.apache.pdfbox.cos.COSBase),325,328,"/**
* Checks if a COSBase object is excluded.
* @param base The COSBase object to check.
* @return True if excluded, false otherwise.
*/
","* Returns {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     *
     * @param base The {@link COSBase} to check for exclusion.
     * @return {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     * @see #excluded",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,add,org.apache.pdfbox.cos.COSIncrement:add(org.apache.pdfbox.cos.COSBase),275,281,"/**
 * Processes a COSBase object, delegating to objects if not null.
 */","* The given object and actual {COSBase}s shall be part of the increment and must be added to {@link #objects},
     * if possible.<br>
     * {@code null} values shall be skipped.
     *
     * @param object The {@link COSBase} to add to {@link #objects}.
     * @see #objects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,addProcessedObject,org.apache.pdfbox.cos.COSIncrement:addProcessedObject(org.apache.pdfbox.cos.COSObject),291,297,"/**
* Processes a COSObject, if it's not null.
* @param base The COSObject to process.
*/","* The given {@link COSObject} has been processed, or is being processed. It shall be added to
     * {@link #processedObjects} to skip it, should it be encountered again.<br>
     * {@code null} values shall be ignored.
     *
     * @param base The {@link COSObject} to add to {@link #processedObjects}.
     * @see #processedObjects",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,registerTrueTypeFontForClosing,org.apache.pdfbox.pdmodel.PDDocument:registerTrueTypeFontForClosing(org.apache.fontbox.ttf.TrueTypeFont),909,912,"/**
 * Delegates font closing to fontsToClose.
 * @param ttf The TrueTypeFont to be closed.
 */","* For internal PDFBox use when creating PDF documents: register a TrueTypeFont to make sure it is closed when the
     * PDDocument is closed to avoid memory leaks. Users don't have to call this method, it is done by the appropriate
     * PDFont classes.
     *
     * @param ttf the TrueTypeFont to be registered",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addToSubset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addToSubset(int),289,293,"/**
* Delegates code point processing to the subsetCodePoints object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,createWidgetDictionarySet,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:createWidgetDictionarySet(java.util.List),824,836,"/**
 * Extracts COSDictionaries from PDAnnotationWidgets in fields.
 * @param fields List of PDFields to process.
 * @return Set of extracted COSDictionaries.
 */","* Return a set of all annotation widget dictionaries related to the fields to be flattened.
     *
     * @param fields
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addGlyphIds,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addGlyphIds(java.util.Set),295,298,"/**
* Delegates glyph ID processing to allGlyphIds.
* @param glyphIds Set of glyph IDs to process.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getWidgets(),263,267,"/**
* Returns a list of annotation widgets.
* Implementation detail, returns a Collections result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getExportValues(),58,62,"/**
 * Retrieves a list of strings using Collections.m1().
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,<init>,"org.apache.pdfbox.cos.COSInputStream:<init>(java.io.InputStream,java.util.List)",85,89,"/**
 * Constructs a COSInputStream with an input stream and decode results.
 * @param input Input stream to read from.
 * @param decodeResults Decode results for image processing.
 */
","* Constructor.
     * 
     * @param input decoded stream
     * @param decodeResults results of decoding",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,<init>,org.apache.pdfbox.filter.ASCII85InputStream:<init>(java.io.InputStream),51,59,"/**
 * Constructs an ASCII85InputStream, initializing internal state.
 * @param is The input stream to decode from.
 */
","* Constructor.
     *
     * @param is The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:<init>(java.io.InputStream,int,int,long,boolean)",89,124,"/**
 * Initializes a CCITTFaxDecoderStream with given parameters.
 * @param stream Input stream for fax data.
 * @param columns Number of columns in the fax image.
 */","* Creates a CCITTFaxDecoderStream.
     * This constructor may be used for CCITT streams embedded in PDF files,
     * which use EncodedByteAlign.
     *
     * @param stream the compressed CCITT stream.
     * @param columns the number of columns in the stream.
     * @param type the type of stream, must be one of {@code COMPRESSION_CCITT_MODIFIED_HUFFMAN_RLE},
     *             {@code COMPRESSION_CCITT_T4} or {@code COMPRESSION_CCITT_T6}.
     * @param options CCITT T.4 or T.6 options.
     * @param byteAligned enable byte alignment used in PDF files (EncodedByteAlign).",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,get,org.apache.pdfbox.cos.COSInteger:get(long),87,100,"/**
 * Returns a COSInteger, caching within range [LOW, HIGH].
 * @param val The long value to wrap as a COSInteger.
 */","* Returns a COSInteger instance with the given value.
     *
     * @param val integer value
     * @return COSInteger instance",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,getInvalid,org.apache.pdfbox.cos.COSInteger:getInvalid(boolean),102,106,"/**
 * Returns Long.MAX_VALUE or Long.MIN_VALUE based on maxValue.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,equals,org.apache.pdfbox.cos.COSInteger:equals(java.lang.Object),126,130,"/**
* Checks if object is a COSInteger with matching m1 value.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,toString,org.apache.pdfbox.cos.COSInteger:toString(),145,149,"/**
 * Returns a string representation of COSInt object.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,writePDF,org.apache.pdfbox.cos.COSInteger:writePDF(java.io.OutputStream),214,217,"/**
* Writes a transformed string to the output stream.
* @param output The OutputStream to write to.
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,get,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:get(java.lang.Object),96,100,"/**
* Delegates method call to the wrapped object.
* @param key The key to pass to the wrapped object.
* @return The result of the wrapped object's method.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:hasExplicitWidth(int),282,286,"/**
* Checks if a value exists based on the given code.
* @param code Input code to process.
* @return True if a value exists, false otherwise.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFontName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFontName(java.lang.String),234,237,"/**
 * Retrieves the FontName based on the provided font name string.
 */","* Returns the base name of the font which the given font name maps to.
     *
     * @param fontName name of font, either a base name or an alias
     * @return the base name or null if this is not one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(java.lang.String,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName)",165,168,"/**
* Delegates font alias registration to the ALIASES manager.
* @param alias Font alias string.
* @param baseName Base font name.
*/","* Adds an alias name for a standard font to the map of known aliases to the map of aliases (alias as key, standard
     * name as value). We want a single lookup in tbaseNamehe map to find the font both by a base name or an alias.
     *
     * @param alias an alias for the font
     * @param baseName  the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,hashCode,org.apache.pdfbox.cos.COSName:hashCode(),743,747,"/**
* Delegates the method call to the 'name' object's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(org.apache.pdfbox.cos.COSName),749,753,"/**
* Delegates m1 call to the internal name object.
* @param other The other COSName object.
* @return The result of the delegated m1 call.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedExportValues(),122,145,"/**
* Selects export values based on a condition.
* Returns a list of selected export values.
*/","* This will get the selected export values.
     * <p>
     * A RadioButton might have an export value to allow field values
     * which can not be encoded as PDFDocEncoding or for the same export value 
     * being assigned to multiple RadioButtons in a group.<br>
     * To define an export value the RadioButton must define options {@link #setExportValues(List)}
     * which correspond to the individual items within the RadioButton.</p>
     * <p>
     * The method will either return the corresponding values from the options entry or in case there
     * is no such entry the fields value</p>
     * 
     * @return the export value of the field.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,isEmpty,org.apache.pdfbox.cos.COSName:isEmpty(),759,762,"/**
 * Delegates the call to m1() on the 'name' object.
 * Returns the result of that delegated call.
 */
","* Returns true if the name is the empty string.
     * @return true if the name is the empty string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeNumber,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeNumber(java.io.OutputStream,long,int)",221,234,"/**
 * Writes the bytes of a long to an OutputStream.
 * @param os Output stream to write to.
 * @param number Long value to write.
 * @param bytes Number of bytes to write.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAbstractContentStream:addComment(java.lang.String),1422,1431,"/**
 * Writes a comment to the output stream, ensuring no newlines.
 * @param comment The comment string to write.
 * @throws IllegalArgumentException if comment contains newline.
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeLine(),1513,1516,"/**
 * Writes a newline character to the output stream.
 */","* Writes a newline to the content stream as ASCII.
     * 
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,isFloat,org.apache.pdfbox.cos.COSNumber:isFloat(java.lang.String),97,109,"/**
 * Checks if the number contains '.' or 'e' characters.
 * @param number The number string to check.
 * @return True if the number contains '.' or 'e', false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getCharsUTF16BE,org.apache.pdfbox.util.Hex:getCharsUTF16BE(java.lang.String),132,148,"/**
 * Converts a string to a hexadecimal array.
 * @param text The string to convert.
 * @return Hexadecimal character array.
 */","* Takes the characters in the given string, convert it to bytes in UTF16-BE format
     * and build a char array that corresponds to the ASCII hex encoding of the resulting
     * bytes.
     *
     * Example:
     * <pre>
     *   getCharsUTF16BE(""ab"") == new char[]{'0','0','6','1','0','0','6','2'}
     * </pre>
     *
     * @param text The string to convert
     * @return The string converted to hex",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int,int)",54,66,"/**
 * Creates a COSObjectKey with the given number, generation, and index.
 * @param num Object number.
 * @param gen Generation number.
 * @param index Stream index.
 */
","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.
     * @param index The index within a compressed object stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,hashCode,org.apache.pdfbox.cos.COSObjectKey:hashCode(),134,138,"/**
* Delegates to Long.m1() with the 'numberAndGeneration' value.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,toString,org.apache.pdfbox.cos.COSObjectKey:toString(),140,144,"/**
* Concatenates strings from m1, m2, and appends "" R"".
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(org.apache.pdfbox.cos.COSObjectKey),146,150,"/**
* Compares this object with another based on numberAndGeneration.
* @param other The other COSObjectKey to compare to.
* @return The comparison result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getDefaultDecode(int),110,114,"/**
 * Calculates the minimum and maximum values for a color component.
 * @param bitsPerComponent Number of bits representing the component.
 * @return float[] containing min and max values.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calculateInputValues,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calculateInputValues(double,double)",304,335,"/**
* Calculates two roots of a quadratic equation.
* @param x, y coordinates for calculation.
* @return An array containing the two calculated roots.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorX,org.apache.pdfbox.util.Matrix:getScalingFactorX(),454,479,"/**
* Calculates a value based on single array elements.
* Returns single[0] if Float.m1() returns 0, otherwise calculates a sum.
*/","* Returns the x-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The x-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorY,org.apache.pdfbox.util.Matrix:getScalingFactorY(),486,494,"/**
* Returns a calculated float value based on array elements.
*/","* Returns the y-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The y-scaling factor.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,<init>,"org.apache.pdfbox.cos.COSOutputStream:<init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.RandomAccessStreamCache)",53,61,"/**
 * Initializes a COSOutputStream with filters, params, stream cache.
 */","* Creates a new COSOutputStream writes to an encoded COS stream.
     * 
     * @param filters Filters to apply.
     * @param parameters Filter parameters.
     * @param output Encoded stream.
     * @param streamCache Stream cache to use.
     * 
     * @throws IOException If there was an error creating a temporary buffer",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,<init>,org.apache.pdfbox.filter.ASCII85OutputStream:<init>(java.io.OutputStream),54,64,"/**
 * Constructs an ASCII85OutputStream, initializing internal state.
 * @param out The OutputStream to write the encoded data to.
 */
","* Constructor.
     *
     * @param out The output stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream),56,59,"/**
 * Constructs a COSStandardOutputStream with the given OutputStream.
 * @param out The OutputStream to wrap.
 */
","* Constructor.
     *
     * @param out The underlying stream to write to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream,long)",67,71,"/**
 * Initializes a COSStandardOutputStream at a specified position.
 * @param out The output stream.
 * @param position The starting position in the stream.
 */
","* Constructor.
     *
     * @param out The underlying stream to write to.
     * @param position The current position of output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,"org.apache.pdfbox.cos.COSOutputStream:write(byte[],int,int)",69,80,"/**
* Delegates m1 call to buffer or superclass.
* @param b byte array, off offset, len length
* @throws IOException if an I/O error occurs
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(int),82,93,"/**
 * Calls m1 on buffer or superclass if buffer is null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,flush,org.apache.pdfbox.cos.COSOutputStream:flush(),95,102,"/**
* Calls super.m1() if the buffer is null.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$1:close(),392,423,"/**
 * Releases resources held by streamCache, randomAccess, and readView.
 */","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$2:close(),392,423,"/**
 * Releases resources held by streamCache, randomAccess, and readView.
 */","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,parseWidth,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:parseWidth(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",187,202,"/**
 * Extracts a number from the arguments list.
 * @param operator Operator object.
 * @param arguments List of COSBase arguments.
 * @return Extracted number or throws IOException.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getBytes,org.apache.pdfbox.cos.COSString:getBytes(),247,250,"/**
* Returns a copy of the byte array.
* @return A new byte array with the same elements.
*/
","* Returns the raw bytes of the string using a new byte array. Best used with a PDF <i>byte string</i>.
     * 
     * @return a clone of the underlying byte[] representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,adjustUserKey,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:adjustUserKey(byte[]),1207,1225,"/**
 * Returns a masked user key, or the original if length is 48.
 * @param u User data as bytes.
 * @throws IOException if the length of u is invalid.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[])",1227,1233,"/**
 * Combines two byte arrays into a single array.
 * @param a First byte array.
 * @param b Second byte array.
 * @return Combined byte array.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[],byte[])",1235,1242,"/**
 * Concatenates three byte arrays into a single byte array.
 * @param a, b, c byte arrays to concatenate
 * @return A new byte array containing a, b, and c.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncate127,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncate127(byte[]),1244,1253,"/**
 * Truncates input byte array to a maximum length of 127 bytes.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,copyImageBytes,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:copyImageBytes(byte[],int,byte[],byte[],int)",538,546,"/**
* Copies data from transferRow to targetValues, updates alpha.
* @param transferRow Source data, @param indexInTranferRow start index
* @param targetValues Target data, @param alphaImageData alpha data
* @param alphaPtr Alpha data pointer
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteIncrement,org.apache.pdfbox.pdfwriter.COSWriter:doWriteIncrement(),852,861,"/**
 * Processes input stream, updating output stream.
 * Uses RandomAccessInputStream and ByteArrayOutputStream.
 */","* Write an incremental update for a non signature case. This can be used for e.g. augmenting
     * signatures.
     *
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getASCII,org.apache.pdfbox.cos.COSString:getASCII(),236,240,"/**
 * Converts byte array to String using US-ASCII charset.
 */","* Returns the content of this string as a PDF <i>ASCII string</i>.
     * 
     * @return the ASCII string representation of the COSString",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeCollectionFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeCollectionFile(byte[]),266,269,"/**
* Checks if the header is valid using FONT_TTF_COLLECTION.
* @param header byte array representing the header
* @return true if valid, false otherwise
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isOpenTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isOpenTypeFile(byte[]),271,274,"/**
 * Checks if the header indicates an OpenType font.
 * @param header Byte array representing the font header.
 * @return True if OpenType, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,isAcceptingUpdates,org.apache.pdfbox.cos.COSUpdateState:isAcceptingUpdates(),195,198,"/**
* Delegates m1() call to originDocumentState, returns true if not null.
*/","* Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     *
     * @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see COSDocumentState#isAcceptingUpdates()",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,set,"org.apache.pdfbox.cos.PDFDocEncoding:set(int,char)",112,116,"/**
* Maps a code to a Unicode character and updates reverse mapping.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,toString,org.apache.pdfbox.cos.PDFDocEncoding:toString(byte[]),121,136,"/**
 * Converts a byte array to a String using CODE_TO_UNI mapping.
 * @param bytes The byte array to convert.
 * @return The converted String.
 */",* Returns the string representation of the given PDFDocEncoded bytes.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,readOperator,org.apache.pdfbox.pdfparser.PDFStreamParser:readOperator(),412,443,"/**
* Extracts a function mask from the source, handling special cases.
*/","* This will read an operator from the stream.
     *
     * @return The operator that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,getBytes,org.apache.pdfbox.cos.PDFDocEncoding:getBytes(java.lang.String),141,149,"/**
 * Converts a string to a byte array using a custom encoding.
 * @param text The string to convert.
 * @return Byte array representing the encoded string.
 */
",* Returns the given string encoded with PDFDocEncoding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,containsChar,org.apache.pdfbox.cos.PDFDocEncoding:containsChar(char),156,159,"/**
* Delegates character conversion to UNI_TO_CODE.
* @param character The character to convert.
* @return True if conversion succeeds, false otherwise.
*/","* Returns true if the given character is available in PDFDocEncoding.
     *
     * @param character UTF-16 character",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsKey,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsKey(java.lang.Object),78,82,"/**
* Delegates method call to the wrapped object.
* @param key The key to pass to the wrapped object.
* @return The result of the wrapped object's method call.
*/
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,containsName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:containsName(java.lang.String),213,216,"/**
* Checks if a font name is an alias using ALIASES.m1.
* @param fontName The font name to check.
* @return True if the font name is an alias, false otherwise.
*/
","* Returns true if the given font name is one of the known names, including alias.
     *
     * @param fontName the name of font, either a base name or alias
     * @return true if the name is one of the known names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getCodeToNameMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getCodeToNameMap(),81,84,"/**
* Returns a map of code to name mappings.
*/","* Returns an unmodifiable view of the code -&gt; name mapping.
     * 
     * @return the code -&gt; name map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getNameToCodeMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getNameToCodeMap(),92,95,"/**
 * Returns a map from inverted, using Collections.m1.
 */","* Returns an unmodifiable view of the name -&gt; code mapping. More than one name may map to
     * the same code.
     *
     * @return the name -&gt; code map",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,setNeedToBeUpdated,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:setNeedToBeUpdated(boolean),40,44,"/**
 * Throws an UnsupportedOperationException.
 * @param flag Unused flag parameter.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:remove(),245,249,"/**
* Throws an UnsupportedOperationException, indicating unimplemented functionality.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,remove,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:remove(),416,421,"/**
* Throws an UnsupportedOperationException, indicating unimplemented functionality.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,getFunctionType,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:getFunctionType(),37,43,"/**
* Throws an UnsupportedOperationException. Placeholder method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encode(int),394,400,"/**
 * Throws an UnsupportedOperationException.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encodeGlyphId,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encodeGlyphId(int),402,406,"/**
* Throws an UnsupportedOperationException for glyph retrieval.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:addToSubset(int),433,437,"/**
 * Throws an UnsupportedOperationException for the given code point.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,subset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:subset(),439,444,"/**
 * Throws an UnsupportedOperationException, indicating unimplemented functionality.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",126,132,"/**
* Throws an UnsupportedOperationException. Subclasses must implement.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getNumberOfComponents(),74,78,"/**
* Throws an UnsupportedOperationException, indicating unimplemented functionality.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getDefaultDecode(int),80,84,"/**
* Throws an UnsupportedOperationException.
* @param bitsPerComponent Number of bits per component.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGB(float[]),92,96,"/**
* Throws an UnsupportedOperationException.
* @param value input float array, not used
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGBImage(java.awt.image.WritableRaster),98,102,"/**
* Throws an UnsupportedOperationException.
* Raster is unused.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRawImage(java.awt.image.WritableRaster),104,108,"/**
* Throws an UnsupportedOperationException.
* Raster is unused, indicating incomplete functionality.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,remove,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:remove(),71,75,"/**
 * Throws an UnsupportedOperationException, indicating unimplemented functionality.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,remove,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:remove(),102,106,"/**
 * Throws an UnsupportedOperationException, indicating unimplemented functionality.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,flush,org.apache.pdfbox.filter.CCITTFaxEncoderStream:flush(),89,92,"/**
* Delegates the m1 method call to the underlying stream.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,encode,"org.apache.pdfbox.filter.IdentityFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",42,48,"/**
* Encodes input stream to output stream using COSDictionary parameters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,org.apache.pdfbox.filter.ASCII85InputStream:read(),68,166,"/**
 * Reads a byte from the stream, handling Ascii85 decoding.
 * @return Decoded byte or -1 if end of stream.
 */","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,encode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",77,189,"/**
* Encodes input stream data using a run-length encoding scheme.
* @param input Input stream to encode.
* @param encoded Encoded output stream.
* @param parameters COSDictionary parameters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readCode(java.io.InputStream),317,321,"/**
* Delegates to the input stream's m1() method.
* @param in The input stream to delegate to.
* @return The result of the input stream's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1CFont:readCode(java.io.InputStream),306,310,"/**
* Delegates to the input stream's m1() method.
* @param in The input stream to delegate to.
* @return The result of the input stream's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1Font:readCode(java.io.InputStream),486,490,"/**
* Delegates to the input stream's m1() method.
* @param in The input stream to delegate to.
* @return The result of the input stream's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType3Font:readCode(java.io.InputStream),248,252,"/**
* Delegates to the input stream's m1() method.
* @param in The input stream to delegate to.
* @return The result of the input stream's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,close,org.apache.pdfbox.filter.ASCII85InputStream:close(),210,217,"/**
* Resets internal state and calls the superclass's m1 method.
*/","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,write,org.apache.pdfbox.filter.ASCII85OutputStream:write(int),153,177,"/**
 * Processes a byte, potentially triggering data output.
 * @param b The byte to process.
 */","* This will write a single byte.
     *
     * @param b The byte to write.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,flush,org.apache.pdfbox.filter.ASCII85OutputStream:flush(),184,226,"/**
 * Writes data, handles line breaks, and resets state.
 */","* This will flush the data to the stream.
     *
     * @throws IOException If there is an error writing the data to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,toString,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:toString(),519,522,"/**
 * Returns a string representation of the object's state.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,int)",528,558,"/**
* Traverses/creates a node path, setting value if at depth.
* @param depth Path depth.
* @param path Path bitmask.
* @param value Value to set at leaf node.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node)",560,590,"/**
* Traverses the tree based on depth and path, creating nodes if needed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,readBit,org.apache.pdfbox.filter.CCITTFaxDecoderStream:readBit(),409,425,"/**
 * Reads the next bit from the buffer, advancing the bufferPos.
 * Returns true if the bit is set, throws EOFException if stream ends.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncateOrPad,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncateOrPad(byte[]),976,984,"/**
 * Pads the password with ENCRYPT_PADDING.
 * @param password The password to pad.
 * @return Padded byte array.
 */","* This will take the password and truncate or pad it as necessary.
     *
     * @param password The password to pad or truncate.
     *
     * @return The padded or truncated password.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:<init>(java.io.OutputStream,int,int,int)",64,76,"/**
 * Initializes a CCITTFaxEncoderStream with given parameters.
 * @param stream Output stream for fax data.
 * @param columns Image column count.
 * @param rows Image row count.
 * @param fillOrder Fax fill order.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,close,org.apache.pdfbox.filter.CCITTFaxEncoderStream:close(),94,97,"/**
 * Delegates the m1 method call to the underlying stream.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAbstractContentStream:close(),1550,1558,"/**
 * Checks if endText() was called; logs a warning if not.
 * Writes to the output stream.
 */","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,importXMPMetadata,org.apache.pdfbox.pdmodel.common.PDMetadata:importXMPMetadata(byte[]),96,103,"/**
* Writes byte array to output stream.
* @param xmp The byte array to be written.
* @throws IOException If an I/O error occurs.
*/
","* Import an XMP stream into the PDF document.
     *
     * @param xmp The XMP data.
     *
     * @throws IOException If there is an error generating the XML document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,appendRawCommands,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:appendRawCommands(java.io.OutputStream,java.lang.String)",376,380,"/**
 * Writes commands to the output stream, then flushes.
 * @param os Output stream to write commands to.
 * @param commands String of commands to execute.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int,int)",236,253,"/**
* Writes bits from code to the stream, handling bit order.
* @param code The integer code to write.
* @param codeLength Length of the code in bits.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,fill,org.apache.pdfbox.filter.CCITTFaxEncoderStream:fill(),259,264,"/**
* Writes buffered data to stream and performs m2 operation.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,splitAtPage,org.apache.pdfbox.multipdf.Splitter:splitAtPage(int),732,735,"/**
 * Checks if a page number is a split boundary.
 * @param pageNumber The page number to check.
 * @return True if it's a split boundary, false otherwise.
 */","* Check if it is necessary to create a new document.
     * By default a split occurs at every page.  If you wanted to split
     * based on some complex logic then you could override this method.  For example.
     * <code>
     * protected void splitAtPage()
     * {
     *     // will split at pages with prime numbers only
     *     return isPrime(pageNumber);
     * }
     * </code>
     * @param pageNumber the 0-based page number to be checked as splitting page
     * 
     * @return true If a new document should be created.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransform,org.apache.pdfbox.filter.DCTFilter:getAdobeTransform(javax.imageio.metadata.IIOMetadata),182,201,"/**
 * Extracts the transform value from an Adobe marker sequence.
 * Returns 0 if not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransformByBruteForce,org.apache.pdfbox.filter.DCTFilter:getAdobeTransformByBruteForce(javax.imageio.stream.ImageInputStream),205,245,"/**
* Extracts a byte from the input stream based on Adobe markers.
* @param iis Input stream to read from.
* @return Extracted byte or 0 if not found.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromYCCKtoCMYK,org.apache.pdfbox.filter.DCTFilter:fromYCCKtoCMYK(java.awt.image.Raster),250,286,"/**
* Converts a raster to a writable raster with modified color values.
* @param raster Input raster to be converted
* @return WritableRaster with modified color values
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromBGRtoRGB,org.apache.pdfbox.filter.DCTFilter:fromBGRtoRGB(java.awt.image.Raster),289,310,"/**
* Swaps red and blue channels of a raster.
* @param raster Input raster.
* @return A new WritableRaster with swapped channels.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getNumChannels,org.apache.pdfbox.filter.DCTFilter:getNumChannels(javax.imageio.ImageReader),313,335,"/**
* Extracts the number of channels from image metadata.
* @param reader ImageReader object
* @return String representation of number of channels, """" on error
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,encode,"org.apache.pdfbox.filter.DCTFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",343,348,"/**
* Throws an exception as DCTFilter encoding is not implemented.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSourceRegion,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSourceRegion(java.awt.Rectangle),228,232,"/**
* Throws an exception as modification is not supported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingX(int),234,238,"/**
* Throws an exception to prevent modification of the instance.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingY(int),240,244,"/**
* Throws an exception to prevent modification of this instance.
* @param ssY Unused parameter, included for signature compatibility.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetX(int),246,250,"/**
* Throws an exception to prevent modification of the instance.
* @param ssOffsetX Unused parameter, included for compatibility.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetY(int),252,256,"/**
* Throws an exception as modification is not supported.
* @param ssOffsetY Unused parameter.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,encode,"org.apache.pdfbox.filter.JBIG2Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",148,153,"/**
* Throws an UnsupportedOperationException for JBIG2 encoding.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,encode,"org.apache.pdfbox.filter.JPXFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",208,213,"/**
* Throws an UnsupportedOperationException for JPX encoding.
* Indicates JPX encoding is not currently supported.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(int),361,365,"/**
* Throws an UnsupportedOperationException.
* @param i Unused integer parameter.
* @throws IOException if an I/O error occurs (unlikely).
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,putAll,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:putAll(java.util.Map),127,131,"/**
* Throws an UnsupportedOperationException, not yet implemented.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightY(float),39,43,"/**
* Throws an exception, indicating an immutable class operation.
* @param value Unused parameter, present for method signature.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightX(float),48,52,"/**
 * Throws an exception, indicating an immutable class operation.
 * @param value Unused value, signals an unsupported operation.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftY(float),57,61,"/**
 * Throws an exception as the class is immutable.
 * @param value Unused float value.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftX(float),66,70,"/**
* Throws an exception indicating the class is immutable.
* @param value Unused value, indicates operation is unsupported.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDFont:getPositionVector(int),236,240,"/**
* Throws an exception as horizontal fonts lack position vectors.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDType0Font:getStandard14Width(int),517,521,"/**
* Throws an UnsupportedOperationException, indicating unimplemented functionality.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncodingFromFont(),115,120,"/**
* Throws an UnsupportedOperationException for Type 3 fonts.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType3Font:getPath(java.lang.String),128,133,"/**
* Throws an UnsupportedOperationException for Type 3 fonts.
* @param name Font name (unused).
* @throws IOException if an I/O error occurs.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBoxFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBoxFont(),142,147,"/**
* Throws an UnsupportedOperationException for Type 3 fonts.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType3Font:encode(int),242,246,"/**
* Throws an UnsupportedOperationException for Type3 fonts.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:getCOSObject(),40,44,"/**
* Throws an exception as built-in encodings cannot be serialized.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getInitialColor(),70,74,"/**
* Throws an exception as JPX color spaces don't support drawing.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:toRGB(float[]),76,80,"/**
* Throws an exception as color spaces don't support drawing.
* @param value Input float array (unused).
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getCOSObject(),94,98,"/**
* Throws an exception as JPX color spaces don't support COS objects.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getSignatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getSignatureText(),555,558,"/**
 * Throws an UnsupportedOperationException, not yet implemented.
 */","* returns visible signature text
     * @return the visible signature's text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureText(java.lang.String),565,568,"/**
* Creates a PDVisibleSignDesigner. Not yet implemented.
* @param signatureText Signature text (unused).
*/","* 
     * @param signatureText - adds the text on visible signature
     * @return the signature design",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(java.lang.String),118,123,"/**
 * Throws an exception; signature fields don't support String values.
 */","* <b>This will throw an UnsupportedOperationException if used as the signature fields
     * value can't be set using a String</b>
     * 
     * @param value the plain text value.
     * 
     * @throws UnsupportedOperationException in all cases!",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,clipRegion,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",141,155,"/**
 * Adjusts a rectangle to fit within image bounds.
 * @param pdImage Image object.
 * @param region Rectangle to adjust.
 * @return Adjusted Rectangle.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getCompressionLevel,org.apache.pdfbox.filter.Filter:getCompressionLevel(),204,216,"/**
 * Gets the deflate compression level from system property.
 * Returns a default value if property is invalid.
 */",* @return the ZIP compression level configured for PDFBox,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,contains,org.apache.pdfbox.pdmodel.common.COSArrayList:contains(java.lang.Object),150,154,"/**
 * Delegates the call to the actual implementation.
 * @param o The object to pass to the actual implementation.
 * @return The result of the actual implementation.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,encode,"org.apache.pdfbox.filter.FlateFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",50,62,"/**
 * Compresses input stream to encoded output using Deflater.
 * @param input Input stream to compress.
 * @param encoded Encoded output stream.
 * @param parameters COSDictionary parameters.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<init>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<init>(java.io.InputStream),54,60,"/**
 * Initializes a FlateFilterDecoderStream with an input stream.
 * @param inputStream The input stream to decode.
 * @throws IOException if an I/O error occurs.
 */
","* Constructor.
     *
     * @param inputStream The input stream to actually read from.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,fetch,org.apache.pdfbox.filter.FlateFilterDecoderStream:fetch(),62,116,"/**
 * Decodes data using inflater, handling EOF and DataFormatExceptions.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,close,org.apache.pdfbox.filter.FlateFilterDecoderStream:close(),182,187,"/**
* Calls inflater's m1() and then calls the superclass's m2().
*/","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,logLevigoDonated,org.apache.pdfbox.filter.JBIG2Filter:logLevigoDonated(),52,61,"/**
 * Logs a message about the Levigo JBIG2 plugin donation.
 * Logs once; marks levigoLogged as true to prevent repeated logging.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<init>(),61,65,"/**
 * Initializes a PDVisibleSigBuilder, creating a PDF template structure.
 */","* Constructor, creates PDF template structure.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,setImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:setImage(java.awt.image.BufferedImage),455,462,"/**
* Sets image and initializes related dimensions and parameters.
*/","* Set image and its height and width.
     *
     * @param image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRawImage(java.awt.image.WritableRaster),245,249,"/**
* Converts a WritableRaster to a BufferedImage.
* @param raster The raster to convert.
* @return A BufferedImage representing the raster.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)",146,151,"/**
* Delegates rendering to groupG2D and alphaG2D.
* @param img The image to render.
* @param x X coordinate.
* @param y Y coordinate.
* @param observer ImageObserver for rendering status.
* @return True if rendering succeeds, false otherwise.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,dispose,org.apache.pdfbox.rendering.GroupGraphics:dispose(),125,130,"/**
* Calls m1() on groupG2D and alphaG2D.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,checkIndexBounds,"org.apache.pdfbox.filter.LZWFilter:checkIndexBounds(java.util.List,long,javax.imageio.stream.MemoryCacheImageInputStream)",130,144,"/**
 * Validates array index to prevent out-of-bounds access.
 * @param index The array index to validate.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,findPatternCode,"org.apache.pdfbox.filter.LZWFilter:findPatternCode(java.util.List,byte[])",229,247,"/**
 * Finds the index in codeTable matching the pattern.
 * Returns index or -1 if no match found.
 */","* Find a matching pattern in the code table.
     *
     * @param codeTable The LZW code table.
     * @param pattern The pattern to be searched for.
     * @return The index of the matching pattern or -1 if nothing is found.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeFile(byte[]),260,264,"/**
* Checks if header matches TTF or is a TrueType font.
* @param header byte array representing the header
* @return true if it's a TTF or TrueType font, false otherwise.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:<init>(java.io.OutputStream,int,int,int,int)",278,289,"/**
 * Initializes a PredictorOutputStream with specified parameters.
 * @param out Output stream; predictor, colors, bits, columns.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodePredictorRow,"org.apache.pdfbox.filter.Predictor:decodePredictorRow(int,int,int,int,byte[],byte[])",49,202,"/**
* Applies predictor to line data based on predictor type.
* @param predictor Predictor type; influences processing.
*/","* Decodes a single line of data in-place.
     * @param predictor Predictor value for the current line
     * @param colors Number of color components, from decode parameters.
     * @param bitsPerComponent Number of bits per components, from decode parameters.
     * @param columns Number samples in a row, from decode parameters.
     * @param actline Current (active) line to decode. Data will be decoded in-place,
     *                i.e. - the contents of this buffer will be modified.
     * @param lastline The previous decoded line. When decoding the first line, this
     *                 parameter should be an empty byte array of the same length as
     *                 <code>actline</code>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterPaeth,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterPaeth(int,int,int,int)",680,702,"/**
 * Calculates a byte value based on input integers x, a, b, c.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,estCompressSum,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:estCompressSum(byte[]),704,713,"/**
 * Calculates the sum of Math.m1 values of bytes in the array.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,equals,org.apache.pdfbox.pdmodel.PDPage:equals(java.lang.Object),805,809,"/**
 * Checks if the given object is a PDPage with the same m1 value.
 * @param other The object to compare.
 * @return True if the object is a PDPage with the same m1 value.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree$SearchContext:<init>(org.apache.pdfbox.pdmodel.PDPage),422,425,"/**
 * Initializes the SearchContext with a PDPage's COS object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,subsetDesignatedFonts,org.apache.pdfbox.pdmodel.PDDocument:subsetDesignatedFonts(),1062,1070,"/**
* Subsets fonts; iterates and calls m1 on each, then calls m2.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:reset(),77,80,"/**
* Calls the m1 method of the xrefTable object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,resetEngine,org.apache.pdfbox.text.PDFTextStripper:resetEngine(),223,229,"/**
 * Resets pagination and clears document/character data.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,"org.apache.pdfbox.multipdf.Overlay:getLayoutPage(int,int)",466,499,"/**
 * Retrieves a LayoutPage based on page number and number of pages.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSObjectKey),113,116,"/**
 * Checks if a key exists in the key pool.
 * @param key The COSObjectKey to check.
 * @return True if the key exists, false otherwise.
 */
","* Returns true, if a {@link COSBase} is registered for the given {@link COSObjectKey}.
     *
     * @param key The {@link COSObjectKey} that shall be checked for a registered {@link COSBase}.
     * @return True, if a {@link COSBase} is registered for the given {@link COSObjectKey}.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,registerHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",66,77,"/**
 * Registers a security handler with a name and policy.
 * @param name Handler name.
 * @param securityHandler Security handler class.
 * @param protectionPolicy Protection policy class.
 */
","* Registers a security handler.
     *
     * If the security handler was already registered an exception is thrown.
     * If another handler was previously registered for the same filter name or
     * for the same policy name, an exception is thrown
     *
     * @param name the name of the filter
     * @param securityHandler security handler class to register
     * @param protectionPolicy protection policy class to register",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(java.lang.String),143,146,"/**
* Delegates name to inverted.m1 for processing.
*/","* Determines if the encoding has a mapping for the given name value.
     * 
     * @param name PostScript glyph name
     * @return true if the encoding has a mapping for the given name value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(int),155,158,"/**
 * Delegates code conversion to m1.
 * @param code The code to convert.
 * @return True if conversion successful.
 */
","* Determines if the encoding has a mapping for the given code value.
     * 
     * @param code character code
     * @return if the encoding has a mapping for the given code value
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:<init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",132,136,"/**
 * Initializes a Tokenizer with input text and a SyntaxHandler.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,escapeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:escapeXML(java.lang.String),787,822,"/**
* Escapes a string for use within an XML document.
* Returns the escaped string.
*/","* Escape special characters.
     *
     * @param input the string to be escaped.
     *
     * @return the resulting string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),219,229,"/**
 * Sets the bounding box (bbox) in the PDF document.
 * @param bbox The bounding box rectangle. Null to clear.
 */","* This will set the BBox (bounding box) for this form.
     * @param bbox The new BBox for this form.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,float2String,org.apache.pdfbox.multipdf.Overlay:float2String(float),585,600,"/**
 * Masks a float value to a string, removing trailing zeros.
 * @param floatValue The float value to mask.
 * @return String representation of the masked float value.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeHex,org.apache.pdfbox.util.Hex:decodeHex(java.lang.String),219,245,"/**
 * Parses a string into a byte array, handling newline characters.
 */","* Decodes a hex String into a byte array.
     *
     * @param s A String with ASCII hex.
     * @return decoded byte array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,close,org.apache.pdfbox.pdmodel.PDDocument:close(),1266,1305,"/**
* Performs resource cleanup, throwing exception if any fails.
*/","* This will close the underlying COSDocument object.
     * 
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,close,org.apache.pdfbox.pdmodel.fdf.FDFDocument:close(),262,284,"/**
 * Handles document loading, catching and throwing IOExceptions.
 */","* This will close the underlying COSDocument object.
     *
     * @throws IOException If there is an error releasing resources.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getOnValues(),91,95,"/**
 * Returns a set of strings. Delegates to Collections.m1() for the result.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,hasNext,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:hasNext(),38,51,"/**
 * Checks if a sibling item is not a child of the starting item.
 * @return True if sibling is not a child, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getCOSObject,org.apache.pdfbox.pdmodel.common.function.PDFunction:getCOSObject(),84,95,"/**
 * Gets the COSDictionary. Uses functionStream if available, else uses functionDictionary.
 */","* Returns the stream.
     * @return The stream for this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",112,118,"/**
 * Constructs a PDXObject with a stream and subtype.
 * @param stream The PDStream object.
 * @param subtype The subtype of the PDXObject.
 */
","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject:getCOSObject(),136,140,"/**
 * Delegates to the wrapped stream's m1() method.
 * Returns the COSStream object.
 */","* Returns the stream.
     * {@inheritDoc}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getMetadata(),455,458,"/**
* Returns a COSStream object, applying m1 and m2 transformations.
*/","* Returns the metadata stream for this object, or null if there is no metadata stream.
     * @return the metadata stream, or null if there is none",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setMetadata(org.apache.pdfbox.cos.COSStream),533,536,"/**
* Sets metadata on the stream.
* @param metadata The COSStream containing the metadata.
*/","* Sets the metadata stream that is associated with this color space.
     * @param metadata the new metadata stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureAnnotation,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",530,540,"/**
 * Checks if any annotation matches the widget.
 * @param annotations List of annotations to check.
 * @param widget The widget to check against annotations.
 */
","* Check if the widget already exists in the annotation list.
     *
     * @param annotations the list of PDAnnotation fields.
     * @param widget the annotation widget.
     * @return true if the widget already existed in the annotation list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,equals,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:equals(java.lang.Object),201,216,"/**
 * Compares this annotation with another.
 * @param o The object to compare with.
 * @return True if annotations are equal, false otherwise.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,keySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:keySet(),146,150,"/**
 * Delegates the call to the underlying set.
 * @return The set returned by the underlying set.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",509,521,"/**
 * Checks if a field matches the signature field.
 * @param fieldIterator Iterator of PDFields
 * @param signatureField Signature field to match
 * @return True if a matching field is found, false otherwise.
 */","* Check if the field already exists in the field list.
     *
     * @param fieldIterator iterator on all fields.
     * @param signatureField the signature field.
     * @return true if the field already existed in the field list, false if not.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,values,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:values(),155,159,"/**
 * Delegates the call to the m1() method of the actuals object.
 * @return Collection of values returned by actuals.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,fillPagesAnnotationMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",838,852,"/**
 * Adds a widget to the map of widgets for a given page.
 * @param pagesAnnotationsMap Map of pages to widgets.
 * @param page The page to add the widget to.
 * @param widget The annotation widget to add.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<init>,org.apache.pdfbox.pdfparser.BaseParser:<init>(org.apache.pdfbox.io.RandomAccessRead),173,176,"/**
 * Initializes the parser with a PDF source.
 * @param pdfSource The RandomAccessRead PDF source.
 */
",* Default constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isHexDigit,org.apache.pdfbox.pdfparser.BaseParser:isHexDigit(char),178,183,"/**
 * Checks if char is a valid hex character.
 * @param ch The character to check.
 * @return True if valid hex character, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isDigit,org.apache.pdfbox.pdfparser.BaseParser:isDigit(),1298,1301,"/**
 * Delegates to m2 with the result of source.m1().
 * @throws IOException if source.m1() or m2 throws IOException
 */
","* This will tell if the next byte is a digit or not.
     *
     * @return true if the next byte in the stream is a digit.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,compareCOSObjects,"org.apache.pdfbox.pdfparser.BruteForceParser:compareCOSObjects(org.apache.pdfbox.cos.COSObject,java.lang.Long,org.apache.pdfbox.cos.COSObject)",499,517,"/**
* Selects COSObject based on offset and key values.
* Returns the newer object if conditions are met.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectNumbers(),174,191,"/**
 * Extracts object numbers and offsets from the source.
 * @return A map of object numbers to their corresponding offsets.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setXRef,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",175,190,"/**
 * Adds or updates an XRef entry for the given object key and offset.
 */","* Populate XRef HashMap of current XRef object.
     * Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file.
     * @param objKey The objkey, with id and gen numbers
     * @param offset The byte offset in this file",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,add,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:add(int,java.lang.String)",106,110,"/**
* Delegates code and name to codeToName and inverted.
* @param code The code value.
* @param name The name associated with the code.
*/
","* This will add a character encoding. An already existing mapping is preserved when creating
     * the reverse mapping. Should only be used during construction of the class.
     * 
     * @see #overwrite(int, String)
     * 
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isSpace,org.apache.pdfbox.pdfparser.BaseParser:isSpace(),1275,1278,"/**
* Delegates to m2 with the result of source.m1().
* @return boolean value returned by the delegated call.
* @throws IOException if source.m1() or m2 throws IOException
*/
","* This will tell if the next byte is a space or not.
     *
     * @return true if the next byte in the stream is a space character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(int),454,470,"/**
 * Processes a linebreak, potentially adjusting the source.
 * @param linebreak linebreak value; returns true on success.
 * @throws IOException if an I/O error occurs.
 */
","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @param linebreak the first character to be checked.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,checkForEndOfString,org.apache.pdfbox.pdfparser.BaseParser:checkForEndOfString(int),485,519,"/**
* Processes data based on bracesParameter, reading from source.
* Returns 0 or bracesParameter based on read data and conditions.
*/","* This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this
     * format: /Title ( (5) /Creator which was patched in 1 place.
     *
     * However it missed the case where the number of opening and closing parenthesis isn't balanced
     *
     * The second bug was in this format /Title (c:\) /Producer
     *
     * @param bracesParameter the number of braces currently open.
     *
     * @return the corrected value of the brace counter
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isEOL,org.apache.pdfbox.pdfparser.BaseParser:isEOL(int),1207,1210,"/**
* Checks if condition is met based on input 'c' using m1 & m2.
*/","* This will tell if the next byte to be read is an end of line byte.
     *
     * @param c The character to check against end of line
     * @return true if the next byte is 0x0A or 0x0D.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readStringNumber,org.apache.pdfbox.pdfparser.BaseParser:readStringNumber(),1443,1461,"/**
 * Reads bytes from source into a StringBuilder, limiting length.
 * @return StringBuilder containing read bytes, or empty if EOF.
 * @throws IOException if the number exceeds MAX_LENGTH_LONG.
 */","* This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid
     * delimiters are any non digit values.
     *
     * @return the token to parse as integer or long by the calling method.
     * @throws IOException throws by the {@link #source} methods.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:toString(),94,107,"/**
 * Creates a string representation of the cubic Bezier curve.
 * @return String describing the curve and its control points.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,decodeBuffer,org.apache.pdfbox.pdfparser.BaseParser:decodeBuffer(java.io.ByteArrayOutputStream),926,939,"/**
 * Decodes buffer as UTF-8, falls back to ALTERNATIVE_CHARSET if needed.
 */","* Tries to decode the buffer content to an UTF-8 String. If that fails, tries the alternative Encoding.
     * 
     * @param buffer the {@link ByteArrayOutputStream} containing the bytes to decode
     * @return the decoded String",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedChar,org.apache.pdfbox.pdfparser.BaseParser:readExpectedChar(char),1098,1106,"/**
 * Verifies a character from the source against the expected character.
 */","* Read one char and throw an exception if it is not the expected value.
     *
     * @param ec the char value that is expected.
     * @throws IOException if the read char is not the expected value or if an
     * I/O error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isWhitespace,org.apache.pdfbox.pdfparser.BaseParser:isWhitespace(),1241,1244,"/**
 * Delegates to m2 with a value from source.m1().
 * @return boolean result of the delegated call.
 */","* This will tell if the next byte is whitespace or not.
     *
     * @return true if the next byte in the stream is a whitespace character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseStartXref,org.apache.pdfbox.pdfparser.XrefParser:parseStartXref(),557,568,"/**
 * Extracts startXref value from parser if STARTXREF is found.
 * @return startXref value or -1 if not found.
 */","* This will parse the startxref section from the stream. The startxref value is ignored.
     *
     * @return the startxref value or -1 on parsing error
     * @throws IOException If an IO error occurs.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchNearestValue,"org.apache.pdfbox.pdfparser.BruteForceParser:searchNearestValue(java.util.List,long)",271,294,"/**
* Finds the minimum offset value from a list.
* @param values List of Long values.
* @param offset The offset value to compare against.
* @return The minimum offset value or -1 if list is empty.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForLastEOFMarker,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForLastEOFMarker(),524,560,"/**
 * Finds the last EOF marker in the source, handling exceptions.
 * @return Last EOF marker position, or Long.MAX_VALUE if not found.
 */","* Brute force search for the last EOF marker.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefTables,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefTables(),641,660,"/**
* Searches for xref table offsets using BFS.
* @return List of Long offsets found, or empty list if none.
*/","* Brute force search for all xref entries (tables).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getNumberOfColorComponents(),115,124,"/**
 * Returns the number of color components, caching the result.
 */","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefStreams(),667,735,"/**
 * Finds xref stream offsets by binary search.
 * Returns a list of found offsets.
 */","* Brute force search for all /XRef entries (streams).
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,getXrefTable,org.apache.pdfbox.pdfparser.XrefParser:getXrefTable(),75,78,"/**
 * Delegates to xrefTrailerResolver.m1() and returns its result.
 */","* Returns the resulting cross reference table.
     * 
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getStartxrefOffset,org.apache.pdfbox.pdfparser.COSParser:getStartxrefOffset(),305,360,"/**
* Reads and validates the file's trailing bytes to find markers.
* @return Offset of the 'startxref' marker from the file start.
*/","* Looks for and parses startxref. We first look for last '%%EOF' marker (within last
     * {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find
     * <code>startxref</code>.
     * 
     * @return the offset of StartXref
     * @throws IOException If something went wrong.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,readUntilEndStream,org.apache.pdfbox.pdfparser.COSParser:readUntilEndStream(org.apache.pdfbox.pdfparser.EndstreamFilterStream),793,885,"/**
 * Extracts content from a filtered stream, matching a keyword.
 * @param out Output stream for extracted content.
 * @return Number of bytes written to the output stream.
 */","* This method will read through the current stream object until
     * we find the keyword ""endstream"" meaning we're at the end of this
     * object. Some pdf files, however, forget to write some endstream tags
     * and just close off objects with an ""endobj"" tag so we have to handle
     * this case as well.
     * 
     * This method is optimized using buffered IO and reduced number of
     * byte compare operations.
     * 
     * @param out  stream we write out to.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,validateStreamLength,org.apache.pdfbox.pdfparser.COSParser:validateStreamLength(long),887,921,"/**
 * Validates stream length, checks boundaries, and resets stream position.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseHeader,"org.apache.pdfbox.pdfparser.COSParser:parseHeader(java.lang.String,java.lang.String)",1074,1155,"/**
 * Extracts and validates the header version from the source.
 * Sets a default version if parsing fails.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,<init>,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:<init>(),49,52,"/**
 * Initializes a ToUnicodeWriter instance with default write mode.
 */",* Creates a new ToUnicode CMap writer.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectOffsets,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectOffsets(),193,212,"/**
 * Extracts object offsets from the source.
 * @return Map of object offsets, keyed by offset.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,setLabelItem,"org.apache.pdfbox.pdmodel.common.PDPageLabels:setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",168,175,"/**
* Sets a label item for a given start page.
* @param startPage Starting page for the label range.
* @param item The PDPageLabelRange to set.
*/","* Sets the page label range beginning at the specified start page.
     * 
     * @param startPage
     *            the 0-based index of the page representing the start of the
     *            page label range.
     * @param item
     *            the page label item to set.
     * @throws IllegalArgumentException if the startPage parameter is &lt; 0.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,add,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:add(int,java.lang.String)",70,83,"/**
 * Maps a CID to Unicode text, validating inputs.
 * @param cid CID value (0-65535).
 * @param text Text to map.
 */","* Adds the given CID to Unicode mapping.
     *
     * @param cid CID
     * @param text Unicode text, up to 512 bytes.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNoFollowingBinData,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNoFollowingBinData(),331,403,"/**
 * Checks if the data stream contains valid ""EI"" data.
 * Returns true if valid, false otherwise.
 */","* Looks up an amount of bytes if they contain only ASCII characters (no
     * control sequences etc.), and that these ASCII characters begin with a
     * sequence of 1-3 non-blank characters between blanks
     *
     * @return <code>true</code> if next bytes are probably printable ASCII
     * characters starting with a PDF operator, otherwise <code>false</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNextSpaceOrReturn,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNextSpaceOrReturn(),457,460,"/**
* Delegates to m2 with the result of source.m1().
* @throws IOException if an I/O error occurs.
*/
","* Checks if the next char is a space or a return.
     * 
     * @return true if the next char is a space or a return
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:addEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),140,148,"/**
 * Processes an entry if its associated number is not masked.
 * @param entry The XReferenceEntry to process.
 */
","* Add an new entry to the XRef stream.
     * 
     * @param entry new entry to be added",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getWEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getWEntry(),155,175,"/**
* Calculates an array of integers from stream data entries.
*/","* determines the minimal length required for all the lengths.
     * 
     * @return the length information",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:<init>(long),46,50,"/**
 * Initializes the COSObjectPool with a maximum XRef object number.
 * @param highestXRefObjectNumber The maximum XRef object number.
 */
","* Creates a map of {@link COSBase} instances to {@link COSObjectKey}s, allowing bidirectional lookups. This
     * constructor can be used for pre - initialized structures to start the assignment of new object numbers starting
     * from the hereby given offset.
     *
     * @param highestXRefObjectNumber The highest known object number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getIndexEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getIndexEntry(),187,219,"/**
 * Extracts sequences of consecutive numbers from a sorted set.
 * @return List of Long representing the start and length of sequences.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,next,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:next(),224,238,"/**
 * Returns the next number in the sequence. Throws exception if out of range.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getFirstTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getFirstTrailer(),110,119,"/**
 * Retrieves the COSDictionary for the mask.
 * Returns null if bytePosToXrefMap is invalid.
 */","* Returns the first trailer if at least one exists.
     * 
     * @return the first trailer or null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getLastTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getLastTrailer(),126,135,"/**
 * Retrieves the COSDictionary for the mask.
 * Returns null if xref map is invalid.
 */","* Returns the last trailer if at least one exists.
     * 
     * @return the last trailer ir null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getContainedObjectNumbers,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getContainedObjectNumbers(int),339,356,"/**
 * Finds referenced object numbers matching a negated object number.
 * @param objstmObjNr The object number to negate and search for.
 * @return Set of referenced object numbers.
 */","Returns object numbers which are referenced as contained
     *  in object stream with specified object number.
     *  
     *  This will scan resolved xref table for all entries having negated
     *  stream object number as value.
     *
     *  @param objstmObjNr  object number of object stream for which contained object numbers
     *                      should be returned
     *                       
     *  @return set of object numbers referenced for given object stream
     *          or <code>null</code> if {@link #setStartxref(long)} was not
     *          called before so that no resolved xref table exists",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,getFirstColumnValue,org.apache.pdfbox.pdfparser.xref.AbstractXReference:getFirstColumnValue(),59,63,"/**
* Returns a long value by chaining method calls m1() and m2().
*/","* Returns the value for the first column of the crossreference stream entry. (The numeric representation of this
     * entry's (The numeric representation of this entry's {@link XReferenceType}.)
     *
     * @return The value for the first column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.FreeXReference:getThirdColumnValue(),77,81,"/**
* Returns the result of calling m1().m2().
*/","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set next free {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,toString,org.apache.pdfbox.pdfparser.xref.FreeXReference:toString(),88,93,"/**
 * Returns a string representation of the FreeReference object.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getSecondColumnValue(),111,115,"/**
* Delegates to m1() and returns its result.
*/","* Returns the value for the second column of the crossreference stream entry. (This is byte offset of the
     * {@link COSObject} in the PDF file - for entries of this type.)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getThirdColumnValue(),123,127,"/**
* Returns a long value by calling m1().m2().
*/","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,toString,org.apache.pdfbox.pdfparser.xref.NormalXReference:toString(),134,139,"/**
 * Generates a string representation of the object.
 * Includes key, type, and byteOffset.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getSecondColumnValue(),104,108,"/**
 * Returns a long value by composing m1() and m2().
 */","* Returns the value for the second column of the crossreference stream entry. (This is object number from the
     * {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries
     * of this type..)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getThirdColumnValue(),116,120,"/**
* Delegates to m1() and returns its result.
*/","* Returns the value for the third column of the crossreference stream entry. (This is index of the
     * {@link COSObject} in the containing object stream - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,toString,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:toString(),127,132,"/**
 * Returns a string representation of the ObjectStreamEntry.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(byte[],int,int)",111,117,"/**
 * Writes a byte array to the output stream.
 * @param b byte array to write
 * @param off offset in the array
 * @param len number of bytes to write
 */
","* This will write some byte to the stream.
     *
     * @param b The source byte array.
     * @param off The offset into the array to start writing.
     * @param len The number of bytes to write.
     *
     * @throws IOException If the underlying stream throws an exception.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(int),126,132,"/**
* Calls m1, then calls out.m2 with b, increments position.
*/","* This will write a single byte to the stream.
     *
     * @param b The byte to write to the stream.
     *
     * @throws IOException If there is an error writing to the underlying stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,writeEOL,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:writeEOL(),149,156,"/**
 * Executes logic based on m1() result; writes to stream if false.
 */","* This will write an EOL to the stream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isCompress,org.apache.pdfbox.pdfwriter.COSWriter:isCompress(),314,317,"/**
* Delegates to the underlying compressParameters object's m1() method.
*/","* Returns true, if the resulting document shall be compressed.
     *
     * @return True, if the resulting document shall be compressed.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addXRefEntry,org.apache.pdfbox.pdfwriter.COSWriter:addXRefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),345,348,"/**
* Processes an XReferenceEntry by invoking m1().m2().
* @param entry The XReferenceEntry to process.
*/","* add an entry in the x ref table for later dump.
     *
     * @param entry The new entry to add.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1570,1581,"/**
 * Sets the stroking color space, handling stack logic.
 * @param colorSpace The color space to set.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1583,1594,"/**
 * Sets the non-stroking color space, handling stack management.
 * @param colorSpace The color space to set.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,hasNext,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:hasNext(),224,228,"/**
 * Returns the inverse of the result of queue.m1().
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,hasNext,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:hasNext(),85,89,"/**
 * Returns the inverse of the queue's m1 result (boolean).
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFMarkedContentExtractor:endMarkedContentSequence(),125,132,"/**
 * Executes m2 on currentMarkedContents if m1 fails.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectReference,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectReference(java.io.OutputStream,org.apache.pdfbox.cos.COSObjectKey)",367,378,"/**
* Writes an indirect reference string to the output stream.
* Writes reference data including indirect reference keys.
*/","* Write the given {@link COSObjectKey} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param indirectReference The content, that shall be written.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefEntry,org.apache.pdfbox.pdfwriter.COSWriter:writeXrefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),995,1005,"/**
* Writes Xref data to the output stream.
* @param entry The XReferenceEntry to write.
* @throws IOException if an I/O error occurs.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getXRefRanges,org.apache.pdfbox.pdfwriter.COSWriter:getXRefRanges(java.util.List),1025,1058,"/**
 * Extracts consecutive ranges from a list of XReferenceEntry objects.
 */","* check the xref entries and write out the ranges.  The format of the
     * returned array is exactly the same as the pdf specification.  See section
     * 7.5.4 of ISO32000-1:2008, example 1 (page 40) for reference.
     * <p>
     * example: 0 1 2 5 6 7 8 10
     * <p>
     * will create a array with follow ranges
     * <p>
     * 0 3 5 4 10 1
     * <p>
     * this mean that the element 0 is followed by two other related numbers 
     * that represent a cluster of the size 3. 5 is follow by three other
     * related numbers and create a cluster of size 4. etc.
     * 
     * @param xRefEntriesList list with the xRef entries that was written
     * @return a integer array with the ranges",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getMD5,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getMD5(),35,46,"/**
 * Returns an MD5 MessageDigest instance.
 * Throws RuntimeException if MD5 algorithm is unavailable.
 */",* @return MD5 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA1,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA1(),51,62,"/**
 * Returns a SHA-1 MessageDigest instance.
 * Throws RuntimeException if SHA-1 is unavailable.
 */",* @return SHA-1 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA256,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA256(),67,78,"/**
 * Gets a SHA-256 MessageDigest instance. Throws exception if algorithm not found.
 */",* @return SHA-256 message digest,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.fdf.FDFDocument),1602,1613,"/**
 * Processes a FDF document, potentially for incremental updates.
 * @param doc The FDF document to process.
 * @throws IOException if an I/O error occurs.
 */","* This will write the fdf document.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getHighestXRefObjectNumber,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getHighestXRefObjectNumber(),289,292,"/**
* Delegates to objectPool.m1() and returns the result.
*/","* Returns the highest object number, that is registered in this compression pool.
     *
     * @return The highest object number, that is registered in this compression pool.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,getPreparedKeys,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:getPreparedKeys(),97,100,"/**
 * Returns a modifiable view of the prepared keys list.
 */","* Returns all {@link COSObjectKey}s, that shall be added to the object stream, when
     * {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @return All {@link COSObjectKey}s, that shall be added to the object stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:getFont(org.apache.pdfbox.cos.COSObject),107,112,"/**
 * Retrieves a PDFont from the cache, or null if not present.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:getColorSpace(org.apache.pdfbox.cos.COSObject),147,152,"/**
 * Retrieves a cached PDColorSpace from the cache.
 * @param indirect COSObject used as a key for caching.
 * @return PDColorSpace object or null if not cached.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getExtGState,org.apache.pdfbox.pdmodel.DefaultResourceCache:getExtGState(org.apache.pdfbox.cos.COSObject),187,192,"/**
 * Retrieves a cached PDExtendedGraphicsState by COS object.
 * @param indirect COS object identifier.
 * @return PDExtendedGraphicsState or null if not cached.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:getShading(org.apache.pdfbox.cos.COSObject),227,232,"/**
 * Retrieves a PDShading object from the cache.
 * @param indirect COS object used as a key for caching.
 * @return PDShading object or null if not cached.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getPattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:getPattern(org.apache.pdfbox.cos.COSObject),267,272,"/**
* Retrieves a cached pattern from the pattern map.
* @param indirect COS object representing the pattern.
* @return PDAbstractPattern or null if not cached.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:getProperties(org.apache.pdfbox.cos.COSObject),307,312,"/**
 * Retrieves a PDPropertyList from the cache, or null if not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:getXObject(org.apache.pdfbox.cos.COSObject),347,352,"/**
* Retrieves a PDXObject from the xobjects cache.
* @param indirect COSObject key for cache lookup.
* @return PDXObject or null if not found in cache.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",114,118,"/**
* Calls fonts.m1 with the given COSObject and a SoftReference to font.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",154,158,"/**
* Delegates color space handling to the colorSpaces object.
* @param indirect COSObject for the color space.
* @param colorSpace PDColorSpace object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",194,198,"/**
* Delegates m1 call to extGStates, passing a soft reference.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",234,238,"/**
* Delegates shading processing to shadings, using a SoftReference.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",274,278,"/**
* Delegates pattern processing to the patterns object.
* @param indirect COS object
* @param pattern Pattern object, wrapped in a SoftReference
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",314,318,"/**
* Delegates method call to properties, passing indirect object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",354,358,"/**
* Delegates m1 call to xobjects, wrapping xobject in SoftReference.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeFont(org.apache.pdfbox.cos.COSObject),120,145,"/**
* Retrieves a PDFont from the cache, managing removal if needed.
* Returns null if the font is removed or not found in cache.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeColorSpace(org.apache.pdfbox.cos.COSObject),160,185,"/**
 * Retrieves a PDColorSpace, caching and managing removals.
 * Returns cached color space or null if removed/not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeExtState,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeExtState(org.apache.pdfbox.cos.COSObject),200,225,"/**
* Retrieves a PDExtendedGraphicsState from cache or creates one.
* @param indirect COSObject to retrieve state for
* @return PDExtendedGraphicsState or null if not found/removed
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeShading(org.apache.pdfbox.cos.COSObject),240,265,"/**
 * Retrieves a PDShading object, potentially from a cache.
 * Returns null if removal limits are reached or found in cache.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removePattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:removePattern(org.apache.pdfbox.cos.COSObject),280,305,"/**
* Retrieves a pattern from the cache, managing removals.
* Returns cached pattern or null if not found/removed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeProperties(org.apache.pdfbox.cos.COSObject),320,345,"/**
* Retrieves a PDPropertyList from cache or creates it if absent.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeXObject(org.apache.pdfbox.cos.COSObject),360,386,"/**
 * Retrieves a PDXObject, potentially from a cache or removal list.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,overwrite,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:overwrite(int,java.lang.String)",121,135,"/**
 * Updates inverted mapping and code-to-name entries.
 * @param code Integer code to associate with a name.
 * @param name String name associated with the code.
 */","* This will add a character encoding. An already existing mapping is overwritten when creating
     * the reverse mapping. Should only be used during construction of the class.
     *
     * @see Encoding#add(int, String)
     *
     * @param code character code
     * @param name PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,removeRegion,org.apache.pdfbox.text.PDFTextStripperByArea:removeRegion(java.lang.String),79,83,"/**
* Updates region data.
* @param regionName The name of the region to update.
*/","* Delete a region to group text by. If the region does not exist, this method does nothing.
     *
     * @param regionName The name of the region to delete.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMaximumFractionDigits,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMaximumFractionDigits(int),122,125,"/**
 * Delegates formatting to formatDecimal with given fraction digits.
 * @param fractionDigitsNumber Number of fraction digits to use.
 */","* Sets the maximum number of digits allowed for fractional numbers.
     * 
     * @see NumberFormat#setMaximumFractionDigits(int)
     * @param fractionDigitsNumber the maximum number of digits allowed for fractional numbers",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.OutputStream,org.apache.pdfbox.pdmodel.PDResources)",106,114,"/**
 * Initializes a PDAbstractContentStream with document, stream, and resources.
 */","* Create a new appearance stream.
     *
     * @param document may be null
     * @param outputStream The appearances output stream to write to.
     * @param resources The resources to use",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getVerticalDisplacementVectorY,org.apache.pdfbox.pdmodel.font.PDCIDFont:getVerticalDisplacementVectorY(int),306,315,"/**
 * Retrieves vertical displacement Y for a given code.
 * @param code input code value
 * @return Vertical displacement Y as a float.
 */
","* Returns the y-component of the vertical displacement vector (w1).
     *
     * @param code character code
     * @return w1y",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,defaultIfNull,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:defaultIfNull(java.lang.Float,float)",201,204,"/**
 * Returns standardValue if not null, otherwise returns defaultValue.
 */","* Returns the provided default value in case 'standard' value is <code>null</code>. To be used
     * in cases unboxing may lead to a NPE.
     *
     * @param standardValue 'standard' value
     * @param defaultValue default value
     *
     * @return 'standard' value if not <code>null</code> otherwise default value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,zoom,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:zoom(float),285,292,"/**
 * Increases image width and height by a percentage.
 * @param percent Percentage increase (e.g., 10 for 10%).
 * @return The modified PDVisibleSignDesigner object.
 */","* Zoom signature image with some percent.
     * 
     * @param percent increase (positive value) or decrease (negative value) image with x percent.
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getWidth,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getWidth(),351,354,"/**
 * Returns the width of the image.
 * @return Image width as a float.
 */
","* 
     * @return signature image width",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getHeight(),372,375,"/**
 * Returns the image height.
 * @return The height of the image as a float.
 */
","* 
     * @return signature image height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addToSubset(int),278,286,"/**
 * Embeds a code point using the embedder.
 * @param codePoint The Unicode code point to embed.
 * @throws IllegalStateException if subsetting is disabled.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addGlyphsToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addGlyphsToSubset(java.util.Set),288,295,"/**
* Embeds glyphs into the font.
* @param glyphIds Set of glyph IDs to embed.
* @throws IllegalStateException if subsetting is disabled.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,adjustForRotation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:adjustForRotation(),216,261,"/**
* Rotates the sign based on the rotation value and updates transform.
*/","* Adjust signature for page rotation. This is optional, call this after all x and y coordinates
     * have been set if you want the signature to be positioned regardless of page orientation.
     *
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createAffineTransform,org.apache.pdfbox.util.Matrix:createAffineTransform(),169,175,"/**
 * Creates an AffineTransform using values from the 'single' array.
 */","* Create an affine transform from this matrix's values.
     *
     * @return An affine transform with this matrix's values.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.Vertex:toString(),37,50,"/**
 * Formats vertex data (point and colors) into a string representation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,checkFloatValues,org.apache.pdfbox.util.Matrix:checkFloatValues(float[]),295,302,"/**
 * Validates input array; throws exception if any value is invalid.
 * @param values float array to validate
 * @throws IllegalArgumentException if any value is invalid
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,encode,org.apache.pdfbox.pdmodel.font.PDFont:encode(java.lang.String),329,344,"/**
 * Converts a string to a byte array using custom encoding.
 * @param text The input string to encode.
 * @return Byte array representing the encoded string.
 */","* Encodes the given string for use in a PDF content stream.
     *
     * @param text Any Unicode text.
     * @return Array of PDF content stream bytes.
     * @throws IOException If the text could not be encoded.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,codePointToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:codePointToName(int),181,189,"/**
 * Looks up Unicode code point name; returns "".notdef"" if not found.
 */","* Returns the name for the given Unicode code point.
     *
     * @param codePoint Unicode code point
     * @return PostScript glyph name, or "".notdef""",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(org.apache.pdfbox.cos.COSName),77,84,"/**
 * Retrieves a RenderState based on the provided COSName.
 * @param state COSName object; used to determine RenderState.
 * @return RenderState object or null if state is null.
 */","* Returns the base state represented by the given {@link COSName}.
         *
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(org.apache.pdfbox.cos.COSName),71,78,"/**
 * Processes a COSName to determine a BaseState.
 * @param state COSName to process; returns BaseState.ON if null.
 * @return BaseState derived from the COSName.
 */
","* Returns the base state represented by the given {@link COSName}.
         * @param state the state name
         * @return the state enum value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,applyGSUBRules,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:applyGSUBRules(org.apache.fontbox.ttf.gsub.GsubWorker,java.io.ByteArrayOutputStream,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1715,1755,"/**
 * Extracts glyph IDs, applies gsub, and writes glyph data to output.
 * @param gsubWorker gsub worker for glyph substitution.
 * @param out output stream for glyph data.
 * @param font font object.
 * @param word word to process.
 * @return List of glyph IDs after gsub.
 */","* Retrieve the glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules. The encoded glyph IDs are also written to the specified output stream.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param out The output stream to write the glyph IDs to.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param word The word which is being converted from characters to glyph IDs.
     * @return The glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified word.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",226,232,"/**
 * Constructs a PDDocument with a COSDocument, source, and permission.
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf
     * @param permission he access permissions of the pdf
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,"org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",81,86,"/**
 * Creates a FDFDocument from a COSDocument and source.
 * @param doc The COSDocument to use.
 * @param source The RandomAccessRead source.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     *
     * @param doc The COSDocument that this document wraps.
     * @param source The source that will be closed when this document gets closed, can be null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,initRgbColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:initRgbColorTable(),125,165,"/**
 * Creates a grayscale image and RGB color table from the color table.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(),168,172,"/**
 * Delegates the m1 method call to the actual object.
 * @return Object[] returned by actual.m1()
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(java.lang.Object[]),177,182,"/**
 * Delegates the method call to the actual implementation.
 * @param a Input array of type X.
 * @return The processed array of type X.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,indexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:indexOf(java.lang.Object),534,538,"/**
 * Delegates the m1 call to the actual implementation.
 * @param o The object to pass to the actual implementation.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,containsAll,org.apache.pdfbox.pdmodel.common.COSArrayList:containsAll(java.util.Collection),242,246,"/**
* Delegates the method call to the actual implementation.
* @param c The collection to pass to the actual implementation.
* @return The result of the actual implementation.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:isEqual(java.lang.Object,java.lang.Object)",46,60,"/**
 * Compares two objects, using Number comparison if both are numbers.
 * @param op1 The first object to compare.
 * @param op2 The second object to compare.
 * @return True if the objects are equal, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:compare(java.lang.Number,java.lang.Number)",87,91,"/**
 * Compares two numbers based on the result of their m1() method.
 * @param num1 The first number.
 * @param num2 The second number.
 * @return True if num1.m1() >= num2.m1(), false otherwise.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:compare(java.lang.Number,java.lang.Number)",99,103,"/**
* Compares two numbers based on the result of their m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:compare(java.lang.Number,java.lang.Number)",111,115,"/**
 * Compares two numbers based on the result of their m1() method.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:compare(java.lang.Number,java.lang.Number)",123,127,"/**
 * Compares two numbers based on their m1() value.
 * @param num1 The first number.
 * @param num2 The second number.
 * @return True if num1.m1() is less than num2.m1().
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toCOSObjectList,org.apache.pdfbox.pdmodel.common.COSArrayList:toCOSObjectList(java.util.Collection),351,367,"/**
 * Converts a list to a list of COSBase objects.
 * @param list Collection to convert.
 * @return List of COSBase objects.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,removeAll,org.apache.pdfbox.pdmodel.common.COSArrayList:removeAll(java.util.Collection),372,389,"/**
 * Processes a collection, removing items based on COSBase comparison.
 * @param c collection to process; returns true if processed.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,retainAll,org.apache.pdfbox.pdmodel.common.COSArrayList:retainAll(java.util.Collection),394,411,"/**
 * Filters a collection based on COSBase comparisons.
 * Updates 'array' based on itemCOSBase values.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,equals,org.apache.pdfbox.pdmodel.common.COSArrayList:equals(java.lang.Object),432,436,"/**
 * Delegates the call to the actual implementation.
 * @param o The object to pass to the actual implementation.
 * @return The result of the actual implementation.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,hashCode,org.apache.pdfbox.pdmodel.common.COSArrayList:hashCode(),441,445,"/**
* Delegates m1() call to the actual implementation.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,lastIndexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:lastIndexOf(java.lang.Object),543,548,"/**
 * Delegates the m1 call to the actual implementation.
 * @param o The object passed to the method.
 * @return The result of the delegated method call.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(),553,557,"/**
 * Delegates to the underlying list's list iterator.
 * @return ListIterator for the underlying list.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(int),562,566,"/**
* Returns a list iterator over the underlying list, starting at index.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,subList,"org.apache.pdfbox.pdmodel.common.COSArrayList:subList(int,int)",571,575,"/**
* Delegates to the actual list's sublist method.
* @param fromIndex start index (inclusive)
* @param toIndex end index (exclusive)
*/
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsValue,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsValue(java.lang.Object),87,91,"/**
 * Delegates the m1 call to the actuals object.
 * @param value The value to pass to the delegated method.
 * @return The result of the delegated method.
 */
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,entrySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:entrySet(),164,168,"/**
* Returns a set view of the map entries from 'actuals'.
*/",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getNames,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getNames(),223,226,"/**
* Returns a set of aliases.
* Uses ALIASES.m1() to populate the set.
*/","* Returns the set of known font names, including aliases.
     * 
     * @return the set of known font names",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,toString,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:toString(),188,192,"/**
 * Delegates the m1() call to the actuals object.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,equals,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:equals(java.lang.Object),196,224,"/**
 * Checks if two PDUserProperty objects are equal.
 * @param obj The object to compare to.
 * @return True if objects are equal, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,hashCode,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:hashCode(),186,194,"/**
 * Calculates a hash code based on inherited value and user attribute.
 * @return The calculated hash code.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandler(java.lang.Class,java.lang.Class[],java.lang.Object[])",122,137,"/**
 * Creates and invokes a SecurityHandler constructor.
 * @param handlerClass Handler class to instantiate.
 * @param argsClasses Argument classes for the constructor.
 * @param args Arguments to pass to the constructor.
 * @return SecurityHandler instance.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),215,226,"/**
 * Creates a COSObjectable from a COSBase, handling potential errors.
 * @param base COSBase object to process.
 * @throws IOException if an error occurs during creation.
 */
","* Method to convert the COS value in the number tree to the PD Model object. The default
     * implementation will simply use reflection to create the correct object type. Subclasses can
     * do whatever they want.
     *
     * @param base The COS object to convert.
     * @return The converted PD Model object.
     * @throws IOException If there is an error during creation.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeRomanLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeRomanLabel(int),376,398,"/**
 * Converts a page index to a masked string representation.
 * @param pageIndex The page index to convert.
 * @return Masked string.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeLetterLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeLetterLabel(int),404,414,"/**
 * Generates a string of repeated characters based on the input number.
 */","* a..z, aa..zz, aaa..zzz ... labeling as described in PDF32000-1:2008,
         * Table 159, Page 375.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageRangeCount,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageRangeCount(),138,141,"/**
* Calls the m1() method of the 'labels' object and returns its result.
*/","* Returns the number of page label ranges.
     * 
     * <p>
     * This will be always &gt;= 1, as the required default entry for the page
     * range starting at the first page is added automatically by this
     * implementation (see PDF32000-1:2008, p. 375).
     * </p>
     * 
     * @return the number of page label ranges.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageLabelRange,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageLabelRange(int),153,156,"/**
* Returns a label range for the specified start page.
* @param startPage The starting page number.
* @return A PDPageLabelRange object.
*/
","* Returns the page label range starting at the given page, or {@code null}
     * if no such range is defined.
     * 
     * @param startPage
     *            the 0-based page index representing the start page of the page
     *            range the item is defined for.
     * @return the page label range or {@code null} if no label range is defined
     *         for the given start page.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndices(),242,245,"/**
 * Returns a navigable set of integers from the labels' m1() result.
 */","* Get an ordered set of page indices having a page label range.
     *
     * @return set of page indices.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,toString,org.apache.pdfbox.util.Vector:toString(),65,69,"/**
 * Concatenates x and y into a string representation.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,closePath,org.apache.pdfbox.rendering.PageDrawer:closePath(),1005,1009,"/**
 * Delegates method m1 to the linePath object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,moveTo,"org.apache.pdfbox.rendering.PageDrawer:moveTo(float,float)",981,985,"/**
* Delegates line drawing to the linePath object with given coordinates.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,appendRectangle,"org.apache.pdfbox.rendering.PageDrawer:appendRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",589,602,"/**
 * Adds line segments defined by four points to the line path.
 * @param p0, p1, p2, p3 Points defining the line segments.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,lineTo,"org.apache.pdfbox.rendering.PageDrawer:lineTo(float,float)",987,991,"/**
* Delegates line drawing to the linePath object with given coordinates.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getDashArray,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getDashArray(),101,104,"/**
* Returns an array from the internal 'array' object.
*/","* Returns the dash array.
     * @return the dash array, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",102,114,"/**
 * Creates a PDColor instance.
 * @param components Color components (e.g., RGB values).
 * @param colorSpace The color space for the color.
 */
","* Creates a PDColor containing the given color component values.
     * @param components array of color component values
     * @param colorSpace color space in which the components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:getComponents(),155,166,"/**
 * Returns color components. Returns m1() if colorSpace is PDPattern/null.
 */","* Returns the components of this color value.
     * @return the components of this color value, never null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoordinateColorPair.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:<init>(java.awt.geom.Point2D,float[])",37,41,"/**
 * Initializes a CoordinateColorPair with a point and color array.
 * @param p The coordinate point.
 * @param c The color values (as an array).
 */
","* Constructor.
     *
     * @param p point
     * @param c color",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Vertex:<init>(java.awt.geom.Point2D,float[])",31,35,"/**
 * Constructs a Vertex with the given point and color.
 * @param p The point of the vertex.
 * @param c The color of the vertex as an array.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,get255Value,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:get255Value(float),281,284,"/**
 * Masks a float value to an integer range [0, 255].
 * Returns 255 if val >= 1.0, otherwise val * 255.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:toString(),137,144,"/**
 * Generates a formatted string combining results from m1, m2, m3.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),112,117,"/**
 * Sets a boolean value (false) on the execution context's stack.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),170,175,"/**
* Sets a boolean value (true) on the execution context's stack.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getBoundary,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getBoundary(),122,138,"/**
 * Calculates boundary coordinates from corner points.
 * @return int[] boundary array containing min/max x/y values.
 */","* get the boundary of a triangle.
     *
     * @return {xmin, xmax, ymin, ymax}",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),89,105,"/**
 * Shifts an integer based on the stack's shift value.
 * @param context ExecutionContext object with stack data.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popNumber,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popNumber(),63,66,"/**
 * Retrieves and casts a value from the stack to a Number.
 */","* Pops a number (int or real) from the stack. If it's neither data type, a
     * ClassCastException is thrown.
     * @return the number",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popInt,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popInt(),73,76,"/**
* Retrieves an integer value from the stack.
*/","* Pops a value of type int from the stack. If the value is not of type int, a
     * ClassCastException is thrown.
     * @return the int value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popReal,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popReal(),83,86,"/**
 * Retrieves a number from the stack and returns it as a float.
 */","* Pops a number from the stack and returns it as a real value. If the value is not of a
     * numeric type, a ClassCastException is thrown.
     * @return the real value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),70,78,"/**
 * Processes data from the execution context's stack.
 * Retrieves and pushes values onto the stack.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,108,"/**
 * Processes data using the provided execution context.
 * @param context Execution context with a stack to manipulate.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addBoolean,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addBoolean(boolean),62,65,"/**
 * Delegates the boolean value to the instructions' m1 method.
 */","* Adds a bool value.
     * @param value the value",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),67,77,"/**
 * Pops two numbers from stack, compares them, pushes result.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDType3Font:isFontSymbolic(),122,126,"/**
 * Returns false. A placeholder method, likely for future use.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,60,"/**
* Pops two operands, performs operation, pushes result to stack.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),124,145,"/**
 * Negates a boolean or inverts an integer on the stack.
 * @param context Execution context with a stack to operate on.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:<init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators),35,38,"/**
 * Constructs an ExecutionContext with the provided operator set.
 * @param operatorSet The set of operators for execution.
 */
","* Creates a new execution context.
     * @param operatorSet the operator set",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<init>(),35,38,"/**
 * Initializes the builder by pushing the main sequence onto the stack.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,getCurrentSequence,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:getCurrentSequence(),62,65,"/**
 * Retrieves the masked instruction sequence from the sequence stack.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),58,63,"/**
* Processes data using the provided execution context.
* @param context Execution context containing a stack.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getListItemPatterns,org.apache.pdfbox.text.PDFTextStripper:getListItemPatterns(),1813,1825,"/**
 * Returns a list of compiled regex patterns. Lazily initialized.
 */","* returns a list of regular expression Patterns representing different common list item formats. For example
     * numbered items of form:
     * <ol>
     * <li>some text</li>
     * <li>more text</li>
     * </ol>
     * or
     * <ul>
     * <li>some text</li>
     * <li>more text</li>
     * </ul>
     * etc., all begin with some character pattern. The pattern ""\\d+\."" (matches ""1."", ""2."", ...) or ""\[\\d+\]""
     * (matches ""[1]"", ""[2]"", ...).
     * <p>
     * This method returns a list of such regular expression Patterns.
     * 
     * @return a list of Pattern objects.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,hasMore,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:hasMore(),138,141,"/**
* Checks if the index is less than the size of the input.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,currentChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:currentChar(),143,146,"/**
 * Retrieves a masked character from the input based on the index.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,peek,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:peek(),161,171,"/**
 * Returns the next character or EOT if at the input boundary.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),38,51,"/**
 * Processes a stack based on a size derived from the stack.
 * @param context Execution context with stack access.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),85,96,"/**
 * Adjusts stack based on context and number retrieved from it.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),115,162,"/**
 * Processes a stack based on context and values retrieved from it.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<init>(),206,212,"/**
 * Initializes the MacExpertEncoding with data from the table.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<init>(),254,260,"/**
 * Initializes MacRomanEncoding by iterating through the encoding table.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<init>(),194,200,"/**
 * Initializes standard encoding table from predefined data.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<init>(),230,236,"/**
 * Initializes the symbol encoding table from SYMBOL_ENCODING_TABLE.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<init>(),264,280,"/**
 * Initializes WinAnsiEncoding with entries from table and fills gaps.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<init>(),229,235,"/**
 * Initializes the Zapf Dingbats encoding table from the encoding table.
 */",* Constructor.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(java.lang.Object[]),205,213,"/**
 * Converts an object array to a comma-separated string.
 * @param array The array of objects to convert.
 * @return A string representation of the array.
 */","* Creates a String representation of an Object array.
     * 
     * @param array the Object array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(float[]),221,229,"/**
 * Converts a float array to a comma-separated string.
 * @param array The float array to convert.
 * @return String representation of the array.
 */
","* Creates a String representation of a float array.
     * 
     * @param array the float array
     * @return the String representation",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addText(org.apache.pdfbox.text.TextPosition),167,170,"/**
* Delegates text processing to m1().m2().
* @param text The text position to process.
*/","* Adds a text position to the contents.
     * 
     * @param text the text position",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addMarkedContent,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),177,180,"/**
* Delegates processing of marked content to m1().m2().
*/","* Adds a marked content to the contents.
     * 
     * @param markedContent the marked content",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addXObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),187,190,"/**
* Delegates processing of PDXObject to m1().m2().
* @param xobject The PDXObject to be processed.
*/","* Adds an XObject to the contents.
     * 
     * @param xobject the XObject",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:toString(),193,199,"/**
 * Returns a string representation of the object's state.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:toString(),267,271,"/**
* Concatenates the first three elements of the 'corner' array.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:toString(),127,136,"/**
 * Appends super.m1() and ListNumbering to a StringBuilder.
 * Returns the resulting string.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:toString(),158,175,"/**
 * Appends additional info to the parent's string representation.
 * @return String with appended role, checked status, and description.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:toString(),193,218,"/**
* Appends flags and values to the superclass's string representation.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getPermissionBytesForPublicKey,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getPermissionBytesForPublicKey(),176,186,"/**
 * Executes a series of m1 calls and returns the value of bytes.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrint(boolean),217,223,"/**
 * Calls m1 if not read-only, passing PRINT_BIT and allowPrinting.
 */","* Set if the user can print.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowPrinting A boolean determining if the user can print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModify(boolean),242,248,"/**
 * Applies a modification if not in read-only mode.
 * @param allowModifications Whether modifications are permitted.
 */","* Set if the user can modify the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowModifications A boolean determining if the user can modify the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractContent(boolean),269,275,"/**
 * Extracts a bit if not in read-only mode.
 * @param allowExtraction Flag to allow extraction.
 */","* Set if the user can extract content from the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModifyAnnotations(boolean),302,308,"/**
 * Modifies annotations if not in read-only mode.
 * @param allowAnnotationModification flag to allow modification
 */","* Set if the user can add or modify text annotations and fill in interactive forms fields and,
     * if {@link #canModify() canModify()} returns true, create or modify interactive form fields
     * (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns
     * true, it is still possible to fill in interactive forms (including signature fields) even the
     * parameter here is false.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAnnotationModification A boolean determining the new setting.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanFillInForm(boolean),331,337,"/**
* Updates form filling status if not in read-only mode.
* @param allowFillingInForm True to allow form filling.
*/","* Set if the user can fill in interactive form fields (including signature fields) even if
     * {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want
     * to prevent a user from filling in interactive form fields, you need to call
     * {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well.
     *<p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowFillingInForm A boolean determining if the user can fill in interactive forms.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractForAccessibility(boolean),359,365,"/**
 * Extracts data if not read-only, respecting allowExtraction flag.
 */","* Set if the user can extract content from the document for accessibility purposes.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanAssembleDocument(boolean),384,390,"/**
 * Assembles document if not read-only, respecting allowAssembly.
 */","* Set if the user can insert/rotate/delete pages.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAssembly A boolean determining if the user can assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrintFaithful(boolean),413,419,"/**
 * Calls m1 if not read-only, enabling faithful printing if specified.
 */","* Set if the user can print the document in a faithful format or in a degraded format (if print
     * is enabled). The PDF version must be 1.5 or higher.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param canPrintFaithful A boolean determining if the user can print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrint(),205,208,"/**
 * Delegates to m1 with PRINT_BIT and returns the result.
 */","* This will tell if the user can print.
     *
     * @return true If supplied with the user password they are allowed to print.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModify(),230,233,"/**
* Delegates to m1 with MODIFICATION_BIT.
* @return True if m1 returns true, false otherwise.
*/
","* This will tell if the user can modify contents of the document.
     *
     * @return true If supplied with the user password they are allowed to modify the document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractContent(),256,259,"/**
* Delegates to m1 with EXTRACT_BIT as an argument.
*/","* This will tell if the user can extract text and images from the PDF document.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModifyAnnotations(),286,289,"/**
 * Delegates to m1 with MODIFY_ANNOTATIONS_BIT.
 * @return True if m1 returns true, false otherwise.
 */","* This will tell if the user can add or modify text annotations and fill in interactive forms
     * fields and, if {@link #canModify() canModify()} returns true, create or modify interactive
     * form fields (including signature fields). Note that if
     * {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in
     * interactive forms (including signature fields) even if this method here returns false.
     *
     * @return true If supplied with the user password they are allowed to modify annotations.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canFillInForm(),316,319,"/**
 * Delegates to m1 with FILL_IN_FORM_BIT. Returns the result.
 */","* This will tell if the user can fill in interactive form fields (including signature fields)
     * even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false.
     *
     * @return true If supplied with the user password they are allowed to fill in form fields.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractForAccessibility(),346,349,"/**
* Delegates to m1 with a value extracted for accessibility.
*/","* This will tell if the user can extract text and images from the PDF document
     * for accessibility purposes.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canAssembleDocument(),372,375,"/**
* Delegates to m1 with ASSEMBLE_DOCUMENT_BIT.
* Returns the result of the delegated call.
*/","* This will tell if the user can insert/rotate/delete pages.
     *
     * @return true If supplied with the user password they are allowed to assemble the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrintFaithful(),399,402,"/**
 * Delegates to m1 with FAITHFUL_PRINT_BIT.
 * @return Result of m1(FAITHFUL_PRINT_BIT)
 */
","* This will tell if the user can print the document in a faithful format or in a degraded
     * format (if print is enabled).
     *
     * @return true If supplied with the user password they are allowed to print the document in a
     * faithful format.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getCertificate,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getCertificate(),74,90,"/**
 * Retrieves an X509Certificate from the keystore by alias.
 * @return X509Certificate or null if not found.
 * @throws KeyStoreException if alias is not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getPrivateKey,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getPrivateKey(),108,135,"/**
* Retrieves a key from the keystore by alias.
* @return Key object or null if not found.
* @throws KeyStoreException on failure.
*/","* returns The private key that will be used to open the document protection.
     * @return The private key.
     * @throws KeyStoreException If there is an error accessing the key.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,appendCertInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)",291,313,"/**
 * Logs recipient ID and certificate details to extraInfo.
 * @param extraInfo StringBuilder to append log details
 * @param ktRid KeyTransRecipientId object
 * @param certificate X509Certificate
 * @param materialCert X509CertificateHolder
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,getSecureRandom,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:getSecureRandom(),435,442,"/**
 * Returns a SecureRandom instance, using custom if available.
 */","* Returns a SecureRandom If customSecureRandom is not defined, instantiate a new SecureRandom
     * 
     * @return SecureRandom",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,setKey,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:setKey(byte[]),47,70,"/**
* Initializes salt array using key, validating key length.
* @param key byte array key, length between 1 and 32 bytes.
*/","* This will reset the key to be used.
     *
     * @param key The RC4 key used during encryption.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte,java.io.OutputStream)",106,113,"/**
 * Writes a byte to the output stream after processing with salt.
 * @param aByte The byte to write.
 * @param output The output stream to write to.
 */","* This will encrypt and write the next byte.
     *
     * @param aByte The byte to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,combineDiacritic,org.apache.pdfbox.text.TextPosition:combineDiacritic(java.lang.String),794,808,"/**
 * Masks or normalizes a string based on diacritic presence.
 */","* Combine the diacritic, for example, convert non-combining diacritic characters to their
     * combining counterparts.
     *
     * @param str String to normalize
     * @return Normalized string",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,prohibited,org.apache.pdfbox.pdmodel.encryption.SaslPrep:prohibited(int),146,158,"/**
 * Checks if codepoint satisfies any of multiple conditions.
 * @param codepoint Integer representing a Unicode codepoint.
 * @return True if any condition is met, false otherwise.
 */","* Return true if the given {@code codepoint} is a prohibited character
     * as defined by
     * <a href=""https://tools.ietf.org/html/rfc4013#section-2.3"">RFC 4013,
     * Section 2.3</a>.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,createCipher,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:createCipher(byte[],byte[],boolean)",392,401,"/**
 * Creates a Cipher object for AES/CBC/PKCS5Padding.
 * @param key Encryption key.
 * @param iv Initialization vector.
 * @param decrypt True for decryption, false for encryption.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,computeVersionNumber,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:computeVersionNumber(),812,827,"/**
 * Returns a mask value based on keyLength and protectionPolicy.
 */","* Computes the version number of the {@link SecurityHandler} based on the encryption key
     * length. See PDF Spec 1.6 p 93 and
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf"">PDF
     * 1.7 Supplement ExtensionLevel: 3</a> and
     * <a href=""http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf"">PDF
     * Spec 2.0</a>.
     *
     * @return The computed version number.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,getProvider,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:getProvider(),40,48,"/**
 * Returns the default provider, initializing it if null.
 * @return Provider object (BouncyCastleProvider)
 */","* Returns the provider to be used for advanced encrypting/decrypting. Default is the BouncyCastleProvider.
     * 
     * @return the security provider",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,logIfStrongEncryptionMissing,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:logIfStrongEncryptionMissing(),1255,1268,"/**
 * Checks for JCE unlimited strength policy files; logs if missing.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getNumComponentsFromImageMetadata,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getNumComponentsFromImageMetadata(javax.imageio.ImageReader),187,215,"/**
* Extracts number of frame components from ImageReader metadata.
* Returns 0 if metadata or component count is invalid.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,richContentsToString,"org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:richContentsToString(org.w3c.dom.Node,boolean)",956,1001,"/**
* Recursively serializes a Node to a string, escaping special chars.
* @param node The node to serialize.
* @param root True if this is the root node.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,getNodeValue,org.apache.pdfbox.util.XMLUtil:getNodeValue(org.w3c.dom.Element),99,113,"/**
 * Extracts text content from a node's children.
 * @param node Element node to extract text from.
 * @return String containing concatenated text content.
 */","* This will get the text value of an element.
     *
     * @param node The node to get the text value for.
     * @return The text of the node.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String),845,848,"/**
 * Writes the given text to the output stream.
 * @param text The text to be written.
 * @throws IOException if an I/O error occurs.
 */","* Write a Java string to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.CIDSystemInfo:toString(),53,57,"/**
* Concatenates the results of m1, m2, and m3 with hyphens.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,getPredefinedCMap,org.apache.pdfbox.pdmodel.font.CMapManager:getPredefinedCMap(java.lang.String),46,59,"/**
 * Retrieves a CMap by name, caching it if not already present.
 * @param cMapName Name of the CMap to retrieve.
 * @return The CMap object.
 */","* Fetches the predefined CMap from disk (or cache).
     *
     * @param cMapName CMap name
     * @return The predefined CMap, never null.
     * @throws IOException",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,parseCMap,org.apache.pdfbox.pdmodel.font.CMapManager:parseCMap(org.apache.pdfbox.io.RandomAccessRead),67,75,"/**
 * Parses a CMap from a RandomAccessRead.
 * @param randomAccessRead Input stream for parsing.
 * @return Parsed CMap object or null if input is null.
 */","* Parse the given CMap.
     *
     * @param randomAccessRead the source of the CMap to be read
     * @return the parsed CMap",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,readTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:readTrueTypeFont(java.lang.String,java.io.File)",216,246,"/**
* Loads a TrueType font from a file, handling both .ttf and .ttc.
* @param postScriptName Font postscript name
* @param file Input file
* @return TrueTypeFont object
* @throws IOException If font loading fails
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getParser,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",505,526,"/**
* Parses a font file, returns TTFParser or OTFParser based on tag.
* @param randomAccessRead Reader for font file.
* @param isEmbedded Whether the font is embedded.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getParser,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",762,783,"/**
 * Parses a font file, returning either an OTF or TTF parser.
 * @param randomAccessRead Reader for the font file.
 * @param isEmbedded Whether the font is embedded.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getOTFFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getOTFFont(java.lang.String,java.io.File)",248,288,"/**
 * Loads an OpenTypeFont from a file, handling TTC and OTF formats.
 * @param postScriptName Font postscript name
 * @param file File containing the font
 * @return OpenTypeFont object or null if loading fails
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getType1Font,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getType1Font(java.lang.String,java.io.File)",290,303,"/**
 * Loads a Type1 font from a file.
 * @param postScriptName Font's postscript name
 * @param file Input file containing the font
 * @return Type1Font object or null on failure
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,isBadPath,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:isBadPath(java.lang.String),402,405,"/**
 * Checks if a file path is valid based on m1() and m2() checks.
 * @param path The file path to validate.
 * @return True if the path is valid; otherwise, false.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeLine,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeLine(java.io.BufferedWriter,java.lang.String)",178,182,"/**
 * Writes text to the writer, followed by a newline character.
 * @param writer The writer to write to.
 * @param text The text to write.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,writeFontInfo,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:writeFontInfo(java.io.BufferedWriter,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)",436,488,"/**
* Writes font information to the writer, formatting various fields.
* @param writer BufferedWriter to write font info to.
* @param fontInfo Contains font information to be written.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getPostScriptNames,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getPostScriptNames(java.lang.String),188,199,"/**
 * Generates a set of names based on the postScriptName.
 * @param postScriptName The input postscript name.
 * @return A set containing two modified versions of the name.
 */
","* Gets alternative names, as seen in some PDFs, e.g. PDFBOX-142.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,calcLine,"org.apache.pdfbox.pdmodel.graphics.shading.Line:calcLine(int,int,int,int)",66,94,"/**
 * Generates a set of points along a line from (x0, y0) to (x1, y1).
 * @param x0 start x coordinate
 * @param y0 start y coordinate
 * @param x1 end x coordinate
 * @param y1 end y coordinate
 * @return Set of points on the line
 */
","* Calculate the points of a line with Bresenham's line algorithm
     * <a
     * href=""http://en.wikipedia.org/wiki/Bresenham's_line_algorithm"">Bresenham's
     * line algorithm</a>
     *
     * @param x0 coordinate
     * @param y0 coordinate
     * @param x1 coordinate
     * @param y1 coordinate
     * @return all the points on the rasterized line from (x0, y0) to (x1, y1)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcDeg,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcDeg(java.awt.geom.Point2D[]),101,110,"/**
 * Calculates a value based on a set of Point2D objects.
 * @param p Array of Point2D objects to process.
 * @return An integer representing the calculated value.
 */","* Calculate the degree value of a triangle.
     *
     * @param p 3 vertices coordinates
     * @return number of unique points in the 3 vertices of a triangle, 3, 2 or
     * 1",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toDebugString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:toDebugString(),827,841,"/**
 * Generates a string representation of font info.
 * Iterates through fontInfoList and appends details to string.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,computeHash,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:computeHash(java.io.InputStream),851,867,"/**
 * Calculates CRC32 hash of an InputStream.
 * @param is Input stream to calculate hash from.
 * @return CRC32 hash as a String.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,addFont,"org.apache.pdfbox.pdmodel.font.FontCache:addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",41,44,"/**
* Caches a font using the provided FontInfo and FontBoxFont.
*/","* Adds the given FontBox font to the cache.
     * 
     * @param info the FontInfo to be used as key
     * @param font the font to be cached",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,getFont,org.apache.pdfbox.pdmodel.font.FontCache:getFont(org.apache.pdfbox.pdmodel.font.FontInfo),53,57,"/**
 * Retrieves a FontBoxFont from the cache, or null if not found.
 * @param info FontInfo object used as cache key.
 * @return FontBoxFont object or null.
 */
","* Returns the FontBox font associated with the given FontInfo.
     * 
     * @param info the FontInfo of the cached font
     * 
     * @return the cached font if available, otherwise null",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,toString,org.apache.pdfbox.pdmodel.font.FontInfo:toString(),140,147,"/**
 * Generates a formatted string combining results from other methods.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,toString,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:toString(),159,164,"/**
 * Returns a string representation of the TilingPaintParameter object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch),725,729,"/**
* Compares a FontMatch score with the current score.
* @param match The FontMatch object to compare.
* @return Comparison result based on scores.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cosine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cosine(double,double)",203,210,"/**
 * Calculates dx divided by hypot. Returns 0 if hypot is 0.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,sine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:sine(double,double)",212,219,"/**
 * Calculates dy/hypot. Returns 0 if hypot is effectively zero.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),153,156,"/**
 * Registers a font name with the ALIASES, using its identifier.
 * @param baseName The font name to register.
 */","* Adds a standard font name to the map of known aliases, to simplify the logic of finding
     * font metrics by name. We want a single lookup in the map to find the font both by a base name or
     * an alias.
     *
     * @see #getAFM
     * @param baseName the font name of the Standard 14 font",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitute,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitute(java.lang.String,java.lang.String)",207,211,"/**
* Replaces occurrences of `match` with `replace` in `substitutes`.
*/","* Adds a top-priority substitute for the given font.
     *
     * @param match PostScript name of the font to match
     * @param replace PostScript name of the font to use as a replacement",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitutes,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitutes(java.lang.String,java.util.List)",213,216,"/**
* Applies replacements to a string based on a match.
* @param match Pattern to match.
* @param replacements List of replacement strings.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",469,485,"/**
 * Retrieves FontInfo by format and postScriptName.
 * @param format FontFormat to match
 * @param postScriptName PostScript name of the font
 * @return FontInfo object or null if not found
 */",* Finds the named font with the given format.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getSubstitutes,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getSubstitutes(java.lang.String),221,226,"/**
 * Retrieves substituted values for a post script name.
 * @param postScriptName The post script name to process.
 * @return List of substituted values.
 */",* Returns the substitutes for a given font.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getName,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getName(int),166,169,"/**
* Converts an integer code to a corresponding name.
* @param code Integer code to convert.
* @return String representation of the code.
*/
","* This will take a character code and get the name from the code.
     * 
     * @param code character code
     * @return PostScript glyph name",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,printMatches,org.apache.pdfbox.pdmodel.font.FontMapperImpl:printMatches(java.util.PriorityQueue),735,750,"/**
* Retrieves the best font match from a priority queue.
* @param queue PriorityQueue of FontMatch objects to evaluate.
* @return The FontMatch object with the highest priority.
*/",* For debugging. Prints all matches and returns the best match.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,findFontOrSubstitute,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:findFontOrSubstitute(),157,183,"/**
 * Retrieves a TrueTypeFont, using fallback if necessary.
 * @return TrueTypeFont object.
 * @throws IOException if an error occurs during font retrieval.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getType2CharString,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getType2CharString(int),286,300,"/**
 * Retrieves a Type2CharString based on the CID.
 * @param cid The CID value. Returns null if not found.
 */","* Returns the Type 2 charstring for the given CID, or null if the substituted font does not contain Type 2
     * charstrings.
     *
     * @param cid CID
     * @return the Type 2 charstring for the given CID or null
     * 
     * @throws IOException if the charstring could not be read",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToCID(int),371,375,"/**
* Delegates processing of the code to parent's m1().m2().
* @param code The code to be processed.
* @return The result of the delegated processing.
*/","* Returns the CID for the given character code. If not found then CID 0 is returned.
     *
     * @param code character code
     * @return CID",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getAverageFontWidth(),461,469,"/**
 * Returns the cached average width, calculating it if needed.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,subset,org.apache.pdfbox.pdmodel.font.PDType0Font:subset(),297,310,"/**
 * Embeds the font, throws exception if subsetting is disabled.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToCID(int),224,240,"/**
 * Retrieves a character code based on the input code and cmap.
 * @param code input code to process
 * @return Character code or default value from cmap.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getHeight(int),335,341,"/**
* Calculates a value based on ttf fields.
* @param code Unused parameter. Returns a float value.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:encode(int),356,407,"/**
 * Retrieves a glyph code for a given Unicode character.
 * @param unicode The Unicode character to find a glyph for.
 * @return Byte array representing the glyph code.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toRGB(),192,202,"/**
 * Converts color components to an RGB integer.
 * Uses colorSpace.m1() and Math.m2() for conversion.
 * @return RGB integer representation of color components.
 */","* Returns the packed RGB value for this color, if any.
     * @return RGB
     * @throws IOException if the color conversion fails
     * @throws UnsupportedOperationException if this color value is a pattern.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGB(float[]),170,186,"/**
 * Converts a single color value to normalized RGB floats.
 * @param value Single color value for indexed color space.
 * @return Normalized RGB float array.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,backdropRemoval,"org.apache.pdfbox.rendering.GroupGraphics:backdropRemoval(int,int,int,float)",723,729,"/**
 * Calculates a masked color value.
 * @param groupRGB, backdropRGB: RGB values.
 * @param shift, alphaFactor: Masking parameters.
 * @return Masked color value between 0 and 255.
 */","* Computes the backdrop removal equation.
     * <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code>",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,multiplyFloat,"org.apache.pdfbox.text.PDFTextStripper:multiplyFloat(float,float)",1689,1694,"/**
 * Calculates a masked value from two floats.
 * @param value1 First float value.
 * @param value2 Second float value.
 * @return A masked float result.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,equals,org.apache.pdfbox.pdmodel.font.PDFont:equals(java.lang.Object),654,658,"/**
* Checks if the object is a PDFont with the same m1 value.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,hashCode,org.apache.pdfbox.pdmodel.font.PDFont:hashCode(),660,664,"/**
* Delegates to the result of m1() and returns its m2() value.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getData,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:getData(),717,720,"/**
 * Extracts a portion of the byte array.
 * @return A new byte array containing bytes from start to end.
 */
","* Get the data of this chunk as a byte array
         *
         * @return a byte-array with only the data of the chunk",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,toString,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:toString(),95,108,"/**
 * Generates a formatted string representing family characteristics.
 * Combines results from m1() to m10() into a single string.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,getGlyphList,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:getGlyphList(),166,169,"/**
 * Returns a GlyphList instance using the static method m1().
 */",* Returns the font's glyph list.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,assignGlyphList,org.apache.pdfbox.pdmodel.font.PDSimpleFont:assignGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),466,477,"/**
 * Sets glyph list based on the provided font name.
 * @param fontName The font name to determine glyph list.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphList,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),309,313,"/**
 * Returns a GlyphList based on the FontName.
 * Returns m2() if FontName is ZAPF_DINGBATS, else m1().
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(java.lang.String),502,538,"/**
* Retrieves a GeneralPath by name, using fallback mechanisms.
* @param name Glyph name; returns an empty path if not found.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(java.lang.String),581,586,"/**
 * Checks if a glyph ID is valid based on the given name.
 * @param name Glyph name. Returns true if valid, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,extractCmapTable,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:extractCmapTable(),715,760,"/**
 * Initializes cmap data by extracting relevant subtables.
 * Extracts Windows, Macintosh, and Unicode cmap subtables.
 */","* extract all useful ""cmap"" subtables.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,isVertical,org.apache.pdfbox.pdmodel.font.PDType0Font:isVertical(),461,465,"/**
* Checks if cMap is valid and m1() returns 1.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType0Font:readCode(java.io.InputStream),626,634,"/**
 * Delegates to the cmap's m1 method.
 * @param in Input stream to process.
 * @throws IOException if cmap is null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(java.lang.String),242,246,"/**
* Delegates m1 call to genericFont. Returns its result.
* @param name Font name.
* @return Result of genericFont.m1(name).
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getAverageFontWidth(),438,446,"/**
 * Returns the cached average width. Calculates it if not cached.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1Font:getAverageFontWidth(),473,484,"/**
 * Delegates to m1().m3() or super.m2() if m1() is null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,loadMetrics,org.apache.pdfbox.pdmodel.font.Standard14Fonts:loadMetrics(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),129,143,"/**
 * Parses an AFM file for a given font name and stores metrics.
 * @param fontName FontName object; used to locate AFM resource.
 * @throws IOException if the AFM resource is not found.
 */","* Loads the metrics for the base font specified by name. Metric file must exist in the pdfbox jar under
     * /org/apache/pdfbox/resources/afm/
     *
     * @param fontName one of the standard 14 font names for which to load the metrics.
     * @throws IOException if no metrics exist for that font.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowDestinationRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowDestinationRange(java.lang.String,java.lang.String)",214,227,"/**
 * Checks if two strings meet certain criteria.
 * Returns true if conditions are met, false otherwise.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isEmbeddingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isEmbeddingPermitted(org.apache.fontbox.ttf.TrueTypeFont),140,160,"/**
 * Checks if a TrueType font is restricted or bitmap-only.
 * @param ttf The TrueTypeFont object to check.
 * @return True if font is unrestricted, false otherwise.
 */",* Returns true if the fsType in the OS/2 table permits embedding.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isSubsettingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isSubsettingPermitted(org.apache.fontbox.ttf.TrueTypeFont),165,177,"/**
 * Checks if TrueType font allows subsetting.
 * Returns false if no subsetting is allowed, true otherwise.
 */",* Returns true if the fsType in the OS/2 table permits subsetting.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,getTag,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:getTag(java.util.Map),371,394,"/**
 * Converts a number to a base-25 string, padded to length 6.
 * @param gidToCid Unused parameter.
 * @return Base-25 string representation of the number.
 */",* Returns an uppercase 6-character unique tag for the given subset.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,getUniNameOfCodePoint,org.apache.pdfbox.pdmodel.font.UniUtil:getUniNameOfCodePoint(int),32,46,"/**
 * Formats a code point as a Unicode string (e.g., ""uni0041"").
 * @param codePoint The integer code point to format.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,getEncodingName,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:getEncodingName(),203,212,"/**
 * Delegates to baseEncoding's m1() or returns ""differences"".
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,loadList,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:loadList(java.io.InputStream),121,173,"/**
 * Parses glyph list from input stream, mapping Unicode to names.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,toUnicode,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:toUnicode(java.lang.String),213,264,"/**
 * Resolves a name to its Unicode representation, using caches and fallback logic.
 */","* Returns the Unicode character sequence for the given glyph name, or null if there isn't any.
     *
     * @param name PostScript glyph name
     * @return Unicode character(s), or null.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(org.apache.fontbox.afm.FontMetrics),57,63,"/**
 * Initializes Type1Encoding with character metrics from FontMetrics.
 */","* Creates an encoding from the given AFM font metrics.
     *
     * @param fontMetrics AFM font metrics.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,toString,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:toString(),106,110,"/**
* Returns a string representation of the PDLineDashPattern.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toString(),228,232,"/**
 * Returns a string representation of the PDColor object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:toRGBImage(java.awt.image.WritableRaster),80,103,"/**
 * Converts a WritableRaster to a grayscale BufferedImage.
 * @param raster The input raster to convert.
 * @return A BufferedImage representing the grayscale image.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:toRGBImage(java.awt.image.WritableRaster),76,88,"/**
 * Creates a BufferedImage from a WritableRaster.
 * @param raster The raster to use for creating the image.
 * @return A BufferedImage created from the raster.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGBImage(java.awt.image.WritableRaster),191,215,"/**
 * Converts a raster to an RGB BufferedImage using a color table.
 * @param raster The input WritableRaster to convert.
 * @return The resulting RGB BufferedImage.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,convXYZtoRGB,"org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:convXYZtoRGB(float,float,float)",85,106,"/**
 * Masks negative values and converts XYZ to CIEXYZ color.
 * @param x, y, z XYZ color components
 * @return CIEXYZ color array
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,compose,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)",110,269,"/**
* Blends a source raster onto a destination raster.
* Uses specified blend mode and color spaces.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,toString,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:toString(),390,394,"/**
* Returns a string representation of the BlendMode object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage2,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage2(java.awt.image.WritableRaster),200,232,"/**
* Converts a raster to a BufferedImage, applying color transformations.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:toRGBImage(java.awt.image.WritableRaster),35,73,"/**
 * Converts a raster to an RGB BufferedImage by normalizing color values.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,applyColorKeyMask,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:applyColorKeyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage)",706,738,"/**
 * Masks an image using a provided mask.
 * @param image The image to mask.
 * @param mask The mask to apply.
 * @return The masked image.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",134,149,"/**
 * Creates a PDColor instance.
 * @param components Color components (e.g., RGB).
 * @param patternName Pattern name, if any.
 * @param colorSpace The color space.
 */
","* Creates a PDColor containing the given color component values and pattern name.
     * @param components array of color component values
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern/components are defined",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRawImage,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRawImage(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",333,338,"/**
 * Creates a BufferedImage from a WritableRaster and ColorSpace.
 */","* Returns the given raster as BufferedImage with the given awtColorSpace using a
     * ComponentColorModel.
     * @param raster the source raster
     * @param awtColorSpace the AWT colorspace
     * @return a BufferedImage in this colorspace",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",347,377,"/**
* Converts a raster to a BufferedImage, handling single-channel rasters.
* @param raster The input WritableRaster.
* @param colorSpace The ColorSpace for the BufferedImage.
*/","* Returns the (A)RGB equivalent of the given raster, using the given AWT color space
     * to perform the conversion.
     * @param raster the source raster
     * @param colorSpace the AWT
     * @return an (A)RGB buffered image",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getICCProfile(),97,114,"/**
 * Loads an ICC profile from a resource file.
 * @return ICC_Profile object or null if loading fails.
 * @throws IOException if the resource is not found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",162,214,"/**
 * Converts a CMYK raster to RGB BufferedImage using pure Java.
 * @param raster WritableRaster containing CMYK data
 * @param colorSpace ColorSpace for the destination image
 * @return RGB BufferedImage or calls super if not using pure Java
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,equals,org.apache.pdfbox.util.Matrix:equals(java.lang.Object),596,612,"/**
 * Checks if two objects are equal.
 * @param obj The object to compare to.
 * @return True if objects are equal, false otherwise.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setBackground,org.apache.pdfbox.rendering.GroupGraphics:setBackground(java.awt.Color),505,510,"/**
* Applies the color to both groupG2D and alphaG2D.
* @param color The Color to apply.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clearRect,"org.apache.pdfbox.rendering.GroupGraphics:clearRect(int,int,int,int)",90,95,"/**
* Calls m1 on groupG2D and alphaG2D with given coordinates and dimensions.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),937,943,"/**
 * Sets the color space for the image and clears caches.
 * @param cs The color space to set; null to clear.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,fallbackToAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:fallbackToAlternateColorSpace(java.lang.Exception),226,240,"/**
 * Handles ICC profile reading failure, uses alternate color space.
 * Logs error if applicable, sets initial color.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,is_sRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:is_sRGB(java.awt.color.ICC_Profile),246,252,"/**
* Extracts and checks device model from ICC profile.
* @param profile The ICC profile to analyze.
* @return True if device model is ""sRGB"", false otherwise.
*/","* Returns true if the given profile represents sRGB.
     * (unreliable on the data of ColorSpace.CS_sRGB in openjdk)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,ensureDisplayProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:ensureDisplayProfile(java.awt.color.ICC_Profile),256,270,"/**
 * Handles perceptual ICC profiles, treating them as display class.
 * @param profile The ICC profile to process.
 * @return The processed ICC profile.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,clampColors,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:clampColors(java.awt.color.ICC_ColorSpace,float[])",299,309,"/**
 * Clamps values in an array to the color space's min/max.
 * @param cs Color space with min/max values.
 * @param value Array of float values to clamp.
 * @return Clamped float array.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getNumberOfComponents(),334,355,"/**
* Retrieves the number of components, using ICC profile if needed.
* Returns the number of components.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getColorSpaceType,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getColorSpaceType(),469,489,"/**
 * Returns a color space type based on iccProfile or alternateColorSpace.
 */","* Returns the type of the color space in the ICC profile. If the ICC profile is invalid, the
     * type of the alternate colorspace is returned, which will be one of
     * {@link ColorSpace#TYPE_GRAY TYPE_GRAY}, {@link ColorSpace#TYPE_RGB TYPE_RGB},
     * {@link ColorSpace#TYPE_CMYK TYPE_CMYK}, or -1 if that one is invalid.
     *
     * @return an ICC color space type. See {@link ColorSpace#getType()} and the static values of
     * {@link ColorSpace} for more details.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRawImage(java.awt.image.WritableRaster),217,238,"/**
 * Creates a BufferedImage from a raster, using color table if applicable.
 * @param raster WritableRaster to create the image from.
 * @return BufferedImage or null if color table condition is not met.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getNumberOfComponents(),51,55,"/**
* Returns an integer value from the awtColorSpace.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGB(float[]),121,137,"/**
 * Applies a transformation to float array 'value' and returns result.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,isGrayImage,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:isGrayImage(java.awt.image.BufferedImage),118,133,"/**
 * Checks if an image meets specific criteria for processing.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",229,233,"/**
 * Creates a PDF image XObject from a BufferedImage.
 * @param document PDF document
 * @param image BufferedImage to convert
 * @return PDF image XObject
 */
","* Creates a new JPEG PDImageXObject from a BufferedImage.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getAlphaImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getAlphaImage(java.awt.image.BufferedImage),281,302,"/**
* Extracts alpha channel from an image.
* Returns a grayscale image containing the alpha data, or null if invalid.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorImage(java.awt.image.BufferedImage),416,438,"/**
 * Converts a BufferedImage to RGB format.
 * Returns original image if conversion is not needed.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getJPEGImageWriter,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getJPEGImageWriter(),331,349,"/**
 * Finds a JPEG ImageWriter.
 * @throws IOException if no suitable writer is found.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorSpaceFromAWT,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorSpaceFromAWT(java.awt.image.BufferedImage),387,413,"/**
* Determines the PDF color space based on the BufferedImage.
* Returns PDColorSpace instance; throws exception if unsupported.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",289,335,"/**
 * Initializes the predictor encoder with document and image data.
 * Sets up internal data structures for image processing.
 */",* Initialize the encoder and set all final fields,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterUp,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterUp(int,int)",669,673,"/**
 * Applies a mask to an integer.
 * @param x The integer to mask.
 * @param b The mask value.
 * @return The masked byte value.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHint,"org.apache.pdfbox.rendering.GroupGraphics:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)",526,531,"/**
* Sets a rendering hint on both group and alpha G2D contexts.
* @param hintKey The rendering hint key.
* @param hintValue The value for the rendering hint.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,scaleImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:scaleImage(java.awt.image.BufferedImage,int,int,int,boolean)",762,796,"/**
* Resizes an image to specified dimensions, optionally interpolating.
* @param image Source image.
* @param width Target width.
* @param height Target height.
*/",* High-quality image scaling.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)",176,182,"/**
* Delegates drawing to groupG2D and returns result from alphaG2D.
* @param img Image to draw, coordinates and observer are passed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImage.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.image.PDImage:getCOSObject(),250,251,"/**
 * Returns a COSDictionary representing the function mask.
 */","* Convert this image to a COS object.
     *
     * @return The cos object that matches this image object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,readPNGFloat,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:readPNGFloat(byte[],int)",752,756,"/**
 * Extracts a float value from byte array at offset, dividing by 100000.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,parsePNGChunks,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:parsePNGChunks(byte[]),765,891,"/**
* Parses PNG image data and extracts chunks into a state object.
* @param imageData byte array containing PNG image data
* @return PNGConverterState object or null if parsing fails
*/","* Parse the PNG structure into the PNGConverterState. If we can't handle
     * something, this method will return null.
     *
     * @param imageData the byte array with the PNG data
     * @return null or the converter state with all relevant chunks",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getIDATInputStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),480,489,"/**
 * Creates a MultipleInputStream from IDAT chunks in PNGConverterState.
 * @param state PNGConverterState containing IDAT chunks
 * @return MultipleInputStream containing the IDAT data
 */
","* Build an input stream for the IDAT data. May need to concat multiple IDAT
     * chunks.
     *
     * @param state the converter state.
     * @return a input stream with the IDAT data.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,crc,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:crc(byte[],int,int)",933,936,"/**
* Inverts the result of m1 method on the byte array segment.
* @param buf byte array
* @param offset start index
* @param len length of the segment
* @return Inverted value from m1 method.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaint,org.apache.pdfbox.rendering.GroupGraphics:setPaint(java.awt.Paint),519,524,"/**
* Applies paint to group and alpha rendering contexts.
* @param paint The paint object to apply.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRect(int,int,int,int)",254,259,"/**
* Calls m1 on groupG2D and alphaG2D with given coordinates and dimensions.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:dispose(),158,163,"/**
* Calls super.m1() and resets axialShadingType to null.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:dispose(),163,168,"/**
 * Calls superclass m1 and resets radialShadingType to null.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:dispose(),84,89,"/**
* Calls super.m1() and resets type1ShadingType to null.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:getRaster(int,int,int,int)",165,251,"/**
 * Creates a raster based on input coordinates and color mapping.
 * @param x, y top-left corner; w, h raster dimensions
 * @return Raster object with processed data
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:getRaster(int,int,int,int)",91,157,"/**
* Creates a raster with masked values based on domain and shading.
* @param x, y, w, h defines the raster's position and dimensions.
* @return A WritableRaster object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getFlag1Edge,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getFlag1Edge(),134,138,"/**
* Returns control points from the internal data structure.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,getPoints,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:getPoints(int),58,82,"/**
 * Generates a set of points using Bezier curve calculations.
 * @param l determines the size of the array to be returned.
 * @return Point2D array representing the generated curve.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:calcPixelTableArray(java.awt.Rectangle),62,73,"/**
 * Creates and populates an int array based on device bounds.
 * @param deviceBounds Rectangle defining the device dimensions.
 * @return int[][] array containing triangle mask data.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:calcPixelTableArray(java.awt.Rectangle),60,74,"/**
 * Initializes and populates an int array based on device bounds and patches.
 * @param deviceBounds Rectangle defining the device boundaries.
 * @return int[][] array representing the masked data.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates the bounding rectangle of shaded triangles.
* @param xform AffineTransform, matrix used for calculations.
* @return Rectangle2D object representing the bounds.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.Patch:<init>(float[][]),46,49,"/**
 * Copies the input color array to the cornerColor field.
 * @param color 2D float array representing color values.
 */
","* Constructor of Patch.
     *
     * @param color 4 corner's colors",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",228,231,"/**
 * Checks if two points are nearly equal.
 * @param p0 The first point.
 * @param p1 The second point.
 * @return True if points are nearly equal; false otherwise.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",203,206,"/**
 * Checks if two points are nearly equal.
 * @param p0 First point.
 * @param p1 Second point.
 * @return True if points are nearly equal.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getArea,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getArea(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",220,224,"/**
 * Calculates the area of a triangle defined by three points.
 * @param a, b, c Points defining the triangle's vertices.
 * @return The area of the triangle.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,removeZeroLengthSegments,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:removeZeroLengthSegments(java.awt.geom.Point2D$Double[]),954,995,"/**
 * Removes duplicate points from a polygon.
 * @param polygon array of Point2D.Double representing polygon
 * @return new array with duplicate points removed
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,clonedPoint2DArray,org.apache.pdfbox.pdmodel.graphics.shading.Patch:clonedPoint2DArray(java.awt.geom.Point2D[]),233,241,"/**
 * Creates a new array with points derived from the input array.
 * @param input Array of Point2D objects
 * @return New array of Point2D objects
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,calcLevel,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:calcLevel(),67,148,"/**
* Analyzes control points and returns an int array based on their properties.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:getRaster(int,int,int,int)",174,201,"/**
 * Creates a masked raster based on provided dimensions and data.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:clone(),221,233,"/**
* Clones the PDTextState from the superclass.
* Throws RuntimeException if cloning fails.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,"org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Path2D,boolean)",592,605,"/**
* Adds a path to the clipping paths list.
* @param path The path to add. Clones if clonePath is true.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getCurrentClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getCurrentClippingPath(),622,653,"/**
 * Calculates the combined clipping area based on clipping paths.
 * Returns the calculated Area object.
 */","* This will get the current clipping path. Do not modify this Area object!
     *
     * @return The current clipping path.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<init>(java.lang.String),116,119,"/**
 * Creates a new TextAttribute with the given name.
 * @param name The name of the attribute.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.util.List),82,86,"/**
 * Creates Paragraph objects from a list of strings.
 * @param listValue List of strings to be converted to paragraphs.
 */
","* Construct the text block from a list of values.
     * 
     * Constructs the text block from a list of values treating each
     * entry as an individual {@link Paragraph}.
     * 
     * @param listValue the text block string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(int),35,45,"/**
* Finds TextAlign by alignment code. Returns LEFT if not found.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,hashCode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:hashCode(),221,225,"/**
* Delegates to Objects.m1 using the dictionary.
* @return Result of Objects.m1 operation.
*/
",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getMatrix(),175,178,"/**
* Creates an AffineTransform for shifting the origin.
* @return AffineTransform object with specified translation.
*/
","* Returns the <code>Matrix</code> entry for the appearance stream form XObject.
     *
     * @return Matrix for appearance stream form XObject.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsPolygon,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsPolygon(double,double,double,double,double,double[])",398,423,"/**
* Calculates intermediate values based on input parameters.
* @param array Output array to store calculated values.
*/","* Computes parameters for a cloudy polygon: n, alpha, and dx.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsEllipse(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,double)",940,952,"/**
 * Calculates an angle based on points and a curl advancement.
 * @param pt, ptNext Points to calculate the angle from.
 * @param r Radius. @param curlAdv Curl advancement value.
 * @return Calculated angle.
 */",* Computes the alpha parameter for an ellipse curl.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getPositivePolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getPositivePolygon(java.awt.geom.Point2D$Double[]),556,562,"/**
* Adjusts points based on m1 result. If m1 < 0, calls m2.
*/","* Makes a polygon whose direction is the same as the positive angle
     * direction in the coordinate system.
     * The polygon must not intersect itself.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,flattenEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:flattenEllipse(double,double,double,double)",705,738,"/**
 * Extracts points from an ellipse outline with specified flatness.
 * @param left, bottom, right, top Ellipse boundary coordinates.
 * @return Array of Point2D.Double objects representing the ellipse.
 */",* Flattens an ellipse into a polygon.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,updateBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:updateBBox(double,double)",1021,1027,"/**
 * Updates bounding box minimum/maximum coordinates.
 * @param x x-coordinate to consider.
 * @param y y-coordinate to consider.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createShortStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createShortStyles(),434,443,"/**
* Returns a set of predefined annotation line types.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createInteriorColorStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createInteriorColorStyles(),445,454,"/**
 * Returns a set of predefined annotation line types.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createAngledStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createAngledStyles(),456,466,"/**
* Returns a set of line end characters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isRectangular,org.apache.pdfbox.rendering.PageDrawer:isRectangular(java.awt.geom.GeneralPath),888,940,"/**
* Checks if a path consists of two move and two line segments.
* Returns true if the path meets the condition, false otherwise.
*/",* Returns true if the given path is rectangular.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(java.io.InputStream,int[])",38,42,"/**
 * Creates a COSFilterInputStream with the given input stream and byte range.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,nextRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:nextRange(),99,120,"/**
* Advances to the next range in `ranges`. Skips data if needed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getTemplateHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getTemplateHeight(),393,396,"/**
* Returns the result of calling the m1() method.
*/","* 
     * @return template height",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAffineTransform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAffineTransform(java.awt.geom.AffineTransform),165,170,"/**
 * Applies the given affine transform to the PDF structure.
 * @param affineTransform The transformation to apply.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createVisualSignature(org.apache.pdfbox.pdmodel.PDDocument),382,387,"/**
* Creates a visible signature using the provided PDF document.
* @param template The PDF document to use for signature creation.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,coordinates,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:coordinates(float,float)",300,305,"/**
* Creates a visible sign designer at specified coordinates.
* @param x X-coordinate.
* @param y Y-coordinate.
* @return The newly created PDVisibleSignDesigner object.
*/
","*
     * @param x - x coordinate
     * @param y - y coordinate
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,transform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:transform(java.awt.geom.AffineTransform),477,481,"/**
 * Creates a new PDVisibleSignDesigner with the given transform.
 * @param affineTransform The AffineTransform to use.
 * @return A new PDVisibleSignDesigner instance.
 */
","* 
     * @param affineTransform the affine transformation
     * @return Visible Signature Configuration Object",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDPageFitDestination from a COSArray.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Creates a PDPageFitHeightDestination object from a COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDPageFitRectangleDestination from a COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(org.apache.pdfbox.cos.COSArray),55,58,"/**
 * Constructs a PDPageFitWidthDestination object from a COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
 * Constructs a PDPageXYZDestination from a COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,requireSingleNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),105,111,"/**
 * Throws exception if node has siblings (m1 or m2 not null).
 */","* @param node
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,children,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:children(),310,313,"/**
 * Returns an iterable of PDOutlineItems from the document outline.
 */",* @return An {@link Iterable} view of the items children,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByValue,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByValue(java.util.List),101,104,"/**
* Sorts a list of KeyValue pairs using BY_VALUE_COMPARATOR.
* @param pairs List of KeyValue objects to be sorted.
*/
","* Sort two related lists simultaneously by the elements in the key parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByKey,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByKey(java.util.List),111,114,"/**
* Sorts a list of KeyValue pairs by key using a comparator.
* @param pairs List of KeyValue pairs to be sorted.
*/
","* Sort two related lists simultaneously by the elements in the value parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getValueAsString(),85,89,"/**
* Delegates to the m1() method and returns its result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getValueAsString(),251,255,"/**
* Delegates to m1() and returns its result.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getTransform,org.apache.pdfbox.rendering.GroupGraphics:getTransform(),472,476,"/**
* Delegates to the group's AffineTransform.
* Returns the AffineTransform object of the group.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(double,double)",568,573,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param tx x-coordinate.
* @param ty y-coordinate.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,scale,"org.apache.pdfbox.rendering.GroupGraphics:scale(double,double)",498,503,"/**
 * Calls m1 on groupG2D and alphaG2D with provided coordinates.
 * @param sx x coordinate
 * @param sy y coordinate
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setTransform,org.apache.pdfbox.rendering.GroupGraphics:setTransform(java.awt.geom.AffineTransform),547,552,"/**
* Applies the given transform to both groupG2D and alphaG2D.
* @param tx The AffineTransform to apply.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,"org.apache.pdfbox.rendering.GroupGraphics:setClip(int,int,int,int)",298,303,"/**
* Calls m1 on groupG2D and alphaG2D with provided coordinates and dimensions.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setColor,org.apache.pdfbox.rendering.GroupGraphics:setColor(java.awt.Color),312,317,"/**
* Delegates Color processing to groupG2D and alphaG2D.
* @param c The Color object to be processed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setStroke,org.apache.pdfbox.rendering.GroupGraphics:setStroke(java.awt.Stroke),540,545,"/**
* Delegates Stroke processing to groupG2D and alphaG2D.
* @param s The Stroke object to be processed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D)",72,79,"/**
 * Initializes the GroupGraphics object with provided image and graphics.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Graphics2D)",81,88,"/**
 * Initializes GroupGraphics with provided images and graphics objects.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clipRect,"org.apache.pdfbox.rendering.GroupGraphics:clipRect(int,int,int,int)",97,102,"/**
 * Calls m1 on groupG2D and alphaG2D with given coordinates and dimensions.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,copyArea,"org.apache.pdfbox.rendering.GroupGraphics:copyArea(int,int,int,int,int,int)",104,109,"/**
 * Delegates drawing operations to groupG2D and alphaG2D.
 * @param x, y, width, height, dx, dy drawing parameters
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawArc,"org.apache.pdfbox.rendering.GroupGraphics:drawArc(int,int,int,int,int,int)",132,137,"/**
 * Draws an arc with specified parameters on both groupG2D and alphaG2D.
 * @param x, y start point, width, height dimensions, arc angles
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)",139,144,"/**
* Delegates to groupG2D and alphaG2D, returning alphaG2D's result.
* @param img Image to process, x, y coordinates, bgcolor, observer
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",153,159,"/**
* Delegates image drawing to groupG2D and alphaG2D.
* @param img Image to draw, x,y,width,height,bgcolor, observer
* @return boolean result of alphaG2D's drawing operation.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)",161,166,"/**
* Delegates image rendering to groupG2D and alphaG2D.
* @param img Image to render.
* @param x X coordinate.
* @param y Y coordinate.
* @param width Width of the region.
* @param height Height of the region.
* @param observer ImageObserver for image status.
* @return Result of alphaG2D's rendering.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",168,174,"/**
* Delegates drawing to groupG2D and alphaG2D.
* Passes all arguments to both methods. Returns result of alphaG2D.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawLine,"org.apache.pdfbox.rendering.GroupGraphics:drawLine(int,int,int,int)",184,189,"/**
 * Delegates drawing to groupG2D and alphaG2D.
 * @param x1, y1, x2, y2 coordinates for drawing.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawOval,"org.apache.pdfbox.rendering.GroupGraphics:drawOval(int,int,int,int)",191,196,"/**
* Calls m1 on groupG2D and alphaG2D with provided coordinates and dimensions.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolygon,"org.apache.pdfbox.rendering.GroupGraphics:drawPolygon(int[],int[],int)",198,203,"/**
* Delegates plotting to groupG2D and alphaG2D.
* @param xPoints x coordinates of points.
* @param yPoints y coordinates of points.
* @param nPoints number of points.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolyline,"org.apache.pdfbox.rendering.GroupGraphics:drawPolyline(int[],int[],int)",205,210,"/**
 * Calls m1 on groupG2D and alphaG2D with given points.
 * @param xPoints x-coordinates of points.
 * @param yPoints y-coordinates of points.
 * @param nPoints number of points.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:drawRoundRect(int,int,int,int,int,int)",212,217,"/**
 * Calls m1 on groupG2D and alphaG2D with provided parameters.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,int,int)",219,224,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param iterator Character iterator for rendering.
* @param x X coordinate.
* @param y Y coordinate.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,int,int)",226,231,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param str String parameter
* @param x int parameter
* @param y int parameter
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillArc,"org.apache.pdfbox.rendering.GroupGraphics:fillArc(int,int,int,int,int,int)",233,238,"/**
 * Draws an arc on both groupG2D and alphaG2D.
 * @param x, y start coordinates, width, height dimensions, angles.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillOval,"org.apache.pdfbox.rendering.GroupGraphics:fillOval(int,int,int,int)",240,245,"/**
 * Calls m1 on groupG2D and alphaG2D with given coordinates and dimensions.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillPolygon,"org.apache.pdfbox.rendering.GroupGraphics:fillPolygon(int[],int[],int)",247,252,"/**
 * Calls m1 on groupG2D and alphaG2D with provided points.
 * @param xPoints X coordinates of the points.
 * @param yPoints Y coordinates of the points.
 * @param nPoints Number of points.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRoundRect(int,int,int,int,int,int)",261,266,"/**
* Calls m1 on groupG2D and alphaG2D with given parameters.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClip,org.apache.pdfbox.rendering.GroupGraphics:getClip(),268,272,"/**
* Delegates shape retrieval to the group's shape method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClipBounds,org.apache.pdfbox.rendering.GroupGraphics:getClipBounds(),274,278,"/**
* Delegates Rectangle creation to groupG2D.
* @return Rectangle object created by groupG2D.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getColor,org.apache.pdfbox.rendering.GroupGraphics:getColor(),280,284,"/**
 * Delegates color retrieval to the group's m1() method.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFont,org.apache.pdfbox.rendering.GroupGraphics:getFont(),286,290,"/**
* Delegates Font retrieval to the groupG2D object.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontMetrics,org.apache.pdfbox.rendering.GroupGraphics:getFontMetrics(java.awt.Font),292,296,"/**
 * Retrieves font metrics from the group's G2D context.
 * @param f The font to get metrics for.
 * @return FontMetrics object.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,org.apache.pdfbox.rendering.GroupGraphics:setClip(java.awt.Shape),305,310,"/**
* Clips the group and alpha components using the provided shape.
* @param clip The shape to use for clipping.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setFont,org.apache.pdfbox.rendering.GroupGraphics:setFont(java.awt.Font),319,324,"/**
* Applies the given font to both groupG2D and alphaG2D.
* @param font The font to apply.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaintMode,org.apache.pdfbox.rendering.GroupGraphics:setPaintMode(),326,331,"/**
* Calls m1() on groupG2D and alphaG2D.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setXORMode,org.apache.pdfbox.rendering.GroupGraphics:setXORMode(java.awt.Color),333,338,"/**
 * Applies color to groupG2D and alphaG2D.
 * @param c1 The Color to apply.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(int,int)",340,345,"/**
 * Delegates m1 calls to groupG2D and alphaG2D.
 * @param x int value
 * @param y int value
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,addRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:addRenderingHints(java.util.Map),347,352,"/**
* Delegates method execution to groupG2D and alphaG2D.
* @param hints Map of hints to be passed to delegates.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setRenderingHints,org.apache.pdfbox.rendering.PageDrawer:setRenderingHints(),256,259,"/**
* Applies rendering hints to the graphics context.
*/",* Sets high-quality rendering hints on the current Graphics2D.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clip,org.apache.pdfbox.rendering.GroupGraphics:clip(java.awt.Shape),354,359,"/**
* Applies shape transformation to both groupG2D and alphaG2D.
* @param s The shape to be transformed.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,draw,org.apache.pdfbox.rendering.GroupGraphics:draw(java.awt.Shape),361,366,"/**
* Applies shape 's' to both groupG2D and alphaG2D.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawGlyphVector,"org.apache.pdfbox.rendering.GroupGraphics:drawGlyphVector(java.awt.font.GlyphVector,float,float)",368,373,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param g GlyphVector to draw with.
* @param x X coordinate.
* @param y Y coordinate.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)",375,380,"/**
* Applies an operation to an image at specified coordinates.
* @param img The image to operate on.
* @param op The operation to apply.
* @param x X coordinate.
* @param y Y coordinate.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)",382,387,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param img The image to process.
* @param xform The affine transform.
* @param obs The image observer.
* @return Result of alphaG2D's m1 call.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderableImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)",389,394,"/**
* Delegates rendering to group and alpha renderers.
* @param img The image to render.
* @param xform The affine transform to apply.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderedImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)",396,401,"/**
* Delegates rendering to groupG2D and alphaG2D.
* @param img The image to render.
* @param xform The affine transform to apply.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,float,float)",403,408,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param iterator AttributedCharacterIterator
* @param x x coordinate
* @param y y coordinate
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,float,float)",410,415,"/**
 * Delegates m1 calls to groupG2D and alphaG2D.
 * @param str String parameter
 * @param x Float parameter
 * @param y Float parameter
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fill,org.apache.pdfbox.rendering.GroupGraphics:fill(java.awt.Shape),417,422,"/**
* Applies shape 's' to both groupG2D and alphaG2D.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getBackground,org.apache.pdfbox.rendering.GroupGraphics:getBackground(),424,428,"/**
* Delegates color retrieval to the group's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getComposite,org.apache.pdfbox.rendering.GroupGraphics:getComposite(),430,434,"/**
 * Delegates m1() call to the groupG2D composite.
 * @return Composite object returned by groupG2D.m1()
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getDeviceConfiguration,org.apache.pdfbox.rendering.GroupGraphics:getDeviceConfiguration(),436,440,"/**
 * Delegates GraphicsConfiguration retrieval to groupG2D.
 * @return GraphicsConfiguration object from groupG2D.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontRenderContext,org.apache.pdfbox.rendering.GroupGraphics:getFontRenderContext(),442,446,"/**
* Returns the FontRenderContext from the group.
* Delegates to the group's FontRenderContext.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getPaint,org.apache.pdfbox.rendering.GroupGraphics:getPaint(),448,452,"/**
* Delegates Paint creation to groupG2D.
* @return Paint object created by groupG2D.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHint,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHint(java.awt.RenderingHints$Key),454,458,"/**
* Delegates the hint key lookup to the group's G2D.
* @param hintKey The rendering hint key to look up.
* @return The value associated with the hint key.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHints(),460,464,"/**
* Delegates to the group's RenderingHints method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getStroke,org.apache.pdfbox.rendering.GroupGraphics:getStroke(),466,470,"/**
* Delegates Stroke retrieval to groupG2D's m1() method.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,hit,"org.apache.pdfbox.rendering.GroupGraphics:hit(java.awt.Rectangle,java.awt.Shape,boolean)",478,482,"/**
* Delegates m1 call to groupG2D.
* @param rect Rectangle object
* @param s Shape object
* @param onStroke boolean flag
* @return Result of the delegated call
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,org.apache.pdfbox.rendering.GroupGraphics:rotate(double),484,489,"/**
* Applies the theta value to both groupG2D and alphaG2D.
* @param theta The angle value to be applied.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,"org.apache.pdfbox.rendering.GroupGraphics:rotate(double,double,double)",491,496,"/**
 * Delegates m1 calls to groupG2D and alphaG2D.
 * @param theta angle
 * @param x x-coordinate
 * @param y y-coordinate
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setComposite,org.apache.pdfbox.rendering.GroupGraphics:setComposite(java.awt.Composite),512,517,"/**
* Delegates m1 call to groupG2D and alphaG2D.
* @param comp The composite object to delegate to.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:setRenderingHints(java.util.Map),533,538,"/**
* Delegates method execution to groupG2D and alphaG2D.
* @param hints Map of hints to be passed to delegated methods.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,shear,"org.apache.pdfbox.rendering.GroupGraphics:shear(double,double)",554,559,"/**
* Delegates m1 calls to groupG2D and alphaG2D.
* @param shx x coordinate.
* @param shy y coordinate.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,transform,org.apache.pdfbox.rendering.GroupGraphics:transform(java.awt.geom.AffineTransform),561,566,"/**
* Applies the given transform to both groupG2D and alphaG2D.
* @param tx The AffineTransform to apply.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isBitonal,org.apache.pdfbox.rendering.PDFRenderer:isBitonal(java.awt.Graphics2D),484,502,"/**
 * Checks if the display mode's refresh rate is 1.
 * Uses Graphics2D to retrieve display mode info.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,create2ByteGrayAlphaImage,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:create2ByteGrayAlphaImage(int,int)",1940,1962,"/**
 * Creates a BufferedImage with specified width and height.
 * @param width image width
 * @param height image height
 * @return BufferedImage instance
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showType3Glyph,"org.apache.pdfbox.rendering.PageDrawer:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",577,587,"/**
 * Calls super.m4 if rendering mode is not NEITHER.
 * Handles font rendering based on the graphics state.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustImage,org.apache.pdfbox.rendering.PageDrawer:adjustImage(java.awt.image.BufferedImage),656,679,"/**
* Transforms a grayscale image based on the affine transform.
* Returns the transformed BufferedImage.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endPath,org.apache.pdfbox.rendering.PageDrawer:endPath(),1011,1015,"/**
 * Calls the m1() method on the linePath object.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,curveTo,"org.apache.pdfbox.rendering.PageDrawer:curveTo(float,float,float,float,float,float)",993,997,"/**
 * Delegates line drawing to the linePath object.
 * @param x1, y1, x2, y2, x3, y3 Coordinates for line drawing.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getCurrentPoint,org.apache.pdfbox.rendering.PageDrawer:getCurrentPoint(),999,1003,"/**
* Delegates to the linePath's m1() method.
* Returns a Point2D object from the linePath.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustClip,org.apache.pdfbox.rendering.PageDrawer:adjustClip(java.awt.geom.GeneralPath),1030,1072,"/**
 * Adjusts GeneralPath based on transformation type and scale.
 * @param linePath The GeneralPath to adjust.
 * @return Adjusted GeneralPath or original if no adjustments needed.
 */","* PDFBOX-5715 / PR#73: This was added to fix a problem with missing fine lines when printing
     * on MacOS. Lines vanish because CPrinterJob sets graphics scale to 1 for Printable so after
     * scaling lines often have a width smaller than 1 after scaling and clipping. This change
     * enlarges the clip bounds to cover at least 1 point plus 0.5 on one and another side in the
     * device space to allow to draw the linePath inside the clip. The linePath can consists from
     * different lines but when its bounds width or height is less than 1.0 it seems safe to use a
     * rectangle as a clip instead of the real path. A more detailed explanation can be read
     * <a href=""https://github.com/apache/pdfbox/pull/173"">here</a>.
     *
     * @param linePath
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getSubsampling,"org.apache.pdfbox.rendering.PageDrawer:getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)",1273,1294,"/**
* Calculates subsampling factor based on image dimensions and transform.
*/","* Calculates the subsampling frequency for a given PDImage based on the current transformation
     * and its calculated transform. Extend this method if you want to use your own strategy.
     *
     * @param pdImage PDImage to be drawn
     * @param at Transform that will be applied to the image when drawing
     * @return The rounded-down ratio of image pixels to drawn pixels. Returned value will always be
     * &gt;=1.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getInvLookupTable,org.apache.pdfbox.rendering.PageDrawer:getInvLookupTable(),2290,2302,"/**
 * Returns the inverse lookup table. Creates if null.
 * @return ByteLookupTable - inverse lookup table.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,getRaster,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:getRaster(int,int,int,int)",131,212,"/**
* Creates a raster with color adjustments and transfer function.
* @param x1, y1 rect origin, w width, h height
* @return WritableRaster with processed image data
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,dispose,org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:dispose(),214,218,"/**
 * Delegates method execution to the context object's m1 method.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,createContext,"org.apache.pdfbox.rendering.SoftMask:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",101,108,"/**
 * Creates a new PaintContext, wrapping the original with a SoftPaintContext.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,ceiling,org.apache.pdfbox.rendering.TilingPaint:ceiling(double),185,190,"/**
 * Rounds a double to the nearest integer, up towards positive infinity.
 */","* Returns the closest integer which is larger than the given number.
     * Uses BigDecimal to avoid floating point error which would cause gaps in the tiling.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,equals,org.apache.pdfbox.text.TextPosition:equals(java.lang.Object),901,970,"/**
 * Checks if two TextPosition objects are equal.
 * @param o object to compare to, must be a TextPosition
 * @return true if objects are equal, false otherwise
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,org.apache.pdfbox.rendering.TilingPaintFactory:<init>(org.apache.pdfbox.rendering.PageDrawer),48,51,"/**
 * Constructs a TilingPaintFactory with the given PageDrawer.
 * @param drawer The PageDrawer to use for drawing.
 */
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXRot,org.apache.pdfbox.text.TextPosition:getXRot(float),293,312,"/**
 * Calculates a value based on the rotation angle.
 * Returns a value from textMatrix or page dimensions.
 */","* Return the X starting coordinate of the text, adjusted by the given rotation amount.
     * The rotation adjusts where the 0,0 location is relative to the text.
     *
     * @param rotation Rotation to apply (0, 90, 180, or 270).  0 will perform no adjustments.
     * @return X coordinate",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYLowerLeftRot,org.apache.pdfbox.text.TextPosition:getYLowerLeftRot(float),356,375,"/**
 * Calculates a value based on rotation and textMatrix elements.
 * Returns a float value based on rotation angle.
 */","* This will get the y position of the character with 0,0 in lower left.
     * This will be adjusted by the given rotation.
     *
     * @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270)
     * @return The y coordinate of the text",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthRot,org.apache.pdfbox.text.TextPosition:getWidthRot(float),426,436,"/**
 * Calculates a value based on rotation. Returns a value derived from endX/endY.
 */","* Get the length or width of the text, based on a given rotation.
     *
     * @param rotation Rotation that was used to determine coordinates (0,90,180,270)
     * @return Width of text in display units",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeCharacters,org.apache.pdfbox.text.PDFTextStripper:writeCharacters(org.apache.pdfbox.text.TextPosition),821,824,"/**
* Writes the text position's content to the output stream.
* @param text The text position to write.
* @throws IOException if an I/O error occurs.
*/
","* Write the string in TextPosition to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,toString,org.apache.pdfbox.text.TextPosition:toString(),840,844,"/**
* Delegates to the m1() method and returns its result.
*/","* Show the string data for this text position.
     *
     * @return A human readable form of this object.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,getTextForRegion,org.apache.pdfbox.text.PDFTextStripperByArea:getTextForRegion(java.lang.String),101,105,"/**
* Retrieves and returns text for a given region name.
* @param regionName Name of the region to fetch text for.
*/","* Get the text for the region, this should be called after extractRegions().
     *
     * @param regionName The name of the region to get the text from.
     * @return The text that was identified in that region.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(boolean),442,445,"/**
* Writes data to the output stream.
* @param isLTR flag indicating text direction (unused)
* @throws IOException if an I/O error occurs
*/
","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead).
     * Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @param isLTR true if primary direction of text is left to right.
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endArticle,org.apache.pdfbox.text.PDFTextStripper:endArticle(),452,455,"/**
* Writes the result of m1() to the output using m2().
*/","* End an article. Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,overlap,"org.apache.pdfbox.text.PDFTextStripper:overlap(float,float,float,float)",762,766,"/**
* Checks if two rectangles overlap or are adjacent.
* @param y1, y2 Heights of the rectangles. Returns true if overlap.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLineSeparator,org.apache.pdfbox.text.PDFTextStripper:writeLineSeparator(),800,803,"/**
* Writes the result of m1() to the output stream.
*/","* Write the line separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the line separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeWordSeparator,org.apache.pdfbox.text.PDFTextStripper:writeWordSeparator(),810,813,"/**
* Writes the result of m1() to the output stream.
*/","* Write the word separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the word separator to the document.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphStart,org.apache.pdfbox.text.PDFTextStripper:writeParagraphStart(),1712,1721,"/**
 * Outputs data based on paragraph state, calls m1(), and m3().
 */","* Write something (if defined) at the start of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageStart,org.apache.pdfbox.text.PDFTextStripper:writePageStart(),1743,1746,"/**
* Writes the result of m1() to the output stream.
*/","* Write something (if defined) at the start of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageEnd,org.apache.pdfbox.text.PDFTextStripper:writePageEnd(),1753,1756,"/**
* Writes the result of m1() to the output stream.
*/","* Write something (if defined) at the end of a page.
     * 
     * @throws IOException if something went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchPattern,"org.apache.pdfbox.text.PDFTextStripper:matchPattern(java.lang.String,java.util.List)",1839,1849,"/**
 * Finds a pattern that matches the string.
 * @param string String to match against patterns.
 * @param patterns List of patterns to check.
 * @return Matching Pattern or null if no match found.
 */
","* iterates over the specified list of Patterns until it finds one that matches the specified string. Then returns
     * the Pattern.
     * <p>
     * Order of the supplied list of patterns is important as most common patterns should come first. Patterns should be
     * strict in general, and all will be used with case sensitivity on.
     * </p>
     * 
     * @param string the string to be searched
     * @param patterns list of patterns
     * @return matching pattern",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleDirection,org.apache.pdfbox.text.PDFTextStripper:handleDirection(java.lang.String),1907,1971,"/**
 * Masks characters in a string based on Bidi algorithm.
 * @param word The input string to be masked.
 * @return The masked string.
 */","* Handles the LTR and RTL direction of the given words. The whole implementation stands and falls with the given
     * word. If the word is a full line, the results will be the best. If the word contains of single words or
     * characters, the order of the characters in a word or words in a line may wrong, due to RTL and LTR marks and
     * characters!
     * 
     * Based on http://www.nesterovsky-bros.com/weblog/2013/07/28/VisualToLogicalConversionInJava.aspx
     * 
     * @param word The word that shall be processed
     * @return new word with the correct direction of the containing characters",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,parseBidiFile,org.apache.pdfbox.text.PDFTextStripper:parseBidiFile(java.io.InputStream),1996,2034,"/**
 * Processes input stream, extracts field pairs, and updates MIRRORING_CHAR_MAP.
 */","* This method parses the bidi file provided as inputstream.
     * 
     * @param inputStream - The bidi file as inputstream
     * @throws IOException if any line could not be read by the LineNumberReader",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getVisuallyOrderedUnicode,org.apache.pdfbox.text.TextPosition:getVisuallyOrderedUnicode(),188,208,"/**
* Checks text for right-to-left characters and reverses if found.
* Returns the original or reversed text.
*/
","* Same as {@link #getUnicode()} except that returned text is ensured to be
     * visually ordered (i.e. same order you would see them displayed on screen when
     * looking from left to right). This is important for Arabic/Hebrew where several
     * unicode characters can be composed in one glyph with logical order (the order
     * in which it would be normally typed from right to left).
     * 
     * @return The string on the screen in visual order.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripperByArea:processTextPosition(org.apache.pdfbox.text.TextPosition),136,147,"/**
 * Processes text positions within a region, updating characters.
 */",* {@inheritDoc},,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,isDiacritic,org.apache.pdfbox.text.TextPosition:isDiacritic(),813,833,"/**
 * Checks if the text contains specific character types.
 */",* @return True if the current character is a diacritic char.,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,formatTZoffset,"org.apache.pdfbox.util.DateConverter:formatTZoffset(long,java.lang.String)",286,292,"/**
 * Extracts time zone information from milliseconds.
 * @param millis Milliseconds since epoch; @param sep Separator string
 * @return Formatted time zone string.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTimeField,"org.apache.pdfbox.util.DateConverter:parseTimeField(java.lang.String,java.text.ParsePosition,int,int)",307,337,"/**
 * Parses an integer from the string, applying remedy if parsing fails.
 * @param text String to parse, @param where Parse position, @return int
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipOptionals,"org.apache.pdfbox.util.DateConverter:skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)",349,360,"/**
 * Extracts a masked character from text based on optionals.
 * @param text Input string, @param where ParsePosition, @param optionals Option characters
 * @return Masked character or current retval
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipString,"org.apache.pdfbox.util.DateConverter:skipString(java.lang.String,java.lang.String,java.text.ParsePosition)",370,378,"/**
* Checks if text starts with victim. Updates ParsePosition.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,newGreg,org.apache.pdfbox.util.DateConverter:newGreg(),388,394,"/**
 * Creates a GregorianCalendar instance set to UTC, milliseconds 0.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,adjustTimeZoneNicely,"org.apache.pdfbox.util.DateConverter:adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)",402,408,"/**
 * Adjusts the calendar to UTC time, considering timezone and DST.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,updateZoneId,org.apache.pdfbox.util.DateConverter:updateZoneId(java.util.TimeZone),482,509,"/**
* Sets the timezone's display name based on its offset.
* @param tz TimeZone object to update the display name for.
*/","* Update the zone ID based on the raw offset. This is either GMT, GMT+hh:mm or GMT-hh:mm, where
     * n is between 1 and 14. The highest negative hour is -14, the highest positive hour is 12.
     * Zones that don't fit in this schema are set to zone ID ""unknown"".
     *
     * @param tz the time zone to update.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte),53,57,"/**
 * Converts a byte to its hexadecimal string representation.
 */","* Returns a hex string of the given byte.
     * 
     * @param b the byte to be converted
     * @return the hex string representing the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte[]),65,73,"/**
 * Converts a byte array to a hexadecimal string representation.
 * @param bytes The byte array to convert.
 * @return Hexadecimal string.
 */
","* Returns a hex string of the given byte array.
     * 
     * @param bytes the bytes to be converted
     * @return the hex string representing the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte),81,84,"/**
 * Converts a byte to a byte array of two hex characters.
 */","* Returns the bytes corresponding to the ASCII hex encoding of the given byte.
     * 
     * @param b the byte to be converted
     * @return the ASCII hex encoding of the given byte",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte[]),92,101,"/**
 * Converts byte array to a hex-encoded byte array.
 * @param bytes input byte array
 * @return hex-encoded byte array
 */
","* Returns the bytes corresponding to the ASCII hex encoding of the given bytes.
     * 
     * @param bytes the bytey to be converted
     * @return the ASCII hex encoding of the given bytes",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexByte,"org.apache.pdfbox.util.Hex:writeHexByte(byte,java.io.OutputStream)",156,160,"/**
 * Writes two bytes derived from the input byte to the output stream.
 */","* Writes the given byte as hex value to the given output stream.
     * @param b the byte to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeBase64,org.apache.pdfbox.util.Hex:decodeBase64(java.lang.String),207,211,"/**
 * Decodes a Base64 string, removing spaces.
 * @param base64Value Base64 encoded string.
 * @return Decoded byte array.
 */
","* Decode a base64 String.
     *
     * @param base64Value a base64 encoded String.
     *
     * @return the decoded String as a byte array.
     *
     * @throws IllegalArgumentException if this isn't a base64 encoded string.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,merge,"org.apache.pdfbox.util.IterativeMergeSort:merge(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)",114,146,"/**
* Merges a portion of the array arr into aux using a comparator.
*/","* Merges two sorted subarrays arr and aux into the order specified by cmp and places the
     * ordered result back into into arr array.
     *
     * @param <T>
     * @param arr Array containing source data to be sorted and target for destination data
     * @param aux Array containing copy of source data to be sorted
     * @param from Start index of left data run so that Left run is arr[from : mid-1].
     * @param mid End index of left data run and start index of right run data so that Left run is
     * arr[from : mid-1] and Right run is arr[mid : to]
     * @param to End index of right run data so that Right run is arr[mid : to]
     * @param cmp the comparator to determine the order of the list.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(java.awt.geom.AffineTransform),122,132,"/**
 * Creates a Matrix from an AffineTransform.
 * Extracts transformation values from the AffineTransform.
 */
","* Creates a matrix with the same elements as the given AffineTransform.
     * @param at matrix elements will be initialize with the values from this affine transformation, as follows:
     *
     *           scaleX shearY 0
     *           shearX scaleY 0
     *           transX transY 1
     *",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(java.awt.geom.Point2D),324,335,"/**
 * Transforms a point using provided coefficients.
 * @param point The Point2D object to transform.
 */","* Transforms the given point by this matrix.
     *
     * @param point point to transform",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toString,org.apache.pdfbox.util.Matrix:toString(),578,588,"/**
 * Constructs a string from selected elements of the 'single' array.
 */",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,hashCode,org.apache.pdfbox.util.Matrix:hashCode(),590,594,"/**
* Delegates to Arrays.m1() using the 'single' array.
*/",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,formatFloatFast,"org.apache.pdfbox.util.NumberFormatUtil:formatFloatFast(float,int,byte[])",75,115,"/**
* Converts a float to an ASCII string in a byte array.
* @param value float to convert, @param maxFractionDigits fraction digits
* @param asciiBuffer buffer to store the ASCII representation
* @return number of bytes written to the buffer, or -1 on error.
*/","* Fast variant to format a floating point value to a ASCII-string. The format will fail if the
     * value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is
     * {@link Float#NaN}, infinite or the number of requested fraction digits is greater than
     * {@link #MAX_FRACTION_DIGITS}.
     * 
     * When the number contains more fractional digits than {@code maxFractionDigits} the value will
     * be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of 
     * rounding away from zero.
     * 
     * @param value The float value to format
     * @param maxFractionDigits The maximum number of fraction digits used
     * @param asciiBuffer The output buffer to write the formatted value to
     *
     * @return The number of bytes used in the buffer or {@code -1} if formatting failed",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,splitOnSpace,org.apache.pdfbox.util.StringUtil:splitOnSpace(java.lang.String),25,28,"/**
* Splits string by spaces using a predefined pattern.
* @param s The string to split.
* @return String array of split substrings.
*/
",,,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,getVersion,org.apache.pdfbox.util.Version:getVersion(),48,62,"/**
 * Retrieves the PDFBox version from properties file.
 * Returns version string or null if unable to read.
 */","* Returns the version of PDFBox.
     * 
     * @return the version of PDFBox",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,"org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream,boolean)",69,91,"/**
 * Parses an XML document from an input stream.
 * @param is Input stream containing XML data.
 * @param nsAware Flag to enable/disable namespace awareness.
 * @return Document object representing the parsed XML.
 */","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @param nsAware activates namespace awareness of the parser
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,find,org.apache.pdfbox.util.filetypedetector.ByteTrie:find(byte[]),70,88,"/**
 * Traverses trie based on bytes, returning associated value.
 * @param bytes byte array to traverse the trie with
 * @return Value found at the end of the traversal, or initial value
 */","* Return the most specific value stored for this byte sequence. If not found, returns
     * <code>null</code> or a default values as specified by calling
     * {@link ByteTrie#setDefaultValue}.
     * @param bytes
     * @return",,,True,2
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Constructs a DrawObject with the given PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes a Color object with the given PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a NonStrokingColorSpace with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Creates a StrokingColorSpace with the given PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/GraphicsOperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.GraphicsOperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Constructs a GraphicsOperatorProcessor with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a BeginMarkedContentSequence object with a context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a BeginMarkedContentSequenceWithProperties.
 * @param context The PDF stream engine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),46,49,"/**
 * Constructs a DrawObject with the given PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs an EndMarkedContentSequence with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a MarkedContentPoint with the given PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a MarkedContentPointWithProperties with a PDFStreamEngine.
 * @param context The PDFStreamEngine instance.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,<init>,org.apache.pdfbox.contentstream.operator.state.Concatenate:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Constructs a Concatenate object, initializing the parent class.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,<init>,org.apache.pdfbox.contentstream.operator.state.Restore:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a Restore object, initializing it with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,<init>,org.apache.pdfbox.contentstream.operator.state.Save:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),34,37,"/**
 * Constructs a Save object, initializing the context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetFlatness:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a SetFlatness object with a PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),42,45,"/**
 * Initializes a SetGraphicsStateParameters with a PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a LineCapStyle object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
* Constructs a SetLineDashPattern object with a PDFStreamEngine.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a LineJoinStyle object with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes a SetLineMiterLimit object with a PDFStreamEngine.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineWidth:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a SetLineWidth object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetMatrix:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a SetMatrix object, initializing with a PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a SetRenderingIntent object with a PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,<init>,org.apache.pdfbox.contentstream.operator.text.BeginText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a BeginText object, passing the PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,<init>,org.apache.pdfbox.contentstream.operator.text.EndText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes an EndText object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Constructs a MoveText object with the given PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes a MoveTextSetLeading object with a PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.NextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NextLine object with the provided PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a CharSpacing object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),45,48,"/**
 * Initializes a SetFontAndSize object with a PDFStreamEngine context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a TextHorizontalScaling object with a PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a SetTextLeading object, passing the context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a TextRenderingMode with the given PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRise:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a TextRise object with the given PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
* Initializes a SetWordSpacing object with a PDFStreamEngine context.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a ShowText object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a ShowTextAdjusted object with the given context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Constructs a ShowTextLine object with the given PDFStreamEngine.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a ShowTextLineAndSpace object with a PDFStreamEngine.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<init>,org.apache.pdfbox.cos.COSBoolean:<init>(boolean),55,58,"/**
 * Initializes a COSBoolean object with the given boolean value.
 * @param aValue the boolean value to be stored
 */
","* Constructor.
     *
     * @param aValue The boolean value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<init>,org.apache.pdfbox.cos.COSName:<init>(java.lang.String),716,719,"/**
 * Initializes a COSName object with the given name.
 * @param aName The name for the COSName object.
 */
","* Private constructor. This will limit the number of COSName objects that are created.
     * 
     * @param aName The name of the COSName object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<init>,org.apache.pdfbox.cos.COSNull:<init>(),42,45,"/**
 * Private constructor to prevent instantiation of COSNull.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(byte[],boolean)",76,80,"/**
 * Creates a COSString object from byte array.
 * @param bytes The byte array representing the string.
 * @param forceHex Whether to force hex representation.
 */
","* Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file,
     * or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,"org.apache.pdfbox.cos.COSArray:<init>(java.util.ArrayList,boolean)",71,76,"/**
 * Constructs a COSArray with given objects and direct flag.
 * @param cosObjects Array of COSBase objects.
 * @param direct Whether the array is direct.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(),63,66,"/**
 * Constructs a new COSDictionary object, initializing its state.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase),45,50,"/**
 * Constructs a COSObject with the given base object.
 * @param object The COSBase object to wrap.
 */
","* Constructor.
     *
     * @param object The object that this encapsulates.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.ICOSParser)",72,78,"/**
 * Constructs a COSObject with a base object and parser.
 * @param object The base COSBase object.
 * @param parser The parser used for parsing.
 */
","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.ICOSParser)",87,92,"/**
 * Constructs a COSObject with a key and parser.
 * @param key COSObjectKey identifying the object
 * @param parser ICOSParser for parsing the object
 */
","* Constructor.
     *
     * @param key The object number of the encapsulated object.
     * @param parser The parser to be used to load the object on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:<init>(boolean),223,226,"/**
* Sets the filterSubsampled flag using the provided boolean value.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,"org.apache.pdfbox.filter.DecodeOptions:<init>(int,int,int,int)",69,72,"/**
 * Constructs DecodeOptions with given rectangle dimensions.
 * @param x x coordinate
 * @param y y coordinate
 * @param width rectangle width
 * @param height rectangle height
 */
","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param x x-coordinate of the top-left corner of the region to be decoded
     * @param y y-coordinate of the top-left corner of the region to be decoded
     * @param width Width of the region to be decoded
     * @param height Height of the region to be decoded",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from8bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",461,551,"/**
* Decodes image data from PDImage into a WritableRaster.
* @param pdImage image to decode, raster, clipped area, subsampling, width, height
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,decode,"org.apache.pdfbox.filter.ASCIIHexFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",66,105,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream containing encoded data.
 * @param decoded Output stream for decoded data.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,decode,"org.apache.pdfbox.filter.IdentityFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,40,"/**
* Decodes data from input stream to output stream.
* @param encoded Input stream, @param decoded Output stream,
* @param parameters COSDictionary, @param index Index
* @return DecodeResult object
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,decode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",36,75,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream, parameters, index. Returns DecodeResult.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.FreeXReference:<init>(org.apache.pdfbox.cos.COSObjectKey,long)",41,46,"/**
* Creates a FreeXReference object.
* @param key COSObjectKey, reference key.
* @param nextFreeObject next free object identifier.
*/
","* Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}).
     *
     * @param key The key, that shall be set as the free reference of the document.
     * @param nextFreeObject The object number of the next free object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:<init>(int,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",46,54,"/**
 * Creates an ObjectStreamXReference with given parameters.
 * @param objectStreamIndex stream index
 * @param key COSObjectKey
 * @param object COSBase object
 * @param parentKey COSObjectKey parent key
 */
","* Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param objectStreamIndex The index of the {@link COSObject} in the containing object stream.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.
     * @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(),31,34,"/**
 * Default constructor, initializes with default caching enabled.
 */",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDTypedDictionaryWrapper from a COSDictionary.
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDAttributeObject from a COSDictionary.
 * @param dictionary The COSDictionary to initialize from.
 */
","* Creates a new attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject)",50,55,"/**
 * Constructs a PDUserProperty with a COSDictionary and user attribute.
 */","* Creates a user property with a given dictionary.
     * 
     * @param dictionary the dictionary
     * @param userAttributeObject the user attribute object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDOutlineNode using the provided COSDictionary.
 */",* @param dict The dictionary storage.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Creates a transition object from a COSDictionary.
 * @param dictionary The COSDictionary containing transition data.
 */
","* creates a new transition for an existing dictionary
     * 
     * @param dictionary the dictionary to be used for the new transition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Creates a PDDestinationNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDEmbeddedFilesNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
* Constructs a PDJavascriptNameTreeNode from a COSDictionary.
*/","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDStructureElementNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),234,237,"/**
 * Creates a PDNumberTreeNode from a COSDictionary.
 * @param dic The COSDictionary to use.
 * @return A new PDNumberTreeNode.
 */
","* Create a child node object.
     *
     * @param dic The dictionary for the child node object to refer to.
     * @return The new child node object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.cos.COSStream),71,74,"/**
 * Constructs a PDMetadata object from a COSStream.
 */","* Constructor. This will <b>not</b> set up the /Type and /Subtype entries.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDObjectStream:<init>(org.apache.pdfbox.cos.COSStream),40,43,"/**
 * Constructs a PDObjectStream from a COSStream object.
 */","* Constructor.
     *
     * @param str The stream parameter.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.cos.COSStream),49,52,"/**
 * Constructs a PDEmbeddedFile from a COSStream object.
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunction:<init>(org.apache.pdfbox.cos.COSBase),53,64,"/**
 * Initializes a PDFunction with a COSBase object.
 * Handles COSStream and COSDictionary types.
 */
","* Constructor.
     *
     * @param function The function stream.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentStream,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentStream(),71,74,"/**
 * Creates a PDStream from the charStream.
 * @return A PDStream object.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",98,104,"/**
 * Creates a PDXObject with a COSStream and subtype.
 * @param stream The COSStream containing the object data.
 * @param subtype The subtype of the object.
 */
","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentStream(),152,155,"/**
* Creates a PDStream object using the result of m1().
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentStream(),169,172,"/**
 * Creates a PDStream from the COSStream obtained from m1().
 * @return A PDStream object.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a PDStructureElement with the given COSDictionary.
 */","* Constructor for an existing structure element.
     *
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Creates a PDStructureTreeRoot object from a COSDictionary.
 */","* Constructor for an existing structure element.
     * 
     * @param dic The existing dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(),118,120,"/**
 * Private constructor to prevent direct instantiation.
 */
",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),127,131,"/**
 * Constructs a SecurityHandler with the given protection policy.
 * @param protectionPolicy The policy for encryption/decryption.
 */
","* Constructor used for encryption.
     *
     * @param protectionPolicy The protection policy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a FDFAnnotationCaret with the given COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a FDF annotation circle from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
* Constructs a FDFAnnotationFileAttachment from a COSDictionary.
*/
","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Constructs a FDFAnnotationFreeText object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a FDFAnnotationInk object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Constructs a FDFAnnotationLine object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a FDFAnnotationLink from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a FDFAnnotationPolygon from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a FDFAnnotationPolyline from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates a FDF annotation sound from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),55,58,"/**
 * Constructs a FDFAnnotationSquare with the given COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs a FDFAnnotationStamp from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Creates a FDF annotation text object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
* Constructs a FDFAnnotationTextMarkup object from a COSDictionary.
*/
","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),27,30,"/**
 * Constructs an AcroFormDefaultFixup with a PDDocument.
 * @param document The document to associate with this fixup.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),41,44,"/**
 * Constructs an AcroFormDefaultsProcessor with a PDDocument.
 * @param document The document to process.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),31,34,"/**
 * Constructs an AcroFormGenerateAppearancesProcessor.
 * @param document The PDF document to process.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),55,58,"/**
 * Constructs an AcroFormOrphanWidgetsProcessor for the given document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName),96,99,"/**
* Constructs a FontType with a type, using default value for other fields.
* @param type The font type COSName.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:<init>(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String,org.apache.pdfbox.pdmodel.font.CIDSystemInfo,int,int,int,int,int,byte[],org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,long)",86,105,"/**
 * Creates a new FSFontInfo with the provided font details.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,getPanose,org.apache.pdfbox.pdmodel.font.PDPanose:getPanose(),63,67,"/**
 * Creates a PDPanoseClassification from a byte array slice.
 * @return PDPanoseClassification object
 */","* Ten bytes for the PANOSE classification number for the font.
     * 
     * @see <a href=""http://www.monotype.com/services/pan1"">http://www.monotype.com/services/pan1</a>
     * 
     * @return the PANOSE classification number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,getInstance,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",51,75,"/**
 * Creates a Composite based on blendMode and constantAlpha.
 * @param blendMode Blend mode to use.
 * @param constantAlpha Alpha value between 0 and 1.
 */","* Creates a blend composite
     *
     * @param blendMode Desired blend mode
     * @param constantAlpha Constant alpha, must be in the inclusive range
     * [0.0...1.0] or it will be clipped.
     * @return a blend composite.
     * @throws IllegalArgumentException if blendMode is null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getGroup,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getGroup(),128,139,"/**
 * Returns the transparency group attributes, creating if needed.
 * Returns PDTransparencyGroupAttributes object.
 */","* Returns the transparency group attributes dictionary.
     *
     * @return the transparency group attributes dictionary, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDShadingPattern from a COSDictionary.
 */","* Creates a new shading pattern from the given COS dictionary.
     * @param resourceDictionary The COSDictionary for this pattern resource.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",84,88,"/**
 * Constructs a PDTilingPattern with a dictionary and resource cache.
 * @param dictionary COSDictionary for pattern definition
 * @param resourceCache ResourceCache for accessing resources
 */
","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.
     * @param resourceCache The resource cache, may be null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Creates a Type 1 shading object from a COSDictionary.
 * @param shadingDictionary The dictionary containing shading info.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDShadingType2 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Constructs a PDTriangleBasedShadingType from a COSDictionary.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,org.apache.pdfbox.util.Matrix)",45,48,"/**
 * Creates an AxialShadingPaint with the given shading type and matrix.
 */","* Constructor.
     *
     * @param shadingType2 the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Initializes a RadialShadingPaint with a shading and matrix.
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type1ShadingPaint with the given shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type4ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Initializes a Type5ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a Type6ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a Type7ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a PDExtendedGraphicsState with a COSDictionary.
 * @param dictionary The COSDictionary containing state information.
 */
","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary),106,109,"/**
 * Creates a PDSoftMask with a COSDictionary.
 * @param dictionary The COSDictionary for the mask.
 */
","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.lang.String),51,72,"/**
 * Creates a PlainText object from a string, splitting into paragraphs.
 * @param textValue The text to parse into paragraphs.
 */
","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,build,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:build(),121,124,"/**
 * Creates and returns a new PlainTextFormatter instance.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
* Constructs a PDActionEmbeddedGoTo object from a COSDictionary.
*/
","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Constructs a PDActionGoTo object from a COSDictionary.
*/
","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionHide object from a COSDictionary.
 */","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionImportData object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDActionJavaScript object from a COSDictionary.
 */","* Constructor #2.
     *
     *  @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionLaunch object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDActionMovie object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDActionNamed object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionRemoteGoTo object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDActionResetForm from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionSound object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDActionSubmitForm with the given COSDictionary.
 */","* Constructor
     *
     * @param a the action dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionThread with the provided COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionURI object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAppearanceDictionary,"org.apache.pdfbox.pdmodel.PDDocument:assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",614,620,"/**
* Initializes widget appearance and associates with the widget.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
* Constructor for PDAbstractAppearanceHandler.
* @param annotation The annotation this handler is for.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",44,47,"/**
 * Constructs a PDCaretAppearanceHandler with an annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Constructs a PDCircleAppearanceHandler with annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",43,46,"/**
 * Creates a PDFileAttachmentAppearanceHandler.
 * @param annotation The annotation object.
 * @param document The document object.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",66,69,"/**
 * Constructs a PDFreeTextAppearanceHandler with annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",48,51,"/**
 * Creates a PDHighlightAppearanceHandler for an annotation.
 * @param annotation The annotation to handle.
 * @param document The document containing the annotation.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",42,45,"/**
 * Creates a PDInkAppearanceHandler with annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",46,49,"/**
 * Constructs a PDLineAppearanceHandler for a given annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Constructs a PDLinkAppearanceHandler with annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Creates a PDPolygonAppearanceHandler for an annotation.
 * @param annotation The annotation to handle.
 * @param document The document containing the annotation.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",45,48,"/**
 * Creates a PDPolylineAppearanceHandler.
 * @param annotation The annotation object.
 * @param document The document object.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",28,31,"/**
* Constructs a PDSoundAppearanceHandler with annotation and document.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Constructs a PDSquareAppearanceHandler with annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",52,55,"/**
 * Constructs a SquigglyAppearanceHandler for a given annotation.
 * @param annotation The PDAnnotation to handle.
 * @param document The document containing the annotation.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
* Creates a strikeout appearance handler for an annotation.
* @param annotation The annotation to handle.
* @param document The document containing the annotation.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,79,"/**
 * Constructs a PDTextAppearanceHandler for an annotation and document.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Creates a PDUnderlineAppearanceHandler.
 * @param annotation The annotation associated with this handler.
 * @param document The document containing the annotation.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toKeyValueList,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:toKeyValueList(java.util.List,java.util.List)",86,94,"/**
 * Combines key and value lists into a List of KeyValue objects.
 * @param key List of keys
 * @param value List of values
 * @return List of KeyValue objects
 */
","* Return two related lists as a single list with key value pairs.
     * 
     * @param key the key elements
     * @param value the value elements
     * @return a sorted list of KeyValue elements.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
 * Constructs a PDNonTerminalField.
 * @param acroForm The parent acroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent PDNonTerminalField.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
 * Creates a PDTerminalField, initializing with form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDRectlinearMeasureDictionary from a COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMatrix,org.apache.pdfbox.pdmodel.PDPage:getMatrix(),387,392,"/**
 * Creates and returns a new Matrix object.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,clone,org.apache.pdfbox.util.Matrix:clone(),443,447,"/**
* Returns a new Matrix based on the m1() result of the 'single' Matrix.
*/","* Clones this object.
     * @return cloned matrix as an object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getFontMatrix(),168,203,"/**
 * Gets the font matrix, using cidFont or t1Font, or default.
 * @return Matrix object representing the font matrix.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getFontMatrix(),185,194,"/**
 * Returns the font matrix. Creates a new one if it's null.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1CFont:getFontMatrix(),312,341,"/**
* Gets the font matrix, using default if retrieval fails.
* Returns the font matrix or default if unavailable.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1Font:getFontMatrix(),662,693,"/**
 * Retrieves the font matrix. Uses generic font or default if error.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScaleInstance,"org.apache.pdfbox.util.Matrix:getScaleInstance(float,float)",388,391,"/**
 * Creates a Matrix with specified x and y values.
 * @param x The x-coordinate.
 * @param y The y-coordinate.
 * @return A 2x2 Matrix initialized with x and y.
 */","* Convenience method to create a scaled instance.
     *
     * Produces the following matrix:
     * x 0 0
     * 0 y 0
     * 0 0 1
     *
     * @param x The xscale operator.
     * @param y The yscale operator.
     * @return A new matrix with just the x/y scaling",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getTranslateInstance,"org.apache.pdfbox.util.Matrix:getTranslateInstance(float,float)",405,408,"/**
 * Creates a 2x2 identity matrix with translation.
 * @param x Translation along x-axis.
 * @param y Translation along y-axis.
 * @return A Matrix object representing the transformation.
 */","* Convenience method to create a translating instance.
     *
     * Produces the following matrix:
     * 1 0 0
     * 0 1 0
     * x y 1
     *
     * @param x The x translating operator.
     * @param y The y translating operator.
     * @return A new matrix with just the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getRotateInstance,"org.apache.pdfbox.util.Matrix:getRotateInstance(double,float,float)",418,424,"/**
 * Creates a transformation matrix with given rotation and translation.
 * @param theta Rotation angle in radians.
 * @param tx Translation along x-axis.
 * @param ty Translation along y-axis.
 */
","* Convenience method to create a rotated instance.
     *
     * @param theta The angle of rotation measured in radians
     * @param tx The x translation.
     * @param ty The y translation.
     * @return A new matrix with the rotation and the x/y translating.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(org.apache.pdfbox.util.Vector),363,374,"/**
 * Applies a transformation matrix to the input vector.
 * @param vector The vector to transform.
 * @return Transformed vector.
 */","* Transforms the given vector by this matrix.
     *
     * @param vector 2D vector
     *
     * @return the transformed vector.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,scale,org.apache.pdfbox.util.Vector:scale(float),60,63,"/**
 * Creates a new vector with components scaled by sxy.
 * @param sxy Scaling factor for x and y components.
 * @return New vector with scaled components.
 */
","* Returns a new vector scaled by both x and y.
     *
     * @param sxy x and y scale
     * @return a new vector scaled by both x and y",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(),33,36,"/**
 * Default constructor, uses DEFAULT_OBJECT_STREAM_SIZE.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldTree,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldTree(),429,432,"/**
 * Creates a new PDFieldTree instance, referencing this object.
 */","* Return the field tree representing all form fields
     * 
     * @return the field tree representing all form fields",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,isEmpty,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:isEmpty(),931,935,"/**
* Checks if the result of chained method calls equals zero.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setDefaultValue,org.apache.pdfbox.util.filetypedetector.ByteTrie:setDefaultValue(java.lang.Object),121,124,"/**
 * Calls method m1 on root with the provided default value.
 * @param defaultValue The default value to pass to m1.
 */
","* Sets the default value to use in {@link ByteTrie#find(byte[])} when no path matches.
     * @param defaultValue",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObject(int),66,69,"/**
* Delegates to m1() and then m2(index).
* @param index Index to pass to m2.
* @return Result of the chained method calls.
*/
","* Returns the object at the specified position.
     * 
     * @param index the position
     * @return the object
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,size,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:size(),115,118,"/**
* Delegates to m1().m2() and returns the result.
*/","* Returns the size.
     * 
     * @return the size",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumber(int),78,81,"/**
 * Delegates to m1().m2(index) to perform an operation.
 */","* Returns the revision number at the specified position.
     * 
     * @param index the position
     * @return the revision number
     * @throws IndexOutOfBoundsException if the index is out of range",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,addObject,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:addObject(java.lang.Object,int)",89,93,"/**
* Applies an object and revision number via internal methods.
*/","* Adds an object with a specified revision number.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,setRevisionNumber,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:setRevisionNumber(java.lang.Object,int)",101,108,"/**
 * Updates revision number for object if found in the index.
 * @param object The object to locate.
 * @param revisionNumber The new revision number.
 */
","* Sets the revision number of a specified object.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isCIDSubtype,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:isCIDSubtype(org.apache.pdfbox.cos.COSName),106,113,"/**
* Checks if subtype matches the given CID subtype.
* @param cidSubtype CID subtype to check against.
* @return True if subtype matches, false otherwise.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getInstance,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getInstance(org.apache.pdfbox.cos.COSName),42,64,"/**
 * Determines encoding based on COSName. Returns encoding instance or null.
 */","* This will get an encoding by name. May return null.
     *
     * @param name The name of the encoding to get.
     * @return The encoding that matches the name.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,toLongName,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:toLongName(org.apache.pdfbox.cos.COSBase),151,166,"/**
 * Returns a device color space name based on the input COSBase.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.ResourceCache)",62,85,"/**
 * Creates a PDSoftMask from a COSBase dictionary.
 * @param dictionary COSBase object representing the SMask.
 * @param resourceCache Resource cache for managing resources.
 * @return PDSoftMask object or null if invalid.
 */","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * @param resourceCache Resource cache, may be null.
     * 
     * @return the newly created instance of PDSoftMask",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedIndex,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedIndex(),94,106,"/**
* Finds the index of the first non-off PDAnnotationWidget.
* Returns -1 if all widgets are off.
*/
","* This will get the selected index.
     * <p>
     * A RadioButton might have multiple same value options which are not selected jointly if
     * they are not set in unison {@link #isRadiosInUnison()}.</p>
     * 
     * <p>
     * The method will return the first selected index or -1 if no option is selected.</p>
     * 
     * @return the first selected index or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.lang.String),296,299,"/**
* Overloads m1 to accept a file path string.
* @param source file path string
* @throws FileNotFoundException if file not found
*/
","* Add a source file to the list of files to merge.
     *
     * @param source Full path and file name of source document.
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseTrailer,org.apache.pdfbox.pdfparser.XrefParser:parseTrailer(),206,258,"/**
* Parses the trailer object from the source, resolving Xref.
*/","* This will parse the trailer from the stream and add it to the state.
     *
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(org.apache.pdfbox.filter.DecodeOptions),302,307,"/**
 * Delegates to the default m1() method, returning an InputStream.
 * @param options DecodeOptions object, unused in this implementation.
 * @return InputStream from the default m1() method.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getObject(org.apache.pdfbox.cos.COSObjectKey),279,282,"/**
* Retrieves a COSBase object from the object pool.
* @param key Key to identify the object in the pool.
* @return The COSBase object or null if not found.
*/
","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool.
     *
     * @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if
     * such an object is contained.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),80,110,"/**
* Executes instructions, handling strings as operators and pushing others.
*/","* Executes the instruction sequence.
     * @param context the execution context",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,"org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.cos.ICOSParser)",134,138,"/**
 * Constructs a COSDocument with a stream cache and parser.
 * @param streamCacheCreateFunction Function to create a stream cache.
 * @param parser The parser to use for parsing the document.
 */
","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     * @param parser Parser to be used to parse the document on demand
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",916,935,"/**
 * Processes an operator with given operands.
 * @param operator The operator to process.
 * @param operands List of operands for the operator.
 */","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextLineMatrix(),1047,1050,"/**
* Returns the m2() of the matrix returned by m1().
*/",* @return Returns the textLineMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextLineMatrix(org.apache.pdfbox.util.Matrix),1055,1058,"/**
 * Delegates matrix processing to m1().
 * @param value The Matrix object to process.
 */",* @param value The textLineMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextMatrix(),1063,1066,"/**
 * Returns the m2() of the m1() matrix.
 */",* @return Returns the textMatrix.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextMatrix(org.apache.pdfbox.util.Matrix),1071,1074,"/**
 * Delegates matrix processing to the result of m1().m2(value).
 */",* @param value The textMatrix to set.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformWidth,org.apache.pdfbox.contentstream.PDFStreamEngine:transformWidth(float),1138,1144,"/**
* Calculates a masked width based on matrix elements.
* @param width The input width value.
* @return A masked float value derived from matrix elements.
*/
","* Transforms a width using the CTM.
     * 
     * @param width the width to be transformed
     * 
     * @return the transformed width",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColor(),40,44,"/**
* Returns a PDColor object by chaining method calls.
*/","* Returns the non-stroking color.
     * @return The non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Applies a color to a chain of method calls.
* @param color The color to apply.
*/","* Sets the non-stroking color.
     * @param color The new non-stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColorSpace(),60,64,"/**
* Returns the function mask by chaining method calls.
*/","* Returns the non-stroking color space.
     * @return The non-stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColor(),40,44,"/**
* Returns a PDColor object by chaining method calls.
*/","* Returns the stroking color.
     * @return The stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Applies a color to the component using chained method calls.
* @param color The PDColor to apply.
*/","* Sets the stroking color.
     * @param color The new stroking color.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColorSpace(),60,64,"/**
* Returns the function mask. Delegates to m1(), m2(), and m3().
*/","* Returns the stroking color space.
     * @return The stroking color space.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRise:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
 * Processes operator with arguments, updating a value.
 * @param operator The operator to process.
 * @param arguments List of arguments for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,54,"/**
 * Sets word spacing using provided value.
 * @param operator Operator object.
 * @param arguments List of arguments.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,74,"/**
 * Draws a rectangle using the provided operator and operands.
 * @param operator Operator to execute.
 * @param operands List of COSBase operands for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,80,"/**
* Draws a cubic Bezier curve using provided operands.
* @param operator Operator object.
* @param operands List of COSBase operands for the curve.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,66,"/**
 * Draws a quadratic Bezier curve using the provided operator and operands.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
 * Draws a cubic Bezier curve using provided operands.
 * @param operator Operator object.
 * @param operands List of COSBase operands for the curve.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.LineTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Draws a line to a specified point using operator and operands.
* @param operator Operator object.
* @param operands List of COSBase operands.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.MoveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,65,"/**
* Moves the current position to (x, y) coordinates.
* @param operator Operator object.
* @param operands List of operands for the operator.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
 * Processes an operator with operands, throwing exceptions if needed.
 * @param operator The operator to process.
 * @param operands List of operands for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
 * Processes an operator with operands, throwing exception if missing.
 * @param operator The operator to process.
 * @param operands List of operands for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,process,"org.apache.pdfbox.contentstream.operator.state.SetFlatness:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
 * Processes an operator with operands, throwing exception if missing.
 * @param operator The operator to process.
 * @param operands List of operands for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Applies line cap style to the graphics state based on arguments.
* @param operator Operator object.
* @param arguments List of COSBase arguments.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
 * Processes operator with arguments, setting line join style.
 * @param operator Operator being processed.
 * @param arguments List of COSBase arguments.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,55,"/**
 * Applies miter limit from arguments to the current graphics state.
 * @param operator Operator object.
 * @param arguments List of arguments for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineWidth:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
 * Processes operator with arguments, throwing exception if missing.
 * @param operator The operator to process.
 * @param arguments Arguments for the operator.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,process,"org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,58,"/**
* Sets rendering intent based on COSName operand.
* @param operator Operator object.
* @param operands List of operands.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,60,"/**
* Sets character spacing based on arguments.
* @param operator Operator object.
* @param arguments List of COSBase arguments.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,57,"/**
 * Applies a scaling factor to a resource.
 * @param operator Operator object.
 * @param arguments List of arguments for the operation.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
 * Processes operator with arguments, throws exception if missing.
 * @param operator The operator to process.
 * @param arguments Arguments for the operator.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Sets rendering mode based on arguments.
* @param operator Operator object.
* @param arguments List of COSBase arguments.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,process,"org.apache.pdfbox.contentstream.operator.state.Restore:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
 * Executes a function with given operator and arguments.
 * @param operator The operator to execute.
 * @param arguments Arguments for the operator.
 * @throws IOException if an I/O error occurs.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawInputStream,org.apache.pdfbox.cos.COSStream:createRawInputStream(),132,156,"/**
 * Creates and returns an InputStream for reading data.
 * Returns RandomAccessInputStream or throws IOException.
 */","* Returns a new InputStream which reads the encoded PDF stream data. Experts only!
     * 
     * @return InputStream containing raw, encoded PDF stream data.
     * @throws IOException If the stream could not be read.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawOutputStream,org.apache.pdfbox.cos.COSStream:createRawOutputStream(),261,290,"/**
* Creates and returns an OutputStream for writing data.
* Handles random access and ensures only one stream is open.
*/","* Returns a new OutputStream for writing encoded PDF data. Experts only!
     * 
     * @return OutputStream for raw PDF stream data.
     * @throws IOException If the output stream could not be created.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findImageReader,"org.apache.pdfbox.filter.Filter:findImageReader(java.lang.String,java.lang.String)",159,172,"/**
 * Finds an ImageReader for the given format name.
 * @param formatName image format name
 * @param errorCause error message if reader is missing
 * @throws MissingImageReaderException if no reader found
 */","* Finds a suitable image reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findRasterReader,"org.apache.pdfbox.filter.Filter:findRasterReader(java.lang.String,java.lang.String)",182,199,"/**
 * Finds an ImageReader for the given format, or throws an exception.
 * @param formatName Image format name.
 * @param errorCause Error cause string.
 * @throws MissingImageReaderException if no reader is found.
 */","* Finds a suitable image raster reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,getOperator,org.apache.pdfbox.contentstream.operator.Operator:getOperator(java.lang.String),60,85,"/**
 * Retrieves an Operator based on the provided operator string.
 * Returns an Operator object or creates one if not found.
 */","* This is used to create/cache operators in the system.
     *
     * @param operator The operator for the system.
     *
     * @return The operator that matches the operator keyword.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toString,org.apache.pdfbox.pdmodel.common.COSArrayList:toString(),580,584,"/**
* Returns a string representation of the COSArrayList.
* Delegates to the underlying array's string representation.
*/
",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,isEdgeALine,org.apache.pdfbox.pdmodel.graphics.shading.Patch:isEdgeALine(java.awt.geom.Point2D[]),143,150,"/**
 * Checks if control points satisfy a condition based on their values.
 * @param ctl Array of Point2D objects used for calculation.
 * @return True if condition is met, false otherwise.
 */","* Whether the for control points are on a line.
     *
     * @param ctl an edge's control points, the size of ctl is 4
     * @return true when 4 control points are on a line, otherwise false",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Constructs a PDArtifactMarkedContent with given properties.
* @param properties COS dictionary containing artifact properties
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftX(),215,218,"/**
* Retrieves a float value from a COSNumber object within rectArray.
*/","* This will get the lower left x coordinate.
     *
     * @return The lower left x.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftY(),235,238,"/**
* Returns a float value from the rectArray at index 1.
*/","* This will get the lower left y coordinate.
     *
     * @return The lower left y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightX(),255,258,"/**
* Returns a float value from an element within the rectArray.
*/","* This will get the upper right x coordinate.
     *
     * @return The upper right x .",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightY(),275,278,"/**
* Retrieves a float value from rectArray at index 3.
*/","* This will get the upper right y coordinate.
     *
     * @return The upper right y.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFontSize(),104,108,"/**
* Retrieves the size value from a COSNumber object.
*/","* This will get the size of the font.
     *
     * @return The size of the font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,initComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:initComponents(org.apache.pdfbox.cos.COSArray),81,95,"/**
 * Extracts color components from a COSArray, converting numbers.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getR(),79,82,"/**
* Retrieves a float value from the COSNumber at index 0.
*/","* Returns the r value of the tristimulus.
     * @return the R value.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getG(),97,100,"/**
* Retrieves a float value from COSNumber at index 1.
*/","* Returns the g value of the tristimulus.
     * @return the g value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getB(),115,118,"/**
* Retrieves a float value from COSNumber at index 2 in 'values'.
*/","* Returns the b value of the tristimulus.
     * @return the B value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getX(),82,85,"/**
* Retrieves a float value from the COSNumber at index 0.
*/","* Returns the x value of the tristimulus.
     * @return the X value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getY(),100,103,"/**
* Retrieves a float value from COSNumber at index 1.
*/","* Returns the y value of the tristimulus.
     * @return the Y value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getZ(),118,121,"/**
* Retrieves a float value from COSNumber at index 2.
*/","* Returns the z value of the tristimulus.
     * @return the Z value",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,"org.apache.pdfbox.cos.COSArray:getInt(int,int)",318,330,"/**
 * Retrieves a value from objects, defaulting to defaultValue.
 * @param index Index to retrieve.
 * @param defaultValue Value if index is out of bounds.
 */
","* Get the value of the array as an integer, return the default if it does not exist.
     *
     * @param index The value of the array.
     * @param defaultValue The value to return if the value is null.
     * @return The value at the index or the defaultValue.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,"org.apache.pdfbox.cos.COSArray:getName(int,java.lang.String)",370,382,"/**
 * Retrieves a string value from objects or uses defaultValue.
 * @param index The index to retrieve.
 * @param defaultValue Value if index is out of bounds.
 */","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOf,org.apache.pdfbox.cos.COSArray:indexOf(org.apache.pdfbox.cos.COSBase),539,557,"/**
 * Finds the index of the first matching COSBase object.
 * Returns -1 if no match is found.
 */","* This will return the index of the entry or -1 if it is not found.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getFilterList,org.apache.pdfbox.cos.COSStream:getFilterList(),295,324,"/**
 * Extracts filters from COSBase, handling name or array formats.
 * @return List of Filter objects, or empty list if no filters.
 */",* Returns the list of filters.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.util.List,org.apache.pdfbox.cos.COSArray)",75,85,"/**
 * Initializes a COSArrayList with a list and COSArray.
 * @param actualList The list of elements.
 * @param cosArray The corresponding COSArray.
 */
","* Create the COSArrayList specifying the List and the backing COSArray.
     * 
     * <p>User of this constructor need to ensure that the entries in the List and
     * the backing COSArray are matching i.e. the COSObject of the List entry is
     * included in the COSArray.
     *   
     * <p>If the number of entries in the List and the COSArray differ
     * it is assumed that the List has been filtered. In that case the COSArrayList
     * shall only be used for reading purposes and no longer for updating.
     * 
     * @param actualList The list of standard java objects
     * @param cosArray The COS array object to sync to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:eval(float[]),87,102,"/**
* Calculates a masked float array based on input and COS numbers.
* @param input float array used in calculation
* @return Masked float array
*/
","* Performs exponential interpolation
     *
     * {@inheritDoc}",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(),511,525,"/**
 * Calls m2 on currentStream, retries if -1, returns result.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,available,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:available(),527,535,"/**
 * Returns 1 if m1() succeeds, otherwise returns 0.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(byte[],int,int)",537,551,"/**
* Reads bytes from the current stream.
* @param b buffer, off offset, len length.
* @return Number of bytes read or -1 on error.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:<init>(org.apache.pdfbox.cos.COSArray),182,212,"/**
 * Initializes ObjectNumbers from a COSArray.
 * @param indexArray COSArray containing start and size values.
 * @throws IOException if the array contains non-integer values.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFilters(),238,250,"/**
 * Extracts COS names from filters, returns list or empty list.
 */","* This will get the list of filters that are associated with this stream.
     * 
     * @return A (possibly empty) list of all encoding filters to apply to this stream, never null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFileFilters(),358,371,"/**
 * Extracts filter names from a stream. Returns a list or empty list.
 */","* This will get the list of filters that are associated with this stream. The list is empty if there are none.
     * 
     * @return A list of all encoding filters to apply to this stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromBoolean,org.apache.pdfbox.pdfwriter.COSWriter:visitFromBoolean(org.apache.pdfbox.cos.COSBoolean),1180,1184,"/**
* Calls m2 on the given COSBoolean object, passing m1's result.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSBoolean,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSBoolean(java.io.OutputStream,org.apache.pdfbox.cos.COSBoolean)",294,298,"/**
* Writes a COSBoolean to the output stream, followed by a space.
* @param output Output stream to write to
* @param cosBoolean COSBoolean object to write
*/","* Write the given {@link COSBoolean} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosBoolean The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromNull,org.apache.pdfbox.pdfwriter.COSWriter:visitFromNull(org.apache.pdfbox.cos.COSNull),1368,1372,"/**
* Sets the next object's value using the current object's value.
* @param obj The COSNull object to modify.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,write,org.apache.pdfbox.pdmodel.PDAbstractContentStream:write(java.lang.String),1503,1506,"/**
* Processes text by encoding to ASCII and passing to m2.
*/","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSDictionary,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSDictionary(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",342,359,"/**
* Writes a COSDictionary to the output stream.
* @param output Output stream to write to.
* @param cosDictionary Dictionary to write.
*/","* Write the given {@link COSDictionary} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosDictionary The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:potentiallyNotifyChanged(java.lang.Object,java.lang.Object)",161,167,"/**
 * Updates attribute object if old and new entries match.
 * @param oldEntry The previous entry.
 * @param newEntry The new entry.
 */
","* Notifies the user attribute object if the user property is changed.
     * 
     * @param oldEntry old entry
     * @param newEntry new entry",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,size,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:size(),60,64,"/**
* Delegates m1() call to the underlying map.
* @return Integer value returned by map.m1()
*/
",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSObject,org.apache.pdfbox.cos.COSDictionary:getCOSObject(org.apache.pdfbox.cos.COSName),535,543,"/**
 * Retrieves a COSObject by key, returns null if not a COSObject.
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSObject.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,"org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1204,1212,"/**
 * Retrieves a COSBase object by firstKey, or secondKey if firstKey is null.
 */","* This is a special case of getItem that takes multiple keys, it will handle the situation
     * where multiple keys could get the same value, ie if either CS or ColorSpace is used to get
     * the colorspace. This will get an object from this dictionary.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientsLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientsLength(),446,450,"/**
* Retrieves the recipient count from the COS array.
*/","* Returns the number of recipients contained in the Recipients field of the dictionary.
     *
     * @return the number of recipients contained in the Recipients field.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientStringAt,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientStringAt(int),459,463,"/**
* Retrieves a recipient COSString from the recipients array.
* @param i Index of the recipient in the array.
* @return COSString representing the recipient.
*/
","* returns the COSString contained in the Recipients field at position i.
     *
     * @param i the position in the Recipients field array.
     *
     * @return a COSString object containing information about the recipient number i.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDirection(),122,130,"/**
* Retrieves a COSBase item or returns COSInteger.ZERO if null.
*/","* @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger}
     * or {@link COSName#NONE}. Default to {@link COSInteger#ZERO}
     * @see PDTransitionDirection",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getMetadataKeys,org.apache.pdfbox.pdmodel.PDDocumentInformation:getMetadataKeys(),262,270,"/**
* Extracts keys from m3() and returns them as a sorted set.
*/","* This will get the keys of all metadata information fields for the document.
     *
     * @return all metadata key strings.
     * @since Apache PDFBox 1.3.0",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeNames(),58,66,"/**
 * Retrieves a list of attribute names based on a filter.
 * Returns a List<String> of attribute names.
 */","* Gets the attribute names.
     * 
     * @return the attribute names",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addTrailerInfo,org.apache.pdfbox.pdfparser.PDFXRefStream:addTrailerInfo(org.apache.pdfbox.cos.COSDictionary),123,133,"/**
 * Processes trailer dictionary, writing specific keys to the stream.
 * @param trailerDict The COSDictionary to process.
 */
","* Copy all Trailer Information to this file.
     * 
     * @param trailerDict dictionary to be added as trailer info",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),73,77,"/**
 * Constructs a COSDictionary from another COSDictionary.
 * Copies all entries from the provided dictionary.
 */
","* Copy Constructor. This will make a shallow copy of this dictionary.
     *
     * @param dict The dictionary to copy.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isInfo,org.apache.pdfbox.pdfparser.BruteForceParser:isInfo(org.apache.pdfbox.cos.COSDictionary),743,757,"/**
* Checks if a dictionary has specific COS names.
* Returns true if MOD_DATE or other metadata is present.
*/","* Tell if the dictionary is an info dictionary.
     * 
     * @param dictionary the dictionary to be checked
     * @return true if the given dictionary is an info dictionary",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasWidths,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasWidths(),661,664,"/**
* Checks if WIDTHS or MISSING_WIDTH is present in the dictionary.
*/","* Returns true if widths are present in the font descriptor.
     * 
     * @return true if widths are present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasMissingWidth(),671,674,"/**
* Checks if the dictionary contains a missing width COS name.
*/","* Returns true if the missing widths entry is present in the font descriptor.
     * 
     * @return true if the missing widths entry is present in the font descriptor",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,hasXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:hasXFA(),564,567,"/**
* Checks if the dictionary contains the XFA COS name.
* @return True if XFA exists, false otherwise.
*/
","* This will tell if the AcroForm has XFA content.
     *
     * @return true if the AcroForm is an XFA form",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getBruteForceParser,org.apache.pdfbox.pdfparser.COSParser:getBruteForceParser(),923,930,"/**
 * Returns the BruteForceParser instance, creating it if null.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,nextXrefObj,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",152,157,"/**
* Associates a byte position with an XrefTrailerObj and sets its type.
* @param startBytePos Starting byte position.
* @param type Xref type to assign.
*/
","* Signals that a new XRef object (table or stream) starts.
     * @param startBytePos the offset to start at
     * @param type the type of the Xref object",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(float[]),361,414,"/**
 * Applies colorant masks to RGB values.
 * @param value RGB float array to be masked.
 * @return Masked RGB float array.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectFromPool,org.apache.pdfbox.pdfparser.BaseParser:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),263,271,"/**
* Retrieves a COSBase object from the document by key.
* @param key The COSObjectKey to retrieve.
* @throws IOException if document is null.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(java.lang.String),67,112,"/**
 * Parses a float string, handles PDFBox specific formatting issues.
 * @param aFloat String representation of a float value.
 * @throws IOException if parsing fails.
 */
","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.
     *
     * @throws IOException If aFloat is not a float.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,toString,org.apache.pdfbox.cos.COSFloat:toString(),194,198,"/**
 * Returns a string representation of COSFloat, including m1().
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,writePDF,org.apache.pdfbox.cos.COSFloat:writePDF(java.io.OutputStream),234,237,"/**
* Writes data to the output stream using encoded characters.
* @param output The OutputStream to write to.
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,toIncrement,org.apache.pdfbox.cos.COSUpdateState:toIncrement(),339,342,"/**
* Creates a COSIncrement object using the updateInfo.
* @return A new COSIncrement instance.
*/
","* Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on the managed {@link #updateInfo}.
     * @see COSUpdateInfo
     * @see COSIncrement",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<init>,org.apache.pdfbox.multipdf.LayerUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,71,"/**
 * Initializes LayerUtility with a PDF document and PDFCloneUtility.
 * @param targetDoc The PDF document to operate on.
 */
","* Creates a new instance.
     * @param targetDoc the PDF document to modify",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(),91,94,"/**
 * Constructs a DefaultResourceCache with caching enabled.
 */",* Default constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,create,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:create(),47,51,"/**
 * Creates and returns a new ResourceCache instance.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isNeedToBeUpdated,org.apache.pdfbox.pdfwriter.COSWriter:isNeedToBeUpdated(org.apache.pdfbox.cos.COSBase),613,620,"/**
* Delegates m1 call to COSUpdateInfo if base is an instance.
* @param base The COSBase object to check.
* @return True if COSUpdateInfo, false otherwise.
*/","* Convenience method, so that we get false for types that can't be updated.
     * 
     * @param base
     * @return",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(int),620,627,"/**
* Recursive call to m2 with a modified MCID.
* @param mcid Integer value; must be non-negative.
*/","* Appends a marked-content sequence kid.
     * 
     * @param mcid the marked-content id (MCID).
     * @throws IllegalArgumentException if the mcid is negative.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,getCOSBase,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:getCOSBase(),69,72,"/**
* Returns a COSBase object representing the degrees value.
*/",* @return the value for this direction,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromInt,org.apache.pdfbox.pdfwriter.COSWriter:visitFromInt(org.apache.pdfbox.cos.COSInteger),1356,1360,"/**
* Sets the COS value of the given object using the result of m1().
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSInteger,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSInteger(java.io.OutputStream,org.apache.pdfbox.cos.COSInteger)",282,286,"/**
* Writes COSInteger to OutputStream, followed by a space.
* @param output Output stream to write to
* @param cosInteger Integer value to write
*/
","* Write the given {@link COSInteger} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosInteger The content, that shall be written.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:hasExplicitWidth(int),479,483,"/**
* Delegates the call to m1 on the descendantFont.
* @param code The code to pass to descendantFont's m1.
* @return The result of descendantFont's m1.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addComment(java.lang.String),1422,1431,"/**
 * Writes a comment to the output stream, ensuring no newlines.
 * @param comment The comment string to write.
 * @throws IllegalArgumentException if the comment contains newline.
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDFormContentStream:addComment(java.lang.String),1422,1431,"/**
 * Writes a comment to the output stream, ensuring no newlines.
 * @param comment The comment string to write.
 * @throws IllegalArgumentException if the comment contains newline.
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPageContentStream:addComment(java.lang.String),1422,1431,"/**
 * Writes a comment to the output stream, ensuring no newlines.
 * @param comment The comment string to write.
 * @throws IllegalArgumentException if comment contains newline.
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPatternContentStream:addComment(java.lang.String),1422,1431,"/**
 * Writes a comment to the output stream, ensuring no newlines.
 * @param comment The comment string to write.
 * @throws IllegalArgumentException if comment contains newline.
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int)",42,45,"/**
 * Constructs a COSObjectKey with a generation number.
 * @param num The object number.
 * @param gen The generation number.
 */
","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),73,86,"/**
* Delegates to m1().m2() or returns -1/1 based on input.
*/","* Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer
     * as this object is less than, equal to, or greater than the specified object.
     *
     * @param xReferenceEntry the object to be compared.
     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than
     * the specified object.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:getRaster(int,int,int,int)",170,302,"/**
* Creates a raster based on input coordinates and values.
* @param x, y, w, h defines the raster's dimensions and position.
* @return A new raster object.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXScale,org.apache.pdfbox.text.TextPosition:getXScale(),534,537,"/**
* Returns the first element of the text matrix.
*/","* This will get the X scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The X scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYScale,org.apache.pdfbox.text.TextPosition:getYScale(),546,549,"/**
* Returns the value of the first matrix element (m1).
*/","* This will get the Y scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The Y scaling factor.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",248,253,"/**
 * Creates a COSWriter with an output stream and compression parameters.
 */
","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.
     * @param compressParameters The configuration for the document's compression.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead)",265,275,"/**
 * Initializes a COSWriter with an output stream and input data.
 */","* COSWriter constructor for incremental updates. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(byte[]),63,67,"/**
* Calls m1 with the entire byte array.
* @param b The byte array to process.
* @throws IOException if an I/O error occurs.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getListOfByteArraysFromCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray),627,638,"/**
 * Extracts byte arrays from COSString objects within a COSArray.
 * @param array COSArray to process
 * @return List of byte arrays extracted from COSStrings
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(boolean),233,239,"/**
* Sets the 'updated' flag if m1() returns true.
*/","* Sets the {@link #updated} state of the managed {@link #updateInfo} to the given state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @param updated The state to set for {@link #updated}.
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getString,org.apache.pdfbox.cos.COSString:getString(),210,229,"/**
* Decodes bytes using UTF-16BE/LE or fallback encoding.
*/","* Returns the content of this string as a PDF <i>text string</i>.
     * 
     * @return the PDF string representation of the COSString",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(java.lang.String,boolean)",99,127,"/**
 * Creates a COSString, encoding text as PDFDocEncoding or UTF-16BE.
 * @param text The string to encode.
 * @param forceHex Whether to force hex encoding.
 */
","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDFont:isStandard14(),619,631,"/**
* Checks a condition; returns false if m1() is true, else uses m3().
*/","* Returns true if this font is one of the ""Standard 14"" fonts and receives special handling.
     * 
     * @return true if this font is one of the ""Standard 14"" fonts",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,"org.apache.pdfbox.filter.ASCII85InputStream:read(byte[],int,int)",179,203,"/**
 * Reads up to {@code len} bytes from input into {@code data}.
 * @param data buffer to fill, @param offset offset in buffer,
 * @param len max bytes to read, @return bytes read or -1 if EOF
 */","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param len The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,decode,"org.apache.pdfbox.filter.ASCII85Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",31,41,"/**
 * Decodes ASCII85 encoded data to OutputStream.
 * @param encoded Input stream. @param decoded Output stream.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,close,org.apache.pdfbox.filter.ASCII85OutputStream:close(),233,245,"/**
 * Calls m1, super.m2, then nulls indata/outdata.
 */","* This will close the stream.
     *
     * @throws IOException If there is an error closing the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRun,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree),374,400,"/**
 * Calculates a total value by traversing the Huffman tree.
 * Returns the total or columns based on node value.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:close(),1550,1558,"/**
* Checks if endText() was called; logs warning if not.
* Writes output stream data.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDFormContentStream:close(),1550,1558,"/**
 * Checks if endText() was called; logs warning if not.
 * Writes to the output stream.
 */","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPageContentStream:close(),1550,1558,"/**
 * Checks if endText() was called; logs warning if not.
 * Writes to the output stream.
 */","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPatternContentStream:close(),1550,1558,"/**
 * Checks if endText() was called and writes to the output stream.
 */","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeRun,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeRun(int,boolean)",149,165,"/**
 * Processes run-length encoded data, using white or black codes.
 * @param runLength run length value
 * @param white boolean indicating white code usage
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeEOL,org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeEOL(),255,257,"/**
 * Calls m1 with arguments 1 and 12.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,readImageRaster,"org.apache.pdfbox.filter.DCTFilter:readImageRaster(javax.imageio.ImageReader,javax.imageio.ImageReadParam)",136,172,"/**
* Reads a raster from an ImageReader, handling CMYK images.
* @param reader ImageReader to read from.
* @param irp ImageReadParam for reading.
* @return Raster object.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,org.apache.pdfbox.filter.FlateFilterDecoderStream:read(),125,137,"/**
 * Reads the next decoded byte. Returns -1 if EOF or no more data.
 */","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,"org.apache.pdfbox.filter.FlateFilterDecoderStream:read(byte[],int,int)",150,175,"/**
* Reads bytes from decoded data into the provided byte array.
* @param data Destination byte array.
* @param offset Offset within the data array.
* @param length Number of bytes to read.
* @return Number of bytes read, or -1 if EOF.
*/","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param length The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,readImageStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:readImageStream(java.io.InputStream),444,448,"/**
* Reads an image from the input stream and processes it.
* @param stream Input stream containing the image data.
* @throws IOException if an I/O error occurs.
*/
","* Read the image stream of the signature and set height and width.
     *
     * @param stream stream of your visible signature image
     * @throws IOException If we can't read, flush, or close stream of image",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,doLZWDecode,"org.apache.pdfbox.filter.LZWFilter:doLZWDecode(java.io.InputStream,java.io.OutputStream,boolean)",74,128,"/**
 * Decodes data from an encoded stream to a decoded output stream.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,encode,"org.apache.pdfbox.filter.LZWFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,220,"/**
 * Encodes data using a dynamic code table.
 * @param rawData Input stream to encode.
 * @param encoded Output stream for encoded data.
 * @param parameters COSDictionary for parameters.
 */",* {@inheritDoc},,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodeAndWriteRow,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:decodeAndWriteRow(),329,334,"/**
 * Processes data, writes to output, and performs cleanup.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,chooseDataRowToWrite,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:chooseDataRowToWrite(),631,659,"/**
 * Selects the best raw data row based on compression estimates.
 * Returns the selected byte array.
 */","* We look which row encoding is the ""best"" one, ie. has the lowest sum. We don't implement
         * anything fancier to choose the right row encoding. This is just the recommend algorithm
         * in the spec. The get the perfect encoding you would need to do a brute force check how
         * all the different encoded rows compress in the zip stream together. You have would have
         * to check 5*image-height permutations...
         *
         * @return the ""best"" row encoding of the row encodings",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver:reset(),362,370,"/**
* Iterates through xref trailers, calls m1 on each, clears refs.
*/","* Reset all data so that it can be used to rebuild the trailer.
     *",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<init>(),44,53,"/**
 * Registers default security handlers and protection policies.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,close,org.apache.pdfbox.multipdf.Overlay:close(),170,203,"/**
 * Calls m1() on various overlays and open documents.
 */","* Close all input documents which were used for the overlay and opened by this class.
     *
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,closeTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:closeTemplate(org.apache.pdfbox.pdmodel.PDDocument),401,406,"/**
* Processes a PDF template, calling methods on it and structure.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,next,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:next(),53,69,"/**
* Advances to the next outline item. Throws exception if no more items.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream),67,71,"/**
 * Constructs a PDFormXObject with the given stream.
 * @param stream The stream containing form data.
 */
","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(org.apache.pdfbox.contentstream.PDContentStream),58,61,"/**
 * Creates a PDFStreamParser from a PDContentStream.
 * @param pdContentstream The content stream to parse.
 */
","* Constructor.
     *
     * @param pdContentstream The content stream to parse.
     * @throws IOException If there is an error initializing the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(byte[]),68,71,"/**
* Creates a PDFStreamParser from a byte array.
* @param bytes The byte array containing the PDF stream.
*/
","* Constructor.
     *
     * @param bytes the bytes to parse.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseObject,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseObject(long),83,112,"/**
* Retrieves a COSBase object from the source at the given object number.
*/","* Search for/parse the object with the given object number. The stream is closed after parsing the object with the
     * given number.
     * 
     * @param objectNumber the number of the object to b e parsed
     * @return the parsed object or null if the object with the given number can't be found
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,readObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:readObjectNumbers(),220,233,"/**
 * Retrieves object numbers from m2(), cleans up resources.
 * @return Map of object numbers or null if an error occurred.
 */
","* Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers.
     * 
     * @return a map off all object numbers and the corresponding offset within the object stream.
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:<init>(java.util.Map),35,38,"/**
* Initializes encoding map with provided code-to-name mappings.
*/","* Constructor.
     *
     * @param codeToName the given code to name mapping",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,fromFontBox,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:fromFontBox(org.apache.fontbox.encoding.Encoding),36,43,"/**
 * Creates a Type1Encoding from the given encoding's code-to-name map.
 */","* Creates an encoding from the given FontBox encoding.
     *
     * @param encoding FontBox encoding
     * @return the encoding created from the given FontBox encoding",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipWhiteSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipWhiteSpaces(),409,425,"/**
* Skips leading whitespace from the source.
* Reads whitespace until condition is met, then adjusts source.
*/","* Skip the upcoming CRLF or LF which are supposed to follow a stream. Trailing spaces are removed as well.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(),434,443,"/**
 * Checks a condition based on source data; returns true if successful.
 */","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLine,org.apache.pdfbox.pdfparser.BaseParser:readLine(),1162,1188,"/**
 * Reads a masked string from the source, throwing IOException on EOF.
 * Returns the masked string or null if an error occurs.
 */","* This will read bytes until the first end of line marker occurs.
     * NOTE: The EOL marker may consists of 1 (CR or LF) or 2 (CR and CL) bytes
     * which is an important detail if one wants to unread the line.
     *
     * @return The characters between the current position and the end of the line.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipSpaces(),1319,1343,"/**
 * Processes data from the source, handling specific character values.
 */","* This will skip all spaces and comments that are present.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getNumberOfColorComponents(),115,124,"/**
 * Returns the number of color components.
 * Uses m1() or m2().m3() if not already determined.
 */
","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getNumberOfColorComponents(),115,124,"/**
 * Returns the number of color components, caching the result.
 */","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRef,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRef(long),227,269,"/**
* Calculates a new offset based on xref tables/streams.
* @param xrefOffset The original xref offset value.
* @return The calculated new offset value.
*/
","* Search for the offset of the given xref table/stream among those found by a brute force search.
     * 
     * @param xrefOffset the given offset to be searched for
     * 
     * @return the offset of the xref entry
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parsePDFHeader,org.apache.pdfbox.pdfparser.COSParser:parsePDFHeader(),1058,1061,"/**
* Checks PDF header version.
* @return True if valid, throws IOException on failure.
*/
","* Parse the header of a pdf.
     * 
     * @return true if a PDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFDFHeader,org.apache.pdfbox.pdfparser.COSParser:parseFDFHeader(),1069,1072,"/**
* Calls m1 with FDF_HEADER and FDF_DEFAULT_VERSION.
* @return True if m1 succeeds, false otherwise.
*/","* Parse the header of a fdf.
     * 
     * @return true if a FDF header was found
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseAllObjects,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseAllObjects(),120,172,"/**
 * Extracts COS objects from the source, returning a map of them.
 * @return Map of COSObjectKey to COSBase objects.
 */","* Parse all compressed objects. The stream is closed after parsing.
     * 
     * @return a map containing all parsed objects using the object number as key
     * @throws IOException if there is an error while parsing the stream",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeStreamData,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeStreamData(java.io.OutputStream,int[])",236,250,"/**
* Writes data to OutputStream using provided data and weights.
* @param os Output stream to write to.
* @param w Integer array containing weights for data writing.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefRange,"org.apache.pdfbox.pdfwriter.COSWriter:writeXrefRange(long,long)",987,993,"/**
 * Logs two long values as strings, separated by a space.
 * @param x The first long value to log.
 * @param y The second long value to log.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,next,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:next(),91,100,"/**
* Retrieves the next field from the queue.
* Throws NoSuchElementException if the queue is empty.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,calcFinalKey,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:calcFinalKey(long,long)",247,273,"/**
 * Generates a masked key by combining encryption key, object/gen numbers.
 */","* Calculate the key to be used for RC4 and AES-128.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @return the calculated key.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev234(byte[],byte[],int,byte[],boolean,int,int)",737,778,"/**
* Generates a masked byte array based on input parameters.
* @param password Password for hashing.
* @param o Input byte array.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRC4key,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRC4key(byte[],int,int)",948,966,"/**
 * Generates an RC4 key based on password, revision, and length.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeSHA256,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeSHA256(byte[],byte[],byte[])",1199,1205,"/**
 * Generates a masked digest using input, password, and userKey.
 * @param input Input byte array.
 * @param password Password byte array.
 * @param userKey User key byte array.
 * @return Masked digest byte array.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",71,74,"/**
 * Creates an AppearanceContentStream from an AppearanceStream.
 * @param appearance The source AppearanceStream.
 * @param outputStream The output stream to write to.
 */
","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to add to.
     * @param outputStream
     *            The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",221,224,"/**
 * Creates a content stream with a document, appearance, and output stream.
 */","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the appearance is part of.
     * @param appearance The appearance stream to add to.
     * @param outputStream The appearances output stream to write to.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformedPoint,"org.apache.pdfbox.contentstream.PDFStreamEngine:transformedPoint(float,float)",1123,1129,"/**
 * Transforms a point (x, y) using a sequence of matrix operations.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return Transformed Point2D.Float object.
 */
","* Transforms a point using the CTM.
     * 
     * @param x the x-coordinate of the point to be transformed
     * @param y the y-coordinate of the point to be transformed
     * 
     * @return the transformed point",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,createContext,"org.apache.pdfbox.rendering.TilingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",109,122,"/**
 * Creates a PaintContext, applying pattern transformations.
 * @param cm ColorModel, deviceBounds, userBounds, xform, hints
 * @return PaintContext object
 */","* Not called in TexturePaint subclasses, which is why we wrap TexturePaint.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix),227,230,"/**
* Applies m1 and m2 transformations to the matrix's single element.
*/","* Concatenates (premultiplies) the given matrix to this matrix.
     *
     * @param matrix The matrix to concatenate.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,"org.apache.pdfbox.util.Matrix:translate(float,float)",248,254,"/**
* Updates single array elements based on tx, ty, then calls m1.
*/","* Translates this matrix by the given amount.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,scale,"org.apache.pdfbox.util.Matrix:scale(float,float)",262,271,"/**
 * Scales the 'single' array by sx and sy, then applies m1.
 */","* Scales this matrix by the given factors.
     *
     * @param sx x-scale
     * @param sy y-scale",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,multiply,org.apache.pdfbox.util.Matrix:multiply(org.apache.pdfbox.util.Matrix),290,293,"/**
* Combines two matrices using m1 and m2 transformations.
* @param other The other matrix to combine with.
* @return A new matrix resulting from the combination.
*/
","* This method multiplies this Matrix with the specified other Matrix, storing the product in a 
     * new instance. It is allowed to have (other == this).
     *
     * @param other the second operand Matrix in the multiplication; required
     * @return the product of the two matrices.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,encodeForGsub,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:encodeForGsub(org.apache.fontbox.ttf.gsub.GsubWorker,java.util.Set,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1683,1700,"/**
 * Encodes text using gsubWorker and font, handling single glyph words.
 * @param gsubWorker gsub worker object
 * @param glyphIds Set of glyph IDs
 * @param font PDType0Font object
 * @param text Text to encode
 * @return Encoded byte array
 */","* Retrieve the encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules. The glyph IDs used are also added to the specified glyph ID set.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param glyphIds The set of glyph IDs which is to be populated with the glyph IDs found in the
     * text.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param text The text which is being converted from characters to glyph IDs.
     * @return The encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules.
     * @throws IOException If there is an error during encoding.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,createDocument,org.apache.pdfbox.pdfparser.PDFParser:createDocument(),194,197,"/**
 * Creates a PDDocument instance using provided document and source.
 * @return A new PDDocument object.
 * @throws IOException if an I/O error occurs.
 */
","* Create the resulting document. Maybe overwritten if the parser uses another class as document.
     * 
     * @return the resulting document
     * @throws IOException if the method is called before parsing the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",213,216,"/**
 * Constructs a PDDocument with a COSDocument and RandomAccessRead.
 * @param doc The COSDocument.
 * @param source The RandomAccessRead source.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,44,"/**
 * Pops two operands, performs operation, pushes result to stack.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:isEqual(java.lang.Object,java.lang.Object)",135,140,"/**
 * Inverts the result of the parent class's m1 method.
 * @param op1 First object.
 * @param op2 Second object.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForPolicy,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),84,95,"/**
 * Creates a SecurityHandler for the given policy.
 * @param policy ProtectionPolicy to create handler for.
 * @return SecurityHandler instance or null if not found.
 */","* Returns a new security handler for the given protection policy, or null none is available.
     * @param policy the protection policy for which to create a security handler
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForFilter,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForFilter(java.lang.String),102,113,"/**
 * Creates a SecurityHandler instance based on the given name.
 * @param name Name of the security handler to create.
 * @return SecurityHandler instance or null if not found.
 */","* Returns a new security handler for the given Filter name, or null none is available.
     * @param name the Filter name from the PDF encryption dictionary
     * @return a new SecurityHandler instance, or null if none is available",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getNumber,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:getNumber(int,java.lang.String)",343,365,"/**
 * Formats page index based on style. Returns formatted string.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getDashArray,org.apache.pdfbox.rendering.PageDrawer:getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),758,791,"/**
* Processes a line dash pattern, adjusting dash lengths.
* @param dashPattern The line dash pattern to process.
* @return Modified dash array or null if invalid.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<init>(),54,56,"/**
 * Default constructor for the PDDeviceCMYK class.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<init>(),38,40,"/**
 * Private constructor for PDDeviceGray, prevents instantiation.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<init>(),39,41,"/**
 * Private constructor to prevent direct instantiation of PDDeviceRGB.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),88,100,"/**
 * Processes a color, returning true if successful, false otherwise.
 */","* Set the stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),148,160,"/**
 * Processes a color, returning true if successful, false otherwise.
 */","* Set the non stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the non stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setNonStrokingColor(PDColor)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getPatchCoordinatesColor,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",167,216,"/**
 * Creates a CoordinateColorPair array from four CubicBezierCurve objects.
 * @param c1, c2, d1, d2 Bezier curves to generate the patch from.
 * @return CoordinateColorPair array representing the patch.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getPatchCoordinatesColor,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getPatchCoordinatesColor(),212,255,"/**
 * Generates a CoordinateColorPair patch based on control points.
 * @return CoordinateColorPair array representing the patch.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getSaturationRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getSaturationRGB(float[],float[],float[])",286,350,"/**
* Converts color values from src to dst, storing result in result.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getLuminosityRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getLuminosityRGB(float[],float[],float[])",352,388,"/**
 * Adjusts color values based on input arrays and stores result.
 * @param srcValues Source color values.
 * @param dstValues Destination color values.
 * @param result Output color values (normalized).
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,48,"/**
 * Processes a number from context, using Math.m3.
 * @param context ExecutionContext object to access data.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),55,77,"/**
* Calculates the sum of two numbers from context, handling overflow.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,115,"/**
 * Processes a number from the context, casting as needed.
 * @param context Execution context containing number to process.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),135,140,"/**
* Processes data using the provided execution context.
* Retrieves a number and applies it via context methods.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),147,152,"/**
 * Processes data using the ExecutionContext, fetching and setting values.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),159,165,"/**
 * Calculates a value and sets it on the context using m3().m4().
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),172,179,"/**
 * Calculates a value using base and exponent from context.
 * Stores the result in the context's data store.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),186,198,"/**
 * Processes a number from the context, casting as needed.
 * @param context Execution context to retrieve and process data.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),218,223,"/**
* Sets a value on the context using a number from m1().
* @param context ExecutionContext object to modify
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),230,235,"/**
* Sets a value using context data.
* @param context Execution context with methods m1, m4, and m5.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),255,277,"/**
* Multiplies two numbers from context, stores result in context.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),284,304,"/**
 * Processes a number from the context, adjusting a value.
 * @param context ExecutionContext object containing data.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),311,323,"/**
 * Processes a number from context, either as int or float.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),359,382,"/**
* Calculates the difference of two numbers and pushes to stack.
* Uses Integer arithmetic if both are Integers, otherwise uses floats.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),389,401,"/**
 * Processes a number from context, casting and passing to m3().
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),205,211,"/**
* Executes a sequence of operations using the provided context.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),242,248,"/**
 * Executes a sequence of operations using the provided context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),84,96,"/**
 * Calculates an angle from context values and sets it in context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),122,128,"/**
 * Calculates cosine of an angle and sets it in the context.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),330,336,"/**
 * Calculates sine of an angle and sets it in the context.
 * @param context Execution context with angle and setter.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),343,352,"/**
 * Validates input and sets a value on the context.
 * @param context ExecutionContext object with methods m1, m3, m4
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.String),75,105,"/**
* Processes a token: handles sequences, integers, reals, or adds to log.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextChar(),148,159,"/**
* Advances index, returns EOT if m1 fails, otherwise returns m2's result.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextState,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextState(),173,195,"/**
 * Determines the current state based on the character read.
 * Updates 'state' based on the character type.
 * @return The updated State enum value.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<init>(),60,68,"/**
 * Initializes MacOSRomanEncoding by iterating through the encoding table.
 */",* Constructor.,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,xobject,org.apache.pdfbox.text.PDFMarkedContentExtractor:xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject),141,147,"/**
* Adds xobject to marked contents if m1() returns false.
* @param xobject The object to add.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getOwnerAccessPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getOwnerAccessPermission(),153,165,"/**
 * Creates and initializes an AccessPermission object with all flags set.
 * @return An AccessPermission object with all flags enabled.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,isOwnerPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:isOwnerPermission(),134,145,"/**
 * Checks if all internal methods return true.
 * Returns true if all methods return true, false otherwise.
 */","* This will tell if the access permission corresponds to owner
     * access permission (no restriction).
     *
     * @return true if the access permission does not restrict the use of the document",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,hasAnyRevision3PermissionSet,org.apache.pdfbox.pdmodel.encryption.AccessPermission:hasAnyRevision3PermissionSet(),448,463,"/**
* Checks multiple conditions (m1, m2, m3) and returns true if any are met, otherwise checks m4.
*/","* Indicates if any revision 3 access permission is set or not.
     * 
     * @return true if any revision 3 access permission is set",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,prepareAESInitializationVector,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",403,428,"/**
* Handles AES IV initialization: generates or validates it.
* @param decrypt if true, validates IV; otherwise, generates it.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],java.io.OutputStream)",123,129,"/**
 * Writes byte array to OutputStream, recursively for each byte.
 * @param data byte array to write
 * @param output output stream to write to
 * @throws IOException if an I/O error occurs
 */","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],int,int,java.io.OutputStream)",159,165,"/**
* Writes a portion of byte array to an OutputStream.
* @param data byte array to write
* @param offset starting offset
* @param len number of bytes to write
* @param output output stream
*/
","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param offset The offset into the array to start reading data from.
     * @param len The number of bytes to attempt to read.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,insertDiacritic,"org.apache.pdfbox.text.TextPosition:insertDiacritic(int,org.apache.pdfbox.text.TextPosition)",754,785,"/**
 * Processes a portion of unicode text and updates widths.
 * @param i index, diacritic TextPosition object
 */","* Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths
     * array to include the extra character width.
     *
     * @param i current character
     * @param diacritic The diacritic TextPosition",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrep,"org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrep(java.lang.String,boolean)",71,138,"/**
 * Masks sensitive characters in a string, with optional unassigned char allowance.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientInfo(java.security.cert.X509Certificate,byte[])",523,556,"/**
 * Creates KeyTransRecipientInfo from certificate and data.
 * @param x509certificate X.509 certificate
 * @param abyte0 data to encrypt
 * @return KeyTransRecipientInfo object
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2B,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2B(byte[],byte[],byte[])",1125,1197,"/**
 * Masks input using password and userKey through iterative hashing.
 * @param input Input byte array to be masked.
 * @param password Password used for masking.
 * @param userKey Optional user key for enhanced masking.
 * @return Masked byte array.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,"org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String,java.util.List)",834,837,"/**
* Calls m1 with only the text argument.
* @param text The text to pass to the other m1 method.
*/","* Write a Java string to the output stream. The default implementation will ignore the <code>textPositions</code>
     * and just calls {@link #writeString(String)}.
     *
     * @param text The text to write to the stream.
     * @param textPositions The TextPositions belonging to the text.
     * @throws IOException If there is an error when writing the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getTrueTypeFont(java.lang.String,java.io.File)",201,214,"/**
 * Loads a TrueTypeFont from a file.
 * @param postScriptName Font postscript name.
 * @param file Font file to load. Returns null on failure.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getDiskCacheFile,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:getDiskCacheFile(),388,400,"/**
 * Determines the PDFBox cache directory. Tries system properties,
 * then user.home, then java.io.tmpdir. Returns File object.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,createFontInfoByName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:createFontInfoByName(java.util.List),172,183,"/**
 * Creates a map of font names to FontInfo objects from a list.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Line:<init>(java.awt.Point,java.awt.Point,float[],float[])",45,52,"/**
 * Initializes a line with two points and color gradients.
 * @param p0 Start point of the line.
 * @param p1 End point of the line.
 * @param c0 Color gradient at p0.
 * @param c1 Color gradient at p1.
 */
","* Constructor of class Line.
     *
     * @param p0 one end of a line
     * @param p1 the other end of the line
     * @param c0 color of point p0
     * @param c1 color of point p1",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:toString(),195,199,"/**
* Concatenates super.m1() with file, hash, and lastModified.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<init>(),59,134,"/**
 * Initializes font substitutions and last resort font.
 * Sets up replacements for standard fonts and loads fallback.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getStandard14Width(int),339,368,"/**
* Retrieves a float value based on the code, or throws exception.
* @param code Integer code to look up.
* @return Float value or throws IllegalStateException.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPathFromOutlines(int),571,579,"/**
 * Retrieves a GeneralPath based on the given code.
 * @param code Glyph code to look up.
 * @return GeneralPath object or null if not found.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1CFont:codeToName(int),278,281,"/**
 * Delegates processing to m1().m2(), passing the given code.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(int),656,660,"/**
* Checks a code value using chained method calls.
* Returns true if the code is valid, false otherwise.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToGID(int),377,392,"/**
 * Resolves a code value, using a font if available, otherwise returns the code.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getHeight(int),443,459,"/**
 * Gets the glyph height for a given code.
 * @param code The glyph code.
 * @return The glyph height as a float.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask:<init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",72,99,"/**
 * Initializes a SoftMask with provided paint, mask, bbox, backdrop color, and transfer function.
 */","* Creates a new soft mask paint.
     *
     * @param paint underlying paint.
     * @param mask soft mask
     * @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space
     * @param backdropColor the color to be used outside the transparency group’s bounding box; if
     * null, black will be used.
     * @param transferFunction the transfer function, may be null.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,equals,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:equals(java.lang.Object),95,145,"/**
 * Checks if two TilingPaintParameter objects are equal.
 * Compares fields for equality, handling potential IOExceptions.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,removeBackdrop,"org.apache.pdfbox.rendering.GroupGraphics:removeBackdrop(java.awt.image.BufferedImage,int,int)",600,717,"/**
* Composites a group image onto a backdrop with alpha blending.
* @param backdrop Backdrop BufferedImage to composite onto.
* @param offsetX X offset for the group image.
* @param offsetY Y offset for the group image.
*/","* Computes backdrop removal.
     * The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008
     * standard. It returns the final color <code>C</code> for each pixel in the group:<br>
     *     <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br>
     * where<br>
     *     <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br>
     *     <code>C0</code> is the backdrop color,<br>
     *     <code>alpha0</code> is the backdrop alpha,<br>
     *     <code>alphagn</code> is the group alpha excluding backdrop (read the
     *           alpha channel from <code>groupAlphaImage</code>)<br>
     * <p>
     * The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha
     * channel of <code>groupAlphaImage</code>.
     * <p>
     * The <code>backdrop</code> image may be much larger than <code>groupImage</code> if,
     * for example, the current page is used as the backdrop. Only a specific rectangular
     * region of <code>backdrop</code> is used in the backdrop removal: upper-left corner
     * is at <code>(offsetX, offsetY)</code>; width and height are equal to those of
     * <code>groupImage</code>.
     *
     * @param backdrop group backdrop
     * @param offsetX backdrop left X coordinate
     * @param offsetY backdrop upper Y coordinate",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,hasFontOrSizeChanged,"org.apache.pdfbox.text.PDFTextStripper:hasFontOrSizeChanged(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",730,760,"/**
* Checks if two text positions mask each other based on their properties.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(java.lang.String),158,179,"/**
 * Retrieves a GeneralPath based on the provided name.
 * Returns a new GeneralPath if conditions are met.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getAFM,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getAFM(java.lang.String),178,205,"/**
 * Retrieves FontMetrics for the given font name, loading if necessary.
 * @param fontName Font name to retrieve metrics for.
 * @return FontMetrics object or null if font not found.
 */","* Returns the metrics for font specified by fontName. Loads the font metrics if not already
     * loaded.
     *
     * @param fontName name of font; either a base name or alias
     * @return the font metrics or null if the name is not one of the known names
     * @throws IllegalArgumentException if no metrics exist for that font.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowCIDToUnicodeRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowCIDToUnicodeRange(java.util.Map$Entry,java.util.Map$Entry)",186,195,"/**
 * Checks if two map entries satisfy conditions on their keys and values.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,subset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:subset(),300,352,"/**
 * Subsets a TTF font based on subsetCodePoints and embeds it.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(java.io.InputStream,int)",100,105,"/**
 * Constructs a GlyphList from an input stream, initializing maps.
 * @param input Input stream containing glyph data.
 * @param numberOfEntries Initial capacity for the maps.
 */
","* Creates a new GlyphList from a glyph list file.
     *
     * @param numberOfEntries number of expected values used to preallocate the correct amount of memory
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)",114,119,"/**
 * Constructs a GlyphList from another list and an input stream.
 * @param glyphList Source GlyphList to copy from.
 * @param input Input stream containing glyph data.
 */
","* Creates a new GlyphList from multiple glyph list files.
     *
     * @param glyphList an existing glyph list to be copied
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:codeToGID(int),607,710,"/**
 * Resolves a glyph ID based on various encoding maps and fallbacks.
 * @param code Input code to resolve
 * @return Glyph ID or 0 if not found
 */","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID (glyph index)
     * @throws IOException if the data could not be read",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNameInFont(java.lang.String),469,489,"/**
 * Masks a name, returning a fallback if masking fails.
 * Returns original name if m1() or genericFont.m2(name) is true.
 */","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getNameInFont(java.lang.String),571,614,"/**
* Resolves a name to a font-safe alternative, or "".notdef"".
*/","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,init,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:init(),63,95,"/**
 * Initializes CMYK color profile and flags.
 * Throws IOException if profile loading fails.
 */","* Lazy load the ICC profile, because it's slow.
     * 
     * @throws IOException if the ICC profile could not be initialized",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toRGB(float[]),280,297,"/**
 * Applies color space transformation to the input float array.
 * @param value Input float array representing color values.
 * @return Transformed float array.
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getDefaultDecode(int),357,375,"/**
 * Decodes color values; uses awtColorSpace or alternateColorSpace.
 * @param bitsPerComponent Number of bits per color component.
 * @return Float array of color values.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toString(),547,551,"/**
* Concatenates strings with the number of components.
* Returns a combined string.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getDefaultDecode(int),57,68,"/**
 * Decodes color components based on bit depth.
 * @param bitsPerComponent Number of bits per color component.
 * @return Float array of decoded color components.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,encodeImageToJPEGStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int)",351,384,"/**
 * Converts BufferedImage to byte array with specified quality & DPI.
 * @param image The BufferedImage to convert.
 * @param quality JPEG quality (0.0-1.0).
 * @param dpi Dots per inch.
 * @return Byte array representing the image.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,applyMask,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,boolean,float[])",613,723,"/**
 * Masks an image using a mask, optionally with matte.
 * @param image The image to mask.
 * @param mask The mask image.
 */","* @param image The image to apply the mask to as alpha channel.
     * @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to
     * {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special
     * handling of DeviceGray.
     * @param interpolateMask interpolation flag of the mask image.
     * @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted
     * by this method.
     * @param matte an optional RGB matte if a soft mask.
     * @return an ARGB image (can be the altered original image)",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkChunkSane,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkChunkSane(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk),654,681,"/**
 * Validates a chunk's CRC. Returns true if valid, false otherwise.
 */","* Check if the chunk is sane, i.e. CRC matches and offsets and lengths in the
     * byte array",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:<init>(java.awt.geom.Point2D[],int)",40,45,"/**
 * Initializes a CubicBezierCurve with control points and level.
 * @param ctrlPnts Control points for the curve.
 * @param level Subdivision level for curve generation.
 */
","* Constructor of CubicBezierCurve
     *
     * @param ctrlPnts 4 control points [p0, p1, p2, p3]
     * @param l dividing level, if l = 0, one cubic Bezier curve is divided
     * into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into
     * 2^n segments",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates bounds of triangles after transformation.
* @param xform AffineTransform for transformation.
* @param matrix Matrix for transformation.
* @return Rectangle2D representing the bounds, or empty rect.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates the bounding rectangle of shaded triangles.
* @param xform AffineTransform object
* @param matrix Matrix object
* @return Rectangle2D object representing the bounds
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,contains,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:contains(java.awt.geom.Point2D),156,197,"/**
* Checks if a point is within the polygon based on its degree.
* @param p The point to check.
* @return True if the point is inside, false otherwise.
*/","* Whether a point is contained in this ShadedTriangle.
     *
     * @param p the target point
     * @return false if p is outside of this triangle, otherwise true",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcColor,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcColor(java.awt.geom.Point2D),232,265,"/**
 * Calculates color components based on degree and point p.
 * @param p Point2D used in color calculation.
 * @return float[] color components.
 */
","* Calculate the color of a point.
     *
     * @param p the target point
     * @return an array denotes the point's color",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.GeneralPath),587,590,"/**
 * Calls m1 with a new Path2D.Double from the given path.
 */","* Modify the current clipping path by intersecting it with the given path.
     * @param path path to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Area),612,615,"/**
* Calls m1 with the given area and a false flag.
* @param area The area to be used in the subsequent call.
*/","* Modify the current clipping path by intersecting it with the given path.
     *
     * @param area area to intersect with the clipping path",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,transferClip,org.apache.pdfbox.rendering.PageDrawer:transferClip(java.awt.Graphics2D),434,447,"/**
* Sets the clip region for the Graphics2D object.
* Uses m1().m2() to determine the clip, sets a rectangle if false.
*/
","* Transfer clip to the destination device. Override this if you want to avoid to do slow
     * intersecting operations but want the destination device to do this (e.g. SVG). You can get
     * the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5258"">PDFBOX-5258</a> for sample code.
     *
     * @param graphics graphics device",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,textAlign,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:textAlign(int),95,99,"/**
* Sets the text alignment using the given alignment value.
* @param alignment The alignment value to set.
* @return This builder instance.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(byte[],int[])",44,47,"/**
 * Constructs a COSFilterInputStream from a byte array.
 * @param in byte array to read from
 * @param byteRange byte range to filter
 */
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(),49,59,"/**
 * Executes m3, increments position, returns result or -1 if failed.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[],int,int)",67,77,"/**
 * Reads bytes from the input stream.
 * @param b buffer to hold bytes, off offset, len length
 * @return number of bytes read, or -1 if EOF.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,create,org.apache.pdfbox.rendering.GroupGraphics:create(),111,123,"/**
 * Creates a GroupGraphics object.
 * Returns a GroupGraphics or throws UnsupportedOperationException.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawTilingPattern,"org.apache.pdfbox.rendering.PageDrawer:drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)",306,334,"/**
 * Draws a pattern with saved state.
 * @param g Graphics2D context, pattern, color, matrix.
 */","* Draws the pattern stream to the requested context.
     *
     * @param g The graphics context to draw onto.
     * @param pattern The tiling pattern to be used.
     * @param colorSpace color space for this tiling.
     * @param color color for this tiling.
     * @param patternMatrix the pattern matrix
     * @throws IOException If there is an IO error while drawing the page.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createDefaultRenderingHints,org.apache.pdfbox.rendering.PDFRenderer:createDefaultRenderingHints(java.awt.Graphics2D),504,516,"/**
* Creates RenderingHints based on graphics, sets interpolation/antialias.
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXDirAdj,org.apache.pdfbox.text.TextPosition:getXDirAdj(),344,347,"/**
* Returns the result of applying m2 to the result of m1.
*/","* This will get the text direction adjusted x position of the character.
     * This is adjusted based on text direction so that the first character
     * in that direction is in the upper left at 0,0.
     * This method ignores the page rotation but takes the text rotation (see
     * {@link #getDir() getDir()}) and adjusts the coordinates to awt. This is useful when doing
     * text extraction, to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The x coordinate of the text.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<init>,"org.apache.pdfbox.text.TextPosition:<init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)",85,118,"/**
 * Constructs a TextPosition object with the given parameters.
 * @param pageRotation Page rotation in degrees.
 */","* Constructor.
     *
     * @param pageRotation rotation of the page that the text is located in
     * @param pageWidth width of the page that the text is located in
     * @param pageHeight height of the page that the text is located in
     * @param textMatrix text rendering matrix for start of text (in display units)
     * @param endX x coordinate of the end position
     * @param endY y coordinate of the end position
     * @param maxHeight Maximum height of text (in display units)
     * @param individualWidth The width of the given character/string. (in text units)
     * @param spaceWidth The width of the space character. (in display units)
     * @param unicode The string of Unicode characters to be displayed.
     * @param charCodes An array of the internal PDF character codes for the glyphs in this text.
     * @param font The current font for this text position.
     * @param fontSize The new font size.
     * @param fontSizeInPt The font size in pt units (see {@link #getFontSizeInPt()} for details).",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYDirAdj,org.apache.pdfbox.text.TextPosition:getYDirAdj(),406,418,"/**
 * Calculates a dimension based on the direction.
 * @return Calculated dimension (pageHeight or pageWidth).
 */
","* This will get the y position of the text, adjusted so that 0,0 is upper left and it is
     * adjusted based on the text direction.
     * This method ignores the page rotation but takes the
     * text rotation and adjusts the coordinates to awt. This is useful when doing text extraction,
     * to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The adjusted y coordinate of the character.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidth,org.apache.pdfbox.text.TextPosition:getWidth(),443,446,"/**
* Calculates a value based on the 'rotation' parameter.
* @param rotation The rotation value to use in calculation.
* @return The calculated float value.
*/
","* This will get the width of the string when page rotation adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthDirAdj,org.apache.pdfbox.text.TextPosition:getWidthDirAdj(),453,456,"/**
* Returns the result of applying m2 to the result of m1.
*/","* This will get the width of the string when text direction adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(),430,433,"/**
* Calls m1 with the 'enable' flag set to true.
*/","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead). This
     * assumes that the primary direction of text is left to right. Default implementation is to do nothing. Subclasses
     * may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphEnd,org.apache.pdfbox.text.PDFTextStripper:writeParagraphEnd(),1728,1736,"/**
 * Outputs data based on conditions and resets paragraph flag.
 */","* Write something (if defined) at the end of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchListItemPattern,org.apache.pdfbox.text.PDFTextStripper:matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper),1767,1772,"/**
* Creates a Pattern object from a PositionWrapper.
* @param pw PositionWrapper containing text position data.
* @return A Pattern object based on the wrapped text.
*/
","* returns the list item Pattern object that matches the text at the specified PositionWrapper or null if the text
     * does not match such a pattern. The list of Patterns tested against is given by the {@link #getListItemPatterns()}
     * method. To add to the list, simply override that method (if sub-classing) or explicitly supply your own list
     * using {@link #setListItemPatterns(List)}.
     * 
     * @param pw position
     * @return the matching pattern",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeWord,org.apache.pdfbox.text.PDFTextStripper:normalizeWord(java.lang.String),2051,2108,"/**
* Masks specific Unicode characters in a string.
* @param word The input string to be masked.
* @return The masked string.
*/","* Normalize certain Unicode characters. For example, convert the single ""fi"" ligature to ""f"" and ""i"". Also
     * normalises Arabic and Hebrew presentation forms.
     *
     * @param word Word to normalize
     * @return Normalized word",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toString,org.apache.pdfbox.util.DateConverter:toString(java.util.Calendar),165,179,"/**
 * Formats a Calendar object into a specific string representation.
 * @param cal Calendar object to format; returns null if null.
 * @return Formatted string representation of the Calendar.
 */","* Converts a Calendar to a string formatted as:
     *     D:yyyyMMddHHmmss#hh'mm'  where # is Z, +, or -.
     * 
     * @param cal The date to convert to a string. May be null.
     * The DST_OFFSET is included when computing the output time zone.
     *
     * @return The date as a String to be used in a PDF document, 
     *      or null if the cal value is null",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toISO8601,org.apache.pdfbox.util.DateConverter:toISO8601(java.util.Calendar),190,202,"/**
 * Formats a Calendar object into a specific date/time string.
 * @param cal The Calendar object to format.
 * @return Formatted date/time string.
 */","* Converts the date to ISO 8601 string format:
     *     yyyy-mm-ddThh:MM:ss#hh:mm    (where '#"" is '+' or '-').
     *
     * @param cal The date to convert.  Must not be null.
     * The DST_OFFSET is included in the output value.
     * 
     * @return The date represented as an ISO 8601 string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseBigEndianDate,"org.apache.pdfbox.util.DateConverter:parseBigEndianDate(java.lang.String,java.text.ParsePosition)",526,568,"/**
 * Parses date/time string into a GregorianCalendar.
 * Returns null if parsing fails.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseSimpleDate,"org.apache.pdfbox.util.DateConverter:parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)",584,601,"/**
 * Parses text using provided formats, updating initialWhere.
 * @param text Text to parse.
 * @param fmts Format strings to try.
 * @param initialWhere ParsePosition to update.
 * @return GregorianCalendar or null if parsing fails.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTZoffset,"org.apache.pdfbox.util.DateConverter:parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)",429,473,"/**
* Parses timezone information from text and sets the calendar.
* @param text timezone text, cal calendar, initialWhere parse position
*/",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toHexString,org.apache.pdfbox.cos.COSString:toHexString(),257,260,"/**
 * Converts byte array to a hexadecimal string representation.
 */","* This will take this string and create a hex representation of the bytes that make the string.
     *
     * @return A hex string representing the bytes in this string.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeExternalSignature,org.apache.pdfbox.pdfwriter.COSWriter:writeExternalSignature(byte[]),958,985,"/**
* Applies a CMS signature to a PDF incrementally.
* @param cmsSignature CMS signature to apply.
* @throws IOException if signature is too large or PDF is unprepared.
*/","* Write externally created signature of PDF data obtained via {@link #getDataToSign()} method.
     *
     * @param cmsSignature CMS signature byte array
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if source data stream is closed",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,writePDF,org.apache.pdfbox.cos.COSName:writePDF(java.io.OutputStream),776,805,"/**
 * Encodes a string to output, replacing invalid chars with hex.
 * @param output Output stream to write the encoded string to.
 */","* This will output this string as a PDF object.
     * 
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,encode,"org.apache.pdfbox.filter.ASCIIHexFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",135,145,"/**
 * Encodes input stream to hex output stream using COSDictionary.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexBytes,"org.apache.pdfbox.util.Hex:writeHexBytes(byte[],java.io.OutputStream)",168,174,"/**
* Writes each byte from the input array to the output stream.
* @param bytes byte array to write
* @param output output stream to write to
*/
","* Writes the given byte array as hex value to the given output stream.
     * @param bytes the byte array to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,iterativeMergeSort,"org.apache.pdfbox.util.IterativeMergeSort:iterativeMergeSort(java.lang.Object[],java.util.Comparator)",87,99,"/**
 * Sorts the input array using a comparator and auxiliary array.
 */","* Sorts the array using iterative (bottom-up) merge sort.
     *
     * @param <T> the class of the objects in the list
     * @param arr the array of objects to be sorted.
     * @param cmp the comparator to determine the order of the list.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,hashCode,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:hashCode(),147,157,"/**
 * Calculates a hash code based on object fields.
 * Uses m1() on nested objects; returns 0 if null.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,hashCode,org.apache.pdfbox.text.TextPosition:hashCode(),972,990,"/**
 * Generates a hash code based on object fields.
 */",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream),56,59,"/**
 * Parses an XML document from an input stream.
 * @param is Input stream containing XML data.
 * @return Document object representing the XML.
 */","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(java.io.BufferedInputStream),89,112,"/**
 * Determines file type from input stream.
 * Reads bytes, resets stream, then determines file type.
 */","* Examines the a file's first bytes and estimates the file's type.
     * <p>
     * Requires a {@link BufferedInputStream} in order to mark and reset the stream to the position
     * at which it was provided to this method once completed.
     * <p>
     * Requires the stream to contain at least eight bytes.
     *
     * @param inputStream a buffered input stream of the file to examine.
     * @return the file type.
     * @throws IOException if an IO error occurred or the input stream ended unexpectedly.",,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(byte[]),114,117,"/**
* Determines file type based on byte array.
* @param fileBytes Byte array representing the file content.
* @return FileType enum indicating the file type.
*/
",,,,True,3
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a NonStrokingColor object with the given context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a StrokingColor object with the given PDFStreamEngine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),39,42,"/**
* Constructs an AppendRectangleToPath object.
* @param context The PDFGraphicsStreamEngine context.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a BeginInlineImage object with the given context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a ClipEvenOddRule with the given PDFGraphicsStreamEngine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a ClipNonZeroRule with the given PDFGraphicsStreamEngine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a CloseAndStrokePath with the given graphics context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a CloseFillEvenOddAndStrokePath object.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a CloseFillNonZeroAndStrokePath object.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a ClosePath object, passing the PDF graphics stream engine context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Constructs a CurveTo object with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine to use.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a CurveToReplicateFinalPoint with the given context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
* Calls superclass constructor to initialize the CurveToReplicateInitialPoint.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),46,49,"/**
 * Constructs a DrawObject with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine to use.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/EndPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.EndPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),34,37,"/**
 * Constructs an EndPath object, passing the PDF graphics stream engine context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillEvenOddAndStrokePath with the given context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillEvenOddRule with the given PDFGraphicsStreamEngine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),37,40,"/**
 * Constructs a FillNonZeroAndStrokePath with the given context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillNonZeroRule with the given PDFGraphicsStreamEngine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Constructs a LineTo object, passing the PDF graphics stream engine.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.MoveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a MoveTo object, passing the PDF graphics stream engine context.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
* Constructs a ShadingFill with the given PDFGraphicsStreamEngine.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/StrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.StrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a StrokePath with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine to use.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<init>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<init>(),106,130,"/**
* Initializes the legacy PDF stream engine by adding operators.
*/
",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,getPDFName,org.apache.pdfbox.cos.COSName:getPDFName(java.lang.String),685,709,"/**
 * Retrieves or creates a COSName for the given name.
 * @param aName the name to retrieve or create
 * @return the COSName object
 */","* This will get a COSName object with that name.
     * 
     * @param aName The name of the object.
     * 
     * @return A COSName with the specified name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(byte[]),63,66,"/**
 * Creates a COSString from a byte array.
 * @param bytes The byte array representing the string.
 */
","* Creates a new PDF string from a byte array. This method can be used to read a string from
     * an existing PDF file, or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(),51,54,"/**
 * Constructs a COSArray with an empty list and isFixed flag.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(java.util.List),61,69,"/**
 * Creates a COSArray from a list of COSObjectable objects.
 */","* Use the given list to initialize the COSArray.
     * 
     * @param cosObjectables the initial list of COSObjectables",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache),79,83,"/**
 * Constructs a COSStream with a given stream cache.
 * @param streamCache Cache for RandomAccessStream.
 */
","* Creates a new stream with an empty dictionary. Data is stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,<init>,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),31,35,"/**
 * Creates an unmodifiable COSDictionary from another COSDictionary.
 * @param dict The COSDictionary to copy.
 */
",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,createDefault,org.apache.pdfbox.filter.DecodeResult:createDefault(),52,55,"/**
 * Creates and returns a DecodeResult with an empty COSDictionary.
 */","* Return a default DecodeResult.
     *
     * @return a default instance of DecodeResult",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(),44,47,"/**
 * Initializes a new PDDocumentInformation object.
 * Creates a COSDictionary to store document information.
 */
",* Default Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(),62,67,"/**
 * Initializes a PDResources object with a COSDictionary and caches.
 */",* Constructor for embedding.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convert,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convert(java.util.Map),211,220,"/**
 * Creates a COSDictionary from a map, populating it with key-value pairs.
 * @param someMap The map to extract data from.
 * @return A COSDictionary containing the extracted data.
 */
","* This will take a map&lt;java.lang.String,org.apache.pdfbox.pdmodel.COSObjectable&gt;
     * and convert it into a COSDictionary.
     *
     * @param someMap A map containing COSObjectables
     *
     * @return A proper COSDictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(),35,38,"/**
 * Constructs a new PDDictionaryWrapper with an empty COSDictionary.
 */",* Default constructor,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(),52,55,"/**
 * Default constructor. Initializes the node with a new COSDictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(java.lang.Class),54,58,"/**
 * Creates a new PDNumberTreeNode with the given value class.
 * @param valueClass Class of the value to be stored in the node.
 */
","* Constructor.
     *
     * @param valueClass The PD Model type of object that is the value.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(),72,75,"/**
 * Default constructor, initializes with a new COSDictionary.
 */",* Creates a new empty page label range object.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(),36,39,"/**
 * Default constructor. Initializes the dictionary.
 */","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(),61,64,"/**
 * Default constructor. Initializes the internal COSDictionary.
 */",* Constructor for subclasses.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(),53,56,"/**
 * Initializes a new PDBoxStyle object with an empty COSDictionary.
 */","* Default Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(),43,46,"/**
 * Initializes the PDCryptFilterDictionary with a new COSDictionary.
 */",* creates a new empty crypt filter dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(),84,87,"/**
 * Initializes a PDEncryption object with a new COSDictionary.
 */",* creates a new empty encryption dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(),40,43,"/**
 * Initializes a new FDF catalog with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(),54,57,"/**
 * Constructs a new FDFDictionary object, initializing the FDF dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(),54,57,"/**
 * Constructs a new FDFField object, initializing the field.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(),63,66,"/**
 * Constructs a new FDFIconFit object, initializing the 'fit' dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(),44,47,"/**
 * Constructs a new FDFJavaScript object, initializing its dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(),38,41,"/**
 * Constructs a new FDFNamedPageReference with an empty COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(),40,43,"/**
 * Constructs a new FDFPage object, initializing the page dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(),35,38,"/**
 * Initializes a new FDFPageInfo object.
 * Creates a new COSDictionary to store page information.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(),40,43,"/**
 * Initializes a new FDFTemplate object.
 * Creates a new COSDictionary to store template data.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(),51,54,"/**
 * Default constructor. Initializes the dictionary attribute.
 */",* Creates a new DeviceN colour space attributes dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(),48,51,"/**
 * Constructs a PDDeviceNProcess object, initializing its dictionary.
 */",* Creates a new DeviceN Process Dictionary.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(),84,87,"/**
 * Default constructor. Initializes the shading dictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(),35,38,"/**
 * Initializes the AdditionalActions object with a new COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(),37,40,"/**
 * Initializes a PDAnnotationAdditionalActions object.
 * Creates a COSDictionary to store additional actions.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(),37,40,"/**
 * Initializes a new PDDocumentCatalogAdditionalActions.
 * Creates a COSDictionary to store additional actions.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(),37,40,"/**
 * Constructs a PDFormFieldAdditionalActions object, initializing actions.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(),37,40,"/**
 * Initializes a PDPageAdditionalActions object.
 * Creates a COSDictionary to store actions.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(),40,43,"/**
 * Constructs a new PDTargetDirectory object, initializing its dictionary.
 */","* Default constructor, creates target directory.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(),35,38,"/**
 * Initializes a new PDURIDictionary with an empty COSDictionary.
 */","* Constructor.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(),48,51,"/**
 * Creates a new PDWindowsLaunchParams object.
 * Initializes the internal parameters dictionary.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(),50,53,"/**
 * Initializes a new PDBorderEffectDictionary.
 * Creates a COSDictionary to store border effect data.
 */
",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(),69,72,"/**
 * Initializes a new PDBorderStyleDictionary with a COSDictionary.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(),41,45,"/**
 * Initializes a PDPropBuild object with a COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(),37,42,"/**
 * Initializes a PDPropBuildDataDict with a COSDictionary.
 * Sets the dictionary to use direct objects.
 */
",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(),35,39,"/**
 * Constructs a PDSeedValueMDP with a new COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(),35,39,"/**
 * Initializes a PDSeedValueTimeStamp with a new COSDictionary.
 */",* Default constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDField with an AcroForm and default dictionary.
 * @param acroForm The parent AcroForm object.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(),42,45,"/**
 * Initializes a new PDViewportDictionary instance.
 * Creates a new COSDictionary to store viewport data.
 */
",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(),136,139,"/**
 * Initializes a PDViewerPreferences object.
 * Creates a COSDictionary to store preferences.
 */
",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",58,63,"/**
 * Constructs a COSObject with a base object and key.
 * @param object The base COSBase object.
 * @param objectKey The key associated with the object.
 */
","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param objectKey The COSObjectKey of the encapsulated object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a PDDefaultAttributeObject from a COSDictionary.
 * @param dictionary The COSDictionary containing attribute data.
 */
","* Creates a default attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Creates a PDUserAttributeObject from a COSDictionary.
* @param dictionary The COSDictionary containing attribute data.
*/
","* Constructor
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDStandardAttributeObject from a COSDictionary.
 */","* Creates a new standard attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Creates a PDOutlineItem from a COSDictionary.
 * @param dic The COSDictionary containing outline data.
 */
","* Constructor for an existing outline item.
     *
     * @param dic The storage dictionary.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),71,75,"/**
* Creates a PDNameTreeNode from a COSDictionary.
* @param dic COSDictionary to create the node from.
* @return A new PDNameTreeNode.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),59,63,"/**
 * Creates a PDNameTreeNode from a COSDictionary.
 * @param dic The COSDictionary to use.
 * @return A PDNameTreeNode object.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),60,64,"/**
 * Creates a PDNameTreeNode for JavaScript actions from a COSDictionary.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),61,65,"/**
 * Creates a PDNameTreeNode from a COSDictionary.
 * @param dic The COSDictionary to use.
 * @return A PDNameTreeNode object.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getMetadata,org.apache.pdfbox.pdmodel.common.PDStream:getMetadata(),416,434,"/**
 * Retrieves PDMetadata from the stream.
 * Returns PDMetadata object or null if not a COSStream.
 */","* Get the metadata that is part of the document catalog. This will return
     * null if there is no meta data for this object.
     * 
     * @return The metadata for this object.
     * @throws IllegalStateException if the value of the metadata entry is different from a stream
     *                               or null",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMetadata(),416,424,"/**
 * Retrieves PDMetadata from a COS stream, or null if not found.
 */","* Returns the metadata associated with this XObject, or null if there is none.
     * @return the metadata associated with this object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,getExtends,org.apache.pdfbox.pdmodel.common.PDObjectStream:getExtends(),115,119,"/**
 * Creates a PDObjectStream from a COSStream, or null if stream is null.
 */","* A reference to an object stream, of which the current object stream is
     * considered an extension.
     *
     * @return The object that this stream is an extension.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<init>(org.apache.pdfbox.cos.COSBase),75,78,"/**
 * Constructs a PDFunctionType0 with the given COSBase object.
 */","* Constructor.
     *
     * @param function The function.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:<init>(org.apache.pdfbox.cos.COSBase),44,47,"/**
 * Creates a PDFunctionType3 object.
 * @param functionStream The COSBase representing the function stream.
 */
","* Constructor.
     *
     * @param functionStream The function .",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:<init>(org.apache.pdfbox.cos.COSBase),31,35,"/**
 * Constructs a PDFunctionTypeIdentity with a COSBase object.
 * @param function The COSBase object representing the function.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDPostScriptXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:<init>(org.apache.pdfbox.cos.COSStream),34,37,"/**
 * Constructs a PDPostScriptXObject from a COSStream.
 * @param stream The COSStream containing PostScript data.
 */
","* Creates a PostScript XObject.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream),77,81,"/**
 * Creates a PDFormXObject from a COSStream.
 * @param stream The COSStream containing form data.
 */
","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",89,93,"/**
 * Creates a PDFormXObject from a COSStream and ResourceCache.
 */","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,59,"/**
 * Creates a PDStructureElement from a COSDictionary.
 * @param base The COSDictionary to wrap.
 * @return A PDStructureElement.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(),91,93,"/**
 * Default constructor for the PublicKeySecurityHandler class.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(),86,88,"/**
 * Default constructor for the StandardSecurityHandler class.
 */",* Constructor.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy),100,103,"/**
 * Constructs a PublicKeySecurityHandler with a protection policy.
 * @param publicKeyProtectionPolicy The policy for public key protection.
 */
","* Constructor used for encryption.
     *
     * @param publicKeyProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy),95,98,"/**
 * Constructs a StandardSecurityHandler with a protection policy.
 * @param standardProtectionPolicy The protection policy to use.
 */
","* Constructor used for encryption.
     *
     * @param standardProtectionPolicy The protection policy.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationHighlight from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationSquiggly object from a COSDictionary.
 */
","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationStrikeOut object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationUnderline object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,createFSIgnored,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:createFSIgnored(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",306,318,"/**
 * Creates an FSFontInfo object based on file, format, and PS name.
 * Returns null hash if IO error occurs.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getStrokingJavaComposite(),665,668,"/**
* Creates a composite blend mode.
* @param blendMode Blend mode to apply.
* @param alphaConstant Alpha constant value.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getNonStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getNonStrokingJavaComposite(),670,673,"/**
* Returns a composite function based on blend mode and alpha.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDTilingPattern with a COSDictionary.
 * @param dictionary The COSDictionary containing tiling data.
 */
","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Constructs a PDShadingType3 object from a COSDictionary.
*/
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDShadingType4 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a ShadingType5 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:toPaint(org.apache.pdfbox.util.Matrix),126,130,"/**
 * Creates an AxialShadingPaint using the given matrix.
 * @param matrix Transformation matrix for shading.
 * @return An AxialShadingPaint instance.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:toPaint(org.apache.pdfbox.util.Matrix),45,49,"/**
 * Creates a radial shading paint using the given matrix.
 * @param matrix Transformation matrix to apply.
 * @return A RadialShadingPaint object.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:toPaint(org.apache.pdfbox.util.Matrix),103,107,"/**
 * Creates a Type1ShadingPaint using the current object and matrix.
 * @param matrix The transformation matrix to apply.
 * @return A Type1ShadingPaint object.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:toPaint(org.apache.pdfbox.util.Matrix),84,88,"/**
* Creates a Type4ShadingPaint using the provided matrix.
* @param matrix Transformation matrix for the paint.
* @return A new Type4ShadingPaint instance.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:toPaint(org.apache.pdfbox.util.Matrix),80,84,"/**
 * Creates a Type5ShadingPaint using the provided matrix.
 * @param matrix Transformation matrix for the paint.
 * @return New Type5ShadingPaint instance.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
* Creates a Type6ShadingPaint instance using the provided matrix.
* @param matrix The transformation matrix to use.
* @return A new Type6ShadingPaint object.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
* Creates a Type7ShadingPaint using the provided matrix.
* @param matrix Transformation matrix for the paint.
* @return A new Type7ShadingPaint instance.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),39,42,"/**
 * Constructs a PDCaretAppearanceHandler for the given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Constructs a PDCircleAppearanceHandler with a PDAnnotation.
 * @param annotation The annotation for circle appearance.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),38,41,"/**
 * Creates a PDFileAttachmentAppearanceHandler for a given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),61,64,"/**
 * Creates a PDFreeTextAppearanceHandler from a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),43,46,"/**
 * Constructs a PDHighlightAppearanceHandler for a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),37,40,"/**
 * Creates a PDInkAppearanceHandler for the given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),41,44,"/**
 * Constructs a PDLineAppearanceHandler for a given annotation.
 * @param annotation The annotation to handle line appearance for.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Constructs a PDLinkAppearanceHandler for a given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Constructs a PDPolygonAppearanceHandler for a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),40,43,"/**
 * Constructs a PolylineAppearanceHandler for a given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),23,26,"/**
 * Constructs a PDSoundAppearanceHandler with a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Constructs a PDSquareAppearanceHandler with a PDAnnotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),47,50,"/**
 * Constructs a SquigglyAppearanceHandler for a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Constructs a PDStrikeoutAppearanceHandler for a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes a PDTextAppearanceHandler with a given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Creates a PDUnderlineAppearanceHandler for the given annotation.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),114,126,"/**
 * Applies caret appearance handling, using custom handler if available.
 * @param document The document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),67,79,"/**
 * Applies circle appearance using either custom handler or default.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),135,147,"/**
 * Applies file attachment appearance handler.
 * Uses custom handler if available, otherwise creates a new one.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),301,313,"/**
 * Applies text appearance handling, using custom handler if available.
 * @param document The PDF document to process.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies highlight appearance, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),125,137,"/**
 * Applies appearance handling, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),421,433,"/**
 * Applies line appearance handling, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),233,245,"/**
 * Applies link appearance handling, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),175,187,"/**
 * Applies polygon appearance, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),191,203,"/**
 * Processes polyline appearance, using custom handler if available.
 * @param document The PDF document to process.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
 * Applies sound appearance handling, using custom handler if available.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
 * Applies square appearance, using custom handler if available.
 * @param document The PDF document to apply the appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies appearance handler, using custom or default squiggly.
 * @param document The PDF document to apply appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies strikeout appearance, using custom handler or default.
 * @param document The PDF document to apply the appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),239,251,"/**
 * Applies appearance settings to the document.
 * Uses custom handler if available, otherwise creates a default.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Applies underline appearance handler, uses custom if available.
 * @param document The document to apply the appearance to.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
 * Constructs a PDButton object.
 * @param acroForm The AcroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent NonTerminalField.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
 * Constructs a PDSignatureField with the given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",59,62,"/**
 * Constructs a PDVariableText object.
 * @param acroForm The form.
 * @param field The COSDictionary for the field.
 * @param parent The parent field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:clone(),478,501,"/**
* Creates and returns a clone of the graphics state.
* Clones various state elements, returns the cloned state.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,"org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:<init>(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",83,91,"/**
 * Constructs a TilingPaintParameter with given parameters.
 * @param matrix Transformation matrix.
 * @param patternDict Pattern dictionary.
 * @param colorSpace Color space.
 * @param color Color value.
 * @param xform Affine transform.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,generatePartialName,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:generatePartialName(),73,84,"/**
* Determines the next available field name based on existing names.
* Returns the next field name.
*/
","* Generate a unique name for the signature.
     * 
     * @return the signature's unique name",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:toString(),123,132,"/**
 * Creates a formatted string of objects and revision numbers.
 * @return Formatted string joined by semicolons.
 */",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase),49,52,"/**
* Creates a PDSoftMask from a COSBase dictionary.
* Delegates to overloaded method with null mask.
*/","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * 
     * @return the newly created instance of PDSoftMask",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,46,"/**
 * Executes instruction sequence if condition is true.
 * @param context ExecutionContext object for method calls.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),53,68,"/**
 * Executes InstructionSequence based on a condition from context.
 * @param context ExecutionContext containing stack and condition.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.cos.ICOSParser),111,114,"/**
 * Constructs a COSDocument using a memory-only stream cache.
 * @param parser The parser used to create the COSDocument.
 */
","* Constructor. Uses main memory to buffer PDF streams.
     * 
     * @param parser Parser to be used to parse the document on demand",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),122,125,"/**
 * Creates a COSDocument with a stream cache creation function.
 * @param streamCacheCreateFunction Function to create stream cache.
 */","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,init,org.apache.pdfbox.pdfparser.COSParser:init(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),193,210,"/**
 * Initializes document using stream cache function and system property.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,process,"org.apache.pdfbox.contentstream.operator.state.SetMatrix:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,66,"/**
* Processes operator with arguments, creating and setting a matrix.
* @param operator Operator to process.
* @param arguments List of COSBase arguments.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,process,"org.apache.pdfbox.contentstream.operator.text.BeginText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,49,"/**
 * Processes operator with arguments using PDFStreamEngine.
 * @param operator The operator to process.
 * @param arguments Arguments for the operator.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,process,"org.apache.pdfbox.contentstream.operator.text.EndText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,47,"/**
 * Processes operator with arguments using PDFStreamEngine.
 * @param operator The operator to process.
 * @param arguments Arguments for the operator.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,retrieveDimensions,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:retrieveDimensions(java.io.ByteArrayInputStream),148,185,"/**
 * Extracts image dimensions from a byte stream.
 * Returns Dimensions object; uses raster size if metadata fails.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(java.lang.String,java.util.List)",903,907,"/**
* Executes an operation with given arguments.
* @param operation The operation to execute.
* @param arguments Arguments for the operation.
*/
","* This is used to handle an operation.
     * 
     * @param operation The operation to perform.
     * @param arguments The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,create,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",43,50,"/**
 * Creates a PDMarkedContent object based on the tag.
 * @param tag The tag to determine the content type.
 * @param properties COS properties for the content.
 */
","* Creates a marked-content sequence.
     * 
     * @param tag the tag
     * @param properties the properties
     * @return the marked-content sequence",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getWidth,org.apache.pdfbox.pdmodel.common.PDRectangle:getWidth(),296,299,"/**
* Calculates a value by subtracting m2() from m1().
*/","* This will get the width of this rectangle as calculated by
     * upperRightX - lowerLeftX.
     *
     * @return The width of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,contains,"org.apache.pdfbox.pdmodel.common.PDRectangle:contains(float,float)",173,181,"/**
 * Checks if coordinates (x, y) are within defined bounds.
 */","* Method to determine if the x/y point is inside this rectangle.
     * @param x The x-coordinate to test.
     * @param y The y-coordinate to test.
     * @return True if the point is inside this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getHeight,org.apache.pdfbox.pdmodel.common.PDRectangle:getHeight(),307,310,"/**
* Calculates a masked value by subtracting m2 from m1.
*/","* This will get the height of this rectangle as calculated by
     * upperRightY - lowerLeftY.
     *
     * @return The height of this rectangle.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,transform,org.apache.pdfbox.pdmodel.common.PDRectangle:transform(org.apache.pdfbox.util.Matrix),319,338,"/**
 * Creates a GeneralPath based on matrix transformation of points.
 * @param matrix Matrix object used for point transformations.
 * @return GeneralPath object representing the transformed shape.
 */","* Returns a path which represents this rectangle having been transformed by the given matrix. Note that the
     * resulting path need not be rectangular.
     * 
     * @param matrix the matrix to be used for the transformation
     * @return the transformed rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toGeneralPath,org.apache.pdfbox.pdmodel.common.PDRectangle:toGeneralPath(),357,370,"/**
 * Creates a rectangular GeneralPath using coordinates from helper methods.
 * @return GeneralPath representing a rectangle.
 */
","* Returns a general path equivalent to this rectangle. This method avoids the problems caused by Rectangle2D not
     * working well with -ve rectangles.
     * 
     * @return a general path equivalent to this rectangle",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toString,org.apache.pdfbox.pdmodel.common.PDRectangle:toString(),377,382,"/**
 * Concatenates results of m1, m2, m3, m4 into a string.
 */","* This will return a string representation of this rectangle.
     *
     * @return This object as a string.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isNonZeroBoundingBox,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isNonZeroBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),395,403,"/**
 * Checks if a rectangle has non-zero coordinates.
 * @param bbox The rectangle to check.
 * @return True if any coordinate is non-zero, false otherwise.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateMatrix,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateMatrix(org.apache.pdfbox.pdmodel.common.PDRectangle,int)",655,679,"/**
 * Creates an AffineTransform for rotation based on bbox and angle.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,fillWhitepointCache,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),78,83,"/**
 * Sets the whitepoint XYZ values from the given tristimulus.
 * @param whitepoint The PDTristimulus representing the whitepoint.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,org.apache.pdfbox.cos.COSArray:getInt(int),306,309,"/**
* Overloaded method, calls the other m1 with a default value.
*/","* Get the value of the array as an integer.
     *
     * @param index The index into the list.
     *
     * @return The value at that index or -1 if does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,org.apache.pdfbox.cos.COSArray:getName(int),359,362,"/**
 * Overloaded method, calls the other m1 with null value.
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The name converted to a string or null if it does not exist.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(org.apache.pdfbox.cos.COSBase),217,253,"/**
 * Creates an OutputStream with filters and random access support.
 * @param filters COS filters to apply, or null if none.
 * @return OutputStream for writing COS data.
 */","* Returns a new OutputStream for writing stream data, using and the given filters.
     * 
     * @param filters COSArray or COSName of filters to be used.
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",140,149,"/**
 * Creates a PDImageXObject with a stream and resources.
 * @param stream The image stream.
 * @param resources The resources for the image.
 */
","* Creates an Image XObject with the given stream as its contents and current color spaces. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param stream the XObject stream to read
     * @param resources the current resources",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSuffix(),1011,1047,"/**
 * Determines the file suffix based on the filters applied.
 * @return File suffix (png, jpg, jpx, tiff, jb2) or null.
 */","* This will get the suffix for this image type, e.g. jpg/png.
     * @return The image suffix or null if not available.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(float),1441,1459,"/**
 * Writes a float to the output stream, handling non-finite values.
 * @param real The float value to write.
 * @throws IOException if an I/O error occurs.
 */","* Writes a real number to the content stream.
     * 
     * @param real the real number to be added to the content stream
     * 
     * @throws IOException If the underlying stream has a problem being written to.
     * @throws IllegalArgumentException if the parameter is not a finite number",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(int),1467,1471,"/**
* Formats an integer and writes it to the output stream.
* @param integer The integer to format and write.
*/","* Writes an integer number to the content stream.
     * 
     * @param integer the integer to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperator,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperator(java.lang.String),1491,1495,"/**
* Processes the input text by calling m1 and m2.
* @param text The text to be processed.
*/","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream followed by a newline
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:isEmpty(),69,73,"/**
* Checks if m1() returns 0.
* @return True if m1() is 0, false otherwise.
*/
",* {@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGB(float[]),348,359,"/**
 * Processes float array: uses m2 if attributes exist, else m1.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,get,org.apache.pdfbox.cos.COSNumber:get(java.lang.String),58,95,"/**
 * Parses a number string to a COSNumber (Integer or Float).
 * @param number The number string to parse.
 * @return COSNumber object or throws IOException if invalid.
 */","* This factory method will get the appropriate number object.
     *
     * @param number The string representation of the number.
     *
     * @return A number object, either float or int.
     *
     * @throws IOException If the string is not a number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromFloat,org.apache.pdfbox.pdfwriter.COSWriter:visitFromFloat(org.apache.pdfbox.cos.COSFloat),1350,1354,"/**
* Calls m1() and passes the result to obj's m2 method.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSFloat,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSFloat(java.io.OutputStream,org.apache.pdfbox.cos.COSFloat)",270,274,"/**
* Writes a COSFloat to the output stream.
* @param output Output stream to write to
* @param cosFloat COSFloat object to write
*/
","* Write the given {@link COSFloat} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosFloat The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,toIncrement,org.apache.pdfbox.cos.COSUpdateInfo:toIncrement(),52,55,"/**
* Delegates the m2() call to the result of m1().
* @return COSIncrement object returned by m1().m2()
*/
","* Uses this {@link COSUpdateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on this {@link COSUpdateInfo}.
     * @see COSIncrement",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectKey,"org.apache.pdfbox.pdfparser.BaseParser:getObjectKey(long,int)",194,213,"/**
 * Retrieves a COSObjectKey, caching if necessary.
 * @param num Object number.
 * @param gen Object generation.
 * @return COSObjectKey object.
 */","* Returns the object key for the given combination of object and generation number. The object key from the cross
     * reference table/stream will be reused if available. Otherwise a newly created object will be returned.
     * 
     * @param num the given object number
     * @param gen the given generation number
     * 
     * @return the COS object key",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjects,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjects(),132,217,"/**
 * Searches for COS objects within a PDF source, tracking offsets.
 */","* Brute force search for every object in the pdf.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreamOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreamOffsets(),568,634,"/**
 * Finds object stream offsets using a breadth-first search.
 * @return Map of object stream offsets to COSObjectKey.
 */","* Search for all offsets of object streams within the given pdf
     * 
     * @return a map of all offsets for object streams
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:parse(org.apache.pdfbox.pdfparser.XrefTrailerResolver),119,152,"/**
* Processes xref entries, resolving COS objects based on type.
* @param resolver Resolves COS objects; uses offset and type.
*/","* Parses through the unfiltered stream and populates the xrefTable HashMap.
     * 
     * @param resolver resolver to read the xref/trailer information
     * @throws IOException If there is an error while parsing the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,findObjectKey,"org.apache.pdfbox.pdfparser.XrefParser:findObjectKey(org.apache.pdfbox.cos.COSObjectKey,long,java.util.Map)",475,549,"/**
 * Finds a COS object at a given offset, adjusting if necessary.
 * @param objectKey The expected object key.
 * @param offset The offset to search for the object.
 * @param xrefOffset Map of object keys to offsets.
 * @return Updated COSObjectKey or null if not found.
 */","* Check if the given object can be found at the given offset. Returns the provided object key if everything is ok.
     * If the generation number differs it will be fixed and a new object key is returned.
     * 
     * @param objectKey the key of object we are looking for
     * @param offset the offset where to look
     * @param xrefOffset a map with with all known xref entries
     * @return returns the found/fixed object key
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefTable,org.apache.pdfbox.pdfparser.XrefParser:parseXrefTable(long),577,691,"/**
 * Processes an XRef table, resolving object references and offsets.
 */","* This will parse the xref table from the stream and add it to the state
     * The XrefTable contents are ignored.
     * @param startByteOffset the offset to start at
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,fillGapsWithFreeEntries,org.apache.pdfbox.pdfwriter.COSWriter:fillGapsWithFreeEntries(),801,844,"/**
* Generates free XReferences based on NormalXReferences.
* Creates and adds FreeXReference objects to the list.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream),237,240,"/**
 * Creates a COSWriter with an OutputStream.
 * @param outputStream The output stream to write COS data to.
 */
","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead,java.util.Set)",289,307,"/**
 * Creates a COSWriter with an output stream, input data, and objects to write.
 * @param outputStream Output stream for writing COS objects.
 * @param inputData RandomAccessRead for input data.
 * @param objectsToWrite Set of COSDictionary objects to write.
 */
","* Constructor for incremental updates with a list of objects to write. This allows to
     * include objects even if there is no path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only
     * dictionaries are supported; if you need to update other objects classes, then add their
     * parent dictionary.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data.
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,setNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:setNeedToBeUpdated(boolean),41,44,"/**
 * Calls m1().m2() with the provided boolean flag.
 */","* Set the update state of the dictionary for the COSWriter. This indicates whether an object is
     * to be written when there is an incremental save.
     *
     * @param flag the update state.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(),219,222,"/**
 * Calls m1 with the 'true' parameter. Overloads the method.
 */","* Calls {@link #update(boolean)} with {@code true} as the new update state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,"org.apache.pdfbox.cos.COSArray:getString(int,java.lang.String)",418,430,"/**
 * Retrieves string at index, or defaultValue if out of bounds.
 */","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,equals,org.apache.pdfbox.cos.COSString:equals(java.lang.Object),274,284,"/**
 * Checks if object is COSString and matches criteria.
 * @param obj The object to check. Returns true if matches.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toString,org.apache.pdfbox.cos.COSString:toString(),293,297,"/**
* Returns a string representation combining a call to m1().
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:getFile(),55,59,"/**
* Delegates to file.m1() and returns the result.
*/","* This will get the file name.
     *
     * @return The file name.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:getNamedDestination(),88,101,"/**
 * Retrieves a string value from a COS object.
 * Returns null if the object is neither COSString nor COSName.
 */","* This will get the name of the destination.
     *
     * @return The name of the destination.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,getPairableItems,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:getPairableItems(org.apache.pdfbox.cos.COSBase,int)",133,167,"/**
 * Extracts strings from COSBase, handling strings and arrays.
 * @param items COSBase object to extract strings from
 * @param pairIdx Index into two-element arrays (0 or 1)
 * @return List of extracted strings
 */
","* Return either one of a list which can have two-element arrays entries.
     * <p>
     * Some entries in a dictionary can either be an array of elements
     * or an array of two-element arrays. This method will either return
     * the elements in the array or in case of two-element arrays, the element
     * designated by the pair index
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the items contain
     * two-element arrays and the index is not 0 or 1.
     * </p>
     * 
     * @param items the array of elements or two-element arrays
     * @param pairIdx the index into the two-element array
     * @return a List of single elements",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getExportValues(),249,262,"/**
 * Extracts a list of strings from a COS value (String or Array).
 * Returns an empty list if the value is neither.
 */","* This will get the (optional) export values.
     * 
     * <p>The export values are defined in the field dictionaries /Opt key.</p>
     * 
     * <p>The option values are used to define the export values
     * for the field to 
     * <ul>
     *  <li>hold values in non-Latin writing systems as name objects, which represent the field value, are limited
     *      to PDFDocEncoding
     *  </li>
     *  <li>allow radio buttons having the same export value to be handled independently
     *  </li>
     * </ul>
     * 
     * @return List containing all possible export values. If there is no /Opt entry an empty list will be returned.
     * 
     * @see #getOnValues()",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearance(),74,84,"/**
* Retrieves the default appearance string from a COSBase object.
* Returns null if the base object is not a COSString.
*/
","* Get the default appearance.
     * 
     * This is an inheritable attribute.
     * 
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     * 
     * @return the DA element of the dictionary object",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(java.lang.String),87,90,"/**
 * Creates a COSString object from a String.
 * @param text The string to be wrapped in the COSString.
 */
","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isStandard14(),370,393,"/**
* Checks encoding validity, returns false if invalid, else super.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,encode,"org.apache.pdfbox.filter.ASCII85Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",43,52,"/**
 * Encodes input stream to ASCII85 and writes to output stream.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode1D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode1D(),152,173,"/**
 * Processes run trees until a row is complete.
 * Updates changesCurrentRow with row indices.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode2D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode2D(),175,242,"/**
 * Processes code tree nodes to update row changes based on modes.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encode2D,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encode2D(),167,220,"/**
 * Processes data based on changes and references, updating state.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",58,134,"/**
 * Decodes an image stream into an OutputStream, applying options.
 * @param encoded Input image stream
 * @param decoded Output stream for decoded image data
 * @param parameters COSDictionary containing parameters
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.io.InputStream),162,166,"/**
* Initializes the designer with an image stream.
* @param imageStream Input stream for the visible signature image.
*/
","* Constructor usable for signing existing signature fields.
     *
     * @param imageStream image as a stream
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureImage(java.lang.String),270,277,"/**
 * Creates a PDVisibleSignDesigner from an input stream.
 * @param path Path to the input file.
 * @throws IOException if an I/O error occurs.
 */
","* Set the image for the signature.
     *
     * @param path Path of the image file.
     * @return Visible Signature Configuration Object
     * @throws IOException if the image for the signature could not be set",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[],int,int)",297,327,"/**
* Reads data from byte array, applying predictor if needed.
* @param bytes Input byte array.
* @param off Offset in the byte array.
* @param len Number of bytes to read.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,flush,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:flush(),349,359,"/**
 * Processes current row data and calls m2, then calls super.m3().
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.common.PDStream),36,39,"/**
 * Constructs a PDTransparencyGroup from a given stream.
 */","* Creates a Transparency Group for reading.
     * @param stream The XObject stream",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",222,233,"/**
 * Creates a holder form and adds it to the PDF structure.
 * @param holderFormResources Resources for the form.
 * @param holderFormStream Stream containing form data.
 * @param bbox Bounding box of the form.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",269,279,"/**
 * Creates and adds an inner form to the PDF structure.
 * @param innerFormResources Resources for the inner form.
 * @param innerFormStream Stream containing the inner form data.
 * @param bbox Bounding box of the inner form.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:readEncodingFromFont(),283,304,"/**
 * Determines the encoding based on internal flags and font type.
 * @return Encoding object representing the determined encoding.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:readEncodingFromFont(),492,513,"/**
 * Determines the encoding based on internal flags and font type.
 * @return Encoding object representing the determined encoding.
 * @throws IOException if an I/O error occurs.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionary,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionary(boolean),281,328,"/**
 * Parses a COSDictionary from the input stream.
 * @param isDirect boolean indicating direct parsing
 * @return COSDictionary object parsed from the stream
 */","* This will parse a PDF dictionary.
     *
     * @param isDirect indicates whether the dictionary to be read is a direct object
     * @return The parsed dictionary, never null.
     *
     * @throws IOException If there is an error reading the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(),1052,1067,"/**
 * Reads characters from source until a stop character is found.
 * @return String built from read characters, or empty string.
 */","* This will read the next string from the stream.
     *
     * @return The string that was read from the stream, never null.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedString,"org.apache.pdfbox.pdfparser.BaseParser:readExpectedString(char[],boolean)",1076,1089,"/**
 * Verifies string matches source, skipping spaces if specified.
 * @param expectedString String to verify against the source.
 * @param skipSpaces Whether to skip spaces in the source.
 * @throws IOException if the expected string doesn't match.
 */
","* Reads given pattern from {@link #source}. Skipping whitespace at start and end if wanted.
     * 
     * @param expectedString pattern to be skipped
     * @param skipSpaces if set to true spaces before and after the string will be skipped
     * @throws IOException if pattern could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(int),1117,1140,"/**
 * Reads characters from the source until a mask character is found.
 * @param length Initial buffer size.
 * @return String containing read characters.
 */","* This will read the next string from the stream up to a certain length.
     *
     * @param length The length to stop reading at.
     *
     * @return The string that was read from the stream of length 0 to length.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readInt,org.apache.pdfbox.pdfparser.BaseParser:readInt(),1387,1406,"/**
 * Parses an integer from a buffer, throwing IOException on failure.
 */","* This will read an integer from the stream.
     *
     * @return The integer that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLong,org.apache.pdfbox.pdfparser.BaseParser:readLong(),1416,1434,"/**
 * Parses a long value from a buffer.
 * @return Parsed long value, or throws IOException on error.
 */","* This will read an long from the stream.
     *
     * @return The long that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,calculateXRefFixedOffset,org.apache.pdfbox.pdfparser.XrefParser:calculateXRefFixedOffset(long),326,343,"/**
 * Resolves an object offset to its xref table/stream offset.
 * @param objectOffset The offset to resolve. Returns 0 if not found.
 */","* Try to find a fixed offset for the given xref table/stream.
     * 
     * @param objectOffset the given offset where to look at
     * @return the fixed offset
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",854,900,"/**
 * Encrypts data based on revision, password, owner, and permissions.
 * @param password Password for encryption.
 * @param owner Owner identifier.
 * @param permissions Permissions value.
 * @param id Identifier for the data.
 * @return Encrypted byte array.
 */","* This will compute the user password hash.
     *
     * @param password The plain text password.
     * @param owner The owner password hash.
     * @param permissions The document permissions.
     * @param id The document id.
     * @param encRevision The revision of the encryption.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return The user password.
     *
     * @throws IOException if the password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword234(byte[],byte[],int,int)",671,701,"/**
* Masks data using RC4 encryption based on revision.
* @param ownerPassword Owner's password for encryption.
* @param owner Data to be masked.
* @param encRevision Encryption revision.
* @param length Length of data.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeOwnerPassword(byte[],byte[],int,int)",914,945,"/**
 * Encrypts user password using RC4 with owner password and revision.
 * @param ownerPassword Owner's password used for encryption.
 * @param userPassword User's password to be encrypted.
 */","* Compute the owner entry in the encryption dictionary.
     *
     * @param ownerPassword The plaintext owner password.
     * @param userPassword The plaintext user password.
     * @param encRevision The revision number of the encryption algorithm.
     * @param length The length of the encryption key.
     *
     * @return The o entry of the encryption dictionary.
     *
     * @throws IOException if the owner password could not be computed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,process,"org.apache.pdfbox.contentstream.operator.state.Concatenate:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,68,"/**
 * Processes an operator with arguments, creating and applying a matrix.
 * @param operator The operator being processed.
 * @param arguments List of COSBase arguments.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,77,"/**
* Sets the text line matrix using provided operator and arguments.
* @param operator Operator object
* @param arguments List of COSBase arguments
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,rotate,org.apache.pdfbox.util.Matrix:rotate(double),278,281,"/**
* Applies a rotation matrix to m2.
* @param theta Rotation angle in radians.
*/","* Rotates this matrix by the given factors.
     *
     * @param theta The angle of rotation measured in radians",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,applyTextAdjustment,"org.apache.pdfbox.contentstream.PDFStreamEngine:applyTextAdjustment(float,float)",722,726,"/**
* Delegates coordinate processing to chained methods.
* @param tx x-coordinate value
* @param ty y-coordinate value
*/
","* Applies a text position adjustment from the TJ operator. May be overridden in subclasses.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,org.apache.pdfbox.util.Matrix:translate(org.apache.pdfbox.util.Vector),237,240,"/**
* Delegates processing to helper method with vector elements.
*/","* Translates this matrix by the given vector.
     *
     * @param vector 2D vector",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,"org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)",434,437,"/**
* Applies matrix b's masking function to matrix a.
* @param a The matrix to be masked.
* @param b The matrix containing the masking function.
* @return The masked matrix.
*/
","* Produces a copy of the first matrix, with the second matrix concatenated.
     *
     * @param a The matrix to copy.
     * @param b The matrix to concatenate.
     * 
     * @return a copy of the first matrix with the second matrix concatenated",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument),202,205,"/**
 * Creates a PDDocument from a COSDocument.
 * @param doc The COSDocument to use.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStroke,org.apache.pdfbox.rendering.PageDrawer:getStroke(),705,740,"/**
 * Creates a Stroke object based on graphics state properties.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getTriangles(),167,171,"/**
* Creates a list of ShadedTriangle objects from a CoordinateColorPair array.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.CharSequence),68,73,"/**
 * Processes the input CharSequence by tokenizing and recursing.
 */",{@inheritDoc},,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanNewLine,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanNewLine(),220,232,"/**
 * Processes a line of input, handling CR/LF sequences.
 * Reads a char, appends to buffer, handles CR/LF, calls handler.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanWhitespace,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanWhitespace(),234,254,"/**
 * Consumes whitespace and triggers handler processing.
 * Reads chars until non-whitespace is encountered.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanComment,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanComment(),256,276,"/**
 * Appends comment content to buffer, handling line terminators.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanToken,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanToken(),278,315,"/**
 * Processes tokens, handling specific characters and looping.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getCurrentAccessPermission,org.apache.pdfbox.pdmodel.PDDocument:getCurrentAccessPermission(),1355,1362,"/**
 * Returns the AccessPermission instance, creating it if null.
 */","* Returns the access permissions granted when the document was decrypted. If the document was not decrypted this
     * method returns the access permission for a document owner (ie can do everything). The returned object is in read
     * only mode so that permissions cannot be changed. Methods providing access to content should rely on this object
     * to verify if the current user is allowed to proceed.
     * 
     * @return the access permissions for the current user on the document.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRevisionNumber,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRevisionNumber(int),109,131,"/**
 * Adjusts the version based on input and protection policy.
 * @param version The input version number.
 * @return An adjusted version number.
 */","* Computes the revision version of the StandardSecurityHandler to
     * use regarding the version number and the permissions bits set.
     * See PDF Spec 1.6 p98
     * 
     * @param version The version number.
     *
     * @return The computed revision number.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAESother,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",317,346,"/**
 * Decrypts or encrypts data using a cipher with provided key and IV.
 * @param finalKey encryption key
 * @param data input stream
 * @param output output stream
 * @param decrypt decrypt flag
 */","* Encrypt or decrypt data with AES with key length other than 256 bits.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAES256,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",357,390,"/**
 * Processes data stream, decrypting if specified.
 * @param data Input data stream
 * @param output Output stream to write processed data
 * @param decrypt Flag to indicate decryption
 */","* Encrypt or decrypt data with AES256.
     *
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],byte[],java.io.OutputStream)",300,304,"/**
 * Encrypts input using RC4 and writes to output.
 * @param finalKey RC4 key
 * @param input Input byte array
 * @param output Output stream
 */
","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(java.io.InputStream,java.io.OutputStream)",139,147,"/**
* Copies data from an InputStream to an OutputStream.
* @param data Source InputStream
* @param output Destination OutputStream
*/
","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepQuery,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepQuery(java.lang.String),48,51,"/**
* Delegates string processing to m1 with a boolean flag.
* @param str Input string to be processed.
*/","* Return the {@code SASLPrep}-canonicalised version of the given {@code str} for use as a query
     * string. This implements the {@code SASLPrep} algorithm defined in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a query string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepStored,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepStored(java.lang.String),66,69,"/**
* Calls m1 with the given string and false as the second argument.
*/","* Return the {@code SASLPrep}-canonicalised version of the given
     * @code str} for use as a stored string. This implements the {@code SASLPrep} algorithm defined
     * in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a stored string is.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,createDERForRecipient,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:createDERForRecipient(byte[],java.security.cert.X509Certificate)",471,521,"/**
 * Encrypts data using RC2-CBC, generates recipient info, and returns ASN1Primitive.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2A,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2A(byte[],byte[],byte[])",1116,1122,"/**
 * Derives a key from password, salt, and user data.
 * @param password Password to be hashed.
 * @param salt Salt value.
 * @param u User data.
 * @return Derived key as a byte array.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLine,org.apache.pdfbox.text.PDFTextStripper:writeLine(java.util.List),1857,1870,"/**
 * Processes a line of words, writing them to the output stream.
 * @param line List of words with their positions.
 * @throws IOException if writing fails.
 */","* Write a list of string containing a whole line of a document.
     * 
     * @param line a list with the words of the given line
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getFont(),131,157,"/**
 * Retrieves a FontBoxFont, caching if available, otherwise creates it.
 */","* {@inheritDoc}
         * <p>
         * The method returns null if there is there was an error opening the font.
         *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,saveDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:saveDiskCache(),410,434,"/**
* Writes font information to a cache file. Handles IO/Security exceptions.
*/",* Saves the font metadata cache to disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,loadDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:loadDiskCache(java.util.List),493,652,"/**
 * Parses font cache file to retrieve FSFontInfo objects.
 * @param files List of file objects to check.
 * @return List of FSFontInfo objects or null if rebuild needed.
 */",* Loads the font metadata cache from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,setProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:setProvider(org.apache.pdfbox.pdmodel.font.FontProvider),145,149,"/**
 * Initializes font info and provider.
 * @param fontProvider The FontProvider instance.
 */
",* Sets the font service provider.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:<init>(java.awt.geom.Point2D[],float[][])",58,92,"/**
 * Initializes a shaded triangle with given points and colors.
 * @param p Array of triangle points.
 * @param c Array of colors for the triangle.
 */
","* Constructor.
     *
     * @param p an array of the 3 vertices of a triangle
     * @param c an array of color corresponding the vertex array p",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1CFont:getHeight(int),367,387,"/**
 * Gets glyph height by code. Returns height or 0 if not found.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeTo,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeTo(java.io.OutputStream),91,176,"/**
 * Writes a CID-to-Unicode CMap to the provided OutputStream.
 * @param out the OutputStream to write to
 */","* Writes the CMap as ASCII to the given output stream.
     *
     * @param out ASCII output stream
     * @throws IOException if the stream could not be written",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,load,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:load(java.lang.String,int)",48,64,"/**
 * Loads a GlyphList from a file.
 * @param filename GlyphList filename.
 * @param numberOfEntries Number of entries in the GlyphList.
 * @return GlyphList object.
 */",* Loads a glyph list from disk.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getWidthFromFont(int),368,379,"/**
 * Calculates the glyph width based on the given code.
 * @param code Glyph code. Returns glyph width as a float.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getHeight(int),381,391,"/**
 * Retrieves a float value from GlyphData based on a code.
 * @param code integer code to look up
 * @return float value, or 0 if glyph is not found.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getGIDToCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getGIDToCode(),452,465,"/**
 * Populates gidToCode map based on code values.
 * Returns the populated map.
 */","* Inverts the font's code -&gt; GID mapping. Any duplicate (GID -&gt; code) mappings will be lost.
     * 
     * @return the GID for the given code
     * 
     * @throws IOException if the data could not be read",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(int),594,598,"/**
 * Checks if m1 returns a non-zero value.
 * @param code Input code to pass to m1.
 * @return True if m1's result is non-zero, false otherwise.
 */
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(int),181,195,"/**
 * Recursively processes a code, returning a string based on its value.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(int),197,215,"/**
 * Recursively determines a GeneralPath based on the code.
 * @param code determines the path to return
 * @return GeneralPath object
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNormalizedPath(int),217,240,"/**
* Retrieves a GeneralPath based on the given code.
* @param code integer code to determine the path.
* @return GeneralPath object or default if not found.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getWidthFromFont(int),349,359,"/**
 * Calculates a width based on a code, transforming it.
 * @param code Input code used to derive a name.
 * @return The transformed width as a float.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1Font:codeToName(int),561,565,"/**
* Retrieves a name based on the code and returns it.
* @param code Input code used to determine the name.
* @return The derived name string.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(java.lang.String),616,629,"/**
 * Creates a GeneralPath based on name, using genericFont if not embedded.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(java.lang.String),650,654,"/**
* Delegates font creation to genericFont, using a derived key.
* @param name Font name; used to derive a key.
* @return True if font creation succeeds, false otherwise.
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGB(float[]),140,145,"/**
 * Converts float array using awtColorSpace.
 * @param value float array to convert
 * @return Converted float array
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImage(java.awt.image.WritableRaster),155,160,"/**
* Creates a buffered image using the provided raster.
* @param raster The input raster to process.
* @return A BufferedImage created from the raster.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkConverterState,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),591,648,"/**
* Validates PNG converter state, checking for valid chunks.
* Returns true if valid, false otherwise.
*/","* Check if the converter state is sane.
     *
     * @param state the parsed converter state
     * @return true if the state seems plausible",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getTriangles(),123,132,"/**
 * Generates a list of ShadedTriangle objects based on bezier curves.
 * Uses controlPoints, level and calls m1/m2 for processing.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endTextClip,org.apache.pdfbox.rendering.PageDrawer:endTextClip(),474,493,"/**
 * Applies rendering mode if conditions are met, updates clips.
 */","* End buffering the text clipping path, if any.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,clip,org.apache.pdfbox.rendering.PageDrawer:clip(int),958,979,"/**
 * Clips the path using the given winding rule.
 * @param windingRule The winding rule to use for clipping.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setClip,org.apache.pdfbox.rendering.PageDrawer:setClip(),411,424,"/**
 * Updates clipping paths, redrawing if necessary.
 * @param graphics The graphics context to update.
 */
","* Sets the clipping path using caching for performance. We track lastClip manually because
     * {@link Graphics2D#getClip()} returns a new object instead of the same one passed to
     * {@link Graphics2D#setClip(java.awt.Shape) setClip()}. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getDataToSign,org.apache.pdfbox.pdfwriter.COSWriter:getDataToSign(),931,949,"/**
* Creates an InputStream for signing the PDF incrementally.
* Returns SequenceInputStream of incremental input and filter.
*/","* Return the stream of PDF data to be signed. Clients should use this method only to create
     * signatures externally. {@link #write(PDDocument)} method should have been called prior. The
     * created signature should be set using {@link #writeExternalSignature(byte[])}.
     * <p>
     * When {@link SignatureInterface} instance is used, COSWriter obtains and writes the signature
     * itself.
     * </p>
     *
     * @return data stream to be signed
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if input data is closed",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[]),61,65,"/**
* Calls overloaded method with full byte array.
* @param b byte array to process; returns int value.
* @throws IOException if an I/O error occurs
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,mergeDiacritic,org.apache.pdfbox.text.TextPosition:mergeDiacritic(org.apache.pdfbox.text.TextPosition),667,745,"/**
* Processes a diacritic, potentially calling m5 based on its position.
* @param diacritic The diacritic to process.
*/","* Merge a single character TextPosition into the current object. This is to be used only for
     * cases where we have a diacritic that overlaps an existing TextPosition. In a graphical
     * display, we could overlay them, but for text extraction we need to merge them. Use the
     * contains() method to test if two objects overlap.
     *
     * @param diacritic TextPosition to merge into the current TextPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",31,69,"/**
 * Compares two TextPosition objects based on their values.
 * Returns a negative, zero, or positive int based on comparison.
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,contains,org.apache.pdfbox.text.TextPosition:contains(org.apache.pdfbox.text.TextPosition),568,608,"/**
 * Checks if a TextPosition overlaps with the current region.
 * @param tp2 The TextPosition to check.
 * @return True if overlap exists, false otherwise.
 */","* Determine if this TextPosition logically contains another (i.e. they overlap and should be
     * rendered on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained in the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,completelyContains,org.apache.pdfbox.text.TextPosition:completelyContains(org.apache.pdfbox.text.TextPosition),618,657,"/**
 * Checks if TextPosition tp2 overlaps with the component's bounds.
 */","* Determine if this TextPosition perfectly contains another (i.e. the other TextPosition
     * overlaps 100% with this one and fits entirely inside its bounding box when they are rendered
     * on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained completely inside the bounding box of this text.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphSeparator,org.apache.pdfbox.text.PDFTextStripper:writeParagraphSeparator(),1701,1705,"/**
* Executes m1 and m2 sequentially.
*/","* writes the paragraph separator string to the output.
     * 
     * @throws IOException if something went wrong",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,isParagraphSeparation,"org.apache.pdfbox.text.PDFTextStripper:isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1615,1687,"/**
 * Determines if a position warrants a specific action.
 * @param position Current position.
 * @param lastPosition Previous position.
 */","* tests the relationship between the last text position, the current text position and the last text position that
     * followed a line separator to decide if the gap represents a paragraph separation. This should <i>only</i> be
     * called for consecutive text positions that first pass the line separation test.
     * <p>
     * This base implementation tests to see if the lastLineStartPosition is null OR if the current vertical position
     * has dropped below the last text vertical position by at least 2.5 times the current text height OR if the current
     * horizontal position is indented by at least 2 times the current width of a space character.
     * </p>
     * <p>
     * This also attempts to identify text that is indented under a hanging indent.
     * </p>
     * <p>
     * This method sets the isParagraphStart and isHangingIndent flags on the current position object.
     * </p>
     *
     * @param position the current text position. This may have its isParagraphStart or isHangingIndent flags set upon
     * return.
     * @param lastPosition the previous text position (should not be null).
     * @param lastLineStartPosition the last text position that followed a line separator, or null.
     * @param maxHeightForLine max height for text positions since lasLineStartPosition.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,createWord,"org.apache.pdfbox.text.PDFTextStripper:createWord(java.lang.String,java.util.List)",2039,2042,"/**
 * Creates a WordWithTextPositions object.
 * @param word The word to be wrapped.
 * @param wordPositions Positions of the word in text.
 */",* Used within {@link #normalize(List)} to create a single {@link WordWithTextPositions} entry.,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseDate,"org.apache.pdfbox.util.DateConverter:parseDate(java.lang.String,java.text.ParsePosition)",621,690,"/**
 * Parses a string for a calendar, prioritizing the longest match.
 * @param text input string to parse
 * @param initialWhere initial parse position
 * @return Calendar object or null if parsing fails
 */",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,setSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:setSignature(byte[]),45,49,"/**
* Writes a signature to the CosWriter.
* @param signature byte array representing the signature
* @throws IOException if an I/O error occurs
*/
",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromName,org.apache.pdfbox.pdfwriter.COSWriter:visitFromName(org.apache.pdfbox.cos.COSName),1362,1366,"/**
* Calls m2 on the given COSName object, passing m1's result.
*/",,,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSName,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSName(java.io.OutputStream,org.apache.pdfbox.cos.COSName)",306,310,"/**
* Writes COS name to output stream, adding a space.
* @param output Output stream to write to.
* @param cosName COS name object to write.
*/
","* Write the given {@link COSName} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosName The content, that shall be written.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(org.apache.pdfbox.cos.COSName),1479,1483,"/**
* Writes COS name to output, followed by a space.
* @param name COS name to write.
* @throws IOException if an I/O error occurs.
*/
","* Writes a COSName to the content stream.
     * 
     * @param name the name to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],boolean,java.io.OutputStream)",1644,1696,"/**
 * Writes byte array to OutputStream, either as ASCII or hex.
 * @param bytes byte array to write
 * @param forceHex force hex encoding, regardless of content
 * @param output output stream to write to
 */","* This will output the given text/byte string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,sort,"org.apache.pdfbox.util.IterativeMergeSort:sort(java.util.List,java.util.Comparator)",61,78,"/**
 * Sorts a list in place using a comparator.
 * @param list The list to sort.
 * @param cmp The comparator to use for sorting.
 */
","* Sorts this list according to the order induced by the specified
     * {@link Comparator}.
     * 
     * @param  <T> the class of the objects in the list
     * @param  list the list to be sorted.
     * @param  cmp the comparator to determine the order of the list.
     *",,,True,4
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes a NonStrokingColorN with the given PDFStreamEngine.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NonStrokingDeviceCMYKColor with a PDFStreamEngine.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NonStrokingDeviceGrayColor object.
 * @param context The PDFStreamEngine context.
 */
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NonStrokingDeviceRGBColor object.
 * @param context PDFStreamEngine context.
 */
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
* Constructs a StrokingColorN object with the given context.
*/
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a StrokingDeviceCMYKColor with the given context.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a StrokingDeviceGrayColor with the given context.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Constructs a StrokingDeviceRGBColor object.
* @param context The PDFStreamEngine context.
*/
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LegacyFillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LegacyFillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Constructs a LegacyFillNonZeroRule with the given context.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(java.lang.String),62,70,"/**
 * Initializes the PDF marked content extractor with the given encoding.
 */","* Constructor. Will apply encoding-specific conversions to the output text.
     *
     * @param encoding The encoding that the output will be written in.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper:<init>(),196,201,"/**
 * Constructs a PDFTextStripper object, initializing operators.
 */
",* Instantiate a new PDFTextStripper object.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(java.lang.String),1189,1192,"/**
* Delegates to m2(COSName) with the given key converted to COSName.
*/","* This will do a lookup into the dictionary.
     * 
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(java.lang.String),1299,1302,"/**
* Delegates to another m2 method with a COSName object.
* @param name Input string, converted to COSName for processing.
*/","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(java.lang.String),77,80,"/**
* Creates a filter object using the provided filter name.
* @param filterName Name of the filter to create.
* @return Filter object.
*/","* Returns a filter instance given its name as a string.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSName,org.apache.pdfbox.pdfparser.BaseParser:parseCOSName(),861,918,"/**
 * Parses a COS name from the input stream.
 * Reads hex characters until a non-hex character is encountered.
 */","* This will parse a PDF name from the stream.
     *
     * @return The parsed PDF name.
     * @throws IOException If there is an error reading from the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:getCOSObject(),238,242,"/**
* Returns the SymbolEncoding COS name.
* Returns a COSName object representing ""SymbolEncoding"".
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:getCOSObject(),237,241,"/**
* Returns the ZapfDingbatsEncoding COS name.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",51,79,"/**
 * Creates a PDColor object from a COS array and color space.
 * @param array COS array containing color components/pattern name.
 * @param colorSpace The color space for the PDColor.
 */
","* Creates a PDColor containing the given color value.
     * @param array a COS array containing the color value
     * @param colorSpace color space in which the color value is defined",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:getCOSObject(),35,39,"/**
* Returns a COSName object, formed by applying m1() to m2.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,parseHex,org.apache.pdfbox.cos.COSString:parseHex(java.lang.String),136,193,"/**
 * Converts a hex string to a COSString. Handles uneven lengths.
 * @param hex hex string to convert
 * @return COSString representation of the hex string
 */","* This will create a COS string from a string of hex characters.
     *
     * @param hex A hex string.
     * @return A cos string with the hex characters converted to their actual bytes.
     * @throws IOException If there is an error with the hex string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSIntegers,org.apache.pdfbox.cos.COSArray:ofCOSIntegers(java.util.List),751,756,"/**
* Converts a list of integers to a COSArray of COSIntegers.
* @param integer List of integers to convert.
* @return COSArray containing COSInteger objects.
*/","* This will take a list of integer objects and return a COSArray of COSInteger objects.
     *
     * @param integer A list of integers
     *
     * @return An array of COSInteger objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSNames,org.apache.pdfbox.cos.COSArray:ofCOSNames(java.util.List),765,770,"/**
 * Creates a COSArray from a list of strings.
 * @param strings List of strings to be converted to COS names.
 * @return COSArray containing COS names from the input strings.
 */
","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSStrings,org.apache.pdfbox.cos.COSArray:ofCOSStrings(java.util.List),779,784,"/**
 * Creates a COSArray from a list of strings.
 * @param strings List of strings to be added to the array.
 * @return COSArray containing the strings.
 */
","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(),55,59,"/**
 * Initializes a new COSArrayList with an empty COSArray and ArrayList.
 */",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",95,101,"/**
 * Initializes a COSArrayList with a parent dictionary and key.
 */","* This constructor is to be used if the array doesn't exist, but is to be created and added to
     * the parent dictionary as soon as the first element is added to the array.
     *
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is
     * added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,convertListOfByteArraysToCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:convertListOfByteArraysToCOSArray(java.util.List),640,645,"/**
 * Creates a COSArray from a list of byte arrays, converting each to COSString.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(),43,46,"/**
 * Default constructor. Initializes an empty COS array.
 */","* Constructor to create empty page destination.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float,float,float)",117,125,"/**
 * Creates a PDRectangle with specified coordinates and dimensions.
 * @param x x-coordinate
 * @param y y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 */
","* Constructor.
     *
     * @param x the x coordinate of the rectangle
     * @param y the y coordinate of the rectangle
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.fontbox.util.BoundingBox),132,140,"/**
 * Creates a PDRectangle from a BoundingBox.
 * @param box BoundingBox defining the rectangle's corners.
 */
","* Constructor.
     *
     * @param box the bounding box to be used for the rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFilters(java.util.List),257,260,"/**
* Sets the filter list for the stream.
* @param filters List of COSName filter objects.
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(),37,45,"/**
 * Initializes the PDFourColours object with an array of COSNulls.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setAlternateColorSpaces,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setAlternateColorSpaces(java.util.List),496,504,"/**
 * Sets the alternate color space for the stream.
 * @param list List of PDColorSpace objects.
 */","* Sets the list of alternateColorSpace color spaces.
     *
     * @param list the list of color space objects",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,org.apache.pdfbox.cos.COSDocument:createCOSStream(),172,180,"/**
* Creates and registers a COSStream object.
* Returns the created COSStream instance.
*/","* Creates a new COSStream using the current configuration for scratch files.
     * 
     * @return the new COSStream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(),69,72,"/**
* Default constructor for COSStream, initializes with a null stream.
*/
","* Creates a new stream with an empty dictionary.
     * <p>
     * Try to avoid using this constructor because it creates a new scratch file in memory. Instead,
     * use {@link COSDocument#createCOSStream() document.getDocument().createCOSStream()} which will
     * use the existing scratch file (in memory or in temp file) of the document.
     * </p>",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)",93,99,"/**
 * Constructs a COSStream with a stream cache and read view.
 * @param streamCache Cache for RandomAccessStream
 * @param randomAccessReadView View for reading the stream
 */
","* Creates a new stream with an empty dictionary. Data is read from the given random accessview. Written data is
     * stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.
     * @param randomAccessReadView source for the data to be read
     * @throws IOException if the length of the random access view isn't available",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,asUnmodifiableDictionary,org.apache.pdfbox.cos.COSDictionary:asUnmodifiableDictionary(),1335,1338,"/**
 * Returns an unmodifiable COSDictionary representing this object.
 */","* Returns an unmodifiable view of this dictionary.
     * 
     * @return an unmodifiable view of this dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,getDecodeResult,org.apache.pdfbox.cos.COSInputStream:getDecodeResult(),96,106,"/**
 * Decodes data: returns a DecodeResult based on decodeResults.m1().
 */","* Returns the result of the last filter, for use by repair mechanisms.
     * 
     * @return the result of the last filter",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getResources,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getResources(),174,190,"/**
 * Retrieves resources from the document. Returns PDResources object.
 */","* This will get the resources for this Form XObject.
     * This will return null if no resources are available.
     * 
     * @return The resources for this Form XObject.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormResources(),213,220,"/**
 * Creates and sets holder form resources using pdfStructure.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormResource,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormResource(),260,267,"/**
 * Creates resources for an inner form and logs the action.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormResources(),298,304,"/**
* Creates and initializes image form resources.
* Uses PDResources and calls pdfStructure.m1().
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(),43,45,"/**
* Private constructor to prevent direct instantiation of PDAttributeObject.
*/",* Default constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject),39,42,"/**
 * Constructs a PDUserProperty with the given user attribute object.
 */","* Creates a new user property.
     * 
     * @param userAttributeObject the user attribute object",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(),38,40,"/**
 * Default constructor for a PDOutlineNode.
 */",* Default Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(),37,39,"/**
 * Default constructor for the PDDestinationNameTreeNode class.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(),35,37,"/**
 * Default constructor for PDEmbeddedFilesNameTreeNode.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(),36,38,"/**
 * Default constructor for the PDJavascriptNameTreeNode class.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(),36,39,"/**
 * Default constructor. Calls the superclass constructor.
 */",* Constructor.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Creates a PDNonTerminalField, passing the acroForm to the superclass.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,47,"/**
 * Constructs a PDTerminalField with the given AcroForm.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),365,368,"/**
 * Constructs a PDLayoutAttributeObject from a COSDictionary.
 */","* Creates a new Layout attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),88,91,"/**
 * Constructs a PDListAttributeObject from a COSDictionary.
 */","* Creates a new List attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Constructs a PDPrintFieldAttributeObject from a COSDictionary.
 */","* Creates a new PrintField attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Creates a PDTableAttributeObject from a COSDictionary.
 * @param dictionary The COSDictionary containing attribute data.
 */
","* Creates a new Table attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.cos.COSStream),38,41,"/**
* Creates a PDAppearanceStream from a COSStream.
* @param stream The COSStream to use for initialization.
*/
","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",47,50,"/**
 * Constructs a PDTransparencyGroup from a COSStream and ResourceCache.
 */","* Creates a Transparency Group for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeCollection,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeCollection(java.io.File),657,670,"/**
 * Loads a TrueType collection from a file, handling potential errors.
 * @param ttcFile The file containing the TrueType collection.
 */
","* Adds a TTC or OTC to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFontImpl,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFontImpl(org.apache.fontbox.ttf.FontHeaders,java.io.File,java.lang.String)",705,791,"/**
* Processes a font file, extracting and storing font information.
*/","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addType1Font,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addType1Font(java.io.File),796,825,"/**
 * Loads a PFB font file, validates its name, and adds font info.
 * @param pfbFile The PFB font file to load.
 */","* Adds a Type 1 font to the file cache. To reduce memory, the parsed font is not cached.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PMeshBasedShadingType from a COSDictionary.
 * @param shadingDictionary The shading dictionary.
 */
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(),108,112,"/**
 * Calls m1 with a null argument. Overloads the method.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(),61,65,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(),129,133,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(),295,299,"/**
 * Calls the overloaded m1 method with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(),65,69,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(),119,123,"/**
 * Calls m1 with a null argument. Overloads the method.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(),415,419,"/**
* Calls m1 with a null argument. Overloads the method.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(),227,231,"/**
 * Calls the overloaded m1 method with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(),169,173,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(),185,189,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(),62,66,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(),62,66,"/**
 * Calls m1 with a null argument. Overloads the method.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(),65,69,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(),65,69,"/**
 * Calls m1 with a null argument.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(),233,237,"/**
 * Calls m1 with a null argument, providing default behavior.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(),65,69,"/**
* Calls the overloaded m1 method with a null argument.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Constructs a PDCheckBox object.
 * @param acroForm The AcroForm object.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Initializes a PDPushButton with the given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
 * Creates a PDRadioButton object.
 * @param acroForm The associated AcroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",65,68,"/**
 * Constructs a PChoice object, calling the parent class constructor.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",57,60,"/**
 * Constructs a PDTextField with the given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsState(),991,994,"/**
* Applies a transformation using nested method calls.
*/",* Pushes the current graphics state to the stack.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsStack,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsStack(),1009,1015,"/**
 * Saves the current graphics state and pushes a new one.
 * @return The saved graphics state.
 */","* Saves the entire graphics stack.
     * 
     * @return the saved graphics state stack.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(),101,104,"/**
 * Constructs a COSDocument with a default memory-only stream cache.
 */
",* Constructor. Uses main memory to buffer PDF streams.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",182,191,"/**
 * Constructs a COSParser with provided sources, password, and key.
 */","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException if the source data could not be read",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Closes and strokes the current path using the given operator.
* @param operator The operator to use.
* @param arguments Arguments for the operator.
*/
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,46,"/**
* Executes CLOSE_PATH and FILL_EVEN_ODD_AND_STROKE operators.
* @param operator The operator to execute.
* @param operands Operands for the operators.
*/
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Executes CLOSE_PATH and FILL_NON_ZERO_AND_STROKE operators.
* @param operator The operator to execute.
* @param operands List of operands for the operators.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,66,"/**
* Sets text leading and moves text position based on arguments.
* @param operator Operator being executed.
* @param arguments List of COSBase arguments.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.NextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,54,"/**
 * Executes MOVE_TEXT operator with arguments for PDF processing.
 * @param operator The operator being executed.
 * @param arguments Arguments for the operator.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Writes a newline and text to the PDF stream.
* @param operator The operator to execute.
* @param arguments Text arguments for the SHOW_TEXT operator.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
* Sets word/char spacing and displays text line using arguments.
* @param operator Operator being executed.
* @param arguments List of COSBase arguments for the operator.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFMarkedContentExtractor:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",105,123,"/**
 * Adds a marked content to the list, handling current context.
 * @param tag COSName identifying the marked content.
 * @param properties COSDictionary containing properties.
 */
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:constructAppearances(),193,213,"/**
* Skips signature field appearance generation if widget is invalid.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,transform,"org.apache.pdfbox.rendering.PDFRenderer:transform(java.awt.Graphics2D,int,org.apache.pdfbox.pdmodel.common.PDRectangle,float,float)",455,482,"/**
* Applies scaling, rotation, and translation to the graphics context.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getBounds,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:getBounds(),1995,2022,"/**
* Calculates a transformed rectangle based on scaling factors.
* Returns a Rectangle2D object after applying scaling and translation.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,clipToRect,org.apache.pdfbox.contentstream.PDFStreamEngine:clipToRect(org.apache.pdfbox.pdmodel.common.PDRectangle),616,624,"/**
 * Sets a clip path based on the given rectangle.
 * @param rectangle The rectangle defining the clip region.
 */","* Transforms the given rectangle using the CTM and then intersects it with the current
     * clipping area.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getTransformedAppearanceBBox,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getTransformedAppearanceBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),755,761,"/**
* Transforms and returns the appearance stream bounding box.
*/","* Calculate the transformed appearance box.
     * 
     * Apply the Matrix (or an identity transform) to the BBox of
     * the appearance stream
     * 
     * @param appearanceStream
     * @return the transformed rectangle",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),85,88,"/**
 * Initializes graphics state with a clipping path from the given rectangle.
 * @param page The rectangle defining the clipping path.
 */
","* Constructor with a given page size to initialize the clipping path.
     * @param page the size of the page",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:getLeft(),65,68,"/**
* Calls m1 on the 'array' object with argument 2.
* @return The result of the m1 method call.
*/
","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getLeft(),61,64,"/**
 * Calls m1 on the array with argument 2 and returns the result.
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getBottom(),90,93,"/**
* Calls m1 on the array with argument 3 and returns the result.
*/","* Get the bottom y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The bottom y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getRight(),119,122,"/**
* Calls m1 on the array with argument 4 and returns the result.
*/","* Get the right x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The right x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getTop(),149,152,"/**
* Calls m1 on the array with argument 5 and returns the result.
*/","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:getTop(),67,70,"/**
* Calls m1 on the array with argument 2.
* @return Result of the m1 method call.
*/
","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getLeft(),64,67,"/**
* Calls m1 on the array with argument 2 and returns the result.
*/","* Get the left x coordinate.  Return values of 0 or -1 imply that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getTop(),93,96,"/**
* Calls m1 on the array with argument 3.
* @return Result of the m1 call.
*/
","* Get the top y coordinate.  Return values of 0 or -1 imply that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:fitBoundingBox(),64,67,"/**
* Delegates to TYPE_BOUNDED.m2 with array.m1(1) as input.
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:fitBoundingBox(),93,96,"/**
* Delegates to TYPE_BOUNDED.m2 with array.m1(1) as input.
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:fitBoundingBox(),95,98,"/**
* Delegates to TYPE_BOUNDED.m2 with array.m1(1) as input.
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(),205,208,"/**
* Returns an OutputStream. Delegates to overloaded method.
*/","* Returns a new OutputStream for writing stream data, using the current filters.
     *
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(org.apache.pdfbox.cos.COSName),170,173,"/**
* Delegates stream creation to the underlying stream.
* @param filter COSName representing the filter to apply
* @return OutputStream object
*/
","* This will get a stream that can be written to, with the given filter.
     *
     * @param filter the filter to be used.
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createThumbnail,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createThumbnail(org.apache.pdfbox.cos.COSStream),156,161,"/**
 * Creates a PDImageXObject from a COSStream.
 * @param cosStream COS stream containing image data.
 * @return PDImageXObject instance.
 */
","* Creates a thumbnail Image XObject from the given COSBase and name.
     * @param cosStream the COS stream
     * @return an XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMask(),803,821,"/**
 * Returns a PDImageXObject from the mask COS stream, or null.
 */","* Returns the Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return Mask Image XObject",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSoftMask(),837,846,"/**
 * Returns the image mask or null if not found.
 * Uses m1().m2(COSName.SMASK) to retrieve it.
 */","* Returns the Soft Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return the SMask Image XObject, or null.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeAffineTransform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeAffineTransform(java.awt.geom.AffineTransform),1535,1543,"/**
* Applies AffineTransform to m2, extracting transformation values.
*/","* Writes an AffineTransform to the content stream as an array.
     * 
     * @param transform AffineTransfrom to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginText(),134,142,"/**
 * Starts a text mode block. Throws exception if nested calls exist.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endText(),151,159,"/**
 * Ends the text mode, ensuring beginText() was called first.
 * Throws IllegalStateException if beginText() wasn't called.
 */","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading The leading value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLine(),345,352,"/**
* Writes a newline character to the output stream.
* Throws IllegalStateException if beginText() wasn't called.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves the text cursor to specified coordinates.
* @param tx x-coordinate of the new cursor position.
* @param ty y-coordinate of the new cursor position.
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:saveGraphicsState(),589,609,"/**
* Saves the graphics state, throws exception if in text mode.
* Saves state of font, stroking, and non-stroking color spaces.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, throws exception if in text mode.
* Restores state from stacks, executes RESTORE operator.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float)",713,725,"/**
 * Sets color and applies operations, throws exception if values invalid.
 * @param r Red color component (0..1)
 * @param g Green color component (0..1)
 * @param b Blue color component (0..1)
 */","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values, validating range (0..1) and applying them.
* @param c, m, y, k CMYK color components
* @throws IllegalArgumentException if values are out of range.
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value 'g', validates it, and performs actions.
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
 * Sets RGB color values, validating range (0..1). Calls m3, m4, m5.
 */","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values, validating input and applying transformations.
* @param c, m, y, k CMYK color components (0.0-1.0)
* @throws IllegalArgumentException if any value is out of range.
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float),877,886,"/**
* Processes a float value 'g', validates it, and calls other methods.
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:addRect(float,float,float,float)",898,909,"/**
 * Appends a rectangle operation to the graphics context.
 * Throws exception if in text mode.
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a curveTo path segment. Throws exception in text mode.
 * @param x1, y1, x2, y2, x3, y3 coordinates of the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a curve segment, throws exception if in text mode.
 * @param x2, y2, x3, y3 coordinates of the curve segment.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a curve to the final point, throws exception if in text mode.
 * @param x1, y1, x3, y3 coordinates for the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:moveTo(float,float)",995,1004,"/**
* Moves the cursor to the specified coordinates.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to coordinates (x, y), throws exception if in text mode.
 */","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:stroke(),1031,1038,"/**
* Executes a stroke path operation if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndStroke(),1046,1053,"/**
 * Calls m1 with CLOSE_AND_STROKE operator if not in text mode.
 */","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fill(),1061,1068,"/**
* Fills the buffer with the FILL_NON_ZERO operator.
* Throws IllegalStateException if in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd data if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStroke(),1093,1100,"/**
 * Sets the fill and stroke operator, throws exception if in text mode.
 */","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Calls m1 with FILL_EVEN_ODD_AND_STROKE; throws exception if in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStroke(),1127,1134,"/**
 * Executes close, fill, and stroke operation if not in text mode.
 * Throws IllegalStateException if in text mode.
 */","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Executes CLOSE_FILL_EVEN_ODD_AND_STROKE operation; throws exception in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closePath(),1177,1184,"/**
* Closes the current path. Throws exception if in text mode.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clip(),1192,1202,"/**
 * Executes CLIP and ENDPATH operators if not in text mode.
 * Throws IllegalStateException if in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clipEvenOdd(),1210,1220,"/**
* Executes clipEvenOdd and endPath operators, text mode restricted.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width.
* @param lineWidth The width of the line to set.
* @throws IOException if an I/O error occurs.
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineJoinStyle(int),1241,1252,"/**
 * Sets line join style.
 * @param lineJoinStyle Join style (0-2). Throws IllegalArgumentException if invalid.
 */","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle Line cap style value (0-2).
* @throws IllegalArgumentException if the style is invalid.
*/
","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets the line dash pattern with the given pattern and phase.
 * @param pattern float array representing the dash pattern
 * @param phase float representing the phase offset
 */","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the miter limit for line drawing.
* @param miterLimit The miter limit value.
* @throws IllegalArgumentException if miterLimit is invalid.
*/
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endMarkedContent(),1370,1373,"/**
* Marks the end of content using the END_MARKED_CONTENT operator.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing.
* @param spacing The spacing value to set.
* @throws IOException If an I/O error occurs.
*/
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setHorizontalScaling(float),1635,1639,"/**
* Scales an element and sets horizontal scaling operator.
* @param scale Scaling factor to apply.
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm RenderingMode object; specifies the mode to set.
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise and calls m1 with the provided rise value.
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSNumber,org.apache.pdfbox.pdfparser.BaseParser:parseCOSNumber(),1018,1043,"/**
* Reads a COS number from the input source.
* Returns a COSNumber object representing the number.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,getBFCOSObjectOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:getBFCOSObjectOffsets(),117,125,"/**
* Returns offsets of COS objects for BF search.
* Triggers BF search if not already done.
* @return Map of COS object keys to their offsets.
*/
","* Returns all found objects of a brute force search.
     * 
     * @return map containing all found objects of a brute force search
     * 
     * @throws IOException if something went wrong
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,validateXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:validateXrefOffsets(java.util.Map),392,441,"/**
 * Validates and corrects xref offsets in the provided map.
 * @param xrefOffset Map of COSObjectKeys to Long offsets.
 * @return True if validation succeeds, false otherwise.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefTable,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefTable(),753,799,"/**
* Processes XRef entries based on incrementalUpdate flag.
* Handles updates and iterates through ranges to process entries.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.OutputStream),201,205,"/**
* Writes the document to the given OutputStream.
* @param output The OutputStream to write to.
*/","* This will save the document to an output stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,clear,org.apache.pdfbox.cos.COSArray:clear(),140,144,"/**
* Delegates m1() to objects and calls m3() on m2().
*/",* This will remove all of the objects in the collection.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeAll,org.apache.pdfbox.cos.COSArray:removeAll(java.util.Collection),151,155,"/**
* Delegates processing to objects and calls m3 on m2.
* @param objectsList Collection of COSBase objects to process.
*/","* This will remove all of the objects in the collection.
     *
     * @param objectsList The list of objects to remove from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,retainAll,org.apache.pdfbox.cos.COSArray:retainAll(java.util.Collection),162,168,"/**
* Calls m2().m3() if objectsList processing succeeds.
* @param objectsList Collection of COSBase objects to process.
*/
","* This will retain all of the objects in the collection.
     *
     * @param objectsList The list of objects to retain from the collection.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,int)",242,246,"/**
* Delegates to objects.m2 and calls m3().m4.
* @param index Index for objects.m2.
* @param intVal Integer value for objects.m2.
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param intVal The object to set.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(int),459,464,"/**
 * Removes and returns object at index i.
 * @param i index of object to remove
 * @return Removed COSBase object
 */","* This will remove an element from the array.
     *
     * @param i The index of the object to remove.
     *
     * @return The object that was removed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(org.apache.pdfbox.cos.COSBase),474,482,"/**
 * Checks if object is removed and triggers a cleanup if so.
 * @param o The COSBase object to check for removal.
 * @return True if the object was removed, false otherwise.
 */
","* This will remove an element from the array.
     *
     * @param o The object to remove.
     *
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,clear,org.apache.pdfbox.cos.COSDictionary:clear(),130,134,"/**
 * Delegates m1() to items and calls m3() on m2().
 */",* This will clear all items in the map.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,removeItem,org.apache.pdfbox.cos.COSDictionary:removeItem(org.apache.pdfbox.cos.COSName),1164,1168,"/**
* Calls items.m1(key) and then m2().m3().
* @param key The key to pass to items.m1()
*/
","* This will remove an item for the dictionary. This will do nothing of the object does not exist.
     *
     * @param key The key to the item to remove from the dictionary.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,updateDifferentOrigin,org.apache.pdfbox.cos.COSIncrement:updateDifferentOrigin(org.apache.pdfbox.cos.COSUpdateState),258,265,"/**
 * Updates the updateState if incrementOrigin is valid and m2 values differ.
 */","* Check whether the given {@link COSUpdateState}´s {@link COSDocumentState} differs from the {@link COSIncrement}´s
     * known {@link #incrementOrigin}.<br>
     * Should that be the case, the {@link COSUpdateState} originates from another {@link COSDocument} and must be added
     * to the {@link COSIncrement}, hence call {@link COSUpdateState#update()}.
     *
     * @param updateState The {@link COSUpdateState} that shall be updated, if it's originating from another
     *                    {@link COSDocument}.
     * @see #incrementOrigin",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,setToNull,org.apache.pdfbox.cos.COSObject:setToNull(),135,143,"/**
* Releases resources and resets baseObject to COSNull.
*/",* Sets the referenced object to COSNull and removes the initially assigned parser.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,"org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState,boolean)",118,164,"/**
 * Recursively processes update info, setting origin state.
 * @param originDocumentState Origin state to set.
 * @param dereferencing Dereferencing flag.
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     * <p>
     * Additionally to {@link #setOriginDocumentState(COSDocumentState)}, this shall also deny changing
     * {@link #updated}, should the flag {@code dereferencing} indicate, that this is caused by dereferencing a
     * {@link COSObject}.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @param dereferencing       {@code true}, if this update of the {@link COSDocumentState} is caused by
     *                            dereferencing a {@link COSObject}.
     * @see #originDocumentState
     * @see #updated",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,org.apache.pdfbox.cos.COSArray:getString(int),407,410,"/**
 * Overloaded method, calls the other m1 with a null value.
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The string or null if it does not exist.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValue(),110,140,"/**
* Retrieves a string value based on COSName.V, parsing if numeric.
*/","* Returns the selected value.
     * 
     * <p>Off is the default value which will also be returned if the
     * value hasn't been set at all.
     * 
     * @return A non-null string.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(),35,38,"/**
 * Default constructor. Initializes the file specification with an empty string.
 */","* Constructor.
     *",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:setFile(java.lang.String),66,70,"/**
 * Initializes the 'file' field with the provided filename.
 * @param fileName The name of the file to be processed.
 */","* This will set the file name.
     *
     * @param fileName The name of the file.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(java.lang.String),67,70,"/**
 * Creates a named destination with the given name.
 * @param dest The name of the named destination.
 */
","* Default constructor.
     *
     * @param dest The named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:setNamedDestination(java.lang.String),110,120,"/**
* Sets the named destination. Null if dest is null.
*/","* Set the named destination.
     *
     * @param dest The new named destination.
     *
     * @throws IOException If there is an error setting the named destination.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,getPathForCharacterCode,org.apache.pdfbox.rendering.GlyphCache:getPathForCharacterCode(int),47,97,"/**
 * Retrieves a GeneralPath for the given code, caching if possible.
 * @param code glyph code to retrieve
 * @return GeneralPath object or a new one on failure.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType2,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType2(),264,269,"/**
* Executes m1 if optionByteAligned is true, then executes m2.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType4,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType4(),271,298,"/**
 * Processes the EOL tree based on options and calls m5 or m4.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType6,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType6(),300,305,"/**
* Executes m1 if optionByteAligned is true, then executes m2.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRowType6,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRowType6(),130,132,"/**
 * Calls m1().
 * @throws IOException if an I/O error occurs in m1()
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",174,179,"/**
* Calls overloaded method with default DecodeOptions.
* @param encoded Input stream. @param decoded Output stream.
* @param parameters COSDictionary. @param index Index.
* @return DecodeResult object.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[]),291,295,"/**
* Calls m1 with the entire byte array.
* @param bytes The byte array to process.
* @throws IOException if an I/O error occurs.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readGenerationNumber,org.apache.pdfbox.pdfparser.BaseParser:readGenerationNumber(),1369,1378,"/**
 * Validates generation number.
 * @return Generation number after validation.
 * @throws IOException if generation number is invalid.
 */
","* This will read a integer from the Stream and throw an {@link IllegalArgumentException} if the integer value
     * has more than the maximum object revision (i.e. : bigger than {@link #GENERATION_NUMBER_THRESHOLD})
     * @return the generation number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readObjectNumber,org.apache.pdfbox.pdfparser.BaseParser:readObjectNumber(),1353,1361,"/**
 * Validates and returns an object number.
 * @throws IOException if the number is invalid.
 */
","* This will read a long from the Stream and throw an {@link IOException} if
     * the long value is negative or has more than 10 digits (i.e. : bigger than
     * {@link #OBJECT_NUMBER_THRESHOLD})
     *
     * @return the object number being read.
     * @throws IOException if an I/O error occurs",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",1021,1036,"/**
 * Compares password with user data, using different logic based on revision.
 * @param password Password bytes.
 * @return True if password matches, false otherwise.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword(byte[],byte[],int,int)",657,669,"/**
 * Masks data based on revision. Returns empty array for REVISION_5/6.
 */","* Get the user password based on the owner password.
     *
     * @param ownerPassword The plaintext owner password.
     * @param owner The o entry of the encryption dictionary.
     * @param encRevision The encryption revision number.
     * @param length The key length.
     *
     * @return The u entry of the encryption dictionary.
     *
     * @throws IOException If there is an error accessing data while generating the user password.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
 * Initializes a TensorPatch with control points and color data.
 */","* Constructor of a patch for type 7 shading.
     *
     * @param tcp 16 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,tokenize,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:tokenize(),197,218,"/**
 * Processes data while m7() returns true, handling different states.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)",284,289,"/**
 * Encrypts data using RC4.
 * @param finalKey RC4 key.
 * @param input Input stream.
 * @param output Output stream.
 */
","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientsField,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientsField(byte[]),433,469,"/**
 * Generates recipients field for encryption.
 * @param seed seed for data initialization
 * @return byte[][] array of recipient data
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword56(byte[],byte[],byte[],int)",619,643,"/**
* Validates user against owner password, using specified revision.
* @param ownerPassword Owner's password.
* @param user User's data.
* @param owner Owner's data.
* @param encRevision Encryption revision.
* @return True if valid, false otherwise.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev56(byte[],boolean,byte[],byte[],byte[],byte[],int)",780,837,"/**
 * Decrypts a file key using password and revision.
 * @param password Password used for decryption.
 * @return Decrypted file key as byte array.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword56(byte[],byte[],int)",1038,1057,"/**
* Validates password against user hash, using specified revision.
* @param password Password to validate.
* @param user User data.
* @param encRevision Encryption revision.
* @return True if password matches, false otherwise.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getProvider(),154,161,"/**
 * Returns the FontProvider instance, creating one if needed.
 */",* Returns the font service provider. Defaults to using FileSystemFontProvider.,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,createShadedTriangleList,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:createShadedTriangleList(int,int,org.apache.pdfbox.pdmodel.graphics.shading.Vertex[][])",157,188,"/**
 * Creates shaded triangles from lattice points.
 * @param rowNum row count, numPerRow column count, latticeArray vertex grid
 * @return List of ShadedTriangle objects
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getShadedTriangles,org.apache.pdfbox.pdmodel.graphics.shading.Patch:getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][]),173,225,"/**
 * Creates shaded triangles from coordinate-color pairs.
 * @param patchCC 2D array of CoordinateColorPair objects
 * @return List of ShadedTriangle objects
 */","* An assistant method to accomplish type 6 and type 7 shading.
     *
     * @param patchCC all the crossing point coordinates and color of a grid
     * @return a ShadedTriangle list which can compose the grid patch",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1Font:getHeight(int),376,391,"/**
 * Retrieves a float value based on the code, using different logic.
 * @param code Input code to determine the retrieval method.
 * @return A float value.
 */
",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getWidthFromFont(int),450,465,"/**
 * Calculates a width based on the given code, returns a float.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(int),631,636,"/**
* Creates a GeneralPath using the given code.
* Uses m1() and m2() to determine the path name.
*/",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getNormalizedPath(int),638,648,"/**
 * Retrieves a GeneralPath by code. Returns .notdef if not found.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
 * Constructs a CoonsPatch with given points and color data.
 * @param points Control points for the patch.
 * @param color Color data for the patch.
 */
","* Constructor of a patch for type 6 shading.
     *
     * @param points 12 control points
     * @param color 4 corner colors",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endText,org.apache.pdfbox.rendering.PageDrawer:endText(),456,460,"/**
 * Executes m1().
 * @throws IOException if m1() throws an IOException
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginText,org.apache.pdfbox.rendering.PageDrawer:beginText(),449,454,"/**
 * Executes m1 and m2 sequentially.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,getContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:getContent(),39,43,"/**
 * Gets an input stream from the COS writer.
 * @return InputStream object.
 */",,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processTextPosition,org.apache.pdfbox.text.PDFMarkedContentExtractor:processTextPosition(org.apache.pdfbox.text.TextPosition),156,249,"/**
 * Determines whether to show a text character based on overlap.
 * @param text The text position to evaluate.
 */","* This will process a TextPosition object and add the
     * text to the list of characters on a page.  It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripper:processTextPosition(org.apache.pdfbox.text.TextPosition),897,1056,"/**
 * Processes text position, potentially suppressing/linking chars.
 * @param text The text position to process.
 */","* This will process a TextPosition object and add the text to the list of characters on a page. It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,removeContainedSpaces,org.apache.pdfbox.text.PDFTextStripper:removeContainedSpaces(java.util.List),771,793,"/**
 * Removes redundant spaces in a list of text positions.
 * @param textList List of TextPosition objects to process.
 */",* Remove all space characters if contained within the adjacent letters,,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleLineSeparation,"org.apache.pdfbox.text.PDFTextStripper:handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1563,1591,"/**
 * Updates position wrapper and performs actions based on conditions.
 * @param current Current position wrapper.
 * @return Updated lastLineStartPosition wrapper.
 */","* handles the line separator for a new line given the specified current and previous TextPositions.
     * 
     * @param current the current text position
     * @param lastPosition the previous text position
     * @param lastLineStartPosition the last text position that followed a line separator.
     * @param maxHeightForLine max height for positions since lastLineStartPosition
     * @return start position of the last line
     * @throws IOException if something went wrong",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeAdd,"org.apache.pdfbox.text.PDFTextStripper:normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",2115,2132,"/**
 * Processes a line item, normalizing or appending text.
 * @param normalized Normalized words, updates if item.m1() is true.
 * @param lineBuilder Accumulates text for the current line.
 * @param wordPositions Positions of words in the line.
 * @param item The line item being processed.
 * @return Updated line builder.
 */","* Used within {@link #normalize(List)} to handle a {@link TextPosition}.
     * 
     * @return The StringBuilder that must be used when calling this method.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(java.lang.String),719,737,"/**
 * Parses a date string and returns a Calendar object.
 * Returns null if parsing fails or input is invalid.
 */","* Returns the Calendar for a given string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     *
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Marks the start of marked content with a given tag.
* @param tag COSName identifying the marked content.
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Writes a marked content sequence header with tag and mcid.
 * @param tag COSName tag for the sequence
 * @param mcid Integer ID for the marked content
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Processes a tag by calling m1 and setting a marked content point.
* @param tag COSName representing the tag to process.
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",1621,1624,"/**
* Writes COSString content to the OutputStream.
* @param string COSString to write
* @param output Output stream to write to
*/","* This will output the given byte getString as a PDF object.
     *
     * @param string COSString to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],java.io.OutputStream)",1633,1636,"/**
 * Writes byte array to OutputStream. Overloads m1 with default flag.
 */","* This will output the given text/byte getString as a PDF object.
     *
     * @param bytes byte array representation of a string to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True,5
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFGraphicsStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:<init>(org.apache.pdfbox.pdmodel.PDPage),107,176,"/**
 * Initializes the PDF graphics stream engine with the given page.
 * @param page The page to associate with this engine.
 */
","* Constructor.
     * 
     * @param page the page the content stream belongs to",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(),52,55,"/**
 * Default constructor for PDFMarkedContentExtractor.
 */",* Instantiate a new PDFMarkedContentExtractor object.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,<init>,org.apache.pdfbox.text.PDFTextStripperByArea:<init>(),45,48,"/**
 * Default constructor. Disables bead separation.
 */","* Constructor.
     * @throws IOException If there is an error loading properties.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,65,"/**
 * Processes an operator with arguments, setting a PDColor.
 * @param operator The operator being processed.
 * @param arguments List of arguments for the operator.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSHexString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSHexString(),693,746,"/**
* Parses a hex string from the source, handling whitespace/errors.
* @return COSString object representing the parsed string
*/","* This will parse a PDF HEX string with fail fast semantic
     * meaning that we stop if a not allowed character is found.
     * This is necessary in order to detect malformed input and
     * be able to skip to next object start.
     *
     * We assume starting '&lt;' was already read.
     * 
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getConvertedContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getConvertedContents(java.io.InputStream),363,388,"/**
 * Reads input stream, masks specific bytes, and returns a byte array.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFileFilters(java.util.List),378,382,"/**
* Sets the filter list for the stream.
* @param filters List of filter strings to apply.
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(),93,96,"/**
 * Constructs a PDRectangle with default dimensions (0.0f).
 */","* Constructor.
     *
     * Initializes to 0,0,0,0",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float)",104,107,"/**
 * Constructs a PDRectangle with specified width and height.
 * @param width The width of the rectangle.
 * @param height The height of the rectangle.
 */
","* Constructor.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectangle(),164,168,"/**
* Creates a PDRectangle from bounding box coordinates.
* @return A PDRectangle object representing the bounding box.
*/
","* Returns the updated <code>Rect</code> entry for the annotation.
     * The rectangle completely contains the cloudy border.
     *
     * @return Annotation <code>Rect</code>.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectDifference(),185,201,"/**
* Calculates a PDRectangle based on annotations or default size.
*/","* Returns the updated <code>RD</code> entry for Square and Circle annotations.
     *
     * @return Annotation <code>RD</code> value.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,applyRectDiff,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",496,535,"/**
 * Adjusts a rectangle's position based on a minimum value and optional input rectangle.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getPaddedRectangle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",218,222,"/**
 * Creates a new PDRectangle with padding applied to its dimensions.
 * @param rectangle The original rectangle.
 * @param padding The padding to apply.
 * @return A new PDRectangle with added padding.
 */
","* Get a padded rectangle.
     * 
     * <p>Creates a new rectangle with padding applied to each side.
     * .
     * @param rectangle the rectangle.
     * @param padding the padding to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,addRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",235,246,"/**
 * Adjusts a rectangle's coordinates based on provided differences.
 * @param rectangle The rectangle to adjust.
 * @param differences Array of 4 float values for coordinate adjustments.
 * @return A new PDRectangle with adjusted coordinates.
 */","* Get a rectangle enlarged by the differences.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,applyRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",259,269,"/**
 * Adjusts a rectangle's coordinates based on provided differences.
 * @param rectangle The rectangle to adjust.
 * @param differences Array of 4 float values for coordinate adjustments.
 * @return Adjusted PDRectangle object.
 */","* Get a rectangle with the differences applied to each side.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,applyPadding,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",1045,1051,"/**
 * Expands a rectangle by a given padding value.
 * @param box The rectangle to expand.
 * @param padding The padding to apply.
 */
","* Apply padding to a box.
     * 
     * @param box box
     * @return the padded box.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createStream,org.apache.pdfbox.multipdf.Overlay:createStream(java.lang.String),602,611,"/**
 * Creates a COSStream from content, using FlateDecode if content > 20.
 * @param content String content for the stream
 * @return COSStream object
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,<init>,org.apache.pdfbox.pdfparser.PDFXRefStream:<init>(org.apache.pdfbox.cos.COSDocument),57,60,"/**
 * Creates a PDF XRef stream using the provided COSDocument.
 * @param cosDocument The COSDocument to use for stream creation.
 */
","* Create a fresh XRef stream like for a fresh file or an incremental update.
     * 
     * @param cosDocument the COSDocmernt to be used to create a new COSStream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,createStream,org.apache.pdfbox.pdmodel.common.PDObjectStream:createStream(org.apache.pdfbox.pdmodel.PDDocument),51,57,"/**
 * Creates a PDObjectStream from a COSStream within a PDDocument.
 * @param document The PDDocument containing the COSStream.
 * @return A PDObjectStream object.
 */
","* This will create a new PDObjectStream object.
     *
     * @param document The document that the stream will be part of.
     * @return A new stream object.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),61,64,"/**
 * Creates a new PDStream associated with the given document.
 * @param document The document to associate with this stream.
 */
","* Creates a new empty PDStream object.
     * 
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSDocument),71,74,"/**
 * Creates a PDStream using a COSDocument to hold stream data.
 */","* Creates a new empty PDStream object.
     *
     * @param document The document that the stream will be part of.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",131,138,"/**
 * Creates a PDStream from an input stream, applying filters.
 * @param doc The document.
 * @param input Input stream.
 * @param filters COS filters to apply.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied, if any. This method closes the InputStream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createRawStream,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",166,175,"/**
 * Creates a COSStream from an InputStream.
 * @param document PDDocument instance
 * @param rawInput Input stream to create stream from
 * @return COSStream object
 */
",* Creates a COS stream from raw (encoded) data.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createCOSStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createCOSStream(),106,109,"/**
* Returns a COSStream. Returns a new one if document is null.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,encode,"org.apache.pdfbox.filter.Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,112,"/**
* Delegates to overloaded method with only COSDictionary.
*/","* Encodes data.
     * @param input the byte stream to encode
     * @param encoded the stream where encoded data will be written
     * @param parameters the parameters used for encoding
     * @param index the index to the filter being encoded
     * @throws IOException if the stream cannot be encoded",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(),38,40,"/**
 * Default constructor for the PDDefaultAttributeObject class.
 */",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(),43,46,"/**
 * Initializes the PDUserAttributeObject with the OWNER_USER_PROPERTIES owner.
 */",* Default constructor,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(),44,46,"/**
 * Default constructor for PDStandardAttributeObject. Private.
 */
",* Default constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(),53,56,"/**
 * Default constructor for a PDOutlineItem, calls super().
 */",* Default Constructor.,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),47,50,"/**
 * Constructs a PDVariableText object, initializing with an AcroForm.
 */
","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDExportFormatAttributeObject from a COSDictionary.
 */","* Creates a new ExportFormat attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getAppearanceStream(),84,91,"/**
 * Creates a PDAppearanceStream from the current COS stream entry.
 * @return A PDAppearanceStream object.
 * @throws IllegalStateException if not an appearance stream.
 */","* Returns the entry as an appearance stream.
     *
     * @return the entry as an appearance stream
     * 
     * @throws IllegalStateException if this entry is not an appearance stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFont(java.io.File),675,700,"/**
 * Loads a font file, determines format (TTF/OTF), and parses headers.
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Creates a PDShadingType6 object from a COSDictionary.
 * @param shadingDictionary The shading dictionary to use.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Initializes a PDShadingType7 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Constructs a PDComboBox object.
 * @param acroForm The Acrobat form.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",49,52,"/**
 * Constructs a PDListBox object.
 * @param acroForm The AcroForm object.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,process,"org.apache.pdfbox.contentstream.operator.state.Save:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",39,43,"/**
* Executes a masked function with the given operator and arguments.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",165,169,"/**
* Constructs a COSParser with a keyStore and keyAlias.
* @param source Reader for COS data, password, keyStore, keyAlias
*/
","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     *
     * @throws IOException if the source data could not be read",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",91,95,"/**
 * Creates a PDF parser with provided configuration.
 * @param source Input stream, password, keystore, alias, cache function.
 */
","* Constructor.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException If something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(),158,161,"/**
 * Delegates OutputStream creation to the underlying stream.
 * @return An OutputStream object.
 */
","* This will get a stream that can be written to.
     * 
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStreamElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStreamElement(org.w3c.dom.Element),185,283,"/**
 * Parses a stream element and populates a COSStream object.
 * @param streamEl Element representing the stream to parse.
 * @return Populated COSStream object.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,createCOSStreamwithIccProfile,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:createCOSStreamwithIccProfile(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",409,461,"/**
 * Writes stream data to COSStream, adds iCCP profile if available.
 * @param document PDDocument object
 * @param colorSpace PDColorSpace object
 * @param state PNGConverterState object
 * @return COSStream object
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,writeToStream,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",875,881,"/**
 * Writes byte data to the appearance stream's output stream.
 * @param data The byte array to write.
 * @param appearanceStream The appearance stream to write to.
 */
","* Writes the stream to the actual stream in the COSStream.
     *
     * @throws IOException If there is an error writing to the stream",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,boolean)",58,61,"/**
 * Creates an AppearanceContentStream with a given stream.
 * @param appearance The appearance stream.
 * @param compress Whether to compress the stream.
 */
","* Create a new appearance stream.
     *
     * @param appearance The appearance stream to write to.
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @throws IOException If there is an error writing to the content stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets a matrix, ensuring text mode is active.
* @param matrix The matrix to set.
* @throws IllegalStateException if not in text mode.
*/
","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Concatenates a matrix to the current transformation, throws exception if in text mode.
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginText(),134,142,"/**
* Starts text mode, throwing exception if nested.
* Calls m1 with BEGIN_TEXT and sets inTextMode to true.
*/
","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDFormContentStream:beginText(),134,142,"/**
 * Starts text mode, throwing exception if nested.
 * Calls m1 with BEGIN_TEXT and sets inTextMode to true.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPageContentStream:beginText(),134,142,"/**
 * Starts text mode, throwing exception if nested calls exist.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginText(),134,142,"/**
 * Starts text mode, throws exception if nested calls are made.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endText(),151,159,"/**
 * Ends the text mode, ensuring beginText() was called first.
 * Throws IllegalStateException if beginText() wasn't called.
 */","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDFormContentStream:endText(),151,159,"/**
 * Ends the text mode, ensuring beginText() was called first.
 * Throws IllegalStateException if beginText() wasn't called.
 */","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPageContentStream:endText(),151,159,"/**
 * Ends the text mode, ensuring beginText() was called first.
 * Throws IllegalStateException if beginText() wasn't called.
 */","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPatternContentStream:endText(),151,159,"/**
 * Ends the text mode, ensuring beginText() was called first.
 * Throws IllegalStateException if beginText() wasn't called.
 */","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLeading(float),333,337,"/**
* Sets the leading value and calls m1 and m2.
* @param leading The leading value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDFormContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading leading value to set
* @throws IOException if an I/O error occurs
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPageContentStream:setLeading(float),333,337,"/**
* Sets the leading value and calls m1 and m2.
* @param leading The leading value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLeading(float),333,337,"/**
* Sets the text leading.
* @param leading The leading value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLine(),345,352,"/**
 * Writes a new line character to the output stream.
 * Throws exception if beginText() hasn't been called.
 */","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDFormContentStream:newLine(),345,352,"/**
 * Writes a newline character. Throws exception if not in text mode.
 */","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPageContentStream:newLine(),345,352,"/**
* Writes a new line character to the output stream.
* Throws IllegalStateException if beginText() wasn't called.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPatternContentStream:newLine(),345,352,"/**
 * Writes a new line character to the output.
 * Throws exception if beginText() hasn't been called.
 */","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves the text cursor to the specified (tx, ty) coordinates.
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDFormContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves the text cursor to the specified coordinates.
* @param tx x-coordinate of the new cursor position.
* @param ty y-coordinate of the new cursor position.
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPageContentStream:newLineAtOffset(float,float)",363,372,"/**
 * Moves the text cursor to the specified x, y coordinates.
 * @param tx x-coordinate of the new cursor position.
 * @param ty y-coordinate of the new cursor position.
 */
","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPatternContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves the text cursor to the specified coordinates.
* @param tx x-coordinate of the new cursor position.
* @param ty y-coordinate of the new cursor position.
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:saveGraphicsState(),589,609,"/**
* Saves the graphics state, throwing exception if in text mode.
* Saves state for fonts, stroking, and non-stroking colors.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:saveGraphicsState(),589,609,"/**
* Saves the graphics state if not in text mode.
* Throws exception if in text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state if not in text mode, restores color spaces.
* Saves a 'SAVE' operator to the graphics state stack.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:saveGraphicsState(),589,609,"/**
* Saves graphics state, throws exception if in text mode.
* Saves state on stacks if they are not already at the top.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, throwing exception if in text mode.
* Restores state from stacks, or pushes default values.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, throws exception if in text mode.
* Restores state from stacks, otherwise executes RESTORE operator.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, throwing exception if in text mode.
* Restores state from stacks, or pushes default values.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:restoreGraphicsState(),615,635,"/**
* Restores graphics state, throws exception if in text mode.
* Restores state from stacks, executes RESTORE operator.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float)",713,725,"/**
 * Sets the stroking color using RGB values.
 * @param r Red component (0..1)
 * @param g Green component (0..1)
 * @param b Blue component (0..1)
 */","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets color and device, throws exception if values are invalid.
* @param r Red color component (0..1)
* @param g Green color component (0..1)
* @param b Blue color component (0..1)
*/
","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets stroking color RGB. Throws exception if values are out of range.
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets color using RGB values, validating range (0..1).
* @param r Red color component
* @param g Green color component
* @param b Blue color component
*/
","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values, validating range (0..1).
* @param c, m, y, k CMYK color components.
* @throws IllegalArgumentException if values are out of range.
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values, validating range (0..1) and applying color transformations.
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values, validating input and applying color settings.
* @param c, m, y, k CMYK color components (0.0 to 1.0)
* @throws IllegalArgumentException if any value is out of range.
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets CMYK color values, validating range and applying color settings.
* @param c, m, y, k CMYK color components (0.0 to 1.0)
* @throws IllegalArgumentException if any value is out of range.
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value, validating its range and applying operations.
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value 'g', validates it, and applies color settings.
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value, validating it and invoking related methods.
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float),759,768,"/**
* Processes a float value 'g', validates it, and applies color settings.
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
 * Sets RGB color values, validating range (0..1) and processing them.
 */","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
 * Sets RGB color values, validating range (0..1) and applying color settings.
 */","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
 * Sets RGB values, validating they are within 0..1, and processes them.
 * @param r Red value (0.0-1.0)
 * @param g Green value (0.0-1.0)
 * @param b Blue value (0.0-1.0)
 */","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets RGB color values, validating range (0..1).
* Calls helper methods m3, m4, and m5 to apply color.
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values, validating input and applying transformations.
* @param c, m, y, k CMYK color components (0.0 to 1.0)
* @throws IllegalArgumentException if any value is out of range
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values, validating they are within 0..1.
* @param c, m, y, k CMYK color components (0.0 to 1.0)
* @throws IllegalArgumentException if any value is out of range
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
 * Sets CMYK color values, validating input (0..1) and applying them.
 * @param c, m, y, k CMYK color components.
 * @throws IllegalArgumentException if any value is outside 0..1.
 */","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets CMYK color values, validating input and applying color transforms.
* @param c, m, y, k CMYK color components (0.0 to 1.0)
* @throws IllegalArgumentException if any value is out of range.
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float),877,886,"/**
* Processes a float value, validating its range and invoking methods.
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float),877,886,"/**
 * Processes a float value 'g'. Throws exception if outside 0..1.
 */","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float),877,886,"/**
* Processes a float value 'g', validating it and invoking related methods.
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float),877,886,"/**
 * Processes a float value 'g'. Throws exception if invalid.
 * Calls m2, m3, and m4 after validation.
 */","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addRect(float,float,float,float)",898,909,"/**
 * Appends a rectangle to the graphics context.
 * Throws exception if in text mode.
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDFormContentStream:addRect(float,float,float,float)",898,909,"/**
 * Appends a rectangle to the graphics context.
 * Throws exception if in text mode.
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPageContentStream:addRect(float,float,float,float)",898,909,"/**
* Appends a rectangle to the graphics context.
* Throws exception if in text mode.
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPatternContentStream:addRect(float,float,float,float)",898,909,"/**
 * Appends a rectangle operation to the graphics context.
 * Throws exception if in text mode.
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a curve to the specified points.
 * @param x1, y1, x2, y2, x3, y3 coordinates of the curve.
 * @throws IOException if called in text mode.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a curve to the specified points.
 * @param x1, y1, x2, y2, x3, y3 coordinates of the curve.
 * @throws IllegalStateException if called in text mode.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a curve to the specified coordinates.
 * @param x1, y1, x2, y2, x3, y3 Coordinates defining the curve.
 * @throws IOException if in text mode.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a curve to the specified points.
 * @param x1, y1, x2, y2, x3, y3 coordinates of the curve.
 * @throws IOException if called in text mode.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a curve to a point, throws exception if in text mode.
 * @param x2, y2, x3, y3 Coordinates for the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a curve to a point, throws exception if in text mode.
 * @param x2, y2, x3, y3 Coordinates for the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a curve segment, throws exception in text mode.
 * @param x2, y2, x3, y3 coordinates for the curve segment.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a curve to a point, throws exception if in text mode.
 * @param x2, y2, x3, y3 Coordinates for the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a curve to a final point, throws exception in text mode.
 * @param x1, y1 Starting coordinates of the curve.
 * @param x3, y3 Final coordinates of the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a curve to the specified point, replicating the final point.
 * @param x1, y1 Starting coordinates of the curve.
 * @param x3, y3 Ending coordinates of the curve.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a curve to a final point, throws exception if in text mode.
 * @param x1, y1 Start point coordinates.
 * @param x3, y3 End point coordinates.
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a curve to a final point, throws exception if in text mode.
 * @param x1, y1 start point coordinates, x3, y3 final point coords
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:moveTo(float,float)",995,1004,"/**
* Moves the current point to (x, y) if not in text mode.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the current point to (x, y) if not in text mode.
 * @param x The x-coordinate.
 * @param y The y-coordinate.
 */
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:moveTo(float,float)",995,1004,"/**
* Moves the current point to (x, y) in binary mode.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:moveTo(float,float)",995,1004,"/**
* Moves the current point to (x, y) in binary mode.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x X-coordinate of the line endpoint.
 * @param y Y-coordinate of the line endpoint.
 */
","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x X coordinate of the line endpoint.
 * @param y Y coordinate of the line endpoint.
 */
","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x x-coordinate of the line end point
* @param y y-coordinate of the line end point
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x x-coordinate of the line endpoint.
 * @param y y-coordinate of the line endpoint.
 */
","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:stroke(),1031,1038,"/**
* Executes a stroke operation if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDFormContentStream:stroke(),1031,1038,"/**
 * Executes a stroke operation, throws exception if in text mode.
 */","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPageContentStream:stroke(),1031,1038,"/**
* Executes a stroke path operation if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:stroke(),1031,1038,"/**
* Executes a stroke path operation if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndStroke(),1046,1053,"/**
* Calls m1 with CLOSE_AND_STROKE operator if not in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndStroke(),1046,1053,"/**
* Calls m1 with OperatorName.CLOSE_AND_STROKE if not in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndStroke(),1046,1053,"/**
* Calls m1 with OperatorName.CLOSE_AND_STROKE if not in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndStroke(),1046,1053,"/**
* Calls m1 with OperatorName.CLOSE_AND_STROKE if not in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fill(),1061,1068,"/**
* Fills the buffer with non-zero values, throws exception if in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDFormContentStream:fill(),1061,1068,"/**
* Fills the buffer with the FILL_NON_ZERO operator if not in text mode.
* @throws IllegalStateException if called within a text block.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPageContentStream:fill(),1061,1068,"/**
* Fills the buffer with non-zero values, throws exception if in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPatternContentStream:fill(),1061,1068,"/**
* Fills the buffer with the FILL_NON_ZERO operator if not in text mode.
* @throws IllegalStateException if called within a text block.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd data. Throws exception if in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd data, throws exception if in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillEvenOdd(),1076,1083,"/**
* Calls m1 with FILL_EVEN_ODD operator if not in text mode.
* Throws IllegalStateException if in text mode.
*/
","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even/odd data. Throws exception if in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes the current path if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes if not in text mode.
* Throws IllegalStateException if in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes if not in text mode; otherwise, throws exception.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes if not in text mode, throws exception otherwise.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Calls m1 with FILL_EVEN_ODD_AND_STROKE, throws exception if in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Calls m1 with FILL_EVEN_ODD_AND_STROKE; throws exception if in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
 * Calls m1 with FILL_EVEN_ODD_AND_STROKE operator if not in text mode.
 */","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Calls m1 with FILL_EVEN_ODD_AND_STROKE, throws exception if in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStroke(),1127,1134,"/**
 * Executes close, fill, and stroke operation if not in text mode.
 * Throws IllegalStateException if in text mode.
 */","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Executes CLOSE_FILL_NON_ZERO_AND_STROKE op if not in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Executes close, fill, and stroke operation if not in text mode.
* Throws IllegalStateException if called within a text block.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Executes CLOSE_FILL_NON_ZERO_AND_STROKE operator if not in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Calls m1 with CLOSE_FILL_EVEN_ODD_AND_STROKE if not in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Calls m1 with CLOSE_FILL_EVEN_ODD_AND_STROKE, throws exception if in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Calls m1 with CLOSE_FILL_EVEN_ODD_AND_STROKE if not in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Calls m1 with CLOSE_FILL_EVEN_ODD_AND_STROKE if not in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closePath(),1177,1184,"/**
 * Closes the current path. Throws exception if in text mode.
 */","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDFormContentStream:closePath(),1177,1184,"/**
 * Closes the current path, throws exception if in text mode.
 */","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPageContentStream:closePath(),1177,1184,"/**
 * Closes the current path, throws exception if in text mode.
 */","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPatternContentStream:closePath(),1177,1184,"/**
 * Closes the current path. Throws exception if in text mode.
 */","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clip(),1192,1202,"/**
 * Draws a clip operation and ends the path. Throws exception if in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDFormContentStream:clip(),1192,1202,"/**
* Executes clip and endpath operators. Throws exception if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPageContentStream:clip(),1192,1202,"/**
* Executes CLIP_NON_ZERO and ENDPATH operators.
* Throws IllegalStateException if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPatternContentStream:clip(),1192,1202,"/**
* Executes clip and endpath operators, throws exception if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clipEvenOdd(),1210,1220,"/**
 * Executes clipEvenOdd and endPath operators.
 * Throws exception if called within a text block.
 */","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:clipEvenOdd(),1210,1220,"/**
 * Executes clipEvenOdd and endPath operators, throws exception if in text mode.
 */","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:clipEvenOdd(),1210,1220,"/**
 * Executes clipEvenOdd and endPath operators.
 * Throws exception if called within a text block.
 */","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:clipEvenOdd(),1210,1220,"/**
* Executes clipEvenOdd and endPath operators.
* Throws IllegalStateException if in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width using provided value.
* @param lineWidth The width of the line to set.
* @throws IOException if an I/O error occurs.
*/
","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width using provided value.
* @param lineWidth The width of the line to set.
* @throws IOException if an I/O error occurs.
*/
","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width using provided value.
* @param lineWidth The width of the line to set.
* @throws IOException if an I/O error occurs.
*/
","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width.
* @param lineWidth The width of the line to set.
* @throws IOException if an I/O error occurs.
*/
","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle Line join style (0-2). Throws IllegalArgumentException if invalid.
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineJoinStyle(int),1241,1252,"/**
 * Sets the line join style.
 * @param lineJoinStyle Line join style (0-2). Throws IllegalArgumentException if invalid.
 */","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineJoinStyle(int),1241,1252,"/**
 * Sets the line join style.
 * @param lineJoinStyle Line join style (0-2). Throws exception if invalid.
 */","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle Line join style (0-2).
* @throws IllegalArgumentException if lineJoinStyle is invalid.
*/
","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineCapStyle(int),1261,1272,"/**
 * Sets the line cap style if valid.
 * @param lineCapStyle Line cap style value (0-2).
 * @throws IllegalArgumentException if invalid style.
 */","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineCapStyle(int),1261,1272,"/**
 * Sets the line cap style.
 * @param lineCapStyle Line cap style value (0-2).
 * @throws IllegalArgumentException if lineCapStyle is invalid.
 */","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineCapStyle(int),1261,1272,"/**
 * Sets the line cap style.
 * @param lineCapStyle Line cap style value (0-2).
 * @throws IllegalArgumentException if lineCapStyle is invalid.
 */","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineCapStyle(int),1261,1272,"/**
 * Sets the line cap style.
 * @param lineCapStyle Line cap style (0-2). Throws IllegalArgumentException if invalid.
 */","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets the line dash pattern with a given pattern and phase.
 * @param pattern float array representing the dash pattern
 * @param phase float representing the phase offset
 */
","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDFormContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets the line dash pattern with a given pattern and phase.
 * @param pattern float array representing the dash pattern
 * @param phase float phase offset for the dash pattern
 */
","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPageContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets the line dash pattern with a given pattern and phase.
 * @param pattern float array representing the dash pattern
 * @param phase float value representing the phase offset
 */","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets the line dash pattern with a given pattern and phase.
* @param pattern float array representing the dash pattern
* @param phase float representing the phase offset
*/
","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the miter limit for line drawing.
* @param miterLimit The miter limit value; must be positive.
* @throws IllegalArgumentException if miterLimit is invalid.
*/
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDFormContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the miter limit for line drawing.
* @param miterLimit The miter limit value.
* @throws IllegalArgumentException if miterLimit <= 0.0
*/
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPageContentStream:setMiterLimit(float),1300,1308,"/**
 * Sets the miter limit for line drawing.
 * @param miterLimit The miter limit value.
 * @throws IllegalArgumentException if miterLimit is invalid.
 */
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMiterLimit(float),1300,1308,"/**
 * Sets the miter limit for line drawing.
 * @param miterLimit The miter limit value.
 * @throws IllegalArgumentException if miterLimit is invalid.
 */
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endMarkedContent(),1370,1373,"/**
* Calls m1 with OperatorName.END_MARKED_CONTENT.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:endMarkedContent(),1370,1373,"/**
* Calls m1 with OperatorName.END_MARKED_CONTENT.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:endMarkedContent(),1370,1373,"/**
* Marks content as ended by calling m1 with END_MARKED_CONTENT.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:endMarkedContent(),1370,1373,"/**
* Calls m1 with OperatorName.END_MARKED_CONTENT.
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing.
* @param spacing The spacing value to set.
* @throws IOException If an I/O error occurs.
*/
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing with given spacing value.
* @param spacing The spacing value to set.
* @throws IOException If an I/O error occurs.
*/
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing.
* @param spacing The spacing value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setHorizontalScaling(float),1635,1639,"/**
* Scales a value and sets a horizontal scaling operator.
* @param scale scaling factor; applies to an internal value.
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDFormContentStream:setHorizontalScaling(float),1635,1639,"/**
* Scales an element and sets horizontal scaling operator.
* @param scale Scaling factor; applies to the element.
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPageContentStream:setHorizontalScaling(float),1635,1639,"/**
* Scales an element and sets horizontal scaling operator.
* @param scale Scaling factor to apply.
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPatternContentStream:setHorizontalScaling(float),1635,1639,"/**
* Scales an element and sets horizontal scaling operator.
* @param scale Scaling factor; applies to element scaling.
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm RenderingMode object to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDFormContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets the text rendering mode.
* @param rm RenderingMode object to set
* @throws IOException if an I/O error occurs
*/
","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPageContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets the text rendering mode.
* @param rm RenderingMode object specifying the mode to set.
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPatternContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm RenderingMode object; sets the rendering mode.
* @throws IOException if an I/O error occurs.
*/
","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise and calls m1.
* @param rise the rise value to set
* @throws IOException if an I/O error occurs
*/
","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise and calls m1 with the given rise value.
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise and calls m1 with the given rise value.
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise and calls m1 with the given rise value.
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getObjectOffset,"org.apache.pdfbox.pdfparser.COSParser:getObjectOffset(org.apache.pdfbox.cos.COSObjectKey,boolean)",498,523,"/**
* Gets object offset or number. Throws IOException if object is missing/compressed.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:checkXrefOffsets(),448,462,"/**
 * Resolves xref offsets, falling back to brute force if needed.
 */","* Check the XRef table by dereferencing all objects and fixing the offset if necessary.
     * 
     * @throws IOException if something went wrong.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.File),174,180,"/**
 * Writes to a FileOutputStream.
 * @param fileName The file to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setHighValue,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setHighValue(int),322,325,"/**
* Calls array.m1 with arguments 2 and the provided high value.
*/","* Sets the highest value that is allowed. This cannot be higher than 255.
     * @param high the highest value for the lookup table",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPageNumber(int),166,169,"/**
* Calls m1 on the array with the given page number.
* @param pageNumber The page number to pass to m1.
*/","* Set the page number for a remote destination. For an internal destination, call 
     * {@link #setPage(PDPage) setPage(PDPage page)}.
     *
     * @param pageNumber The page for a remote destination.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(java.lang.Object),217,237,"/**
 * Removes an element from the list.
 * @param o element to remove
 * @return true if removed, false otherwise
 */
",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(int),520,529,"/**
 * Retrieves the element at the specified index.
 * @param index the index of the element to retrieve
 * @return the element at the given index
 */
",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,clear,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:clear(),136,141,"/**
 * Delegates m1() call to map and actuals.
 */",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,remove,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:remove(java.lang.Object),117,122,"/**
* Retrieves a value by key.
* @param key The key to search for.
* @return The associated value or null if not found.
*/",* {@inheritDoc},,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSArray),166,184,"/**
 * Recursively checks array elements for update requirements.
 * @param array COSArray to check; returns if parent needs update.
 */","* Collect all updates made to the given {@link COSArray} and it's contained structures.
     *
     * @param array The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSArray}´s elements changed. A {@link COSArray} shall always be
     * treated as a direct structure, that would require it´s parent to be updated instead.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState),82,85,"/**
 * Calls m1 with the provided state and a default flag.
 * @param originDocumentState The initial document state.
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see #updated",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,dereferenceChild,org.apache.pdfbox.cos.COSUpdateState:dereferenceChild(org.apache.pdfbox.cos.COSBase),324,330,"/**
 * Processes COSUpdateInfo if encountered; updates document state.
 */","* This shall {@link #setOriginDocumentState(COSDocumentState, boolean)} for the dereferenced child,
     * initializing its {@link #originDocumentState}.
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo} and will never change
     * the child´s {@link #updated} state.
     * </p>
     *
     * @param child The child, that has been dereferenced.
     * @see #setOriginDocumentState(COSDocumentState, boolean)",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValueAsString(),223,227,"/**
* Delegates to the m1() method and returns its result.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRow,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRow(),307,372,"/**
 * Decodes a row based on the compression type.
 * Throws IllegalArgumentException for unsupported types.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRow,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRow(),99,127,"/**
* Detects changes in a row, updates change tracking arrays, and calls m1, m2, m3.
*/",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",608,617,"/**
 * Checks password and permissions.
 * @param ownerPassword Owner's password.
 * @return True if password and permissions match.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a TensorPatch from the given points and color data.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,parse,"org.apache.pdfbox.pdmodel.common.function.type4.Parser:parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",44,48,"/**
 * Tokenizes the input sequence using the provided syntax handler.
 */","* Parses a Type 4 function and sends the syntactic elements to the given
     * syntax handler.
     * @param input the text source
     * @param handler the syntax handler",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptData,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",216,238,"/**
 * Processes data stream with encryption/decryption based on flags.
 * @param objectNumber Object number used for key generation.
 * @param genNumber Generation number for key generation.
 */","* Encrypt or decrypt a set of data.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKey,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)",722,735,"/**
 * Encrypts data based on revision. Uses m1 or m2 based on encRevision.
 */","* Compute the encryption key.
     *
     * @param password The password to compute the encrypted key.
     * @param o The O entry of the encryption dictionary.
     * @param u The U entry of the encryption dictionary.
     * @param oe The OE entry of the encryption dictionary.
     * @param ue The UE entry of the encryption dictionary.
     * @param permissions The permissions for the document.
     * @param id The document id.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     * @param isOwnerPassword whether the password given is the owner password (for revision 6)
     *
     * @return The encrypted key bytes.
     *
     * @throws IOException If there is an error with encryption.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",1002,1019,"/**
 * Encrypts data based on the encryption revision.
 * @param revision Encryption revision to use.
 */","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata.
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",399,464,"/**
 * Retrieves a FontBoxFont based on format and postScriptName.
 * Returns null if no matching font is found.
 */","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a CoonsPatch from the given points and color data.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalize,org.apache.pdfbox.text.PDFTextStripper:normalize(java.util.List),1878,1894,"/**
 * Normalizes line items into word positions.
 * @param line List of LineItem objects to normalize.
 * @return List of WordWithTextPositions.
 */
","* Normalize the given list of TextPositions.
     * 
     * @param line list of TextPositions
     * @return a list of strings, one string for every word",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(org.apache.pdfbox.cos.COSString),701,708,"/**
 * Converts a COSString to a Calendar object.
 * @param text The COSString to convert; null if empty.
 * @return A Calendar object or null if the input is null.
 */","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Marks content with a tag.
* @param tag COSName identifying the tag.
* @throws IOException if an I/O error occurs.
*/
","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Marks content with a tag.
* @param tag COSName identifying the tag
* @throws IOException if an I/O error occurs
*/
","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Marks content with a tag, initiating a marked content sequence.
* @param tag COSName representing the tag to apply.
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Marks the start of marked content using the provided tag.
* @param tag COSName representing the tag for marked content.
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Writes a marked content sequence header with tag and mcid.
 * @param tag COSName tag for the sequence.
 * @param mcid Integer ID of the marked content sequence.
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Writes a marked content sequence with tag and mcid.
 * @param tag COSName tag for the sequence.
 * @param mcid Integer ID of the marked content.
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Writes marked content sequence header with tag and mcid.
 * @param tag COSName tag value
 * @param mcid Integer marking content ID
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Writes a marked content sequence header with tag and mcid.
 * @param tag COSName tag for the sequence.
 * @param mcid Integer mcid for the sequence.
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Processes a tag by calling m1 and m2.
* @param tag COSName representing the tag to process.
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
 * Processes a tag by calling m1 and m2.
 * @param tag COSName representing the tag to process.
 */","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
 * Processes a tag, calling m1 and setting a marked content point.
 * @param tag COSName representing the tag to process.
 */","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Processes a tag by calling m1 and m2.
* @param tag COSName representing the tag to process.
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.cos.COSBase),160,222,"/**
 * Recursively writes a COSBase object to the output stream.
 * Handles various COS types and writes them accordingly.
 */",,,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSString,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSString(java.io.OutputStream,org.apache.pdfbox.cos.COSString)",258,262,"/**
* Writes a COSString to the OutputStream, followed by a space.
* @param output Output stream to write to.
* @param cosString COS string to write.
*/","* Write the given {@link COSString} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosString The content, that shall be written.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextInternal,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextInternal(java.lang.String),276,325,"/**
 * Writes text to the output stream, handling font encoding.
 * @param text The text string to write.
 */","* Outputs a string using the correct encoding and subsetting as required.
     *
     * @param text The Unicode text to show.
     * 
     * @throws IOException If an io exception occurs.",,,True,6
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,org.apache.pdfbox.rendering.PageDrawer:<init>(org.apache.pdfbox.rendering.PageDrawerParameters),190,199,"/**
 * Constructs a PageDrawer with provided parameters.
 * @param parameters PageDrawerParameters object containing configuration.
 */
","* Constructor.
     *
     * @param parameters Parameters for page drawing.
     * @throws IOException If there is an error loading properties from the file.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSString(),528,679,"/**
 * Parses a COS string from the input source.
 * Handles escaped characters and octal representations.
 * @return COSString object representing the parsed string.
 */","* This will parse a PDF string.
     *
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:<init>(float,float)",31,34,"/**
 * Creates a new immutable rectangle with the given width and height.
 */","* Constructor for immutable rectangle.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getBBox,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getBBox(),153,156,"/**
* Returns the masked rectangle, obtained by calling m1().
*/","* Returns the <code>BBox</code> entry (bounding box) for the
     * appearance stream form XObject.
     *
     * @return Bounding box for appearance stream form XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument),43,48,"/**
 * Creates a Metadata object for a PDF document.
 * Sets the type and subtype of the metadata COS object.
 */
","* This will create a new PDMetadata object with the /Type and /Subtype entries for a document
     * level metadata object.
     *
     * @param document The document that the stream will be part of.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument),40,44,"/**
 * Creates a PDEmbeddedFile object from a PDDocument.
 * Sets the type to EMBEDDED_FILE in the COS object.
 */
",* {@inheritDoc},,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",125,130,"/**
 * Constructs a PDXObject with a document and subtype.
 * @param document The document this object belongs to.
 * @param subtype The subtype of the XObject.
 */
","* Creates a new XObject of the given subtype for writing.
     * @param document The document in which to create the XObject.
     * @param subtype The subtype of the new XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,102,"/**
 * Constructs a PDImageXObject with a document and default properties.
 */","* Creates an Image XObject in the given document. This constructor is for internal PDFBox use
     * and is not for PDF generation. Users who want to create images should look at {@link #createFromFileByExtension(File, PDDocument)
     * }.
     *
     * @param document the current document",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument),205,211,"/**
* Creates a holder form stream from a PDDocument and processes it.
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument),251,258,"/**
 * Creates and processes an inner form stream from a template.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument),290,296,"/**
 * Creates an image form stream from a PDDocument.
 * @param template The PDDocument to create the stream from.
 */
",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",94,97,"/**
 * Creates a PDStream object from an input stream.
 * @param doc The parent document.
 * @param input Input stream containing the stream data.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document. This
     * method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",108,111,"/**
 * Constructs a PDStream with a COSBase filter.
 * @param doc The parent document.
 * @param input Input stream for the stream data.
 * @param filter Filter for the stream.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filter applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filter Filter to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)",122,125,"/**
 * Constructs a PDStream with filters cast to COSArray.
 * @param doc The document.
 * @param input The input stream.
 * @param filters Filters for the stream.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filters Filters to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",118,130,"/**
 * Creates a PDImageXObject from an input stream.
 * @param document PDDocument, stream, filter, width, height, bits, colorSpace
 */
","* Creates an Image XObject in the given document using the given filtered stream. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param document the current document
     * @param encodedStream an encoded stream of image data
     * @param cosFilter the filter or a COSArray of filters
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @throws IOException if there is an error creating the XObject.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,close,org.apache.pdfbox.cos.COSOutputStream:close(),104,153,"/**
* Processes filters on buffer data, applying them sequentially.
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(),355,358,"/**
 * Constructs a PDLayoutAttributeObject, setting its owner.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(),78,81,"/**
 * Initializes the attribute object, setting its owner to OWNER_LIST.
 */
",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(),71,74,"/**
 * Constructs a PDPrintFieldAttributeObject, setting its owner.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(),57,60,"/**
 * Default constructor. Sets the owner to OWNER_TABLE.
 */",* Default constructor.,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isValidAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),297,313,"/**
 * Checks if appearance entry is valid and has positive dimensions.
 * @param appearance PDAppearanceEntry to validate
 * @return True if valid, false otherwise.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,scanFonts,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:scanFonts(java.util.List),365,386,"/**
 * Processes a list of files, handling different font file types.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead),150,153,"/**
 * Constructs a COSParser with a source, using default settings.
 * @param source Source to read COS data from.
 * @throws IOException If an I/O error occurs.
 */
","* Default constructor.
     *
     * @param source input representing the pdf.
     * 
     * @throws IOException if something went wrong",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",74,78,"/**
 * Constructs a PDFParser with a keyStore and alias.
 * @param source Input stream for PDF data.
 * @param decryptionPassword Password for decryption.
 * @param keyStore KeyStore object.
 * @param alias KeyStore alias.
 */
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security 
     * @param alias alias to be used for decryption when using public key security
     *
     * @throws IOException If something went wrong.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),45,48,"/**
 * Creates an AppearanceContentStream from an Appearance stream.
 * @param appearance The Appearance stream to use.
 */
","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to write to.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDFormContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),35,38,"/**
* Creates a PDFormContentStream from a PDFormXObject.
* @param form The form XObject to use.
*/
","* Create a new form XObject content stream.
     *
     * @param form The form XObject stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",209,212,"/**
* Creates a content stream with a given appearance stream.
* @param doc The document.
* @param appearance The appearance stream.
*/
","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the page is part of.
     * @param appearance The appearance stream to write to.
     * @throws IOException If there is an error writing to the page contents.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectAppearanceStreams,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",354,374,"/**
 * Injects appearance streams to the PDF, using provided streams and names.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the matrix using the provided matrix object.
* Throws exception if beginText() hasn't been called.
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets a matrix, ensuring text mode is active.
* @param matrix The matrix to set.
* @throws IllegalStateException if not in text mode.
*/
","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets a matrix, ensuring text mode is active.
* @param matrix The Matrix object to set.
* @throws IllegalStateException if not in text mode.
*/
","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets a matrix, ensuring text mode is active.
* @param matrix The matrix to set.
* @throws IllegalStateException if not in text mode.
*/
","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Concatenates a matrix to the current transformation, throws exception if in text mode.
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDFormContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Concatenates a matrix to the current transformation, throws exception if in text mode.
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPageContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Concatenates a matrix to the current transformation matrix.
* Throws exception if in text mode.
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPatternContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Concatenates a matrix to the current transformation matrix.
* Throws exception if in text mode.
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,curveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:curveTo(double,double,double,double,double,double)",1067,1074,"/**
 * Writes coordinates to the output stream.
 * @param ax,ay,bx,by,cx,cy Coordinates to be written.
 * @throws IOException if an I/O error occurs.
 */
",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",357,368,"/**
 * Draws an arrow shape using the content stream.
 * @param cs Content stream to draw on. x, y: start point, len: arrow length.
 */","* Add the two arms of a horizontal arrow.
     * 
     * @param cs Content stream
     * @param x
     * @param y
     * @param len The arm length. Positive goes to the right, negative goes to the left.
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawShape,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawShape(float,boolean,boolean)",262,288,"/**
 * Draws a shape based on line width, stroke, and fill flags.
 */","* Draw a shape.
     *
     * <p>
     * Dependent on the lineWidth and whether or not there is a background to be generated there are
     * different commands to be used for draw a shape.
     *
     * @param lineWidth the line width of the path.
     * @param hasStroke shall there be a stroking color.
     * @param hasFill shall there be a fill color.
     * @throws IOException If there is an error writing to the content stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,finish,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:finish(),1076,1091,"/**
* Adjusts output and bounding box based on flags.
* Adjusts bbox if lineWidth > 0, outputs if started.
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawDiamond,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",380,387,"/**
 * Draws a rectangle with center (x, y) and radius r.
 * Uses the provided content stream for drawing.
 */","* Add a square diamond shape (corner on top) to the path.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius (to a corner)
     * 
     * @throws IOException If the content stream could not be written",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",399,409,"/**
* Draws a rounded rectangle using content stream commands.
* @param cs Content stream to draw on, x, y - corner coords, r - radius.
*/","* Add a circle shape to the path in clockwise direction.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     * 
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle2,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",422,432,"/**
* Draws a rounded rectangle using content stream commands.
* @param cs Content stream to draw to.
* @param x X coordinate of the rectangle.
* @param y Y coordinate of the rectangle.
* @param r Radius of the rounded corners.
*/","* Add a circle shape to the path in counterclockwise direction. You'll need this e.g. when
     * drawing a doughnut shape. See ""Nonzero Winding Number Rule"" for more information.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     *
     * @throws IOException If the content stream could not be written.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPaperclip,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPaperclip(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),100,130,"/**
 * Applies a series of content stream operations.
 * Uses methods m1, m2, m3, m4, and m5 on contentStream.
 */","* Draw a paperclip. Shape is from
     * <a href=""https://raw.githubusercontent.com/Iconscout/unicons/master/svg/line/paperclip.svg"">Iconscout</a>
     * (Apache licensed).
     *
     * @param contentStream
     * @throws IOException",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,addPath,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",617,667,"/**
* Writes a GeneralPath to a PDF appearance content stream.
* Uses PathIterator to iterate and write path segments.
*/",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidthOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidthOnDemand(float),239,248,"/**
 * Draws a line if lineWidth is greater than or equal to 1.
 * @param lineWidth Width of the line to draw.
 */
","* Sets the line width. The command is only emitted if the lineWidth is
     * different to 1.
     * 
     * @param lineWidth the line width of the path.
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setLineWidth(float)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,beginOutput,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:beginOutput(double,double)",1010,1019,"/**
* Initializes bounding box with given coordinates and starts output.
* @param x Minimum X coordinate.
* @param y Minimum Y coordinate.
*/
",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.lang.String),189,192,"/**
 * Overloads m1 to accept a filename string.
 * @param fileName The name of the file to process.
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSBase),83,103,"/**
 * Recursively checks COSBase objects. Returns false if m1(base) is true.
 */","* Collect all updates made to the given {@link COSBase} and it's contained structures.<br>
     * This shall forward all {@link COSUpdateInfo} objects to the proper specialized collection methods.
     *
     * @param base The {@link COSBase} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSBase} represents a direct child structure, that would require it´s
     * parent to be updated instead.
     * @see #collect(COSDictionary)
     * @see #collect(COSArray)
     * @see #collect(COSObject)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setTrailer,org.apache.pdfbox.cos.COSDocument:setTrailer(org.apache.pdfbox.cos.COSDictionary),395,399,"/**
* Sets the trailer dictionary and updates its document state.
* @param newTrailer The new COSDictionary to set as the trailer.
*/
","* // MIT added, maybe this should not be supported as trailer is a persistence construct.
     * This will set the document trailer.
     *
     * @param newTrailer the document trailer dictionary",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSBase),255,262,"/**
 * Processes a COSBase child, updating state if it's a COSUpdateInfo.
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given child, initializing it´s {@link #updated} state
     * and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param child The child that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(java.lang.Iterable),297,311,"/**
* Processes COSBase children, updating if COSUpdateInfo.
* @param children Iterable of COSBase objects to process.
*/
","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,getObject,org.apache.pdfbox.cos.COSObject:getObject(),109,130,"/**
 * Dereferences the object and returns the base object.
 * Sets isDereferenced to true and cleans up the parser.
 */","* This will get the object that this object encapsulates.
     *
     * @return The encapsulated object.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fetch,org.apache.pdfbox.filter.CCITTFaxDecoderStream:fetch(),126,150,"/**
 * Resets decoding state if end of stream is reached.
 * Throws IOException on malformed stream or EOF.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int),78,87,"/**
 * Adds a byte to the input buffer. Flushes buffer when full.
 */",,,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",589,606,"/**
* Processes encryption based on revision.
* @param encRevision Encryption revision to use.
* @return True if successful, false otherwise.
*/","* Check for owner password.
     *
     * @param ownerPassword The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parse,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parse(java.lang.CharSequence),55,60,"/**
 * Parses CharSequence into an InstructionSequence.
 * @param text Input text to parse.
 * @return InstructionSequence built from the text.
 */","* Parses the given text into an instruction sequence representing a Type 4 function
     * that can be executed.
     * @param text the Type 4 function text
     * @return the instruction sequence",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",566,583,"/**
 * Processes a COS stream, decrypting and writing data.
 * @param stream COSStream to process
 * @param objNum Object number
 * @param genNum Generation number
 */","* This will encrypt a stream, but not the dictionary as the dictionary is
     * encrypted by visitFromString() in COSWriter and we don't want to encrypt
     * it twice.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptString(org.apache.pdfbox.cos.COSString,long,long)",632,653,"/**
* Decrypts a COSString using provided object number and generation number.
* Returns the decrypted string or the original if decryption fails.
*/","* This will decrypt a string.
     *
     * @param string the string to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     * 
     * @return the decrypted COSString",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptString(org.apache.pdfbox.cos.COSString,long,int)",666,672,"/**
 * Creates a COSString from input string data with object number and generation number.
 */","* This will encrypt a string.
     *
     * @param string the string to encrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @return the encrypted COSString
     * 
     * @throws IOException If an error occurs writing the new string.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1075,1089,"/**
 * Recursively calls m2 with different password encodings.
 * @param password Password to decrypt.
 * @return True if decryption successful, false otherwise.
 */","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFontBoxFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFontBoxFont(java.lang.String),371,392,"/**
 * Retrieves a FontBoxFont by postscript name.
 * @param postScriptName Font's postscript name.
 * @return FontBoxFont or null if not found.
 */
","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePage,org.apache.pdfbox.text.PDFTextStripper:writePage(),495,728,"/**
 * Processes text positions, calculating layout and spacing.
 * Handles sorting, line breaks, and updates layout metrics.
 */","* This will print the text of the processed page to ""output"". It will estimate, based on the coordinates of the
     * text, where newlines and word spacings should be placed. The text will be sorted only if that feature was
     * enabled.
     *
     * @throws IOException If there is an error writing the text.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.cos.COSBase),70,73,"/**
* Calls m1 with the given COSBase object.
* @param base The COSBase object to pass to m1.
*/
","* Writes a single operand token.
     *
     * @param base The operand to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of strings and floats, invoking specific methods.
 * @param textWithPositioningArray Array of strings and floats.
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showText(java.lang.String),262,267,"/**
* Executes a sequence of operations on the given text.
* @param text The text to be processed.
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,7
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createPageDrawer,org.apache.pdfbox.rendering.PDFRenderer:createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters),526,531,"/**
 * Creates and configures a PageDrawer with given parameters.
 * @param parameters PageDrawerParameters object
 * @return Configured PageDrawer instance
 */
","* Returns a new PageDrawer instance, using the given parameters. May be overridden.
     * 
     * @param parameters parameters to be used when creating the PageDrawer instance
     * @return a new PageDrawer instance
     * 
     * @throws IOException id the PageDrawer instance could not be created",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,103,"/**
 * Creates a PDFormXObject associated with the given document.
 * @param document The document this object belongs to.
 */
","* Creates a Form Image XObject for writing, in the given document.
     * @param document The current document",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,"org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",59,64,"/**
 * Creates a Metadata object for a PDF document from an input stream.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document, this will
     * close the InputStream. The /Type and /Subtype entries for a document level metadata object
     * will be created.
     *
     * @param doc The document that will hold the stream.
     * @param str The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",57,61,"/**
 * Creates an embedded file object from a document and input stream.
 */",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",66,70,"/**
 * Creates an embedded file object from a document, input stream, and filter.
 */",* {@inheritDoc},,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,configureOutputProfile,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",108,115,"/**
 * Creates a PDStream from an ICC profile.
 * @param doc PDDocument, the document to add the stream to
 * @param colorProfile ICC profile as an InputStream
 * @return PDStream containing the ICC profile data
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createJPEG,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",305,328,"/**
* Creates a PDF image object with mask from a BufferedImage.
* @param document PDF document, image, quality, dpi
* @return PDImageXObject with mask or null if error occurs
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",243,256,"/**
 * Creates a PDImageXObject from a byte array, width, height, bits, and color space.
 */","* Create a PDImageXObject using the Flate filter.
     * 
     * @param document The document.
     * @param byteArray array with data.
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @return the newly created PDImageXObject with the data compressed.
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(java.lang.String),64,67,"/**
 * Initializes a PDExportFormatAttributeObject with the given owner.
 * @param owner The owner of the attribute object.
 */
","* Default constructor.
     * 
     * @param owner the owner of the attributes",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<init>(org.apache.pdfbox.pdmodel.font.FontCache),323,363,"/**
 * Initializes the font provider, scanning and caching fonts.
 * @param cache The FontCache instance to use for caching.
 */
",* Constructor.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,<init>,org.apache.pdfbox.pdfparser.FDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),36,39,"/**
 * Creates a FDF parser using the provided RandomAccessRead source.
 */","* Constructs parser for given file using memory buffer.
     * 
     * @param source the source of the pdf to be parsed
     * 
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",58,61,"/**
 * Constructs a PDF parser with a source and optional password.
 * @param source Input stream for PDF data.
 * @param decryptionPassword Password for decryption, if needed.
 */
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @throws IOException If something went wrong.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPushPin,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPushPin(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),132,183,"/**
 * Applies a sequence of transformations to the content stream.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawGraph,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawGraph(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),185,271,"/**
 * Applies a sequence of transformations to the content stream.
 * This method modifies the appearance content stream.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawTag,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawTag(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),273,323,"/**
 * Applies a series of transformations to the content stream.
 * Details the visual rendering of the content.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawStyle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",298,345,"/**
* Draws a line appearance based on the given style.
* @param style Line style (e.g., arrow, butt, square).
*/","* Draw a line ending style.
     * 
     * @param style
     * @param cs
     * @param x
     * @param y
     * @param width
     * @param hasStroke
     * @param hasBackground
     * @param ending false if left, true if right of an imagined horizontal line (important for
     * arrows).
     *
     * @throws IOException",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(double,double)",1034,1046,"/**
 * Executes m1 or m2 based on outputStarted, then writes to output.
 * @param x double value
 * @param y double value
 */
",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(double,double)",1053,1065,"/**
 * Calls m1 or m2 based on outputStarted, then writes to output.
 * @param x The first double value.
 * @param y The second double value.
 */
",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSDictionary),112,157,"/**
 * Processes a COSDictionary and its entries, updating as needed.
 * Returns true if parent update is needed, otherwise false.
 */","* Collect all updates made to the given {@link COSDictionary} and it's contained structures.
     *
     * @param dictionary The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSDictionary} represents a direct child structure, that would
     * require it´s parent to be updated instead.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,getObjects,org.apache.pdfbox.cos.COSIncrement:getObjects(),337,345,"/**
 * Returns the set of COS objects. Initializes if needed.
 */","* Returns all indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.<br>
     * Calling this method will cause the increment to be initialized.
     *
     * @return All indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.
     * @see #objects",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.cos.COSBase),83,97,"/**
 * Processes a COSBase object, handling specific conditions.
 * Processes object, calls m3 and m5 on related objects.
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,"org.apache.pdfbox.cos.COSArray:add(int,org.apache.pdfbox.cos.COSBase)",121,135,"/**
 * Processes a COSBase object, handling dictionary/array types.
 * @param i Index; processes object based on type and conditions.
 */","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param object The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.cos.COSBase)",220,234,"/**
 * Adds an object to the objects list, handling dictionary/array types.
 * @param index Insertion index.
 * @param object COSBase object to add.
 */","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",198,219,"/**
* Adds a key-value pair to the items, handling null values.
* @param key COSName key to add.
* @param value COSBase value to associate with the key.
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(java.util.Collection),175,181,"/**
 * Processes a list of COSBase objects.
 * Delegates to objects and calls m3 if successful.
 */","* This will add an object to the array.
     *
     * @param objectsList The object to add to the array.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,"org.apache.pdfbox.cos.COSArray:addAll(int,java.util.Collection)",206,212,"/**
* Processes objectList based on 'i'. Calls m2().m3() if objects.m1() returns true.
*/","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param objectList The object to add at that index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSArray),278,281,"/**
 * Calls m1 with the children as an Iterable of COSBase.
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getObject,org.apache.pdfbox.cos.COSArray:getObject(int),272,284,"/**
 * Retrieves a COSBase object at the given index, unwrapping if needed.
 * @param index Index of the COSBase object to retrieve.
 * @return COSBase object or null if not found or is COSNull.
 */
","* This will get an object from the array.  This will dereference the object.
     * If the object is COSNull then null will be returned.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeObject,org.apache.pdfbox.cos.COSArray:removeObject(org.apache.pdfbox.cos.COSBase),492,511,"/**
 * Checks if COSBase object 'o' is removable, recursing if needed.
 * @param o The COSBase object to check for removability.
 * @return True if 'o' or a nested object is removable.
 */","* This will remove an element from the array.
     * This method will also remove a reference to the object.
     *
     * @param o The object to remove.
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOfObject,org.apache.pdfbox.cos.COSArray:indexOfObject(org.apache.pdfbox.cos.COSBase),566,589,"/**
 * Finds the index of a COSBase object within the collection.
 * @param object COSBase to search for, returns index or -1 if not found.
 */","* This will return the index of the entry or -1 if it is not found.
     * This method will also find references to indirect objects.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsValue,org.apache.pdfbox.cos.COSDictionary:containsValue(java.lang.Object),86,94,"/**
 * Checks if items contain the given value or its nested value.
 */","* @see java.util.Map#containsValue(java.lang.Object)
     *
     * @param value The value to find in the map.
     *
     * @return true if the map contains this value.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getKeyForValue,org.apache.pdfbox.cos.COSDictionary:getKeyForValue(java.lang.Object),102,115,"/**
 * Finds COSName based on value equality.
 * @param value Value to search for.
 * @return Matching COSName or null if not found.
 */","* Search in the map for the value that matches the parameter and return the first key that maps to that value.
     *
     * @param value The value to search for in the map.
     * @return The key for the value in the map or null if it does not exist.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName),178,190,"/**
 * Retrieves a COSBase object by key, unwrapping COSObjects and nulling COSNulls.
 * @param key The key to retrieve the COSBase object by.
 * @return The COSBase object or null if it's a COSNull.
 */
","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryString,"org.apache.pdfbox.cos.COSDictionary:getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",1357,1412,"/**
 * Recursively converts a COSBase object to a string representation.
 * @param base The COSBase object to convert.
 * @param objs List of COSBase objects, used for processing.
 * @return String representation of the COSBase object.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSDictionary:getIndirectObjectKeys(java.util.Collection),1435,1485,"/**
 * Processes COS objects, adding keys to a collection if needed.
 * @param indirectObjects Collection of COSObjectKeys to check.
 */","* Collects all indirect objects numbers within this dictionary and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getLinearizedDictionary,org.apache.pdfbox.cos.COSDocument:getLinearizedDictionary(),207,230,"/**
* Finds a COSDictionary with the LINEARIZED key from xref table.
* Returns the dictionary or null if not found.
*/","* Get the dictionary containing the linearization information if the pdf is linearized.
     * 
     * @return the dictionary containing the linearization information",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,close,org.apache.pdfbox.cos.COSDocument:close(),440,486,"/**
* Processes COS objects and streams, throwing an IOException if any fail.
*/","* This will close all storage and delete the tmp files.
     *
     * @throws IOException If there is an error close resources.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSObject),193,231,"/**
 * Processes a COSObject, updating state and checking dependencies.
 */","* Collect all updates made to the given {@link COSObject} and it's contained structures.
     *
     * @param object The {@link COSObject} updates shall be collected for.
     * @return Always returns {@code false}. {@link COSObject}s by definition are indirect and shall never cause a
     * parent structure to be updated.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,accept,org.apache.pdfbox.cos.COSObject:accept(org.apache.pdfbox.cos.ICOSVisitor),160,172,"/**
 * Processes a COSBase object using the provided visitor.
 * Handles null objects by visiting COSNull.NULL.
 */","* visitor pattern double dispatch method.
     *
     * @param visitor The object to notify when visiting this object.
     * @throws IOException If an error occurs while visiting this object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createContentStreamList,org.apache.pdfbox.multipdf.Overlay:createContentStreamList(org.apache.pdfbox.cos.COSBase),360,388,"/**
* Extracts COSStream objects from a COSBase object recursively.
* @param contents The base object to extract streams from.
* @return A list of COSStream objects.
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,hasSelfReference,"org.apache.pdfbox.multipdf.PDFCloneUtility:hasSelfReference(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",244,258,"/**
 * Checks if a COSBase object references its parent.
 * @param parent The parent COSBase object.
 * @param value The COSBase object to check.
 * @return True if value references parent, false otherwise.
 */","* Check whether an element (of an array or a dictionary) points to its parent.
     *
     * @param parent COSArray or COSDictionary
     * @param value an element",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getLength,org.apache.pdfbox.pdfparser.COSParser:getLength(org.apache.pdfbox.cos.COSBase),663,697,"/**
* Extracts COSNumber from a COSBase object, or returns null.
* @param lengthBaseObj COSBase object containing length information.
* @return COSNumber object or null if not found/invalid.
*/",* Returns length value referred to or defined in given object.,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.NormalXReference:<init>(long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",47,62,"/**
 * Creates a NormalXReference with offset, key, and COS object.
 * @param byteOffset Byte offset of the object.
 * @param key COSObjectKey identifying the object.
 * @param object COSBase object being referenced.
 */
","* Prepares a normal reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param byteOffset The byte offset of the {@link COSObject} in the PDF file.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,prepareIncrement,org.apache.pdfbox.pdfwriter.COSWriter:prepareIncrement(),319,338,"/**
* Processes COS objects, associating keys and objects.
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addObjectToWrite,org.apache.pdfbox.pdfwriter.COSWriter:addObjectToWrite(org.apache.pdfbox.cos.COSBase),535,573,"/**
* Adds a COSBase object to the write queue, skipping if already present.
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getObjectKey,org.apache.pdfbox.pdfwriter.COSWriter:getObjectKey(org.apache.pdfbox.cos.COSBase),1067,1106,"/**
 * Retrieves or generates a COSObjectKey for the given COSBase.
 * @param obj The COSBase object to get/generate a key for.
 * @return The COSObjectKey.
 */
","* This will get the object key for the object.
     *
     * @param obj The object to get the key for.
     *
     * @return The object key for the object.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getKey(org.apache.pdfbox.cos.COSBase),93,105,"/**
 * Retrieves a COSObjectKey from the object pool.
 * Uses object's m1() if it's a COSObject, otherwise uses object.
 */","* Returns the {@link COSObjectKey} for a given registered {@link COSBase}. Returns null if such an object is not
     * registered.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} shall be determined for.
     * @return key The {@link COSObjectKey}, that matches the registered {@link COSBase}, or null if such an object is
     * not registered.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSBase),137,142,"/**
 * Checks if object is a COSObject or handled by objectPool.
 */","* Returns true, if the given {@link COSBase} is a registered object of this pool.
     *
     * @param object The {@link COSBase} that shall be checked.
     * @return True, if such a {@link COSBase} is registered in this pool.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,prepareStreamObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:prepareStreamObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",81,89,"/**
* Associates a key and object.
* @param key COSObjectKey to associate
* @param object COSBase object to associate
*/
","* Prepares the given {@link COSObject} to be written to this object stream, using the given {@link COSObjectKey} as
     * it's ID for indirect references.
     *
     * @param key The {@link COSObjectKey}, that shall be used for indirect references to the {@link COSObject}.
     * @param object The {@link COSObject}, that shall be written to this object stream.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,createFromCOSObject,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",244,264,"/**
* Retrieves a PDColorSpace, caching if possible.
* @param colorSpace COS object representing the color space
* @param resources PDResources object, may be null
* @return PDColorSpace object or a newly created one
*/",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,toDictionary,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:toDictionary(org.apache.pdfbox.cos.COSBase),348,364,"/**
 * Extracts a COSDictionary from a COSBase, or returns null.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(),427,442,"/**
 * Reads a byte from the decoded row, handling edge cases.
 * @return Byte value, or 0 if error occurs.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(byte[],int,int)",444,465,"/**
 * Reads data into the provided byte array.
 * @param b buffer to fill, @param off offset, @param len length
 * @return number of bytes read
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,skip,org.apache.pdfbox.filter.CCITTFaxDecoderStream:skip(long),467,485,"/**
 * Advances the decoding position by a specified number of bytes.
 * @param n Number of bytes to advance.
 * @return Number of bytes actually skipped.
 */",,,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1107,1113,"/**
 * Delegates to another m2 method with ISO-8859-1 encoded password.
 */","* Check for owner password.
     *
     * @param password The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,writePage,org.apache.pdfbox.text.PDFTextStripperByArea:writePage(),155,164,"/**
 * Processes regions, fetches characters, and calls super.m2().
 */","* This will print the processed page text to the output stream.
     *
     * @throws IOException If there is an error writing the text.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Processes an array of strings and floats, writing them with m2/m3.
* @param textWithPositioningArray Array of strings/floats to process.
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDFormContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of strings and floats, adjusting text.
 * @param textWithPositioningArray Array of strings/floats to process.
 * @throws IllegalArgumentException if array contains invalid types.
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPageContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of strings and floats, adjusting text.
 * @param textWithPositioningArray Array of strings/floats to process.
 * @throws IllegalArgumentException if array contains invalid types.
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPatternContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Processes an array of strings and floats, calling helper methods.
 * @param textWithPositioningArray Array of strings/floats to process.
 * @throws IllegalArgumentException if array contains non-String/Float.
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showText(java.lang.String),262,267,"/**
* Executes a sequence of actions based on the input text.
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDFormContentStream:showText(java.lang.String),262,267,"/**
 * Processes text: calls m1, m2, and m3.
 * @param text The text to be processed.
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPageContentStream:showText(java.lang.String),262,267,"/**
* Processes text: calls m1, m2, and m3 with specified operations.
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPatternContentStream:showText(java.lang.String),262,267,"/**
* Executes a sequence of operations on the provided text.
* @param text The text to be processed.
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True,8
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.PDDocument),56,60,"/**
 * Constructs a PDTransparencyGroup, initializing it with a PDDocument.
 */","* Creates a Transparency Group for writing, in the given document.
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),48,51,"/**
 * Creates a new PDAppearanceStream associated with the given document.
 */","* Creates a Form Image XObject for writing, in the given document.
     * 
     * @param document The current document",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",274,278,"/**
 * Creates a PDF image mask from a BufferedImage.
 * @param document PDF document.
 * @param image BufferedImage to use as mask.
 * @param quality Quality of the mask.
 * @param dpi DPI of the mask.
 * @return PDImageXObject representing the mask.
 */
","* Creates a new JPEG Image XObject from a BufferedImage, a given quality and dpi metadata.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @param dpi the desired dpi (resolution) value of the JPEG to be stored in metadata. This
     * value has no influence on image content or size.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromGrayImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",136,162,"/**
* Creates a PDF mask image from a BufferedImage.
* @param image BufferedImage to create mask from
* @param document PDF document to add mask to
* @return PDImageXObject representing the PDF mask image
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",164,229,"/**
* Creates a PDF image with mask based on image transparency.
* @param image BufferedImage to convert
* @param document PDDocument to add image to
* @return PDImageXObject representing the PDF image
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),45,48,"/**
 * Constructs a PDFParser with the given source and default password.
 * @param source Source to read PDF data from.
 * @throws IOException If an I/O error occurs.
 */
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source source representing the pdf.
     * @throws IOException If something went wrong.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,outputCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",475,494,"/**
* Processes a template of points, applying transformations based on them.
* @param template Array of Point2D.Double objects.
* @param x Offset for x coordinate.
* @param y Offset for y coordinate.
*/","* Writes the curl template points to the output and applies translation (x, y).",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArcSegment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",639,700,"/**
 * Draws a Bezier curve segment.
 * @param startAng start angle
 * @param endAng end angle
 * @param cx center x
 * @param cy center y
 * @param rx radius x
 * @param ry radius y
 * @param out Point2D.Double list or null
 * @param addMoveTo boolean to add moveTo
 */","* Creates a single Bézier curve that represents a section of an elliptical
     * arc. The sweep angle of the section must not be larger than 90 degrees.
     * If argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(java.awt.geom.Point2D$Double),1029,1032,"/**
* Calls m1 with the x and y coordinates of the given Point2D.
* @param p The Point2D.Double object whose coordinates are used.
*/
",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(java.awt.geom.Point2D$Double),1048,1051,"/**
* Calls m1 with the x and y coordinates of the given Point2D.
* @param p The Point2D.Double object whose coordinates will be used.
*/
",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,iterator,org.apache.pdfbox.cos.COSIncrement:iterator(),352,356,"/**
 * Delegates to the underlying iterator.
 * @return An iterator of COSBase objects.
 */
","* Return an iterator for the determined {@link #objects} contained in this {@link COSIncrement}.
     *
     * @return An iterator for the determined {@link #objects} contained in this {@link COSIncrement}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.pdmodel.common.COSObjectable),104,112,"/**
 * Calls m2 with the result of object.m1(), or null if object is null.
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,"org.apache.pdfbox.cos.COSArray:growToSize(int,org.apache.pdfbox.cos.COSBase)",611,620,"/**
* Adds objects to a collection until the size is reached.
* @param size The target size of the collection.
* @param object The object to add.
*/
","* This will add the object until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.
     * @param object The object to fill the array with.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setFloatArray,org.apache.pdfbox.cos.COSArray:setFloatArray(float[]),655,662,"/**
* Processes float array: calls m1, then calls m2 for each value.
*/","* Clear the current contents of the COSArray and set it with the float[].
     *
     * @param value The new value of the float array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSArray,org.apache.pdfbox.pdfparser.BaseParser:parseCOSArray(),755,822,"/**
 * Parses a COS array from the input source.
 * @return COSArray parsed from the source, or null if corrupt.
 */","* This will parse a PDF array object.
     *
     * @return The parsed PDF array.
     *
     * @throws IOException If there is an error parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getStream,org.apache.pdfbox.pdfparser.PDFXRefStream:getStream(),67,116,"/**
* Creates a COSStream object for a xrefstream, setting its properties.
* @return The created COSStream object.
* @throws IOException if an I/O error occurs.
*/","* Returns the stream of the XRef.
     * @return the XRef stream
     * @throws IOException if something went wrong",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,initParserValues,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:initParserValues(org.apache.pdfbox.cos.COSStream),66,102,"/**
 * Parses Xref stream, validates /W and /Index arrays, and sets object numbers.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",118,127,"/**
 * Initializes a COSArrayList with given objects and dictionary keys.
 */
","* This is a really special constructor.  Sometimes the PDF spec says
     * that a dictionary entry can either be a single item or an array of those
     * items.  But in the PDModel interface we really just want to always return
     * a java.util.List.  In the case were we get the list and never modify it
     * we don't want to convert to COSArray and put one element, unless we append
     * to the list.  So here we are going to create this object with a single
     * item instead of a list, but allow more items to be added and then converted
     * to an array.
     *
     * @param actualObject The PDModel object.
     * @param item The COS Model object.
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,converterToCOSArray,org.apache.pdfbox.pdmodel.common.COSArrayList:converterToCOSArray(java.util.List),304,349,"/**
 * Converts a list of objects to a COSArray. Handles various object types.
 * @param cosObjectableList List of COS-convertible objects.
 * @return A COSArray containing the converted objects, or null if input is null.
 */","* This will convert a list of COSObjectables to an array list of COSBase objects.
     *
     * @param cosObjectableList A list of COSObjectable.
     *
     * @return A list of COSBase.
     * @throws IllegalArgumentException if an object type is not supported for conversion to a
     * COSBase object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(),37,43,"/**
 * Initializes a PDRange object with default range values.
 */",* Constructor with an initial range of 0..1.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(org.apache.pdfbox.cos.COSArray),47,58,"/**
 * Constructs a PDFourColours object from a COSArray.
 * Pads the array with COSNull if it has fewer than 4 elements.
 */
",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(),38,43,"/**
 * Initializes a new FDFOptionElement with an empty COSArray.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getWidths(int[]),417,511,"/**
* Creates a COSArray from an array of widths, handling CID mapping.
* @param widths array of character widths
* @return COSArray representing the CID mapping
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getVerticalMetrics(int[]),547,668,"/**
 * Processes values to create a COSArray, handling state transitions.
 * @param values array of values for processing
 * @throws IOException if values array length is insufficient
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(),45,50,"/**
 * Initializes a PDFontSetting object with a default COSArray.
 */","* Creates a blank font setting, font will be null, size will be 1.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getCOSObject(),78,85,"/**
 * Creates a COS array containing the array and phase.
 * @return COSBase object representing the constructed array.
 */
",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toCOSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toCOSArray(),208,216,"/**
 * Creates a COSArray with components, adds pattern name if present.
 * @return COSArray object representing the array.
 */
","* Returns the color component values as a COS array
     * @return the color component values as a COS array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(),72,81,"/**
 * Initializes a PDDeviceN object with a COSArray.
 */",* Creates a new DeviceN color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(),39,45,"/**
 * Initializes a PDGamma object with default values.
 */","* Creates a new gamma.
     * Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getAlternateColorSpace(),389,432,"/**
* Creates or retrieves a PDColorSpace based on alternate data.
* Returns a PDColorSpace object. Throws IOException on error.
*/","* Returns a list of alternate color spaces for non-conforming readers.
     * WARNING: Do not use the information in a conforming reader.
     * @return A list of alternateColorSpace color spaces.
     * @throws IOException If there is an error getting the alternateColorSpace color spaces.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(),61,68,"/**
 * Constructs a new PDIndexed object, initializing the COS array.
 */","* Creates a new Indexed color space.
     * Default DeviceRGB, hival 255.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultRangeArray,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultRangeArray(),184,192,"/**
 * Creates a COSArray containing a range of float values.
 * @return COSArray with float range values.
 */
","* creates a range array with default values (-100..100 -100..100).
     * @return the new range array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources),46,51,"/**
 * Initializes a PDPattern with provided resources.
 * @param resources PDResources object containing pattern data
 */
","* Creates a new pattern color space.
     * 
     * @param resources The current resources.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(),69,77,"/**
 * Initializes a PDSeparation object with a predefined COSArray.
 */",* Creates a new Separation color space.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(),38,44,"/**
 * Initializes a PDTristimulus with zero values for tristimulus.
 */","* Constructor. Defaults all values to 0, 0, 0.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(float[]),59,66,"/**
 * Creates a PDTristimulus object from a float array (up to 3 elements).
 */","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setMatrix(java.awt.geom.AffineTransform),245,255,"/**
 * Creates a PDF matrix from an AffineTransform.
 * @param transform AffineTransform object to convert.
 */","* Sets the optional Matrix entry for the form XObject.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",95,139,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document PDDocument to associate with image.
 * @param byteArray Image data as byte array.
 * @return PDImageXObject created from the image data.
 */","* Creates a new JPEG Image XObject from a byte array containing JPEG data.
     *
     * @param document the document where the image will be created
     * @param byteArray bytes of JPEG image
     * @return a new Image XObject
     *
     * @throws IOException if the input stream cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createProcSetArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createProcSetArray(),172,183,"/**
 * Creates and sets the ProcSet array in the PDF structure.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toCOSArray,org.apache.pdfbox.util.Matrix:toCOSArray(),566,576,"/**
 * Creates a COSArray containing values from the 'single' array.
 * @return COSArray object with selected float values.
 */","* Returns a COS array which represent the geometric relevant components of the matrix. The last column of the
     * matrix is ignored, only the first two columns are returned. This is analog to the Matrix(COSArray) constructor.
     * 
     * @return a COSArray representing the geometric relevant components of the matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",254,262,"/**
* Calls m2 with the COSBase returned by object.m1(), or null.
* @param index index value
* @param object COSObjectable object
*/
","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setInt,"org.apache.pdfbox.cos.COSArray:setInt(int,int)",338,341,"/**
* Calls m2 with the given index and a COSInteger-wrapped value.
*/","* Set the value in the array as an integer.
     *
     * @param index The index into the array.
     * @param value The value to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setName,"org.apache.pdfbox.cos.COSArray:setName(int,java.lang.String)",348,351,"/**
* Calls m2 with the given index and a COSName derived from the name.
*/","* Set the value in the array as a name.
     * @param index The index into the array.
     * @param name The name to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setString,"org.apache.pdfbox.cos.COSArray:setString(int,java.lang.String)",389,399,"/**
 * Calls m1 with either a COSString or null, based on string.
 * @param index Index to pass to m1.
 * @param string String to convert to COSString.
 */
","* Set the value in the array as a string.
     * @param index The index into the array.
     * @param string The string to set in the array.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteSignature,org.apache.pdfbox.pdfwriter.COSWriter:doWriteSignature(),863,916,"/**
* Constructs and writes a byte range to the output stream.
* Creates a byte range string and writes it to the stream.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMin,org.apache.pdfbox.pdmodel.common.PDRange:setMin(float),107,110,"/**
* Sets the minimum value for a range in the rangeArray.
* @param min The minimum value to set.
*/","* This will set the minimum value for the range.
     *
     * @param min The new minimum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMax,org.apache.pdfbox.pdmodel.common.PDRange:setMax(float),128,131,"/**
* Sets the maximum value for a range in the rangeArray.
* @param max The maximum value to set.
*/","* This will set the maximum value for the range.
     *
     * @param max The new maximum for the range.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftX(float),225,228,"/**
* Sets the value of the COSFloat at index 0 in rectArray.
* @param value The float value to set.
*/","* This will set the lower left x coordinate.
     *
     * @param value The lower left x.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftY(float),245,248,"/**
* Sets the value of a COSFloat in the rectArray.
* @param value The float value to set.
*/
","* This will set the lower left y coordinate.
     *
     * @param value The lower left y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightX(float),265,268,"/**
* Sets the value of a COSFloat at index 2 in rectArray.
* @param value The float value to set.
*/","* This will set the upper right x coordinate.
     *
     * @param value The upper right x .",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightY(float),285,288,"/**
* Sets the value of a rectangle array element.
* @param value The float value to set.
*/","* This will set the upper right y coordinate.
     *
     * @param value The upper right y.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setColourByIndex,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",175,187,"/**
 * Sets the color at the given index in the array.
 * @param index Index to set the color.
 * @param colour Color object, null if no color.
 */
","* Sets the colour by edge index.
     * 
     * @param index the edge index
     * @param colour the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptArray,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptArray(org.apache.pdfbox.cos.COSArray,long,long)",683,689,"/**
* Updates array elements with processed COS objects.
* @param array COSArray to update, objNum, genNum for processing.
*/","* This will decrypt an array.
     *
     * @param array The array to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setOption(java.lang.String),91,94,"/**
* Sets an option value using a COSString.
* @param opt The string value to set as an option.
*/
","* This will set the string for an available option.
     *
     * @param opt One of the available options.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setDefaultAppearanceString(java.lang.String),111,114,"/**
* Calls option.m1 with an integer and a COSString.
* @param da String to be wrapped in a COSString.
*/","* This will set the default appearance string.
     *
     * @param da The default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFontSize(float),115,118,"/**
* Sets the font size using the fontSetting object.
* @param size The desired font size.
*/","* This will set the size of the font.
     *
     * @param size The new size of the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setColorantNames(java.util.List),494,498,"/**
* Creates a COSArray from names and associates it with COLORANT_NAMES.
* @param names List of names to be converted to a COSArray.
*/","* Sets the list of colorants
     * @param names the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes),505,521,"/**
 * Sets device attributes, initializing if null.
 * @param attributes Device attributes to set.
 */","* Sets the color space attributes.
     * If null is passed in then all attribute will be removed.
     * @param attributes the color space attributes, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),545,554,"/**
* Sets alternate color space and updates array with it.
* @param cs The alternate color space to set.
*/","* This will set the alternate color space.
     *
     * @param cs The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setR(float),88,91,"/**
* Sets the red color component of a color value.
* @param r The red color component (0.0f - 1.0f)
*/
","* Sets the r value of the tristimulus.
     * @param r the r value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setG(float),106,109,"/**
* Sets the value of a COSFloat object within the values structure.
* @param g The float value to be set.
*/","* Sets the g value of the tristimulus.
     * @param g the g value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setB(float),124,127,"/**
* Sets a float value 'b' to a COS object within the 'values' object.
*/","* Sets the b value of the tristimulus.
     * @param b he b value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setBaseColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),312,316,"/**
* Sets the base color space.
* @param base The PDColorSpace to set as the base.
*/","* Sets the base color space.
     * @param base the base color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setColorantName(java.lang.String),274,277,"/**
* Calls array.m2 with a COSName derived from the input name.
*/","* Sets the colorant name.
     * @param name the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),283,292,"/**
 * Sets the alternate color space and adds it to the array.
 * @param colorSpace The color space to set.
 */
","* Sets the alternate color space.
     * @param colorSpace The alternate color space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setX(float),91,94,"/**
* Sets the value of a COSFloat object in the values list.
* @param x The float value to be set.
*/","* Sets the x value of the tristimulus.
     * @param x the x value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setY(float),109,112,"/**
* Sets the 'y' value in the 'values' object as a COSFloat.
* @param y The y value to set.
*/
","* Sets the y value of the tristimulus.
     * @param y the y value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setZ(float),127,130,"/**
* Sets the value of a COS float in the values object.
* @param z The float value to set.
*/
","* Sets the z value of the tristimulus.
     * @param z the z value for the tristimulus",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",227,235,"/**
* Sets a key-value pair, handling null values.
* @param key COSName key. @param value COSObjectable value.
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(java.lang.String,boolean)",254,257,"/**
* Calls m3 with a COSName created from key and a COSBoolean.
*/","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(org.apache.pdfbox.cos.COSName,boolean)",265,268,"/**
* Sets a COS value associated with the given key.
* @param key COS name of the key
* @param value boolean value to set
*/
","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",276,279,"/**
* Calls m2 with a COSName created from the key.
* @param key The key to create a COSName from.
* @param value The value to be associated with the key.
*/
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(org.apache.pdfbox.cos.COSName,java.lang.String)",300,308,"/**
* Sets a COS name value associated with a key.
* @param key The key to associate with the value.
* @param value The value to be converted to a COS name.
*/
","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(org.apache.pdfbox.cos.COSName,java.lang.String)",372,380,"/**
* Sets a COS name with a string value using helper method m1.
* @param key COS name key
* @param value String value to be set
*/
","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(org.apache.pdfbox.cos.COSName,int)",421,424,"/**
* Calls m2 with the given key and a COSInteger wrapper of the value.
* @param key The key to pass to m2.
* @param value The integer value to wrap and pass to m2.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(org.apache.pdfbox.cos.COSName,long)",443,447,"/**
* Sets the value associated with a key to an integer.
* @param key COSName representing the key.
* @param value Long value to be stored as an integer.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(org.apache.pdfbox.cos.COSName,float)",484,488,"/**
* Sets a float value for a given key using helper method m1.
* @param key COSName representing the key.
* @param value Float value to be set.
*/
","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,"org.apache.pdfbox.cos.COSDocument:createCOSStream(org.apache.pdfbox.cos.COSDictionary,long,long)",192,200,"/**
* Creates a COSStream from a dictionary, start position, and length.
*/","* Creates a new COSStream using the current configuration for scratch files. Not for public use.
     * Only COSParser should call this method.
     * 
     * @param dictionary    the corresponding dictionary
     * @param startPosition the start position within the source
     * @param streamLength  the stream length
     * @return the new COSStream
     * @throws IOException if the random access view can't be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary),351,354,"/**
* Adds encryption dictionary to the trailer.
* @param encDictionary The COS dictionary containing encryption details.
*/","* This will set the encryption dictionary, this should only be called when
     * encrypting the document.
     *
     * @param encDictionary The encryption dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setDocumentID,org.apache.pdfbox.cos.COSDocument:setDocumentID(org.apache.pdfbox.cos.COSArray),374,377,"/**
* Sets the ID of an object using the provided COSArray.
* @param id COSArray representing the ID to be set.
*/","* This will set the document ID. This should be an array of two strings. This method cannot be
     * used to remove the document id by passing null or an empty array; it will be recreated. Only
     * the first existing string is used when writing, the second one is always recreated. If you
     * don't want this, you'll have to modify the {@code COSWriter} class, look for {@link COSName#ID}.
     *
     * @param id The document id.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parseNextToken,org.apache.pdfbox.pdfparser.PDFStreamParser:parseNextToken(),97,321,"/**
 * Parses a token from the input stream.
 * Returns COS object or null if parsing fails.
 */","* This will parse the next token in the stream.
     *
     * @return The next token in the stream or null if there are no more tokens in the stream.
     *
     * @throws IOException If an io error occurs while parsing the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),172,195,"/**
 * Creates a PDF document using the provided stream cache function.
 */","* Creates an empty PDF document. You need to add at least one page for the document to be valid.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache for buffering PDF streams",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation),778,782,"/**
 * Sets document information and adds it to the PDF.
 * @param info PDDocumentInformation object to set
 */","* This will set the document information for this document.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata) PDDocumentCatalog#setMetadata(PDMetadata)}.
     *
     * @param info The updated document information.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument),74,80,"/**
 * Initializes a PDDocumentCatalog with the given document.
 * @param doc The document to associate with this catalog.
 */
","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setThreads(java.util.List),239,244,"/**
* Adds a list of threads to the root COS object.
* @param threads List of PDThread objects to add.
*/
","* Sets the list of threads for this pdf document.
     *
     * @param threads The list of threads, or null to clear it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOutputIntents(java.util.List),453,461,"/**
 * Adds output intents to the root COS object.
 * @param outputIntents List of PDOutputIntent objects to add.
 */
","* Replace the list of OutputIntents of the document.
     *
     * @param outputIntents the list of OutputIntents, if the list is empty all OutputIntents are
     * removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setCropBox,org.apache.pdfbox.pdmodel.PDPage:setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle),460,470,"/**
 * Sets the crop box for the page.
 * @param cropBox Rectangle object defining the crop box, or null.
 */","* This will set the CropBox for this page.
     * 
     * @param cropBox The new CropBox for this page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(java.util.List),622,625,"/**
* Sets the page contents using the provided list of PDStreams.
* @param contents List of PDStreams to be set as page contents.
*/","* This will set the contents of this page.
     *
     * @param contents Array of new contents of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setThreadBeads,org.apache.pdfbox.pdmodel.PDPage:setThreadBeads(java.util.List),661,664,"/**
* Adds a list of PDThreadBead objects to the page's content.
* @param beads List of PDThreadBead objects to add.
*/","* This will set the list of thread beads.
     * 
     * @param beads A list of PDThreadBead objects or null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setAnnotations,org.apache.pdfbox.pdmodel.PDPage:setAnnotations(java.util.List),800,803,"/**
* Adds a list of annotations to the page's annotations.
* @param annotations List of PDAnnotation objects to add.
*/","* This will set the list of annotations. Although this is optional, you should take care that
     * any newly created annotations link back to this page by calling
     * {@link PDAnnotation#setPage(org.apache.pdfbox.pdmodel.PDPage)}. Not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>.
     *
     * @param annotations The new list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setViewports,org.apache.pdfbox.pdmodel.PDPage:setViewports(java.util.List),860,868,"/**
 * Sets viewports for the page.
 * @param viewports List of PDViewportDictionary objects.
 */","* Set the viewports.
     *
     * @param viewports A list of viewports, or null if the entry is to be deleted.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(),54,61,"/**
 * Constructs a new PDPageTree object, initializing its structure.
 */
",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,org.apache.pdfbox.pdmodel.common.COSArrayList:add(java.lang.Object),187,212,"/**
* Processes an object 'o', potentially delegating to parent/array.
* @param o The object to process.
* @return True if processing was successful.
*/
",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,clear,org.apache.pdfbox.pdmodel.common.COSArrayList:clear(),416,427,"/**
 * Calls m2 on parent, actual, and array.
 * Delegates to parent if it exists.
 */",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,set,"org.apache.pdfbox.pdmodel.common.COSArrayList:set(int,java.lang.Object)",460,485,"/**
* Sets the element at the given index. Throws exception if filtered.
* @param index index of element to set
* @param element element to set at index
* @return The element that was set.
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,"org.apache.pdfbox.pdmodel.common.COSArrayList:add(int,java.lang.Object)",490,515,"/**
* Adds an element at the specified index. Throws exception if filtered.
*/",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,put,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:put(java.lang.Object,java.lang.Object)",105,112,"/**
* Associates the specified value with the given key.
* @param key The key for the value.
* @param value The value to associate.
*/
",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getCOSObject,org.apache.pdfbox.pdmodel.common.PDPageLabels:getCOSObject(),180,192,"/**
 * Creates a COSDictionary containing a NUMS array of key-value pairs.
 * @return COSDictionary with the generated NUMS array.
 */
",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(),38,42,"/**
 * Creates a new PDComplexFileSpecification object.
 * Initializes the file specification dictionary.
 */
",* Default Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(org.apache.pdfbox.cos.COSDictionary),49,60,"/**
 * Creates a ComplexFileSpecification.
 * @param dict COSDictionary to use, or creates a new one.
 */
","* Constructor. Creates empty COSDictionary if dict is null.
     *
     * @param dict The dictionary that fulfils this file specification.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setRangeValues(org.apache.pdfbox.cos.COSArray),196,200,"/**
 * Sets the range values and updates the associated COS name.
 * @param rangeValues The COSArray representing the range values.
 */","* This will set the range values.
     *
     * @param rangeValues The new range values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setDomainValues(org.apache.pdfbox.cos.COSArray),239,243,"/**
* Sets the domain values and notifies listener.
* @param domainValues COSArray representing the domain values.
*/","* This will set the domain values.
     *
     * @param domainValues The new domain values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setEncodeValues(org.apache.pdfbox.cos.COSArray),207,211,"/**
* Sets the encode values and notifies a listener.
* @param encodeValues COSArray containing encode values
*/
","* This will set the encode values.
     *
     * @param encodeValues The new encode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setDecodeValues(org.apache.pdfbox.cos.COSArray),236,240,"/**
* Sets decode values and registers with m1().
* @param decodeValues COSArray containing decode parameters
*/
","* This will set the decode values.
     *
     * @param decodeValues The new decode values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setK(org.apache.pdfbox.cos.COSBase),88,91,"/**
* Sets the 'k' value using m1() and m2().
* @param k The COSBase value to set.
*/","* Sets the K entry.
     * 
     * @param k the K value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setClassMap(java.util.Map),253,273,"/**
* Processes a class map, converting objects to COSDictionary.
* @param classMap Map containing class attributes.
*/","* Sets the ClassMap.
     * 
     * @param classMap null, or a map whose elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:setUserProperties(java.util.List),81,85,"/**
* Sets user properties to the document.
* @param userProperties List of user properties to set.
*/","* Sets the user properties.
     * 
     * @param userProperties the user properties",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setLineDashPattern(org.apache.pdfbox.cos.COSArray),185,193,"/**
* Sets the dash array in the dictionary.
* @param dashArray The dash array to set; null is allowed.
*/","* Set the line dash pattern associated with this box style.
     *
     * @param dashArray The patter for this box style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setCryptFilterMethod(org.apache.pdfbox.cos.COSName),96,99,"/**
* Sets the CryptFilterMessage (CFM) in the filter dictionary.
* @param cfm The COSName representing the CFM value.
*/","* This will set the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @param cfm name of the crypt filter method.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setFilter(java.lang.String),149,152,"/**
* Sets the filter for the dictionary.
* @param filter The filter string to set.
*/","* Sets the filter entry of the encryption dictionary.
     *
     * @param filter The filter name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerKey(byte[]),261,264,"/**
* Adds a byte array as a COSString to the dictionary.
* @param o byte array to be added
* @throws IOException if an I/O error occurs
*/
","* This will set the O entry in the standard encryption dictionary.
     *
     * @param o A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserKey(byte[]),300,303,"/**
* Adds a byte array as a COSString to the dictionary.
* @param u The byte array to be added.
* @throws IOException if an I/O error occurs.
*/
","* This will set the U entry in the standard encryption dictionary.
     *
     * @param u A 32 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerEncryptionKey(byte[]),339,342,"/**
* Adds an OE (Output Encoding) object to the dictionary.
* @param oe byte array representing the OE data.
* @throws IOException if an I/O error occurs.
*/
","* This will set the OE entry in the standard encryption dictionary.
     *
     * @param oe A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserEncryptionKey(byte[]),369,372,"/**
* Adds a UE dictionary entry to the dictionary.
* @param ue The UE byte array to be added.
* @throws IOException if an I/O error occurs.
*/
","* This will set the UE entry in the standard encryption dictionary.
     *
     * @param ue A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRecipients,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRecipients(byte[][]),429,439,"/**
 * Adds recipients to the dictionary as a COS array.
 * @param recipients Byte array of recipients to add.
 * @throws IOException if an I/O error occurs.
 */
","* This will set the Recipients field of the dictionary. This field contains an array
     * of string.
     * @param recipients the array of bytes arrays to put in the Recipients field.
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStreamFilterName(org.apache.pdfbox.cos.COSName),564,567,"/**
* Sets the stream filter name in the dictionary.
* @param streamFilterName The name of the stream filter.
*/","* Sets the name of the filter which is used for de/encrypting streams.
     * 
     * @param streamFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStringFilterName(org.apache.pdfbox.cos.COSName),586,589,"/**
* Sets the string filter name in the dictionary.
* @param stringFilterName The name of the string filter.
*/","* Sets the name of the filter which is used for de/encrypting strings.
     * 
     * @param stringFilterName the name of the filter",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPerms(byte[]),598,601,"/**
* Sets the permissions for a PDF object.
* @param perms byte array representing permissions
* @throws IOException if an I/O error occurs
*/
","* Set the Perms entry in the encryption dictionary.
     *
     * @param perms A 16 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,removeV45filters,org.apache.pdfbox.pdmodel.encryption.PDEncryption:removeV45filters(),624,629,"/**
* Sets COSName entries in the dictionary. No parameters, void return.
*/","* remove CF, StmF, and StrF entries. This is to be called if V is not 4 or 5.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(),107,111,"/**
 * Constructs a new FDF annotation with type ANNOT.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setColor(java.awt.Color),467,475,"/**
* Sets the color of the annotation.
* @param c The Color object to set.
*/","* Set the annotation color.
     *
     * @param c The annotation color.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRichContents(java.lang.String),876,879,"/**
* Annotates the object with a resource constraint.
* @param rc The resource constraint string to set.
*/","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setInteriorColor(java.awt.Color),105,113,"/**
 * Sets the IC color array in the annotation.
 * @param color The color to set; null to clear.
 */
","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setCallout(float[]),144,147,"/**
* Sets the callout data for annotation.
* @param callout float array containing callout data
*/","* This will set the coordinates of the callout line.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:setInkList(java.util.List),123,131,"/**
* Converts a list of float arrays to a COSArray and sets it.
* @param inklist List of float arrays representing ink data.
*/
","* Set the paths making up the freehand ""scribble"".
     * 
     * The ink annotation is made up of one ore more disjoint paths. Each array entry is an array representing a stroked
     * path, being a series of alternating horizontal and vertical coordinates in default user space.
     * 
     * @param inklist the List of arrays representing the paths.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLine(float[]),162,165,"/**
* Adds a line to the annotation using the given float array.
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param line array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setInteriorColor(java.awt.Color),251,259,"/**
* Sets the color array for the annotation.
* @param color The color to set, or null to clear.
*/
","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setVertices(float[]),116,119,"/**
* Adds vertices to the annotation.
* @param vertices Array of vertex coordinates.
*/","* This will set the coordinates of the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setInteriorColor(java.awt.Color),137,145,"/**
 * Sets the IC annotation color to the given color.
 * @param color The color to set for the annotation.
 */","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the drawn area.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setVertices(float[]),133,136,"/**
* Adds vertices to the annotation using a COSArray.
* @param vertices Array of float values representing vertices.
*/","* This will set the coordinates of the the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setInteriorColor(java.awt.Color),220,228,"/**
* Sets the IC color annotation property.
* @param color The color to set; null for no color.
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setInteriorColor(java.awt.Color),106,114,"/**
 * Sets the IC color array in the annotation.
 * @param color The color to set; null to clear.
 */
","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,setCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:setCoords(float[]),87,90,"/**
* Adds coordinate points to the annotation.
* @param coords Array of float coordinates to add.
*/","* Set the coordinates of individual words or group of words.
     * 
     * The quadliterals shall encompasses a word or group of contiguous words in the text underlying the annotation. The
     * coordinates for each quadrilateral shall be given in the order x1 y1 x2 y2 x3 y3 x4 y4.
     *
     * @param coords an array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setID(org.apache.pdfbox.cos.COSArray),315,318,"/**
* Sets the ID of the FDF object.
* @param id The COSArray representing the ID.
*/
","* This will set the FDF id.
     *
     * @param id The new id for the FDF.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFields(java.util.List),346,349,"/**
* Adds a list of fields to the FDF document.
* @param fields List of FDF fields to add.
*/
","* This will set the list of fields. This should be a list of FDFField objects.
     *
     * @param fields The list of fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setPages(java.util.List),398,401,"/**
* Adds a list of pages to the FDF object.
* @param pages List of FDF pages to add.
*/
","* This will set the list of pages. This should be a list of FDFPage objects.
     *
     *
     * @param pages The list of pages.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setAnnotations(java.util.List),459,462,"/**
* Adds annotations to the FDF object.
* @param annots List of FDF annotations to add.
*/
","* This will set the list of annotations. This should be a list of FDFAnnotation objects.
     *
     *
     * @param annots The list of annotations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setDifferences(org.apache.pdfbox.cos.COSStream),479,482,"/**
* Adds a differences stream to the FDF object.
* @param diff COSStream representing the differences.
*/","* This will set the differences stream.
     *
     * @param diff The new differences stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEmbeddedFDFs(java.util.List),534,537,"/**
 * Adds a list of embedded file specifications to the FDF.
 * @param embedded List of PDFileSpecification objects to embed.
 */
","* This will set the list of embedded FDFs. This should be a list of PDFileSpecification objects.
     *
     *
     * @param embedded The list of embedded FDFs.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setKids,org.apache.pdfbox.pdmodel.fdf.FDFField:setKids(java.util.List),197,200,"/**
* Sets the 'kids' array for the field.
* @param kids List of FDFField objects to be set.
*/
","* This will set the list of kids.
     *
     * @param kids A list of FDFField objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(java.lang.Object),293,313,"/**
 * Sets the field value based on the input object type.
 * @param value Object to set as field value (List, String, COSObjectable)
 * @throws IOException if the type is unknown.
 */","* You should pass a String, or a List&lt;String&gt; to set the value.
     *
     * @param value The value that should populate when imported.
     *
     * @throws IOException If there is an error setting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(org.apache.pdfbox.cos.COSBase),320,323,"/**
* Sets the value of field 'm1' with the COSName ""V"".
* @param value The value to be set for field 'm1'.
*/","* Sets the COS value of this field.
     *
     * @param value COS value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(java.lang.Integer),348,356,"/**
* Sets the field value for COSName.FF to the given Integer.
* @param ff Integer value to set; null if no value.
*/
","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(java.lang.Integer),392,400,"/**
* Sets the 'ff' value on the field.
* @param ff Integer value to set; null if unset.
*/
","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(java.lang.Integer),436,444,"/**
* Sets the color field value.
* @param ff Integer value for the color field.
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(java.lang.Integer),480,488,"/**
 * Sets the field value to a COSInteger, if f is not null.
 * @param f Integer value to set, or null to skip setting.
 */
","* This will set the widget field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(java.lang.Integer),524,532,"/**
* Sets the field value to COSInteger if ff is not null.
* @param ff Integer value to set; null if no value.
*/
","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(java.lang.Integer),568,576,"/**
* Sets the color value for a field.
* @param ff Integer value to set, or null to clear.
*/
","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear widget field flags"".",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSString),765,768,"/**
* Sets the RV field of the field object to the given COSString.
* @param rv The COSString value for the RV field.
*/
","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSStream),775,778,"/**
* Sets the RV (resource stream) field of the current field.
* @param rv The COSStream object to set as the RV field.
*/
","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setBefore(java.lang.String),97,100,"/**
* Sets the ""BEFORE"" value in the dictionary with the provided string.
* @param before The string value to set.
*/","* This will set the javascript code the will get execute before the import.
     *
     * @param before A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setAfter(java.lang.String),129,132,"/**
* Sets the ""After"" value in the dictionary.
* @param after The value to set as the ""After"" string.
*/
","* This will set the javascript code the will get execute after the import.
     *
     * @param after A reference to some javascript code.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setDoc(java.util.Map),172,181,"/**
* Adds JavaScript actions to a dictionary.
* @param map Map of action keys to JavaScript actions.
*/
","* Sets the dictionary's ""Doc"" entry.
     * 
     * @param map Map of named ""JavaScript"" dictionaries.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:setTemplates(java.util.List),91,94,"/**
* Adds a list of templates to the page's templates array.
* @param templates List of FDFTemplate objects to add.
*/","* A list of FDFTemplate objects.
     *
     * @param templates A list of templates for this Page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setFields(java.util.List),112,115,"/**
 * Sets the fields in the template.
 * @param fields List of FDF fields to set.
 */","* This will set a list of fields for this template.
     *
     * @param fields The list of fields to set for this template.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(java.util.TreeMap),279,309,"/**
 * Sets CID font widths based on glyph IDs and scaling.
 * @param cidToGid Maps CID to glyph ID.
 */",* Builds widths with a custom CIDToGIDMap (for embedding font subset).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalHeader,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary),311,332,"/**
* Sets DW2 property in COSDictionary based on vertical header table.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(),72,80,"/**
 * Initializes a PDF font object with default font properties.
 */",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(),54,58,"/**
 * Initializes a PDFontDescriptor with a dictionary and type.
 */","* Package-private constructor, for embedding.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontName(java.lang.String),295,303,"/**
 * Sets the font name in the dictionary.
 * @param fontName The name of the font to set.
 */
","* This will set the font name.
     *
     * @param fontName The new name for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFamily(java.lang.String),320,328,"/**
 * Sets the font family in the dictionary.
 * @param fontFamily The font family string to set.
 */","* This will set the font family.
     *
     * @param fontFamily The font family.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontStretch(java.lang.String),371,379,"/**
* Sets the font stretch value in the dictionary.
* @param fontStretch The font stretch string value.
*/
","* This will set the font stretch.
     *
     * @param fontStretch The new stretch for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),427,435,"/**
 * Sets the font bounding box in the dictionary.
 * @param rect Rectangle object containing the bounding box.
 */","* Set the fonts bounding box.
     *
     * @param rect The new bounding box.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCharacterSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCharacterSet(java.lang.String),711,719,"/**
* Sets the character set for the dictionary.
* @param charSet The character set string.
*/","* This will set the character set for the font.
     *
     * @param charSet The new character set for the font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:setGamma(float),123,126,"/**
* Sets the GAMMA value in the dictionary.
* @param value The float value to set as GAMMA.
*/","* Set the gamma value.
     *
     * @param value The new gamma value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),157,165,"/**
 * Sets the gamma array in the dictionary from the given gamma object.
 * @param gamma The PDGamma object containing the gamma array.
 */
","* Sets the gamma value.
     * @param gamma the new gamma value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setMatrix(org.apache.pdfbox.util.Matrix),172,191,"/**
 * Converts a Matrix to a COSArray and stores it in the dictionary.
 * @param matrix The Matrix object to convert.
 */","* Sets the linear interpretation matrix.
     * Passing in null will clear the matrix.
     * @param matrix the new linear interpretation matrix, or null",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,setColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:setColorants(java.util.Map),127,135,"/**
* Sets colorants to the dictionary from the provided map.
* @param colorants Map of colorant names to color spaces.
*/","* Sets the colorant map.
     * @param colorants the map of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(),40,44,"/**
 * Initializes a PDTransparencyGroupAttributes object.
 * Creates a COSDictionary and sets the 'S' item to 'TRANSPARENCY'.
 */
",* Creates a group object with /Transparency subtype entry.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),194,203,"/**
* Sets the color space parameters.
* @param colorSpace The color space object.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setFilters(java.util.List),266,270,"/**
 * Sets the filters parameter to the given list.
 * @param filters List of filter strings.
 */
","* Sets which filters are applied to this stream.
     *
     * @param filters the filters to apply to this stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setDecode(org.apache.pdfbox.cos.COSArray),272,276,"/**
* Calls m1 on parameters with COSName.D and the decode array.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildDecodeParams,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",463,471,"/**
 * Creates a COSDictionary for mask data.
 * @param state PNGConverterState object
 * @param colorSpace PDColorSpace object
 * @return COSDictionary containing mask parameters
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(),38,41,"/**
 * Initializes the dictionary with the OCMD type.
 */",* Creates a new optional content membership dictionary (OCMD).,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setVisibilityPolicy(org.apache.pdfbox.cos.COSName),118,121,"/**
* Sets the visibility policy for the dictionary.
* @param visibilityPolicy The visibility policy to set.
*/","* Sets the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     * 
     * @param visibilityPolicy the visibility policy name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setMatrix(java.awt.geom.AffineTransform),143,153,"/**
 * Sets the transformation matrix for the PDF object.
 * @param transform AffineTransform object representing the matrix.
 */","* Sets the optional Matrix entry for the Pattern.
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),232,242,"/**
 * Sets the bounding box (bbox) in the PDF document.
 * @param bbox The bounding box rectangle. Null to clear.
 */","* This will set the BBox (bounding box) for this Pattern.
     * @param bbox The new BBox for this Pattern.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBackground(org.apache.pdfbox.cos.COSArray),142,146,"/**
* Sets the background COSArray and updates the dictionary.
* @param newBackground The new background COSArray.
*/","* This will set the background.
     *
     * @param newBackground the new background",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),187,198,"/**
* Sets the bounding box. Removes if null, otherwise sets the value.
*/","* This will set the BBox (bounding box) for this Shading.
     *
     * @param newBBox the new BBox",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),254,265,"/**
* Sets the color space in the dictionary.
* @param colorSpace The color space to set; null to remove.
*/
","* This will set the color space for the shading.
     *
     * @param colorSpace the color space",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.cos.COSArray),324,329,"/**
* Sets the function array.
* @param newFunctions The new COSArray representing the function.
*/","* This will set the functions COSArray for the color conversion.
     *
     * @param newFunctions the new COSArray containing all functions",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setMatrix(java.awt.geom.AffineTransform),66,76,"/**
 * Sets the transformation matrix for the PDF object.
 * @param transform AffineTransform object representing the matrix.
 */","* Sets the optional Matrix entry for the function based shading.
     *
     * @param transform the transformation matrix",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setDomain(org.apache.pdfbox.cos.COSArray),97,101,"/**
* Sets the domain to the provided array and updates the m1().m2() object.
* @param newDomain The new domain COSArray to set.
*/","* Sets the optional Domain entry for the function based shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setExtend(org.apache.pdfbox.cos.COSArray),70,74,"/**
* Sets the extend array and notifies listener.
* @param newExtend The new COSArray to set as extend.
*/","* Sets the optional Extend entry for this shading.
     *
     * @param newExtend the extend array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setDomain(org.apache.pdfbox.cos.COSArray),95,99,"/**
 * Sets the domain to the provided COSArray and updates m1().
 * @param newDomain The new domain to set.
 */
","* Sets the optional Domain entry for this shading.
     *
     * @param newDomain the domain array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setCoords(org.apache.pdfbox.cos.COSArray),120,124,"/**
* Updates the coordinates with the provided array.
* @param newCoords The new coordinates to set.
*/","* Sets the Coords entry for this shading.
     *
     * @param newCoords the coordinates array",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets decode values and registers them for decoding.
* @param decodeValues COSArray containing decode parameters.
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(),46,51,"/**
 * Initializes a new PDExtendedGraphicsState with default settings.
 */","* Default constructor, creates blank graphics state.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),592,595,"/**
* Sets the blend mode in the dictionary.
* @param bm The blend mode to set.
*/","* Set the blending mode.
     * 
     * @param bm blend mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFloatItem,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",656,666,"/**
 * Adds or removes a key-value pair to/from the dictionary.
 * @param key COSName representing the key.
 * @param value Float value to be associated with the key.
 */","* This will set a float object.
     *
     * @param key The key to the data that we are setting.
     * @param value The value that we are setting.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer(org.apache.pdfbox.cos.COSBase),694,697,"/**
* Sets the transfer object in the dictionary.
* @param transfer The COSBase object to set as the transfer.
*/","* This will set the transfer function of the /TR dictionary.
     *
     * @param transfer The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer2(org.apache.pdfbox.cos.COSBase),727,730,"/**
* Adds a TR2 entry to the dictionary with the given COSBase.
*/","* This will set the transfer function of the /TR2 dictionary.
     *
     * @param transfer2 The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setNext(java.util.List),156,159,"/**
* Sets the 'next' action in the action dictionary.
* @param next List of PDAction objects to set as 'next'.
*/
","* This will set the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @param next The Next action or sequence of actions.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setT(org.apache.pdfbox.cos.COSBase),69,72,"/**
* Calls m1 on the action object with COSName.T and the given COSBase.
*/",* @param t annotation or annotations,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setH(boolean),87,90,"/**
* Calls m2 on action with COSName.H and COSBoolean of h.
*/",* @param h hide flag,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setD(org.apache.pdfbox.cos.COSBase),108,111,"/**
* Calls action.m1 with COSName.D and the provided COSBase object.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFields(org.apache.pdfbox.cos.COSArray),67,70,"/**
* Calls m1 on action with COSName.FIELDS and the given array.
*/",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSound(org.apache.pdfbox.cos.COSStream),61,64,"/**
* Processes a sound stream using the action.m1 method.
* @param sound The COSStream representing the sound data.
*/","* Sets the sound object.
     * 
     * @param sound the sound object defining the sound that shall be played.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFields(org.apache.pdfbox.cos.COSArray),93,96,"/**
* Calls m1 on the action with FIELDS and the provided array.
*/",* @param array the array of fields,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setD(org.apache.pdfbox.cos.COSBase),71,74,"/**
* Calls action.m1 with COSName.D and the provided COSBase object.
*/",* @param d The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setB(org.apache.pdfbox.cos.COSBase),109,112,"/**
* Executes action 'B' on the given COSBase object.
* @param b The COSBase object to act upon.
*/",* @param b The destination.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setRelationship(org.apache.pdfbox.cos.COSName),88,95,"/**
 * Sets the relationship type in the dictionary.
 * @param relationship The relationship type (must be P or C).
 */","* Set the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @param relationship Valid values are P (the target is the parent of the current document) and
     * C (the target is a child of the current document).
     *
     * throws IllegalArgumentException if the parameter is not P or C.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(),173,177,"/**
 * Constructs a new PDAnnotation object with a default dictionary.
 */",* Constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),282,285,"/**
* Adds a rectangle to the dictionary.
* @param rectangle The rectangle object to add.
*/","* This will set the rectangle for this annotation.
     * 
     * @param rectangle The new rectangle values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setBorder(org.apache.pdfbox.cos.COSArray),764,767,"/**
* Sets the border array for a COS object.
* @param borderArray The COSArray representing the border.
*/","* This will set the border array.
     * 
     * @param borderArray the border array to set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float,float,float,float)",76,84,"/**
* Sets margins in the PDF document.
* @param differenceLeft Left margin value.
* @param differenceTop Top margin value.
* @param differenceRight Right margin value.
* @param differenceBottom Bottom margin value.
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float,float,float,float)",163,171,"/**
 * Sets margins on the PDF page.
 * @param differenceLeft Left margin value.
 * @param differenceTop Top margin value.
 * @param differenceRight Right margin value.
 * @param differenceBottom Bottom margin value.
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setCallout(float[]),194,197,"/**
* Calls m3 with a COSArray containing the input float array.
*/","* This will set the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:setInkList(float[][]),65,78,"/**
 * Converts ink list to a COSArray and stores it.
 * @param inkList 2D float array representing ink paths.
 */
","* Sets the paths that make this annotation.
     *
     * @param inkList An array of arrays, each representing a stroked path. Each array shall be a
     * series of alternating horizontal and vertical coordinates. If the parameter is null the entry
     * will be removed.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLine(float[]),135,138,"/**
* Calls m3 with a COSArray containing the input float array 'l'.
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param l array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setQuadPoints(float[]),201,204,"/**
* Sets quad points data to the COS array.
* @param quadPoints Array of float values representing quad points.
*/","* This will set the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @param quadPoints an array representing the set of area covered.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setRichContents(java.lang.String),156,159,"/**
* Sets the RC value using m1().m2().
* @param rc The RC value to set.
*/","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setVertices(float[]),124,127,"/**
* Adds vertices to the document.
* @param points Array of vertex coordinates.
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setVertices(float[]),170,173,"/**
* Sets the vertices for a COS object using the provided float array.
* @param points Array of vertex coordinates.
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setParent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup),84,87,"/**
* Sets the parent annotation for the given annotation markup.
*/","* This will set the markup annotation which this popup relates to.
     *
     * @param annot the markup annotation.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float,float,float,float)",152,160,"/**
 * Sets margins for PDF rendering.
 * @param differenceLeft Left margin value.
 * @param differenceTop Top margin value.
 * @param differenceRight Right margin value.
 * @param differenceBottom Bottom margin value.
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:setQuadPoints(float[]),59,62,"/**
* Adds quad points to the document.
* @param quadPoints array of quad point coordinates
*/","* This will set the set of quadpoints which encompass the areas of this annotation.
     *
     * @param quadPoints an array representing the set of area covered",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(),36,41,"/**
 * Constructs a new PDAppearanceDictionary with an initial N entry.
 */",* Constructor for embedding.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setDashStyle(org.apache.pdfbox.cos.COSArray),160,163,"/**
* Sets the dash array for a COS object.
* @param dashArray The dash array to set.
*/
","* This will set the dash style used for drawing the border.
     *
     * @param dashArray the dash style to use",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(),83,88,"/**
 * Initializes a PDSeedValue object with a COSDictionary.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilter(org.apache.pdfbox.cos.COSName),264,267,"/**
* Sets the filter COS name in the dictionary.
* @param filter The filter COS name to set.
*/
","* (Optional) The signature handler that shall be used to sign the signature field.
     *
     * @param filter is the filter that shall be used by the signature handler",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilter(java.util.List),292,296,"/**
 * Sets the subfilter in the dictionary.
 * @param subfilter List of subfilter strings.
 */
","* (Optional) An array of names indicating encodings to use when signing. The first name
     * in the array that matches an encoding supported by the signature handler shall be the
     * encoding that is actually used for signing.
     *
     * @param subfilter is the name that shall be used for encoding",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethod(java.util.List),323,336,"/**
 * Validates digest methods and updates the dictionary.
 * @param digestMethod List of digest method names to validate.
 */","* <p>(Optional, PDF 1.7) An array of names indicating acceptable digest
     * algorithms to use when signing. The value shall be one of <b>SHA1</b>,
     * <b>SHA256</b>, <b>SHA384</b>, <b>SHA512</b>, <b>RIPEMD160</b>. The default
     * value is implementation-specific.</p>
     *
     * <p>This property is only applicable if the digital credential signing contains RSA
     * public/privat keys</p>
     *
     * @param digestMethod is a list of possible names of the digests, that should be
     * used for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasons(java.util.List),390,393,"/**
* Adds a list of reasons to the dictionary.
* @param reasons List of reasons to add.
*/","* (Optional) An array of text strings that specifying possible reasons for signing
     * a document. If specified, the reasons supplied in this entry replace those used
     * by conforming products.
     *
     * @param reasons is a list of possible text string that specifying possible reasons",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setMPD,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP),427,433,"/**
* Sets the MDP dictionary entry with the provided PDSeedValueMDP.
* @param mdp The PDSeedValueMDP object to set.
*/
","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @param mdp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp),478,484,"/**
* Sets the timestamp value in the dictionary.
* @param timestamp The PDSeedValueTimeStamp object.
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @param timestamp dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestation(java.util.List),505,509,"/**
* Sets the legal attestation in the dictionary.
* @param legalAttestation List of legal attestation strings.
*/
","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @param legalAttestation is a list of possible text string that specifying possible
     * legal attestations.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(),71,76,"/**
 * Constructs a PDSeedValueCertificate with default settings.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubject(java.util.List),234,237,"/**
* Sets the PDF subject using a list of byte arrays.
* @param subjects List of byte arrays representing the subject.
*/","* (Optional) A list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing. if
     * <b>Subject</b> is not null and {@link #isSubjectRequired()} is true then the subject
     * constraint is enforced on the subjects in this array subjects.
     *
     * @param subjects list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDN(java.util.List),309,319,"/**
 * Processes subject DN entries and adds them to the dictionary.
 * @param subjectDN List of maps representing subject DN entries.
 */","* (Optional; PDF 1.7) A list of maps, where each map contains key value pairs, that specify the
     * Subject Distinguished Name (DN) that must be present within the certificate for it to be
     * acceptable for signing. The certificate must at a minimum contain all the attributes
     * specified in one of the maps entered.
     *
     * @param subjectDN list of maps that contains subject distinguished names",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsage(java.util.List),377,381,"/**
 * Sets the key usage extensions in the dictionary.
 * @param keyUsageExtensions List of key usage extensions.
 */
","* (Optional; PDF 1.7) A List of ASCII strings, where each string specifies an acceptable
     * key-usage extension that must be present in the signing certificate. Multiple strings specify
     * a range of acceptable key-usage extensions; where each string 9 characters long and each
     * character is one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't
     * care. each index in the string represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     *
     * @param keyUsageExtensions list of ASCII strings that consists only of {0, 1, X}",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuer(java.util.List),471,474,"/**
* Sets the issuer data in the dictionary.
* @param issuers List of issuer byte arrays.
*/
","* (Optional) A list of array of bytes containing DER-encoded X.509v3 certificates of acceptable
     * issuers. If the signer’s certificate chains up to any of the specified issuers (either
     * directly or indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuers A list of byte array containing DER-encoded X.509v3 certificates",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOID(java.util.List),527,530,"/**
* Sets the OID in the dictionary with a processed byte array.
* @param oidByteStrings List of byte arrays to process.
*/
","* (Optional) A list of byte arrays that contain Object Identifiers (OIDs) of the certificate
     * policies that must be present in the signing certificate. This field is only applicable if
     * the value of Issuer is not empty.
     *
     * @param oidByteStrings list of byte arrays that contain OIDs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(),90,94,"/**
 * Constructs a PDSignature object, initializing its dictionary.
 */",* Default constructor.,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setType(org.apache.pdfbox.cos.COSName),122,125,"/**
* Sets the type of the dictionary.
* @param type The COSName representing the type.
*/","* Set the dictionary type.
     *
     * @param type is the dictionary type.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setFilter(org.apache.pdfbox.cos.COSName),132,135,"/**
* Sets the filter COS name in the dictionary.
* @param filter The filter COS name to set.
*/","* Set the filter.
     *
     * @param filter the filter to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSubFilter(org.apache.pdfbox.cos.COSName),142,145,"/**
 * Sets the subfilter in the dictionary.
 * @param subfilter The subfilter COSName to set.
 */
","* Set a subfilter that specify the signature that should be used.
     *
     * @param subfilter the subfilter that shall be used.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setByteRange(int[]),277,291,"/**
 * Creates a byte range COS array and adds it to the dictionary.
 * @param range An array of 4 integers defining the byte range.
 */
","* Sets the byte range.
     *
     * @param range the byte range to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContents(byte[]),395,399,"/**
* Creates a COSString from bytes and adds it to the dictionary.
* @param bytes Byte array to create COSString from.
*/
","* Sets the contents.
     *
     * @param bytes contents to be used",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectProcSetArray,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",341,352,"/**
* Sets the ProcSet for multiple PDF resources.
* @param procSet COSArray representing the procedure set.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createWidgetDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",389,399,"/**
 * Creates a widget dictionary and adds it to the PDF structure.
 * @param signatureField Signature field object.
 * @param holderFormResources Resources holder for the form.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(java.awt.Color),350,357,"/**
 * Sets the color for the current object using the provided Color.
 * @param textColor The Color to set, normalized to the range 0-1.
 */
","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument),85,90,"/**
 * Constructs a PDAcroForm associated with the given PDDocument.
 * @param doc The document this form is associated with.
 */
","* Constructor.
     *
     * @param doc The document that this form is part of.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setFields(java.util.List),409,412,"/**
* Sets the fields in the dictionary with the provided list.
* @param fields List of PDField objects to set.
*/","* Set the documents root fields.
     *
     * @param fields The fields that are part of the documents root fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCalcOrder(java.util.List),728,731,"/**
* Adds a list of PDFields to the dictionary as a COS array.
* @param fields List of PDField objects to add.
*/","* Set the calculation order in which field values should be recalculated when the value of any
     * field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @param fields The field list.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),64,68,"/**
 * Creates a PDF button object from an AcroForm.
 * @param acroForm The AcroForm object to associate with.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setExportValues(java.util.List),270,282,"/**
 * Sets COS array to OPT if values are valid.
 * @param values List of strings to be converted to COS array
 */
","* This will set the export values.
     * 
     * @see #getExportValues()
     * @param values List containing all possible export values. Supplying null or an empty list will remove the Opt entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),52,56,"/**
 * Constructs a PDChoice object, initializing its type to CH.
 * @param acroForm The parent PDAcroForm object.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setChildren(java.util.List),160,164,"/**
 * Adds a list of child fields to the COS object.
 * @param children List of PDField objects to add.
 */
","* Sets the child fields.
     *
     * @param children The list of child fields.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(org.apache.pdfbox.cos.COSBase),214,219,"/**
* Sets the COS name ""V"" to the given COSBase object.
*/","* Sets the value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param object the new value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setDefaultValue(org.apache.pdfbox.cos.COSBase),258,261,"/**
* Sets the dictionary value for a COSName using m1() and m2().
* @param value The COSBase value to set.
*/","* Sets the default of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param value the default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,54,"/**
 * Creates a PDSignatureField from a PDAcroForm.
 * Initializes signature properties and generates a partial name.
 */
","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroForm for this field.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,48,"/**
 * Constructs a PDTextField associated with a PDAcroForm.
 * Sets the field type to text.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultStyleString(java.lang.String),166,176,"/**
* Sets default style. Null string uses COSName.DS, else COSString.
*/","* Set the default style string.
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param defaultStyleString a string describing the default style.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setRichTextValue(java.lang.String),238,248,"/**
 * Sets the rich text value. Null value clears the value.
 */","* Set the fields rich text value.
     * 
     * <p>
     * Setting the rich text value will not generate the appearance
     * for the field.
     * <br>
     * You can set {@link PDAcroForm#setNeedAppearances(Boolean)} to
     * signal a conforming reader to generate the appearance stream.
     * </p>
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param richTextValue a rich text string",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCoordSystemOrigin(float[]),311,314,"/**
* Sets the coordinate system origin using the provided array.
* @param coordSystemOrigin Array representing the origin coordinates.
*/","* This will set the origin of the coordinate system.
     * 
     * @param coordSystemOrigin the origin",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(),49,53,"/**
 * Initializes a PDThread object, setting its type to ""THREAD"".
 */","* Default constructor.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection),139,142,"/**
* Sets the transition direction using the provided direction.
* @param direction The transition direction to set.
*/","* Sets the direction in which the specified transition effect shall move. Only for {@link PDTransitionStyle#Wipe},
     * {@link PDTransitionStyle#Glitter}, {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover},
     * {@link PDTransitionStyle#Uncover} and {@link PDTransitionStyle#Push}.
     * 
     * @param direction the direction in which the specified transition effect shall move",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDuration(float),155,158,"/**
* Sets the duration for a COS object.
* @param duration The duration value to set.
*/","* @param duration The duration of the transition effect, in seconds.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyScale(float),173,176,"/**
* Sets the scale value using COSName.SS and a COSFloat.
* @param scale The scaling factor to be set.
*/","* @param scale The starting or ending scale at which the changes shall be drawn. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyAreaOpaque(boolean),191,194,"/**
* Sets the opacity of the object.
* @param opaque boolean value representing opacity.
*/","* @param opaque If true, the area that shall be flown in is rectangular and opaque. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(java.util.Collection),251,269,"/**
 * Adds all elements from the collection to the list.
 * @param c collection of elements to add
 * @return true if all elements were added
 */
",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFontColor,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFontColor(java.util.List),186,207,"/**
 * Creates a PDColor object based on operands, sets the color space.
 * @param operands List of operands for color space determination.
 * @throws IOException if operands are invalid.
 */","* Process the font color operator.
     * 
     * This is assumed to be an RGB color.
     * 
     * @param operands the color components
     * @throws IOException in case of the color components not matching",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,"org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(int,java.util.Collection)",274,293,"/**
 * Inserts all elements from a collection into the list at index.
 * @param index index at which to insert elements
 * @param c collection of elements to insert
 * @return true if the insertion was successful
 */
",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(org.apache.pdfbox.cos.COSArray),188,197,"/**
 * Processes object list, calls m2().m3() if valid.
 * @param objectList COSArray containing objects to process.
 */
","* This will add all objects to this array.
     *
     * @param objectList The list of objects to add.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toFloatArray,org.apache.pdfbox.cos.COSArray:toFloatArray(),639,648,"/**
 * Extracts numeric values from COS objects.
 * @return Array of floats extracted from COS objects.
 */","* This will take an COSArray of numbers and convert it to a float[].
     *
     * @return This COSArray as an array of float numbers.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberFloatList,org.apache.pdfbox.cos.COSArray:toCOSNumberFloatList(),703,719,"/**
 * Extracts float values from COS objects, returns them in a list.
 */","* This will return a list of float values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of float values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberIntegerList,org.apache.pdfbox.cos.COSArray:toCOSNumberIntegerList(),726,742,"/**
 * Extracts numbers from COS objects, stores them in a list.
 * m1() returns count, m2() retrieves COS object, m3() adds.
 */","* This will return a list of int values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of int values of the COSArray of COSNumbers",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateParentEntry,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",1067,1082,"/**
* Processes COSArray entries, setting parent and structure type.
* @param kArray The array to process.
* @param newParent The new parent dictionary.
* @param newStructureType Structure type to set, if provided.
*/","* Update the P reference to the new parent dictionary.
     *
     * @param kArray the kids array
     * @param newParent the new parent
     * @param newStructureType the new structure type in /S or null so it doesn't get replaced",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,hasMCIDs,org.apache.pdfbox.multipdf.Splitter$KCloner:hasMCIDs(org.apache.pdfbox.cos.COSBase),535,553,"/**
 * Checks if COSBase or its nested elements are COSIntegers.
 * @param kid The COSBase object to check.
 * @return True if COSInteger found, false otherwise.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneTreeElement,"org.apache.pdfbox.multipdf.Splitter:cloneTreeElement(java.util.Map,java.util.Map,int)",300,348,"/**
* Copies tree elements from src to dst map, handling arrays/dicts.
* @param srcNumberTreeAsMap Source tree map.
* @param dstNumberTreeAsMap Destination tree map.
* @param sp Index of the tree element.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMin,org.apache.pdfbox.pdmodel.common.PDRange:getMin(),96,100,"/**
* Retrieves the minimum value from a COSNumber array.
*/","* This will get the minimum value of the range.
     *
     * @return The min value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMax,org.apache.pdfbox.pdmodel.common.PDRange:getMax(),117,121,"/**
* Retrieves the maximum value from the range array.
*/","* This will get the maximum value of the range.
     *
     * @return The max value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getColourByIndex,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getColourByIndex(int),158,167,"/**
 * Retrieves a PDGamma object from the array at the given index.
 * @param index the index of the PDGamma object to retrieve
 * @return PDGamma object or null if the element is not a COSArray
 */","* Gets the colour by edge index.
     * 
     * @param index edge index
     * @return the colour",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getDocumentIDBytes,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getDocumentIDBytes(org.apache.pdfbox.cos.COSArray),299,314,"/**
 * Extracts document ID bytes from a COSArray.
 * @param documentIDArray COSArray containing the document ID.
 * @return Byte array of document ID or empty array if null/empty.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getOption(),81,84,"/**
* Retrieves a string value from a COSString object.
*/","* This will get the string of one of the available options. A required element.
     *
     * @return An available option.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getDefaultAppearanceString(),101,104,"/**
* Retrieves a string value from a COSString object.
*/","* This will get the string of default appearance string. A required element.
     *
     * @return A default appearance string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getInstance,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getInstance(org.apache.pdfbox.cos.COSBase),255,279,"/**
 * Resolves BlendMode from COSBase, returns NORMAL if not found.
 */","* Determines the blend mode from the BM entry in the COS ExtGState.
     *
     * @param cosBlendMode name or array
     * @return blending mode",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getColorantNames(),476,479,"/**
* Extracts colorant names from a COSArray.
* @return List of colorant names.
*/
","* Returns the list of colorants.
     * @return the list of colorants",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getAlternateColorSpace(),531,538,"/**
* Returns the alternate color space. Creates if it doesn't exist.
*/","* This will get the alternate color space for this separation.
     *
     * @return The alternate color space.
     *
     * @throws IOException If there is an error getting the alternate color
     * space.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,checkArray,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:checkArray(org.apache.pdfbox.cos.COSArray),134,144,"/**
 * Validates an ICCBased colorspace array.
 * Throws IOException if validation fails.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getHival,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getHival(),250,253,"/**
* Returns an integer value from a COSNumber object at index 2.
*/",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getColorantName(),264,268,"/**
* Retrieves a COSName value from the array at COLORANT_NAMES.
* @return COSName value or null if not found.
*/","* Returns the colorant name.
     * @return the name of the colorant",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,create,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:create(org.apache.pdfbox.cos.COSBase),46,97,"/**
 * Creates a PDDestination object from a COSBase.
 * @param base COSBase object to convert.
 * @return PDDestination object or null if invalid.
 */","* This will create a new destination depending on the type of COSBase
     * that is passed in.
     *
     * @param base The base level object.
     *
     * @return A new destination.
     *
     * @throws IOException If the base cannot be converted to a Destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPage(),66,78,"/**
 * Extracts a PDPage from an array. Returns null if extraction fails.
 */","* This will get the page for this destination. A page destination can either reference a page
     * (for a local destination) or a page number (when doing a remote destination to another PDF).
     * If this object is referencing by page number then this method will return null and
     * {@link #getPageNumber()} should be used.
     *
     * @return The page for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPageNumber(),98,110,"/**
 * Extracts a number from the array, returns -1 if array is empty.
 */","* This will get the page number for this destination. A page destination can either reference a
     * page (for a local destination) or a page number (when doing a remote destination to another
     * PDF). If this object is referencing by page number then this method will return that number,
     * otherwise -1 will be returned.
     *
     * @return The zero-based page number for this destination.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getZoom(),122,130,"/**
* Extracts a float value from array at index 4.
* Returns the value or -1 if not a COSNumber.
*/","* Get the zoom value.  Return values of 0 or -1 imply that the current zoom
     * will be used.
     *
     * @return The zoom value for the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(org.apache.pdfbox.cos.COSArray),67,77,"/**
 * Initializes a Matrix from a COSArray.
 * @param array COSArray containing matrix elements.
 */
","* Creates a matrix from a 6-element (a b c d e f) COS array.
     *
     * @param array source array, elements must be or extend COSNumber",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(java.lang.String),144,147,"/**
* Delegates to m2(COSName) with the given key converted to COSName.
*/","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,"org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",160,168,"/**
 * Retrieves a COSBase object by firstKey, or secondKey if firstKey is null.
 */","* This is a special case of getDictionaryObject that takes multiple keys, it will handle the situation where
     * multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will
     * get an object from this dictionary. If the object is a reference then it will dereference it and get it from the
     * document. If the object is COSNull then null will be returned.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName),518,526,"/**
 * Retrieves a COSName associated with a key, or null if not found.
 */","* This is a convenience method that will get the dictionary object that is expected to be a name. Null is returned
     * if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName),552,560,"/**
 * Retrieves a COSDictionary by key, or null if not found.
 * @param key The key to search for.
 * @return COSDictionary or null.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSDictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSStream,org.apache.pdfbox.cos.COSDictionary:getCOSStream(org.apache.pdfbox.cos.COSName),587,595,"/**
 * Retrieves a COSStream associated with the given key.
 * @param key COSName identifying the stream.
 * @return COSStream or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSStream. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSStream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSArray,org.apache.pdfbox.cos.COSDictionary:getCOSArray(org.apache.pdfbox.cos.COSName),604,612,"/**
 * Retrieves a COSArray associated with the given key, or null.
 * @param key The key to search for.
 * @return A COSArray object, or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSArray. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSArray.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,"org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",622,630,"/**
 * Retrieves COSName value by key, returns default if not found.
 * @param key The key to look up.
 * @param defaultValue The default value if key is not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name. Default is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The COS name.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName),651,664,"/**
 * Retrieves a string value associated with the given COS key.
 * @param key The COSName key to look up.
 * @return String value or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName),716,725,"/**
 * Retrieves string value associated with a key.
 * @param key The key to look up.
 * @return String value or null if not a COSString.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName),805,813,"/**
 * Retrieves a calendar object by key.
 * @param key COSName to search for; returns null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName,long)",1078,1087,"/**
 * Retrieves a long value associated with a COS key, defaulting to provided value.
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName,float)",1134,1143,"/**
 * Retrieves a float value associated with a COS key, defaulting to defaultValue.
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,wrapInSaveRestore,org.apache.pdfbox.multipdf.LayerUtility:wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage),89,130,"/**
 * Inserts graphics state save/restore streams into the page contents.
 */","* Some applications may not wrap their page content in a save/restore (q/Q) pair which can
     * lead to problems with coordinate system transformations when content is appended. This
     * method lets you add a q/Q pair around the existing page's content.
     * @param page the page
     * @throws IOException if an I/O error occurs",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.contentstream.operator.Operator),131,158,"/**
 * Processes an operator, writing inline image data to output.
 * Writes standard output if operator doesn't start inline image.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentStreams,org.apache.pdfbox.pdmodel.PDPage:getContentStreams(),194,212,"/**
* Extracts PDStream objects from page content stream.
* Returns an iterator over the extracted streams.
*/","* Returns the content streams which make up this page.
     * 
     * @return content stream iterator",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,hasContents,org.apache.pdfbox.pdmodel.PDPage:hasContents(),309,321,"/**
 * Checks if a page has content. Returns true if stream size > 0 or array is empty.
 */","* Returns true if this page has one or more content streams.
     * 
     * @return true if the page has a non empty content stream, otherwise false",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convertBasicTypesToMap,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary),230,270,"/**
 * Converts COSDictionary to COSDictionaryMap, handling various COS types.
 * @param map The COSDictionary to convert.
 * @return A COSDictionaryMap or null if input is null.
 */","* This will take a COS dictionary and convert it into COSDictionaryMap.  All cos
     * objects will be converted to their primitive form.
     *
     * @param map The COS mappings.
     * @return A standard java map.
     * @throws IOException If there is an error during the conversion.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),263,289,"/**
* Updates COS attribute based on the provided object.
* @param attributeObject Object containing attribute data.
*/","* Removes an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getClassNames(),328,361,"/**
 * Extracts class names from a COS object. Returns a Revisions object.
 */","* Returns the class names together with their revision numbers (C).
     * 
     * @return the class names as a list, never null.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeClassName(java.lang.String),433,463,"/**
* Processes a class name, potentially updating COS objects.
* @param className The class name to process.
*/","* Removes a class name.
     * 
     * @param className the class name",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.cos.COSBase),176,200,"/**
* Handles COSBase object, adding or updating it under key ""K"".
* @param object The COSBase object to handle.
*/","* Appends a COS base kid.
     * 
     * @param object the COS base",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",234,270,"/**
* Updates a COSBase object with a new value based on conditions.
* @param newKid The new COSBase object to set.
* @param refKid Reference COSBase object.
*/","* Inserts an COS base kid before a reference kid.
     * 
     * @param newKid the COS base
     * @param refKid the reference kid",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.cos.COSBase),309,349,"/**
* Checks if an object is present in the COS structure.
* Returns true if removed, false otherwise.
*/","* Removes a COS base kid.
     * 
     * @param object the COS base
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getK(),78,81,"/**
* Returns a COSBase object by applying m2 with COSName.K to m1().
*/","* Returns the K entry. This can be a dictionary representing a structure element, or an array
     * of them. To get it as a list of PDStructureElement objects, use {@link #getKids()} instead.
     *
     * @return the K entry.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getValue(),84,87,"/**
* Returns a COSBase object by applying m2 with COSName.V to m1().
*/","* Returns the property value.
     * 
     * @return the property value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:isEncryptMetaData(),117,127,"/**
* Checks if metadata encryption is enabled.
* Returns true if enabled, false otherwise.
*/","* Will get the EncryptMetaData dictionary info.
     *
     * @return true if EncryptMetaData is explicitly set (the default is true)",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerEncryptionKey(),351,360,"/**
 * Retrieves the owner encryption key from the dictionary.
 * @return Encryption key as byte array or null if not found.
 */","* This will get the OE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserEncryptionKey(),381,390,"/**
 * Retrieves the user encryption key from the dictionary.
 * @return User encryption key as a byte array or null.
 */","* This will get the UE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPerms(),610,619,"/**
 * Retrieves permissions from the dictionary.
 * @return byte[] permissions or null if not present.
 */","* Get the Perms entry in the encryption dictionary.
     *
     * @return A 16 byte array or null if there is no Perms entry.
     *
     * @throws IOException If there is an error accessing the data.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getPage(),421,430,"/**
 * Retrieves the page number from the annotation.
 * @return Page number as Integer, or null if not found.
 */","* This will get the page number or null if it does not exist.
     *
     * @return The page number.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getCOSValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getCOSValue(),269,284,"/**
 * Retrieves the value of a field, handling specific COS types.
 * @return COSBase value or null if the field is null.
 * @throws IOException if an unknown COS type is encountered.
 */","* Returns the COS value of this field.
     *
     * @return The COS value of the field, maybe <code>null</code>.
     * @throws IOException If there is an error getting the value.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getFieldFlags(),331,340,"/**
 * Retrieves the FF value from a COSNumber, or null if not found.
 */","* This will get the 'Ff' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetFieldFlags(),375,384,"/**
 * Retrieves the SET_FF value from the field, returns Integer.
 */","* This will get the 'SetFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearFieldFlags(),419,428,"/**
 * Retrieves the color field value from the COS object.
 * @return Integer color value or null if not found.
 */
","* This will get the 'ClrFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getWidgetFieldFlags(),463,472,"/**
 * Retrieves a value from a COSNumber object, or null if not found.
 */","* This will get the 'F' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetWidgetFieldFlags(),507,516,"/**
 * Retrieves a value from a COSNumber object, or null if not found.
 */","* This will get the 'SetF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearWidgetFieldFlags(),551,560,"/**
* Retrieves the color value from a field.
* @return Color value as Integer or null if not found.
*/","* This will get the 'ClrF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultWidth(),245,260,"/**
* Retrieves the default width, using dict.DW if available.
* Returns the defaultWidth, defaulting to 1000 if DW is missing.
*/","* This will get the default width. The default value for the default width is 1000.
     *
     * @return The default width for the glyphs in this font.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getColorSpace(),76,84,"/**
 * Retrieves the color space from the dictionary.
 * @return PDColorSpace object or null if not found.
 */
","* Returns the process color space
     * @return the process color space
     * @throws IOException if the color space cannot be read",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(org.apache.pdfbox.pdmodel.PDResources),79,86,"/**
 * Retrieves the color space, creating it if necessary.
 * @param resources PDResources object for color space creation
 * @return PDColorSpace object or existing color space.
 */
","* Returns the group color space or null if it isn't defined.
     *
     * @param resources useful for its cache. Can be null.
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(org.apache.pdfbox.cos.COSDictionary),43,51,"/**
 * Creates a PDOptionalContentGroup from a COSDictionary.
 * @param dict The COSDictionary containing OCG information.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),47,55,"/**
 * Creates a PDOptionalContentMembershipDictionary from a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getOverprintMode(),403,413,"/**
 * Retrieves an integer value from a dictionary entry.
 * Returns null if the entry is not a COSNumber.
 */","* This will get the overprint control mode.
     *
     * @return The overprint control mode or null if one has not been set.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSoftMask(),602,606,"/**
 * Retrieves the soft mask from the dictionary.
 * Returns null if no soft mask is present.
 */","* Returns the soft mask stored in the COS dictionary
     *
     * @return the soft mask or null if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFloatItem,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFloatItem(org.apache.pdfbox.cos.COSName),637,648,"/**
 * Retrieves a Float value from the dictionary for the given key.
 * @param key COSName key to retrieve the value for.
 * @return Float value or null if not found or not a COSNumber.
 */
","* This will get a float item from the dictionary.
     *
     * @param key The key to the item.
     *
     * @return The value for that item.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer(),676,684,"/**
 * Retrieves the TR value from the dictionary.
 * Returns null if it's not a COSArray of size 4.
 */","* This will get the transfer function of the /TR dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer2(),708,716,"/**
 * Retrieves COSBase from dict, validates array size, returns null if invalid.
 */","* This will get the transfer function of the /TR2 dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getBackdropColor,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getBackdropColor(),172,179,"/**
 * Returns the backdrop color COSArray, fetching if null.
 */","* Returns the backdrop color.
     * 
     * @return the backdrop color",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getOpenInNewWindow(),129,137,"/**
* Determines OpenMode based on COSBoolean value.
* Returns OpenMode.USER_PREFERENCE if no COSBoolean found.
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getT(),60,64,"/**
* Retrieves a masked value from the action.
* @return COSBase object representing the masked value.
*/
","* The annotation or annotations to be hidden or shown
     *
     * @return The T entry of the specific thread action dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getOpenInNewWindow(),212,220,"/**
* Determines OpenMode based on COSBoolean value.
* Returns OpenMode.USER_PREFERENCE if no COSBoolean found.
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getD(),92,95,"/**
 * Retrieves a COSBase object by applying action.m1 with COSName.D.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getOpenInNewWindow(),119,127,"/**
* Determines OpenMode based on COSBoolean value.
* Returns OpenMode.USER_PREFERENCE if no COSBoolean found.
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getD(),63,66,"/**
* Retrieves a masked value from the action object.
* Returns a COSBase object.
*/
",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getB(),101,104,"/**
 * Returns the mask value by applying action m1 with COSName.B.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getNamedDestination(),178,186,"/**
 * Creates a PDNamedDestination from COS data.
 * @return PDNamedDestination object or null if no string found.
 */
","* If the value in the /P entry is a string, this will get a named destination in the current
     * document that provides the page number of the file attachment annotation.
     *
     * @return a named destination or null if the /P entry value is missing or not a string.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),184,196,"/**
 * Constructs a PDAnnotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     * 
     * @param dict The annotations dictionary.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(),319,327,"/**
 * Retrieves the contents as a byte array. Returns empty array if not a COSString.
 */","* Returns the /Contents string as a byte array, i.e. the embedded signature between the
     * byterange gap.
     *
     * @return a byte array containing the signature, or an empty array if there isn't any.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getXFA(),584,588,"/**
 * Creates a PDXFAResource from the XFA dictionary, or null if absent.
 */","* Get the XFA resource, the XFA resource is only used for PDF 1.5+ forms.
     *
     * @return The xfa resource or null if it does not exist.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptions(),87,91,"/**
* Extracts a list of strings from COSBase values.
*/","* This will get the option values ""Opt"".
     * 
     * <p>
     * For a choice field the options array can either be an array
     * of text strings or an array of a two-element arrays.<br>
     * The method always only returns either the text strings or,
     * in case of two-element arrays, an array of the first element of 
     * the two-element arrays
     * </p>   
     * <p>
     * Use {@link #getOptionsExportValues()} and {@link #getOptionsDisplayValues()}
     * to get the entries of two-element arrays.
     * </p>
     * 
     * @return List containing the export values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsDisplayValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsDisplayValues(),191,195,"/**
* Extracts a list of strings from COSBase values.
*/","* This will get the display values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the display value is the 
     * second entry in the two-element array.
     * </p>
     * 
     * @return List containing all the display values.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueFor,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueFor(org.apache.pdfbox.cos.COSName),451,463,"/**
 * Extracts string list from COS value.
 * @param name COSName to look up; returns empty list if not found.
 */","* Returns the selected values, or an empty List, for the given key.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getInheritableAttribute,org.apache.pdfbox.pdmodel.interactive.form.PDField:getInheritableAttribute(org.apache.pdfbox.cos.COSName),88,102,"/**
 * Retrieves a COSBase object from the dictionary or parent.
 * @param key The key to search for.
 * @return The COSBase object or null if not found.
 */
","* Returns the given attribute, inheriting from parent nodes if necessary.
     *
     * @param key the key to look up
     * @return COS value for the given key",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValue(),187,190,"/**
* Returns a COSBase object by applying m2 with COSName.V to m1().
*/","* Returns the COSBase value of the ""V"" entry.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the COSBase value of the ""V"" entry",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValueAsString(),198,203,"/**
* Returns string value of COS field, or """" if null.
*/","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getDefaultValue(),244,247,"/**
* Returns a COSBase object by applying m2 with COSName.DV to m1().
*/","* Returns the default value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the new default value",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,toString,org.apache.pdfbox.cos.COSDictionary:toString(),1343,1355,"/**
 * Executes a process and returns the result or an error message.
 */",* {@inheritDoc},,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSArray:getIndirectObjectKeys(java.util.Collection),807,859,"/**
* Processes COS objects, adding keys to the indirectObjects collection.
*/","* Collects all indirect objects numbers within this COSArray and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setHighestImportedObjectNumber,org.apache.pdfbox.pdmodel.PDDocument:setHighestImportedObjectNumber(org.apache.pdfbox.pdmodel.PDPage),723,731,"/**
 * Updates page references and sets the highest XRef object number.
 */","* Determine the highest object number from the imported page to avoid mixed up numbers when saving the new pdf.
     * 
     * @param importedPage the imported page.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,close,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:close(),156,173,"/**
 * Calls m1() on visualSignature and pdfSource, handling potential IO exceptions.
 */","* Closes the visual signature COSDocument, if any. Do not call this before you're saved your
     * signed PDF document, or saving will fail because COSStream objects held both by the
     * COSDocument and by the signed document would no longer be available.
     *
     * @throws IOException if the document could not be closed",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSArray,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSArray(org.apache.pdfbox.cos.COSArray),126,142,"/**
 * Processes a COSArray, creating a new array based on values.
 * @param array The input COSArray to process.
 * @return A new COSArray containing processed values.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSDictionary(org.apache.pdfbox.cos.COSDictionary),168,185,"/**
 * Creates a new COSDictionary by cloning the input, masking certain values.
 * @param dictionary The COSDictionary to clone and mask.
 * @return A new COSDictionary with masked values.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,"org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",583,605,"/**
* Adds a COS object with its key to the current dictionary.
* @param key COSObjectKey identifying the object
* @param obj COSBase object to be added
*/","* This will write a COS object for a predefined key.
     *
     * @param key The key of the object to write.
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeReference,org.apache.pdfbox.pdfwriter.COSWriter:writeReference(org.apache.pdfbox.cos.COSBase),1381,1389,"/**
* Writes COS object details to the output stream.
* @param obj The COSBase object to process.
*/","* visitFromObjRef method comment.
     *
     * @param obj The object that is being visited.
     *
     * @throws IOException If there is an exception while visiting this object.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getKey(org.apache.pdfbox.cos.COSBase),267,270,"/**
 * Retrieves a COSObjectKey from the object pool.
 * @param object The COSBase object to look up.
 * @return The corresponding COSObjectKey.
 */
","* Returns the {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} is registered for in this compression pool.
     * @return The {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool, if
     * such an object is contained.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,put,"org.apache.pdfbox.pdfwriter.compress.COSObjectPool:put(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",59,83,"/**
* Updates COSObjectKey, assigning a new one if needed.
* @param key Existing key, may be updated.
* @param object COSBase object associated with the key.
* @return Updated COSObjectKey.
*/
","* Update the key and object maps.
     *
     * @param key The key, that shall be added.
     * @param object The object, that shall be added.
     * @return The actual key, the object has been added for.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:contains(org.apache.pdfbox.cos.COSBase),255,258,"/**
* Delegates object processing to the object pool.
* @param object The COSBase object to process.
* @return True if processed successfully, false otherwise.
*/
","* Returns true, if the given {@link COSBase} is a registered object of this compression pool.
     *
     * @param object The object, that shall be checked.
     * @return True, if the given {@link COSBase} is a registered object of this compression pool.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,createObjectStreams,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:createObjectStreams(),302,317,"/**
 * Creates a list of COSWriterObjectStream for objects.
 * Creates new streams periodically based on parameters.
 * @return List of COSWriterObjectStream objects.
 */
","* Creates {@link COSWriterObjectStream}s for all currently registered objects of this pool, that have been marked
     * as fit for being compressed in this manner. Such object streams may be added to a PDF document and shall be
     * declared in a document's {@link PDFXRefStream} accordingly. The objects contained in such a stream must not be
     * added to the document separately.
     *
     * @return The created {@link COSWriterObjectStream}s for all currently registered compressible objects.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,readFromDecoderStream,"org.apache.pdfbox.filter.CCITTFaxFilter:readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",126,139,"/**
 * Reads data from the decoder stream into the result buffer.
 */",,,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,processLines,"org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:processLines(java.util.List,boolean)",201,259,"/**
 * Positions and adds lines to the content based on alignment.
 * @param lines List of lines to process
 * @param isFirstParagraph Flag indicating first paragraph
 */","* Process lines for output. 
     *
     * Process lines for an individual paragraph and generate the 
     * commands for the content stream to show the text.
     * 
     * @param lines the lines to process.
     * @throws IOException if there is an error writing to the stream.",,,True,9
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addFirstIntermediateCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addFirstIntermediateCurl(double,double,double,double,double)",444,453,"/**
* Draws arcs using helper method m1 with specified parameters.
* @param angleCur Current angle, r radius, alpha angle offset.
*/",* Generates the first intermediate curl for a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getIntermediateCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getIntermediateCurlTemplate(double,double)",458,470,"/**
 * Generates a set of points based on the given angle and radius.
 * @param angleCur Current angle.
 * @param r Radius.
 * @return Array of Point2D.Double objects.
 */",* Returns a template for intermediate curls in a cloudy polygon.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArc,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",592,631,"/**
 * Draws an arc segment.
 * @param startAng start angle, end angle, rx, ry, cx, cy, out, addMoveTo
 */","* Creates one or more Bézier curves that represent an elliptical arc.
     * Angles are in radians.
     * The arc will always proceed in the positive angle direction.
     * If the argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.pdmodel.PDDocument),75,81,"/**
 * Constructs a PDICCBased object from a PDDocument.
 * @param doc The document containing the ICC profile.
 */
","* Creates a new ICC color space with an empty stream.
     * @param doc the document to store the ICC data",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",59,66,"/**
 * Constructs a PDPattern with given resources and color space.
 */
","* Creates a new uncolored tiling pattern color space.
     * 
     * @param resources The current resources.
     * @param colorSpace The underlying color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setOCGs(java.util.List),93,101,"/**
* Adds OCGs to the dictionary as a COS array.
* @param ocgs List of PDPropertyList objects to add.
*/
","* Set optional content groups as a list.
     * 
     * @param ocgs list of optional content groups to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),100,108,"/**
* Adds number format changes to the COS array.
* @param changeXs Array of PDNumberFormatDictionary objects.
*/
","* This will set the changes along the x-axis.
     * 
     * @param changeXs changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),137,145,"/**
* Adds number format changes to the Y dictionary.
* @param changeYs Array of PDNumberFormatDictionary objects.
*/
","* This will set the changes along the y-axis.
     * 
     * @param changeYs changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),174,182,"/**
 * Adds distance formats to the dictionary.
 * @param distances Array of PDNumberFormatDictionary objects.
 */","* This will set the distances.
     * 
     * @param distances distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),211,219,"/**
 * Adds number format dictionaries to a COS array.
 * @param areas Array of PDNumberFormatDictionary objects.
 */","* This will set the areas.
     * 
     * @param areas areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),248,256,"/**
* Adds angle formats to the dictionary.
* @param angles Array of PDNumberFormatDictionary objects
*/
","* This will set the angles.
     * 
     * @param angles angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),285,293,"/**
* Adds number format dictionaries to the COS array.
* @param lineSloaps Array of PDNumberFormatDictionary objects.
*/
","* This will set the sloaps of a line.
     * 
     * @param lineSloaps the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,org.apache.pdfbox.cos.COSArray:growToSize(int),598,601,"/**
 * Overloads m1 with a null value for the second parameter.
 * @param size The size parameter to pass to the overloaded method.
 */","* This will add null values until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseDirObject,org.apache.pdfbox.pdfparser.BaseParser:parseDirObject(),948,1016,"/**
 * Parses a COSBase object based on the current source context.
 * @return Parsed COSBase object or null if parsing fails.
 * @throws IOException if an unexpected character is encountered.
 */","* This will parse a directory object from the stream.
     *
     * @return The parsed object.
     *
     * @throws IOException If there is an error during parsing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:setDecodeParms(java.util.List),324,328,"/**
* Sets decode parameters for the stream.
* @param decodeParams List of decode parameters to set.
*/","* This will set the list of decode parameters.
     * 
     * @param decodeParams The list of decode parameters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:setFileDecodeParams(java.util.List),389,392,"/**
* Sets decode parameters for the stream.
* @param decodeParams List of decode parameters to set.
*/","* This will set the list of decode params.
     * 
     * @param decodeParams The list of decode params.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,setKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:setKids(java.util.List),140,144,"/**
* Sets the 'kids' list using m2() and m3().
* @param kids List of objects to be set.
*/","* Sets the kids (K).
     * 
     * @param kids the kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:setOptions(java.util.List),691,695,"/**
* Sets the 'OPT' field of the field object to the provided options.
* @param options List of options to be set.
*/","* This will set the options for the choice field.
     * The objects in the list should either be <code>String</code> or {@link FDFOptionElement}.
     *
     * @param options The options to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getRangeForComponent,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getRangeForComponent(int),441,449,"/**
 * Creates a PDRange based on stream data.
 * @param n An integer value used in PDRange construction.
 * @return A PDRange object or an empty PDRange if conditions fail.
 */
","* Returns the range for a certain component number.
     * This will never return null.
     * If it is not present then the range 0..1 will be returned.
     * @param n the component number to get the range for
     * @return the range for this component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(org.apache.pdfbox.cos.COSDictionary),398,410,"/**
* Sets font widths in COSDictionary.
* @param cidFont COSDictionary to update with font widths.
*/",* Build widths with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),324,327,"/**
* Sets the dash pattern for a PDF object.
* @param dashPattern The PDF line dash pattern object.
*/","* This will set the dash pattern for the graphics state.
     *
     * @param dashPattern The dash pattern",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuideLineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),106,114,"/**
 * Sets the color values in the dictionary.
 * @param color The PDColor object containing color values.
 */
","* Set the color space instance for this box style.  This must be a
     * PDDeviceRGB!
     *
     * @param color The new colorspace value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),778,781,"/**
* Sets the color value for a COS object.
* @param c The PDColor object containing the color data.
*/","* This will set the color used in drawing various elements. As of PDF 1.6 these are : Background of icon when
     * closed Title bar of popup window Border of a link annotation
     * 
     * Colour is in DeviceRGB colourspace
     * 
     * @param c colour in the DeviceRGB colourspace
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),230,233,"/**
* Sets the IC color value using the provided PDColor object.
*/","* This will set interior color of the line endings defined in the LE entry. color is in DeviceRGB color space.
     *
     * @param ic color in the DeviceRGB color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),66,69,"/**
* Sets the IC (Image Color) value in the PDF dictionary.
* @param ic The PDColor object containing the IC value.
*/
","* This will set interior color.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),136,139,"/**
* Sets the IC (Indirect Color) value in the PDF dictionary.
* @param ic The PDColor object containing the IC value.
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param ic color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),63,66,"/**
* Sets the IC (image color) value in the PDF dictionary.
* @param ic The PDColor object containing the color information.
*/","* This will set interior color of the drawn area color is in DeviceRGB colorspace.
     *
     * @param ic color in the DeviceRGB color space.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor),96,99,"/**
* Sets the color to be used for a page.
* @param c The PDColor object representing the color.
*/","* This will set the border color.
     * 
     * @param c the border color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor),116,119,"/**
* Sets the background color for the current object.
* @param c The PDColor object representing the background color.
*/","* This will set the background color.
     * 
     * @param c the background color",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),340,343,"/**
* Sets the text color of the document to the given color.
* @param textColor The PDColor object representing the color.
*/","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage(java.awt.image.WritableRaster),146,197,"/**
 * Converts a raster to an alternate color space representation.
 * @param raster input raster to convert
 * @return BufferedImage with converted raster
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isGray,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1964,1983,"/**
 * Checks if a color space is a device gray or contains one.
 * @param colorSpace The color space to check.
 * @return True if it's a device gray or contains one, false otherwise.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",80,84,"/**
* Creates a PDImageXObject from an input stream.
* @param document PDDocument object
* @param stream Input stream containing image data
* @return PDImageXObject or null if error occurs
*/
","* Creates a new JPEG Image XObject from an input stream containing JPEG data.
     * 
     * The input stream data will be preserved and embedded in the PDF file without modification.
     * @param document the document where the image will be created
     * @param stream a stream of JPEG data
     * @return a new Image XObject
     * 
     * @throws IOException if the input stream cannot be read",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFont(org.apache.pdfbox.pdmodel.font.PDFont),94,97,"/**
* Sets the font using the provided font object via m1.
* @param font The PDFont object to set.
*/
","* This will set the font for this font setting.
     *
     * @param font The new font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),577,581,"/**
 * Applies a tint transformation to the PDFunction and updates array.
 * @param tint The PDFunction to apply as a tint.
 */
","* This will set the tint transform function.
     *
     * @param tint The tint transform function.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),298,302,"/**
 * Applies a tint transformation and updates the array.
 * @param tint The tint transformation to apply.
 */","* Sets the tint transform function.
     * @param tint the tint transform function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPage(org.apache.pdfbox.pdmodel.PDPage),85,88,"/**
* Calls array.m1 with the given PDPage as an argument.
*/","* Set the page for a local destination. For an external destination, call {@link #setPageNumber(int) setPageNumber(int pageNumber)}.
     *
     * @param page The page for a local destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,adjustRectAndBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,float,float)",166,192,"/**
* Calculates and sets rectangle bounds for an annotation.
* @param annotation The annotation to modify.
* @param width Rectangle width.
* @param height Rectangle height.
* @return The calculated PDRectangle.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,createRetranslatedRectangle,org.apache.pdfbox.pdmodel.common.PDRectangle:createRetranslatedRectangle(),192,198,"/**
 * Creates a PDRectangle by applying m1() and m3() values.
 * @return A new PDRectangle object.
 */
","* This will create a translated rectangle based off of this rectangle, such
     * that the new rectangle retains the same dimensions(height/width), but the
     * lower left x,y values are zero. <br>
     * 100, 100, 400, 400 (llx, lly, urx, ury ) <br>
     * will be translated to 0,0,300,300
     *
     * @return A new rectangle that has been translated back to the origin.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureRectangle,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",149,163,"/**
 * Creates a signature rectangle and sets its properties.
 * Uses properties from PDVisibleSignDesigner.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createFormatterRectangle,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createFormatterRectangle(int[]),192,203,"/**
 * Creates a formatter rectangle using input parameters.
 * @param params Array of integers used to define rectangle dimensions.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),76,79,"/**
 * Sets the colour to 0 using the m1 method.
 * @param colour The colour to be applied.
 */
","* Sets the colour for the before edge.
     * 
     * @param colour the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),96,99,"/**
 * Calls m1 with a given colour.
 * @param colour The colour to pass to m1.
 */
","* Sets the colour for the after edge.
     * 
     * @param colour the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),116,119,"/**
 * Calls m1 with a specific value and the provided colour.
 * @param colour The colour to pass to m1.
 */
","* Sets the colour for the start edge.
     * 
     * @param colour the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),136,139,"/**
* Calls m1 with a fixed value (3) and the provided colour.
* @param colour The PDGamma colour to pass to m1.
*/","* Sets the colour for the end edge.
     * 
     * @param colour the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decrypt,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decrypt(org.apache.pdfbox.cos.COSBase,long,long)",455,487,"/**
 * Processes a COS object, decrypting strings and handling streams/arrays.
 * @param obj The COSBase object to process.
 */","* This will dispatch to the correct method.
     *
     * @param obj The object to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation Number.
     * 
     * @return the encrypted/decrypted COS object
     *
     * @throws IOException If there is an error getting the stream data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",243,246,"/**
* Calls m2 with a COSName created from the key.
* @param key The key to create a COSName from.
* @param value The value to be passed to m2.
*/
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),153,157,"/**
* Sets the PDF form.
* @param acroForm The PDF AcroForm object to set.
*/","* Sets the AcroForm for this catalog.
     *
     * @param acroForm The new AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences),186,189,"/**
* Sets viewer preferences in the root object.
* @param prefs The PDViewerPreferences object to set.
*/","* Sets the viewer preferences.
     *
     * @param prefs The new viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline),207,210,"/**
* Adds outlines to the PDF document root.
* @param outlines The PDF document outline object.
*/","* Sets the document outlines.
     *
     * @param outlines The new document outlines.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),263,266,"/**
* Sets metadata on the root object.
* @param meta The metadata object to set.
*/
","* Sets the metadata for this object. This can be null.
     *
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction),273,276,"/**
* Sets the open action for the root object.
* @param action The destination or action to set.
*/","* Sets the Document Open Action for this object.
     *
     * @param action The action you want to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions),319,322,"/**
* Adds additional actions to the document catalog.
* @param actions The PDDocumentCatalogAdditionalActions object.
*/
","* Sets the additional actions for the document.
     *
     * @param actions The actions that are associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary),379,382,"/**
* Sets the names dictionary in the root object.
* @param names The dictionary to set.
*/","* Sets the names dictionary for the document.
     *
     * @param names The names dictionary that is associated with this document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo),401,404,"/**
* Sets the mark information on the root object.
* @param markInfo The PDMarkInfo object to set.
*/","* Set information about the doc's usage of tagged features.
     *
     * @param markInfo The new MarkInfo data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary),548,551,"/**
* Sets the URI for the root object using the provided dictionary.
* @param uri The PDURIDictionary to set as the URI.
*/
","* Sets the document level URI.
     *
     * @param uri The new document level URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot),569,572,"/**
 * Registers the root of a structure tree.
 * @param treeRoot The root node of the structure tree.
 */","* Sets the document's structure tree root.
     *
     * @param treeRoot The new structure tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels),631,634,"/**
* Sets page labels in the PDF document's root object.
* @param labels The PDPageLabels object to set.
*/
","* Sets the page label descriptor for the document.
     *
     * @param labels the new page label descriptor to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode),96,105,"/**
* Sets destination names in the name dictionary and catalog.
* @param dests Destination name tree node to set.
*/","* Set the named destinations that are associated with this document.
     *
     * @param dests The destination names.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode),124,127,"/**
* Adds embedded files name tree node to the name dictionary.
* @param ef The PDEmbeddedFilesNameTreeNode to add.
*/","* Set the named embedded files that are associated with this document.
     *
     * @param ef The new embedded files",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setJavascript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode),147,150,"/**
* Adds a JavaScript name tree node to the name dictionary.
* @param js The PDJavascriptNameTreeNode to add.
*/
","* Set the named javascript entries that are associated with this document.
     *
     * @param js The new Javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),92,97,"/**
 * Creates a new PDF page with the given media box dimensions.
 * @param mediaBox The rectangle defining the page's media box.
 */
","* Creates a new instance of PDPage for embedding.
     * 
     * @param mediaBox The MediaBox of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setResources,org.apache.pdfbox.pdmodel.PDPage:setResources(org.apache.pdfbox.pdmodel.PDResources),347,358,"/**
 * Sets page resources, adding or removing the RESOURCES dictionary.
 * @param resources PDResources object to set, or null to remove.
 */","* This will set the resources for this page.
     * 
     * @param resources The new resources for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMediaBox,org.apache.pdfbox.pdmodel.PDPage:setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),423,434,"/**
 * Sets the media box for the page.
 * @param mediaBox The media box rectangle. Null to remove.
 */","* This will set the mediaBox for this page.
     * 
     * @param mediaBox The new mediaBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setBleedBox,org.apache.pdfbox.pdmodel.PDPage:setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle),490,500,"/**
 * Sets the bleed box for the page. Null value removes it.
 * @param bleedBox The bleed box rectangle, or null to remove.
 */","* This will set the BleedBox for this page.
     * 
     * @param bleedBox The new BleedBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTrimBox,org.apache.pdfbox.pdmodel.PDPage:setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle),519,529,"/**
 * Sets the trim box of the page. Null trimBox clears the value.
 * @param trimBox The rectangle representing the trim box.
 */
","* This will set the TrimBox for this page.
     * 
     * @param trimBox The new TrimBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setArtBox,org.apache.pdfbox.pdmodel.PDPage:setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle),549,559,"/**
* Sets the art box on the page. Null artBox clears the value.
* @param artBox Rectangle object representing the art box.
*/
","* This will set the ArtBox for this page.
     * 
     * @param artBox The new ArtBox for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(org.apache.pdfbox.pdmodel.common.PDStream),612,615,"/**
* Sets the page contents stream.
* @param contents The COS stream representing page content.
*/
","* This will set the contents of this page.
     * 
     * @param contents The new contents of the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMetadata,org.apache.pdfbox.pdmodel.PDPage:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),683,686,"/**
* Adds metadata to the page.
* @param meta The metadata object to add.
*/","* Set the metadata for this object. This can be null.
     * 
     * @param meta The meta data for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setActions,org.apache.pdfbox.pdmodel.PDPage:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions),709,712,"/**
* Adds additional actions to the page.
* @param actions The PDPageAdditionalActions to add.
*/
","* Set the page actions.
     * 
     * @param actions The actions for the page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition),726,729,"/**
* Adds a transition to the page's appearance dictionary.
* @param transition The transition object to add.
*/
",* @param transition The new transition to set on this page.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,"org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",738,742,"/**
 * Applies a transition and duration to a page.
 * @param transition The transition to apply.
 * @param duration The duration of the transition in seconds.
 */
","* Convenient method to set a transition and the display duration
     * 
     * @param transition The new transition to set on this page.
     * @param duration The maximum length of time, in seconds, that the page shall be displayed during presentations
     * before the viewer application shall automatically advance to the next page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setPage(org.apache.pdfbox.pdmodel.PDPage),79,82,"/**
* Sets the page of the document.
* @param page The PDPage to set.
*/","* Sets the page.
     * 
     * @param page the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),135,138,"/**
* Adds an annotation to the document's object dictionary.
* @param annotation The annotation object to add.
*/","* Sets the referenced annotation.
     * 
     * @param annotation the referenced annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),145,148,"/**
* Associates an object with a COS name.
* @param xobject The PDXObject to associate.
*/","* Sets the referenced XObject.
     * 
     * @param xobject the referenced XObject",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setPage(org.apache.pdfbox.pdmodel.PDPage),172,175,"/**
* Sets the page of the PDF document.
* @param page The PDF page to set.
*/
","* Sets the page on which the object shall be rendered. This is optional and overrides the /PG
     * entry in the structure element containing the object reference; shall be used if the
     * structure element contained no such entry.
     *
     * @param page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode),107,110,"/**
* Delegates processing of a structure node to m1().m2().
* @param structureNode The PDStructureNode to process.
*/","* Sets the parent in the structure hierarchy (P).
     * 
     * @param structureNode the parent in the structure hierarchy",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setPage(org.apache.pdfbox.pdmodel.PDPage),151,154,"/**
* Sets the page of the PDF document.
* @param page The PDF page to set.
*/
","* Sets the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * @param page the page on which some or all of the content items designated
     *  by the K entry shall be rendered.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),203,227,"/**
* Processes attributes, either directly or by creating an array.
* @param attributes Revisions of PDAttributeObject instances.
*/","* Sets the attributes together with their revision numbers (A).
     * 
     * @param attributes the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),109,112,"/**
* Sets the ID tree for the document structure.
* @param idTree The ID tree to set.
*/","* Sets the ID tree.
     * 
     * @param idTree the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),144,147,"/**
* Sets the parent tree node for the current object.
* @param parentTree The parent tree node to set.
*/","* Sets the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     * <p>
     * To create an empty parent tree, call {@code new PDNumberTreeNode(PDParentTreeValue.class)}.
     *
     * @param parentTree the parent tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),722,725,"/**
* Annotates a rectangle using the provided rectangle object.
*/","* Set the rectangle associated with this annotation.
     *
     * @param rectangle The annotation rectangle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),887,890,"/**
* Sets the border style dictionary for the annotation.
* @param bs The PDBorderStyleDictionary to set.
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the annotation.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),911,914,"/**
* Adds a border effect dictionary to the annotation.
* @param be The PDBorderEffectDictionary to add.
*/","* This will set the border effect dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @param be the border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),104,107,"/**
* Annotates a rectangle fringe using COSName.RD.
* @param fringe The PDRectangle to annotate.
*/","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),141,144,"/**
* Adds a fringe rectangle to the annotation.
* @param fringe The PDRectangle to add.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),260,263,"/**
* Annotates a rectangle with a COSName.RD value.
* @param fringe The PDRectangle to annotate.
*/","* This will set the fringe rectangle. Giving the difference between the annotations rectangle
     * and where the drawing occurs. (To take account of any effects applied through the BE entry
     * for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),142,145,"/**
* Adds a fringe rectangle to the annotation.
* @param fringe The PDRectangle to add.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary),137,140,"/**
* Associates an FDF dictionary with the catalog.
* @param fdf The FDF dictionary to associate.
*/","* This will set the FDF document.
     *
     * @param fdf The new FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),158,161,"/**
* Associates a signature with the catalog using the COSName.SIG key.
* @param sig The signature object to associate.
*/","* This will set the signature that is associated with this catalog.
     *
     * @param sig The new signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),295,298,"/**
* Sets the file specification for the FDF object.
* @param fs The PDFileSpecification to set.
*/","* This will set the file specification.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript),555,558,"/**
* Adds a JavaScript object to the FDF document.
* @param js The FDFJavaScript object to add.
*/
","* This will set the JavaScript entry.
     *
     * @param js The javascript entries.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,setCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog),161,165,"/**
* Sets the FDF catalog in the document trailer.
* @param cat The FDF catalog to set.
*/","* This will set the FDF catalog for this FDF document.
     *
     * @param cat The FDF catalog.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),605,608,"/**
* Sets the appearance dictionary for the field.
* @param ap The appearance dictionary to set.
*/
","* This will set the appearance dictionary.
     *
     * @param ap The appearance dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),626,629,"/**
* Sets the AP reference for the field.
* @param ref FDFNamedPageReference object to set
*/","* This will set the named page references.
     *
     * @param ref The named page references.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit),647,650,"/**
* Sets the FDF icon fit for the field.
* @param fit The FDFIconFit object to set.
*/
","* This will set the icon fit 'IF' entry.
     *
     * @param fit The icon fit object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAction,org.apache.pdfbox.pdmodel.fdf.FDFField:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),712,715,"/**
* Sets the 'A' property of the field to the given PDAction.
* @param a The PDAction to set.
*/
","* This will set the action that is associated with this field.
     *
     * @param a The new action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions),733,736,"/**
* Sets the additional actions for the field.
* @param aa The PDAdditionalActions object to set.
*/
","* This will set the additional actions that are associated with this field.
     *
     * @param aa The additional actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange),174,177,"/**
* Applies a PDRange to a COSName 'A' using the fit object.
* @param space The PDRange to be applied.
*/","* This will set frational space to allocate.
     *
     * @param space The space to allocate.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),101,104,"/**
* Sets the file specification for the reference object.
* @param fs The PDFileSpecification object to set.
*/","* This will set the file specification for this named page reference.
     *
     * @param fs The file specification to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo),117,120,"/**
* Adds page information to the PDF page.
* @param info FDFPageInfo object containing page details
*/
","* This will set the page info.
     *
     * @param info The new page info dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),82,85,"/**
* Sets the template reference using the provided FDFNamedPageReference.
*/","* This will set the template reference.
     *
     * @param tRef The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDToGIDMap(java.util.TreeMap),233,254,"/**
* Writes CID-to-GID mapping to a PDF stream.
* @param cidToGid Map of CID to GID integers.
* @throws IOException if stream writing fails.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile(org.apache.pdfbox.pdmodel.common.PDStream),737,740,"/**
* Associates a PDStream (likely a font) with the dictionary.
* @param type1Stream The PDStream to associate.
*/","* Set the type 1 font program.
     *
     * @param type1Stream The type 1 stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream),758,761,"/**
* Associates a TTF stream with the dictionary using a specific key.
* @param ttfStream The TTF stream to associate.
*/","* Set the true type font program.
     *
     * @param ttfStream The true type stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream),779,782,"/**
* Associates a PDStream with the COSName FONT_FILE3 in the dictionary.
*/","* Set a stream containing a font program that is not true type or type 1.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream),800,803,"/**
* Sets the CID set for the given PDF stream.
* @param stream The PDF stream to associate with the CID set.
*/
","* Set a stream containing a CIDSet.
     *
     * @param stream The font program stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),155,163,"/**
 * Sets the whitepoint in the dictionary and calls m2.
 * @param whitepoint The whitepoint value; must not be null.
 */
","* This will set the whitepoint tristimulus. As this is a required field, null should not be
     * passed into this function.
     *
     * @param whitepoint the whitepoint tristimulus.
     * @throws IllegalArgumentException if null is passed as argument.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),170,173,"/**
* Sets the black point in the dictionary.
* @param blackpoint The black point tristimulus value.
*/","* This will set the BlackPoint tristimulus.
     *
     * @param blackpoint the BlackPoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",43,50,"/**
 * Creates a PDOutputIntent object.
 * @param doc The document.
 * @param colorProfile Input color profile stream.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),79,83,"/**
* Sets the extended graphics state.
* @param extendedGraphicsState The graphics state to set.
*/","* This will set the external graphics state for this pattern.
     * @param extendedGraphicsState The new extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),107,111,"/**
* Sets the shading resources and registers it with m1().
* @param shadingResources The shading resources to set.
*/
","* This will set the shading resources for this pattern.
     * @param shadingResources The new shading resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setResources(org.apache.pdfbox.pdmodel.PDResources),209,212,"/**
* Sets the resources for the PDF object.
* @param resources The PDResources object to set.
*/","* This will set the resources for this pattern.
     * @param resources The new resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction),312,317,"/**
* Sets the current PDFunction and updates internal state.
* @param newFunction The new PDFunction to set.
*/
","* This will set the function for the color conversion.
     *
     * @param newFunction the new function",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting),448,451,"/**
* Sets the font setting in the dictionary.
* @param fs The PDFontSetting object to set.
*/","* This will set the font setting for this graphics state.
     *
     * @param fs The new font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),82,99,"/**
 * Validates GoToE action destination and sets the destination.
 * @param d The destination object to validate and set.
 */","* This will set the destination to jump to.
     *
     * @param d The destination.
     *
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),118,121,"/**
* Sets the file specification for the PDF document.
* @param fs The PDFileSpecification to set.
*/","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),184,187,"/**
* Sets the target directory using the provided PDTargetDirectory.
*/","* Sets the target directory.
     * 
     * @param targetDirectory the target directory",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),78,95,"/**
 * Validates destination and sets the destination object.
 * @param d The destination object to validate and set.
 */","* This will set the destination to jump to.
     *
     * @param d The destination.
     * 
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),71,74,"/**
* Calls action.m1 with COSName.F and the provided file specification.
* @param fs The PDFileSpecification object to pass to action.m1.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),84,87,"/**
* Sets the file specification for the PDF document.
* @param fs The file specification object to set.
*/
","* This will set the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams),105,108,"/**
* Calls action.m1 with COSName.WIN and the given launch params.
*/","* This will set a dictionary containing Windows-specific launch parameters.
     *
     * @param win The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),76,79,"/**
* Calls action.m1 with COSName.F and the provided file specification.
* @param fs The PDFileSpecification object to pass.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),74,77,"/**
* Calls action.m1 with COSName.F and the provided file specification.
* @param fs The PDFileSpecification object to pass.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),92,95,"/**
* Calls action.m1 with COSName.F and the given file specification.
*/","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),76,79,"/**
* Executes a PDAction with the COSName ""F"" using the actions object.
* @param action The PDAction to execute.
*/
","* Set the F action.
     *
     * @param action Get the F action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction),81,84,"/**
* Executes action 'E' on the provided PDAction object.
* @param e The PDAction to be processed.
*/","* This will set an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @param e The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
* Calls actions.m1 with COSName.X and the given PDAction.
*/","* This will set an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @param x The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction),129,132,"/**
* Adds a PDAction to the actions list with the key ""D"".
* @param d The PDAction to add.
*/
","* This will set an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @param d The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction),154,157,"/**
* Registers an action with the specified PDAction object.
*/","* This will set an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @param u The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction),177,180,"/**
* Registers a PDAction object with the actions map.
* @param fo The PDAction object to register.
*/
","* This will set an action to be performed when the annotation
     * receives the input focus.
     *
     * @param fo The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction),202,205,"/**
* Registers a BL action with the actions list.
* @param bl The BL action to register.
*/","* This will set an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @param bl The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),229,232,"/**
* Executes a PO action using the provided PDAction object.
*/","* This will set an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @param po The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),254,257,"/**
* Calls actions.m1 with COSName.PC and the provided PDAction.
*/","* This will set an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @param pc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),277,280,"/**
* Calls actions.m1 with COSName.PV and the provided PDAction.
*/","* This will set an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @param pv The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction),300,303,"/**
* Executes a PDAction using COSName.PI.
* @param pi The PDAction to be executed.
*/
","* This will set an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @param pi The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),83,86,"/**
* Registers a WC action with the actions list.
* @param wc The WC action to register.
*/","* This will set a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @param wc The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),108,111,"/**
* Registers a document action with the actions list.
* @param ws The document action to register.
*/","* This will set a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @param ws The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),133,136,"/**
* Executes a DS action using the provided PDAction object.
*/","* This will set a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @param ds The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),158,161,"/**
 * Executes a WP action using the provided PDAction object.
 * @param wp The PDAction to execute.
 */
","* This will set a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @param wp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),183,186,"/**
* Registers a DP action with the actions list.
* @param dp The DP action to register.
*/","* This will set a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @param dp The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Registers a PDAction with the actions map using COSName.K.
* @param k The PDAction to register.
*/","* This will set a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @param k The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Registers an action with the actions map using COSName.F.
* @param f The PDAction to register.
*/
","* This will set a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @param f The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),137,140,"/**
* Adds a PDAction to the actions list with the key ""V"".
* @param v The PDAction to add.
*/
","* This will set a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @param v The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),166,169,"/**
* Registers a PDAction object with the actions map.
* @param c the PDAction object to register
*/","* This will set a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Registers an action with the specified COS name.
* @param o The action to register.
*/
","* This will set an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @param o The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Executes a PDAction with the COSName ""C"".
* @param c The PDAction to execute.
*/
","* This will set an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @param c The action to be performed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),138,141,"/**
* Sets the target directory for the dictionary.
* @param targetDirectory The target directory object.
*/","* Sets the target directory.
     *
     * @param targetDirectory the target directory or null if the current document is the target
     * file containing the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),194,204,"/**
 * Sets the page destination. Null dest clears it.
 * @param dest The destination to set, or null to clear.
 */","* This will set a named destination in the current document that provides the page number of
     * the file attachment annotation.
     *
     * @param dest a named destination or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),355,358,"/**
* Adds the appearance dictionary to the dictionary.
* @param appearance The appearance dictionary to add.
*/
","* This will set the appearance associated with this annotation.
     * 
     * @param appearance The appearance dictionary for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),716,719,"/**
* Sets the OC property of the document to the provided property list.
* @param oc The PDPropertyList to set as the OC property.
*/","* Sets the optional content group or optional content membership dictionary for the annotation.
     *
     * @param oc The optional content group or optional content membership dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPage(org.apache.pdfbox.pdmodel.PDPage),831,834,"/**
* Sets the page for the document.
* @param page The PDF page to set.
*/","* This will set the corresponding page for this annotation. This is optional but recommended.
     * Not doing it <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when
     * PDFs get signed</a>.
     *
     * @param page is the corresponding page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),94,97,"/**
* Sets the file specification for the PDF document.
* @param file The PDFileSpecification to set.
*/","* Set the attached file.
     *
     * @param file The file that is attached.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),242,245,"/**
* Applies a border effect dictionary to the document.
* @param be The PDBorderEffectDictionary to apply.
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.6 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),267,270,"/**
* Sets the rectangle parameter for further processing.
* @param rd The rectangle object to be set.
*/
","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
* Applies a PDAction to the document using internal methods.
* @param action The PDAction to apply.
*/
","* Set the annotation action. Either this or the destination entry should be set, but not both.
     *
     * @param action The annotation action.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),115,118,"/**
* Sets the border style dictionary for the PDF object.
* @param bs The PDBorderStyleDictionary to set.
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set. 
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),150,153,"/**
* Sets the destination for a PDF object.
* @param dest The destination object to set.
*/
","* The new destination value. Either this or the action entry should be set, but not both.
     *
     * @param dest The updated destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI),180,183,"/**
* Sets the PA (Page Action URI) for the PDF object.
* @param pa The PDActionURI to set.
*/","* This will set the previous URI action, in case it needs to be retrieved at later date.
     *
     * @param pa The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setPopup(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup),104,107,"/**
* Registers a popup annotation with the document.
* @param popup The popup annotation to register.
*/","* This will set the popup annotation used for entering/editing the text for this annotation.
     *
     * @param popup the popup annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setInReplyTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),200,203,"/**
* Sets the IRT (Interactive Rich Media) annotation.
* @param irt The PDAnnotation object representing the IRT.
*/","* This will set the annotation to which this one is ""In Reply To"" the actual relationship is specified by the RT
     * entry.
     *
     * @param irt the annotation this one is ""In Reply To"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setExternalData(org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary),285,288,"/**
* Sets external data dictionary.
* @param externalData The external data dictionary to set.
*/","* This will set the external data dictionary.
     * 
     * @param externalData the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),296,299,"/**
* Sets the border style dictionary for the element.
* @param bs The PDBorderStyleDictionary to set.
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),88,91,"/**
* Applies a border effect dictionary to the document.
* @param be The PDBorderEffectDictionary to apply.
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),85,88,"/**
* Applies a border effect dictionary to the document.
* @param be The PDBorderEffectDictionary to apply.
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),110,113,"/**
* Sets the rectangle for the COS name RD.
* @param rd The rectangle object to set.
*/
","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary),131,135,"/**
* Sets appearance characteristics using the provided dictionary.
*/","* Sets the appearance characteristics dictionary.
     * 
     * @param appearanceCharacteristics the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),153,156,"/**
* Applies a PDAction to the document using internal methods.
* @param action The PDAction to apply.
*/","* Set the annotation action. As of PDF 1.6 this is only used for Widget Annotations
     * 
     * @param action The annotation action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions),175,178,"/**
* Sets additional actions for a PDF annotation.
* @param actions The PDAnnotationAdditionalActions object.
*/","* Set the actions of the field.
     *
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),186,189,"/**
* Sets the border style dictionary in the m1 object.
* @param bs The PDBorderStyleDictionary to set.
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField),224,231,"/**
* Sets the parent of a field, validating dictionary sharing.
* @param field The PDTerminalField to set the parent of.
*/
","* Set the parent field of a widget annotation. This is only required if this widget annotation
     * is one of multiple children in a field, and not to be set otherwise. You will usually not
     * need this, because in most cases, fields have only one widget and share a common dictionary.
     * A usage can be found in the CreateMultiWidgetsForm example.
     *
     * @param field the parent field.
     * @throws IllegalArgumentException if setParent() was called for a field that shares a
     * dictionary with its only widget.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),77,80,"/**
* Adds a PDAppearanceEntry to the dictionary with the key ""N"".
* @param entry The PDAppearanceEntry to add.
*/
","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),87,90,"/**
* Adds a PDAppearanceStream to the dictionary with name ""N"".
*/","* This will set the normal appearance when there is only one appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),111,114,"/**
* Sets the appearance dictionary entry for the given appearance entry.
*/","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),121,124,"/**
* Adds a PDAppearanceStream to the dictionary with the key ""R"".
*/","* This will set the rollover appearance when there is rollover appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),145,148,"/**
* Adds an appearance entry to the dictionary.
* @param entry The appearance entry to add.
*/
","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),155,158,"/**
* Adds a PDAppearanceStream to the dictionary with key ""D"".
*/","* This will set the down appearance when there is down appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),92,95,"/**
* Sets the filter property in the dictionary.
* @param filter The filter to set.
*/","* Set the build data dictionary for the signature handler.
     * This entry is optional but is highly recommended for the signatures.
     *
     * @param filter is the PDPropBuildFilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),119,122,"/**
* Adds public security data to the dictionary.
* @param pubSec The public security data to add.
*/","* Set the build data dictionary for the PubSec Software module.
     *
     * @param pubSec is the PDPropBuildPubSec",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),147,150,"/**
* Adds application data to the dictionary.
* @param app The PDPropBuildDataDict object to add.
*/
","* Set the build data dictionary for the viewing application
     * software module.
     *
     * @param app is the PDPropBuildApp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate),453,456,"/**
* Adds a certificate to the dictionary using the CERT key.
* @param certificate The certificate to add.
*/
","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @param certificate dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild),460,463,"/**
* Adds a property build object to the dictionary.
* @param propBuild The PDPropBuild object to add.
*/","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @param propBuild the prop build",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setPreviousSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),137,140,"/**
* Sets the previous outline node for the given outline node.
*/","* Set the previous sibling, this will be maintained by this class.
     *
     * @param outlineNode The new previous sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setNextSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),155,158,"/**
* Sets the 'next' outline node for the given outline node.
* @param outlineNode The outline node to update.
*/
","* Set the next sibling, this will be maintained by this class.
     *
     * @param outlineNode The new next sibling.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),196,199,"/**
* Sets the destination for a PDF object.
* @param dest Destination object to set.
*/","* Set the page destination for this node.
     *
     * @param dest The new page destination for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),291,294,"/**
* Executes a PDAction by invoking m1().m2 with a COSName.
* @param action The PDAction to be executed.
*/","* Set the action for this node.
     *
     * @param action The new action for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),312,315,"/**
* Calls m2 on m1 with COSName.SE and the structureElement.
*/","* Set the structure element for this node.
     *
     * @param structureElement The new structure element for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),67,70,"/**
* Sets the parent outline node for the current node.
* @param parent The parent PDOutlineNode object.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),194,197,"/**
* Adds an outline node to the document's first outline.
* @param outlineNode The outline node to add.
*/
","* Set the first child, this will be maintained by this class.
     *
     * @param outlineNode The new first child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),212,215,"/**
* Sets the LAST attribute of the outline node.
* @param outlineNode The outline node to update.
*/
","* Set the last child, this will be maintained by this class.
     *
     * @param outlineNode The new last child.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultResources(org.apache.pdfbox.pdmodel.PDResources),554,557,"/**
* Sets the DR (Resources) dictionary entry in the document.
* @param dr The PDResources object to set.
*/","* This will set the default resources for the acroform.
     *
     * @param dr The new default resources.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource),595,598,"/**
* Associates an XFA resource with the dictionary.
* @param xfa The PDXFAResource to associate.
*/","* Set the XFA resource, this is only used for PDF 1.5+ forms.
     *
     * @param xfa The xfa resource.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),104,108,"/**
* Sets the signature value.
* @param value The signature object to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the value of this field to be the given signature.
     * 
     * @param value is the PDSignatureField
     * 
     * @throws IOException if the new value could not be applied",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),131,134,"/**
* Sets the DV (Document Version) property of the COS object.
* @param value The PDSignature object to set as the DV value.
*/","* Sets the default value of this field to be the given signature.
     *
     * @param value is the PDSignatureField",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue),185,191,"/**
 * Sets the PDSeedValue to the COSName.SV, if sv is not null.
 * @param sv The PDSeedValue to set.
 */
","* <p>(Optional; PDF 1.) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @param sv is the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setActions,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions),66,69,"/**
* Adds additional actions to a PDF form field.
* @param actions Actions to add; null to remove.
*/","* Set the actions of the field.
     * 
     * @param actions The field actions.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setWidgets(java.util.List),192,200,"/**
* Sets the KIDS array and parent for annotation widgets.
* @param children List of PDAnnotationWidget objects.
*/
","* Sets the field's widget annotations.
     *
     * @param children The list of widget annotations.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),95,98,"/**
* Sets the bounding box of the object to the given rectangle.
* @param rectangle The rectangle representing the bounding box.
*/","* This will set the rectangle specifying the location of the viewport.
     * 
     * @param rectangle the rectangle specifying the location.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary),136,139,"/**
* Sets the measure dictionary for the PDF object.
* @param measure The PDMeasureDictionary to set.
*/","* This will set the measure dictionary.
     * 
     * @param measure the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation),82,85,"/**
* Calls m1 on the thread, passing COSName.I and the provided info.
*/","* Set the thread info, can be null.
     *
     * @param info The info dictionary about this thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread),89,92,"/**
* Calls bead.m1 with a COSName.T and the provided thread.
*/","* Set the thread that this bead is part of.  This is only required for the
     * first bead in a thread.  Note: This property is set for you by the PDThread.setFirstBead() method.
     *
     * @param thread The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),110,113,"/**
* Calls method m1 on bead with COSName.N and the provided next bead.
*/","* Set the next bead in the thread.
     *
     * @param next The next bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),131,134,"/**
* Links the current bead to the previous one using COSName.V.
* @param previous The previous PDThreadBead.
*/","* Set the previous bead in the thread.
     *
     * @param previous The previous bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPage(org.apache.pdfbox.pdmodel.PDPage),169,172,"/**
* Sets the page for the bead.
* @param page The PDF page to associate with the bead.
*/
","* Set the page that this bead is part of.  This is a required property and must be
     * set when creating a new bead.  The PDPage object also has a list of beads in the natural
     * reading order.  It is recommended that you add this object to that list as well.
     *
     * @param page The page that this bead is on.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),190,193,"/**
* Applies rectangle data to the bead using COSName.R.
* @param rect The rectangle object to apply.
*/","* Set the rectangle on the page that this bead covers.
     *
     * @param rect The portion of the page that this bead covers.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setMarked(boolean),77,80,"/**
* Marks a value in the dictionary with the given boolean flag.
*/","* Set if this is a tagged PDF.
     *
     * @param value The new marked value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setUserProperties(boolean),97,100,"/**
 * Logs user properties to the dictionary.
 * @param userProps boolean indicating user properties
 */","* Set if the structure elements contain user properties.
     *
     * @param userProps The new value for this property.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setSuspect(boolean),120,123,"/**
 * Sets ""Suspects"" dictionary entry to false.
 * @param suspect ignored boolean parameter
 */
","* Set the value of the suspects property.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this
     * property.
     *
     * @param suspect The new ""Suspects"" value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setTrackMousePosition(boolean),117,120,"/**
* Calls m1 on the action object with the given boolean value.
*/","* This will specify whether to track the mouse position when the URI is
     * resolved.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setOpen(boolean),64,67,"/**
 * Calls m1().m2 with ""Open"" and the provided boolean value.
 */","* This will set the initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFD(boolean),211,214,"/**
* Logs a boolean value 'fd' using the m1().m2() method.
*/","* This will set the value indication if the denominator of the fractional value is reduced/truncated .
     * The denominator may not be reduced/truncated if true
     * @param fd fd",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setVolatile(boolean),205,208,"/**
* Sets the volatility flag for a file system object.
* @param fileIsVolatile True if the file is volatile.
*/","* Tell if the underlying file is volatile and should not be cached by the
     * reader application.  Default: false
     *
     * @param fileIsVolatile The new value for the volatility of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setEncryptMetaData(boolean),134,137,"/**
* Encrypts metadata.
* @param encryptMetaData flag to enable/disable metadata encryption
*/","* Set the EncryptMetaData dictionary info.
     *
     * @param encryptMetaData true if EncryptMetaData shall be set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaption(boolean),286,289,"/**
* Sets the 'CAP' COSName property using the provided boolean value.
*/","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleToFitAnnotation(boolean),194,197,"/**
* Calls fit.m1 with COSName.FB and the given boolean value.
*/","* This will tell the icon to scale.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setRename(boolean),132,135,"/**
* Calls template.m1 with RENAME and the given boolean value.
*/","* This will set if the fields can be renamed.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setInterpolate(boolean),235,239,"/**
 * Sets a parameter value.
 * @param value The value to set for the parameter COSName.I.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setStencil(boolean),290,294,"/**
* Sets the IM parameter based on the stencil flag.
* @param isStencil boolean indicating stencil mode
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setAntiAlias(boolean),218,221,"/**
* Sets the anti-aliasing flag in the dictionary.
* @param antiAlias boolean value for anti-aliasing
*/","* This will set the AntiAlias value.
     *
     * @param antiAlias the new AntiAlias value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingOverprintControl(boolean),372,375,"/**
* Sets the OP (operator) flag in the dictionary.
* @param op The boolean value for the operator flag.
*/
","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingOverprintControl(boolean),393,396,"/**
* Sets the OP_NS flag in the dictionary.
* @param op The boolean value for the OP_NS flag.
*/
","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAutomaticStrokeAdjustment(boolean),508,511,"/**
* Sets the 'SA' COS name value in the dictionary to the given boolean.
*/","* This will set the automatic stroke adjustment flag.
     *
     * @param sa The new automatic stroke adjustment flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAlphaSourceFlag(boolean),572,575,"/**
* Sets the AIS flag in the dictionary.
* @param alpha boolean value for AIS flag
*/","* This will set the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @param alpha The alpha source flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTextKnockoutFlag(boolean),625,628,"/**
* Sets the TK (token) value in the dictionary.
* @param tk The boolean value to set as the token.
*/
","* This will set the text knockout flag.
     *
     * @param tk The text knockout flag.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),144,166,"/**
* Handles OpenMode value, invoking m1().m2 or m1().m3.
* @param value The OpenMode to process; null uses NEW_WINDOW.
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),227,249,"/**
 * Handles OpenMode value, invoking m1().m2 or m1().m3.
 * @param value The OpenMode to process.
 */","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),134,156,"/**
 * Handles OpenMode value, invoking m1().m2 or m1().m3.
 * @param value The OpenMode to process.
 */","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSynchronous(boolean),110,113,"/**
 * Executes an action, setting synchronous flag.
 * @param synchronous boolean value for synchronous execution.
 */","* A flag specifying whether to play the sound synchronously or asynchronously. When true, the
     * reader allows no further user interaction other than canceling the sound until the sound has
     * been completely played.
     *
     * @param synchronous Whether to play the sound synchronously (true) or asynchronously (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setRepeat(boolean),133,136,"/**
* Sets the repeat flag in the action.
* @param repeat boolean value indicating repeat status
*/","* A flag specifying whether to repeat the sound indefinitely.
     *
     * @param repeat Whether to repeat the sound indefinitely.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setMix(boolean),156,159,"/**
* Calls action.m1 with COSName.MIX and the provided boolean.
*/","* The flag specifying whether to mix this sound with any other sound already playing. If this
     * flag is false, any previously playing sound shall be stopped before starting this sound; this
     * can be used to stop a repeating sound (see Repeat). Default value: false.
     *
     * @param mix whether to mix this sound with any other sound already playing.
     * (false).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaption(boolean),251,254,"/**
* Sets the CAP property on m1().m2().
* @param cap The value to set for the CAP property.
*/
","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setOpen(boolean),146,149,"/**
* Sets the 'Open' COSName value via m2().m3().
* @param open The boolean value to set.
*/","* This will set initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setPreRelease(boolean),202,205,"/**
* Sets the pre-release flag in the dictionary.
* @param preRelease boolean value for pre-release status
*/
","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @param preRelease is true if the signature was created with a unrelease
     *                   software, otherwise false.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setNonEFontNoWarn(boolean),284,287,"/**
* Sets the ""non-eFont no warn"" flag in the dictionary.
* @param noEmbedFontWarning Flag to indicate whether to suppress warnings.
*/","* If true, the reader should not display a warning about fonts not being embedded.
     *
     * @param noEmbedFontWarning true if there is a Legal dictionary in the catalog and the
     * NonEmbeddedFonts attribute has a non-zero value
     *
     * Documentation says: (Optional; PDF 1.5) If there is a LegalPDF dictionary in the catalog of
     * the PDF file and the NonEmbeddedFonts attribute in this dictionary has a non zero value, and
     * the viewing application has a preference set to suppress the display of this warning then the
     * value of this attribute will be set to true.
     *
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/Acrobat_Signature_BuildDict.pdf#page=6"">Digital
     * Signature Build Dictionary Specification</a>
     * @see #getNonEFontNoWarn()
     * @see COSName#NON_EFONT_NO_WARN",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setTrustedMode(boolean),305,308,"/**
* Sets the trusted mode flag in the dictionary.
* @param trustedMode The trusted mode boolean value.
*/","* If true, the application was in trusted mode when signing took place.
     *
     * @param trustedMode true if the application is in trusted mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setNeedAppearances(java.lang.Boolean),532,535,"/**
* Sets the 'needAppearances' flag in the dictionary.
* @param value boolean value for the flag
*/
","* Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideToolbar(boolean),177,180,"/**
* Sets the visibility of the toolbar based on the given boolean value.
*/","* Set the toolbar preference.
     *
     * @param value Set the toolbar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideMenubar(boolean),197,200,"/**
* Sets the hide menu bar preference.
* @param value true to hide, false to show.
*/
","* Set the menubar preference.
     *
     * @param value Set the menubar preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideWindowUI(boolean),217,220,"/**
* Sets the visibility of the window UI based on the given boolean value.
*/","* Set the window UI preference.
     *
     * @param value Set the window UI preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setFitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setFitWindow(boolean),237,240,"/**
* Sets the FIT_WINDOW preference to the given boolean value.
*/","* Set the fit window preference.
     *
     * @param value Set the fit window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setCenterWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setCenterWindow(boolean),257,260,"/**
* Sets the center window preference to the given boolean value.
*/","* Set the center window preference.
     *
     * @param value Set the center window preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDisplayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDisplayDocTitle(boolean),277,280,"/**
* Sets the display document title preference to the given value.
*/","* Set the display doc title preference.
     *
     * @param value Set the display doc title preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStampAnnotationAppearanceXML,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStampAnnotationAppearanceXML(org.w3c.dom.Element),142,183,"/**
 * Builds a COSDictionary for Appearance from an XML element.
 * @param appearanceXML XML element representing the appearance.
 * @return COSDictionary object.
 */","* This will create an Appearance dictionary from an appearance XML element.
     *
     * @param appearanceXML The XML element that contains the appearance data.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(java.lang.String,java.lang.String)",288,291,"/**
* Delegates to another m2 method with a COSName key.
* @param key The key to use.
* @param value The value to associate with the key.
*/
","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageMode(org.apache.pdfbox.pdmodel.PageMode),494,497,"/**
* Sets the page mode in the root dictionary.
* @param mode The PageMode to set.
*/","* Sets the page mode.
     *
     * @param mode The new page mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLayout(org.apache.pdfbox.pdmodel.PageLayout),527,530,"/**
* Sets the page layout in the root dictionary.
* @param layout The PageLayout object to set.
*/","* Sets the page layout.
     *
     * @param layout The new page layout.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setVersion(java.lang.String),609,612,"/**
* Sets the PDF version.
* @param version The PDF version string to set.
*/","* Sets the PDF specification version this document conforms to.
     *
     * @param version the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTrapped(java.lang.String),304,316,"/**
 * Sets the TRAPPED attribute to the given value, validating it.
 * @param value The TRAPPED value (True, False, or Unknown).
 */","* This will set the trapped of the document.  This will be
     * 'True', 'False', or 'Unknown'.
     *
     * @param value The new trapped value for the document.
     * 
     * @throws IllegalArgumentException if the parameter is invalid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStyle(java.lang.String),116,126,"/**
 * Sets the style based on the provided value.
 * @param style The style to set, or null to reset.
 */","* Sets the numbering style for this page range.
     * 
     * @param style
     *            one of the STYLE_* constants or {@code null} if no page
     *            numbering is desired.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(java.lang.String),36,40,"/**
* Creates a PDTypedDictionaryWrapper with the given type.
* @param type The type of the dictionary.
*/
","* Creates a new instance with a given type.
     * 
     * @param type the type (Type)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,setOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:setOwner(java.lang.String),132,135,"/**
* Sets the owner of the object using m1() and m2().
* @param owner The owner string to set.
*/","* Sets the owner of the attributes.
     * 
     * @param owner the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(),38,42,"/**
 * Constructs a PDMarkedContentReference with a COSDictionary.
 */",* Default constructor,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(),58,62,"/**
 * Constructs a PDObjectReference with a COSDictionary and type.
 */","* Default Constructor.
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setStructureType(java.lang.String),86,89,"/**
* Sets the structure type on the COS object.
* @param structureType The type of the structure.
*/","* Sets the structure type (S).
     * 
     * @param structureType the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),368,394,"/**
* Processes class name revisions, updating the COS object.
* @param classNames Revisions object containing class names/revisions
*/","* Sets the class names together with their revision numbers (C).
     * 
     * @param classNames the class names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(java.lang.String),45,49,"/**
 * Creates a PDStructureNode with the given type.
 * @param type The type of the structure node.
 */
","* Constructor.
     *
     * @param type the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineStyle(java.lang.String),156,159,"/**
* Sets the style COS name in the dictionary.
* @param style The style string to set.
*/
","* Set the style for the box.
     *
     * @param style The style for the box line.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setSubFilter(java.lang.String),179,182,"/**
* Sets the subfilter in the dictionary.
* @param subfilter The subfilter string to set.
*/
","* Set the subfilter entry of the encryption dictionary.
     *
     * @param subfilter The value of the subfilter field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setIntent(java.lang.String),846,849,"/**
* Annotates the intent using the provided COSName.IT.
* @param intent The intent string to annotate.
*/","* The intent of the annotation.
     * 
     * @param intent The annotation's intent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setLineEndingStyle(java.lang.String),282,285,"/**
* Calls annot.m1 with COSName.LE and the given style.
* @param style The style string to pass to annot.m1
*/
","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setIcon(java.lang.String),92,95,"/**
* Sets the COS name icon using the provided string.
* @param icon The icon string to set.
*/","* This will set the icon (and hence appearance, AP taking precedence) For this annotation. See the
     * PDAnnotationText.NAME_XXX constants for valid values.
     *
     * @param icon The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setVersion(java.lang.String),106,109,"/**
* Sets the version information in the catalog.
* @param version The version string to set.
*/","* This will set the version of the FDF document.
     *
     * @param version The new version for the FDF document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEncoding(java.lang.String),424,427,"/**
* Sets the encoding for the PDF document.
* @param encoding The encoding string to set.
*/
","* This will set the encoding.
     *
     * @param encoding The new encoding.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleOption(java.lang.String),110,113,"/**
* Calls fit.m1 with COSName.SW and the given option.
*/","* This will set the scale option for the icon. Set the SCALE_OPTION_XXX constants.
     *
     * @param option The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleType(java.lang.String),136,139,"/**
* Calls fit.m1 with COSName.S and the provided scale.
* @param scale Scaling factor to apply.
*/","* This will set the scale type. See the SCALE_TYPE_XXX constants.
     *
     * @param scale The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(),71,75,"/**
 * Initializes a new PDAbstractPattern with a dictionary.
 */",* Creates a new Pattern dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setType(java.lang.String),94,97,"/**
* Sets the type attribute using the provided string value.
* @param type The type string to set.
*/
","* This will set the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @param type The new Type for the PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setSubType(java.lang.String),114,117,"/**
* Calls action.m1 with COSName.S and the given string.
*/","* This will set the type of action that the actions dictionary describes.
     *
     * @param s The new type of action.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setSubtype(java.lang.String),234,237,"/**
* Sets the subtype value using the m1().m2() method.
* @param subType The subtype string to set.
*/","* This will set the sub type (and hence appearance, AP taking precedence) For this annotation. See the SUB_TYPE_XXX
     * constants for valid values.
     *
     * @param subType The subtype of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearanceState(java.lang.String),334,337,"/**
* Calls m1().m2 with COSName.AS and the provided string.
* @param as The string to be passed to m1().m2.
*/","* This will set the annotations appearance state name.
     * 
     * @param as The name of the appearance stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setAttachmentName(java.lang.String),114,117,"/**
* Calls m1().m2() with COSName.NAME and the given name.
*/","* Set the name used to draw the attachment icon. See the ATTACHMENT_NAME_XXX constants.
     *
     * @param name The name of the visual icon to draw.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setLineEndingStyle(java.lang.String),219,222,"/**
* Applies a style to a COS name using m1() and m2().
* @param style The style string to apply.
*/","* This will set the line ending style.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionPositioning(java.lang.String),342,345,"/**
* Sets the caption positioning using the provided string.
* @param captionPositioning The string value for caption positioning.
*/","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionPositioning caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setHighlightMode(java.lang.String),170,173,"/**
* Calls m1().m2() with COSName.H and the given mode.
*/","* Set the highlight mode. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @param mode The new highlight mode.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setReplyType(java.lang.String),242,245,"/**
* Calls m1().m2() with COSName.RT set to the given rt value.
*/","* This will set the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for the
     * available values.
     *
     * @param rt the reply type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setIntent(java.lang.String),264,267,"/**
* Calls m1().m2() with COSName.IT and the provided string.
* @param it The string value to be passed.
*/","* This will set the intent of the annotation The values and meanings are specific to the actual annotation See the
     * IT_* constants for the annotation classes.
     *
     * @param it the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:setName(java.lang.String),120,123,"/**
 * Delegates a call to m2 on the result of m1().
 * @param name The name to pass to the delegated method.
 */
","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the rubber stamp.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setName(java.lang.String),167,170,"/**
 * Calls m1().m2() with COSName.NAME and the given name.
 * @param name The name to pass to m1().m2()
 */
","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the annotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setHighlightingMode(java.lang.String),100,113,"/**
* Sets highlighting mode.
* @param highlightingMode The highlighting mode string ('N','I','O','P','T').
* @throws IllegalArgumentException if mode is invalid.
*/","* Sets the highlighting mode.
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @param highlightingMode the highlighting mode the defined values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setStyle(java.lang.String),140,143,"/**
* Calls m1().m2() with COSName.S and the provided string.
* @param s The string to pass to m2.
*/
","* This will set the border style, see the STYLE_* constants for valid values.
     *
     * @param s the border style to use",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(),35,39,"/**
 * Initializes an ExternalDataDictionary with type ""ExData"".
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:setSubtype(java.lang.String),87,90,"/**
* Sets the subtype of the object.
* @param subtype The subtype string to set.
*/","* This will set the subtype of the external data dictionary.
     * 
     * @param subtype the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setName(java.lang.String),81,84,"/**
* Calls dictionary.m1 with COSName.NAME and the given name.
*/","* The name of the software module that was used to create the signature.
     *
     * @param name is the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLType(java.lang.String),622,625,"/**
* Sets the URL type in the dictionary.
* @param urlType The URL type to set.
*/","* (Optional; PDF 1.7) A name indicating the usage of the URL entry. There are standard uses and
     * there can be implementation-specific uses for this URL. The following value specifies a valid
     * standard usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     * Third parties can extend the use of this attribute with their own attribute values, which
     * must conform to the guidelines specified in
     * <a href=""http://www.adobe.com/content/dam/acom/en/devnet/pdf/PDF32000_2008.pdf#page=681"">PDF
     * Spec 1.7 Appendix E (PDF Name Registry)</a>
     * if urlType is not set the default is Browser for URL
     *
     * @param urlType String of the urlType",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(),33,36,"/**
 * Initializes the document outline object.
 * Sets the object type to ""Outlines"".
 */",* Default Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(org.apache.pdfbox.cos.COSDictionary),43,47,"/**
 * Creates a document outline from a COSDictionary.
 * @param dic The COSDictionary containing outline information.
 */
","* Constructor for an existing document outline.
     *
     * @param dic The storage dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(),39,43,"/**
 * Initializes a PDMeasureDictionary with a COSDictionary and type.
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:setSubtype(java.lang.String),92,95,"/**
* Sets the subtype of the COS object.
* @param subtype The subtype string to set.
*/","* This will set the subtype of the measure dictionary.
     * @param subtype the subtype of the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(),66,70,"/**
 * Initializes a new PDNumberFormatDictionary.
 * Creates a COSDictionary and sets its type.
 */
",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setName(java.lang.String),115,118,"/**
* Calls m2 on the result of m1, passing COSName.NAME and name.
*/","* This will set the name of the viewport.
    *  
    * @param name the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle),49,54,"/**
 * Creates a new transition object with the given style.
 * @param style The transition style to apply.
 */
","* creates a new transition with the given style.
     * 
     * @param style the style to be used to create the new transition",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension),91,94,"/**
* Sets the transition dimension using the provided dimension object.
*/","* Sets the dimension in which the specified transition effect shall occur. Only for {@link PDTransitionStyle#Split}
     * and {@link PDTransitionStyle#Blinds}.
     * 
     * @param dimension the dimension in which the specified transition effect shall occur",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion),112,115,"/**
* Sets the motion's 'M' value in the parent object.
* @param motion The transition motion object.
*/","* Sets the direction of motion for the specified transition effect. Only for {@link PDTransitionStyle#Split},
     * {@link PDTransitionStyle#Blinds} and {@link PDTransitionStyle#Fly}.
     * 
     * @param motion the direction of motion for the specified transition effect",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE),298,301,"/**
* Sets the non-full screen page mode preference.
* @param value The non-full screen page mode value.
*/
","* Set the non full screen page mode preference.
     *
     * @param value Set the non full screen page mode preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION),318,321,"/**
* Sets the reading direction preference.
* @param value The reading direction value to set.
*/
","* Set the reading direction preference.
     *
     * @param value Set the reading direction preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),338,341,"/**
* Sets the view area preference using the provided boundary.
* @param value Boundary object containing view area information.
*/","* Set the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),358,361,"/**
* Sets the view clip preference using the provided boundary.
* @param value Boundary object containing view clip data.
*/","* Set the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),378,381,"/**
* Sets the print area in preferences using the provided boundary.
* @param value Boundary object containing print area information.
*/","* Set the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintArea preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),398,401,"/**
* Sets the print clip boundary using the provided value.
* @param value Boundary object containing clip information.
*/","* Set the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintClip preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX),418,421,"/**
* Sets the duplex setting using the provided DUPLEX value.
*/","* Set the Duplex preference.  See DUPLEX enumeration.
     *
     * @param value Set the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING),438,441,"/**
* Sets the print scaling preference using the provided value.
* @param value The print scaling value to set.
*/
","* Set the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @param value Set the PrintScaling preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",327,330,"/**
* Calls m2 with the key and date converted to a Date object.
*/","* Set the date object.
     *
     * @param key The key to the date.
     * @param date The date to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(java.lang.String,java.lang.String)",360,363,"/**
* Calls m2 with a COSName derived from the key.
* @param key Key used to create a COSName.
* @param value Value passed to the called m2 method.
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setLanguage(java.lang.String),589,592,"/**
* Sets the language code for the root object.
* @param language The language code to set.
*/
","* Sets the Language for the document.
     *
     * @param language The new document language.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTitle(java.lang.String),100,103,"/**
 * Logs the given title using the info.m1 method.
 * @param title The title to be logged.
 */
","* This will set the title of the document.
     *
     * @param title The new title for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:setAuthor(java.lang.String),120,123,"/**
* Logs the author's name using the info.m1 method.
* @param author The name of the author to log.
*/
","* This will set the author of the document.
     *
     * @param author The new author for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:setSubject(java.lang.String),140,143,"/**
* Logs the subject to the info object.
* @param subject The subject to be logged.
*/
","* This will set the subject of the document.
     *
     * @param subject The new subject for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:setKeywords(java.lang.String),160,163,"/**
* Logs keywords using the info.m1 method.
* @param keywords Keywords to be logged.
*/","* This will set the keywords of the document.
     *
     * @param keywords The new keywords for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreator(java.lang.String),180,183,"/**
 * Logs the creator information using the info.m1 method.
 * @param creator The creator's name or identifier.
 */
","* This will set the creator of the document.
     *
     * @param creator The new creator for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:setProducer(java.lang.String),200,203,"/**
* Logs the producer name using the info.m1 method.
* @param producer The name of the producer to log.
*/
","* This will set the producer of the document.
     *
     * @param producer The new producer for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setPrefix(java.lang.String),174,184,"/**
 * Calls m1 or m2 on root based on prefix.
 * @param prefix Prefix string, null triggers m1.
 */","* Sets the page label prefix for this page range.
     * 
     * @param prefix
     *            the page label prefix for this page range, or {@code null} to
     *            unset the prefix.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileUnicode(java.lang.String),140,143,"/**
* Calls m1 on fs with COSName.UF and the given file.
*/","* This will set the unicode file name. If you call this, then do not forget to also call
     * {@link #setFile(java.lang.String) setFile(String)} or the attachment will not be visible on
     * some viewers.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFile(java.lang.String),163,167,"/**
* Calls m1 on fs with COSName.F and the provided file.
*/","* This will set the file name. You should also call
     * {@link #setFileUnicode(java.lang.String) setFileUnicode(String)} for cross-platform and
     * cross-language compatibility.
     *
     * @param file The name of the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileDescription(java.lang.String),343,346,"/**
 * Sets the description using the provided string.
 * @param description The description to set.
 */
","* Set the file description.
     * 
     * @param description The file description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setElementIdentifier(java.lang.String),127,130,"/**
* Sets the ID of the object using m1() and m2().
* @param id The ID to set.
*/","* Sets the element identifier (ID).
     * 
     * @param id the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setTitle(java.lang.String),512,515,"/**
* Sets the title of the object using m1() and m2().
* @param title The title to set.
*/","* Sets the title (T).
     * 
     * @param title the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setLanguage(java.lang.String),532,535,"/**
* Sets the language code using m1().m2().
* @param language The language code to set.
*/","* Sets the language (Lang).
     * 
     * @param language the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAlternateDescription(java.lang.String),552,555,"/**
* Sets the alternate description using m1() and m2().
* @param alternateDescription The alternate description to set.
*/","* Sets the alternate description (Alt).
     * 
     * @param alternateDescription the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setExpandedForm(java.lang.String),572,575,"/**
* Calls m2 on m1, passing COSName.E and expandedForm.
*/","* Sets the expanded form (E).
     * 
     * @param expandedForm the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setActualText(java.lang.String),592,595,"/**
 * Sets the actual text using m1() and m2().
 * @param actualText The text to be set.
 */","* Sets the actual text (ActualText).
     * 
     * @param actualText the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setDate(java.lang.String),492,495,"/**
* Calls annot.m1 with COSName.M and the given date string.
*/","* The annotation modification date.
     *
     * @param date The date to store in the FDF annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setName(java.lang.String),702,705,"/**
* Annotates with a COS name.
* @param name The COS name to annotate with.
*/","* Set a unique name for an annotation.
     *
     * @param name The unique annotation name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setContents(java.lang.String),743,746,"/**
* Sets the 'Contents' COS name value using the provided string.
* @param contents The string value to set as the COS name.
*/
","* Set the contents, or a description, for an annotation.
     *
     * @param contents The annotation contents, or a description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setTitle(java.lang.String),763,766,"/**
* Annotates a COS object with a title.
* @param title The title to set for the annotation.
*/","* Set a unique title for an annotation.
     *
     * @param title The annotation title.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setSubject(java.lang.String),826,829,"/**
* Annotates the document with the given subject.
* @param subject The subject to be annotated.
*/","* A short description of the annotation.
     *
     * @param subject The annotation subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setSymbol(java.lang.String),126,134,"/**
* Sets the symbol for annotation based on input.
* @param symbol The symbol string to check.
*/
","* This will set the symbol that shall be associated with the caret.
     * 
     * @param symbol the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultAppearance(java.lang.String),217,220,"/**
* Sets the appearance data for an annotation.
* @param appearance The appearance string to set.
*/","* Set the default appearance string.
     *
     * @param appearance The new default appearance string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultStyle(java.lang.String),238,241,"/**
* Calls m1 on annot with COSName.DS and the given style.
*/","* Set the default style string.
     *
     * @param style The new default style string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionStyle(java.lang.String),376,379,"/**
* Sets the caption style using the provided style string.
* @param captionStyle The style string to apply.
*/","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionStyle caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setState(java.lang.String),123,126,"/**
* Annotates the object with the given state.
* @param state The state to be annotated.
*/","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setStateModel(java.lang.String),143,146,"/**
* Annotates the state model using the provided string.
* @param stateModel The state model string to annotate.
*/","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setStatus(java.lang.String),366,369,"/**
* Sets the status of a PDF document.
* @param status The status string to set.
*/","* This will set the status string.
     *
     * @param status The new status string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setTarget(java.lang.String),499,502,"/**
* Sets the target value in the fdf object.
* @param target The target string to set.
*/
","* This will set the target frame in the browser to open this document.
     *
     * @param target The new target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:setPartialFieldName(java.lang.String),221,224,"/**
* Calls field.m1 with COSName.T and the provided partial string.
*/
","* This will set the partial field name.
     *
     * @param partial The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setName(java.lang.String),79,82,"/**
 * Calls ref.m1 with COSName.NAME and the provided name.
 * @param name The name to pass to ref.m1
 */
","* This will set the name of the referenced page.
     *
     * @param name The referenced page name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setInfo(java.lang.String),73,76,"/**
* Sets the INFO COS name value in the dictionary.
* @param value The value to set for the INFO COS name.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputCondition(java.lang.String),83,86,"/**
* Sets the output condition in the dictionary.
* @param value The value to set as the output condition.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputConditionIdentifier(java.lang.String),93,96,"/**
* Sets the output condition identifier in the dictionary.
* @param value The identifier value to set.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setRegistryName(java.lang.String),103,106,"/**
* Registers a value in the dictionary using a predefined key.
* @param value The value to be registered.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,setName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:setName(java.lang.String),110,113,"/**
* Adds a name to the dictionary.
* @param name The name to add.
*/
","* Sets the name of the optional content group.
     * @param name the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(),87,97,"/**
 * Initializes the optional content properties with a COSDictionary.
 */",* Creates a new optional content properties dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,setAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:setAction(java.lang.String),69,72,"/**
* Calls action.m1 with a COSName.JS and the provided action string.
*/",* @param sAction The JavaScript.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setF(java.lang.String),131,134,"/**
* Calls action.m1 with COSName.F and the provided string.
* @param f The string to pass to action.m1.
*/
","* This will set the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @param f The file name to be launched.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setD(java.lang.String),151,154,"/**
* Calls action.m1 with COSName.D and the provided string.
* @param d The string to pass to action.m1.
*/
","* This will set the string specifying the default directory in standard DOS syntax.
     *
     * @param d The default directory.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setO(java.lang.String),179,182,"/**
* Calls action.m1 with COSName.O and the provided string.
* @param o The string to pass to action.m1
*/
","* This will set the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @param o The operation to perform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setP(java.lang.String),201,204,"/**
* Calls action.m1 with COSName.P and the provided parameter.
* @param p The parameter to pass to action.m1.
*/","* This will set a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @param p The parameter string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setURI(java.lang.String),92,95,"/**
* Sets the URI for the action.
* @param uri The URI string to set.
*/
","* This will set the uniform resource identifier to resolve, encoded in
     * 7-bit ASCII.
     *
     * @param uri The uniform resource identifier.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setFilename(java.lang.String),114,117,"/**
 * Associates a filename with the dictionary using COS name 'N'.
 * @param filename The filename to associate.
 */
","* Sets the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @param filename a filename or null if the entry is to be deleted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationName(java.lang.String),252,255,"/**
* Sets the 'A' COSName value in the dict.
* @param name The value to set for COSName 'A'.
*/","* This will get the value of the /NM entry in the annotation dictionary.
     *
     * @param name the /NM value of an annotation dictionary or null if the entry is to be removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setFilename(java.lang.String),89,92,"/**
* Calls m1 on params with COSName.F and the given file.
*/","* Set the file to launch.
     *
     * @param file The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setDirectory(java.lang.String),109,112,"/**
* Sets the directory parameter using COSName.D.
* @param dir The directory string to set.
*/","* Set the dir to launch from.
     *
     * @param dir The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setOperation(java.lang.String),132,135,"/**
* Calls m1 on params with COSName.D and the given operation.
*/","* Set the operation to perform..
     *
     * @param op The operation to perform on the file.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setExecuteParam(java.lang.String),152,155,"/**
* Calls m1 on 'params' with COSName.P and the given parameter.
*/","* Set the parameter to pass the executable.
     *
     * @param param The parameter for the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setContents(java.lang.String),616,619,"/**
 * Sets the contents of the dictionary with the given value.
 * @param value The string value to set as contents.
 */
","* Set the ""contents"" of the field.
     * 
     * @param value the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.lang.String),640,643,"/**
* Calls m1().m2() with COSName.M and the input string 'm'.
*/","* This will set the date and time the annotation was modified.
     *
     * @param m the date and time the annotation was created. Date values used in a PDF shall
     * conform to a standard date format, which closely follows that of the international standard
     * ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string
     * of the form (D:YYYYMMDDHHmmSSOHH'mm). Alternatively, use
     * {@link #setModifiedDate(java.util.Calendar)}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationName(java.lang.String),672,675,"/**
* Calls m1().m2() with COSName.NM and the given name.
* @param nm The name to pass to m2.
*/
","* This will set the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @param nm The identifying name for the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultAppearance(java.lang.String),86,89,"/**
* Sets the 'DA' COS name value using m1().m2().
* @param daValue The value to set for the 'DA' COS name.
*/","* Set the default appearance.
     *
     * @param daValue a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultStyleString(java.lang.String),110,113,"/**
* Applies a default style string via m1().m2().
* @param defaultStyleString The style string to apply.
*/","* Set the default style string.
     *
     * Providing null as the value will remove the default style string.
     *
     * @param defaultStyleString a string describing the default style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setTitlePopup(java.lang.String),83,86,"/**
* Calls m1().m2() with COSName.T and the provided string.
* @param t The string value to be passed to m1().m2().
*/
","* Set the string used as the title of the popup window shown when open and active (by convention this identifies
     * who added the annotation).
     *
     * @param t The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setSubject(java.lang.String),220,223,"/**
* Calls m2 with COSName.SUBJ and the given subject string.
*/","* This will set the short description of the subject of the annotation.
     *
     * @param subj short description of the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setState(java.lang.String),198,201,"/**
* Sets the state using m1().m2().
* @param state The state value to set.
*/
","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setStateModel(java.lang.String),218,221,"/**
 * Sets the state model using m1() and m2().
 * @param stateModel The state model string to set.
 */","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setNormalCaption(java.lang.String),136,139,"/**
* Sets the caption using m1() and m2().
* @param caption The caption string to set.
*/","* This will set the normal caption.
     * 
     * @param caption the normal caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRolloverCaption(java.lang.String),156,159,"/**
* Sets the RC caption using m1() and m2().
* @param caption The caption string to set.
*/","* This will set the rollover caption.
     * 
     * @param caption the rollover caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setAlternateCaption(java.lang.String),176,179,"/**
* Sets the AC caption using m1() and m2().
* @param caption The caption string to set.
*/","* This will set the alternate caption.
     * 
     * @param caption the alternate caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setDate(java.lang.String),103,106,"/**
* Sets the date value in the dictionary.
* @param date The date string to set.
*/
","* The build date of the software module. This string is normally produced by the compiler.
     *
     * @param date is the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURL(java.lang.String),577,580,"/**
* Sets the URL in the dictionary.
* @param url The URL string to set.
*/
","* (Optional) A URL, the use for which is defined by the URLType entry.
     *
     * @param url String of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setURL(java.lang.String),76,79,"/**
* Sets the URL in the dictionary.
* @param url The URL string to set.
*/
","* Sets the URL.
     * @param url the URL to be set as URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setName(java.lang.String),154,157,"/**
 * Adds a name entry to the dictionary.
 * @param name The name to add.
 */
","* Sets the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @param name the name to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setLocation(java.lang.String),164,167,"/**
* Sets the location in the dictionary.
* @param location The location string to set.
*/","* Sets the CPU host name or physical location of the signing.
     *
     * @param location the location to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setReason(java.lang.String),174,177,"/**
* Sets the reason in the dictionary.
* @param reason The reason to be set.
*/","* Sets the reason for the signing, such as (I agree...).
     *
     * @param reason the reason to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContactInfo(java.lang.String),185,188,"/**
* Adds contact info to the dictionary.
* @param contactInfo The contact information to add.
*/
","* Sets the contact info provided by the signer to enable a recipient to contact the signer to
     * verify the signature, e.g. a phone number.
     *
     * @param contactInfo the contact info to be used",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTitle(java.lang.String),175,178,"/**
* Sets the title using m1().m2().
* @param title The title to set.
*/","* Set the title for this node.
     *
     * @param title The new title for this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultAppearance(java.lang.String),510,513,"/**
* Sets the DA value in the dictionary.
* @param daValue The string value to set for DA.
*/","* Set the default appearance.
     * 
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDefaultValue(java.lang.String),390,393,"/**
* Calls m1().m2() with COSName.DV and the provided value.
*/","* Sets the default value of this field.
     *
     * @param value The name of the selected item.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setPartialName(java.lang.String),391,399,"/**
 * Validates field name and adds it to the dictionary.
 * @param name The field name to validate and add.
 */
","* This will set the partial name of the field.
     * 
     * @param name The new name for the field.
     * @throws IllegalArgumentException If the name contains a period character.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setAlternateFieldName(java.lang.String),444,447,"/**
* Sets the alternate field name in the dictionary.
* @param alternateFieldName The name of the alternate field.
*/
","* This will set the alternate name of the field (""shall be used in place of the actual field
     * name wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)""). The text appears as a tool tip in Adobe Reader. Because
     * of the usage for error or status messages, it should be different for each field.
     *
     * @param alternateFieldName the alternate name of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setMappingName(java.lang.String),467,470,"/**
* Adds a mapping to the dictionary using the provided name.
* @param mappingName The name of the mapping to add.
*/
","* This will set the mapping name of the field.
     * 
     * @param mappingName the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(java.lang.String),227,233,"/**
* Sets the 'V' COS name value using m1().m2().
* @param value The value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the plain text value of this field.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setValue(java.lang.String),214,219,"/**
* Sets COS name 'V' to the given value and calls m3().
* @param value The value to set for the COS name 'V'.
* @throws IOException if an I/O error occurs.
*/
","* Set the plain text value of this field, and try to update the visual appearance.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDefaultValue(java.lang.String),226,229,"/**
* Calls m1().m2() with COSName.DV and the given value.
*/","* Sets the default value of this field.
     *
     * @param value Plain text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultAppearance(java.lang.String),128,144,"/**
 * Updates annotation DA value in widgets, if KIDS exists.
 * @param daValue The new value for the DA property.
 */","* Set the default appearance.
     * 
     * This will set the local default appearance for the variable text field only, not 
     * affecting a default appearance in the parent hierarchy.
     * 
     * Providing null as the value will remove the local default appearance.
     * <p>
     * This method can also be used to change the font of a field, by replacing the font name from
     * this string with another font name found in the AcroForm default resources <u>before</u>
     * calling {@link #setValue(java.lang.String) setValue(String)}, see also
     * <a href=""https://stackoverflow.com/questions/47995062/pdfbox-api-how-to-handle-cyrillic-values"">this
     * stackoverflow answer</a>. For example, ""/Helv 10 Tf 0 g"" can be replaced with ""/F1 10 Tf 0
     * g"". Performance may go down (see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4508"">PDFBOX-4508)</a> if this is done
     * for many fields and with a very large font (e.g. ArialUni); to avoid this, save and reload
     * the file after changing all fields.
     *
     * @param daValue a string describing the default appearance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setScaleRatio(java.lang.String),68,71,"/**
* Sets the scale ratio using m1() and m2().
* @param scaleRatio The scale ratio string to set.
*/","* This will set the scale ration.
     * 
     * @param scaleRatio the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(java.lang.String,int)",410,413,"/**
 * Delegates to another m2 method with a COSName key.
 * @param key The key to use.
 * @param value The value to pass.
 */
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setStructParents,org.apache.pdfbox.pdmodel.PDPage:setStructParents(int),376,379,"/**
* Sets the number of structural parents for the page.
* @param structParents The number of structural parents.
*/","* This will set the key for this page in the structural parent tree.
     * 
     * @param structParents The new key for this page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setRotation,org.apache.pdfbox.pdmodel.PDPage:setRotation(int),602,605,"/**
* Sets the rotation value for the page.
* @param rotation Rotation angle in degrees.
*/","* This will set the rotation for this page.
     * 
     * @param rotation The new rotation for this page in degrees.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStart(int),146,154,"/**
 * Initiates page numbering with a given start value.
 * @param start The starting page number (must be positive).
 */","* Sets the start value for page numbering in this page range.
     * 
     * @param start
     *            a positive integer representing the start value.
     * @throws IllegalArgumentException
     *             if {@code start} is not a positive integer",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setBitsPerSample(int),134,137,"/**
* Sets the bits per sample value in the underlying object.
* @param bps bits per sample value to set
*/","* Set the number of bits that the output value will take up. Valid values
     * are 1,2,4,8,12,16,24,32.
     *
     * @param bps The number of bits for each output value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setMCID(int),99,102,"/**
* Sets the MCID value using the internal m1() and m2() methods.
* @param mcid The MCID value to set.
*/","* Sets the marked content identifier.
     * 
     * @param mcid the marked content identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setRevisionNumber(int),480,487,"/**
 * Sets the revision number for a COSName.
 * @param revisionNumber The revision number to set.
 */","* Sets the revision number (R).
     * 
     * @param revisionNumber the revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTreeNextKey(int),166,169,"/**
* Sets the parent tree next key in the COS structure.
* @param parentTreeNextkey The next key value to set.
*/","* Sets the next key in the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     * 
     * @param parentTreeNextkey The next key in the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setLength(int),73,76,"/**
* Sets the length parameter in the cryptFilterDictionary.
* @param length The length value to be set.
*/","* This will set the number of bits to use for the crypt filter algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setVersion(int),192,195,"/**
* Sets the version number in the dictionary.
* @param version The version number to set.
*/
","* This will set the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.  <br><br>
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param version The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setLength(int),213,216,"/**
* Sets the length value in the dictionary.
* @param length The length value to set.
*/","* This will set the number of bits to use for the encryption algorithm.
     *
     * @param length The new key length.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRevision(int),238,241,"/**
* Sets the revision number for a dictionary entry.
* @param revision The revision number to set.
*/","* This will set the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.  <br><br>
     *
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param revision The new encryption version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPermissions(int),397,400,"/**
* Sets the permissions value in the dictionary.
* @param permissions The permissions value to set.
*/
","* This will set the permissions bit mask.
     *
     * @param permissions The new permissions bit mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPage(int),437,440,"/**
* Annotates the document with the given page number.
* @param page The page number to annotate.
*/","* This will set the page.
     *
     * @param page The page number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setJustification(java.lang.String),168,180,"/**
* Sets the justification quadding value based on input.
* @param justification Justification string (""centered"", ""right"")
*/","* This will set the form of quadding (justification) of the annotation text.
     * 
     * @param justification The quadding of the text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setRotation(int),197,200,"/**
* Sets the rotation value for annotation.
* @param rotation Rotation angle in degrees.
*/","* This will set the clockwise rotation in degrees.
     * 
     * @param rotation The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(int),364,367,"/**
* Calls field.m1 with COSName.FF and the given integer value.
*/","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(int),408,411,"/**
* Sets the 'ff' value using field.m1.
* @param ff The value to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(int),452,455,"/**
* Calls field.m1 with COSName.CLR_FF and the given int.
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(int),496,499,"/**
* Calls field.m1 with COSName.F and the provided integer f.
*/","* This will set the field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(int),540,543,"/**
* Calls field.m1 with SET_F and the provided integer value.
*/","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(int),584,587,"/**
* Calls field.m1 with COSName.CLR_F and the given integer.
*/","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,toCIDSystemInfo,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:toCIDSystemInfo(java.lang.String,java.lang.String,int)",181,188,"/**
* Creates a COSDictionary with registry, ordering, and supplement.
* @param registry Registry string.
* @param ordering Ordering string.
* @param supplement Supplement integer.
* @return COSDictionary object.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",34,40,"/**
 * Initializes PDCID system info with registry, ordering, and supplement.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlags(int),400,404,"/**
* Sets the flags value and updates the dictionary.
* @param flags The flags value to set.
*/
","* This will set the font flags.
     *
     * @param flags The new font flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,setWidths,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",76,116,"/**
 * Populates font dictionary with character range and widths.
 * @param font The COSDictionary to update.
 * @param glyphList Glyph list for character mapping.
 */",* Sets the glyph widths in the font dictionary.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",137,155,"/**
 * Creates a PDImageXObject from a byte array, width, height, and color space.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,extractFromTiff,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:extractFromTiff(org.apache.pdfbox.io.RandomAccessRead,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",235,455,"/**
 * Processes TIFF data, extracts parameters, and writes data.
 * @param reader Reader object for TIFF data.
 * @param os OutputStream to write data.
 * @param params COSDictionary to store TIFF parameters.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setBitsPerComponent(int),124,128,"/**
* Sets bits per component in parameters.
* @param bitsPerComponent Number of bits per color component.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setHeight(int),211,215,"/**
* Sets the height parameter using COSName.H.
* @param height The height value to set.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setWidth(int),223,227,"/**
* Sets the width parameter using the provided value.
* @param width The desired width value.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPaintType(int),100,103,"/**
* Sets the paint type in the pattern dictionary.
* @param paintType The type of paint to set.
*/","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPatternType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPatternType(int),118,121,"/**
* Sets the pattern type in the pattern dictionary.
* @param patternType The type of pattern to set.
*/","* This will set the pattern type.
     * @param patternType The new pattern type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setPaintType(int),100,104,"/**
* Sets the paint type using the provided value.
* @param paintType The type of paint to set.
*/","* This will set the paint type.
     * @param paintType The new paint type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setTilingType(int),119,122,"/**
 * Sets the tiling type using the provided value.
 * @param tilingType The tiling type to set.
 */","* This will set the tiling type.
     * @param tilingType The new tiling type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setShadingType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setShadingType(int),125,128,"/**
* Sets the shading type in the dictionary.
* @param shadingType The type of shading to apply.
*/","* This will set the shading type.
     *
     * @param shadingType the new shading type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerFlag(int),79,82,"/**
* Sets the bits per flag using the provided value.
* @param bitsPerFlag The number of bits to set.
*/","* Set the number of bits per flag.
     *
     * @param bitsPerFlag the number of bits per flag",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setVerticesPerRow(int),75,78,"/**
* Sets the number of vertices per row in the associated object.
* @param verticesPerRow The number of vertices per row.
*/","* Set the number of vertices per row.
     *
     * @param verticesPerRow the number of vertices per row",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerComponent(int),75,79,"/**
 * Sets the bits per component value.
 * @param bitsPerComponent The number of bits per color component.
 */
","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate and updates internal state.
* @param bitsPerCoordinate The number of bits per coordinate.
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineCapStyle(int),252,255,"/**
* Sets the line cap style in the dictionary.
* @param style The line cap style to set.
*/","* This will set the line cap style for the graphics state.
     *
     * @param style The new line cap style to set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineJoinStyle(int),272,275,"/**
* Sets the LJ style in the dictionary.
* @param style The style value to set.
*/","* This will set the line join style.
     *
     * @param style The new line join style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setOverprintMode(java.lang.Integer),420,430,"/**
 * Sets the overprint mode in the dictionary.
 * @param overprintMode Overprint mode value, or null for default.
 */","* This will set the overprint mode(OPM).
     *
     * @param overprintMode The overprint mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFlags(int),85,88,"/**
* Calls m1 on the action object with the provided flags.
* @param flags Integer value representing flags.
*/",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFlags(int),111,114,"/**
* Sets the flags value using the action's m1 method.
* @param flags The flags value to be set.
*/",* @param flags the flags,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setPageNumber(int),160,170,"/**
 * Sets the page number in the dictionary.
 * @param pageNumber The page number to set; negative value uses default.
 */","* Set the page number (zero-based) in the current document containing the file attachment
     * annotation.
     *
     * @param pageNumber the zero based page number. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationIndex(int),223,233,"/**
 * Sets a value in the dictionary based on the index.
 * @param index The index to use; negative values trigger a different action.
 */","* This will set the index (zero-based) of the annotation in the /Annots array of the page
     * specified by the /P entry.
     *
     * @param index the zero based index. If this is &lt; 0 then the entry is removed.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationFlags(int),302,305,"/**
* Calls m1().m2() with COSName.F and the provided flags.
*/","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setStructParent(int),693,696,"/**
* Calls m1().m2() with COSName.STRUCT_PARENT and structParent.
*/","* This will set the key for this annotation in the structural parent tree.
     * 
     * @param structParent The new key for this annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setQ(int),136,139,"/**
* Calls m1().m2() with COSName.Q and the provided integer q.
*/","* This will set the quadding/justification of the text. Please see the QUADDING_CONSTANTS
     * in {@link PDVariableText }.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRotation(int),76,79,"/**
* Sets the rotation value for the COSName.R property.
* @param rotation The rotation value to set.
*/","* This will set the rotation.
     * 
     * @param rotation the rotation as a multiple of 90",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,setP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:setP(int),77,84,"/**
* Sets the 'P' COS name value in the dictionary.
* @param p The value to set (must be between 0 and 3).
*/
","* Set the P value.
     * 
     * @param p the value to be set as P",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setTimestampRequired(boolean),96,99,"/**
* Sets the 'FT' property in the dictionary to 1 if flag is true, 0 otherwise.
*/","* Sets if a timestamp is reuqired or not.
     * 
     * @param flag true if a timestamp is required",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setOpenCount(int),234,237,"/**
* Logs open count to the system.
* @param openCount The number of open resources.
*/","* Set the open count. This number is automatically managed for you when you add items to the outline.
     *
     * @param openCount The new open count.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setQ(int),622,625,"/**
* Sets the value of COSName.Q in the dictionary.
* @param q The integer value to set for COSName.Q.
*/
","* This will set the document-wide default value for the quadding/justification of variable text
     * fields. See the QUADDING constants of {@link PDVariableText}.
     *
     * @param q The justification of the variable text fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDField:setFieldFlags(int),213,216,"/**
* Sets flags for COSName FF in the dictionary.
* @param flags The flags to set.
*/","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,setTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:setTopIndex(java.lang.Integer),69,79,"/**
 * Sets the top index, or clears it if null.
 * @param topIndex The top index to set, or null to clear.
 */
","* This will set top index ""TI"" value.
     *
     * @param topIndex the value for the top index, null will remove the value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMaxLen(int),203,206,"/**
* Calls m1().m2() with COSName.MAX_LEN and the provided maxLen.
*/","* Sets the maximum number of characters of the text field.
     * 
     * @param maxLen the maximum number of characters",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setQ(int),208,211,"/**
* Calls m1().m2() with COSName.Q and the given integer q.
*/","* This will set the quadding/justification of the text.  See QUADDING constants.
     *
     * @param q The new text justification.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(java.lang.String,long)",432,435,"/**
* Delegates to another m2 method with a COSName key.
* @param key The key to use.
* @param value The value to associate with the key.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setRevision(long),151,154,"/**
* Sets the revision number in the dictionary.
* @param revision The revision number to set.
*/","* The software module revision number, corresponding to the Date attribute.
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setMinimumRevision(long),179,182,"/**
* Sets the revision number for the dictionary.
* @param revision The revision number to set.
*/
","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @param revision is the software module revision number",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(java.lang.String,float)",473,476,"/**
* Calls m2 with a COSName object created from the key.
* @param key The key to create a COSName from.
* @param value The float value to pass to m2.
*/
","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setUserUnit,org.apache.pdfbox.pdmodel.PDPage:setUserUnit(float),890,897,"/**
 * Sets the user unit on the page.
 * @param userUnit The user unit value (must be positive).
 */","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch. This is supported by PDF 1.6 and higher.
     *
     * @param userUnit
     * throws IllegalArgumentException if the parameter is not positive.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineWidth(float),132,135,"/**
* Sets the width of the dictionary using the provided float value.
*/","* Set the guideline width.
     *
     * @param width The width in default user space units.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setOpacity(float),805,808,"/**
* Sets the color alpha (opacity) of an annotation.
* @param opacity Opacity value (0.0 - 1.0)
*/","* Set the annotation opacity.
     *
     * @param opacity The new opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderLength(float),316,319,"/**
* Sets the leader length in the annotation.
* @param leaderLength The length of the leader.
*/","* This will set the length of the leader line.
     * 
     * @param leaderLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderExtend(float),336,339,"/**
* Calls annot.m1 with COSName.LLE and the provided leaderExtend value.
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderExtend length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderOffset(float),356,359,"/**
* Sets the leader offset value using the provided float.
* @param leaderOffset The offset value to be set.
*/","* This will set the length of the leader line offset.
     * 
     * @param leaderOffset length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseDictElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseDictElement(org.w3c.dom.Element),357,423,"/**
 * Parses a COSDictionary from an Element, handling child elements.
 * @param dictEl Element representing the dictionary
 * @return COSDictionary object parsed from the element
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontWeight(float),347,350,"/**
* Sets the font weight in the dictionary.
* @param fontWeight The font weight value to set.
*/","* Set the weight of the font.
     *
     * @param fontWeight The new weight of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalicAngle(float),452,455,"/**
* Sets the italic angle using the provided float value.
*/","* This will set the italic angle for the font.
     *
     * @param angle The new italic angle for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAscent(float),472,475,"/**
* Sets the ascent value in the dictionary.
* @param ascent The ascent value to set.
*/","* This will set the ascent for the font.
     *
     * @param ascent The new ascent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setDescent(float),492,495,"/**
* Sets the descent value in the DIC.
* @param descent The descent value to set.
*/","* This will set the descent for the font.
     *
     * @param descent The new descent for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setLeading(float),512,515,"/**
* Sets the leading value in the dictionary.
* @param leading The leading value to set.
*/
","* This will set the leading for the font.
     *
     * @param leading The new leading for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCapHeight(float),541,545,"/**
* Sets the cap height value and stores it in the dictionary.
* @param capHeight The cap height value to set.
*/
","* This will set the cap height for the font.
     *
     * @param capHeight The new cap height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setXHeight(float),570,574,"/**
* Sets the x-height value and stores it in the dictionary.
* @param xHeight The x-height value to set.
*/
","* This will set the x height for the font.
     *
     * @param xHeight The new x height for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemV(float),591,594,"/**
* Sets the STEM_V value in the DIC.
* @param stemV The STEM_V value to set.
*/","* This will set the stem V for the font.
     *
     * @param stemV The new stem v for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemH(float),611,614,"/**
* Sets the stem height in the DIC.
* @param stemH The stem height value to set.
*/","* This will set the stem H for the font.
     *
     * @param stemH The new stem h for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAverageWidth(float),631,634,"/**
* Sets the average width in the DIC.
* @param averageWidth The average width value to set.
*/","* This will set the average width for the font.
     *
     * @param averageWidth The new average width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMaxWidth(float),651,654,"/**
* Sets the maximum width in the dic object.
* @param maxWidth The maximum width value to set.
*/","* This will set the max width for the font.
     *
     * @param maxWidth The new max width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMissingWidth(float),691,694,"/**
* Sets the missing width value in the dic object.
* @param missingWidth The width value to set.
*/","* This will set the missing width for the font.
     *
     * @param missingWidth The new missing width for the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setXStep(float),137,140,"/**
* Sets the X-step value using the provided step size.
* @param xStep The step size to set.
*/","* This will set the XStep value.
     * @param xStep The new XStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setYStep(float),155,158,"/**
* Sets the Y step value using m1().m2().
* @param yStep The Y step value to set.
*/","* This will set the YStep value.
     * @param yStep The new YStep value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setVolume(float),83,90,"/**
 * Sets the volume level.
 * @param volume Volume level between -1.0 and 1.0.
 */","* Gets the volume at which to play the sound, in the range −1.0 to 1.0.
     *
     * @param volume The volume at which to play the sound, in the range −1.0 to 1.0.
     * 
     * @throws IllegalArgumentException if the volume parameter is outside of the range −1.0 to 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineLength(float),282,285,"/**
* Sets the leader line length for the current object.
* @param leaderLineLength The desired leader line length.
*/","* This will set the length of the leader line.
     * 
     * @param leaderLineLength length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineExtensionLength(float),302,305,"/**
* Sets the leader line extension length.
* @param leaderLineExtensionLength Length of the leader line.
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderLineExtensionLength length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineOffsetLength(float),322,325,"/**
* Sets the leader line offset length using the provided value.
* @param leaderLineOffsetLength The offset length to set.
*/","* This will set the length of the leader line offset.
     * 
     * @param leaderLineOffsetLength length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setConstantOpacity(float),124,127,"/**
* Calls m2 on m1 with COSName.CA and the provided float value.
*/","* This will set the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @param ca the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setWidth(float),106,117,"/**
 * Sets COSName.W based on float w; uses m2().m4 if w is an integer.
 */","* This will set the border width in points, 0 = no border.
     *
     * There is a bug in Adobe Reader DC, float values are ignored for text field widgets. As a
     * workaround, floats that are integers (e.g. 2.0) are written as integer in the PDF.
     * <p>
     * In Adobe Acrobat DC, the values are shown as ""0 = Invisible, 1 = Thin, 2 = Medium, 3 = Thick""
     * for widget and link annotations.
     *
     * @param w float the width in points",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setV(float),363,366,"/**
* Sets the minimum required capability in the dictionary.
* @param minimumRequiredCapability The minimum capability value.
*/","* (Optional) The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @param minimumRequiredCapability is the minimum required capability of the
     * signature field seed value dictionary parser",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCYX(float),331,334,"/**
* Sets the cyx value using the m1() and m2() methods.
* @param cyx The cyx value to set.
*/
","* This will set the CYX factor.
     * 
     * @param cyx CYX factor",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseCOSStream,org.apache.pdfbox.pdfparser.COSParser:parseCOSStream(org.apache.pdfbox.cos.COSDictionary),713,777,"/**
 * Reads a COS stream, handling length and endstream markers.
 * @param dic The COSDictionary containing stream information.
 * @return COSStream object representing the stream data.
 */","* This will read a COSStream from the input stream using length attribute within dictionary. If
     * length attribute is a indirect reference it is first resolved to get the stream length. This
     * means we copy stream data without testing for 'endstream' or 'endobj' and thus it is no
     * problem if these keywords occur within stream. We require 'endstream' to be found after
     * stream data is read.
     *
     * @param dic dictionary that goes with this stream.
     *
     * @return parsed pdf stream.
     *
     * @throws IOException if an error occurred reading the stream, like problems with reading
     * length attribute, stream does not end with 'endstream' after data read, stream too short etc.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFStreamParser:parse(),79,88,"/**
 * Collects objects from the stream using m2() and stores them.
 * @return List of objects collected from the stream.
 */
","* This will parse all the tokens in the stream. This will close the stream when it is finished parsing.
     *
     * @return All of the tokens in the stream.
     * @throws IOException If there is an error while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getGlyphBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getGlyphBBox(),114,152,"/**
* Parses PDF stream to extract a rectangle. Returns null if parsing fails.
*/","* Calculate the bounding box of this glyph. This will work only if the first operator in the
     * stream is d1.
     *
     * @return the bounding box of this glyph, or null if the first operator is not d1.
     * @throws IOException If an io error occurs while parsing the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getWidth(),167,185,"/**
 * Parses PDF stream, executes operators, and returns a float.
 * Throws IOException if stream ends unexpectedly.
 */","* Get the width from a type3 charproc stream.
     *
     * @return the glyph width.
     * @throws IOException if the stream could not be read, or did not have d0 or d1 as first
     * operator, or if their first argument was not a number.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(),162,165,"/**
 * Constructs a new PDDocument using a memory-only stream cache.
 */","* Creates an empty PDF document.
     * You need to add at least one page for the document to be valid.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),49,57,"/**
 * Creates a PDComplexFileSpecification from a COSDictionary.
 * @param base The COSDictionary to use.
 * @throws IOException if base is not a COSDictionary.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,createFS,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:createFS(org.apache.pdfbox.cos.COSBase),45,65,"/**
 * Creates a PDFileSpecification from a COSBase object.
 * @param base COSBase object representing file specification
 * @return PDFileSpecification or null if base is null
 */","* A file specification can either be a COSString or a COSDictionary.  This
     * will create the file specification either way.
     *
     * @param base The cos object that describes the fs.
     *
     * @return The file specification for the COSBase object.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(),42,46,"/**
 * Constructs a new FDFAnnotationCaret object.
 * Initializes the annotation subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(),43,47,"/**
 * Constructs a FDF annotation circle, setting its subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(),40,44,"/**
* Constructs a FDFAnnotationFileAttachment object.
* Initializes the subtype name for the annotation.
*/
",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(),49,52,"/**
* Initializes a FDFAnnotationFreeText object.
* Sets the annotation subtype to SUBTYPE.
*/
",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(),54,58,"/**
 * Constructs a new FDFAnnotationInk object, initializing subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(),46,49,"/**
* Initializes a FDFAnnotationLine object, setting its subtype.
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(),52,55,"/**
 * Initializes the FDF annotation link. Sets the subtype name.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(),50,54,"/**
 * Constructs a FDFAnnotationPolygon object, initializing its subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(),51,55,"/**
* Constructs a FDFAnnotationPolyline object, initializing its subtype.
*/",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(),40,44,"/**
 * Constructs a FDFAnnotationSound object, initializing its subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(),44,48,"/**
 * Constructs a FDFAnnotationSquare object, initializing its subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(),62,65,"/**
 * Initializes the FDFAnnotationStamp with a subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(),42,46,"/**
 * Constructs a FDFAnnotationText object, initializing its subtype.
 */",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(),36,38,"/**
 * Default constructor for the FDFAnnotationTextMarkup class.
 */
",* Default constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initCallout(org.w3c.dom.Element),121,134,"/**
 * Processes an element's callout string, converts values to floats,
 * and performs an action (m5).
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:initVertices(org.w3c.dom.Element),87,109,"/**
 * Extracts and processes polygon vertices from an Element via XPath.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initVertices(org.w3c.dom.Element),83,105,"/**
 * Extracts vertex values from an Element using XPath.
 * @param element Element containing the vertices data.
 * @throws IOException if vertices are missing or invalid.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(java.util.TreeMap),337,393,"/**
* Processes CID font data, calculating and storing glyph metrics.
* Uses cidToGid map to iterate through glyphs and calculate data.
*/",* Builds vertical metrics with a custom CIDToGIDMap (for embedding font subset).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary),516,545,"/**
 * Extracts and stores glyph metrics from CID font data.
 * Populates CID font with glyph information.
 */",* Build vertical metrics with Identity CIDToGIDMap (for embedding full font).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(),57,59,"/**
 * Default constructor for the PDSimpleFont class.
 */",* Constructor for embedding.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
 * Sets decode values and registers with m1().
 * @param decodeValues COSArray containing decode parameters
 */
","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets decode values and registers with the m1().m2() method.
* @param decodeValues COSArray containing decode parameters.
*/
","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineWidth(java.lang.Float),232,235,"/**
* Sets the line width to the specified width.
* @param width The desired line width.
*/","* This will set the line width.
     *
     * @param width The line width for the object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setMiterLimit(java.lang.Float),293,296,"/**
* Sets the miter limit value.
* @param miterLimit The miter limit value to set.
*/
","* This will set the miter limit for the graphics state.
     *
     * @param miterLimit The new miter limit value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFlatnessTolerance(java.lang.Float),468,471,"/**
* Sets the flatness value for a COSName.FL object.
* @param flatness the flatness value to set
*/
","* This will set the flatness tolerance.
     *
     * @param flatness The new flatness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setSmoothnessTolerance(java.lang.Float),488,491,"/**
 * Applies smoothness to the 'SM' COSName.
 * @param smoothness Smoothness value to apply.
 */
","* This will set the smoothness tolerance.
     *
     * @param smoothness The new smoothness tolerance",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingAlphaConstant(java.lang.Float),528,531,"/**
 * Calls m1 with COSName.CA and the given alpha value.
 * @param alpha float value to pass to m1
 */
","* This will set the stroking alpha constant.
     *
     * @param alpha The new stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingAlphaConstant(java.lang.Float),548,551,"/**
* Calls m1 with COSName.CA_NS and the provided alpha value.
*/","* This will set the non stroking alpha constant.
     *
     * @param alpha The new non stroking alpha constant.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(),71,74,"/**
* Initializes a new PDF annotation link. Sets the subtype.
*/",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(),52,54,"/**
 * Default constructor for the PDAnnotationMarkup class.
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(),44,47,"/**
 * Initializes the annotation popup, setting its subtype.
 */",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(),43,46,"/**
* Sets the subtype name on the annotation widget's COS object.
*/
",* Constructor.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float),62,64,"/**
* Overloads m1 with a single float argument.
* Delegates to the four-float version.
* @param difference The float value to pass.
*/
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and boundaries of the underlying.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float),149,151,"/**
 * Overloads m1 with a single float argument.
 * Delegates to the four-float version.
 * @param difference The difference value.
 */
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float),137,140,"/**
* Overloaded helper method, passes difference to another m1.
*/","* This will set the difference between the annotations ""outer"" rectangle defined by /Rect and
     * the border.
     *
     * <p>
     * This will set an equal difference for all sides</p>
     *
     * @param difference from the annotations /Rect entry",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),41,44,"/**
 * Constructs a PDCheckBox object, initializing its parent form.
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Creates a PDComboBox instance associated with a PDAcroForm.
 * Sets the combo box property to true.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),37,40,"/**
 * Constructs a PDListBox object, passing the AcroForm.
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),106,112,"/**
 * Creates a signature field from the given AcroForm.
 * @param acroForm The AcroForm to create the signature field from.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,addOriginalContent,"org.apache.pdfbox.multipdf.Overlay:addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",431,450,"/**
* Adds COS content to the content array.
* @param contents COSBase object to add
* @param contentArray Array to add content to
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createColorSpace(org.apache.pdfbox.cos.COSBase),168,192,"/**
* Handles color space creation based on COSBase type.
* @param cs COSBase object representing the color space.
* @return PDColorSpace object or throws IOException.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.pdfbox.cos.COSArray),147,165,"/**
 * Creates a PDRectangle from a COSArray containing rectangle coordinates.
 */","* Constructor.
     *
     * @param array An array of numbers as specified in the PDF Reference for a rectangle type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(org.apache.pdfbox.cos.COSArray,int)",52,76,"/**
 * Creates a line dash pattern from a COS array and phase.
 * @param array Array of floats representing the dash pattern.
 * @param phase Initial phase value for the dash pattern.
 */","* Creates a new line dash pattern from a dash array and phase.
     * @param array the dash array
     * @param phase the phase",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getDecodeArray,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage),741,784,"/**
 * Extracts or generates a decode array for image components.
 * @param pdImage The PDF image object.
 * @return float[] decode array, or default if not found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,checkFontMatrixValues,org.apache.pdfbox.pdmodel.font.PDType3Font:checkFontMatrixValues(org.apache.pdfbox.cos.COSArray),266,270,"/**
 * Checks if a COS matrix is valid (size 6, m2.m3().m4 non-null).
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,toString,org.apache.pdfbox.pdmodel.common.PDRange:toString(),136,140,"/**
* Returns a string representing a PDRange using m1 and m2.
*/",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:eval(float[]),68,103,"/**
 * Processes input float array, performs calculations, and returns results.
 */",* {@inheritDoc},,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setRangeForComponent,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",511,527,"/**
* Populates the RANGE array with default values and updates bounds.
* @param range The PDRange object containing range information.
* @param n The number of elements to add.
*/","* Sets the range for this color space.
     * @param range the new range for the a component
     * @param n the component to set the range for",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,readPatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)",175,232,"/**
 * Creates a patch from input data, handling free or implicit edges.
 * @param input Input stream for data.
 * @return Patch object or null on EOF.
 */
","* Read a single patch from a data stream, a patch contains information of its coordinates and color parameters.
     *
     * @param input the image source data stream
     * @param isFree whether this is a free patch
     * @param implicitEdge implicit edge when a patch is not free, otherwise it's not used
     * @param implicitCornerColor implicit colors when a patch is not free, otherwise it's not used
     * @param maxSrcCoord the maximum coordinate value calculated from source data
     * @param maxSrcColor the maximum color value calculated from source data
     * @param rangeX range for coordinate x
     * @param rangeY range for coordinate y
     * @param colRange range for color
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform transformation for user to device space
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return a single patch
     * @throws IOException when something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,readVertex,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)",196,236,"/**
* Reads a vertex from the input stream, transforming coordinates.
* @param input Input stream to read vertex data from.
*/","* Read a vertex from the bit input stream performs interpolations.
     *
     * @param input bit input stream
     * @param maxSrcCoord max value for source coordinate (2^bits-1)
     * @param maxSrcColor max value for source color (2^bits-1)
     * @param rangeX dest range for X
     * @param rangeY dest range for Y
     * @param colRangeTab dest range array for colors
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform the affine transformation
     * @return a new vertex with the flag and the interpolated values
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getBeforeColour(),66,69,"/**
 * Returns the PDGamma object associated with mask 0.
 * @return PDGamma object.
 */
","* Gets the colour for the before edge.
     * 
     * @return the colour for the before edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getAfterColour(),86,89,"/**
 * Returns a PDGamma object by calling m1(1).
 */","* Gets the colour for the after edge.
     * 
     * @return the colour for the after edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getStartColour(),106,109,"/**
* Returns a PDGamma object by calling m1 with argument 2.
*/","* Gets the colour for the start edge.
     * 
     * @return the colour for the start edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getEndColour(),126,129,"/**
* Returns a PDGamma object by calling m1 with argument 3.
*/","* Gets the colour for the end edge.
     * 
     * @return the colour for the end edge",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getBlendMode(),582,585,"/**
* Retrieves the blend mode from the dictionary.
* Uses COSName.BM to look up the blend mode.
*/","* Returns the blending mode stored in the COS dictionary
     *
     * @return the blending mode",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithTintTransform(java.awt.image.WritableRaster),286,346,"/**
* Converts a raster image to RGB, applying tint transform and caching.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getNumberOfComponents(),448,452,"/**
* Returns the result of calling m1().m2().
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toString(),584,605,"/**
 * Generates a string representation of the object's properties.
 * Uses m1, m2, m3, m4 for internal string manipulation.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toString(),327,333,"/**
 * Returns a string describing the indexed color space.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toString(),304,311,"/**
* Concatenates strings and values into a formatted string.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,69,"/**
 * Extracts a PDPageDestination from a COSBase object.
 * Returns null if a PDPageDestination is not found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getDestination(),70,73,"/**
* Retrieves a PDDestination object using chained method calls.
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:getDestination(),66,69,"/**
* Retrieves a PDDestination object using chained method calls.
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getDestination(),140,143,"/**
* Retrieves a PDDestination object using chained method calls.
*/","* Get the destination to be displayed when the annotation is activated. Either this or the
     * action entry should be set, but not both.
     *
     * @return The destination for this annotation.
     *
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getDestination(),186,189,"/**
* Retrieves a PDDestination object using chained method calls.
*/","* Get the page destination of this node.
     *
     * @return The page destination of this node.
     * @throws IOException If there is an error creating the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createMatrix,org.apache.pdfbox.util.Matrix:createMatrix(org.apache.pdfbox.cos.COSBase),143,162,"/**
 * Creates a Matrix from a COSArray if it meets certain criteria.
 * @param base COSBase object to check and convert.
 * @return A Matrix object or an empty Matrix if invalid.
 */","* Convenience method to be used when creating a matrix from unverified data. If the parameter
     * is a COSArray with at least six numbers, a Matrix object is created from the first six
     * numbers and returned. If not, then the identity Matrix is returned.
     *
     * @param base a COS object, preferably a COSArray with six numbers.
     *
     * @return a Matrix object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getObjectFromPath,org.apache.pdfbox.cos.COSDictionary:getObjectFromPath(java.lang.String),1311,1328,"/**
* Retrieves a COSBase object by traversing a path.
* @param objPath Path to the COSBase object.
* @return The COSBase object at the specified path.
*/","* Nice method, gives you every object you want Arrays works properly too. Try ""P/Annots/[k]/Rect"" where k means the
     * index of the Annots array.
     *
     * @param objPath the relative path to the object.
     * @return the object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,getDestination,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:getDestination(java.lang.String),65,85,"/**
 * Retrieves a PDDestination object based on the given name.
 * Returns null if no destination is found.
 */","* Returns the destination corresponding to the parameter.
     *
     * @param name The destination name.
     * @return The destination for that name, or null if there isn't any.
     * 
     * @throws IOException if something goes wrong when creating the destination object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String),74,77,"/**
* Retrieves a COSBase object based on the provided attribute name.
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",86,94,"/**
* Returns COS value for attribute, or defaultValue if null.
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @param defaultValue the default value
     * @return the attribute value for a given name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,isSpecified,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:isSpecified(java.lang.String),66,69,"/**
 * Checks if an entity with the given name exists.
 * @param name The name to search for.
 * @return True if the entity exists, false otherwise.
 */
","* Is the attribute with the given name specified in this attribute object?
     * 
     * @param name the attribute name
     * @return <code>true</code> if the attribute is specified,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getArrayOfString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getArrayOfString(java.lang.String),103,117,"/**
 * Extracts string array from COS array named 'name'.
 * Returns null if 'name' doesn't map to a COSArray.
 */","* Gets an array of strings.
     * 
     * @param name the attribute name
     * @return the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfString(java.lang.String,java.lang.String[])",125,136,"/**
* Updates a COS array for a given name with new values.
* @param name Name of the COS entry to update.
* @param values Array of strings to be added to the array.
*/","* Sets an array of strings.
     * 
     * @param name the attribute name
     * @param values the array of strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNameOrArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNameOrArrayOfName(java.lang.String,java.lang.String)",168,190,"/**
* Retrieves a value by name, returns default if not found.
* @param name Value name to retrieve.
* @param defaultValue Default value if not found.
*/","* Gets a name value or array of name values.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a String or array of Strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfName(java.lang.String,java.lang.String[])",212,223,"/**
* Updates a COS array associated with a name.
* @param name Name of the COS entry.
* @param values Array of values to be added.
*/","* Sets an array of name values.
     * 
     * @param name the attribute name
     * @param values the array of name values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrName(java.lang.String,java.lang.String)",232,244,"/**
 * Retrieves value by name, returns default if not a COSNumber/Name.
 * @param name Value name.
 * @param defaultValue Default value if not found.
 */
","* Gets a number or a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default name
     * @return a Float or a String",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrArrayOfNumber(java.lang.String,float)",302,328,"/**
* Extracts float value from COS object, returns default if not found.
*/","* Gets a number or an array of numbers.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a Float or an array of floats",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfNumber(java.lang.String,float[])",364,375,"/**
* Adds float values to a COS array under a given name.
* @param name COS object name
* @param values Array of float values to add
*/","* Sets an array of float numbers.
     * 
     * @param name the attribute name
     * @param values the float numbers",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColor,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColor(java.lang.String),383,391,"/**
 * Retrieves a PDGamma object by name.
 * @param name The name of the PDGamma to retrieve.
 * @return A PDGamma object or null if not found.
 */
","* Gets a colour.
     * 
     * @param name the attribute name
     * @return the colour",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColorOrFourColors,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColorOrFourColors(java.lang.String),399,417,"/**
 * Parses a COS array to create a color space object.
 * @param name COS array name; returns color space or null.
 */","* Gets a single colour or four colours.
     * 
     * @param name the attribute name
     * @return the single ({@link PDGamma}) or a ({@link PDFourColours})",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,"org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",570,578,"/**
 * Retrieves a COSDictionary based on two keys.
 * @param firstKey First key to search with.
 * @param secondKey Second key to search with.
 * @return COSDictionary or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The COSDictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",910,919,"/**
 * Retrieves a boolean value based on keys, defaulting to provided value.
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",1021,1030,"/**
 * Retrieves a value from COS objects, defaulting to defaultValue.
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getDecodeParams,"org.apache.pdfbox.filter.Filter:getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",120,149,"/**
 * Retrieves DecodeParams dictionary from COSDictionary, or creates a new one.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getFilters(),246,259,"/**
 * Extracts filter names from COS parameters.
 * Returns list of names or empty list if no filters.
 */","* Returns A list of filters applied to this stream.
     *
     * @return A (possibly empty) list of filters applied to this stream, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getDecode(),278,282,"/**
 * Retrieves the FUNC_MASK COSArray from parameters.
 * Uses COSName.D and COSName.DECODE as keys.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getColorSpace(),239,247,"/**
 * Returns the color space, creating it if it doesn't exist.
 */","* This will get the color space or null if none exists.
     *
     * @return the color space for the shading
     * @throws IOException if there is an error getting the color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(java.util.List,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",267,284,"/**
 * Filters COS objects based on type.
 * @param keys List of keys to filter.
 * @param type1 First type to match.
 * @param type2 Second type to match.
 * @return List of COS objects matching the types.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,decode,"org.apache.pdfbox.filter.CryptFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,45,"/**
 * Decodes data from an input stream.
 * @param encoded Input stream, decoded output stream, parameters, index
 * @throws IOException if encryption is unsupported
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,encode,"org.apache.pdfbox.filter.CryptFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",47,62,"/**
 * Decodes input stream based on encryption parameters.
 * Throws IOException if unsupported encryption is found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,hasOnlyDocumentsOrParts,org.apache.pdfbox.multipdf.PDFMergerUtility:hasOnlyDocumentsOrParts(org.apache.pdfbox.cos.COSArray),1041,1058,"/**
* Checks if all entries in the array are document or part dictionaries.
* @param kLevelOneArray COSArray to validate
* @return True if all entries are valid, false otherwise.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isCatalog,org.apache.pdfbox.pdfparser.BruteForceParser:isCatalog(org.apache.pdfbox.cos.COSDictionary),765,769,"/**
* Checks if a dictionary is a catalog or contains FDF data.
*/","* Tell if the dictionary is a PDF or FDF catalog.
     * 
     * @param dictionary the dictionary to be tested
     * @return true if the given dictionary is a root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",79,99,"/**
 * Constructs a PDPageTree with a root dictionary and document.
 * Handles cases where the root is a page dictionary.
 */","* Constructor for reading.
     *
     * @param root A page tree root.
     * @param document The document which contains ""root"".",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,sanitizeType,org.apache.pdfbox.pdmodel.PDPageTree:sanitizeType(org.apache.pdfbox.cos.COSDictionary),271,283,"/**
 * Validates dictionary type, sets to PAGE if null.
 * @param dictionary The COSDictionary to validate.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,isPageTreeNode,org.apache.pdfbox.pdmodel.PDPageTree:isPageTreeNode(org.apache.pdfbox.cos.COSDictionary),371,378,"/**
* Checks if a COSDictionary represents a pages dictionary.
* @param node The COSDictionary to check.
* @return True if it's a pages dictionary, false otherwise.
*/
",* Returns true if the node is a page tree node (i.e. and intermediate).,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getCryptFilterMethod(),107,110,"/**
 * Retrieves the function mask from the crypt filter dictionary.
 */","* This will return the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @return the name of the crypt filter method.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStreamFilterName(),553,557,"/**
* Returns the function mask COSName, or IDENTITY if null.
*/","* Returns the name of the filter which is used for de/encrypting streams.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStringFilterName(),575,579,"/**
* Returns the function mask COSName, or IDENTITY if null.
*/","* Returns the name of the filter which is used for de/encrypting strings.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int),459,498,"/**
 * Converts a code to a string, using cmap or encoding.
 * Returns null if no cmap is available.
 */","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @return Unicode character(s)",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,createXObject,"org.apache.pdfbox.pdmodel.graphics.PDXObject:createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",52,90,"/**
* Creates a PDXObject based on the COSBase object type.
* @param base COSBase object to process.
* @param resources PDResources object.
* @return PDXObject instance or throws IOException.
*/","* Creates a new XObject instance of the appropriate type for the COS stream.
     *
     * @param base The stream which is wrapped by this XObject.
     * @param resources the resources of this XObject
     * @return A new XObject instance.
     * @throws java.io.IOException if there is an error creating the XObject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getSubType,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getSubType(),134,141,"/**
 * Returns the subType COSName. Lazily initializes if null.
 */","* Returns the subtype of the soft mask (Alpha, Luminosity) - S entry
     * 
     * @return the subtype of the soft mask",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getRelationship(),74,77,"/**
* Retrieves the function mask from the dictionary.
* Returns a COSName representing the function mask.
*/
","* Get the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @return the relationship as a name. Valid values are P (the target is the parent of the
     * current document) and C (the target is a child of the current document). Invalid values or
     * null are also returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearanceState(),324,327,"/**
* Returns a COSName by applying m2 to m1's result.
*/","* Returns the annotations appearance state, which selects the applicable appearance stream from an appearance
     * subdictionary.
     * 
     * @return the annotations appearance state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",390,402,"/**
 * Adds or updates a key-value pair in a COSDictionary.
 * @param embedded The embedded object.
 * @param key The key to set.
 * @param value The value to associate with the key.
 */
","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param embedded The embedded dictionary to set the item in.
     * @param key The key to the object,
     * @param value The string value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",456,465,"/**
* Adds a key-value pair to an embedded dictionary.
* @param embeddedDictionary The dictionary to modify.
* @param key The key to add.
* @param value The integer value to associate with the key.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param embeddedDictionary The embedded dictionary.
     * @param key The key to the object,
     * @param value The int value for the name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,isEncrypted,org.apache.pdfbox.cos.COSDocument:isEncrypted(),329,332,"/**
* Checks if the trailer has encryption data.
* Returns true if encryption exists, false otherwise.
*/
","* This will tell if this is an encrypted document.
     *
     * @return true If this document is encrypted.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:getEncryptionDictionary(),340,343,"/**
* Retrieves the encryption dictionary from the trailer.
* @return COSDictionary containing encryption information.
*/
","* This will get the encryption dictionary if the document is encrypted or null if the document
     * is not encrypted.
     *
     * @return The encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneRoleMap,"org.apache.pdfbox.multipdf.Splitter:cloneRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",281,297,"/**
* Copies role map entries from src to dest structure tree.
* @param srcStructTree Source structure tree.
* @param destStructTree Destination structure tree.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,initialParse,org.apache.pdfbox.pdfparser.FDFParser:initialParse(),48,58,"/**
 * Parses the trailer to find the root object, throws IOException if missing.
 */","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,initialParse,org.apache.pdfbox.pdfparser.PDFParser:initialParse(),105,123,"/**
 * Processes the document trailer and root object.
 * Parses and potentially sets the document type to CATALOG.
 */","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If something went wrong.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:getDocumentInformation(),753,767,"/**
 * Returns the document information, creating it if necessary.
 * @return PDDocumentInformation object representing document info.
 */","* This will get the document info dictionary. If it doesn't exist, an empty document info
     * dictionary is created in the document trailer.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#getMetadata()}.
     *
     * @return The documents /Info dictionary, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocument:getDocumentCatalog(),789,805,"/**
 * Returns the document catalog, creating it if it doesn't exist.
 */","* This will get the document CATALOG. This is guaranteed to not return null.
     * 
     * @return The documents /Root dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(org.apache.pdfbox.pdmodel.fixup.PDDocumentFixup),128,146,"/**
* Retrieves a cached PDAcroForm, applying fixes if necessary.
* @param acroFormFixup Fixup object, or null if not needed.
* @return PDAcroForm object or null if not found.
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * Dependent on setting <code>acroFormFixup</code> some fixing/changes will be done to the AcroForm.
     * If you need to ensure that there are no fixes applied call <code>getAcroForm</code> with <code>null</code>.
     * 
     * Using <code>getAcroForm(PDDocumentFixup acroFormFixup)</code> might change the original content and
     * subsequent calls with <code>getAcroForm(null)</code> will return the changed content.
     * 
     * @param acroFormFixup the fix up action or null
     * @return The document's AcroForm.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getViewerPreferences(),175,179,"/**
 * Retrieves viewer preferences from the root dictionary.
 * Returns a PDViewerPreferences object or null if not found.
 */","* Get the viewer preferences associated with this document or null if they do not exist.
     *
     * @return The document's viewer preferences.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getActions(),303,312,"/**
* Returns PDDocumentCatalogAdditionalActions from catalog's AA dictionary.
* Creates if it doesn't exist.
*/",* @return The Additional Actions for this Document,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getNames(),327,331,"/**
 * Retrieves the document name dictionary.
 * @return PDDocumentNameDictionary or null if not found.
 */",* @return The names dictionary for this document or null if none exist.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDests(),336,340,"/**
 * Retrieves the destination dictionary from the root.
 * Returns a PDDocumentNameDestinationDictionary or null.
 */",* @return The named destinations dictionary for this document or null if none exists.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMarkInfo(),390,394,"/**
 * Retrieves PDMarkInfo from the root dictionary.
 * Returns null if the dictionary is not found.
 */","* Get info about doc's usage of tagged features. This will return null if there is no
     * information.
     *
     * @return The new mark info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getURI(),537,541,"/**
 * Extracts URI dictionary from root. Returns null if not found.
 */","* Returns the document-level URI.
     * 
     * @return the document level URI if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getStructureTreeRoot(),558,562,"/**
 * Creates a PDStructureTreeRoot from the COSDictionary.
 * @return PDStructureTreeRoot object or null if dict is null.
 */
","* Get the document's structure tree root, or null if none exists.
     * 
     * @return the structure tree root if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOCProperties(),641,645,"/**
 * Retrieves optional content properties from the root dictionary.
 * Returns null if the dictionary is not found.
 */","* Get the optional content properties dictionary associated with this document.
     *
     * @return the optional properties dictionary or null if it is not present",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog),38,48,"/**
 * Initializes the dictionary with names from the catalog.
 * Creates it if not present.
 */
","* Constructor.
     *
     * @param cat The document catalog that this dictionary is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getDests(),79,89,"/**
 * Retrieves the destination name tree node from dictionaries.
 * Returns null if no destination names are found.
 */","* Get the destination named tree node. The values in this name tree will be
     * PDPageDestination objects.
     *
     * @return The destination name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getEmbeddedFiles(),113,117,"/**
 * Creates a PDEmbeddedFilesNameTreeNode from the name dictionary.
 * @return TreeNode or null if dictionary is null.
 */
","* Get the embedded files named tree node. The values in this name tree will
     * be PDComplexFileSpecification objects.
     *
     * @return The embedded files name tree node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getJavaScript(),136,140,"/**
 * Creates a PDJavascriptNameTreeNode from the name dictionary.
 * @return PDJavascriptNameTreeNode or null if dictionary is null.
 */","* Get the document level JavaScript name tree. When the document is opened, all the JavaScript
     * actions in it shall be executed, defining JavaScript functions for use by other scripts in
     * the document.
     *
     * @return The document level JavaScript name tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getIndirectResourceObjects,"org.apache.pdfbox.pdmodel.PDPage:getIndirectResourceObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",164,176,"/**
 * Extracts COS objects of a specific kind from page resources.
 * @param pageResources Page resources dictionary.
 * @param kind Resource kind to filter.
 * @return List of COS objects.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getActions,org.apache.pdfbox.pdmodel.PDPage:getActions(),693,702,"/**
 * Returns the page's additional actions dictionary.
 * Creates if it doesn't exist.
 */
","* Get the page actions.
     * 
     * @return The Actions for this Page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTransition,org.apache.pdfbox.pdmodel.PDPage:getTransition(),717,721,"/**
* Returns a PDTransition object from the page's TRANS dictionary.
* Returns null if the dictionary is not found.
*/",* @return The page transition associated with this page or null if no transition is defined,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getIndirect,"org.apache.pdfbox.pdmodel.PDResources:getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",485,499,"/**
* Retrieves a COSObject from a dictionary based on kind and name.
* @param kind Resource kind. @param name Resource name. Returns COSObject or null.
*/","* Returns the resource with the given name and kind as an indirect object, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,get,"org.apache.pdfbox.pdmodel.PDResources:get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",504,508,"/**
 * Retrieves a COSBase object from a dictionary by name.
 * @param kind Resource dictionary kind.
 * @param name Name of the COSBase to retrieve.
 */
","* Returns the resource with the given name and kind, or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getNames,org.apache.pdfbox.pdmodel.PDResources:getNames(org.apache.pdfbox.cos.COSName),583,587,"/**
 * Retrieves a list of COS names based on the provided kind.
 * @param kind COS name kind; returns empty list if null.
 */
",* Returns the resource names of the given kind.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,createKey,"org.apache.pdfbox.pdmodel.PDResources:createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",740,758,"/**
 * Finds a unique key in a COS dictionary.
 * @param kind Resource kind.
 * @param prefix Key prefix.
 * @return COSName of the unique key.
 */",* Returns a unique key for a new resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",763,772,"/**
* Adds a resource object to the specified dictionary.
* @param kind resource kind, name of the resource, object to add
*/
",* Sets the value of a given named resource.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEFDictionary(),73,80,"/**
 * Retrieves the EF dictionary, creating it if necessary.
 * Returns the dictionary or null if not found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getPage(),68,72,"/**
 * Creates a PDPage from a COSDictionary.
 * @return A PDPage object or null if dictionary is null.
 */","* Gets the page.
     * 
     * @return the page",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getPage(),155,163,"/**
 * Creates a PDPage from the page dictionary.
 * @return PDPage object or null if dictionary is null.
 */
","* Get the page on which the object shall be rendered.
     *
     * @return the referenced page or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getPage(),139,143,"/**
* Creates a PDPage from a COSDictionary.
* @return PDPage object or null if dictionary is null.
*/
","* Returns the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * 
     * @return the page on which some or all of the content items designated by
     *  the K entry shall be rendered",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getIDTree(),98,102,"/**
 * Creates a PDNameTreeNode from the ID tree, or null if absent.
 */","* Returns the ID tree.
     * 
     * @return the ID tree",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTree(),125,129,"/**
 * Creates a PDNumberTreeNode from the parent tree, or null if absent.
 */","* Returns the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     *
     * @return the parent tree.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getClassMap(),211,245,"/**
* Extracts class map from COSDictionary, returning a Map.
*/","* Sets the ClassMap.
     * 
     * @return the ClassMap, never null. The elements are either {@link PDAttributeObject} or lists
     * of it.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getCryptFilterDictionary(org.apache.pdfbox.cos.COSName),492,505,"/**
 * Retrieves a CryptFilterDictionary by name from the COS dictionary.
 * @param cryptFilterName Name of the crypt filter to retrieve.
 * @return A PDCryptFilterDictionary or null if not found.
 */","* Returns the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * 
     * @return the crypt filter with the given name if available",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setCryptFilterDictionary,"org.apache.pdfbox.pdmodel.encryption.PDEncryption:setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",513,523,"/**
 * Sets cryptographic filter info in the dictionary.
 * @param cryptFilterName Filter name.
 * @param cryptFilterDictionary Filter dictionary.
 */
","* Sets the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * @param cryptFilterDictionary the crypt filter to set",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderStyle(),898,902,"/**
 * Creates a PDBorderStyleDictionary from a COS dictionary.
 * @return PDBorderStyleDictionary or null if no dictionary exists.
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the
     * annotation.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderEffect(),922,926,"/**
 * Creates a PDBorderEffectDictionary from a COS dictionary.
 * @return PDBorderEffectDictionary or null if no dictionary exists.
 */","* This will retrieve the border style dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @return the border effect dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getSignature(),147,151,"/**
 * Retrieves a signature dictionary from the catalog, returns PDSignature or null.
 */","* This will get the signature or null if there is none.
     *
     * @return The signature.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getJavaScript(),544,548,"/**
 * Retrieves JavaScript dictionary from FDF; returns FDFJavaScript or null.
 */","* This will get the java script entry.
     *
     * @return The java script entry describing javascript commands.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceDictionary(),594,598,"/**
 * Retrieves the appearance dictionary from the field.
 * @return PDAppearanceDictionary or null if not found.
 */","* This will get the appearance dictionary that specifies the appearance of a pushbutton field.
     *
     * @return The AP entry of this dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceStreamReference(),615,619,"/**
 * Retrieves a FDFNamedPageReference from the field's AP reference.
 * @return FDFNamedPageReference or null if reference is missing.
 */","* This will get named page references.
     *
     * @return The named page references or <code>null</code>.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:getIconFit(),636,640,"/**
 * Creates an FDFIconFit from the IF dictionary if it exists, else null.
 */","* This will get the icon fit that is associated with this field.
     *
     * @return The 'IF' entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:getAdditionalActions(),722,726,"/**
 * Creates PDAdditionalActions from the action dictionary, or null.
 */","* This will get a list of additional actions that will get executed based on events.
     *
     * @return The 'AA' entry in this FDF field dictionary or null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:getPageInfo(),101,110,"/**
 * Retrieves FDF page info from the page's info dictionary.
 * @return FDFPageInfo object or null if dictionary is missing.
 */
","* This will get the FDF page info object.
     *
     * @return The Page info.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getTemplateReference(),71,75,"/**
 * Creates an FDFNamedPageReference from the template dictionary.
 * @return FDFNamedPageReference object or null if template is null.
 */","* This is the template reference.
     *
     * @return The template reference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDFont:getFontDescriptor(),216,228,"/**
 * Returns the PDFontDescriptor, creating it if it's null.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getCIDSystemInfo,org.apache.pdfbox.pdmodel.font.PDCIDFont:getCIDSystemInfo(),362,366,"/**
 * Retrieves PDCIDSystemInfo from the dictionary, or null if absent.
 */","* Returns the CIDSystemInfo, or null if it is missing (which isn't allowed but could happen).
     * 
     * @return the CIDSystemInfo, or null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getPanose,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getPanose(),810,823,"/**
 * Extracts PDPanose from COS dictionary, returns null if missing.
 */","* Returns the Panose entry of the Style dictionary, if any.
     *
     * @return A Panose wrapper object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3Font:getResources(),290,301,"/**
 * Returns the PDResources object, creating it if null.
 * Returns the PDResources object.
 */","* Returns the optional resources of the type3 stream.
     *
     * @return the resources bound to be used when parsing the type3 stream",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProcs,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProcs(),380,387,"/**
 * Returns the character processing dictionary.
 * Creates it if it doesn't exist.
 */
","* Returns the dictionary containing all streams to be used to render the glyphs.
     * 
     * @return the dictionary containing all glyph streams.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getColorants(org.apache.pdfbox.pdmodel.PDResources),80,98,"/**
* Creates a map of color separations from colorants dictionary.
* @param resources PDResources object for color space creation
* @return COSDictionaryMap containing separation data.
*/","* Returns a map of colorants and their associated Separation color space.
     * @param resources resources, can be null.
     * @return map of colorants to color spaces, never null.
     * @throws IOException If there is an error reading a color space",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getProcess,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getProcess(),104,112,"/**
 * Retrieves a PDDeviceNProcess from the dictionary's PROCESS entry.
 * Returns null if PROCESS is not found.
 */","* Returns the DeviceN Process Dictionary, or null if it is missing.
     * @return the DeviceN Process Dictionary, or null if it is missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getRenderState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getRenderState(org.apache.pdfbox.rendering.RenderDestination),120,144,"/**
 * Retrieves the RenderState based on the destination.
 * @param destination The destination (PRINT, VIEW, EXPORT).
 * @return RenderState object or null if not found.
 */","* @param destination to be rendered
     * @return state or null if undefined",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getD,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getD(),126,138,"/**
 * Gets or creates the COSDictionary associated with the ""D"" key.
 * @return The COSDictionary object.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getExtendedGraphicsState(),62,73,"/**
 * Returns the extended graphics state, creating it if null.
 */","* This will get the external graphics state for this pattern.
     * @return The extended graphics state for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getResources(),198,203,"/**
* Retrieves PDResources from a COSDictionary, or null if absent.
*/","* This will get the resources for this pattern.
     * This will return null if no resources are available at this level.
     * @return The resources for this pattern.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getTargetDirectory(),173,177,"/**
 * Creates a PDTargetDirectory from a COSDictionary or null.
 */","* Get the target directory.
     *
     * @return the target directory or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getWinLaunchParams(),94,98,"/**
 * Creates PDWindowsLaunchParams from action dictionary.
 * @return PDWindowsLaunchParams or null if not present.
 */","* This will get a dictionary containing Windows-specific launch parameters.
     *
     * @return The Win entry of of the specific launch action dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getTargetDirectory(),126,130,"/**
 * Creates a PDTargetDirectory from the dictionary's 'T' entry.
 * Returns null if 'T' entry is missing.
 */","* Get the target directory. If this entry is absent, the current document is the target file
     * containing the destination.
     *
     * @return the target directory or null if the current document is the target file containing
     * the destination.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearance(),344,348,"/**
 * Retrieves the appearance dictionary.
 * @return PDAppearanceDictionary or null if not found.
 */","* This will get the appearance dictionary associated with this annotation. This may return null.
     * 
     * @return This annotations appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getPage(),843,847,"/**
 * Creates a PDPage from a COSDictionary.
 * @return A PDPage object or null if the dictionary is null.
 */","* This will retrieve the corresponding page of this annotation. See also
     * <a href=""https://stackoverflow.com/a/36894982/535646"">this answer</a> about what to do if
     * the page isn't available.
     *
     * @return The corresponding page or null if not available.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getBorderEffect(),253,257,"/**
 * Creates a PDBorderEffectDictionary from a COS dictionary.
 * @return PDBorderEffectDictionary or null if COS dict is null.
 */
","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getBorderStyle(),126,130,"/**
 * Creates a PDBorderStyleDictionary from a COSDictionary or null.
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in
     * drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getPreviousURI(),190,194,"/**
 * Extracts PDActionURI from PA dictionary, returns null if absent.
 */","* This will set the previous URI action, in case it's needed.
     *
     * @return The previous URI.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getExternalData(),274,278,"/**
* Creates a PDExternalDataDictionary from COSName.EX_DATA or null.
*/","* This will return the external data dictionary.
     * 
     * @return the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getBorderStyle(),306,310,"/**
 * Creates a PDBorderStyleDictionary from a COS dictionary.
 * @return PDBorderStyleDictionary or null if dictionary is null.
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getBorderEffect(),99,103,"/**
 * Creates a PDBorderEffectDictionary from a COS dictionary.
 * @return PDBorderEffectDictionary or null if COS dictionary is null.
 */","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getBorderEffect(),96,100,"/**
 * Creates a PDBorderEffectDictionary from a COS dictionary.
 * @return PDBorderEffectDictionary or null if BE is missing.
 */
","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAppearanceCharacteristics(),120,124,"/**
 * Retrieves appearance characteristics dictionary or null.
 * Uses COSName.MK to fetch from the parent dictionary.
 */","* Returns the appearance characteristics dictionary.
     * 
     * @return the appearance characteristics dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getActions(),164,168,"/**
* Returns PDAnnotationAdditionalActions from COS dictionary.
* Returns null if the dictionary is null.
*/","* Get the additional actions for this field. This will return null if there are no additional actions for this
     * field. As of PDF 1.6 this is only used for Widget Annotations.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getBorderStyle(),196,200,"/**
 * Creates a PDBorderStyleDictionary from a COSDictionary or null.
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getNormalAppearance(),65,69,"/**
 * Creates a PDAppearanceEntry from the dictionary's N entry.
 * @return PDAppearanceEntry object or null if entry is missing.
 */","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"".
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getFilter(),75,84,"/**
 * Retrieves the filter dictionary, or null if not present.
 * Returns a PDPropBuildDataDict object.
 */","* A build data dictionary for the signature handler that was
     * used to create the parent signature.
     *
     * @return the Filter as PDPropBuildFilter object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getPubSec(),103,112,"/**
 * Retrieves PDPropBuildDataDict from dictionary.
 * Returns null if no dictionary entry exists.
 */","* A build data dictionary for the PubSec software module
     * that was used to create the parent signature.
     *
     * @return the PubSec as PDPropBuildPubSec object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getApp(),130,139,"/**
* Creates and returns a PDPropBuildDataDict from COS dictionary.
* Returns null if the dictionary is not found.
*/
","* A build data dictionary for the viewing application software
     * module that was used to create the parent signature.
     *
     * @return the App as PDPropBuildApp object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getMDP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getMDP(),408,412,"/**
 * Retrieves the PDSeedValueMDP from the dictionary or null.
 */","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @return the mdp dictionary as PDSeedValueMDP",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSeedValueCertificate(),441,445,"/**
* Creates a PDSeedValueCertificate from the COS dictionary.
* Returns null if the dictionary is null.
*/
","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @return dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getTimeStamp(),465,469,"/**
 * Retrieves a PDSeedValueTimeStamp from the dictionary.
 * Returns null if the dictionary doesn't contain TIME_STAMP.
 */","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @return the timestamp dictionary as PDSeedValueTimeStamp",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getPropBuild(),444,453,"/**
* Retrieves PDPropBuild object from the dictionary.
* Returns null if dictionary doesn't contain PROP_BUILD.
*/","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @return the pdf signature build dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getStructureElement(),301,305,"/**
 * Creates a PDStructureElement from a COSDictionary, or null.
 */","* Get the structure element of this node.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,hasChildren,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:hasChildren(),170,173,"/**
* Checks if m1().m2(COSName.FIRST) returns a non-null value.
*/",* @return true if the node has at least one child,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOutlineItem,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOutlineItem(org.apache.pdfbox.cos.COSName),175,179,"/**
 * Creates a PDOutlineItem from a COSDictionary, or null if none.
 * @param name Outline item name.
 * @return PDOutlineItem or null.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultResources(),542,547,"/**
 * Creates PDResources from DR dictionary, or null if DR is null.
 */","* This will get the default resources for the AcroForm.
     *
     * @return The default resources or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getActions,org.apache.pdfbox.pdmodel.interactive.form.PDField:getActions(),224,228,"/**
 * Retrieves additional actions for a form field.
 * @return PDFormFieldAdditionalActions object or null.
 */","* Get the additional actions for this field. This will return null if there
     * are no additional actions for this field.
     *
     * @return The actions of the field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValue(),141,145,"/**
 * Creates a PDSignature from a COSDictionary or returns null.
 */","* Returns the signature contained in this field.
     * 
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getDefaultValue(),152,156,"/**
 * Creates a PDSignature from a COS dictionary or null if absent.
 */","* Returns the default value, if any.
     *
     * @return A signature dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSeedValue(),172,176,"/**
 * Creates a PDSeedValue from a COSDictionary or returns null.
 */","* <p>(Optional; PDF 1.5) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @return the seed value dictionary as PDSeedValue",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getMeasure(),125,129,"/**
 * Creates a PDMeasureDictionary from a COSDictionary or returns null.
 */","* This will retrieve the measure dictionary.
     * 
     * @return the measure dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getThreadInfo(),71,75,"/**
 * Retrieves document information. Returns PDDocumentInformation or null.
 */","* Get info about the thread, or null if there is nothing.
     *
     * @return The thread information.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getFirstBead(),93,97,"/**
 * Creates a PDThreadBead from the thread's F dictionary.
 * @return PDThreadBead object or null if dictionary is null.
 */","* Get the first bead in the thread, or null if it has not been set yet.  This
     * is a required field for this object.
     *
     * @return The first bead in the thread.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getThread(),77,81,"/**
 * Creates a PDThread object from a COSDictionary or null.
 */","* This will get the thread that this bead is part of.  This is only required
     * for the first bead in a thread, so other beads 'may' return null.
     *
     * @return The thread that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getNextBead(),100,103,"/**
* Creates a PDThreadBead with data from bead.m1(COSName.N).
*/","* This will get the next bead.  If this bead is the last bead in the list then this
     * will return the first bead.
     *
     * @return The next bead in the list or the first bead if this is the last bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPreviousBead(),121,124,"/**
* Creates a PDThreadBead with data from the bead's 'V' field.
*/","* This will get the previous bead.  If this bead is the first bead in the list then this
     * will return the last bead.
     *
     * @return The previous bead in the list or the last bead if this is the first bead.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPage(),156,160,"/**
 * Creates a PDPage from a COSDictionary.
 * @return A PDPage object or null if dictionary is null.
 */","* Get the page that this bead is part of.
     *
     * @return The page that this bead is part of.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMetadata(),252,256,"/**
 * Retrieves PDMetadata object from the root COS stream.
 * @return PDMetadata object or null if metadata is absent.
 */","* Get the metadata that is part of the document catalog. This will return null if there is no
     * meta data for this object.
     *
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMetadata,org.apache.pdfbox.pdmodel.PDPage:getMetadata(),672,676,"/**
 * Retrieves page metadata. Returns PDMetadata object or null.
 */","* Get the metadata that is part of the document catalog. This will return null if there is
     * no meta data for this object.
     * 
     * @return The metadata for this object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getDifferences(),469,472,"/**
* Returns a COSStream representing differences.
* Uses fdf.m1(COSName.DIFFERENCES) to retrieve it.
*/","* This will get the incremental updates since the PDF was last opened.
     *
     * @return The differences entry of the FDF dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile(),726,730,"/**
 * Returns a PDStream from the COSStream or null if not found.
 */","* A stream containing a Type 1 font program.
     *
     * @return A stream containing a Type 1 font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile2(),747,751,"/**
* Returns a PDStream from a COSStream, or null if stream is null.
*/","* A stream containing a true type font program.
     *
     * @return A stream containing a true type font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile3(),768,772,"/**
 * Returns a PDStream object from the COSStream, or null if null.
 */","* A stream containing a font program that is not true type or type 1.
     *
     * @return A stream containing a font program.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCIDSet(),789,793,"/**
 * Creates a PDStream from the CID set COSStream, or null if absent.
 */","* Get the CIDSet stream.
     *
     * @return A stream containing a CIDSet.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getDestOutputIntent,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getDestOutputIntent(),63,66,"/**
* Retrieves the DEST_OUTPUT_PROFILE stream from the dictionary.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSound(),71,74,"/**
 * Retrieves a COSStream associated with the SOUND action.
 * @return COSStream object representing the sound action.
 */
","* Gets the sound object.
     * 
     * @return The sound object defining the sound that shall be played.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalIcon(),186,190,"/**
 * Creates a PDFormXObject from a COSStream, or null if stream is null.
 */","* This will retrieve the normal icon.
     * 
     * @return the normal icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverIcon(),197,201,"/**
 * Creates a PDFormXObject from a COSStream retrieved by m1().
 * Returns null if the stream is null.
 */","* This will retrieve the rollover icon.
     * 
     * @return the rollover icon",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateIcon(),208,212,"/**
 * Creates a PDFormXObject from a COSStream, or null if stream is null.
 */","* This will retrieve the alternate icon.
     * 
     * @return the alternate icon.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getSubDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getSubDictionary(),100,120,"/**
* Extracts appearance streams from a COSDictionary.
* @return A map of COSName to PDAppearanceStream.
*/","* Returns the entry as an appearance subdictionary.
     *
     * @return the entry as an appearance subdictionary
     * 
     * @throws IllegalStateException if this entry is not an appearance subdictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getDocumentID,org.apache.pdfbox.cos.COSDocument:getDocumentID(),361,364,"/**
* Returns a COSArray by applying m2 to m1's result with COSName.ID.
*/","* This will get the document ID.
     *
     * @return The document id.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,removePossibleOrphanAnnotation,"org.apache.pdfbox.multipdf.Splitter$KCloner:removePossibleOrphanAnnotation(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)",555,582,"/**
 * Checks and removes annotations not present in the page dictionary.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPagesDictionary,"org.apache.pdfbox.pdfparser.COSParser:checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",955,999,"/**
 * Recursively counts pages in a PDF pages dictionary.
 * @param pagesDict The COSDictionary representing pages.
 * @param set Set of already processed COSObjects.
 * @return Total number of pages found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteTrailer,org.apache.pdfbox.pdfwriter.COSWriter:doWriteTrailer(org.apache.pdfbox.cos.COSDocument),678,708,"/**
* Updates the trailer dictionary with size and checksum information.
*/","* This will write the trailer to the PDF document.
     *
     * @param doc The document to create the trailer for.
     *
     * @throws IOException If there is an IOError while writing the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,detectPossibleSignature,org.apache.pdfbox.pdfwriter.COSWriter:detectPossibleSignature(org.apache.pdfbox.cos.COSDictionary),1267,1291,"/**
* Checks if signature range exceeds incremental input size.
* Requires obj, incrementalUpdate, and reachedSignature.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getThreads(),217,232,"/**
 * Extracts and processes PDF threads from the document.
 * Returns a list of PDThread objects.
 */","* Returns the document's article threads.
     * 
     * @return a list of all threads of the document",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOutputIntents(),411,428,"/**
* Extracts PDOutputIntent objects from the PDF's output intents.
* @return List of PDOutputIntent objects.
*/","* Get the list of OutputIntents defined in the document.
     *
     * @return The list of PDOutputIntent, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,addOutputIntent,org.apache.pdfbox.pdmodel.PDDocumentCatalog:addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent),436,445,"/**
* Adds an output intent to the PDF's output intents array.
* @param outputIntent The output intent to add.
*/","* Add an OutputIntent to the list.  If there is not OutputIntent, the list is created and the
     * first  element added.
     *
     * @param outputIntent the OutputIntent to add.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getThreadBeads,org.apache.pdfbox.pdmodel.PDPage:getThreadBeads(),634,654,"/**
* Extracts PDThreadBead objects from a COSArray.
* Handles null arrays and converts COSBase to PDThreadBead.
*/","* This will get a list of PDThreadBead objects, which are article threads in the document. This
     * will return an empty list if there are no thread beads.
     *
     * @return A list of article threads on this page, never null. The returned list is backed by
     * the beads COSArray, so any adding or deleting in this list will change the document too.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getViewports,org.apache.pdfbox.pdmodel.PDPage:getViewports(),832,853,"/**
* Extracts viewport dictionaries from a page's VP array.
* @return List of PDViewportDictionary objects or null.
*/","* Get the viewports.
     *
     * @return a list of viewports or null if there is no /VP entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getKids,org.apache.pdfbox.pdmodel.PDPageTree:getKids(org.apache.pdfbox.cos.COSDictionary),138,174,"/**
 * Extracts COSDictionaries from the KIDS array of a node.
 * @param node The COSDictionary node to process.
 * @return List of extracted COSDictionaries.
 */","* Helper to get kids from malformed PDFs.
     * @param node page tree node
     * @return list of kids",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getKids(),114,129,"/**
 * Extracts name tree nodes from the COS array.
 * @return List of PDNameTreeNode objects or null if none.
 */","* Return the children of this node.  This list will contain PDNameTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getNames(),253,280,"/**
 * Extracts names from a COS names array and returns a map.
 * Returns null if the array is absent.
 */","* This will return a map of names on this level. The key will be a string,
     * and the value will depend on where this class is being used.
     *
     * @return ordered map of COS objects or <code>null</code> if the dictionary
     * contains no 'Names' entry on this level.
     *
     * @throws IOException If there is an error while creating the sub types.
     * @see #getKids()",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getUpperLimit(),334,343,"/**
* Extracts a value from a COSArray.
* @return String value at index 1 or null if array is null.
*/
","* Get the highest value for a key in the name map.
     *
     * @return The highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setUpperLimit(java.lang.String),350,361,"/**
* Sets the 'upper' limit in the COS array for node limits.
* @param upper The upper limit value to set.
*/
","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getLowerLimit(),368,377,"/**
* Retrieves the first element from the 'LIMITS' COS array.
* Returns null if the array is null.
*/
","* Get the lowest value for a key in the name map.
     *
     * @return The lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setLowerLimit(java.lang.String),384,395,"/**
* Sets the 'lower' value in the COSArray for LIMITS node.
* Creates the array if it doesn't exist.
*/
","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getKids(),88,103,"/**
 * Extracts child PDNumberTreeNodes from a COS array.
 * @return List of child nodes or null if no kids exist.
 */","* Return the children of this node.  This list will contain PDNumberTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getNumbers(),177,204,"/**
 * Extracts indices from a numbers array, returning a map.
 * Returns null if array size is odd or contains non-integers.
 */","* This will return a map of numbers on this level. The key will be a java.lang.Integer, the
     * value will depend on where this class is being used.
     *
     * @return A map of COS objects.
     *
     * @throws IOException If there is a problem creating the values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getUpperLimit(),281,290,"/**
* Retrieves a value from a COS array, or null if not found.
*/","* Get the highest value for a key in the number map.
     *
     * @return The highest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setUpperLimit(java.lang.Integer),297,315,"/**
 * Sets the upper limit in the COS limits array.
 * @param upper The upper limit value, or null to clear.
 */
","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getLowerLimit(),322,331,"/**
* Retrieves the first element of the LIMITS COS array.
* Returns null if array or element is missing.
*/
","* Get the lowest value for a key in the number map.
     *
     * @return The lowest value for a key in the map or null if missing.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setLowerLimit(java.lang.Integer),338,356,"/**
 * Sets the lower bound in the limits array of the node.
 * @param lower The lower bound value, or null to clear it.
 */
","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeValues(),264,271,"/**
* Returns the COSArray representing the range.
* Initializes if null.
*/","* Returns all ranges for the output values as COSArray .
     * Required for type 0 and type 4 functions
     * @return the ranges array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainValues(),278,285,"/**
* Returns the domain COSArray. Creates it if it's null.
*/","* Returns all domains for the input values as COSArray.
     * Required for all function types.
     * @return the domains array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSize,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getSize(),95,102,"/**
* Returns the size of the COS array.
* Retrieves size from m1().m2(COSName.SIZE) if null.
*/","* The ""Size"" entry, which is the number of samples in each input dimension
     * of the sample table.
     *
     * @return A List of java.lang.Integer objects.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeValues(),170,182,"/**
 * Returns the decode COS array, retrieving or creating if needed.
 */","* Returns all decode values as COSArray.
     * 
     * @return the decode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getFunctions,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getFunctions(),133,140,"/**
* Returns the functions array. Creates it if null.
*/","* Returns all functions values as COSArray.
     * 
     * @return the functions array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getBounds,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getBounds(),147,154,"/**
* Returns the bounds array. Creates it if it's null.
*/","* Returns all bounds values as COSArray.
     * 
     * @return the bounds array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncode,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncode(),161,168,"/**
 * Returns the encode COSArray, initializing it if null.
 */","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,getOwnerUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:getOwnerUserProperties(),64,74,"/**
 * Extracts user properties from a COS array.
 * @return List of PDUserProperty objects.
 */
","* Returns the user properties.
     * 
     * @return the user properties",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,addUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),92,97,"/**
* Adds a user property to a COS array and performs an action.
* @param userProperty The user property to add.
*/","* Adds a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,removeUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),104,115,"/**
* Processes a user property.
* @param userProperty The property to process.
*/","* Removes a user property.
     * 
     * @param userProperty the user property",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineColor(),85,98,"/**
 * Retrieves the color value, creating a default if needed.
 * Returns a PDColor object based on the color values.
 */","* Get the RGB color to be used for the guidelines.  This is guaranteed to
     * not return null. The default color is [0,0,0].
     *
     *@return The guideline color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isAttached(java.lang.String),123,137,"/**
 * Checks if edge exists in attached files.
 * @param edge The edge to search for.
 * @return True if edge is found, false otherwise.
 */
","* Is the artifact attached to the given edge?
     * 
     * @param edge the edge
     * @return <code>true</code> if the artifact is attached to the given edge,
     * <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getColor(),447,460,"/**
* Extracts color from annotation.
* @return Color object or null if color is not found.
*/","* Get the annotation color.
     *
     * @return The annotation color, or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getInteriorColor(),120,133,"/**
 * Extracts color from annotation, using RGB values if available.
 * @return Color object or null if no RGB values are found.
 */","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getCallout(),157,161,"/**
* Returns an array of floats from the COSArray, or null if null.
*/","* This will get the coordinates of the callout line.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:getInkList(),139,155,"/**
 * Extracts ink list data from annotation.
 * @return List of float arrays or null if no ink list exists.
 */","* Get the paths making up the freehand ""scribble"".
     *
     * @see #setInkList(List)
     * @return the List of arrays representing the paths.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLine(),172,176,"/**
* Extracts float array from COSArray, or null if array is null.
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setStartPointEndingStyle(java.lang.String),183,199,"/**
* Sets the line style for the annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getStartPointEndingStyle(),206,210,"/**
 * Retrieves the line element from the annotation or returns LE_NONE.
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setEndPointEndingStyle(java.lang.String),217,233,"/**
* Sets the line style for the annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getEndPointEndingStyle(),240,244,"/**
* Retrieves LE value from annotation array, or LE_NONE if null.
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getInteriorColor(),266,279,"/**
 * Extracts color from annotation.
 * @return Color object or null if not found.
 */","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionHorizontalOffset(float),386,398,"/**
 * Updates the annotation's CO array with a float offset.
 * Creates the array if it doesn't exist.
 */
","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionHorizontalOffset(),405,409,"/**
 * Extracts the first float value from the CO array, or returns 0.f.
 */","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionVerticalOffset(float),416,427,"/**
 * Updates annotation color offset.
 * @param offset The color offset value to set.
 */
","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionVerticalOffset(),434,438,"/**
 * Extracts a float value from a COS array, returns 0.f if null.
 */","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getVertices(),126,130,"/**
* Retrieves the vertices array from the annotation.
* Returns null if the array is not present.
*/","* This will get the coordinates of the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getInteriorColor(),152,165,"/**
 * Extracts color from annotation, using RGB values if available.
 * @return Color object or null if no RGB values are found.
 */","* This will get interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getVertices(),143,147,"/**
* Retrieves vertex array from annotation.
* Returns null if array is not present.
*/","* This will get the coordinates of the the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setStartPointEndingStyle(java.lang.String),154,169,"/**
* Sets the line style for an annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getStartPointEndingStyle(),176,180,"/**
* Gets the line ending flag from the annotation array.
* Returns the flag or PDAnnotationLine.LE_NONE if null.
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setEndPointEndingStyle(java.lang.String),187,202,"/**
* Sets the line style for the annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getEndPointEndingStyle(),209,213,"/**
* Retrieves a value from a COS array or returns a default.
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getInteriorColor(),235,248,"/**
 * Extracts color from annotation, using RGB values if available.
 * @return Color object or null if no RGB values are found.
 */","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getInteriorColor(),121,134,"/**
 * Extracts color from annotation, using RGB values if available.
 * @return Color object or null if no RGB data is found.
 */","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,getCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:getCoords(),98,109,"/**
 * Retrieves quad points from annotation. Returns null if absent.
 */","* Get the coordinates of individual words or group of words.
     * 
     * @see #setCoords(float[])
     * @return the array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getID(),305,308,"/**
* Returns a COSArray based on the ID key from the FDF object.
*/","* This is the FDF id.
     *
     * @return The FDF ID.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFields(),325,339,"/**
 * Retrieves a list of FDF fields from the FDF document.
 * Returns an empty list if no fields are found.
 */","* This will get the list of FDF Fields. This will return a list of FDFField objects.
     *
     * @return A list of FDF fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getPages(),376,390,"/**
 * Extracts FDF pages from the FDF document.
 * @return List of FDFPage objects or null if no pages exist.
 */","* This will get the list of FDF Pages. This will return a list of FDFPage objects.
     *
     * @return A list of FDF pages.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getKids,org.apache.pdfbox.pdmodel.fdf.FDFField:getKids(),177,190,"/**
* Extracts FDF fields from a COS array; returns null if empty.
*/","* This will get the list of kids. This will return a list of FDFField objects.
     * This will return null if the underlying list is null.
     *
     * @return The list of kids.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:getOptions(),661,683,"/**
* Extracts elements from a COS array, returns a list of objects.
*/","* This will return a list of options for a choice field.
     * The values in the list will be 1 of 2 types:<ul>
     *     <li><code>String</code> </li>
     *     <li>{@link FDFOptionElement}</li>
     * </ul>
     *
     * @return A list of all options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:getTemplates(),71,84,"/**
 * Extracts FDF templates from the page's templates array.
 * @return List of FDFTemplate objects or null if no templates.
 */","* This will get a list of FDFTemplage objects that describe the named pages that serve as templates.
     *
     * @return A list of templates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getFields(),92,105,"/**
 * Extracts FDF fields from the template.
 * Returns a list of FDFField objects or null if no fields exist.
 */","* This will get a list of fields that are part of this template.
     *
     * @return A list of fields.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readWidths,org.apache.pdfbox.pdmodel.font.PDCIDFont:readWidths(),74,139,"/**
 * Parses width information from a COS array, populating the 'widths' map.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readVerticalDisplacements,org.apache.pdfbox.pdmodel.font.PDCIDFont:readVerticalDisplacements(),141,192,"/**
* Extracts data from COS arrays and populates displacement and vector data.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDFont:getAverageFontWidth(),388,430,"/**
 * Calculates average font width, using cached value if available.
 * Returns the calculated average as a float.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidths,org.apache.pdfbox.pdmodel.font.PDFont:getWidths(),525,540,"/**
* Retrieves the widths list from the dictionary, or an empty list.
*/","* The widths of the characters. This will be null for the standard 14 fonts.
     *
     * @return The widths of the characters.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getDescendantFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:getDescendantFont(org.apache.pdfbox.cos.COSDictionary),310,322,"/**
 * Retrieves the first COSDictionary from descendant fonts.
 * Returns null if no dictionary is found.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,applyDifferences,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:applyDifferences(),151,175,"/**
* Processes differences array, updating differences based on COS objects.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getWhitepoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getWhitepoint(),115,126,"/**
 * Returns the white point as a PDTristimulus object.
 * Creates a default white point if one doesn't exist.
 */","* This will return the whitepoint tristimulus. As this is a required field
     * this will never return null. A default of 1,1,1 will be returned if the
     * pdf does not have any values yet.
     *
     * @return the whitepoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getBlackPoint(),135,146,"/**
 * Returns a PDTristimulus with black point from dictionary.
 * Creates a default black point if not found.
 */","* This will return the BlackPoint tristimulus. This is an optional field
     * but has defaults so this will never return null. A default of 0,0,0 will
     * be returned if the pdf does not have any values yet.
     *
     * @return the blackpoint tristimulus",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getGamma(),121,133,"/**
 * Retrieves or creates the gamma array from the dictionary.
 * Returns a PDGamma object representing the gamma array.
 */","* Returns the gamma value.
     * If none is present then the default of 1,1,1 will be returned.
     * @return the gamma value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getMatrix(),140,151,"/**
 * Retrieves the transformation matrix. Returns identity matrix if null.
 */","* Returns the linear interpretation matrix, which is an array of nine numbers.
     * If the underlying dictionary contains null then the identity matrix will be returned.
     * @return the linear interpretation matrix",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getComponents(),90,103,"/**
 * Extracts component names from a COSArray.
 * @return List of component names or an empty list if null.
 */","* Returns the names of the color components.
     * @return the names of the color components",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getARange(),199,207,"/**
 * Creates a PDRange from the dictionary's RANGE or a default.
 * @return A PDRange object representing the range.
 */
","* This will get the valid range for the ""a"" component.
     * If none is found then the default will be returned, which is -100..100.
     * @return the ""a"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getBRange(),214,222,"/**
 * Creates a PDRange from the dictionary's RANGE or generates one.
 * @return A PDRange object.
 */
","* This will get the valid range for the ""b"" component.
     * If none is found  then the default will be returned, which is -100..100.
     * @return the ""b"" range.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setComponentRangeArray,"org.apache.pdfbox.pdmodel.graphics.color.PDLab:setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",244,264,"/**
* Sets the range array in the dictionary, using provided range or defaults.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOCGs(),115,124,"/**
 * Retrieves or creates the OCGS array from the dictionary.
 * Returns the COSArray object.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBackground(),153,160,"/**
* Returns the background COSArray, creating it if needed.
*/","* This will return the background.
     *
     * @return the background",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getDomain(),83,90,"/**
* Returns the domain object. Creates it if it's null.
*/","* This will get the optional Domain values of a function based shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getExtend(),56,63,"/**
* Returns the extend COSArray. Creates it if it's null.
*/","* This will get the optional Extend values for this shading.
     *
     * @return the extend values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getDomain(),81,88,"/**
 * Returns the domain COS object. Fetches if null.
 */","* This will get the optional Domain values for this shading.
     *
     * @return the domain values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getCoords(),106,113,"/**
 * Returns the coordinates array. Fetches if null.
 */","* This will get the Coords values for this shading.
     *
     * @return the coordinate values",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeValues(),131,138,"/**
 * Returns the decode array. Lazily initializes if null.
 */","* Returns all decode values as COSArray.
     *
     * @return the decode array",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFontSetting(),437,441,"/**
* Retrieves font setting from dictionary.
* Returns PDFontSetting object or null if font is null.
*/
","* This will get the font setting of the graphics state.
     *
     * @return The font setting.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFields(),59,62,"/**
* Returns a COSArray representing the fields action.
*/","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFields(),85,88,"/**
* Returns a COSArray representing the fields action.
*/","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getBorder(),731,757,"/**
* Creates a border COSArray, ensuring it has at least 3 elements.
* Returns the generated COSArray.
*/","* This will retrieve the border array. If none is available then it will create and return a
     * default array, which is [0 0 1]. The array consists of at least three numbers defining the
     * horizontal corner radius, vertical corner radius, and border width. The array may have a
     * fourth element, an optional dash array defining a pattern of dashes and gaps that shall be
     * used in drawing the border. If the array has less than three elements, the original array
     * will be copied and missing elements with value 0 will be added.
     *
     * @return the border array, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(org.apache.pdfbox.cos.COSName),799,822,"/**
* Creates a PDColor from a COSArray, based on its type.
* @param itemName COSName of the color space.
* @return PDColor object or null if COSArray is null.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:getRectDifferences(),92,96,"/**
 * Extracts margins from a COSArray, or returns an empty array.
 */","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the boundaries of the underlying caret.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifferences(),179,183,"/**
* Returns margins as float array, or empty array if null.
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getCallout(),208,212,"/**
* Retrieves float array from COSArray, or null if COSArray is null.
*/","* This will get the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:getInkList(),86,107,"/**
* Extracts ink list from COS array; returns float[][].
* Returns empty array if no inklist is found.
*/","* Get one or more disjoint paths that make this annotation.
     *
     * @return An array of arrays, each representing a stroked path. Each array shall be a series of
     * alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLine(),145,149,"/**
* Extracts float array from COSArray, or null if COSArray is null.
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setStartPointEndingStyle(java.lang.String),156,171,"/**
* Sets line style for annotation.
* @param style Line style to set, or null for default.
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getStartPointEndingStyle(),178,186,"/**
* Extracts a value from a COS array, or returns LE_NONE if empty.
*/","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setEndPointEndingStyle(java.lang.String),193,208,"/**
* Sets the line style for a PDF annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getEndPointEndingStyle(),215,223,"/**
* Extracts a value from a COS array, or returns LE_NONE if empty.
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionHorizontalOffset(float),352,363,"/**
* Updates the CO array with the given offset value.
* Creates the array if it doesn't exist.
*/
","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionHorizontalOffset(),370,374,"/**
* Retrieves the first float value from a COS array.
* Returns 0.f if the array is null.
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionVerticalOffset(float),381,392,"/**
* Updates the offset value in a COS array.
* @param offset The new offset value to set.
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionVerticalOffset(),399,403,"/**
 * Extracts a float value from a COS array. Returns 0.f if array is null.
 */","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getQuadPoints(),211,215,"/**
 * Retrieves an array of quad points from COSArray, or null.
 */","* This will retrieve the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getVertices(),111,115,"/**
 * Extracts vertex data from a COSArray, returns null if empty.
 */","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getPath,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getPath(),136,157,"/**
 * Extracts path data from a COS array.
 * @return 2D float array or null if no path data found.
 */","* PDF 2.0: This will retrieve the arrays that shall represent the alternating horizontal
     * and vertical coordinates for path building.
     *
     * @return An array of float arrays, each supplying the operands for a path building operator
     * (m, l or c). The first array should have 2 elements, the others should have 2 or 6 elements.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setStartPointEndingStyle(java.lang.String),62,77,"/**
* Sets/updates line style in annotation.
* @param style Line style to set, or null for default.
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getStartPointEndingStyle(),84,92,"/**
 * Retrieves a line element string from a COS array.
 * Returns LE_NONE if array is null or too short.
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setEndPointEndingStyle(java.lang.String),99,114,"/**
* Sets the line style for a PDF annotation.
* @param style The line style to set, or null for default.
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getEndPointEndingStyle(),121,129,"/**
 * Extracts a line element from a COS array, or returns LE_NONE.
 */","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getVertices(),157,161,"/**
 * Retrieves the vertices array from COS data.
 * Returns null if vertices data is not found.
 */","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifferences(),168,172,"/**
* Extracts margins from COSArray or returns an empty array.
*/","* This will get the differences between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:getQuadPoints(),69,73,"/**
* Retrieves quadpoints array from COSArray.
* @return float[] array or null if COSArray is null.
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation.
     *
     * @return An array of floats representing the quad points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getColor(org.apache.pdfbox.cos.COSName),214,237,"/**
 * Creates a PDColor from a COSArray based on its type.
 * @param itemName COSName representing the color item.
 * @return PDColor object or null if no suitable color space.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setOS(java.lang.String),233,250,"/**
 * Updates the OS field in the dictionary, adding or updating OS.
 * @param os The OS string to add; null to clear the OS field.
 */","* Indicates the operating system. The string format isn't specified yet. Value will be stored
     * as first item of the array, as specified in PDF Signature Build Dictionary Specification for
     * PDF v1.7.
     *
     * @param os is a string with the system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSubFilter(),279,283,"/**
 * Retrieves field names from a COS array or returns an empty list.
 */","* If <b>SubFilter</b> is not null and the {@link #isSubFilterRequired()} indicates this
     * entry is a required constraint, then the first matching encodings shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isSubFilterRequired()}
     * indicates that this is an optional constraint, then the first matching encoding shall
     * be used if it is available. If it is not available, a different encoding may be used
     * instead.
     *
     * @return the subfilter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getDigestMethod(),305,309,"/**
* Retrieves digest methods from dictionary, returns empty list if null.
*/","* An array of names indicating acceptable digest algorithms to use when
     * signing. The value shall be one of <b>SHA1</b>, <b>SHA256</b>, <b>SHA384</b>,
     * <b>SHA512</b>, <b>RIPEMD160</b>. The default value is implementation-specific.
     *
     * @return the digest method that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getReasons(),377,381,"/**
* Retrieves a list of reasons from the dictionary.
* Returns an empty list if no reasons are found.
*/","* If the Reasons array is provided and {@link #isReasonRequired()} indicates that
     * Reasons is a required constraint, one of the reasons in the array shall be used
     * for the signature dictionary; otherwise signing shall not take place. If the
     * {@link #isReasonRequired()} indicates Reasons is an optional constraint, one of
     * the reasons in the array may be chose or a custom reason can be provided.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getLegalAttestation(),492,496,"/**
 * Retrieves legal attestations as a list of strings.
 * Returns empty list if no attestations are found.
 */","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @return the reasons that should be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubject(),219,223,"/**
* Retrieves subject byte arrays from dictionary.
* Returns null if subject is not found in dictionary.
*/","* Returns list of byte arrays that contains DER-encoded X.509v3 certificates
     * 
     * @return list of byte arrays containing DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addSubject(byte[]),245,254,"/**
* Adds the subject to the dictionary's subject array.
* @param subject byte array representing the subject.
*/
","* (Optional) byte array containing DER-encoded X.509v3 certificate that is acceptable for
     * signing. works like {@link #setSubject(List)} but one byte array
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeSubject(byte[]),261,268,"/**
* Sets the subject of a COS array with the given byte array.
* @param subject The subject byte array to set.
*/
","* removes a subject from the list
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getKeyUsage(),339,355,"/**
 * Extracts key usage extensions from a COS array.
 * @return List of key usage extensions or null if absent.
 */","* Returns list of key usages of certificate strings where each string is 9 characters long and each character is
     * one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't care. each index in the string
     * represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     * 
     * @return list of key usages of certificate strings",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(java.lang.String),389,406,"/**
* Validates and adds a key usage extension to the dictionary.
* @param keyUsageExtension The key usage extension string.
*/","* (Optional; PDF 1.7) specifies an acceptable key-usage extension that must be presennt in the
     * signing certificate for works like {@link #setKeyUsage(List)} but takes only one string
     *
     * @param keyUsageExtension String that consist only of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeKeyUsage(java.lang.String),444,451,"/**
* Adds a key usage extension to the COS array.
* @param keyUsageExtension The key usage extension string.
*/
","* Removes a key usage extension
     *
     * @param keyUsageExtension ASCII string that consists of {0, 1, X}",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getIssuer(),458,462,"/**
* Retrieves byte array list from COSArray (issuer).
* Returns null if COSArray is null.
*/
","* Returns list of array of bytes of DER-encoded X.509v3 certificates
     * 
     * @return list of array of bytes of DER-encoded X.509v3 certificates",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addIssuer(byte[]),483,492,"/**
* Adds the issuer to the COS array in the dictionary.
* @param issuer Byte array representing the issuer.
*/
","* array of bytes containing DER-encoded X.509v3 certificates of acceptable issuers. If the
     * signer’s certificate chains up to any of the specified issuers (either directly or
     * indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeIssuer(byte[]),499,506,"/**
* Sets the issuer to the provided byte array within the COS array.
* @param issuer The issuer byte array to set.
*/
","* Removes an issuer from the issuers list
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getOID(),514,518,"/**
* Retrieves a list of byte arrays from a COS array.
* Returns null if the array is null.
*/","* Returns A list of array of bytes that contain Object Identifiers (OIDs) of the certificate policies that must be
     * present in the signing certificate
     * 
     * @return list of array of bytes that contain Object Identifiers of the certificate policies",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addOID(byte[]),537,546,"/**
* Adds an object identifier to the dictionary's OID array.
* @param oid byte array representing the object identifier.
*/
","* works like {@link #setOID(List)} but for one object
     *
     * @param oid Object Identifier of a certificate policy to be added",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeOID(byte[]),553,560,"/**
* Adds the given OID to the dictionary's OID array.
* @param oid The OID to add as a byte array.
*/
","* removes an OID from the list
     *
     * @param oid Object Identifier of the certificate policy to be removed",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getByteRange(),298,311,"/**
 * Extracts byte range values from a COS array.
 * @return An array of integers representing byte ranges.
 */","* Read out the byterange from the file.
     *
     * @return an integer array with the byterange, or an empty array if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTextColor(),323,333,"/**
 * Creates or retrieves a color space and returns a PDColor.
 * Returns a PDColor based on a COSArray, creating if needed.
 */","* Get the RGB text color of this node.  Default is black and this method
     * will never return null.
     *
     * @return The structure element of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getCalcOrder(),696,720,"/**
* Retrieves a list of PDF fields based on a COS array.
* Returns an empty list if the array is null.
*/","* Return the calculation order in which field values should be recalculated when the value of
     * any field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @return field list. Note these objects may not be identical to PDField objects retrieved from
     * other methods (depending on cache setting). The best strategy is to call
     * {@link #getCOSObject()} to check for identity. The list is not backed by the /CO COSArray in
     * the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,removeFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:removeFields(java.util.List),854,871,"/**
 * Adds fields to COS arrays based on their properties.
 * @param fields List of PDField objects to process.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getSelectedOptionsIndex(),225,229,"/**
* Retrieves a list of integers from a COSArray, or an empty list.
*/","* This will get the indices of the selected options - the 'I' key.
     * <p>
     * This is only needed if a choice field allows multiple selections and
     * two different items have the same export value or more than one values
     * is selected.
     * </p>
     * <p>The indices are zero-based</p>
     *
     * @return List containing the indices of all selected options.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeXs(),78,93,"/**
 * Extracts number format dictionaries from COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the changes along the x-axis.
     * 
     * @return changes along the x-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeYs(),115,130,"/**
 * Extracts number format dictionaries from the 'Y' COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the changes along the y-axis.
     * 
     * @return changes along the y-axis",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getDistances(),152,167,"/**
 * Extracts number format dictionaries from a COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the distances.
     * 
     * @return distances",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAreas(),189,204,"/**
 * Extracts number format dictionaries from a COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the areas.
     * 
     * @return areas",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAngles(),226,241,"/**
 * Extracts number format dictionaries from a COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the angles.
     * 
     * @return angles",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getLineSloaps(),263,278,"/**
 * Extracts number format dictionaries from COS array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the sloaps of a line.
     * 
     * @return the sloaps of a line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCoordSystemOrigin(),300,304,"/**
* Retrieves an array of floats from a COSArray, or null if null.
*/","* This will return the origin of the coordinate system.
     * 
     * @return the origin",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getVisibilityPolicy(),108,111,"/**
* Retrieves the function mask from the dictionary.
*/","* Get the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     *
     * @return the visibility policy, never null.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String),639,642,"/**
* Delegates to another m2 method with a COSName object.
* @param key The key to pass to the delegated method.
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",687,695,"/**
 * Retrieves value by key, returns defaultValue if null.
 * @param key The key to retrieve.
 * @param defaultValue Value if key is not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefStreamOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefStreamOffset(long),352,390,"/**
* Checks if a given offset points to a valid XRef stream.
* @param startXRefOffset Offset to check for XRef stream.
* @return True if XRef stream found, false otherwise.
*/","* Check if the cross reference stream can be found at the current offset.
     * 
     * @param startXRefOffset the expected start offset of the XRef stream
     * @return the revised offset
     * @throws IOException if something went wrong",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageMode(),468,487,"/**
 * Retrieves the page mode from the root COS.
 * Returns PageMode.USE_NONE if mode is null or invalid.
 */","* Returns the page display mode.
     * 
     * @return the PageMode of the document, if not present PageMode.USE_NONE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLayout(),504,520,"/**
 * Retrieves the page layout from the root object.
 * Returns PageLayout.SINGLE_PAGE if layout is invalid.
 */","* Returns the page layout.
     * 
     * @return the PageLayout of the document, if not present PageLayout.SINGLE_PAGE is returned",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getVersion(),599,602,"/**
* Retrieves the version string from the root object.
*/","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. ""1.4"")",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTrapped(),251,254,"/**
* Retrieves a value using COSName.TRAPPED with info.m1.
*/","* This will get the trapped value for the document.
     * This will return null if one is not found.
     *
     * @return The trapped value for the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStyle(),104,107,"/**
 * Retrieves a value using root.m1 with KEY_STYLE.
 */","* Returns the numbering style for this page range.
     * 
     * @return one of the STYLE_* constants",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,getType,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:getType(),58,61,"/**
* Returns a string value by chaining method calls.
*/","* Gets the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:create(org.apache.pdfbox.cos.COSDictionary),63,93,"/**
 * Creates a PDAttributeObject based on the dictionary owner string.
 * @param dictionary COSDictionary to determine attribute type.
 * @return Appropriate PDAttributeObject or PDDefaultAttributeObject.
 */","* Creates an attribute object.
     * 
     * @param dictionary the dictionary
     * @return the attribute object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,getOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:getOwner(),122,125,"/**
* Delegates to m1() and then calls m2() with COSName.O.
*/","* Returns the owner of the attributes.
     * 
     * @return the owner of the attributes",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureType(),76,79,"/**
* Delegates to m1() and then m2() with COSName.S.
*/","* Returns the structure type (S).
     * 
     * @return the structure type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:create(org.apache.pdfbox.cos.COSDictionary),68,80,"/**
 * Creates a PDStructureNode based on the dictionary's type.
 * @param node The COSDictionary to process.
 * @return A PDStructureNode or throws IllegalArgumentException.
 */","* Creates a node in the structure tree. Can be either a structure tree root,
     *  or a structure element.
     * 
     * @param node the node dictionary
     * @return the structure node",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getType(),99,102,"/**
* Returns a string by chaining method calls.
*/","* Returns the type.
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObjectFromDic,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObjectFromDic(org.apache.pdfbox.cos.COSDictionary),392,414,"/**
 * Creates a COSObjectable based on the dictionary type.
 * @param kidDic Dictionary containing the object type.
 * @return Corresponding COSObjectable or null if unknown.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getName(),63,66,"/**
* Delegates to m1() then m2() with COSName.N.
*/","* Returns the property name.
     * 
     * @return the property name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getLanguage(),108,112,"/**
* Returns localized string from m1() or null if m1() is null.
*/","* Gets the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getType(),45,48,"/**
* Returns a string by chaining method calls.
*/","* Gets the type (Type).
     * 
     * @return the type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getSubtype,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getSubtype(),110,113,"/**
* Returns a string by chaining method calls.
*/","* Gets the subtype (Subtype).
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getFilter(),159,162,"/**
* Retrieves a filter name from the dictionary.
* @return Filter name as a String.
*/
","* Get the name of the filter.
     *
     * @return The filter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSubFilter(),169,172,"/**
* Retrieves the sub filter from the dictionary.
* @return The sub filter string.
*/
","* Get the name of the subfilter.
     *
     * @return The subfilter name contained in this encryption dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,create,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:create(org.apache.pdfbox.cos.COSDictionary),323,403,"/**
 * Creates an FDFAnnotation based on the subtype of the dictionary.
 * @param fdfDic COSDictionary containing annotation information.
 * @return An FDFAnnotation object or null if unsupported.
 */","* Create the correct FDFAnnotation.
     *
     * @param fdfDic The FDF dictionary.
     *
     * @return A newly created FDFAnnotation",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getIntent(),856,859,"/**
* Returns a value obtained by calling annot.m1(COSName.IT).
*/","* Get the intent of the annotation.
     * 
     * @return The intent of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getLineEndingStyle(),292,295,"/**
* Returns a string value obtained from annot.m1(COSName.LE).
*/","* This will retrieve the line ending style.
     *
     * @return The ending style for the start point.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getVersion(),96,99,"/**
* Retrieves the version string from the catalog.
* @return Version string from the catalog.
*/
","* This will get the version that was specified in the catalog dictionary.
     *
     * @return The FDF version.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEncoding(),408,417,"/**
 * Retrieves the document encoding, defaulting to ""PDFDocEncoding"".
 */","* The encoding to be used for a FDF field. The default is PDFDocEncoding and this method will never return null.
     *
     * @return The encoding value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleOption(),95,103,"/**
 * Retrieves the scale option, defaulting to SCALE_OPTION_ALWAYS if null.
 */","* This will get the scale option. See the SCALE_OPTION_XXX constants. This is guaranteed to never return null.
     * Default: Always
     *
     * @return The scale option.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleType(),121,129,"/**
* Returns the scaling type, defaulting to proportional if null.
*/","* This will get the scale type. See the SCALE_TYPE_XXX constants. This is guaranteed to never return null. Default:
     * Proportional
     *
     * @return The scale type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDCIDFont:getBaseFont(),205,208,"/**
* Retrieves the base font name from the dictionary.
*/","* The PostScript name of the font.
     *
     * @return The postscript name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getRegistry,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getRegistry(),47,50,"/**
* Retrieves a value from the dictionary using COSName.REGISTRY.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getOrdering,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getOrdering(),52,55,"/**
* Retrieves a value from the dictionary using COSName.ORDERING.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getType,org.apache.pdfbox.pdmodel.font.PDFont:getType(),505,508,"/**
* Retrieves the type COS name from the dictionary.
*/","* This will always return ""Font"" for fonts.
     * 
     * @return The type of object that this is.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSubType,org.apache.pdfbox.pdmodel.font.PDFont:getSubType(),515,518,"/**
 * Retrieves the subtype value from the dictionary.
 */","* This will get the subtype of font.
     * 
     * @return the subtype",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontName(),285,288,"/**
* Retrieves font name from the dictionary.
* @return Font name as a String.
*/
","* Get the font name.
     *
     * @return The name of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontStretch(),361,364,"/**
* Retrieves the font stretch value from the dictionary.
*/","* A string representing the preferred font stretch.
     * According to the PDF Spec:
     * The font stretch value; it must be one of the following (ordered from
     * narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed,
     * Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
     *
     * @return The stretch of the font.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,fixType0Subtype,"org.apache.pdfbox.pdmodel.font.PDFontFactory:fixType0Subtype(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",192,212,"/**
* Fixes descendant font types and copies font files based on subtype.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBaseFont(),258,261,"/**
* Retrieves the base font name from the dictionary.
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType0Font:getBaseFont(),414,417,"/**
 * Retrieves the base font name from the dictionary.
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBaseFont(),153,156,"/**
* Retrieves the base font name from the dictionary.
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getBaseFont(),371,374,"/**
* Retrieves the base font name from the dictionary.
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType3Font:getName(),89,93,"/**
 * Retrieves a value from the dictionary using COSName.NAME.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:isNChannel(),118,121,"/**
* Checks if subtype is ""NChannel"" using dictionary values.
*/","* Returns true if this is an NChannel (PDF 1.6) color space.
     * @return true if this is an NChannel color space.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getType(),83,86,"/**
* Returns a string based on the action and COSName.TYPE.
*/","* This will get the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @return The Type of PDF object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getSubType(),104,107,"/**
* Returns a value obtained by applying m1 to COSName.S.
*/","* This will get the type of action that the actions dictionary describes.
     *
     * @return The S entry of actions dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,createAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:createAction(org.apache.pdfbox.cos.COSDictionary),46,104,"/**
 * Creates a PDAction based on the action dictionary type.
 * @param action COSDictionary representing the action
 * @return PDAction object or null if type is unknown.
 */","* This will create the correct type of action based on the type specified
     * in the dictionary.
     *
     * @param action An action dictionary.
     *
     * @return An action of the correct type.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getSubtype(),244,247,"/**
* Returns a masked value derived from m1() and COSName.SUBTYPE.
*/","* This will retrieve the subtype of the annotation.
     *
     * @return The subtype of this annotation, see the SUB_TYPE_XXX constants.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionPositioning(),332,335,"/**
* Delegates to m1() and then m2() with COSName.CP.
*/","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getIntent(),253,256,"/**
* Calls m1(), then m2() with COSName.IT. Returns the result.
*/","* This will retrieve the intent of the annotation The values and meanings are specific to the actual annotation See
     * the IT_* constants for the annotation classes.
     *
     * @return the intent",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getSubtype(),77,80,"/**
* Returns a string by chaining method calls.
*/","* returns the subtype of the external data dictionary.
     * 
     * @return the subtype of the external data dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getName(),71,74,"/**
* Retrieves a value from the dictionary using COSName.NAME.
*/","* The name of the software module that was used to create the signature.
     * @return the name of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getFilter(),254,257,"/**
* Retrieves a value from the dictionary using COSName.FILTER.
*/","* If <b>Filter</b> is not null and the {@link #isFilterRequired()} indicates this entry is a
     * required constraint, then the signature handler specified by this entry shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isFilterRequired()} indicates
     * that this is an optional constraint, this handler may be used if it is available. If it is
     * not available, a different handler may be used instead.
     *
     * @return the filter that shall be used by the signature handler",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURLType(),597,600,"/**
* Retrieves a value from the dictionary using COSName.URL_TYPE.
*/","* A name indicating the usage of the URL entry. There are standard uses and there can be
     * implementation-specific use for this URL. The following value specifies a valid standard
     * usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     *
     * @return string of URL type",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getFilter(),204,207,"/**
* Retrieves a filter name from the dictionary.
* @return Filter name as a String.
*/
","* Returns the filter.
     * @return the filter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSubFilter(),214,217,"/**
* Retrieves the sub filter from the dictionary.
* @return The sub filter string.
*/
","* Returns the subfilter.
     *
     * @return the subfilter",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldType(),172,176,"/**
* Returns a string by chaining method calls.
*/","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getName(),105,108,"/**
* Delegates to m1() then m2() with COSName.NAME.
*/","* This will retrieve the name of the viewport.
     * 
     * @return the name of the viewport",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getDuplex(),408,411,"/**
* Retrieves the duplex preference value.
* @return String representing the duplex setting.
*/
","* Get the Duplex preference.  See DUPLEX enumeration.
     *
     * @return the Duplex preference.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String),704,707,"/**
* Delegates to another m2 method with a COSName object.
* @param key The key to be converted to a COSName.
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName,java.lang.String)",748,756,"/**
 * Retrieves value by key, returns defaultValue if null.
 * @param key The key to retrieve.
 * @param defaultValue Value if key is not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getLanguage(),579,582,"/**
* Returns the language COS name from the root object.
*/","* Returns the language for the document, or null.
     * 
     * @return the language of the document if present, otherwise null",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTitle(),90,93,"/**
* Retrieves the title from the info object using COSName.TITLE.
*/","* This will get the title of the document.  This will return null if no title exists.
     *
     * @return The title of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:getAuthor(),110,113,"/**
* Retrieves the author information from the info object.
*/","* This will get the author of the document.  This will return null if no author exists.
     *
     * @return The author of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:getSubject(),130,133,"/**
* Retrieves the subject from the info object using COSName.SUBJECT.
*/","* This will get the subject of the document.  This will return null if no subject exists.
     *
     * @return The subject of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:getKeywords(),150,153,"/**
* Retrieves keywords using COSName.KEYWORDS from info.m1.
*/","* This will get the keywords of the document.  This will return null if no keywords exists.
     *
     * @return The keywords of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreator(),170,173,"/**
* Retrieves the creator string using COSName.CREATOR.
*/","* This will get the creator of the document.  This will return null if no creator exists.
     *
     * @return The creator of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:getProducer(),190,193,"/**
* Retrieves the producer name from the info object.
*/","* This will get the producer of the document.  This will return null if no producer exists.
     *
     * @return The producer of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getPrefix(),162,165,"/**
* Retrieves a value from the root object using a prefix key.
*/","* Returns the page label prefix for this page range.
     * 
     * @return the page label prefix for this page range, or {@code null} if no
     *         prefix has been defined.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnicode(),128,131,"/**
 * Retrieves a value associated with the COSName.UF using fs.m1.
 */","* This will get the unicode file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFile(),150,154,"/**
* Retrieves a value using the file system and COSName.F.
*/","* This will get the file name.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDos(),174,177,"/**
* Retrieves a value using COSName.DOS via the 'fs' object.
*/","* This will get the name representing a Dos file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileMac(),184,187,"/**
* Retrieves a value associated with the MAC COSName from the fs object.
*/","* This will get the name representing a Mac file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnix(),194,197,"/**
* Retrieves a value associated with COSName.UNIX using fs.m1.
*/","* This will get the name representing a Unix file.
     *
     * @return The file name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDescription(),353,356,"/**
* Retrieves a description using COSName.DESC from the file system.
*/","* This will get the description.
     *
     * @return The file description.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getElementIdentifier(),117,120,"/**
* Delegates to m1().m2() with COSName.ID as an argument.
*/","* Returns the element identifier (ID).
     * 
     * @return the element identifier",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getTitle(),502,505,"/**
* Delegates to m1() and then calls m2() with COSName.T.
*/","* Returns the title (T).
     * 
     * @return the title",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getLanguage(),522,525,"/**
* Returns a string by calling m1() and then m2() with COSName.LANG.
*/","* Returns the language (Lang).
     * 
     * @return the language",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAlternateDescription(),542,545,"/**
* Calls m1() and then m2() with COSName.ALT.
*/","* Returns the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getExpandedForm(),562,565,"/**
* Delegates to m1() and calls m2() with COSName.E.
*/","* Returns the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getActualText(),582,585,"/**
* Returns a string by chaining method calls.
*/","* Returns the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getFormattedValue(),105,108,"/**
* Delegates to m1() and then calls m2() with COSName.F.
*/","* Returns the string for the property value.
     * 
     * @return the string for the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getActualText(),119,123,"/**
* Returns text from m1() if not null, otherwise returns null.
*/","* Gets the actual text (ActualText).
     * 
     * @return the actual text",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getAlternateDescription(),130,134,"/**
* Returns value of m2(COSName.ALT) from m1(), or null if m1() is null.
*/","* Gets the alternate description (Alt).
     * 
     * @return the alternate description",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getExpandedForm(),141,145,"/**
* Returns the result of m2(COSName.E) on m1(), or null if m1() is null.
*/","* Gets the expanded form (E).
     * 
     * @return the expanded form",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getDate(),482,485,"/**
* Calls annot.m1(COSName.M) and returns the result as a String.
*/","* Modification date.
     *
     * @return The date as a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getName(),712,715,"/**
* Calls annot.m1(COSName.NM) and returns the result as a String.
*/","* Get the annotation name.
     *
     * @return The unique name of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getContents(),753,756,"/**
* Retrieves a string value from annot using COSName.CONTENTS.
*/","* Get the text, or a description, of the annotation.
     *
     * @return The text, or a description, of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getTitle(),773,776,"/**
* Returns a string value obtained from annot.m1(COSName.T).
*/","* Get the annotation title.
     *
     * @return The title of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getSubject(),836,839,"/**
* Retrieves a value from annot.m1 using COSName.SUBJ.
*/","* Get the description of the annotation.
     *
     * @return The subject of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getSymbol(),141,144,"/**
* Calls annot.m1(COSName.SY) and returns the result as a String.
*/","* This will retrieve the symbol that shall be associated with the caret.
     * 
     * @return the symbol",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getRotation(),207,210,"/**
* Retrieves the rotation value from the annotation.
* @return String representation of the rotation value.
*/
","* This will get the clockwise rotation in degrees.
     * 
     * @return The number of degrees of clockwise rotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultAppearance(),227,231,"/**
* Retrieves a string value from annot using COSName.DA.
*/","* Get the default appearance string.
     *
     * @return The default appearance of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultStyle(),248,251,"/**
* Calls annot.m1 with COSName.DS and returns the result.
*/","* Get the default style string.
     *
     * @return The default style of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionStyle(),366,369,"/**
 * Retrieves a value using annot.m1 with COSName.CP.
 * @return The retrieved value as a String.
 */
","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getState(),113,116,"/**
* Retrieves the state COS name using the annot object.
*/","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getStateModel(),133,136,"/**
 * Retrieves a value from the annot object using COSName.STATE_MODEL.
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getStatus(),356,359,"/**
* Retrieves the status from the PDF dictionary.
* @return String representing the status.
*/
","* This will get the status string to be displayed as the result of an action.
     *
     * @return The status.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getTarget(),489,492,"/**
* Retrieves the target value from the PDF dictionary.
*/","* This will get the target frame in the browser to open this document.
     *
     * @return The target frame.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:getPartialFieldName(),211,214,"/**
* Returns a value obtained by applying m1 to field with COSName.T.
*/","* This will get the ""T"" entry in the field dictionary. A partial field name.
     * Where the fully qualified field name is a concatenation of the parent's fully qualified
     * field name and ""."" as a separator. For example<br>
     * Address.State<br>
     * Address.City<br>
     *
     * @return The partial field name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getName(),69,72,"/**
* Calls m1 on ref with COSName.NAME and returns the result.
*/","* This will get the name of the referenced page. A required parameter.
     *
     * @return The name of the referenced page.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFamily(),310,313,"/**
* Retrieves the font family from the dictionary.
* @return Font family string.
*/
","* A string representing the preferred font family.
     *
     * @return The font family.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCharSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCharSet(),701,704,"/**
* Retrieves character set from the dictionary.
* @return Character set string or null if not found.
*/
","* This will get the character set for the font.
     *
     * @return The character set value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getInfo(),68,71,"/**
* Retrieves a value from the dictionary using COSName.INFO.
* @return String value associated with COSName.INFO.
*/
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputCondition(),78,81,"/**
* Retrieves a value from the dictionary using COSName.OUTPUT_CONDITION.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputConditionIdentifier(),88,91,"/**
* Retrieves an output condition identifier from the dictionary.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getRegistryName(),98,101,"/**
* Retrieves a value from the dictionary using the REGISTRY_NAME.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getName(),101,104,"/**
* Retrieves a value from the dictionary using COSName.NAME.
*/","* Returns the name of the optional content group.
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroupNames,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroupNames(),228,251,"/**
* Extracts OCGs (Output Color Groups) as String array.
* Returns empty array if no OCGs are present.
*/","* Lists all optional content group names.
     * @return an array of all names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getF(),118,121,"/**
* Calls m1 on the action object with COSName.F.
* @return Result of the m1 call.
*/
","* This will get the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @return The F entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getD(),141,144,"/**
 * Calls action.m1 with COSName.D and returns the result.
 */","* This will get the string specifying the default directory in standard DOS syntax.
     *
     * @return The D entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getO(),165,168,"/**
* Calls action.m1 with COSName.O and returns the result as a String.
*/","* This will get the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @return The O entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getP(),190,193,"/**
* Calls action.m1 with COSName.P and returns the result.
*/","* This will get a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @return The P entry of the specific Windows launch parameter dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,getURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:getURI(),62,84,"/**
* Extracts URI from action, handling UTF-8 encoding.
* Returns URI string or null if not found/invalid.
*/","* This will get the uniform resource identifier to resolve. It should be encoded in 7-bit
     * ASCII, but UTF-8 and UTF-16 are supported too.
     *
     * @return The URI entry of the specific URI action dictionary or null if there isn't any.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getFilename(),103,106,"/**
* Retrieves a value from the dictionary using COSName.N.
* @return String value retrieved from the dictionary.
*/
","* Get the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @return a filename or null if there is none.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationName(),242,245,"/**
* Retrieves a value from the dictionary using COSName.A.
* @return String value associated with COSName.A.
*/
","* If the value in the /A entry is a string, this will get the value of the /NM entry in the
     * annotation dictionary.
     *
     * @return the /NM value of an annotation dictionary or null if the /A entry value is missing or
     * not a string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getFilename(),79,82,"/**
* Retrieves a value using the 'F' COSName from the params object.
*/","* The file to launch.
     *
     * @return The executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getDirectory(),99,102,"/**
* Retrieves a value from the params object using COSName.D.
*/","* The dir to launch from.
     *
     * @return The dir of the executable/document to launch.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getExecuteParam(),142,145,"/**
* Retrieves a value from the params object using COSName.P.
* @return The retrieved value as a String.
*/
","* A parameter to pass the executable.
     *
     * @return The parameter to pass the executable.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getContents(),606,609,"/**
* Retrieves the contents from the dictionary.
* @return String value associated with CONTENTS key.
*/
","* Get the ""contents"" of the field.
     * 
     * @return the value of the contents.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getModifiedDate(),626,629,"/**
* Delegates to m1().m2() with COSName.M.
*/","* This will retrieve the date and time the annotation was modified.
     * 
     * @return the modified date/time (often in date format, but can be an arbitrary string).",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationName(),661,664,"/**
* Delegates to m1().m2() with COSName.NM as argument.
*/","* This will get the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @return The identifying name for the Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultAppearance(),76,79,"/**
* Calls m1().m2() with COSName.DA and returns the result.
*/","* Get the default appearance.
     * 
     * @return a string describing the default appearance.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultStyleString(),98,101,"/**
* Calls m1() and then m2() with COSName.DS.
*/","* Get the default style string.
     *
     * The default style string defines the default style for rich text fields.
     *
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getTitlePopup(),72,75,"/**
* Delegates to m1().m2() with COSName.T as an argument.
*/","* Retrieve the string used as the title of the popup window shown when open and active (by convention this
     * identifies who added the annotation).
     *
     * @return The title of the popup.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getSubject(),210,213,"/**
 * Delegates to m1().m2() with COSName.SUBJ as an argument.
 */","* This will retrieve the short description of the subject of the annotation.
     *
     * @return the subject.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getState(),188,191,"/**
* Returns a value by chaining method calls.
*/","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getStateModel(),208,211,"/**
* Delegates to m1() and calls m2 with COSName.STATE_MODEL.
*/","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalCaption(),126,129,"/**
* Calls m1() and then m2() with COSName.CA.
*/","* This will retrieve the normal caption.
     * 
     * @return the normal caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverCaption(),146,149,"/**
* Calls m1() and then m2() with COSName.RC.
*/","* This will retrieve the rollover caption.
     * 
     * @return the rollover caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateCaption(),166,169,"/**
* Delegates to m1() and then m2() with COSName.AC.
*/","* This will retrieve the alternate caption.
     * 
     * @return the alternate caption.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getDate(),93,96,"/**
* Retrieves the date string from the dictionary.
*/","* The build date of the software module. This string is normally produced by the compiler that
     * is used to compile the software, for example using the Date and Time preprocessor flags. As
     * such, this not likely to be in PDF Date format.
     *
     * @return the build date of the software module",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getOS(),219,224,"/**
* Gets the OS name from COS array or dictionary.
* Returns OS name string, null if COS array is null.
*/","* Indicates the operating system. The string format isn't specified yet. In its PDF Signature
     * Build Dictionary Specifications Adobe differently specifies the value type to store operating
     * system string:<ul>
     * <li>Specification for PDF v1.5 specifies type as string;</li>
     * <li>Specification for PDF v1.7 specifies type as array and provided example for
     * <code>/PropBuild</code> dictionary indicate it as array of names.</li>
     * </ul>
     * This method supports both types to retrieve the value.
     *
     * @return the operating system id or name.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubjectDN(),276,299,"/**
* Extracts subject DNs from a COS array, returns a list of maps.
*/","* Returns list of maps that contains subject distinguished names like [(cn: John Doe, o: Doe), (cn: John Smith)]
     * both keys are typically of the form 'cn', 'o', 'email', '2.5.4.43'; and values are text strings.
     * 
     * @return list maps that contains subject distinguished names",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURL(),567,570,"/**
* Retrieves the URL from the dictionary.
* @return URL string or null if not present.
*/
","* returns String of the URL
     * 
     * @return string of the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:getURL(),67,70,"/**
* Retrieves the URL from the dictionary.
* @return URL string or null if not found.
*/
","* Returns the URL.
     * 
     * @return the URL",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getName(),226,229,"/**
* Retrieves a value from the dictionary using COSName.NAME.
*/","* Returns the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @return the name",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getLocation(),236,239,"/**
* Retrieves the location from the dictionary.
* @return Location string from the dictionary.
*/
","* Returns the CPU host name or physical location of the signing.
     *
     * @return the location",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getReason(),246,249,"/**
* Retrieves a reason from the dictionary using COSName.REASON.
*/","* Returns the reason for the signing, such as (I agree...).
     *
     * @return the reason",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContactInfo(),257,260,"/**
* Retrieves contact information from the dictionary.
* @return Contact info string, or null if not found.
*/","* Returns the contact info provided by the signer to enable a recipient to contact the signer
     * to verify the signature, e.g. a phone number.
     *
     * @return the contact info",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTitle(),165,168,"/**
* Delegates to m1().m2() with COSName.TITLE as argument.
*/","* Get the title of this node.
     *
     * @return The title of this node.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getPartialName(),380,383,"/**
* Retrieves a value from the dictionary using COSName.T.
* @return String value associated with COSName.T
*/
","* Returns the partial name of the field.
     * 
     * @return the name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getAlternateFieldName(),431,434,"/**
* Retrieves a value from the dictionary using COSName.TU.
*/","* Gets the alternate name of the field (""shall be used in place of the actual field name
     * wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)"").
     *
     * @return the alternate name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getMappingName(),457,460,"/**
* Retrieves a value from the dictionary using COSName.TM.
* @return String value associated with COSName.TM.
*/
","* Gets the mapping name of the field.
     * 
     * The mapping name shall be used when exporting interactive form field
     * data from the document.
     * 
     * @return the mapping name of the field",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultStyleString(),154,157,"/**
* Calls m1(), then m2 with COSName.DS. Returns the result.
*/","* Get the default style string.
     * 
     * The default style string defines the default style for
     * rich text fields.
     * 
     * @return the DS element of the dictionary object",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getScaleRatio(),58,61,"/**
* Calls m1() and then m2() with COSName.R.
*/","* This will return the scale ration.
     * 
     * @return the scale ratio.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String),793,796,"/**
* Returns a Calendar object for the given key.
* @param key The key to look up.
* @return A Calendar object.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",834,842,"/**
 * Retrieves a calendar value by key, using default if null.
 * @param key COSName key to search for.
 * @param defaultValue Default Calendar value if key is absent.
 */","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreationDate(),210,213,"/**
* Retrieves the creation date from the info object.
* @return Calendar object representing the creation date.
*/","* This will get the creation date of the document.  This will return null if no creation date exists.
     *
     * @return The creation date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getModificationDate(),230,233,"/**
* Retrieves the modification date from the info object.
*/","* This will get the modification date of the document.  This will return null if no modification date exists.
     *
     * @return The modification date of the document.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getCreationDate(),785,788,"/**
* Retrieves the creation date from annotations.
* @return Calendar object representing creation date.
*/","* The annotation create date.
     *
     * @return The date of the creation of the annotation date
     *
     * @throws IOException If there is an error converting the string to a Calendar object.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getCreationDate(),166,169,"/**
* Returns the creation date as a Calendar object.
*/","* This will retrieve the date and time the annotation was created.
     *
     * @return the creation date/time.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignDate(),267,270,"/**
* Retrieves a Calendar object from the dictionary.
*/","* Returns the sign date.
     *
     * @return the sign date",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String),1040,1043,"/**
* Delegates to overloaded method with COSName and default value.
* @param key The key to use for COSName creation.
*/","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     *
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName),1052,1055,"/**
* Calls overloaded method with default value for the count parameter.
* @param key COSName object, used as input for the overloaded method.
*/","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The long value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String,long)",1065,1068,"/**
* Delegates to m2(COSName, defaultValue).
* @param key The key to use.
* @param defaultValue Default value if key is not found.
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,decode,"org.apache.pdfbox.filter.Filter:decode(java.io.InputStream,java.util.List,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.filter.DecodeOptions,java.util.List)",231,299,"/**
 * Decodes an input stream using a list of filters and returns a buffer.
 * @param encoded Input stream to decode.
 * @param filterList List of filters to apply.
 */","* Decodes data, with optional DecodeOptions. Not all filters support all options, and so callers should check the
     * options' <code>honored</code> flag to test if they were applied.
     *
     * @param encoded the input stream holding the encoded data
     * @param filterList list of filters to be used for decoding
     * @param parameters the parameters used for decoding
     * @param options additional options for decoding
     * @param results list of optional decoding results for each filter
     * @return the decoded stream data
     * @throws IOException if the stream cannot be decoded
     * @throws IllegalArgumentException if filterList is empty",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setStartxref,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setStartxref(long),233,302,"/**
 * Resolves Xref trailer based on startxref byte position.
 * @param startxrefBytePosValue startxref byte position
 */","* Sets the byte position of the first XRef
     * (has to be called after very last startxref was read).
     * This is used to resolve chain of active XRef/trailer.
     *
     * In case startxref position is not found we output a
     * warning and use all XRef/trailer objects combined
     * in byte position order.
     * Thus for incomplete PDF documents with missing
     * startxref one could call this method with parameter value -1.
     * 
     * @param startxrefBytePosValue starting position of the first XRef
     *",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String),1096,1099,"/**
* Calls m2 with a COSName derived from the key and default value.
* @param key The key to create a COSName from.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName),1108,1111,"/**
 * Overloads m1, using default value for the second parameter.
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String,float)",1121,1124,"/**
* Delegates to m2 with a COSName derived from the key.
* @param key The key to use for COSName creation.
* @param defaultValue Value if the key is not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getUserUnit,org.apache.pdfbox.pdmodel.PDPage:getUserUnit(),877,881,"/**
* Returns user unit from page, defaults to 1.0f if invalid.
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch, or 1 if it hasn't been set. This is supported by PDF 1.6
     * and higher.
     *
     * @return the user unit.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineWidth(),122,125,"/**
* Retrieves a float value from the dictionary using COSName.W.
*/","* Get the width of the of the guideline in default user space units.
     * The default is 1.
     *
     * @return The width of the guideline.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getOpacity(),815,819,"/**
* Calls annot.m1 with COSName.CA and 1.0f, returns the result.
*/","* Get the opacity value.
     *
     * @return The opacity of the annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontWeight(),337,340,"/**
* Retrieves font weight from dictionary.
* @return Font weight value as a float.
*/
","* The weight of the font.  According to the PDF spec ""possible values are
     * 100, 200, 300, 400, 500, 600, 700, 800 or 900""  Where a higher number is
     * more weight and appears to be more bold.
     *
     * @return The font weight.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getItalicAngle(),442,445,"/**
* Retrieves the italic angle from the dictionary.
* Returns a float value.
*/
","* This will get the italic angle for the font.
     *
     * @return The italic angle.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAscent(),462,465,"/**
* Retrieves the ascent value from the dictionary.
* @return The ascent value as a float.
*/
","* This will get the ascent for the font.
     *
     * @return The ascent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getDescent(),482,485,"/**
* Retrieves a float value using COSName.DESCENT and a default of 0.
*/","* This will get the descent for the font.
     *
     * @return The descent.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getLeading(),502,505,"/**
* Retrieves a value from the dictionary using COSName.LEADING.
* @return A float value retrieved from the dictionary.
*/
","* This will get the leading for the font.
     *
     * @return The leading.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCapHeight(),522,533,"/**
 * Returns cap height, calculates if needed.
 * Uses dic.m2(COSName.CAP_HEIGHT, 0) if capHeight is negative infinity.
 */","* This will get the CapHeight for the font.
     *
     * @return The cap height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getXHeight(),552,563,"/**
* Returns xHeight. Sets it if initially negative infinity.
*/","* This will get the x height for the font.
     *
     * @return The x height.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemV(),581,584,"/**
* Retrieves a float value from the dictionary using COSName.STEM_V.
*/","* This will get the stemV for the font.
     *
     * @return The stem v value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemH(),601,604,"/**
* Retrieves a float value from the dictionary using COSName.STEM_H.
*/","* This will get the stemH for the font.
     *
     * @return The stem h value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAverageWidth(),621,624,"/**
* Retrieves the average width from the dictionary.
* Uses COSName.AVG_WIDTH key, returns a float value.
*/","* This will get the average width for the font.
     *
     * @return The average width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMaxWidth(),641,644,"/**
* Retrieves the maximum width from the dictionary.
* @return The maximum width as a float.
*/
","* This will get the max width for the font.
     *
     * @return The max width value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMissingWidth(),681,684,"/**
* Retrieves the missing width from the dictionary.
* @return The missing width as a float.
*/
","* This will get the missing width for the font from the /MissingWidth dictionary entry.
     *
     * @return The missing width value, or 0 if there is no such dictionary entry.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getGamma(),113,116,"/**
* Retrieves a float value associated with COSName.GAMMA.
* @return Float value from the dictionary.
*/
","* This will get the gamma value. If none is present then the default of 1
     * will be returned.
     *
     * @return The gamma value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getXStep(),146,149,"/**
* Calls m1().m2 with COSName.X_STEP and 0.
*/","* This will return the XStep value.
     * @return The XStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getYStep(),164,167,"/**
* Calls m1().m2 with COSName.Y_STEP and 0.
*/","* This will return the YStep value.
     * @return The YStep value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getVolume(),97,101,"/**
* Retrieves volume and clamps it between -1 and 1.
*/","* Sets the volume.
     *
     * @return The volume at which to play the sound, in the range −1.0 to 1.0. Default value: 1.0.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineLength(),272,275,"/**
* Calls m1(), then m2 with COSName.LL and 0.
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineExtensionLength(),292,295,"/**
* Calls m1(), then m2 with COSName.LLE and 0.
*/","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineOffsetLength(),312,315,"/**
 * Calls m1(), then m2 with COSName.LLO and 0.
 */","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getConstantOpacity(),114,117,"/**
* Calls m1().m2() with COSName.CA and 1.
*/","* This will retrieve the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @return the constant opacity value.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getWidth(),124,133,"/**
* Returns 0 if m1().m2(COSName.W) is a COSName, else m1().m3().
*/","* This will retrieve the border width in points, 0 = no border.
     *
     * @return The width of the border in points.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDuration(),147,150,"/**
* Calls m1().m2() with COSName.D and 1 as arguments.
*/",* @return The duration in seconds of the transition effect or the default 1 if no duration is found.,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getFlyScale(),164,167,"/**
* Calls m1().m2() with COSName.SS and 1 as arguments.
*/","* @return The starting or ending scale at which the changes shall be drawn or the default 1 if no scale is found.
     * Only for {@link PDTransitionStyle#Fly}.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.contentstream.operator.Operator),81,84,"/**
 * Calls m1 with the given Operator.
 * @param op The Operator to pass to m1.
 * @throws IOException if m1 throws an IOException
 */
","*  Writes a single operator token.
     *
     * @param op The operator to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(java.lang.Object),115,129,"/**
 * Recursively processes an object, handling COSBase and Operator types.
 * Throws IOException for unknown types.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,extractRegions,org.apache.pdfbox.text.PDFTextStripperByArea:extractRegions(org.apache.pdfbox.pdmodel.PDPage),113,130,"/**
* Processes regions on a page, extracting and storing text data.
*/","* Process the page to extract the region text.
     *
     * @param page The page to extract the regions from.
     * @throws IOException If there is an error while extracting text.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,internalGetDecodeParams,"org.apache.pdfbox.pdmodel.common.PDStream:internalGetDecodeParams(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",287,317,"/**
 * Processes COS data based on names, returns a list or null.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getRoleMap(),176,191,"/**
 * Retrieves role map from COSDictionary or returns an empty map.
 */","* Returns the role map.
     * 
     * @return the role map",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),162,169,"/**
 * Processes a COSObjectable, calling m1() and passing the result to m2().
 */","* Appends an objectable kid.
     * 
     * @param objectable the objectable",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertObjectableBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",219,226,"/**
 * Processes a new COSObjectable, calling m1() and passing to m2.
 * @param newKid The COSObjectable to process.
 * @param refKid Reference object, passed to m2.
 */
","* Inserts an objectable kid before a reference kid.
     * 
     * @param newKid the objectable
     * @param refKid the reference kid",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),294,301,"/**
* Checks if an objectable's m1() value passes a mask check.
* @param objectable The COSObjectable to check.
* @return True if the mask check passes, false otherwise.
*/
","* Removes an objectable kid.
     * 
     * @param objectable the objectable
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setValue(org.apache.pdfbox.cos.COSBase),94,98,"/**
 * Sets the value of a COS object and adds a version tag.
 * @param value The COSBase value to set.
 */
","* Sets the property value.
     * 
     * @param value the property value",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,validatePerms,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)",318,356,"/**
 * Decrypts and verifies permissions from encrypted data.
 * @param encryption Encryption object containing data.
 * @param dicPermissions Expected permission integer value.
 */",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidthForCID,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidthForCID(int),272,280,"/**
* Retrieves the width for a given CID, using m1 or m2 if null.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getAverageFontWidth(),326,355,"/**
* Calculates average width, using provided widths or default.
* Returns the calculated average width as a float.
*/",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(),67,70,"/**
* Returns the default color space.
* Delegates to the overloaded method with null arguments.
*/","* Returns the group color space or null if it isn't defined.
     *
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,create,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:create(org.apache.pdfbox.cos.COSDictionary),40,56,"/**
 * Creates a PDPropertyList based on the dictionary type.
 * @param dict The COSDictionary to process.
 * @return A PDPropertyList, PDOptionalContentGroup, or PDOptionalContentMembershipDictionary.
 */","* Creates a property list from the given dictionary.
     * 
     * @param dict COS dictionary
     * @return a new instance of a PDPropertyList using the given dictionary",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineWidth(),222,225,"/**
 * Returns a Float value calculated using COSName.LW in m1.
 */","* This will get the line width.  This will return null if there is no line width
     *
     * @return null or the LW value of the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getMiterLimit(),283,286,"/**
* Returns a Float value by calling m1 with COSName.ML.
*/","* This will get the miter limit.
     *
     * @return null or the ML value in the dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFlatnessTolerance(),458,461,"/**
* Returns a Float value obtained by calling m1 with COSName.FL.
*/","* This will get the flatness tolerance.
     *
     * @return The flatness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSmoothnessTolerance(),478,481,"/**
* Calls m1 with COSName.SM and returns the result as a Float.
*/","* This will get the smothness tolerance.
     *
     * @return The smothness tolerance or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingAlphaConstant(),518,521,"/**
* Calls m1 with COSName.CA and returns the result as a Float.
*/","* This will get the stroking alpha constant.
     *
     * @return The stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingAlphaConstant(),538,541,"/**
* Calls m1 with COSName.CA_NS and returns the result as a Float.
*/","* This will get the non stroking alpha constant.
     *
     * @return The non stroking alpha constant or null if one has not been set.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Creates a PDF annotation link from a COSDictionary.
 * @param field The COSDictionary representing the link.
 */
","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Creates a PDAnnotationMarkup object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Creates a PDAnnotationPopup object from a COSDictionary.
* @param field The COSDictionary containing popup data.
*/
","* Creates a popup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnknown.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:<init>(org.apache.pdfbox.cos.COSDictionary),35,38,"/**
 * Constructs a PDAnnotationUnknown object from a COSDictionary.
 */","* Creates an arbitrary annotation from a COSDictionary, expected to be a correct object definition for some sort of
     * annotation.
     *
     * @param dic The dictionary which represents this Annotation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(org.apache.pdfbox.cos.COSDictionary),53,57,"/**
 * Creates a PDAnnotationWidget from a COSDictionary.
 * @param field The COSDictionary containing widget data.
 */
","* Creates a PDWidget from a COSDictionary, expected to be a correct object definition for a field in PDF.
     *
     * @param field the PDF object to represent as a field.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsExportValues(),209,212,"/**
 * Delegates to m1() and returns its result as a List of Strings.
 */","* This will get the export values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the export value is the 
     * first entry in the two-element array.
     * </p>
     *
     * @return List containing all export values.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValue(),432,435,"/**
* Delegates to m1 with COSName.V and returns a list of strings.
*/","* Returns the selected values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getDefaultValue(),443,446,"/**
* Retrieves a list of strings based on COSName.DV.
*/","* Returns the default values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSBaseForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSBaseForNewDocument(org.apache.pdfbox.cos.COSBase),105,124,"/**
 * Processes a COSBase object, delegating to helper methods.
 * @param base The COSBase object to process.
 * @return Processed COSBase object.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSBase),629,635,"/**
 * Writes a COSBase object, updates the key, and recurses.
 * @param obj The COSBase object to write.
 * @throws IOException if an I/O error occurs.
 */
","* This will write a COS object.
     *
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeArray,org.apache.pdfbox.pdfwriter.COSWriter:writeArray(org.apache.pdfbox.cos.COSArray),1154,1165,"/**
 * Processes a COSArray, either by calling m4 or m2 then m3.
 * @param array The COSArray to process.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeDictionary,org.apache.pdfbox.pdfwriter.COSWriter:writeDictionary(org.apache.pdfbox.cos.COSDictionary),1167,1178,"/**
 * Processes a COSDictionary, either via m4 or m2/m3.
 * @param dictionary The COSDictionary to process.
 */
",,,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObject(java.io.OutputStream,org.apache.pdfbox.cos.COSBase,boolean)",168,250,"/**
 * Writes a COS object to the output stream, handling various types.
 * @param output Output stream to write to
 * @param object COS object to write
 * @param topLevel Indicates if this is a top-level object
 */","* This method prepares and writes COS data to the object stream by selecting appropriate specialized methods for
     * the content.
     *
     * @param output The stream, that shall be written to.
     * @param object The content, that shall be written.
     * @param topLevel True, if the currently written object is a top level entry of this object stream.
     * @throws IOException Shall be thrown, when an exception occurred for the write operation.",,,True,10
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addCornerCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addCornerCurl(double,double,double,double,double,double,double,boolean)",428,439,"/**
 * Draws a shape using provided angles, radius, and coordinates.
 */",* Creates a corner curl for polygons and ellipses.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,drawBasicEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:drawBasicEllipse(double,double,double,double)",1000,1008,"/**
 * Draws an arc defined by the given bounding rectangle.
 * @param left, bottom, right, top: rectangle coordinates.
 */",* Draws an ellipse without a cloudy border effect.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,preparePredictorPDImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",566,620,"/**
* Creates a PDImageXObject with color space and optional mask.
* @param stream Image data stream
* @param bitsPerComponent Bits per color component
* @return PDImageXObject instance
*/
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(),42,47,"/**
* Initializes a PDPageFitDestination object.
* Sets the array size to 2 and sets the type.
*/
","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:setFitBoundingBox(boolean),74,85,"/**
* Configures array based on fitBoundingBox.
* If true, uses TYPE_BOUNDED; otherwise, uses TYPE.
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(),42,47,"/**
* Initializes a PDPageFitHeightDestination object.
* Sets array size to 3 and names array element 1 as TYPE.
*/
","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setLeft(int),75,86,"/**
 * Executes array operations based on input 'x'.
 * If x is -1, calls m3; otherwise, calls m2 with x.
 */","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setFitBoundingBox(boolean),103,114,"/**
 * Configures array processing: fits bounding box if true, else uses TYPE.
 */","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(),38,43,"/**
* Initializes a PDPageFitRectangleDestination object.
* Sets array size to 6 and assigns type to the first element.
*/
","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setLeft(int),71,82,"/**
 * Calls array methods based on input x.
 * If x is -1, calls m3; otherwise, calls m2 with x.
 */","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setBottom(int),100,111,"/**
 * Calls array methods based on the value of y.
 * @param y Input value; determines which array method to call.
 */","* Set the bottom y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The bottom y coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setRight(int),129,140,"/**
 * Calls array methods based on input x.
 * If x is -1, calls m3; otherwise, calls m2 with x.
 */","* Set the right x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The right x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setTop(int),159,170,"/**
 * Calls array methods based on the value of y.
 * @param y Input value; determines which method to call.
 */","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(),43,48,"/**
 * Initializes a PDPageFitWidthDestination object.
 * Sets array size to 3 and sets name of element 1 to TYPE.
 */
","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setTop(int),77,88,"/**
 * Calls array methods based on y. If y is -1, m3 is called, else m2.
 */","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setFitBoundingBox(boolean),105,116,"/**
 * Configures array processing based on fitBoundingBox.
 * If true, uses TYPE_BOUNDED; otherwise, uses TYPE.
 */","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(),42,46,"/**
* Initializes the destination array with a size of 5 and sets name.
*/","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setLeft(int),74,85,"/**
 * Executes array operations based on input x.
 * If x is -1, calls m3; otherwise, calls m2 with x.
 */","* Set the left x-coordinate, values 0 or -1 imply that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setTop(int),103,114,"/**
 * Executes array operations based on input 'y'.
 * If y is -1, calls m3; otherwise, calls m2 with 'y'.
 */","* Set the top y-coordinate, values 0 or -1 imply that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setZoom(float),137,148,"/**
 * Sets array elements based on zoom value.
 * If zoom is 0, sets m3 with null; otherwise, uses zoom.
 */","* Set the zoom value for the page, values 0 or -1 imply that the current zoom
     * will be used.
     * @param zoom The zoom value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryValue,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryValue(),222,261,"/**
* Validates and extracts object number and generation number.
* Returns COSNull if validation fails; otherwise returns COSBase.
*/","* This will parse a PDF dictionary value.
     *
     * @return The parsed Dictionary object.
     *
     * @throws IOException If there is an error parsing the dictionary object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNote,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNote(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",194,217,"/**
 * Draws annotation content to the content stream.
 * @param annotation Annotation object.
 * @param contentStream Content stream to draw to.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawInsert,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawInsert(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",263,276,"/**
* Draws annotation content; calculates and sets stream parameters.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",416,434,"/**
* Draws annotation content stream elements.
* Sets various content stream attributes.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpLeftArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",436,456,"/**
 * Draws annotation content using the provided content stream.
 * @param annotation The annotation to draw.
 * @param contentStream Stream for drawing annotation content.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawKey,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawKey(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",549,590,"/**
 * Renders annotation content to the appearance stream.
 * Applies transformations and draws various elements.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveBoundingBox,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",1028,1037,"/**
 * Gets the rectangle bounding box from appearance stream or widget.
 * @param fieldWidget Annotation widget
 * @param appearanceStream Appearance stream
 * @return PDRectangle object
 */
","* Resolve the bounding box.
     * 
     * @param fieldWidget the annotation widget.
     * @param appearanceStream the annotations appearance stream.
     * @return the resolved boundingBox.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptDictionary,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",594,621,"/**
* Processes dictionary entries, recursing into strings, arrays, dicts.
* @param dictionary COS dictionary to process.
* @param objNum Object number.
* @param genNum Generation number.
*/
","* This will decrypt a dictionary.
     *
     * @param dictionary The dictionary to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error creating a new string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,setBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),857,864,"/**
* Updates a rectangle's bounding box in the document.
* @param bbox The new PDRectangle bounding box.
*/","* Sets the bounding box.
     * 
     * @param bbox the bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setColor,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",425,431,"/**
* Updates a PDGamma value by name, notifies listeners.
* @param name Name of the value to update.
* @param value The new PDGamma value.
*/","* Sets a colour.
     * 
     * @param name the attribute name
     * @param value the colour",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setFourColors,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",439,445,"/**
* Updates a colour value by name and notifies listeners.
* @param name Colour name.
* @param value New colour value.
*/
","* Sets four colours.
     * 
     * @param name the attribute name
     * @param value the four colours",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(),82,85,"/**
 * Creates a new PDPage with default LETTER size.
 */","* Creates a new PDPage instance for embedding, with a size of U.S. Letter (8.5 x 11 inches).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createPage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),67,74,"/**
 * Creates a PDF page with specified dimensions and adds it.
 * @param properties Contains page dimensions.
 */
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:initFringe(org.w3c.dom.Element),79,96,"/**
 * Parses 'fringe' attribute, creates a PDRectangle, and sets it.
 * @param element Element containing the 'fringe' attribute.
 * @throws IOException if fringe format is invalid.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:initFringe(org.w3c.dom.Element),81,98,"/**
 * Parses 'fringe' attribute, creates a PDRectangle, and sets it.
 * @param element Element containing the 'fringe' attribute.
 * @throws IOException if fringe attribute is invalid.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initFringe(org.w3c.dom.Element),102,119,"/**
 * Parses 'fringe' attribute, creates PDRectangle, and sets it.
 * @param element Element containing the 'fringe' attribute.
 * @throws IOException if fringe format is invalid.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:initFringe(org.w3c.dom.Element),82,99,"/**
* Parses 'fringe' attribute, creates PDRectangle, and sets it.
* @param element Element containing the 'fringe' attribute.
* @throws IOException if fringe format is incorrect.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getFDF(),116,130,"/**
 * Retrieves or creates an FDF dictionary.
 * Returns an FDFDictionary object.
 */","* This will get the FDF dictionary.
     *
     * @return The FDF dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(),60,73,"/**
 * Constructs a new FDFDocument object, initializing its components.
 */","* Constructor, creates a new FDF document.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,getCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:getCatalog(),139,154,"/**
 * Creates and returns an FDFCatalog object from the document.
 * Uses the document's root dictionary if available.
 * @return FDFCatalog object representing the catalog.
 */
","* This will get the FDF Catalog. This is guaranteed to not return null.
     *
     * @return The documents /Root dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getFractionalSpaceToAllocate(),151,167,"/**
 * Retrieves a PDRange, creating a default if 'A' array is missing.
 * @return PDRange object representing the range.
 */","* This is guaranteed to never return null.<br>
     *
     * To quote the PDF Spec ""An array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to
     * allocate at the left and bottom of the icon. A value of [0.0 0.0] positions the icon at the bottom-left corner of
     * the annotation rectangle; a value of [0.5 0.5] centers it within the rectangle. This entry is used only if the
     * icon is scaled proportionally. Default value: [0.5 0.5].""
     *
     * @return The fractional space to allocate.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDSet,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDSet(java.util.TreeMap),260,274,"/**
* Creates a PDStream from a CID to GID map.
* @param cidToGid CID to GID mapping for font data.
* @throws IOException if stream creation fails.
*/","* Builds the CIDSet entry, required by PDF/A. This lists all CIDs in the font, including those
     * that don't have a GID.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(),59,68,"/**
 * Constructs a PDTilingPattern object, initializing its properties.
 */",* Creates a new tiling pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareNonVisibleSignature,org.apache.pdfbox.pdmodel.PDDocument:prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),542,555,"/**
 * Sets appearance properties on the first annotation widget.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAppearanceDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",235,249,"/**
 * Creates and applies a PDF appearance dictionary.
 * Creates and applies a PDF appearance dictionary to a signature field.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingBefore,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),102,120,"/**
* Inserts a new sibling outline item into the document outline.
*/","* Insert a single sibling before this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingAfter,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),75,93,"/**
* Inserts a new sibling item into the outline node structure.
* @param newSibling The item to insert as a sibling.
*/
","* Insert a single sibling after this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),105,112,"/**
* Calls bead.m1(this) and thread.m2(COSName.F, bead).
* @param bead The PDThreadBead object to operate on.
*/
","* This will set the first bead in the thread.  When this is set it will
     * also set the thread property of the bead object.
     *
     * @param bead The first bead in the thread.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(),52,58,"/**
 * Constructs a new PDThreadBead object, initializing its properties.
 */","* Default constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setRoleMap(java.util.Map),198,203,"/**
* Sets the role map in the document's role collection.
* @param roleMap Map containing role information.
*/
","* Sets the role map.
     * 
     * @param roleMap the role map",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setName(java.lang.String,java.lang.String)",198,204,"/**
* Updates a value by name, then compares old and new COSBase.
*/","* Sets a name value.
     * 
     * @param name the attribute name
     * @param value the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setRenderingIntent(java.lang.String),352,355,"/**
* Calls method m1 on the dict object with ""RI"" and ri.
*/","* This will set the rendering intent for the graphics state.
     *
     * @param ri The new rendering intent",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,setN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:setN(java.lang.String),64,67,"/**
* Calls action.m1 with ""N"" and the given name.
* @param name The name to pass to action.m1
*/
","* This will set the name of the action to be performed.
     *
     * @param name The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setStyle(java.lang.String),101,104,"/**
 * Delegates string 's' to m1().m2() with prefix ""S"".
 */","* This will set the border effect, see the STYLE_* constants for valid values.
     *
     * @param s the border effect to use",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument),62,69,"/**
 * Constructs a PDPageLabels object with a TreeMap and document.
 */","* Creates an empty page label dictionary for the given document.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",53,58,"/**
 * Creates a PDStructureElement with the given type and parent.
 * @param structureType Element's type.
 * @param parent The parent node of the element.
 */
","* Constructor with required values.
     *
     * @param structureType The structure type. Constants are available in the
     * {@link StandardStructureTypes} class.
     * @param parent The parent structure node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(),57,60,"/**
 * Constructs a PDStructureTreeRoot object, initializing with TYPE.
 */","* Default Constructor.
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(),38,41,"/**
 * Initializes a new shading pattern object.
 * Sets the pattern type to shading pattern.
 */
",* Creates a new shading pattern.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(),50,54,"/**
 * Constructs a new PDAction object, initializing its COSDictionary.
 */
",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDocumentOutline(),196,200,"/**
 * Creates a PDDocumentOutline from the document's outline dictionary.
 * @return PDDocumentOutline object or null if no outline exists.
 */","* Get the outline associated with this document or null if it does not exist.
     *
     * @return The document's outline.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getParent(),53,65,"/**
 * Creates a PDOutlineNode based on the parent dictionary.
 * Returns null if no parent exists.
 */
",* @return The parent of this node or null if there is no parent.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(),38,41,"/**
 * Initializes the PDRectlinearMeasureDictionary with a subtype.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(),39,42,"/**
 * Constructs a PDTransition object with the default transition style.
 */","* creates a new transition with default ""replace"" style {@link PDTransitionStyle#R}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(java.lang.String,java.util.Calendar)",316,319,"/**
* Calls m2 with a COSName derived from the key and the date.
* @param key The key used to create a COSName.
* @param date The date to be used in the call.
*/
","* Set the value of a date entry in the dictionary.
     *
     * @param key The key to the date value.
     * @param date The date value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",339,351,"/**
 * Sets a date value in a COSDictionary, creating it if needed.
 * @param embedded The embedded COSName.
 * @param key The key for the date value.
 * @param date The date value to set.
 */
","* Set the date object.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the date.
     * @param date The date to set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreationDate(java.util.Calendar),220,223,"/**
* Sets the creation date of the info object.
* @param date The creation date to set.
*/
","* This will set the creation date of the document.
     *
     * @param date The new creation date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setModificationDate(java.util.Calendar),240,243,"/**
* Sets the modification date using the provided Calendar object.
*/","* This will set the modification date of the document.
     *
     * @param date The new modification date for the document.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setCreationDate(java.util.Calendar),795,798,"/**
* Sets the creation date of the annotation using the provided Calendar.
*/","* Set the creation date.
     *
     * @param date The date the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.util.Calendar),650,653,"/**
* Calls m2 on COSName.M with the given Calendar object.
*/","* This will set the date and time the annotation was modified.
     *
     * @param c the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setCreationDate(java.util.Calendar),176,179,"/**
* Sets the creation date on the document.
* @param creationDate The creation date to set.
*/","* This will set the date and time the annotation was created.
     *
     * @param creationDate the date and time the annotation was created.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSignDate(java.util.Calendar),195,198,"/**
* Calls dictionary.m1 with COSName.M and the provided Calendar.
*/","* Set the sign date.
     *
     * @param cal the date to be used as sign date",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCustomMetadataValue,"org.apache.pdfbox.pdmodel.PDDocumentInformation:setCustomMetadataValue(java.lang.String,java.lang.String)",291,294,"/**
* Logs field name and value using the info.m1 method.
*/","* Set the custom metadata value.
     *
     * @param fieldName The name of the custom metadata field.
     * @param fieldValue The value to the custom metadata field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setString(java.lang.String,java.lang.String)",89,95,"/**
* Updates a value by name, then compares old/new COSBase objects.
*/","* Sets a string attribute value.
     * 
     * @param name the attribute name
     * @param value the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,setBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:setBase(java.lang.String),85,88,"/**
* Calls m1().m2 with ""Base"" and the given base string.
*/","* This will set the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @param base The base URI to be used.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setVersion(java.lang.String),119,122,"/**
 * Logs the application version to the dictionary.
 * @param applicationVersion Version string to log.
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     * <p>
     * NOTE: Version value is specific for build data dictionary when used as the <code>App</code>
     * dictionary in a build properties dictionary.
     * </p>
     *
     * @param applicationVersion the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setUnits(java.lang.String),119,122,"/**
* Calls m1().m2 with prefix ""U"" and provided units.
*/","* This will set the label for the units.
     * 
     * @param units the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFractionalDisplay(java.lang.String),160,174,"/**
* Validates fractionalDisplay value; logs if invalid, throws exception otherwise.
*/","* This will set the value for the manner to display a fractional value.
     * Allowed values are ""D"", ""F"", ""R"", ""T"" and null.
     * 
     * @param fractionalDisplay the manner to display a fractional value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setThousandsSeparator(java.lang.String),231,234,"/**
* Calls m1().m2 with ""RT"" and the provided thousands separator.
*/","* This will set the text to be used between orders of thousands in display of numerical values.
     * 
     * @param thousandsSeparator thousands separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDecimalSeparator(java.lang.String),251,254,"/**
 * Calls m2 on m1, passing ""RD"" and the provided decimalSeparator.
 */","* This will set the text to be used as the decimal point in displaying numerical values.
     * 
     * @param decimalSeparator decimal separator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPrefixString(java.lang.String),269,272,"/**
* Logs a message with a given prefix using the m1().m2 method.
*/","* This will set the text to be concatenated to the left of the label specified by U.
     * @param labelPrefixString label prefix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelSuffixString(java.lang.String),289,292,"/**
* Calls m2 on m1, passing ""SS"" and the label suffix.
*/","* This will set the text to be concatenated after the label specified by U.
     * 
     * @param labelSuffixString label suffix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPositionToValue(java.lang.String),310,322,"/**
 * Validates labelPositionToValue. Logs if null or invalid.
 * @param labelPositionToValue Value to validate; must be ""S"", ""P"", or null.
 */","* This will set the value indicating the ordering of the label specified by U to the calculated
     * unit value. Possible values are ""S"", ""P"" and null.
     *
     * @param labelPositionToValue label position",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.w3c.dom.Element),75,108,"/**
 * Creates a FDFField from an XML element.
 * @param fieldXML XML element representing the field.
 * @throws IOException if an I/O error occurs.
 */
","* This will create an FDF field from an XFDF XML document.
     *
     * @param fieldXML The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:exportFDF(),141,152,"/**
 * Creates and populates an FDFField object.
 * Uses results from m1(), m3(), and COSName.V.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(java.lang.String),33,37,"/**
 * Creates a new Optional Content Group with the given name.
 */","* Creates a new optional content group (OCG).
     * @param name the name of the content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setInteger(java.lang.String,int)",264,270,"/**
* Updates a value associated with a name and notifies listeners.
* @param name Identifier for the value.
* @param value New value to set.
*/
","* Sets an integer.
     * 
     * @param name the attribute name
     * @param value the integer",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,int)",350,356,"/**
* Updates a value associated with a name and notifies listeners.
* @param name The name of the value to update.
* @param value The new value to set.
*/
","* Sets an integer number.
     * 
     * @param name the attribute name
     * @param value the integer number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDenominator(int),191,194,"/**
* Calls m2 on m1 with ""D"" and the given denominator.
*/","* This will set the precision or denominator of a fractional amount.
     * 
     * @param denominator the precision or denominator",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",60,91,"/**
* Creates a mask image from a BufferedImage, converts to PDImageXObject.
* @param document PDDocument object
* @param image BufferedImage to create mask from
* @return PDImageXObject representing the mask
*/","* Creates a new CCITT group 4 (T6) compressed image XObject from a b/w BufferedImage. This
     * compression technique usually results in smaller images than those produced by {@link LosslessFactory#createFromImage(PDDocument, BufferedImage)
     * }.
     *
     * @param document the document to create the image as part of.
     * @param image the image.
     * @return a new image XObject.
     * @throws IOException if there is an error creating the image.
     * @throws IllegalArgumentException if the BufferedImage is not a b/w image.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerComponent(int),75,79,"/**
* Sets the bits per component value.
* @param bitsPerComponent The number of bits per color component.
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component and updates the internal state.
* @param bitsPerComponent The number of bits per color component.
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerCoordinate(int),102,106,"/**
 * Sets the bits per coordinate and updates internal state.
 * @param bitsPerCoordinate The number of bits for each coordinate.
 */
","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerCoordinate(int),102,106,"/**
* Sets the bits per coordinate and updates internal state.
* @param bitsPerCoordinate The number of bits per coordinate.
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,float)",336,342,"/**
* Updates a value associated with a name and notifies listeners.
* @param name Name of the value to update.
* @param value New value to set.
*/
","* Sets a float number.
     * 
     * @param name the attribute name
     * @param value the float number",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setIntensity(float),81,84,"/**
 * Calls m1().m2 with ""I"" and the given float value.
 */","* This will set the intensity of the applied effect.
     *
     * @param i the intensity of the effect values 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setConversionFactor(float),139,142,"/**
* Calls m2 on m1 with ""C"" and the given conversion factor.
*/","* This will set the conversion factor.
     * 
     * @param conversionFactor the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseArrayElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseArrayElement(org.w3c.dom.Element),285,355,"/**
 * Parses an array element and populates a COSArray object.
 * @param arrayEl Element representing the array to parse
 * @return COSArray object containing parsed elements
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFile,org.apache.pdfbox.pdmodel.common.PDStream:getFile(),337,341,"/**
* Retrieves a PDFileSpecification from the stream based on COS name 'F'.
*/","* This will get the file specification for this stream. This is only
     * required for external files.
     * 
     * @return The file specification.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFile(),285,288,"/**
* Retrieves a PDFileSpecification object from the FDF.
* Uses m2(fdf.m1(COSName.F)) to generate the specification.
*/","* The source file or target file: the PDF document file that this FDF file was exported from or is intended to be
     * imported into.
     *
     * @return The F entry of the FDF dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEmbeddedFDFs(),512,526,"/**
* Retrieves embedded FDF specifications from the FDF.
* @return List of PDFileSpecification objects or null.
*/","* This will get the list of embedded FDF entries, or null if the entry is null. This will return a list of
     * PDFileSpecification objects.
     *
     * @return A list of embedded FDF files.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getFileSpecification(),91,94,"/**
* Retrieves a PDFileSpecification using COSName.F and ref.m1.
*/","* This will get the file specification of this reference. An optional parameter.
     *
     * @return The F entry for this dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getFile(),108,111,"/**
* Returns a PDFileSpecification object.
* Uses m1(), m2(COSName.F), and m3() to create it.
*/
","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific embedded go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:getFile(),61,64,"/**
* Retrieves a PDFileSpecification based on a COS name.
* Uses action.m1(COSName.F) to get a value.
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getFile(),70,73,"/**
* Creates a PDFileSpecification object.
* Uses m1(), m2() and COSName.F to construct.
*/","* This will get the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @return The F entry of the specific launch action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getFile(),66,69,"/**
* Retrieves a PDFileSpecification object from the action.
* Uses action.m1(COSName.F) and PDFileSpecification.m2().
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific remote go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFile(),64,67,"/**
* Retrieves a PDFileSpecification object from the document.
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getFile(),82,85,"/**
* Retrieves a PDFileSpecification using COSName.F.
* @return PDFileSpecification object
*/
","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific thread action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getFile(),84,87,"/**
* Retrieves a PDFileSpecification object.
* Uses m1(), m2(), and COSName.FS internally.
*/","* Return the attached file.
     *
     * @return The attached file.
     *
     * @throws IOException If there is an error creating the file spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(),40,44,"/**
 * Constructs a new FDFAnnotationHighlight object.
 * Initializes the annotation subtype.
 */
",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(),40,44,"/**
* Constructor for FDFAnnotationSquiggly.
* Initializes the annotation subtype.
*/
",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(),40,44,"/**
 * Constructs a FDFAnnotationStrikeOut object, setting its subtype.
 */",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(),40,44,"/**
* Constructs a new FDFAnnotationUnderline object.
* Initializes the annotation subtype.
*/
",* Default constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(),39,42,"/**
* Initializes the annotation caret with a subtype.
*/
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(),62,65,"/**
 * Constructs a new PDF attachment file. Sets the subtype.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(),56,59,"/**
* Initializes a free text annotation.
* Sets the subtype COS name to SUB_TYPE.
*/
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(),43,46,"/**
* Initializes the annotation ink object.
* Sets the subtype COS name to SUB_TYPE.
*/
",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(),113,118,"/**
 * Constructs a new PDAnnotationLine object.
 * Initializes subtype and line properties.
 */
",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(),43,46,"/**
* Constructs a PDAnnotationPolygon, setting its subtype.
*/",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(),42,45,"/**
 * Creates a new polyline annotation.
 * Sets the subtype COS name.
 */",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(),99,102,"/**
* Initializes the rubber stamp annotation.
* Sets the subtype COS name for the annotation.
*/
",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(),37,40,"/**
 * Initializes the annotation sound object.
 * Sets the subtype COS name to SUB_TYPE.
 */
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(java.lang.String),39,42,"/**
* Constructs a PDAnnotationSquareCircle with the given subtype.
* @param subType The subtype of the annotation.
*/
","* Creates a Circle or Square annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(),126,129,"/**
* Initializes the annotation text object with a subtype.
*/
",* Constructor.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(java.lang.String),36,42,"/**
 * Constructs a PDAnnotationTextMarkup with a subtype.
 * @param subtype The subtype of the annotation.
 */
","* Creates a TextMarkup annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignSignatureRectangle,"org.apache.pdfbox.pdmodel.PDDocument:assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",600,612,"/**
 * Updates widget rectangle from annotation dictionary if needed.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getBBox(),55,59,"/**
 * Creates a PDRectangle from the BBOX array, or null if absent.
 */","* Gets the artifact's bounding box (BBox).
     * 
     * @return the artifact's bounding box",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:getBBox(),841,850,"/**
 * Extracts a PDRectangle from a COS array, or null if absent.
 */","* Gets the bounding box.
     * 
     * @return the bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRectangle(),732,736,"/**
 * Extracts a PDRectangle from the annotation's RECT array.
 * Returns null if the array is missing.
 */","* The rectangle associated with this annotation.
     *
     * @return The annotation rectangle.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getFringe(),115,119,"/**
 * Extracts the rectangle from the annotation.
 * @return PDRectangle object or null if not present.
 */","* This will retrieve the fringe. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getFringe(),152,156,"/**
 * Extracts rectangle from annotation.
 * @return PDRectangle object or null if not found.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getFringe(),271,275,"/**
 * Extracts the rectangle from the annotation.
 * @return PDRectangle object or null if not present.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where
     * the drawing occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getFringe(),153,157,"/**
 * Extracts a PDRectangle from the annotation's RD array.
 * Returns null if RD array is missing.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontBoundingBox(),411,420,"/**
 * Extracts font bounding box from dictionary.
 * @return PDRectangle object or null if not found.
 */","* This will get the fonts bounding box.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBBox(),308,312,"/**
 * Creates a PDRectangle from the font bbox, or null if bbox is null.
 */","* This will get the fonts bounding box from its dictionary.
     *
     * @return The fonts bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getBBox(),208,213,"/**
* Creates a PDRectangle from the BBOX array, or null if absent.
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges, respectively,
     * of the form XObject's bounding box.
     * These boundaries are used to clip the form XObject and to determine its size for caching.
     * @return The BBox of the form.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getBBox(),221,226,"/**
 * Creates a PDRectangle from the bbox array, or null if absent.
 */","* An array of four numbers in the form coordinate system (see
     * below), giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the pattern's bounding box.
     *
     * @return The BBox of the pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBBox(),169,180,"/**
 * Returns the bounding box rectangle, creating it if necessary.
 * @return PDRectangle representing the bounding box.
 */","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the shading's bounding box.
     *
     * @return the BBox of the form",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getRectangle(),256,275,"/**
 * Extracts a PDRectangle from the dictionary.
 * @return PDRectangle object or null if not a valid rectangle.
 */","* The annotation rectangle, defining the location of the annotation on the page in default user space units. This
     * is usually required and should not return null on valid PDF documents. But where this is a parent form field with
     * children, such as radio button collections then the rectangle will be null.
     * 
     * @return The Rect value of this annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifference(),279,283,"/**
 * Creates a PDRectangle from a COSArray (RD operation).
 * @return PDRectangle or null if the COSArray is null.
 */","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifference(),122,126,"/**
* Creates a PDRectangle from a COSArray representing a difference.
* Returns null if the array is null.
*/
","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getBBox(),84,88,"/**
 * Creates a PDRectangle from the bbox COS array, or null if absent.
 */","* This will retrieve the rectangle specifying the location of the viewport.
     * 
     * @return the location",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getRectangle(),179,183,"/**
* Creates a PDRectangle from COS array or null if array is null.
*/","* The rectangle on the page that this bead is part of.
     *
     * @return The part of the page that this bead covers.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setLineDashPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:setLineDashPattern(org.apache.pdfbox.cos.COSArray,int)",1080,1084,"/**
 * Creates and applies a PDLineDashPattern using the array and phase.
 */","* @param array dash array
     * @param phase dash phase",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getLineDashPattern(),167,178,"/**
 * Creates a PDLineDashPattern from the dictionary's dash pattern.
 * Returns a PDLineDashPattern object.
 */","* Get the line dash pattern for this box style.  This is guaranteed to not
     * return null.  The default is [3],0.
     *
     * @return The line dash pattern.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineDashPattern(),303,317,"/**
 * Extracts line dash pattern from dictionary.
 * Returns PDLineDashPattern or null if not found.
 */","* This will get the dash pattern.
     *
     * @return null or the D value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getDashStyle(),170,180,"/**
 * Creates or retrieves a PDLineDashPattern.
 * Returns a PDLineDashPattern object.
 */","* This will retrieve the dash style used for drawing the border.
     *
     * @return the dash style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getStencilImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",61,125,"/**
 * Creates a masked BufferedImage using the given paint and image data.
 * @param pdImage image to mask
 * @param paint paint to apply
 * @return masked BufferedImage
 */","* Returns an ARGB image filled with the given paint and using the given image as a mask.
     * @param paint the paint to fill the visible portions of the image with
     * @return a masked image filled with the given paint
     * @throws IOException if the image cannot be read
     * @throws IllegalStateException if the image is not a stencil.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,readRasterFromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:readRasterFromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)",263,357,"/**
* Decodes image data from PDF and writes to a WritableRaster.
* @param pdImage PDF image object
* @param raster Raster to write decoded data to
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from1Bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",359,458,"/**
* Decodes a region of a PDF image into a BufferedImage.
* @param pdImage Image to decode.
* @param clipped Region to decode.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,fromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",554,703,"/**
 * Decodes image data into a BufferedImage, applying color key mask.
 * @param pdImage source image
 * @param raster target raster
 * @param colorKey color key array
 * @param clipped clipped rectangle
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(java.awt.image.WritableRaster),193,281,"/**
* Converts a raster to a BufferedImage, applying colorant processing.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getDefaultDecode(int),454,464,"/**
 * Creates a float array with size n*2, initializes the even indices to 0.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontMatrix(),254,264,"/**
 * Returns the font matrix, using cached or default value.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getMatrix(),235,239,"/**
* Creates a 3x3 matrix with COSName.MATRIX applied.
*/","* This will get the optional matrix of an XObjectForm. It maps the form space to user space.
     * @return the form matrix if available, or the identity matrix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getMatrix(),134,137,"/**
 * Creates a masked matrix using m1, m2, and COSName.MATRIX.
 */","* Returns the pattern matrix, or the identity matrix is none is available.
     * 
     * @return the pattern matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getMatrix(),56,59,"/**
* Creates a matrix using m1(), m2(), and COSName.MATRIX.
*/","* This will get the optional Matrix of a function based shading.
     *
     * @return the matrix",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,setAttribute,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",102,107,"/**
* Updates an attribute value; notifies listeners and stores old value.
*/","* Sets an attribute.
     * 
     * @param attrName the attribute name
     * @param attrValue the attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getInheritableAttribute,"org.apache.pdfbox.pdmodel.PDPageTree:getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",108,122,"/**
 * Retrieves a value from a COSDictionary, traversing parents.
 * @param node Dictionary to search.
 * @param key Key to search for.
 * @return COSBase value or null if not found.
 */
","* Returns the given attribute, inheriting from parent tree nodes if necessary.
     *
     * @param node page object
     * @param key the key to look up
     * @return COS value for the given key",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,findFieldType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:findFieldType(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",132,147,"/**
 * Retrieves a value from a COSDictionary, traversing parents if needed.
 * @param dic Dictionary to search.
 * @param seen Set of already seen dictionaries.
 * @return Value or null if not found.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,boolean)",895,898,"/**
 * Delegates to overloaded method with null value.
 * @param key The key to lookup.
 * @param defaultValue The default value if not found.
 * @return True if key exists, false otherwise.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getInterpolate(),229,233,"/**
* Checks a condition using parameters and COSName constants.
* @return True if the condition is met, false otherwise.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,isStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:isStencil(),284,288,"/**
* Calls m1 on parameters with COSName.IM and COSName.IMAGE_MASK.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,int)",994,997,"/**
 * Calls overloaded method with null value for the second parameter.
 * @param key COSName key
 * @param defaultValue Default integer value
 */
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the defaultvalue will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1007,1010,"/**
* Calls overloaded method with default third argument.
* @param firstKey First key.
* @param secondKey Second key.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value -1 will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The integer value.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getHeight(),205,209,"/**
* Calls m1 on parameters with COSName.H, HEIGHT, and -1.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getWidth(),217,221,"/**
* Calls m1 on parameters with COSName.W and COSName.WIDTH.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:<init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",68,103,"/**
 * Creates a PDInlineImage with parameters, data, and resources.
 * Decodes image data based on specified filters.
 */","* Creates an inline image from the given parameters and data.
     *
     * @param parameters the image parameters
     * @param data the image data
     * @param resources the current resources
     * @throws IOException if the stream cannot be decoded",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(java.util.List),309,329,"/**
* Applies filters to raw data stream.
* @param stopFilters List of filters to stop processing.
* @return Filtered input stream.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getSuffix(),386,407,"/**
* Determines image format based on filters.
* Returns ""png"", ""jpg"", or ""tiff"" based on filter presence.
*/","* Returns the suffix for this image type, e.g. jpg/png.
     *
     * @return The image suffix.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",252,265,"/**
* Recursively retrieves COS objects of specified types.
* @param type1 First COSName type
* @param type2 Second COSName type
* @return List of COSObjects matching the types.
*/","* This will get all dictionaries objects by type.
     *
     * @param type1 The first possible type of the object, mandatory.
     * @param type2 The second possible type of the object, usually an abbreviation, optional.
     *
     * @return This will return all objects with the specified type(s).",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary),382,450,"/**
 * Searches for trailer dictionary and associated objects.
 * Returns true if found, otherwise resets source offset.
 */","* Brute force search for all trailer marker.
     * 
     * @param trailer dictionary to be used as trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchForTrailerItems,org.apache.pdfbox.pdfparser.BruteForceParser:searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary),460,497,"/**
 * Extracts and sets root and info objects from the document trailer.
 * @param trailer The document trailer dictionary.
 * @return True if a root object was found, false otherwise.
 */","* Search for the different parts of the trailer dictionary.
     *
     * @param trailer dictionary to be used as trailer dictionary
     * @return true if the root was found, false if not.
     * 
     * @throws IOException if something went wrong",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPages,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPages(),164,168,"/**
* Creates a PDPageTree from the document's pages.
* @return PDPageTree object representing the pages.
*/
","* Returns all pages in the document, as a page tree.
     * 
     * @return PDPageTree providing all pages of the document",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary),68,71,"/**
 * Constructs a PDPageTree with a root dictionary.
 * @param root The root COSDictionary for the page tree.
 */
","* Constructor for reading.
     *
     * @param root A page tree root.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,next,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:next(),230,243,"/**
* Creates a PDPage from the next dictionary in the queue.
* Throws NoSuchElementException if queue is empty.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",448,451,"/**
* Delegates to an overloaded method with only the code parameter.
*/","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @param customGlyphList a custom glyph list to use instead of the Adobe Glyph List
     * @return Unicode character(s)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",276,331,"/**
 * Retrieves Unicode representation for a code, using custom or default glyph list.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getGroup,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getGroup(),149,165,"/**
 * Returns the transparency group, creating it if necessary.
 * Returns PDTransparencyGroup or null if no group exists.
 */","* Returns the G entry of the soft mask object
     * 
     * @return form containing the transparency group
     * @throws IOException if the group could not be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacSubtype(java.lang.String),190,202,"/**
 * Sets the MAC subtype in the COSDictionary.
 * @param macSubtype The subtype value to set.
 */","* Set the mac subtype.
     *
     * @param macSubtype The mac subtype.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacCreator(java.lang.String),220,232,"/**
 * Sets the MAC creator in the COSDictionary.
 * @param macCreator The MAC creator string to set.
 */
","* Set the mac Creator.
     *
     * @param macCreator The mac Creator.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacResFork(java.lang.String),250,262,"/**
 * Sets the MAC resource fork value in the COSDictionary.
 * @param macResFork The MAC resource fork string to set.
 */
","* Set the mac ResFork.
     *
     * @param macResFork The mac ResFork.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,isEncrypted,org.apache.pdfbox.pdmodel.PDDocument:isEncrypted(),812,815,"/**
* Delegates m1() call to the document object.
* Returns the result of the document's m1() call.
*/
","* This will tell if this document is encrypted or not.
     * 
     * @return true If this document is encrypted.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,parse,org.apache.pdfbox.pdfparser.FDFParser:parse(),66,88,"/**
 * Creates an FDFDocument.
 * Returns a new FDFDocument or null if an IOException occurs.
 */","* This will parse the stream and populate the FDFDocument object.
     *
     * @return the parsed FDFDocument
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(boolean),149,186,"/**
 * Creates a PDDocument.
 * @param lenient Enables lenient parsing; throws IOException if false.
 * @return PDDocument object.
 */","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing.
     *
     * @param lenient activate leniency if set to true
     * @return the populated PDDocument
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroForm,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroForm(org.apache.pdfbox.pdmodel.PDDocument),91,98,"/**
 * Creates and initializes the AcroForm within the given PDF document.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(),111,114,"/**
* Returns a PDAcroForm, using a default fixup for the document.
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * @return The document's AcroForm.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,findNamedDestinationPage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),348,372,"/**
* Resolves a PDPageDestination from a named destination.
* @param namedDest The named destination to resolve.
* @return PDPageDestination or null if not found.
*/","* Find the page destination from a named destination.
     * @param namedDest the named destination.
     * @return a PDPageDestination object or null if not found.
     * @throws IOException if there is an error creating the PDPageDestination object.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removeResources,org.apache.pdfbox.pdmodel.PDPage:removeResources(org.apache.pdfbox.cos.COSDictionary),134,162,"/**
 * Removes resources from the resource cache.
 * @param resources COSDictionary containing resources to remove.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,"org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",206,236,"/**
* Retrieves a PDColorSpace, potentially from cache.
* @param name COSName identifying the color space
* @param wasDefault boolean indicating default status
* @return PDColorSpace object
*/","* Returns the color space resource with the given name, or null if none exists. This method is
     * for PDFBox internal use only, others should use {@link #getColorSpace(COSName)}.
     *
     * @param name Name of the color space resource.
     * @param wasDefault if current color space was used by a default color space. This parameter is
     * to
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,hasColorSpace,org.apache.pdfbox.pdmodel.PDResources:hasColorSpace(org.apache.pdfbox.cos.COSName),244,247,"/**
 * Checks if a COSName represents a color space.
 * @param name The COSName to check.
 * @return True if it's a color space, false otherwise.
 */
","* Returns true if the given color space name exists in these resources.
     *
     * @param name Name of the color space resource.
     * @return true if the given color space name exists in these resources, otherwise false",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGState,org.apache.pdfbox.pdmodel.PDResources:getExtGState(org.apache.pdfbox.cos.COSName),255,280,"/**
* Retrieves or creates a PDExtendedGraphicsState by name.
* @param name COSName identifying the graphics state
* @return PDExtendedGraphicsState object or null if not found
*/","* Returns the extended graphics state resource with the given name, or null if none exists.
     *
     * @param name Name of the graphics state resource.
     * @return the extended graphics state with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isImageXObject,org.apache.pdfbox.pdmodel.PDResources:isImageXObject(org.apache.pdfbox.cos.COSName),391,409,"/**
* Checks if a COSName represents an image stream.
* @param name COSName to check; returns true if it is.
*/","* Tells whether the XObject resource with the given name is an image.
     *
     * @param name Name of the XObject resource.
     * @return true if it is an image XObject, false if not.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpaceNames,org.apache.pdfbox.pdmodel.PDResources:getColorSpaceNames(),515,518,"/**
* Returns a list of COS names for color spaces.
*/","* Returns the names of the color space resources, if any.
     * 
     * @return an iterable containing all names of available colorspaces",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObjectNames,org.apache.pdfbox.pdmodel.PDResources:getXObjectNames(),525,528,"/**
* Returns COS names for XObjects.
* Uses m1 helper function with COSName.XOBJECT.
*/","* Returns the names of the XObject resources, if any.
     * 
     * @return an iterable containing all names of available xobjects",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFontNames,org.apache.pdfbox.pdmodel.PDResources:getFontNames(),535,538,"/**
* Returns a list of COSName objects associated with the font.
*/","* Returns the names of the font resources, if any.
     * 
     * @return an iterable containing all names of available fonts",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPropertiesNames,org.apache.pdfbox.pdmodel.PDResources:getPropertiesNames(),545,548,"/**
* Returns a list of COS names, using COSName.PROPERTIES as input.
*/","* Returns the names of the property list resources, if any.
     * 
     * @return an iterable containing all names of available property lists",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShadingNames,org.apache.pdfbox.pdmodel.PDResources:getShadingNames(),555,558,"/**
 * Returns shading COS names.
 * Uses m1 with COSName.SHADING as argument.
 */","* Returns the names of the shading resources, if any.
     * 
     * @return an iterable containing all names of available shadings",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPatternNames,org.apache.pdfbox.pdmodel.PDResources:getPatternNames(),565,568,"/**
 * Returns a list of COS names matching the pattern.
 */","* Returns the names of the pattern resources, if any.
     * 
     * @return an iterable containing all names of available patterns",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGStateNames,org.apache.pdfbox.pdmodel.PDResources:getExtGStateNames(),575,578,"/**
* Returns a list of COS names associated with the graphics state.
*/","* Returns the names of the extended graphics state resources, if any.
     * 
     * @return an iterable containing all names of available extended graphics states",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",708,735,"/**
 * Retrieves a COSName based on kind, prefix, and object.
 * Returns a new COSName if not found and registers it.
 */",* Adds the given resource if it does not already exist.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",780,783,"/**
 * Calls m1 with predefined FONT constant.
 * @param name COSName object
 * @param font PDFont object
 */
","* Sets the font resource with the given name.
     *
     * @param name the name of the resource
     * @param font the font to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",791,794,"/**
* Delegates to overloaded method with COLORSPACE as first arg.
*/","* Sets the color space resource with the given name.
     *
     * @param name the name of the resource
     * @param colorSpace the color space to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",802,805,"/**
* Delegates to overloaded method with EXT_G_STATE as first arg.
*/","* Sets the extended graphics state resource with the given name.
     *
     * @param name the name of the resource
     * @param extGState the extended graphics state to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",813,816,"/**
* Calls m1 with SHADING as the first argument.
* @param name COSName object
* @param shading PDShading object
*/
","* Sets the shading resource with the given name.
     *
     * @param name the name of the resource
     * @param shading the shading to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",824,827,"/**
* Calls the overloaded m1 method with a predefined pattern type.
*/","* Sets the pattern resource with the given name.
     *
     * @param name the name of the resource
     * @param pattern the pattern to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",835,838,"/**
* Delegates to overloaded method with PROPERTIES COS name.
*/","* Sets the property list resource with the given name.
     *
     * @param name the name of the resource
     * @param properties the property list to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",846,849,"/**
* Calls overloaded method with COSName.XOBJECT as the first argument.
*/","* Sets the XObject resource with the given name.
     *
     * @param name the name of the resource
     * @param xobject the XObject to be added",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getObjectFromEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName),82,90,"/**
 * Retrieves a value from the dictionary using the provided key.
 * @param key The key to look up in the dictionary.
 * @return The COSBase value associated with the key, or null.
 */
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),242,254,"/**
 * Sets the embedded file in the COSDictionary.
 * @param file The PDEmbeddedFile to set, or null.
 */
","* Set the embedded file for this spec. You should also call
     * {@link #setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFileUnicode(PDEmbeddedFile)}
     * for cross-platform and cross-language compatibility.
     *
     * @param file The file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),324,336,"/**
 * Sets the embedded file in the COSDictionary, creating if needed.
 * @param file The PDEmbeddedFile to set.
 */
","* Set the embedded Unicode file for this spec. If you call this, then do not forget to also
     * call
     * {@link #setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFile(PDEmbeddedFile)}
     * or the attachment will not be visible on some viewers.
     *
     * @param file The Unicode file to be embedded.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStdCryptFilterDictionary(),470,473,"/**
* Returns a PDCrypt filter dictionary using the standard CF name.
*/","* Returns the standard crypt filter.
     * 
     * @return the standard crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getDefaultCryptFilterDictionary(),480,483,"/**
* Returns a PDCryptFilterDictionary for the default crypt filter.
*/","* Returns the default crypt filter (for public-key security handler).
     * 
     * @return the default crypt filter if available.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),530,534,"/**
 * Applies a filter dictionary and registers it.
 * @param cryptFilterDictionary The filter dictionary to apply.
 */","* Sets the standard crypt filter.
     * 
     * @param cryptFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),541,545,"/**
* Sets default filter and registers it with the document.
* @param defaultFilterDictionary Filter dictionary to use.
*/","* Sets the default crypt filter (for public-key security handler).
     *
     * @param defaultFilterDictionary the standard crypt filter to set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType0Font:getFontDescriptor(),449,453,"/**
 * Delegates to the descendant font's m1() method.
 * @return PDFontDescriptor object from descendant font.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getResources(),88,99,"/**
 * Retrieves resources; uses char stream's if present, else font's.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType3Font:hasGlyph(java.lang.String),135,140,"/**
 * Checks if a COSDictionary exists for the given name.
 * @param name The name to check for in the COSDictionary.
 * @return True if the COSDictionary and entry exist, false otherwise.
 */
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProc,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProc(int),395,404,"/**
 * Creates a PDType3CharProc from a code.
 * @param code Input code used to retrieve a COSStream.
 * @return PDType3CharProc object or null if stream is missing.
 */","* Returns the stream of the glyph for the given character code
     * 
     * @param code character code
     * @return the stream to be used to render the glyph",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:toString(),137,171,"/**
 * Generates a string representation of the device N process.
 * Returns ""ERROR"" if colorant information retrieval fails.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getBaseState(),207,212,"/**
 * Retrieves the base state from a COSDictionary.
 * @return The BaseState object, or null if not found.
 */
","* Returns the base state for optional content groups.
     * @return the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState),218,222,"/**
* Sets the base state in the COSDictionary.
* @param state The BaseState object to set.
*/","* Sets the base state for optional content groups.
     * @param state the base state",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",400,460,"/**
* Moves content group between ON/OFF arrays based on enable.
* @param group Content group to move.
* @param enable Flag to enable/disable group.
* @return True if group was found and moved, false otherwise.
*/","* Enables or disables an optional content group.
     * @param group the group object
     * @param enable true to enable, false to disable
     * @return true if the group already had an on or off setting, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDPatternContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),35,38,"/**
 * Constructs a PDPatternContentStream from a PDTilingPattern.
 * @param pattern The tiling pattern to use.
 */
","* Create a new tiling pattern content stream.
     *
     * @param pattern The tiling pattern stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearance(),120,129,"/**
 * Retrieves or creates an appearance dictionary.
 * @return PDAppearanceDictionary object.
 */","* Get the annotations appearance dictionary.
     * 
     * <p>
     * This will get the annotations appearance dictionary. If this is not
     * existent an empty appearance dictionary will be created.
     * 
     * @return the annotations appearance dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getRolloverAppearance(),99,103,"/**
 * Retrieves an appearance entry. Returns a new entry or calls m2().
 */","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getDownAppearance(),133,137,"/**
 * Creates a PDAppearanceEntry, using dictionary or default.
 * @return PDAppearanceEntry object
 */
","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDButton:constructAppearances(),284,304,"/**
 * Processes annotation widgets, setting their visibility based on appearance.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByValue(java.lang.String),389,410,"/**
 * Updates annotation widgets, setting value or Off.
 * @param value The value to set or COSName.Off if not found.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getFirstChild(),184,187,"/**
 * Returns the first outline item.
 * Uses m1 with COSName.FIRST as the argument.
 */",* @return The first child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getLastChild(),202,205,"/**
* Returns the last outline item.
* Uses m1 with COSName.LAST as the argument.
*/
",* @return The last child or null if there is no child.,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAcroFormDefaultResource,"org.apache.pdfbox.pdmodel.PDDocument:assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",622,647,"/**
* Updates the form's resources dictionary with new data.
* @param acroForm The form to update.
* @param newDict Dictionary containing the resources to apply.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSignature,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSignature(),92,95,"/**
 * Delegates to m1() and returns the result.
 */","* Get the signature dictionary.
     * 
     * @return the signature dictionary
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValueAsString(),158,163,"/**
* Retrieves a signature string from m1().
* Returns empty string if m1() returns null.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,appendBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),142,149,"/**
* Appends a bead to the thread, updating related beads.
* @param append The bead to append to the thread.
*/
","* Append a bead after this bead.  This will correctly set the next/previous beads in the
     * linked list.
     *
     * @param append The bead to insert.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getNormalAppearanceStream(),366,390,"/**
 * Retrieves the appearance stream based on appearance dictionary.
 * Returns null if dictionary or appearance entry is missing.
 */","* Returns the appearance stream for this annotation, if any. The annotation state is taken into account, if
     * present.
     * 
     * @return the appearance stream",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValueForWidget,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),351,370,"/**
 * Extracts a COSName from a widget's appearance dictionary.
 * Returns """" if no matching COSName is found.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:getOnValue(),100,121,"/**
 * Extracts a COSName from a PDAnnotationWidget's appearance.
 * Returns """" if no matching COSName is found.
 */","* Get the value which sets the check box to the On state.
     * 
     * <p>The On value should be 'Yes' but other values are possible
     * so we need to look for that. On the other hand the Off value shall
     * always be 'Off'. If not set or not part of the normal appearance keys
     * 'Off' is the default</p>
     *
     * @return the value setting the check box to the On state. 
     *          If an empty string is returned there is no appearance definition.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPages,org.apache.pdfbox.pdfparser.COSParser:checkPages(org.apache.pdfbox.cos.COSDictionary),938,953,"/**
 * Validates the page tree root and recursively processes pages.
 * @param root The COSDictionary representing the document root.
 */","* Check if all entries of the pages dictionary are present. Those which can't be dereferenced are removed.
     * 
     * @param root the root dictionary of the pdf
     * @throws java.io.IOException if the page tree root is null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,enqueueKids,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:enqueueKids(org.apache.pdfbox.cos.COSDictionary),190,222,"/**
* Recursively processes a COSDictionary node, handling page trees.
* Checks if visited, skips invalid pages, and adds valid pages to queue.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,findPage,"org.apache.pdfbox.pdmodel.PDPageTree:findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",396,414,"/**
 * Recursively processes dictionary nodes based on search context.
 * @param context Search context to track findings.
 * @param node  COSDictionary node to process.
 */
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getIDTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),1131,1157,"/**
* Recursively builds a map of names to PDStructureElements.
* @param idTree Root node; returns a map of names to elements.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getValue(java.lang.String),213,241,"/**
* Finds an object by name, searching names and kids nodes.
* @param name The name to search for.
* @return The found object or null if not found.
*/
","* The name to retrieve.
     *
     * @param name The name in the tree.
     * @return The value of the name in the tree.
     * @throws IOException If there is a problem creating the destinations.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,calculateLimits,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:calculateLimits(),160,204,"/**
* Calculates and sets lower/upper limits for a PageNameTreeNode.
* Uses kids list or names map, handles IOExceptions.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getNumberTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),1161,1187,"/**
 * Recursively processes a tree of numbers, merging results into a map.
 * @param tree The root node of the tree to process.
 * @return A map of integers to COSObjectable objects.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,findLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),100,124,"/**
 * Recursively processes a node, extracting page labels.
 * Processes children first, then extracts labels from node.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getValue(java.lang.Integer),141,167,"/**
* Retrieves an object based on the given index.
* Returns null if no matching object is found.
*/","* Returns the value corresponding to an index in the number tree.
     *
     * @param index The index in the number tree.
     *
     * @return The value corresponding to the index.
     *
     * @throws IOException If there is a problem creating the values.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setKids(java.util.List),112,130,"/**
* Sets limits and kids for a PDNumberTreeNode, or clears them.
* @param kids List of child nodes; processed if not empty and valid.
*/","* Set the children of this number tree.
     *
     * @param kids The children of this number tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNumbers(Map)} with a map and pass a single
     * element list here.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setNumbers(java.util.Map),245,274,"/**
* Processes a map of numbers, handling null input and creating COS objects.
*/","* Set the numbers for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param numbers The map of numbers to objects, or <code>null</code> for nothing.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfOutputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfOutputParameters(),159,174,"/**
* Returns the number of output values, calculating if needed.
*/","* This will get the number of output parameters that
     * have a range specified.  A range for output parameters
     * is optional so this may return zero for a function
     * that does have output parameters, this will simply return the
     * number that have the range specified.
     *
     * @return The number of output parameters that have a range
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeForOutput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeForOutput(int),185,189,"/**
 * Creates a PDRange object using COSArray and an integer.
 * @param n Integer used in PDRange construction.
 * @return A new PDRange object.
 */
","* This will get the range for a certain output parameters.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The output parameter number to get the range for.
     *
     * @return The range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,clipToRange,org.apache.pdfbox.pdmodel.common.function.PDFunction:clipToRange(float[]),293,313,"/**
* Processes input values based on ranges from COSArray.
* @param inputValues Array of values to process.
* @return Processed float array or original if no ranges.
*/","* Clip the given input values to the ranges.
     * 
     * @param inputValues the input values
     * @return the clipped values",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfInputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfInputParameters(),209,217,"/**
* Returns the number of input values, calculating it if needed.
*/","* This will get the number of input parameters that
     * have a domain specified.
     *
     * @return The number of input parameters that have a domain
     * specified.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainForInput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainForInput(int),228,232,"/**
 * Creates a PDRange object with domain values and a size n.
 */","* This will get the range for a certain input parameter.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The parameter number to get the domain for.
     *
     * @return The domain range for this component.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,calcSampleIndex,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:calcSampleIndex(int[]),351,372,"/**
 * Calculates a weighted sum using provided vector and size values.
 */","* calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
         *
         * @param vector with coordinates
         * @return index in flat array",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeValues(),144,163,"/**
 * Returns the encode array, initializing if necessary.
 * Returns COSArray, may be initialized with default values.
 */","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeForParameter(int),220,229,"/**
 * Creates a PDRange object if decode values are sufficient.
 * @param paramNum Parameter number; determines range size.
 * @return PDRange object or null if insufficient decode values.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The decode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncodeForParameter(int),177,181,"/**
 * Creates a PDRange object using encoded values and a size.
 * @param n The size of the PDRange.
 * @return A new PDRange object.
 */
","* Get the encode for the input parameter.
     *
     * @param n The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isTopAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isTopAttached(),67,70,"/**
* Delegates to m1 with ""Top"" as the argument and returns the result.
*/","* Is the artifact attached to the top edge?
     * 
     * @return <code>true</code> if the artifact is attached to the top edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isBottomAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isBottomAttached(),78,81,"/**
* Delegates to m1 with ""Bottom"" as argument and returns the result.
*/","* Is the artifact attached to the bottom edge?
     * 
     * @return <code>true</code> if the artifact is attached to the bottom edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isLeftAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isLeftAttached(),89,92,"/**
* Delegates to m1 with ""Left"" as the argument.
*/","* Is the artifact attached to the left edge?
     * 
     * @return <code>true</code> if the artifact is attached to the left edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isRightAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isRightAttached(),100,103,"/**
* Delegates to m1 with ""Right"" and returns the result.
*/","* Is the artifact attached to the right edge?
     * 
     * @return <code>true</code> if the artifact is attached to the right edge,
     * <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initStyles,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initStyles(org.w3c.dom.Element),107,126,"/**
* Processes element styles: head, tail, and interior-color.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFont:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",66,72,"/**
 * Initializes a PDCIDFont with dictionary and parent font.
 * @param fontDictionary Font dictionary.
 * @param parent Parent PDType0Font.
 */
","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontDescriptor(org.apache.pdfbox.cos.COSDictionary),296,308,"/**
 * Retrieves the font descriptor from a COSDictionary.
 * Returns null if not found in dictionary or descendants.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",48,71,"/**
 * Initializes a DictionaryEncoding with base encoding and differences.
 * @param baseEncoding Base encoding COSName.
 * @param differences COSArray representing differences.
 */","* Creates a new DictionaryEncoding for embedding.
     *
     * @param baseEncoding the base encoding of this encoding
     * @param differences the differences of this encoding with regard to the base encoding",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary),78,100,"/**
 * Initializes encoding with a COSDictionary, sets base encoding, and applies differences.
 */","* Creates a new DictionaryEncoding for a Type 3 font from a PDF.
     *
     * @param fontEncoding The Type 3 encoding dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",109,149,"/**
 * Initializes the encoding with base encoding derived from font properties.
 * @param fontEncoding The font's dictionary.
 * @param isNonSymbolic Flag indicating if the font is non-symbolic.
 * @param builtIn The font's built-in encoding.
 */
","* Creates a new DictionaryEncoding from a PDF.
     *
     * @param fontEncoding The encoding dictionary.
     * @param isNonSymbolic True if the font is non-symbolic. False for Type 3 fonts.
     * @param builtIn The font's built-in encoding. Null for Type 3 fonts.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSName),43,51,"/**
 * Creates a color space based on a COSName and associated dictionary.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSArray),58,64,"/**
* Creates a color space from a COS array.
* @param rgb COS array representing the color space.
*/
","* Creates a new CalRGB color space using the given COS array.
     *
     * @param rgb the cos array which represents this color space",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:toRGB(float[]),77,114,"/**
 * Processes float array based on m1() result; returns transformed array or original.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:toString(),105,126,"/**
 * Builds a process string; returns ""ERROR"" if IO exception occurs.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGBImage(java.awt.image.WritableRaster),64,112,"/**
* Applies a color mask to a raster, creating a BufferedImage.
* @param raster Input WritableRaster to apply the mask to.
* @return BufferedImage with the applied color mask.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultDecode(int),158,164,"/**
* Creates a float array based on bitsPerComponent.
* Returns a pre-defined array of float values.
*/
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getInitialColor(),166,178,"/**
 * Returns the initial color, creating it if null.
 * Uses m1(), m2(), m4() to determine color values.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setARange(org.apache.pdfbox.pdmodel.common.PDRange),229,232,"/**
 * Calls m1 with the given range and initial value of 0.
 * @param range The range object to be processed.
 */
","* This will set the a range for the ""a"" component.
     * @param range the new range for the ""a"" component, 
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setBRange(org.apache.pdfbox.pdmodel.common.PDRange),239,242,"/**
 * Calls m1 with the given range and a fixed value of 2.
 * @param range The range object to be processed.
 */
","* This will set the ""b"" range for this color space.
     * @param range the new range for the ""b"" component,
     * or null if defaults (-100..100) are to be set.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroup(java.lang.String),146,163,"/**
 * Finds an optional content group by name.
 * @param name The name to search for.
 * @return PDOptionalContentGroup or null if not found.
 */
","* Returns the first optional content group of the given name.
     *
     * @param name the group name
     * @return the optional content group or null, if there is no such group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,addGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),169,182,"/**
 * Adds an optional content group to the order array.
 * @param ocg The optional content group to add.
 */
","* Adds an optional content group (OCG).
     * @param ocg the optional content group",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOptionalContentGroups,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOptionalContentGroups(),188,201,"/**
 * Extracts optional content groups from a COS array.
 * @return Collection of PDOptionalContentGroup objects.
 */","* Returns the collection of all optional content groups.
     * @return the optional content groups",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,72,"/**
 * Creates a ShadingContext with the given shading and transforms.
 * @param shading The shading object.
 * @throws IOException if an I/O error occurs.
 */
","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws java.io.IOException if there is an error getting the color space
     * or doing background color conversion.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeForParameter(int),157,166,"/**
 * Creates a PDRange object if decode values are sufficient.
 * @param paramNum Number of parameters; determines range size.
 * @return PDRange object or null if insufficient decode values.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(),794,797,"/**
* Returns a PDColor object, using COSName.C as default.
*/","* This will retrieve the color used in drawing various elements. As of PDF 1.6 these are :
     * <ul>
     * <li>Background of icon when closed</li>
     * <li>Title bar of popup window</li>
     * <li>Border of a link annotation</li>
     * </ul>
     *
     * @return Color object representing the colour
     *",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getPathArray,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getPathArray(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon),157,178,"/**
 * Extracts polygon path from annotation.
 * @param annotation PDAnnotationPolygon object
 * @return 2D float array representing the polygon path.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBorderColour(),86,89,"/**
* Returns the color space associated with the BC attribute.
* @return PDColor object representing the color space.
*/
","* This will retrieve the border color.
     * 
     * @return the border color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBackground(),106,109,"/**
* Returns the background color.
* Uses m1 with COSName.BG to retrieve the color.
*/
","* This will retrieve the background color.
     * 
     * @return the background color.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(char,char,char,char,char,char,char,char,char)",421,437,"/**
* Appends security parameters to a StringBuilder and processes.
* Parameters are security flags, result is processed by m3().
*/","* works like {@link #addKeyUsage(String)} but enters each character separately
     *
     * @param digitalSignature char that is one of {0, 1, X}
     * @param nonRepudiation char that is one of {0, 1, X}
     * @param keyEncipherment char that is one of {0, 1, X}
     * @param dataEncipherment char that is one of {0, 1, X}
     * @param keyAgreement char that is one of {0, 1, X}
     * @param keyCertSign char that is one of {0, 1, X}
     * @param cRLSign char that is one of {0, 1, X}
     * @param encipherOnly char that is one of {0, 1, X}
     * @param decipherOnly char that is one of {0, 1, X}",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(java.io.InputStream),337,344,"/**
 * Extracts a byte range from an InputStream.
 * @param pdfFile Input stream to extract from.
 * @return Extracted byte array.
 */","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(byte[]),354,361,"/**
* Extracts a byte range from a PDF file.
* @param pdfFile The PDF file as a byte array.
* @return Extracted byte range as a byte array.
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(java.io.InputStream),412,418,"/**
 * Filters a PDF input stream.
 * @param pdfFile Input PDF stream to filter.
 * @return Filtered byte array.
 */
","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(byte[]),431,437,"/**
 * Filters a PDF file using a COSFilterInputStream.
 * @param pdfFile The PDF file to filter.
 * @return Filtered byte array.
 */
","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String),144,147,"/**
 * Applies a transformation to the input name using m1() and m2().
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @return the name value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getRenderingIntent(),334,345,"/**
* Retrieves RenderingIntent from dictionary.
* @return RenderingIntent or null if not found.
*/
","* This will get the rendering intent.
     *
     * @return null or the RI value in the dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,getN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:getN(),54,57,"/**
* Delegates to action.m1 with ""N"" as input.
*/","* This will get the name of the action to be performed.
     *
     * @return The name of the action to be performed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String,java.lang.String)",674,677,"/**
* Delegates to m2(COSName, String), using key to create COSName.
* @param key Key for lookup.
* @param defaultValue Value if key is not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineStyle(),144,147,"/**
* Retrieves a string value from the dictionary using COSName.
*/","* Get the style for the guideline.  The default is ""S"" for solid.
     *
     * @return The guideline style.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getIcon(),103,106,"/**
* Retrieves a masked string using annot.m1 with specified COSName and Note.
*/","* This will retrieve the icon (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the PDAnnotationText.NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getAttachmentName(),104,107,"/**
* Calls m1().m2 with COSName.NAME and ATTACHMENT_NAME_PUSH_PIN.
*/","* This is the name used to draw the type of attachment. See the ATTACHMENT_NAME_XXX constants.
     *
     * @return The name that describes the visual cue for the attachment.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getLineEndingStyle(),230,233,"/**
* Calls m1() and then m2() with specific COSName and LE values.
*/","* This will retrieve the line ending style.
     *
     * @return The line ending style, possible values shown in the LE_ constants section, LE_NONE if
     * missing, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getHighlightMode(),160,163,"/**
* Calls m1().m2 with COSName.H and HIGHLIGHT_MODE_INVERT.
*/","* Set the highlight mode for when the mouse is depressed. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @return The string representation of the highlight mode.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getReplyType(),231,234,"/**
* Calls m1().m2 with COSName.RT and RT_REPLY.
*/","* This will retrieve the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for
     * the available values.
     *
     * @return the relationship.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:getName(),131,134,"/**
* Calls m1().m2 with COSName.NAME and NAME_DRAFT.
*/","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * DRAFT.
     *
     * @return The name of this rubber stamp, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getName(),178,181,"/**
* Calls m1().m2 with COSName.NAME and NAME_NOTE.
*/","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the NAME_XXX constants.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getHighlightingMode(),77,80,"/**
* Calls m1() and then m2() with COSName.H and ""I"".
*/","* Returns the highlighting mode. Default value: <code>I</code>
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @return the highlighting mode",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getStyle(),150,153,"/**
* Calls m1().m2 with COSName.S and STYLE_SOLID.
*/","* This will retrieve the border style, see the STYLE_* constants for valid values.
     *
     * @return the style of the border",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getType,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getType(),67,70,"/**
* Calls m1() and m2() to format a string as ""ExData"".
*/","* returns the type of the external data dictionary. It must be ""ExData"", if present
     * 
     * @return the type of the external data dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:getSubtype(),82,86,"/**
* Returns a string by applying m1() and m2() methods.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getStyle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getStyle(),70,73,"/**
* Calls m3 with COSName.S and PDTransitionStyle.R.m1().
* @return Result of the m3 method call.
*/
","* @return the style for this transition
     * @see PDTransitionStyle#valueOf(String)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDimension(),80,83,"/**
* Creates a transition mask string using COSName and PDTransitionDimension.
*/","* @return The dimension in which the specified transition effect shall occur or the default
     * {@link PDTransitionDimension#H} if no dimension is found.
     * @see PDTransitionDimension",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getMotion(),101,104,"/**
* Calls m3 with COSName.M and PDTransitionMotion.I.m1().
* Returns the result of the call.
*/","* @return The direction of motion for the specified transition effect or the default {@link PDTransitionMotion#I}
     * if no motion is found.
     * @see PDTransitionMotion",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getNonFullScreenPageMode(),287,291,"/**
* Retrieves the non-full screen page mode setting.
*/","* Get the non full screen page mode preference.
     *
     * @return the non full screen page mode preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getReadingDirection(),308,311,"/**
* Returns the reading direction as a string.
*/","* Get the reading direction preference.
     *
     * @return the reading direction preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewArea(),328,331,"/**
* Returns the view area as a string from preferences.
*/","* Get the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @return the ViewArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewClip(),348,351,"/**
* Retrieves the view clip from preferences.
* Returns a String representing the view clip.
*/","* Get the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @return the ViewClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintArea(),368,371,"/**
* Returns the print area as a string from preferences.
*/","* Get the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @return the PrintArea preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintClip(),388,391,"/**
* Retrieves the print clip boundary from preferences.
*/","* Get the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @return the PrintClip preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintScaling(),428,431,"/**
* Retrieves the print scaling value from preferences.
*/","* Get the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @return the PrintScaling preference.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefOffset(long),295,316,"/**
 * Processes xref offset, returns offset or -1 if failed.
 * Uses source.m1(), parser.m2(), m4(), m5() and XREF_TABLE.
 */","* Check if the cross reference table/stream can be found at the current offset.
     * 
     * @param startXRefOffset
     * @return the revised offset
     * @throws IOException",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getVersion,org.apache.pdfbox.pdmodel.PDDocument:getVersion(),1415,1441,"/**
* Returns a version number, using catalog version if >= 1.4.
* @return float version number, defaults to header version.
*/","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. 1.4f)",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAttributes(),161,196,"/**
* Extracts and processes PDAttributeObjects from COS structures.
* Returns a Revisions object containing the extracted attributes.
*/","* Returns the attributes together with their revision numbers (A).
     * 
     * @return the attributes as a list, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,isEmpty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:isEmpty(),143,147,"/**
* Checks if m2() is 1 and m3() is not null.
*/","* Detects whether there are no properties in the attribute object.
     * 
     * @return <code>true</code> if the attribute object is empty,
     *  <code>false</code> otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:toString(),193,197,"/**
* Concatenates ""O="" with the result of m1() and returns it.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getParent(),96,100,"/**
 * Creates a PDStructureNode from the parent COSDictionary.
 * @return PDStructureNode or null if parent is null.
 */","* Returns the parent in the structure hierarchy (P).
     * 
     * @return the parent in the structure hierarchy",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObject(org.apache.pdfbox.cos.COSBase),364,390,"/**
 * Extracts data from COSBase, returns data or null if not found.
 */","* Creates an object for a kid of this structure node.
     * The type of object depends on the type of the kid. It can be
     * <ul>
     * <li>a {@link PDStructureElement},</li>
     * <li>a {@link PDObjectReference},</li>
     * <li>a {@link PDMarkedContentReference},</li>
     * <li>an {@link Integer}</li>
     * </ul>
     * 
     * @param kid the kid
     * @return the object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setName(java.lang.String),73,77,"/**
* Calls m2 with result of m1 and name.
* Also calls m4 on m3 with COSName.N and name.
*/","* Sets the property name.
     * 
     * @param name the property name",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(org.apache.pdfbox.cos.COSDictionary),93,97,"/**
 * Initializes a PDEncryption object with a COSDictionary.
 * @param dictionary The COSDictionary containing encryption details.
 */
","* creates a new encryption dictionary from the low level dictionary provided.
     * @param dictionary a COS encryption dictionary",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSecurityHandler,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSecurityHandler(),104,112,"/**
 * Returns the security handler. Throws IOException if handler is null.
 */","* Returns the security handler specified in the dictionary's Filter entry.
     * @return a security handler instance
     * @throws IOException if there is no security handler available which matches the Filter",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getAnnotations(),437,451,"/**
* Extracts annotations from the FDF document.
* @return List of FDFAnnotation objects or null if none found.
*/","* This will get the list of FDF Annotations. This will return a list of FDFAnnotation objects or null if the entry
     * is not set.
     *
     * @return A list of FDF annotations.
     *
     * @throws IOException If there is an error creating the annotation list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getName,org.apache.pdfbox.pdmodel.font.PDCIDFont:getName(),210,214,"/**
* Delegates to the m1() method and returns its result.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,isCharSetMatch,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",666,710,"/**
 * Checks font info against CID system info based on code page range.
 */","* Returns true if the character set described by CIDSystemInfo is present in the given font.
     * Only applies to Adobe-GB1, Adobe-CNS1, Adobe-Japan1, Adobe-Korea1, as per the PDF spec.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,createCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:createCIDFont(),190,221,"/**
* Creates a CID Font dictionary with specified properties.
* Returns the created COSDictionary object.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,addNameTag,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:addNameTag(java.lang.String),223,231,"/**
 * Sets the base font name for font descriptor and CID font.
 * @param tag Font tag to prepend to the font name.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getName,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getName(),323,327,"/**
* Delegates to m1() and returns its result.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType0Font:getName(),613,617,"/**
* Delegates to the m1() method and returns its result.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toString,org.apache.pdfbox.pdmodel.font.PDType0Font:toString(),672,681,"/**
 * Combines data from multiple methods into a formatted string.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getName,org.apache.pdfbox.pdmodel.font.PDType1CFont:getName(),248,252,"/**
* Returns the result of calling the m1() method.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType1Font:getName(),531,535,"/**
* Delegates to the m1() method and returns its result.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:isNChannel(),437,440,"/**
* Delegates m1() call to attributes if it's not null.
*/","* Returns true if this color space has the NChannel subtype.
     * @return true if subtype is NChannel",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOpenAction(),284,299,"/**
 * Extracts the OpenAction from the document root.
 * Returns PDDestinationOrAction or null if not found.
 */","* Get the Document Open Action for this object.
     *
     * @return The action to perform when the document is opened.
     * @throws IOException If there is an error creating the destination or action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),50,58,"/**
 * Creates a PDActionJavaScript object from a COSDictionary.
 * @param base The COSDictionary to convert.
 * @return A PDActionJavaScript object.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAction,org.apache.pdfbox.pdmodel.fdf.FDFField:getAction(),702,705,"/**
* Creates a PDAction object using field and COSName.A.
* @return PDAction object created by PDActionFactory.
*/
","* This will get the action that is associated with this field.
     *
     * @return The 'A' entry in the FDF field dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getDoc(),140,165,"/**
* Extracts JavaScript actions from a PDF dictionary.
* Returns a map of action names to PDActionJavaScript objects.
*/","* Returns the dictionary's ""Doc"" entry, that is, a map of key value pairs to be added to the document's JavaScript
     * name tree.
     * 
     * @return Map of named ""JavaScript"" dictionaries.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getNext(),126,147,"/**
* Extracts PDAction list from action dictionary or array.
* Returns an empty list if no actions are found.
*/","* This will get the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @return The Next action or sequence of actions.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:getF(),66,69,"/**
* Creates a PDAction object using actions and COSName.F.
* @return A PDAction object.
*/
","* Get the F action.
     *
     * @return The F action.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getE(),69,73,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */
","* This will get an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @return The E entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getX(),92,96,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */
","* This will get an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @return The X entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getD(),116,120,"/**
* Retrieves a PDAction from the actions dictionary.
* Returns null if the dictionary is null.
*/
","* This will get an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @return The d entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getU(),141,145,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */","* This will get an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @return The U entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getFo(),165,169,"/**
* Retrieves a PDAction from the actions dictionary.
* Returns null if the dictionary is null.
*/
","* This will get an action to be performed when the annotation
     * receives the input focus.
     *
     * @return The Fo entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getBl(),189,193,"/**
 * Retrieves a PDAction from the BL dictionary, or null if absent.
 */","* This will get an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @return The Bl entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPO(),215,219,"/**
* Retrieves a PDAction from the actions dictionary.
* Returns null if the dictionary is null.
*/","* This will get an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @return The PO entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPC(),241,245,"/**
* Retrieves a PDAction from the actions dictionary.
* Returns null if the dictionary is not found.
*/","* This will get an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @return The PC entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPV(),265,269,"/**
 * Retrieves a PDAction from the actions dictionary using COSName.PV.
 * Returns null if the dictionary is null.
 */","* This will get an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @return The PV entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPI(),288,292,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */","* This will get an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @return The PI entry of annotation's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWC(),70,74,"/**
 * Retrieves a PDAction from the WC dictionary, or null if absent.
 */","* This will get a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @return The WC entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWS(),95,99,"/**
 * Retrieves a PDAction from the WS dictionary, or null if absent.
 */","* This will get a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @return The WS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDS(),120,124,"/**
 * Retrieves a PDAction from a COSDictionary, or null if absent.
 */","* This will get a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @return The DS entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWP(),145,149,"/**
 * Retrieves a PDAction from the actions dictionary, or null.
 */","* This will get a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @return The WP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDP(),170,174,"/**
 * Retrieves a PDAction from a COSDictionary, or null if absent.
 */","* This will get a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @return The DP entry of document catalog's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getK(),71,75,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */
","* This will get a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @return The K entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getF(),97,101,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */","* This will get a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @return The F entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getV(),123,127,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */","* This will get a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @return The V entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getC(),151,155,"/**
* Retrieves a PDAction from a COSDictionary.
* Returns null if the dictionary is null.
*/
","* This will get a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @return The C entry of form field's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getO(),71,75,"/**
 * Retrieves a PDAction from the actions dictionary.
 * Returns null if the dictionary is null.
 */","* This will get an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @return The O entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getC(),97,101,"/**
 * Retrieves a PDAction from a COSDictionary, or null if absent.
 */","* This will get an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @return The C entry of page object's additional actions dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getAction(),92,96,"/**
 * Creates a PDAction from a COSDictionary.
 * @return PDAction object or null if dictionary is null.
 */","* Get the action to be performed when this annotation is to be activated. Either this or the
     * destination entry should be set, but not both.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAction(),142,146,"/**
 * Creates a PDAction from a COSDictionary, or null if absent.
 */","* Get the action to be performed when this annotation is to be activated.
     *
     * @return The action to be performed when this annotation is activated.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getAction(),281,284,"/**
* Creates a PDAction object using chained method calls.
*/","* Get the action of this node.
     *
     * @return The action of this node.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldType(),87,96,"/**
 * Retrieves the field type, falling back to parent if null.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getPropertyStringValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getPropertyStringValue(java.lang.String),80,83,"/**
 * Delegates property retrieval to info.m1.
 * @param propertyKey Key for the property to retrieve.
 * @return The retrieved property value.
 */
","* Return the properties String value.
     * <p>
     * Allows to retrieve the
     * low level date for validation purposes.
     * </p> 
     * 
     * @param propertyKey the dictionaries key
     * @return the properties value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCustomMetadataValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCustomMetadataValue(java.lang.String),280,283,"/**
 * Delegates field name to info.m1 for processing.
 * @param fieldName The field name to be processed.
 * @return The result of info.m1(fieldName).
 */
","*  This will get the value of a custom metadata information field for the document.
     *  This will return null if one is not found.
     *
     * @param fieldName Name of custom metadata field from pdf document.
     *
     * @return String Value of metadata field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getString(java.lang.String),78,81,"/**
 * Delegates processing of the name to m1().m2().
 * @param name The name to be processed.
 * @return The processed name.
 */
","* Gets a string attribute value.
     * 
     * @param name the attribute name
     * @return the string attribute value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,getBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:getBase(),70,73,"/**
 * Delegates to m1() and then applies ""Base"" to its result.
 */","* This will get the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @return The URI entry of the specific URI dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getVersion(),131,134,"/**
* Retrieves a value from the dictionary using the key ""REx"".
*/","* A text string indicating the version of the application implementation, as described by the
     * <code>/Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     *
     * @return the application implementation version",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getUnits(),109,112,"/**
 * Delegates to m1() and then applies ""U"" to the result.
 */","* This will return the label for the units.
     * 
     * @return the label for the units",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String,java.lang.String)",735,738,"/**
* Delegates to another m2 method using a COSName.
* @param key The key to use.
* @param defaultValue Value if key is not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",780,784,"/**
 * Retrieves a value from a COSDictionary, or returns a default.
 * @param embedded COSName object
 * @param key COSName key
 * @param defaultValue default value if key is not found
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getOperation(),122,125,"/**
* Retrieves a string value using params.m1 with specified COSName and operation.
*/","* Get the operation to perform on the file.  This method will not return null,
     * OPERATION_OPEN is the default.
     *
     * @return The operation to perform for the file.
     * @see PDWindowsLaunchParams#OPERATION_OPEN
     * @see PDWindowsLaunchParams#OPERATION_PRINT",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultAppearance(),500,503,"/**
* Retrieves a string value associated with COSName.DA from dictionary.
*/","* Get the default appearance.
     * 
     * @return the DA element of the dictionary object",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeLanguage,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",938,948,"/**
* Copies language from srcCatalog to destCatalog if dest is null.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFilename,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFilename(),101,121,"/**
 * Attempts to determine a filename using multiple methods.
 * Returns the filename or null if all attempts fail.
 */","* <p>Preferred method for getting the filename.
     * It will determinate the recommended file name.</p>
     * <p>First of all we try to get the unicode filename if it exist.
     * If it doesn't exist we take a look at the DOS, MAC UNIX filenames.
     * If no one exist the required F entry will be returned.</p>
     *
     * @return The preferred file name.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setFormattedValue(java.lang.String),115,119,"/**
* Calls m1, m2, and m3.m4 with formattedValue.
*/","* Sets the string for the property value.
     * 
     * @param formattedValue the string for the property value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFTextStripper:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",862,874,"/**
 * Processes a marked content item.
 * @param tag COSName identifying the tag
 * @param properties COSDictionary containing properties
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFTextStripper:endMarkedContentSequence(),876,889,"/**
 * Processes marked content, updates state, and calls super.m4().
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,probablyBarcodeFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),646,660,"/**
 * Checks font descriptor for ""Code"" or ""barcode"" identifiers.
 * @param fontDescriptor The PDFontDescriptor to check.
 * @return True if identifiers are found, false otherwise.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,toString,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:toString(),146,150,"/**
* Extends parent's m1() by appending result of m2().
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,hasGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:hasGroup(java.lang.String),258,269,"/**
 * Checks if any layer contains the group name.
 * @param groupName The group name to search for.
 * @return True if found, false otherwise.
 */
","* Indicates whether a particular optional content group is found in the PDF file.
     * @param groupName the group name
     * @return true if the group exists, false otherwise",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractNonStrokingColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),364,428,"/**
 * Extracts color from annotation's /DA appearance stream.
 * Returns default black if parsing fails or no color found.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getFullyQualifiedName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getFullyQualifiedName(),406,422,"/**
 * Retrieves the fully qualified name, combining parent names.
 * @return The combined name string, or null if no name exists.
 */","* Returns the fully qualified name of the field, which is a concatenation of the names of all the parents fields.
     * 
     * @return the name of the field",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String,java.util.Calendar)",822,825,"/**
* Delegates to m2(COSName, Calendar), using key to create COSName.
* @param key Key for lookup.
* @param defaultValue Default Calendar value if not found.
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",866,870,"/**
 * Retrieves a Calendar value from a dictionary, or default if null.
 * @param embedded COSName object
 * @param key COSName object
 * @param defaultValue Calendar default value
 * @return Calendar value or default value
 */
","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was
     * invalid.
     * @return The name converted to a string.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getRevision(),141,144,"/**
* Retrieves a long value associated with the COSName.R from dictionary.
*/","* The software module revision number, corresponding to the Date attribute.
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getMinimumRevision(),165,168,"/**
* Retrieves a value from the dictionary using COSName.V.
* @return Long value associated with COSName.V.
*/
","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @return the revision of the software module",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions)",65,75,"/**
 * Decodes an input stream using filters and parameters.
 * @param filters List of filters to apply.
 * @param parameters COSDictionary of parameters.
 * @param in Input stream to decode.
 * @param options Decode options.
 * @return Decoded COSInputStream.
 */
","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @param options decode options for the encoded stream
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createView,org.apache.pdfbox.cos.COSStream:createView(),181,197,"/**
 * Returns a RandomAccessRead implementation based on filters.
 * Returns a FilteredReader if filters are present.
 */","* Returns a new RandomAccessRead which reads the decoded stream data.
     * 
     * @return RandomAccessRead containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(java.util.List),200,220,"/**
* Decodes an input stream, skipping filters based on stopFilters.
* @param stopFilters List of filter names to skip decoding.
* @return Decoded InputStream or a RandomAccessInputStream.
*/","* This will get a stream with some filters applied but not others. This is
     * useful when doing images, ie filters = [flate,dct], we want to remove
     * flate but leave dct
     * 
     * @param stopFilters  A list of filters to stop decoding at.
     * @return A stream with decoded data.
     * @throws IOException If there is an error processing the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String),290,293,"/**
* Delegates to m1().m2() to process the provided name.
*/","* Gets a number value.
     * 
     * @param name the attribute name
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getConversionFactor(),129,132,"/**
* Calls m1() and then m2(""C"") on the result. Returns a float.
*/","* This will return the conversion factor.
     * 
     * @return the conversion factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:<init>(org.apache.pdfbox.cos.COSBase),54,71,"/**
 * Constructs a PDFunctionType2 with the given COSBase object.
 * Initializes c0, c1, and exponent from the COS object.
 */
","* Constructor.
     *
     * @param function The function.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderLength(),306,309,"/**
* Returns a float value obtained by calling annot.m1(COSName.LL).
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderExtend(),326,329,"/**
* Calls annot.m1(COSName.LLE) and returns the result as a float.
*/","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderOffset(),346,349,"/**
* Calls annot.m1 with COSName.LLO and returns the result as a float.
*/
","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getV(),348,351,"/**
* Retrieves a float value from the dictionary using COSName.V.
*/","* The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @return the minimum required capability of the signature field seed value
     * dictionary parser",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCYX(),321,324,"/**
* Calls m1(), then m2 with COSName.CYX, returning the result.
*/","* This will return the CYX factor.
     * 
     * @return CYX factor",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String,float)",279,282,"/**
* Delegates to m1().m2 to retrieve a float value.
* @param name Identifier for the value.
* @param defaultValue Value if not found.
*/
","* Gets a number value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the number value",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getIntensity(),91,94,"/**
* Delegates to m1().m2() with arguments ""I"" and 0.
*/","* This will retrieve the intensity of the applied effect.
     *
     * @return the intensity value 0 to 2",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,computeFontHeight,org.apache.pdfbox.text.LegacyPDFStreamEngine:computeFontHeight(org.apache.pdfbox.pdmodel.font.PDFont),324,369,"/**
 * Calculates glyph height based on font parameters and descriptor.
 * @param font The PDFont object to analyze.
 * @return The calculated glyph height as a float.
 */","* Compute the font height. Override this if you want to use own calculations.
     * 
     * @param font the font.
     * @return the font height.
     * 
     * @throws IOException if there is an error while getting the font bounding box.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:toRGB(float[]),83,105,"/**
* Processes input float array based on m1() result.
* Returns processed array or a default array if m1() is false.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:getLineWidth(),148,170,"/**
 * Retrieves border style value from annotation.
 * Returns 1 if no style is found.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:getLineWidth(),174,196,"/**
* Retrieves border style value from annotation.
* Returns 1 if style is not found.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getLineWidth(),207,229,"/**
 * Retrieves border style value from annotation, returns 1 if null.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:getLineWidth(),125,147,"/**
 * Retrieves border style value from annotation, returns 1 if null.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.util.List),107,113,"/**
* Processes each token in the input list using method m1.
* @param tokens List of tokens to be processed.
*/","* This will write out the list of tokens to the stream.
     *
     * @param tokens The tokens to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:getDecodeParms(),269,273,"/**
* Returns a list of objects by decoding parameters.
* @return List of decoded objects, may be empty.
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:getFileDecodeParams(),282,285,"/**
* Calls m1 with COSName.F_DECODE_PARMS; returns a list of Objects.
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),151,155,"/**
 * Processes a structure element by calling m1 and invoking m2.
 * @param structureElement The structure element to process.
 */","* Appends a structure element kid and sets the parent property (/P) to this.
     * 
     * @param structureElement the structure element",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)",208,211,"/**
* Delegates the PDStructureElement processing to m1.
* @param newKid The new element to process.
* @param refKid Reference element for processing.
*/
","* Inserts a structure element kid before a reference kid.
     * 
     * @param newKid the structure element
     * @param refKid the reference kid",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),278,286,"/**
 * Removes element and clears its associated data.
 * @param structureElement Element to remove; modifies in place.
 * @return True if element was removed, false otherwise.
 */
","* Removes a structure element kid and if successful also removes the parent property (/P).
     *
     * @param structureElement the structure element
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultPositionVector(int),267,270,"/**
 * Creates a Vector using the result of m1(cid) divided by 2.
 * Uses dw2[0] as the initial element.
 */","* Returns the default position vector (v).
     *
     * @param cid CID",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidth(int),317,324,"/**
* Masks a code value using m1 and m2.
* @param code The code to mask.
* @return The masked float value.
*/
",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getAverageFontWidth(),485,489,"/**
* Delegates m1() call to the descendant's implementation.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getProperties,org.apache.pdfbox.pdmodel.PDResources:getProperties(org.apache.pdfbox.cos.COSName),358,383,"/**
* Retrieves a PDPropertyList by name, caching if available.
* @param name COSName identifying the properties
* @return PDPropertyList object or null if not found
*/","* Returns the property list resource with the given name, or null if none exists.
     * 
     * @param name Name of the property list resource.
     * @return the property list with the given name or null",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getOptionalContent(),284,288,"/**
 * Retrieves the optional content property list, or null if absent.
 */","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOptionalContent(),1055,1059,"/**
 * Retrieves the optional content property list, or null if absent.
 */","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getOCGs(),62,86,"/**
* Extracts PDPropertyLists from OCGS dictionary or array.
* Returns an empty list if no OCGS data is found.
*/","* Get a list of optional content groups.
     * 
     * @return List of optional content groups, never null.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getOptionalContent(),705,709,"/**
 * Retrieves the optional content property list, or null if absent.
 */","* This will get the optional content group or optional content membership dictionary for the
     * annotation.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOrVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenOrVisibilityExpression(org.apache.pdfbox.cos.COSArray),2240,2267,"/**
* Checks if all elements in the array are hidden.
* Returns false if any element is not hidden.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Creates a PDAnnotationCaret object from a COSDictionary.
 */","* Creates a Caret annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Creates a file attachment annotation from a COSDictionary.
 * @param field The COSDictionary containing attachment data.
 */
","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),66,69,"/**
 * Creates a free text annotation from a COSDictionary.
 * @param field The COSDictionary containing annotation data.
 */
","* Creates a FreeText annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Creates a PDAnnotationInk object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),125,128,"/**
 * Creates a line annotation from a COSDictionary.
 * @param field The COSDictionary representing the annotation.
 */
","* Creates a Line annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDAnnotationPolygon from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Creates a PDAnnotationPolyline object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(org.apache.pdfbox.cos.COSDictionary),109,112,"/**
 * Creates a RubberStamp annotation from a COSDictionary.
 * @param field The COSDictionary representing the annotation.
 */
","* Creates a Rubber Stamp annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a PDAnnotationSound object from a COSDictionary.
 */","* Creates a sound annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationSquareCircle from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),136,139,"/**
 * Creates a PDAnnotationText object from a COSDictionary.
 */","* Creates a Text annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationTextMarkup object from a COSDictionary.
 */","* Creates a TextMarkup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getPopup(),93,97,"/**
 * Creates a PDAnnotationPopup from a COSDictionary.
 * @return PDAnnotationPopup object or null if dictionary is null.
 */","* This will retrieve the popup annotation used for entering/editing the text for this annotation.
     *
     * @return the popup annotation.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getWidgets(),162,185,"/**
* Extracts annotation widgets from a PDF object.
* Returns a list of PDAnnotationWidget objects.
*/","* Returns the widget annotations associated with this field.
     *
     * @return The list of widget annotations. Be aware that this list is <i>not</i> backed by the
     * actual widget collection of the field, so adding or deleting has no effect on the PDF
     * document until you call {@link #setWidgets(java.util.List) setWidgets()} with the modified
     * list.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueAsString(),465,469,"/**
* Returns a value derived from m1().m2() using Arrays.m3().
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneForNewDocument(org.apache.pdfbox.cos.COSBase),81,103,"/**
 * Processes a COSBase object, returning a processed version.
 * @param base The COSBase object to process.
 * @return Processed COSBase object, or null if input is null.
 */","* Deep-clones the given object for inclusion into a different PDF document identified by the destination parameter.
     * 
     * Expert use only, don’t use it if you don’t know exactly what you are doing.
     * 
     * @param base the initial object as the root of the deep-clone operation
     * @return the cloned instance of the base object
     * @throws IOException if an I/O error occurs",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObjects,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObjects(),527,533,"/**
* Writes objects until objectsToWrite is empty.
* Uses m2 to write each object retrieved by m1.
*/",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefInc,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefInc(org.apache.pdfbox.cos.COSDocument),710,750,"/**
 * Handles document updates, either incremental or full,
 * updating the trailer and xref stream accordingly.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromArray,org.apache.pdfbox.pdfwriter.COSWriter:visitFromArray(org.apache.pdfbox.cos.COSArray),1108,1152,"/**
 * Processes elements of a COSArray, writing them to the output.
 * @param array COSArray to process.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDictionary,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDictionary(org.apache.pdfbox.cos.COSDictionary),1186,1265,"/**
 * Processes a COSDictionary, handling various object types and signatures.
 * @param obj The COSDictionary to process.
 */",,,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectsToStream,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectsToStream(org.apache.pdfbox.cos.COSStream),109,157,"/**
* Creates a COSStream object containing flattened objects.
* @param stream COSStream to write to
* @return Modified COSStream object
*/","* Writes all prepared {@link COSObject}s to the given {@link COSStream}.
     *
     * @param stream The stream for the compressed objects.
     * @return The given {@link COSStream} of this object stream.
     * @throws IOException Shall be thrown, if writing the object stream failed.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSArray,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSArray(java.io.OutputStream,org.apache.pdfbox.cos.COSArray)",318,334,"/**
 * Writes a COS array to the output stream.
 * @param output Output stream to write to.
 * @param cosArray COS array to write.
 */","* Write the given {@link COSArray} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosArray The content, that shall be written.",,,True,11
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyPolygonImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",279,393,"/**
 * Generates a shape based on vertices, using ellipse or circle.
 * @param vertices array of Point2D.Double representing vertices
 * @param isEllipse if true, uses ellipse; otherwise, uses circle
 */","* Cloudy polygon implementation.
     *
     * @param vertices polygon vertices; first and last point must be equal
     * @param isEllipse specifies if the polygon represents an ellipse",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,encode,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:encode(),343,500,"/**
* Creates a mask image based on image type and data.
* Returns PDImageXObject or null if unsupported image type.
*/","* Tries to compress the image using a predictor.
         *
         * @return the image or null if it is not possible to encoded the image (e.g. not supported
         * raster format etc.)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.PDPage),206,215,"/**
 * Initializes and calls m2 with a PDPageXYZDestination object.
 * @param page The PDPage to use for destination initialization.
 */
","* A convenience method that will create an XYZ destination using only the defaults.
     *
     * @param page The page to refer to.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryNameValuePair,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary),377,402,"/**
* Processes a COS dictionary entry, logging errors and adding it.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",498,553,"/**
 * Decrypts a COS stream if not already decrypted.
 * Handles metadata and xref streams, decrypts if needed.
 */","* This will decrypt a stream.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(),48,51,"/**
 * Initializes the PDActionEmbeddedGoTo with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(),44,47,"/**
 * Initializes the PDActionGoTo with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(),40,43,"/**
 * Initializes the action by setting its subtype to SUB_TYPE.
 */",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(),40,43,"/**
 * Initializes the PDActionImportData object.
 * Sets the subtype to the predefined SUB_TYPE constant.
 */
",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(),40,43,"/**
 * Default constructor. Sets the subtype to SUB_TYPE constant.
 */",* Constructor #1.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(),44,47,"/**
 * Sets the subtype of the PDActionLaunch to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(),36,39,"/**
 * Sets the subtype of the PDActionMovie to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(),34,37,"/**
 * Initializes the PDActionNamed object, setting its subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(),44,47,"/**
 * Initializes the PDActionRemoteGoTo with the predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(),38,41,"/**
 * Initializes the form by setting its subtype to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(),41,44,"/**
 * Initializes the PDActionSound with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(),43,46,"/**
 * Initializes the form by setting its subtype to SUB_TYPE.
 */",* Default Constructor,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(),44,47,"/**
 * Constructs a PDActionThread, setting its subtype to SUB_TYPE.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(),41,44,"/**
 * Constructs a PDActionURI with a predefined subtype.
 */",* Default constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(),36,39,"/**
 * Constructs a PDAnnotationCircle object, extending PDAnnotation.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(),37,40,"/**
 * Constructs a PDAnnotationSquare object, initializing with subtype.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(),40,43,"/**
 * Constructs a PDAnnotationHighlight object, initializing with subtype.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(),40,43,"/**
 * Constructs a PDAnnotationSquiggly object, setting the subtype.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(),40,43,"/**
 * Constructs a strikeout annotation.
 * Calls the superclass constructor with SUB_TYPE.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(),40,43,"/**
 * Constructs a new PDAnnotationUnderline object.
 */",* Constructor.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:toString(),1477,1684,"/**
 * Appends various style properties to a string builder.
 * Uses m3 to check for property existence before appending.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:generateBoundingBox(),215,237,"/**
 * Gets the font bounding box. Returns default if font is unavailable.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:generateBoundingBox(),206,222,"/**
* Returns a bounding box, or a default if unavailable.
* Uses m1().m2() if valid, otherwise returns ttf.m8().
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:generateBoundingBox(),339,350,"/**
 * Gets bounding box from PDRectangle or uses default.
 * @return BoundingBox object, or default if not available.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:generateBoundingBox(),264,275,"/**
 * Gets bounding box, uses m1() and m2() if available, else uses genericFont.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:generateBoundingBox(),547,558,"/**
 * Gets a bounding box, using m1() if available, else from genericFont.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType3Font:getHeight(int),206,240,"/**
* Calculates a font dimension, falling back on alternatives if needed.
* @param code unused parameter
* @return Font dimension as a float, or 0 if font descriptor is null.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getBBox(),101,105,"/**
 * Returns a PDRectangle obtained from the font's m1 method.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:generateBoundingBox(),324,373,"/**
* Calculates the font bounding box.
* Uses glyph bounding boxes if available, otherwise uses default.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getImage,"org.apache.pdfbox.rendering.TilingPaint:getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",127,179,"/**
* Draws a tiling pattern onto a BufferedImage.
* @param drawer Drawer object for rendering.
* @return BufferedImage with the drawn pattern.
*/",* Returns the pattern image in parent stream coordinates.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getAnchorRect,org.apache.pdfbox.rendering.TilingPaint:getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),201,246,"/**
 * Calculates a Rectangle2D from the tiling pattern's dimensions.
 * @param pattern The PDTilingPattern object.
 * @return Rectangle2D representing the tiling pattern's bounds.
 */","* Returns the anchor rectangle, which includes the XStep/YStep and scaling.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRectangle(),101,104,"/**
 * Delegates PDRectangle retrieval to the annotation's m1() method.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,resolveTransformationMatrix,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:resolveTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",733,744,"/**
 * Calculates a transformation matrix based on annotation and appearance.
 * @param annotation Annotation object.
 * @param appearanceStream Appearance stream object.
 * @return Transformation matrix.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,84,"/**
 * Processes a dash pattern operation with arguments.
 * @param operator The operator object.
 * @param arguments List of arguments for the operation.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getStencilImage(java.awt.Paint),562,570,"/**
* Creates a sampled image with the given paint.
* @param paint The paint to use for rendering.
* @return Sampled BufferedImage.
*/","* {@inheritDoc}
     * The returned images are not cached.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRawRaster(org.apache.pdfbox.pdmodel.graphics.image.PDImage),226,261,"/**
 * Creates a WritableRaster from a PDImage.
 * @param pdImage The image to create raster from.
 * @return WritableRaster object.
 */","* Extract the raw unconverted raster of the given image
     * @param pdImage  The image to get the raw raster data from
     * @return the raw raster of this image
     * @throws IOException",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",170,218,"/**
 * Extracts a masked image from a PDF image.
 * @param pdImage The PDF image to extract from.
 * @param region The region to extract.
 */","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param region The region of the source image to get, or null if the entire image is needed.
     *               The actual region will be clipped to the dimensions of the source image.
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value
     * of 1 meaning every pixel will be read. It must not be larger than the image width or height.
     * @param colorKey an optional color key mask
     * @return content of this image as an (A)RGB buffered image
     * @throws IOException if the image cannot be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBImage(java.awt.image.WritableRaster),177,188,"/**
* Applies mask based on attributes. Returns BufferedImage.
* Uses m1() if attributes are null, otherwise m2().
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getMatrix,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getMatrix(),154,158,"/**
 * Returns the matrix from the font object.
 * @return Matrix object from the font.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getResources,org.apache.pdfbox.pdmodel.PDPage:getResources(),326,340,"/**
 * Retrieves the page resources. Returns PDResources or null.
 */",* A dictionary containing any resources required by the page.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMediaBox,org.apache.pdfbox.pdmodel.PDPage:getMediaBox(),400,416,"/**
 * Returns the media box rectangle, using default if not found.
 * @return PDRectangle representing the media box.
 */","* A rectangle, expressed in default user space units, defining the boundaries of the physical medium on which the
     * page is intended to be displayed or printed.
     * 
     * @return the media box of the page",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getRotation,org.apache.pdfbox.pdmodel.PDPage:getRotation(),583,595,"/**
 * Extracts page rotation angle, normalizing to 0-360 degrees.
 * Returns 0 if rotation is not a multiple of 90.
 */","* Returns the rotation angle in degrees by which the page should be rotated
     * clockwise when displayed or printed. Valid values in a PDF must be a
     * multiple of 90.
     *
     * @return The rotation angle in degrees in normalized form (0, 90, 180 or
     * 270) or 0 if invalid or not set at this level.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(java.lang.String,boolean)",881,884,"/**
* Delegates to another m2 method with a COSName key.
* @param key The key to use.
* @param defaultValue Default value if key is not found.
*/","* This is a convenience method that will get the dictionary object that is expected to be a cos boolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The value converted to a boolean.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,isVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:isVolatile(),215,218,"/**
* Checks if a value exists for COSName.V, returning false if not.
*/","* Get if the file is volatile.  Default: false
     *
     * @return True if the file is volatile attribute is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isHidden(),127,130,"/**
* Delegates to m1().m2() with COSName.H and false.
*/","* Shall the property be hidden?
     * 
     * @return <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDEncryption:isEncryptMetaData(),417,421,"/**
* Checks if encryption metadata exists in the dictionary.
* Returns true if present, false otherwise.
*/","* Will get the EncryptMetaData dictionary info.
     * 
     * @return true if EncryptMetaData is explicitly set to false (the default is true)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaption(),296,299,"/**
* Checks a condition using annot.m1 with COSName.CAP and false.
*/","* This will retrieve if the contents are shown as a caption or not.
     *
     * @return boolean if the content is shown as a caption.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,shouldScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:shouldScaleToFitAnnotation(),184,187,"/**
* Calls fit.m1 with COSName.FB and false.
*/","* This will tell if the icon should scale to fit the annotation bounds. Default: false
     *
     * @return A flag telling if the icon should scale.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,shouldRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:shouldRename(),122,125,"/**
* Calls template.m1 with RENAME and false.
* @return True if m1 returns true, false otherwise.
*/
","* A flag telling if the fields imported from the template may be renamed if there are conflicts.
     *
     * @return A flag telling if the fields can be renamed.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isIsolated,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isIsolated(),94,97,"/**
* Delegates to m1().m2, passing COSName.I and false.
*/","* Returns true if this group is isolated. Isolated groups begin with the fully transparent image, non-isolated
     * begin with the current backdrop.
     * 
     * @return true if this group is isolated",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isKnockout,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isKnockout(),105,108,"/**
* Delegates to m1().m2() with COSName.K and false.
*/","* Returns true if this group is a knockout. A knockout group blends with original backdrop, a non-knockout group
     * blends with the current backdrop.
     * 
     * @return true if this group is a knockout",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getAntiAlias(),228,231,"/**
* Checks if anti-aliasing is disabled in the dictionary.
* @return True if disabled, false otherwise.
*/
","* This will return the AntiAlias value.
     *
     * @return the AntiAlias value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingOverprintControl(),362,365,"/**
* Checks if COSName.OP is false within the dictionary.
* Returns true if false, false otherwise.
*/
","* This will get the overprint control.
     *
     * @return The overprint control or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAutomaticStrokeAdjustment(),498,501,"/**
* Checks if a specific COS name has the SA flag set to false.
*/","* This will get the automatic stroke adjustment flag.
     *
     * @return The automatic stroke adjustment flag or null if one has not been set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAlphaSourceFlag(),560,563,"/**
* Checks if a COS name 'AIS' is false in the dictionary.
* @return True if 'AIS' is false, false otherwise.
*/
","* This will get the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @return The alpha source flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTextKnockoutFlag(),615,618,"/**
* Checks if a COSName.TK exists in the dictionary.
* @return True if COSName.TK exists, false otherwise.
*/
","/**
     * This will get the text knockout flag.
     *
     * @return The text knockout flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getH(),79,82,"/**
* Calls action.m1 with COSName.H and true.
* Returns the result of the call.
*/
","* A flag indicating whether to hide the annotation or show it
     *
     * @return true if annotation is hidden",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSynchronous(),123,126,"/**
* Calls action.m1 with SYNCHRONOUS and false.
* Returns the result of the call.
*/
","* Gets the synchronous flag. It specifyes whether to play the sound synchronously or
     * asynchronously. When true, the reader allows no further user interaction other than canceling
     * the sound until the sound has been completely played.
     *
     * @return Whether to play the sound synchronously (true) or asynchronously (false, also the
     * default).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getRepeat(),143,146,"/**
* Calls action.m1 with COSName.REPEAT and false.
*/","* Gets whether to repeat the sound indefinitely.
     *
     * @return Whether to repeat the sound indefinitely (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getMix(),168,171,"/**
* Calls action.m1 with COSName.MIX and false.
*/","* Gets the flag specifying whether to mix this sound with any other sound already playing. If
     * this flag is false, any previously playing sound shall be stopped before starting this sound;
     * this can be used to stop a repeating sound (see Repeat).
     *
     * @return whether to mix this sound with any other sound already playing (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,hasCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:hasCaption(),262,265,"/**
* Calls m1().m2 with COSName.CAP and false.
*/","* This will retrieve whether the text specified by the /Contents or /RC entries shall be
     * shown as a caption in the appearance of the line.
     *
     * @return boolean if the contents shall be shown as a caption (default: false).",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getOpen(),156,159,"/**
* Delegates to m2().m3() with specified arguments.
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getPreRelease(),190,193,"/**
* Checks if a PRE_RELEASE flag is false in the dictionary.
*/","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @return true if the software module or signature handler was a pre release.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getNonEFontNoWarn(),262,265,"/**
* Checks if COSName.NON_EFONT_NO_WARN is enabled in the dictionary.
*/","* If there is a LegalPDF dictionary in the catalog
     * of the PDF file and the NonEmbeddedFonts attribute in this dictionary
     * has a non zero value, and the viewing application has a preference
     * set to suppress the display of this warning then the value of this
     * attribute will be set to true.
     *
     * @return true if NonEFontNoWarn is set to true
     * @see #setNonEFontNoWarn(boolean)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getTrustedMode(),295,298,"/**
* Sets TRUSTED_MODE to false in the dictionary.
* Returns true if successful, false otherwise.
*/
","* If true, the application was in trusted mode when signing took place.
     *
     * @return true if the application was in trusted mode while signing.
     *              default: false",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getNeedAppearances(),521,524,"/**
* Checks if appearances are needed in the dictionary.
* Returns true if not needed, false otherwise.
*/
","* True if the viewing application should construct the appearances of all field widgets.
     * The default value is false.
     * 
     * @return the value of NeedAppearances, false if the value isn't set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,isFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:isFlyAreaOpaque(),182,185,"/**
 * Delegates to m1().m2, passing COSName.B and false.
 */","* @return true if the area that shall be flown in is rectangular and opaque. Default is false. Only for
     * {@link PDTransitionStyle#Fly}.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideToolbar(),167,170,"/**
* Checks if the toolbar is hidden based on preferences.
* @return True if toolbar is hidden, false otherwise.
*/
","* Get the toolbar preference.
     *
     * @return the toolbar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideMenubar(),187,190,"/**
* Checks if the menubar should be hidden based on preferences.
* @return True if menubar is hidden, false otherwise.
*/
","* Get the menubar preference.
     *
     * @return the menubar preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideWindowUI(),207,210,"/**
* Checks if the window UI is hidden based on preferences.
* @return True if hidden, false otherwise.
*/
","* Get the window UI preference.
     *
     * @return the window UI preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,fitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:fitWindow(),227,230,"/**
* Checks if the FIT_WINDOW preference is disabled.
* Returns true if disabled, false otherwise.
*/
","* Get the fit window preference.
     *
     * @return the fit window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,centerWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:centerWindow(),247,250,"/**
* Checks if the center window preference is disabled.
* @return True if disabled, false otherwise.
*/
","* Get the center window preference.
     *
     * @return the center window preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,displayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:displayDocTitle(),267,270,"/**
* Checks if displaying document title is disabled in preferences.
* @return True if disabled, false otherwise.
*/
","* Get the display doc title preference.
     *
     * @return the display doc title preference.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getBitsPerComponent(),111,122,"/**
* Returns 1 if m1() is true, otherwise calls parameters.m2().
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getColorSpace(),130,148,"/**
 * Determines the color space for the inline image.
 * @return PDColorSpace object or throws IOException if not found.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getStencilImage(java.awt.Paint),371,379,"/**
 * Creates a sampled image with the given paint.
 * @param paint The paint to use for rendering.
 * @return A BufferedImage representing the rendered image.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFlag,"org.apache.pdfbox.cos.COSDictionary:setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",497,509,"/**
 * Updates a field's flags based on a bit flag and value.
 * @param field COSName of the field. @param bitFlag Bit to set/clear.
 * @param value Boolean indicating whether to set or clear the bit.
 */
","* Sets the given boolean value at bitPos in the flags.
     *
     * @param field The COSName of the field to set the value into.
     * @param bitFlag the bit position to set the value in.
     * @param value the value the bit position should have.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",943,947,"/**
 * Gets value from embedded dictionary, or defaultValue if null.
 * @param embeddedDictionary The dictionary to search.
 * @param key The key to search for.
 * @param defaultValue Value if key is not found.
 */
","* Get an integer from an embedded dictionary. Useful for 1-1 mappings.
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     * @param defaultValue The value if there is no embedded dictionary or it does not contain the key.
     *
     * @return The value of the embedded integer.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String),956,959,"/**
* Calls m2 with a COSName derived from the key and default value.
* @param key The key to create a COSName from.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName),968,971,"/**
* Calls m1 with a default value for the second parameter.
* @param key The key to use in the internal m1 call.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value..",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String,int)",981,984,"/**
* Delegates to m2(COSName, int), using key to create COSName.
* @param key The key to use.
* @param defaultValue The default value if not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFlag,"org.apache.pdfbox.cos.COSDictionary:getFlag(org.apache.pdfbox.cos.COSName,int)",1153,1157,"/**
 * Checks if a specific bit flag is set in a COS field.
 * @param field COSName object
 * @param bitFlag int representing the bit to check
 * @return True if the bit is set, false otherwise.
 */
","* Gets the boolean value from the flags at the given bit position.
     *
     * @param field The COSName of the field to get the flag from.
     * @param bitFlag the bitPosition to get the value from.
     *
     * @return true if the number at bitPos is '1'",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,decode,"org.apache.pdfbox.filter.CCITTFaxFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",37,124,"/**
 * Decodes a CCITT-encoded image stream.
 * @param encoded Input stream, parameters, index.
 * @param decoded Output stream.
 * @return DecodeResult object.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,"org.apache.pdfbox.pdmodel.PDPageTree:get(int,org.apache.pdfbox.cos.COSDictionary,int)",295,366,"/**
* Recursively searches for a page within a COSDictionary structure.
* @param pageNum 1-based page number to find.
*/","* Returns the given COS page using a depth-first search.
     *
     * @param pageNum 1-based page number
     * @param node page tree node to search
     * @param encountered number of pages encountered so far
     * @return COS dictionary of the Page object
     * @throws IllegalStateException if the requested page number isn't found
     * @throws IndexOutOfBoundsException if the requested page number is higher than the page count",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getCount,org.apache.pdfbox.pdmodel.PDPageTree:getCount(),439,442,"/**
* Returns the count value from root.m1, using COSName.COUNT.
*/","* Returns the number of leaf nodes (page objects) that are descendants of this root within the page tree.
     * 
     * @return the number of leaf nodes, 0 if not present",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStart(),133,136,"/**
* Calls root.m1 with KEY_START and 1, returning the result.
*/","* Returns the start value for page numbering in this page range.
     * 
     * @return a positive integer the start value for numbering.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getOrder,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getOrder(),123,126,"/**
* Calls m1().m2 with COSName.ORDER and 1.
*/","* Get the order of interpolation between samples. Valid values are 1 and 3,
     * specifying linear and cubic spline interpolation, respectively. Default
     * is 1. See p.170 in PDF spec 1.7.
     *
     * @return order of interpolation.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRevisionNumber(),470,473,"/**
* Calls m1(), then m2 with COSName.R and 0.
*/","* Returns the revision number (R).
     * 
     * @return the revision number",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getLength(),84,87,"/**
* Filters dictionary using COSName.LENGTH and a length of 40.
*/","* This will return the Length entry of the crypt filter dictionary.<br><br>
     * The length in <b>bits</b> for the crypt filter algorithm. This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getVersion(),203,206,"/**
* Retrieves a value from the dictionary using COSName.V.
* @return Integer value retrieved from the dictionary.
*/","* This will return the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.
     *
     * @return The encryption version to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getLength(),224,227,"/**
* Retrieves a value from the dictionary using COSName.LENGTH.
*/","* This will return the Length entry of the encryption dictionary.<br><br>
     * The length in <b>bits</b> for the encryption algorithm.  This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRevision(),249,252,"/**
* Retrieves a version from the dictionary using COSName.R.
* @return Integer version value.
*/
","* This will return the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.
     *
     * @return The encryption revision to use.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPermissions(),407,410,"/**
* Retrieves a value from the dictionary using COSName.P.
* @return Integer value retrieved from the dictionary.
*/
","* This will get the permissions bit mask.
     *
     * @return The permissions bit mask.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getJustification(),187,190,"/**
* Retrieves a string value from annot.m1 using COSName.Q and 0.
*/","* This will get the form of quadding (justification) of the annotation text.
     * 
     * @return The quadding of the text.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDFont:getWidth(int),255,311,"/**
* Gets the width of a character based on various fallback mechanisms.
* @param code The character code.
* @return The width of the character, or a default value.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFlags(),386,393,"/**
 * Returns the value of the 'flags' variable, initializing if needed.
 */","* This will get the font flags.
     *
     * @return The font flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDSimpleFont:hasExplicitWidth(int),452,464,"/**
 * Checks if a code falls within a defined character range.
 * @param code The code to check.
 * @return True if within range, false otherwise.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,create,"org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:create(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",48,64,"/**
 * Creates a PDAbstractPattern based on the pattern type in dictionary.
 * @param dictionary COSDictionary containing pattern definition
 * @param resourceCache Resource cache for pattern resources
 * @return PDAbstractPattern instance
 */","* Create the correct PD Model pattern based on the COS base pattern.
     * @param dictionary the COS pattern dictionary
     * @param resourceCache the resource cache, may be null, useful for tiling patterns.
     * @return the newly created pattern object
     * @throws IOException If we are unable to create the PDPattern object.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getPaintType(),110,113,"/**
* Calls m1().m2 with PAINT_TYPE and 0 as arguments.
*/","* This will return the paint type.
     * @return The paint type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getTilingType(),128,131,"/**
* Calls m1().m2 with COSName.TILING_TYPE and 0 as arguments.
*/","* This will return the tiling type.
     * @return The tiling type",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,create,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:create(org.apache.pdfbox.cos.COSDictionary),274,305,"/**
 * Creates a PDShading object based on the shading type in dict.
 * @param shadingDictionary COSDictionary containing shading info
 * @return PDShading object or throws IOException on error
 */
","* Create the correct PD Model shading based on the COS base shading.
     *
     * @param shadingDictionary the COS shading dictionary
     * @return the newly created shading resources object
     * @throws IOException if we are unable to create the PDShading object",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerFlag(),69,72,"/**
* Calls m1(), then m2() with COSName.BITS_PER_FLAG and -1.
*/","* The bits per flag of this shading. This will return -1 if one has not
     * been set.
     *
     * @return The number of bits per flag.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getVerticesPerRow(),65,68,"/**
* Calls m1().m2 with COSName.VERTICES_PER_ROW and -1.
*/","* The vertices per row of this shading. This will return -1 if one has not
     * been set.
     *
     * @return the number of vertices per row",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerComponent(),60,68,"/**
 * Returns the bits per color component, caching the value.
 */","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerCoordinate(),87,95,"/**
 * Returns the bits per coordinate value, fetching if necessary.
 */","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFlags(),77,80,"/**
* Calls m1 on 'action' with COSName.FLAGS and initial value 0.
*/","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFlags(),103,106,"/**
* Calls action.m1 with COSName.FLAGS and a default value of 0.
*/","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getPageNumber(),149,152,"/**
* Calls dict.m1 with COSName.P and -1.
* @return Result of the call to dict.m1.
*/
","* If the value in the /P entry is an integer, this will get the page number (zero-based) in the
     * current document containing the file attachment annotation.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationIndex(),212,215,"/**
* Calls dict.m1 with COSName.A and an initial value of -1.
*/","* If the value in the /A entry is an integer, this will get the index (zero-based) of the
     * annotation in the /Annots array of the page specified by the /P entry.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationFlags(),292,295,"/**
* Calls m1().m2 with COSName.F and 0.
*/","* This will get the flags for this field.
     * 
     * @return flags The set of flags.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getQ(),125,128,"/**
* Calls m1(), then m2 with COSName.Q and 0.
*/","* This will get the 'quadding' or justification of the text to be displayed.
     * <br>
     * 0 - Left (default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * Please see the QUADDING_CONSTANTS in {@link PDVariableText }.
     *
     * @return The justification of the text strings.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRotation(),66,69,"/**
* Calls m1(), then m2 with COSName.R and 0.
*/","* This will retrieve the rotation of the annotation widget. It must be a multiple of 90. Default is 0
     * 
     * @return the rotation",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,isTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:isTimestampRequired(),86,89,"/**
* Checks if a COSName.FT entry in the dictionary is non-zero.
*/","* Indicates if a timestamp is required.
     * 
     * @return true if a timestamp is required",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOpenCount(),224,227,"/**
* Calls m1().m2 with COSName.COUNT as the first argument.
*/","* Get the number of open nodes or a negative number if this node is closed.
     * See PDF Reference 32000-1:2008 table 152 and 153 for more details. This
     * value is updated as you append children and siblings.
     *
     * @return The Count attribute of the outline dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getTextAlign,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getTextAlign(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),648,652,"/**
* Masks a PDAnnotationWidget using COSName.Q and field value.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getQ(),611,614,"/**
* Retrieves a value from the dictionary using COSName.Q.
* @return The integer value retrieved from the dictionary.
*/
","* This will get the document-wide default value for the quadding/justification of variable text
     * fields. 
     * <p>
     * 0 - Left(default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * See the QUADDING constants of {@link PDVariableText}.
     *
     * @return The justification of the variable text fields.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createChoiceSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",97,109,"/**
 * Determines field type (PDComboBox or PDListBox) based on flags.
 * @param form PDAcroForm instance
 * @param field COSDictionary representing the field
 * @param parent PDNonTerminalField parent
 * @return PDField subtype
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createButtonSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",111,130,"/**
 * Creates a PDField based on field flags (radio, push, checkbox).
 * @param form  AcroForm instance.
 * @param field COSDictionary representing the field.
 * @param parent NonTerminalField parent.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,getTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:getTopIndex(),59,62,"/**
* Calls m1().m2 with COSName.TI and 0.
*/","* This will get the top index ""TI"" value.
     *
     * @return the top index, default value 0.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldFlags(),68,73,"/**
* Calls m1().m2() with COSName.FF and 0.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,process,"org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,62,"/**
* Processes an operator with operands, creating and adding an image.
* @param operator The operator to process.
* @param operands List of operands for the operator.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName),239,242,"/**
* Retrieves COS objects of a specific type.
* @param type COSName representing the object type
* @return List of COSObjects matching the type
*/","* This will get all dictionaries objects by type.
     *
     * @param type The type of the object.
     *
     * @return This will return all objects with the specified type.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPages,org.apache.pdfbox.pdmodel.PDDocument:getPages(),1246,1249,"/**
* Delegates to m1().m2() and returns the result.
*/","* Returns the page tree.
     * 
     * @return the page tree",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int),270,274,"/**
* Calls m2 with default GlyphList.
* @param code Input code value to process.
* @return String result of the processing.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.File),74,89,"/**
 * Parses a FDF file and returns an FDFDocument.
 * @param file Input FDF file
 * @return FDFDocument object
 */","* This will load a document from a file.
     *
     * @param file The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to
     * read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.InputStream),102,109,"/**
 * Parses an FDF document from an input stream.
 * @param input Input stream containing the FDF data.
 * @return Parsed FDFDocument object.
 */
","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document. To read the stream
     * {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(),134,137,"/**
 * Creates a PDF document.
 * @return PDF document or null if creation fails.
 */","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing. Lenient mode is active by default.
     *
     * @return the populated PDDocument
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removePageResourceFromCache,org.apache.pdfbox.pdmodel.PDPage:removePageResourceFromCache(),124,132,"/**
* Retrieves resources from the page and processes them.
* Returns early if resourceCache is null.
*/","* Remove all page resources from the cache to avoid relying on the implementation of the Cache. Does make sense
     * after processing a page.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName),191,194,"/**
 * Gets a color space by name.
 * @param name COSName of the color space
 * @return PDColorSpace object
 */
","* Returns the color space resource with the given name, or null if none exists.
     * 
     * @param name Name of the color space resource.
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isAllowedCache,org.apache.pdfbox.pdmodel.PDResources:isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject),453,480,"/**
 * Checks if an object's color space matches default settings.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.font.PDFont),596,599,"/**
* Creates a COSName for a font.
* @param font The PDFont object to create a name for.
* @return A COSName representing the font.
*/
","* Adds the given font to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param font the font to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),608,611,"/**
* Delegates to overloaded method with explicit COSName.COLORSPACE.
* @param colorSpace The color space to use.
* @return A COSName object.
*/","* Adds the given color space to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param colorSpace the color space to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),620,623,"/**
* Delegates to overloaded method with COSName and prefix.
* @param extGState Extended graphics state object
* @return COSName object
*/
","* Adds the given extended graphics state to the resources of the current page and returns the
     * name for the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param extGState the extended graphics state to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),632,635,"/**
* Delegates to overloaded method with default COSName and key.
* @param shading The shading object.
* @return A COSName object.
*/","* Adds the given shading to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param shading the shading to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern),644,647,"/**
* Calls m1 with default COSName and key.
* @param pattern The pattern object to process.
* @return A COSName object.
*/
","* Adds the given pattern to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param pattern the pattern to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),656,666,"/**
 * Determines the COSName based on the properties type.
 * @param properties The properties list to check.
 * @return COSName representing the property type.
 */
","* Adds the given property list to the resources of the current page and returns the name for
     * the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param properties the property list to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),675,678,"/**
* Creates a COSName for an image.
* @param image The image object.
* @return A COSName representing the image.
*/
","* Adds the given image to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param image the image to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),687,690,"/**
* Creates a COSName for a form XObject.
* @param form The form XObject to create a name for.
* @return COSName representing the form.
*/
","* Adds the given form to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param form the form to add
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",700,703,"/**
 * Delegates to overloaded method with COSName.XOBJECT as the name.
 * @param xobject The XObject to be processed.
 * @param prefix The prefix to use.
 */
","* Adds the given XObject to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param xobject the XObject to add
     * @param prefix the prefix to be used when creating the resource name
     * @return the name of the resource in the resources dictionary",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,insertInnerFormToHolderResources,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",281,288,"/**
* Inserts an inner form into a holder form and updates structure.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createBackgroundLayerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",328,339,"/**
 * Creates a background layer form and adds it to the resources.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFile(),225,233,"/**
 * Creates a PDEmbeddedFile from a COSStream named ""F"".
 * @return PDEmbeddedFile or null if no stream is found.
 */
","* Get the embedded file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileDos(),261,269,"/**
* Creates a PDEmbeddedFile from a DOS stream, or null if none.
*/","* Get the embedded dos file.
     *
     * @return The embedded dos file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileMac(),276,284,"/**
 * Creates a PDEmbeddedFile from a COS stream named ""MAC"".
 * @return PDEmbeddedFile or null if no stream found.
 */
","* Get the embedded Mac file.
     *
     * @return The embedded Mac file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnix(),291,299,"/**
 * Creates a PDEmbeddedFile from a UNIX COS stream, or null.
 */","* Get the embedded Unix file.
     *
     * @return The embedded file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnicode(),306,314,"/**
 * Creates a PDEmbeddedFile from a COSStream found under UF.
 * @return PDEmbeddedFile or null if no stream is found.
 */","* Get the embedded unicode file.
     *
     * @return The embedded unicode file for this file spec.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",562,571,"/**
 * Initializes encryption dictionary with filter and standard CF.
 * @param encryptionDictionary Encryption dictionary to initialize.
 * @param aesVName AES name.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",414,431,"/**
 * Sets up encryption filter dictionary with recipients.
 * @param encryptionDictionary Encryption dictionary to update.
 * @param aesVName AES name.
 * @param recipients Recipient byte arrays.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidthFromFont(int),184,193,"/**
 * Calculates a value based on the input code.
 * @param code Input code; used to derive the value.
 * @return Calculated float value.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),304,346,"/**
 * Checks if a content group is enabled/disabled based on COS data.
 * @param group The optional content group to check.
 * @return True if enabled, false if disabled, otherwise defaults.
 */","* Indicates whether an optional content group is enabled.
     * @param group the group object
     * @return true if the group is enabled",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(java.lang.String,boolean)",374,392,"/**
* Checks if optional content group matches & enables recursively.
* @param groupName Group name to match.
* @param enable Enable flag.
* @return True if group is found and enabled.
*/","* Enables or disables all optional content groups with the given name.
     *
     * @param groupName the group name
     * @param enable true to enable, false to disable
     * @return true if at least one group with this name already had an on or off setting, false
     * otherwise",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearance(),477,489,"/**
 * Retrieves the normal appearance entry, creating it if necessary.
 * @return The PDAppearanceEntry representing the normal appearance.
 */
","* Get the annotations normal appearance.
     * 
     * <p>
     * This will get the annotations normal appearance. If this is not existent
     * an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the normal appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRolloverAppearance(),195,207,"/**
 * Retrieves or creates the rollover appearance entry.
 * Creates if missing, otherwise returns existing entry.
 */","* Get the annotations rollover appearance.
     * 
     * <p>
     * This will get the annotations rollover appearance. If this is not
     * existent an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the rollover appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDownAppearance(),172,184,"/**
 * Retrieves or creates the down appearance entry.
 * Creates if missing, using m4().
 */","* Get the annotations down appearance.
     * 
     * <p>
     * This will get the annotations down appearance. If this is not existent an
     * empty appearance entry will be created.
     * 
     * @return the appearance entry representing the down appearance.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(int),178,190,"/**
 * Accesses a field at the given index, validating the index.
 * @param index The index of the field to access.
 * @throws IllegalArgumentException if index is out of bounds.
 */","* Set the selected option given its index, and try to update the visual appearance.
     * 
     * NOTE: this method is only usable if there are export values and used for 
     * radio buttons with FLAG_RADIOS_IN_UNISON not set.
     * 
     * @param index index of option to be selected
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the index provided is not a valid index.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,prepend,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),141,155,"/**
 * Adds a child to the outline, adjusting its position as needed.
 */","* Prepends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,append,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),119,133,"/**
 * Adds a child to the outline, placing it appropriately.
 * @param newChild The PDOutlineItem to add as a child.
 */
","* Appends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareVisibleSignature,"org.apache.pdfbox.pdmodel.PDDocument:prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",557,598,"/**
 * Processes visual signature objects, finds annotations and signature fields.
 * Throws exception if required objects are missing.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,findSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",483,500,"/**
 * Finds a PDSignatureField with a matching signature.
 * @param fieldIterator Iterator of PDFields
 * @param sigObject Signature object to match
 * @return Matching PDSignatureField or null.
 */","* Search acroform fields for signature field with specific signature dictionary.
     * 
     * @param fieldIterator iterator on all fields.
     * @param sigObject signature object (the /V part).
     * @return a signature field if found, or null if none was found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getAppearance,org.apache.pdfbox.contentstream.PDFStreamEngine:getAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),466,469,"/**
 * Retrieves the appearance stream for a PDF annotation.
 * @param annotation The PDF annotation object.
 * @return The appearance stream, or null if not available.
 */
","* Returns the appearance stream to process for the given annotation. May be used to render
     * a specific appearance such as ""hover"".
     *
     * @param annotation The current annotation.
     * @return The stream to process.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,addFontFromWidget,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:addFontFromWidget(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation)",153,190,"/**
 * Adds missing font resources from widget to AcroForm if needed.
 */","* Add font resources from the widget to the AcroForm to make sure embedded fonts are being used
     * and not added by ensureFontResources potentially using a fallback font.
     * 
     * @param acroFormResources AcroForm default resources, should not be null.
     * @param annotation annotation, should not be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValues(),316,333,"/**
 * Gathers annotation values, either from m1() or widgets.
 * @return Set of strings representing annotation values.
 */","* Get the values to set individual buttons within a group to the on state.
     * 
     * <p>The On value could be an arbitrary string as long as it is within the limitations of
     * a PDF name object. The Off value shall always be 'Off'. If not set or not part of the normal
     * appearance keys 'Off' is the default</p>
     *
     * @return the potential values setting the check box to the On state. 
     *         If an empty Set is returned there is no appearance definition.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValue(int),338,346,"/**
 * Retrieves a widget's content by index.
 * @param index Index of the widget to retrieve.
 * @return Widget content or empty string if index is out of bounds.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,isChecked,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:isChecked(),64,67,"/**
* Checks if a condition based on m1(), m2(), and m3() is met.
*/","* This will tell if this radio button is currently checked or not.
     * This is equivalent to calling {@link #getValue()}.
     *
     * @return true If this field is checked.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,check,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:check(),74,77,"/**
* Calls m2 with the result of m1; throws IOException if needed.
*/","* Checks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,indexOf,org.apache.pdfbox.pdmodel.PDPageTree:indexOf(org.apache.pdfbox.pdmodel.PDPage),386,394,"/**
 * Finds an index within a page using a search context.
 * @param page The page to search within.
 * @return Index if found, -1 otherwise.
 */
","* Returns the index of the given page, or -1 if it does not exist.
     *
     * @param page The page to search for.
     * @return the zero-based index of the given page, or -1 if the page is not found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneIDTree,"org.apache.pdfbox.multipdf.Splitter:cloneIDTree(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",252,278,"/**
* Copies structure elements from src to dest tree based on IDs.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setParent,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),93,97,"/**
* Sets the parent node and calls m1().
* @param parentNode The parent node to set.
*/
","* Sets the parent to the given node.
     * 
     * @param parentNode the node to be set as parent",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setKids(java.util.List),138,158,"/**
 * Processes a list of child nodes, updates node data, and cleans up.
 */","* Set the children of this named tree.
     *
     * @param kids The children of this named tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNames(Map)} with a map and pass a single
     * element list here.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setNames(java.util.Map),307,327,"/**
* Processes a map of names, setting COS values or clearing them.
* @param names Map of names to COSObjectable values.
*/","* Set the names for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param names map of names to objects, or <code>null</code> for nothing.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,98,"/**
 * Creates a PDPageLabels object from a document and dictionary.
 * @param document The document to associate with the labels.
 * @param dict COSDictionary containing page label information.
 */
","* Creates an page label dictionary for a document using the information in
     * the given COS dictionary.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @param dict
     *            an existing page label dictionary
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)
     * @throws IOException
     *             If something goes wrong during the number tree conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeForParameter(int),191,200,"/**
 * Creates a PDRange if encodeValues array is large enough.
 * @param paramNum parameter number for range calculation
 * @return PDRange object or null if array is too small
 */
","* Get the encode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncoding(),95,113,"/**
* Initializes encoding and glyph list from dictionary.
* Reads encoding from dictionary, handles COSName/COSDictionary.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(),44,47,"/**
 * Constructs a PDCalGray object, initializing with COSName.CALGRAY.
 */",* Create a new CalGray color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(),39,42,"/**
 * Constructs a PDCalRGB object, initializing it with COSName.CALRGB.
 */",* Creates a new CalRGB color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(),41,44,"/**
 * Constructs a PDLab object, extending from COSName.LAB.
 */",* Creates a new Lab color space.,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDCalGray object from a COSArray.
 */","* Creates a new CalGray color space using the given COS array.
     *
     * @param array the COS array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(org.apache.pdfbox.cos.COSArray),48,51,"/**
 * Constructs a PDCalRGB object from a COSArray.
 * @param rgb The COSArray containing RGB values.
 */
","* Creates a new CalRGB color space using the given COS array.
     * @param rgb the cos array which represents this color space",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDLab object from a COSArray.
 * @param lab The COSArray representing the lab data.
 */
","* Creates a new Lab color space from a PDF array.
     * @param lab the color space array",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",69,129,"/**
 * Initializes an AxialShadingContext with shading data and transforms.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",71,135,"/**
 * Creates a RadialShadingContext with specified parameters.
 * @param shading Shading object, colorModel, xform, matrix, bounds
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,58,"/**
 * Creates a TriangleBasedShadingContext with given parameters.
 * @param shading The shading to use.
 * @param cm The color model.
 * @param xform The affine transform.
 * @param matrix The matrix.
 */
","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if there is an error getting the color space or doing background color conversion.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",50,82,"/**
 * Initializes Type1ShadingContext with provided parameters.
 * @param shading Type1 shading object
 * @param colorModel ColorModel
 * @param xform AffineTransform
 * @param matrix Matrix
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getDecodeForParameter(int),157,166,"/**
 * Creates a PDRange object if decode values are sufficient.
 * @param paramNum Parameter number to validate against decode values.
 * @return PDRange object or null if not enough decode values.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getDecodeForParameter(int),157,166,"/**
 * Creates a PDRange object if decode values are sufficient.
 * @param paramNum Parameter number to validate against decode values.
 * @return A PDRange object or null if validation fails.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getColor(),96,99,"/**
 * Retrieves the PDColor object from the annotation.
 * @return PDColor object obtained from the annotation.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String,java.lang.String)",156,159,"/**
* Delegates to m1().m2 to retrieve a value, using defaults.
* @param name The key to look up.
* @param defaultValue Value if key is not found.
*/
","* Gets a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the name value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getStyle(),111,114,"/**
* Composes a string by chaining m1() and m2() calls.
*/","* This will retrieve the border effect, see the STYLE_* constants for valid values.
     *
     * @return the effect of the border or {@link #STYLE_SOLID} if none is found.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:generateNormalAppearance(),48,90,"/**
* Processes a file attachment annotation based on its name.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setBorderLine,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",206,229,"/**
* Sets border style based on provided parameters.
* @param lineWidth Line width for the border.
* @param bs Border style dictionary.
* @param border Border array.
*/","* Convenience method for annotations: sets the line with and dash style.
     *
     * @param lineWidth The line width.
     * @param bs The border style, may be null.
     * @param border The border array, must have at least three entries. This is
     * only used if the border style is null.
     *
     * @throws IOException If there is an error writing to the content stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,getAnnotationBorder,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary)",38,87,"/**
* Creates AnnotationBorder based on border style.
* @param annotation Annotation object.
* @param borderStyle Border style dictionary.
* @return AnnotationBorder object.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocument,org.apache.pdfbox.multipdf.Splitter:createNewDocument(),743,783,"/**
 * Creates a PDDocument, copies metadata and catalog information.
 * @return A new PDDocument object.
 * @throws IOException if an I/O error occurs.
 */","* Create a new document to write the split contents to.
     *
     * @return the newly created PDDocument. 
     * @throws IOException If there is an problem creating the new document.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setVersion,org.apache.pdfbox.pdmodel.PDDocument:setVersion(float),1449,1473,"/**
* Updates PDF version.
* @param newVersion The new PDF version to set.
*/","* Sets the PDF specification version for this document.
     *
     * @param newVersion the new PDF version (e.g. 1.4f)
     *",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:toString(),109,125,"/**
 * Builds a string representation with inherited and attributes.
 * Returns the formatted string.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:toString(),127,131,"/**
* Extends parent's m1() by appending user properties.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureTreeRoot(),739,751,"/**
* Finds the root PDStructureTreeRoot by traversing parent nodes.
* Returns the root or null if not found.
*/
","* Returns the structure tree root.
     * 
     * @return the structure tree root",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getKids(),109,133,"/**
* Extracts objects from a COS structure.
* Processes COSArray or COSBase and adds to the list.
* @return List of extracted objects.
*/
","* Returns a list of objects for the kids (K).
     * 
     * @return a list of objects for the kids, never null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getEncryption,org.apache.pdfbox.pdmodel.PDDocument:getEncryption(),825,832,"/**
 * Returns the PDEncryption object, creating it if needed.
 */","* This will get the encryption dictionary for this document. This will still return the parameters if the document
     * was decrypted. As the encryption architecture in PDF documents is pluggable this returns an abstract class,
     * but the only supported subclass at this time is a
     * PDStandardEncryption object.
     *
     * @return The encryption dictionary(most likely a PDStandardEncryption object)",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,prepareDecryption,org.apache.pdfbox.pdfparser.COSParser:prepareDecryption(),1197,1245,"/**
* Initializes decryption handler, using keyStore or password.
* Throws IOException on failure. Closes keyStoreInputStream.
*/","* Prepare for decryption.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException if something went wrong",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readEncodingFromFont(),263,315,"/**
 * Determines the appropriate encoding based on various conditions.
 * Returns an Encoding object.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,encode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:encode(int),393,443,"/**
 * Returns byte array representing glyph code for given unicode.
 * @param unicode Unicode character to find glyph for.
 * @return Byte array containing glyph code.
 * @throws IOException if encoding is unavailable.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(int),473,500,"/**
* Creates a GeneralPath based on the given code.
* Returns a new path or uses existing if available.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType0Font:readEncoding(),321,355,"/**
 * Initializes the CMap and determines if it's a descendant CJK font.
 */","* Reads the font's Encoding entry, which should be a CMap name/stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDType0Font:toUnicode(int),535,611,"/**
 * Converts a code to its Unicode representation, handling various cases.
 * @param code Integer code to convert
 * @return Unicode string or null if not found
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,encode,org.apache.pdfbox.pdmodel.font.PDType1CFont:encode(int),389,412,"/**
* Retrieves byte representation of a Unicode character.
* @param unicode Unicode character to retrieve.
* @throws IOException if encoding or font is unavailable.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getStringWidth(java.lang.String),414,436,"/**
* Calculates the width of a string based on CFF font metrics.
* @param string The string to measure.
* @return The total width in font units.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength1,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength1(byte[],int)",292,318,"/**
* Calculates offset based on input bytes and length1.
* Adjusts offset if invalid, returns length1 if valid.
*/","* Some Type 1 fonts have an invalid Length1, which causes the binary segment of the font
     * to be truncated, see PDFBOX-2350, PDFBOX-3677.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @return repaired Length1 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength2,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength2(byte[],int,int)",355,364,"/**
 * Returns length2 if valid, otherwise returns maximum possible length.
 */","* Some Type 1 fonts have an invalid Length2, see PDFBOX-3475. A negative /Length2 brings an
     * IllegalArgumentException in Arrays.copyOfRange(), a huge value eats up memory because of
     * padding.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @param length2 Length2 from the Type 1 stream
     * @return repaired Length2 value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType1Font:encode(int),393,448,"/**
* Retrieves byte representation for a given unicode character.
* @param unicode The unicode character to convert.
* @return Byte array representing the unicode character.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,initColorConversionCache,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:initColorConversionCache(org.apache.pdfbox.pdmodel.PDResources),111,175,"/**
 * Processes colorant information based on attributes and resources.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getFormattedValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getFormattedValue(java.lang.String),274,295,"/**
* Applies formatting action to a value, using ScriptingHandler.
* Returns original value if no action or handler is available.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getFractionalDisplay(),149,152,"/**
* Masks a value using m1() and m2().
* Uses FRACTIONAL_DISPLAY_DECIMAL for formatting.
*/","* This will return the value for the manner to display a fractional value.
     *  
     * @return the manner to display a fractional value",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getThousandsSeparator(),221,224,"/**
* Concatenates results from m1() and m2() with a comma separator.
*/","* This will return the text to be used between orders of thousands in display of numerical values.
     * 
     * @return thousands separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDecimalSeparator(),241,244,"/**
* Concatenates strings using m1() and m2().
* Returns the resulting string.
*/
","* This will return the text to be used as the decimal point in displaying numerical values.
     * 
     * @return decimal separator",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPrefixString(),260,263,"/**
* Concatenates ""PS"" with a space using m1() and m2().
*/","* This will return the text to be concatenated to the left of the label specified by U.
     * @return label prefix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelSuffixString(),279,282,"/**
* Concatenates the result of m2 with a space as separator.
*/","* This will return the text to be concatenated after the label specified by U.
     * 
     * @return label suffix",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPositionToValue(),299,302,"/**
* Combines results of m1() and m2() using LABEL_SUFFIX_TO_VALUE.
*/","* This will return a value indicating the ordering of the label specified by U to the calculated unit value.
     * 
     * @return label position",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",766,769,"/**
* Calls overloaded method with null value for third parameter.
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractFontDetails,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractFontDetails(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),432,489,"/**
 * Parses default appearance string to extract font and size.
 * Uses default 'Helv 10' if parsing fails.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontMatches,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",553,644,"/**
* Finds font matches based on descriptors and CID info.
* @param fontDescriptor Font descriptor object.
* @param cidSystemInfo CID system info, can be null.
* @return PriorityQueue of FontMatch objects.
*/","* Returns a list of matching fonts, scored by suitability. Positive scores indicate matches
     * for certain attributes, while negative scores indicate mismatches. Zero scores are neutral.
     * 
     * @param fontDescriptor FontDescriptor, always present.
     * @param cidSystemInfo Font's CIDSystemInfo, may be null.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,toString,org.apache.pdfbox.pdmodel.interactive.form.PDField:toString(),472,477,"/**
* Constructs a formatted string with type and value.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",852,855,"/**
* Calls overloaded method with null value for the third parameter.
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream)",49,53,"/**
* Delegates to overloaded method with default DecodeOptions.
* @param filters Filters to apply.
* @param parameters Dictionary of parameters.
* @param in Input stream.
* @return COSInputStream object.
*/
","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),169,173,"/**
 * Creates a COSInputStream with given options and input stream.
 * @param options DecodeOptions object for stream decoding.
 * @return COSInputStream object.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFObjectStreamParser:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",49,73,"/**
 * Parses a PDF object stream.
 * @param stream COSStream to parse.
 * @param document COSDocument the stream belongs to.
 */","* Constructor.
     *
     * @param stream The stream to parse.
     * @param document The document for the current parsing.
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:<init>(org.apache.pdfbox.cos.COSStream),52,64,"/**
 * Initializes the parser with a COSStream.
 * @param stream The COSStream to parse.
 * @throws IOException if an I/O error occurs during initialization.
 */
","* Constructor.
     *
     * @param stream The stream to parse.
     *
     * @throws IOException If there is an error initializing the stream.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.PDPage:getContentsForRandomAccess(),259,302,"/**
 * Reads content stream, handling nulls, errors, and substreams.
 * Returns a RandomAccessRead or a buffer if issues occur.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",74,166,"/**
 * Creates a PDCIDFontType0 object, parsing font data and handling embedded/fallback fonts.
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * 
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",83,155,"/**
 * Creates a PDCIDFontType2 with embedded or fallback font.
 * @param fontDictionary Font dictionary.
 * @param parent Parent font.
 * @param trueTypeFont TrueType font or null to find/substitute.
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @param trueTypeFont The true type font used to create the parent font
     * @throws IOException if the font could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,readCMap,org.apache.pdfbox.pdmodel.font.PDFont:readCMap(org.apache.pdfbox.cos.COSBase),208,228,"/**
 * Resolves a CMap from a COSBase (Name or Stream).
 * @param base The COSBase object to resolve.
 * @throws IOException if the base is not a Name or Stream.
 */","* Reads a CMap given a COS Stream or Name. May return null if a predefined CMap does not exist.
     *
     * @param base COSName or COSStream
     * @return the CMap if present
     * 
     * @throws IOException if the CMap could not be read",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontHeader,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontHeader(org.apache.pdfbox.cos.COSDictionary),324,360,"/**
 * Extracts the font file header from a COSDictionary.
 * @param fontDescriptor Font descriptor dictionary.
 * @return Byte array representing the font file header.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentsForRandomAccess(),82,86,"/**
* Delegates to charStream's m1() method and returns it.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentsForRandomAccess(),163,167,"/**
 * Returns a RandomAccessRead object by chaining m1() and m2().
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentsForRandomAccess(),182,191,"/**
 * Gets a RandomAccessRead object from a COS dictionary.
 * Returns null if the dictionary is not a COSStream.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(java.util.List),925,929,"/**
* Delegates to m1().m2() with the provided stop filters.
* @param stopFilters List of stop filters to apply.
* @return InputStream returned by m1().m2().
*/
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getPositionVector(int),288,298,"/**
 * Retrieves a vector based on the provided code.
 * @param code Input code used to identify the vector.
 * @return Vector object or null if not found.
 */
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getWidth(int),511,515,"/**
* Delegates to the descendant font's m1 method.
* @param code The code to pass to the descendant font.
* @return The float value returned by descendantFont.m1().
*/
",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,78,"/**
* Processes an operator with operands, setting a tag's properties.
* @param operator The operator being processed.
* @param operands List of operands for the operator.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,75,"/**
 * Processes an operator with operands, potentially setting properties.
 * @param operator The operator being processed.
 * @param operands List of operands for the operator.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenVisibilityExpression(org.apache.pdfbox.cos.COSArray),2187,2209,"/**
* Processes a COSArray based on its operator.
* @param veArray COSArray containing the operator and operands.
* @return True if processing succeeds, false otherwise.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Creates a circle annotation from a COSDictionary.
 * @param field The COSDictionary containing annotation data.
 */
","* Creates a circle annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDAnnotationSquare from a COSDictionary.
 */","* Creates a square annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a highlight annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a squiggly annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a strikeout annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates an underline annotation from a COSDictionary.
 * @param dict The COSDictionary containing underline data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,transferDict,"org.apache.pdfbox.multipdf.LayerUtility:transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",289,300,"/**
 * Copies filtered entries from orgDict to targetDict.
 * @param orgDict Source dictionary.
 * @param targetDict Destination dictionary.
 * @param filter Filter to apply to dictionary entries.
 */",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSStream,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSStream(org.apache.pdfbox.cos.COSStream),144,166,"/**
* Clones a COSStream, copying its data and attributes.
* Returns the cloned COSStream.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMergeCOSBase,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMergeCOSBase(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",204,236,"/**
* Copies data from source to target, handling arrays and dictionaries.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeKEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",968,1039,"/**
* Copies structure tree elements, handling different element types.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeIDTree,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",1084,1127,"/**
* Copies structure tree elements, handling duplicate names.
* @param cloner Utility for cloning objects.
* @param srcStructTree Source structure tree.
* @param destStructTree Destination structure tree.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeRoleMap,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.multipdf.PDFCloneUtility)",1189,1220,"/**
* Copies RoleMap entries from srcStructTree to destStructTree.
* Clones values using the provided cloner.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOutputIntents,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOutputIntents(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",1341,1369,"/**
* Copies output intents from srcCatalog to destCatalog, skipping duplicates.
*/",,,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",1427,1478,"/**
 * Recursively clones structure tree entries, handling object mapping.
 * @param cloner Utility for cloning COS objects.
 * @param parentTreeEntry Current dictionary being processed.
 * @param objMapping Mapping of COS dictionaries.
 */","* Update the Pg and Obj references to the new (merged) page.
     *
     * @param parentTreeEntry
     * @param objMapping mapping between old and new references",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeInto,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Set)",1546,1555,"/**
 * Copies entries from src to dst, excluding specified keys.
 * @param src Source dictionary.
 * @param dst Destination dictionary.
 */
","* This will add all of the dictionaries keys/values to this dictionary, but
     * only if they are not in an exclusion list and if they don't already
     * exist. If a key already exists in this dictionary then nothing is
     * changed.
     *
     * @param src The source dictionary to get the keys/values from.
     * @param dst The destination dictionary to merge the keys/values into.
     * @param exclude Names of keys that shall be skipped.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBody,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBody(org.apache.pdfbox.cos.COSDocument),426,449,"/**
 * Processes COSDocument elements: root, info, encrypt.
 * @param doc The COSDocument to process.
 * @throws IOException if an I/O error occurs.
 */","* This will write the body of the document.
     *
     * @param doc The document to write the body for.
     *
     * @throws IOException If there is an error writing the data.",,,True,12
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyPolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyPolygon(float[][]),104,125,"/**
 * Processes a path represented as a 2D float array.
 * Converts to Point2D.Double and calls m1/m2 methods.
 */","* Creates a cloudy border for a Polygon annotation.
     *
     * @param path polygon path
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyRectangleImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyRectangleImpl(double,double,double,double,boolean)",225,271,"/**
 * Draws a rectangle or ellipse based on input bounds and intensity.
 * @param left, bottom, right, top Rectangle coordinates.
 * @param isEllipse Whether to draw an ellipse or rectangle.
 */","* Cloudy rectangle implementation is based on converting the rectangle
     * to a polygon.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFileObject,"org.apache.pdfbox.pdfparser.COSParser:parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey)",525,611,"/**
* Parses a COSBase object from the source, validating object keys.
* @param objOffset Offset of the object in the source.
* @param objKey Key of the object to parse.
* @return Parsed COSBase object or null if parsing fails.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(java.lang.String),50,54,"/**
 * Constructs a PDActionJavaScript with the given JavaScript string.
 * @param js The JavaScript code to execute.
 */
","* Constructor.
     *
     * @param js Some javascript code.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:toString(),235,264,"/**
 * Appends attributes to the superclass's string representation.
 * Returns a combined string with additional attribute details.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getBoundingBox(),205,213,"/**
 * Returns the font bounding box. Lazily initializes if null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getBoundingBox(),196,204,"/**
 * Returns the font bounding box. Lazily initializes if null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBoundingBox(),329,337,"/**
* Returns the font bounding box. Lazily initializes if null.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBoundingBox(),254,262,"/**
 * Returns the font bounding box. Lazily initializes if null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:getBoundingBox(),537,545,"/**
 * Returns the font bounding box. Lazily initializes if null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getBoundingBox(),314,322,"/**
 * Returns the font bounding box. Lazily initializes if null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",97,104,"/**
 * Paints a tiling pattern onto the page using the provided parameters.
 */","* Creates a new tiling Paint. The parameters color and colorSpace must be null for a colored
     * tiling Paint (because it has its own colors), and non null for an uncolored tiling Paint.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param colorSpace color space for this tiling
     * @param color color for this tiling
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setTransformationMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),509,516,"/**
 * Sets appearance stream's bounding box and transform.
 * @param appearanceStream The appearance stream to update.
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,handleBorderBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:handleBorderBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle,float)",518,549,"/**
* Calculates rectangle border box based on annotation data.
* @param annotation Annotation object.
* @param lineWidth Border line width.
* @return PDRectangle representing the border box.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawRaster(),525,529,"/**
* Delegates to the superclass to retrieve a WritableRaster.
* @return WritableRaster obtained from the superclass.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawRaster(),359,363,"/**
* Delegates to the superclass to retrieve a WritableRaster.
* @return WritableRaster obtained from the superclass.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(java.awt.Rectangle,int)",597,600,"/**
 * Reads a buffered image from a region with specified subsampling.
 * @param region The region to read.
 * @param subsampling Subsampling factor.
 * @return BufferedImage object.
 */
","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @param region The region of the source image to get, or null if the entire image is needed. The actual region
     * will be clipped to the dimensions of the source image.
     * 
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value of 1 meaning every
     * pixel will be read. It must not be larger than the image width or height.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(java.awt.Rectangle,int)",353,357,"/**
* Delegates image retrieval to SampledImageReader.
* @param region Region to read from.
* @param subsampling Subsampling factor.
* @return BufferedImage object.
*/
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)",136,139,"/**
 * Creates an image from a PDImage with default options.
 * @param pdImage The image to create.
 * @param colorKey Color key for image creation.
 */","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param colorKey an optional color key mask
     * @return content of this image as an RGB buffered image
     * @throws IOException if the image cannot be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,pushResources,org.apache.pdfbox.contentstream.PDFStreamEngine:pushResources(org.apache.pdfbox.contentstream.PDContentStream),576,602,"/**
 * Retrieves resources for the content stream, or parent's.
 * @param contentStream The content stream to get resources from.
 * @return The resources object.
 */
","* Pushes the given stream's resources, returning the previous resources.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",127,200,"/**
 * Creates a content stream for a page, appending or overwriting content.
 * @param document The document to add to.
 * @param sourcePage The page to add content to.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,hasBlendMode,org.apache.pdfbox.rendering.PDFRenderer:hasBlendMode(org.apache.pdfbox.pdmodel.PDPage),533,556,"/**
 * Checks if a PDF page has a non-normal blend mode.
 * @param page The PDF page to check.
 * @return True if a non-normal blend mode is found, false otherwise.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,calculateAffineTransform,"org.apache.pdfbox.multipdf.Overlay:calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",575,583,"/**
 * Creates an AffineTransform to shift overlay based on page dimensions.
 * @param page The PDPage object.
 * @param overlayMediaBox Overlay rectangle.
 * @return AffineTransform object.
 */","* Calculate the transform to be used when positioning the overlay. The default implementation
     * centers on the destination. Override this method to do your own, e.g. move to a corner, or
     * rotate.
     *
     * @param page The page that will get the overlay.
     * @param overlayMediaBox The overlay media box.
     * @return The affine transform to be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,clipToMediaBox,org.apache.pdfbox.pdmodel.PDPage:clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),564,573,"/**
 * Calculates the intersection rectangle of two PDRectangles.
 * @param box The second PDRectangle to intersect.
 * @return The intersection PDRectangle.
 */
",* Clips the given box to the bounds of the media box.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedMediaBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage),348,361,"/**
 * Returns the page rectangle, rotated if necessary.
 * @param page The page to get the rectangle from.
 * @return The rectangle of the page.
 */
","* This will find the MediaBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The MediaBox at this level in the hierarchy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isMarked(),67,70,"/**
* Checks if a key ""Marked"" exists in the dictionary with value false.
*/","* Tells if this is a tagged PDF.
     *
     * @return true If this is a tagged PDF.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,usesUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:usesUserProperties(),87,90,"/**
* Checks if ""UserProperties"" exists in the dictionary.
* Returns true if present, false otherwise.
*/
","* Tells if structure elements use user properties.
     *
     * @return A boolean telling if the structure elements use user properties.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isSuspect(),108,111,"/**
* Checks if ""Suspects"" is false in the dictionary.
*/","* Tells if this PDF contain 'suspect' tags.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this property.
     *
     * @return true if the suspect flag has been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,shouldTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:shouldTrackMousePosition(),106,109,"/**
 * Checks if a map exists based on the action's m1 method.
 * @return True if the map exists, false otherwise.
 */","* This will specify whether to track the mouse position when the URI is
     * resolved. Default value: false. This entry applies only to actions
     * triggered by the user's clicking an annotation; it is ignored for actions
     * associated with outline items or with a document's OpenAction entry.
     *
     * @return A flag specifying whether to track the mouse position when the
     * URI is resolved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getOpen(),74,77,"/**
* Delegates to m1().m2 with ""Open"" and false.
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,isFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:isFD(),201,204,"/**
* Delegates to m1() and calls m2 with ""FD"" and false.
*/","* This will return the value indication if the denominator of the fractional value is reduced/truncated .
     * 
     * @return fd",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setHidden(boolean),138,142,"/**
* Calls m2 with result of m1 and hidden flag, updates m3.
*/","* Specifies whether the property shall be hidden.
     * 
     * @param hidden <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:toString(),145,152,"/**
* Concatenates results of m1, m2, m3, and m4 into a string.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingOverprintControl(),383,386,"/**
* Checks if a namespace operation is valid based on the dictionary.
*/","* This will get the overprint control for non stroking operations.  If this
     * value is null then the regular overprint control value will be returned.
     *
     * @return The overprint control or null if one has not been set.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified coordinates with given dimensions.
 * @param inlineImage Inline image object
 * @param x X coordinate
 * @param y Y coordinate
 * @param width Image width
 * @param height Image height
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setInvisible(boolean),512,515,"/**
* Sets the visibility flag in the annotation.
* @param invisible Visibility flag (true to hide).
*/","* Set the invisible flag.
     *
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setHidden(boolean),532,535,"/**
* Sets the hidden flag in the annotation.
* @param hidden The value of the hidden flag.
*/","* Set the hidden flag.
     *
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPrinted(boolean),552,555,"/**
* Logs a print status using the annot object.
* @param printed True if printed, false otherwise.
*/","* Set the printed flag.
     *
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoZoom(boolean),572,575,"/**
* Sets the no-zoom flag in the annotation.
* @param noZoom boolean value to set the flag to.
*/
","* Set the noZoom flag.
     *
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoRotate(boolean),592,595,"/**
* Sets the no-rotate flag in the annotation.
* @param noRotate boolean value for no-rotate setting
*/","* Set the noRotate flag.
     *
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoView(boolean),612,615,"/**
* Sets the 'no view' flag in the annotation.
* @param noView boolean indicating whether to disable view.
*/","* Set the noView flag.
     *
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setReadOnly(boolean),632,635,"/**
* Sets the read-only flag on the annotation.
* @param readOnly boolean value indicating read-only status.
*/","* Set the readOnly flag.
     *
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLocked(boolean),652,655,"/**
* Sets the locked flag in the annotation.
* @param locked The new value for the locked flag.
*/","* Set the locked flag.
     *
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setToggleNoView(boolean),672,675,"/**
* Sets the 'FLAG_TOGGLE_NO_VIEW' annotation value.
* @param toggleNoView boolean value to set
*/
","* Set the toggleNoView flag.
     *
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLockedContents(boolean),692,695,"/**
* Sets the locked contents flag in the annotation.
* @param lockedContents boolean value indicating locked status
*/","* Set the LockedContents flag.
     * 
     * @param lockedContents The new LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setInvisible(boolean),407,410,"/**
* Calls m1().m2() with COSName.F, FLAG_INVISIBLE, and the invisible flag.
*/","* Set the invisible flag.
     * 
     * @param invisible The new invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setHidden(boolean),427,430,"/**
* Calls m1().m2() with COSName.F, FLAG_HIDDEN, and the given hidden boolean.
*/","* Set the hidden flag.
     * 
     * @param hidden The new hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPrinted(boolean),447,450,"/**
* Calls m1().m2 with COSName.F, FLAG_PRINTED, and the given boolean.
*/","* Set the printed flag.
     * 
     * @param printed The new printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoZoom(boolean),467,470,"/**
* Calls m1().m2() with COSName.F, FLAG_NO_ZOOM, and the noZoom value.
*/","* Set the noZoom flag.
     * 
     * @param noZoom The new noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoRotate(boolean),487,490,"/**
* Calls m2 on m1 with COSName.F and the noRotate flag.
* @param noRotate boolean value for the noRotate flag
*/","* Set the noRotate flag.
     * 
     * @param noRotate The new noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoView(boolean),507,510,"/**
* Calls m2 on m1, passing COSName.F, FLAG_NO_VIEW, and noView.
*/","* Set the noView flag.
     * 
     * @param noView The new noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setReadOnly(boolean),527,530,"/**
* Calls m1().m2 with COSName.F, FLAG_READ_ONLY, and readOnly.
*/","* Set the readOnly flag.
     * 
     * @param readOnly The new readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLocked(boolean),547,550,"/**
 * Calls m1().m2() with COSName.F, FLAG_LOCKED, and the provided boolean.
 */","* Set the locked flag.
     * 
     * @param locked The new locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setToggleNoView(boolean),567,570,"/**
* Calls m2 on m1, passing COSName.F, FLAG_TOGGLE_NO_VIEW, and toggleNoView.
*/","* Set the toggleNoView flag.
     * 
     * @param toggleNoView The new toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLockedContents(boolean),596,599,"/**
 * Sets the lockedContents flag using m1().m2().
 * @param lockedContents The value to set for locked contents.
 */","* Set the LockedContents flag. If set, do not allow the contents of the annotation to be
     * modified by the user. This flag does not restrict deletion of the annotation or changes to
     * other annotation properties, such as position and size.
     *
     * @param lockedContents The new LockedContents flag value.
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/PDF32000_2008.pdf#page=393"">PDF
     * 32000-1:2008 12.5.3, Table 165</a>
     * @see #isLockedContents()
     * @see #FLAG_LOCKED_CONTENTS
     * @since PDF 1.7",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilterRequired(boolean),126,129,"/**
* Calls m1().m2() with COSName.FF and FLAG_FILTER, sets flag value.
*/","* set true if the filter shall be required.
     * 
     * @param flag if true, the specified Filter shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilterRequired(boolean),145,148,"/**
* Calls m1().m2() with COSName.FF, FLAG_SUBFILTER, and the flag.
*/","* set true if the subfilter shall be required.
     * 
     * @param flag if true, the first supported SubFilter in the array shall be used when signing.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethodRequired(boolean),164,167,"/**
* Calls m1().m2 with COSName.FF, FLAG_DIGEST_METHOD, and the flag.
*/","* set true if the DigestMethod shall be required.
     * 
     * @param flag if true, one digest from the array shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setVRequired(boolean),183,186,"/**
* Calls m1().m2 with COSName.FF, FLAG_V, and the given flag.
*/","* set true if the V entry shall be required.
     * 
     * @param flag if true, the V entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasonRequired(boolean),202,205,"/**
 * Calls m1().m2 with COSName.FF, FLAG_REASON, and the given flag.
 */","* set true if the Reason shall be required.
     * 
     * @param flag if true, the Reason entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestationRequired(boolean),221,224,"/**
* Calls m1().m2 with COSName.FF, FLAG_LEGAL_ATTESTATION, and flag.
*/","* set true if the LegalAttestation shall be required.
     * 
     * @param flag if true, the LegalAttestation entry shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setAddRevInfoRequired(boolean),240,243,"/**
* Calls m1().m2 with COSName.FF, FLAG_ADD_REV_INFO, and the flag.
*/","* set true if the AddRevInfo shall be required.
     * 
     * @param flag if true, the AddRevInfo shall be used.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectRequired(boolean),114,117,"/**
* Sets the FLAG_SUBJECT value in the dictionary based on the flag.
* @param flag boolean value to set FLAG_SUBJECT to
*/","* set true if subject shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuerRequired(boolean),133,136,"/**
* Sets the FLAG_ISSUER value in the dictionary based on the flag.
* @param flag boolean value to set FLAG_ISSUER to
*/
","* set true if Issuer shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Issuer shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOIDRequired(boolean),152,155,"/**
* Calls dictionary.m1 with COSName.FF, FLAG_OID, and the provided flag.
*/","* set true if OID shall be required as a constraint on signature.
     *
     * @param flag if true, the specified OID shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDNRequired(boolean),171,174,"/**
* Sets FLAG_SUBJECT_DN in dictionary based on the provided flag.
*/","* set true if subject DN shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject DN shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsageRequired(boolean),190,193,"/**
* Sets the key usage flag in the dictionary.
* @param flag The value to set for the key usage flag.
*/","* set true if KeyUsage shall be required as a constraint on signature.
     *
     * @param flag if true, the specified KeyUsage shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLRequired(boolean),209,212,"/**
* Sets a flag in the dictionary using COSName.FF.
* @param flag The boolean value to set.
*/","* set true if URL shall be required as a constraint on signature.
     *
     * @param flag if true, the specified URL shall be enforced as a constraint.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setItalic(boolean),374,377,"/**
* Calls m1().m2() with COSName.F, ITALIC_FLAG, and the provided boolean.
*/","* Set the italic property of the text.
     *
     * @param italic The new italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setBold(boolean),394,397,"/**
* Calls m1().m2() with COSName.F, BOLD_FLAG, and the given boolean.
*/","* Set the bold property of the text.
     *
     * @param bold The new bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setSignaturesExist(boolean),642,645,"/**
* Sets signature existence flag in the dictionary.
* @param signaturesExist Flag indicating if signatures exist.
*/","* Set the SignaturesExist bit.
     *
     * @param signaturesExist The value for SignaturesExist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setAppendOnly(boolean),682,685,"/**
* Sets the append-only flag in the dictionary.
* @param appendOnly True to set append-only flag.
*/","* Set the AppendOnly bit.
     *
     * @param appendOnly The value for AppendOnly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSort(boolean),283,286,"/**
* Calls m1().m2() with COSName.FF, FLAG_SORT, and the sort flag.
*/","* Set the Sort bit.
     * 
     * @see #isSort()
     * @param sort The value for Sort.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setMultiSelect(boolean),303,306,"/**
 * Calls m1().m2() with COSName.FF, FLAG_MULTI_SELECT, and multiSelect.
 */","* Set the MultiSelect bit.
     *
     * @param multiSelect The value for MultiSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDoNotSpellCheck(boolean),323,326,"/**
* Calls m1().m2 to disable spell check based on the flag.
* @param doNotSpellCheck boolean to control spell check
*/","* Set the DoNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for DoNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCommitOnSelChange(boolean),343,346,"/**
* Sets the commit-on-selection-change flag.
* @param commitOnSelChange Flag to indicate commit behavior.
*/","* Set the CommitOnSelChange bit.
     *
     * @param commitOnSelChange The value for CommitOnSelChange.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCombo(boolean),363,366,"/**
* Calls m1().m2() with specified parameters.
* @param combo boolean value passed to m2()
*/","* Set the Combo bit.
     *
     * @param combo The value for Combo.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,setEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:setEdit(boolean),73,76,"/**
* Calls m1().m2 with COSName.FF, FLAG_EDIT, and the edit flag.
*/","* Set the Edit bit.
     *
     * @param edit The value for Edit.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:setReadOnly(boolean),148,151,"/**
* Sets the read-only flag for a dictionary entry.
* @param readonly boolean indicating read-only status
*/","* sets the field to be read-only.
     * 
     * @param readonly The new flag for readonly.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:setRequired(boolean),168,171,"/**
* Sets the 'required' flag for a dictionary entry.
* @param required boolean value indicating requirement
*/","* sets the flag whether the field is to be required to have a value at the time it is exported
     * by a submit-form action.
     *
     * @param required The new flag for required.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:setNoExport(boolean),187,190,"/**
* Sets the no-export flag in the dictionary.
* @param noExport True to disable export; false otherwise.
*/","* sets the field to be not exported.
     * 
     * @param noExport The new flag for noExport.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Creates a push button.
 * @param acroForm The acroform to associate with this button.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),43,47,"/**
 * Constructs a PDRadioButton with the given acroForm.
 * Sets the radio button flag in the COS object.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,setRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:setRadiosInUnison(boolean),69,72,"/**
 * Calls m1().m2 to set radiosInUnison flag.
 * @param radiosInUnison boolean value for radios unison.
 */","* From the PDF Spec <br>
     * If set, a group of radio buttons within a radio button field that use the same value for the on state will turn
     * on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually
     * exclusive (the same behavior as HTML radio buttons).
     *
     * @param radiosInUnison The new flag for radiosInUnison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMultiline(boolean),75,78,"/**
 * Calls m1().m2 with COSName.FF and multiline flag.
 * @param multiline boolean value for multiline flag
 */","* Set the multiline bit.
     *
     * @param multiline The value for the multiline.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setPassword(boolean),93,96,"/**
* Calls m1().m2 with COSName.FF, FLAG_PASSWORD, and the given password.
*/","* Set the password bit.
     *
     * @param password The value for the password.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setFileSelect(boolean),111,114,"/**
* Calls m1().m2 with COSName.FF, FLAG_FILE_SELECT, and fileSelect.
*/","* Set the file select bit.
     *
     * @param fileSelect The value for the fileSelect.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotSpellCheck(boolean),129,132,"/**
 * Calls m1().m2 to disable spell check.
 * @param doNotSpellCheck flag to disable spell check
 */","* Set the doNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for the doNotSpellCheck.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotScroll(boolean),147,150,"/**
* Calls m2 on m1, passing COSName.FF and doNotScroll flag.
*/","* Set the doNotScroll bit.
     *
     * @param doNotScroll The value for the doNotScroll.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setComb(boolean),165,168,"/**
* Calls m1().m2() with COSName.FF, FLAG_COMB, and the comb flag.
*/","* Set the comb bit.
     *
     * @param comb The value for the comb.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setRichText(boolean),183,186,"/**
 * Sets rich text flag via m1().m2().
 * @param richText boolean value to set as rich text flag
 */","* Set the richText bit.
     *
     * @param richText The value for the richText.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",929,932,"/**
* Calls overloaded method with default value for third parameter.
* @param embeddedDictionary COSName object
* @param key COSName object
*/
","* Get an integer from an embedded dictionary. Useful for 1-1 mappings. default:-1
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     *
     * @return The value of the embedded integer.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDenominator(),181,184,"/**
 * Calls m1() and then m2(""D"") on the result.
 */","* This will return the precision or denominator of a fractional amount.
     * 
     * @return the precision or denominator",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,encode,"org.apache.pdfbox.filter.CCITTFaxFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,158,"/**
 * Encodes input stream to a CCITT fax stream with specified dimensions.
 * @param input Input stream to encode.
 * @param encoded Output stream for encoded data.
 * @param parameters COSDictionary containing dimensions.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,readJPX,"org.apache.pdfbox.filter.JPXFilter:readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",116,203,"/**
 * Decodes a JPEG 2000 image from an input stream.
 * @param input Input stream containing the JPX image.
 * @return Decoded BufferedImage.
 * @throws IOException if an I/O error occurs.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,wrapPredictor,"org.apache.pdfbox.filter.Predictor:wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",235,250,"/**
* Applies predictor if specified in decodeParams, otherwise returns out.
* @param out Output stream
* @param decodeParams Dictionary containing predictor settings
* @return Output stream with predictor applied or original stream
*/
","* Wraps and <code>OutputStream</code> in a predictor decoding stream as necessary.
     * If no predictor is specified by the parameters, the original stream is returned as is.
     *
     * @param out The stream to which decoded data should be written
     * @param decodeParams Decode parameters for the stream
     * @return An <code>OutputStream</code> is returned, which will write decoded data
     * into the given stream. If no predictor is specified, the original stream is returned.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getStructParents,org.apache.pdfbox.pdmodel.PDPage:getStructParents(),366,369,"/**
* Returns the number of parent structures.
* Uses `page.m1` to get the count.
*/
","* This will get the key of this Page in the structural parent tree.
     * 
     * @return the integer key of the page's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.cos.COSDictionary),473,491,"/**
 * Decrements count in parent dictionaries if node is a kid.
 * @param node The COSDictionary node to check.
 */
",* Removes the given COS page.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,add,org.apache.pdfbox.pdmodel.PDPageTree:add(org.apache.pdfbox.pdmodel.PDPage),498,520,"/**
* Sets the parent of a page and updates parent counts.
* @param page The PDPage object to modify.
*/","* Adds the given page to this page tree.
     * 
     * @param page The page to add.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,increaseParents,org.apache.pdfbox.pdmodel.PDPageTree:increaseParents(org.apache.pdfbox.cos.COSDictionary),586,595,"/**
 * Traverses parent dictionaries, incrementing COUNT until null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getBitsPerSample(),111,114,"/**
* Calls m1(), then m2 with COSName.BITS_PER_SAMPLE.
*/","* Get the number of bits that the output value will take up.  
     * 
     * Valid values are 1,2,4,8,12,16,24,32.
     *
     * @return Number of bits for each output value.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getMCID(),89,92,"/**
* Calls m1(), then m2 with COSName.MCID, returning the result.
*/","* Gets the marked content identifier.
     * 
     * @return the marked content identifier",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTreeNextKey(),155,158,"/**
* Calls m1(), then m2 with COSName.PARENT_TREE_NEXT_KEY.
*/","* Returns The next key for the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     *
     * @return The next key for the parent tree",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getMCID(),97,101,"/**
* Returns COSName.MCID from m1() if not null, otherwise -1.
*/","* Gets the marked-content identifier.
     * 
     * @return the marked-content identifier, or -1 if it doesn't exist.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getSupplement,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getSupplement(),57,60,"/**
* Retrieves a value from the dictionary using COSName.SUPPLEMENT.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromRandomAccessImpl,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,int)",209,232,"/**
* Creates a PDImageXObject from a reader, number, and decode parameters.
* @param document The document to add the image to.
* @param reader Reader to read image data from.
* @param number Image number.
* @return PDImageXObject or null if image data is empty.
*/","* Creates a new CCITT Fax compressed image XObject from a TIFF file.
     * 
     * @param document the document to create the image as part of.
     * @param reader the random access TIFF file which contains a suitable CCITT
     * compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject, or null if no such page
     * @throws IOException if there is an error reading the TIFF data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineCapStyle(),242,245,"/**
* Returns an integer value from the dictionary using COSName.LC.
*/","* This will get the line cap style.
     *
     * @return null or the LC value of the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineJoinStyle(),262,265,"/**
* Returns a value from the dictionary using COSName.LJ.
*/","* This will get the line join style.
     *
     * @return null or the LJ value in the dictionary.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getStructParent(),683,686,"/**
 * Calls m1(), then m2 with COSName.STRUCT_PARENT.
 */","* This will get the key of this annotation in the structural parent tree.
     *
     * @return the integer key of the annotation's entry in the structural parent tree or -1 if
     * there isn't any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,getP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:getP(),67,70,"/**
* Retrieves a value from the dictionary using COSName.P.
* @return An integer value from the dictionary.
*/
","* Return the P value.
     * 
     * @return the P value",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getMaxLen(),193,196,"/**
* Calls m1(), then m2 with COSName.MAX_LEN as argument.
*/","* Returns the maximum number of characters of the text field.
     * 
     * @return the maximum number of characters, returns -1 if the value isn't present",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getInteger(java.lang.String,int)",253,256,"/**
* Delegates to m1().m2 to retrieve a value, using defaultValue if needed.
*/","* Gets an integer.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the integer",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isInvisible(),502,505,"/**
* Checks if an annotation flag is invisible.
* @return True if the flag is invisible, false otherwise.
*/
","* Get the invisible flag.
     *
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isHidden(),522,525,"/**
* Checks if a flag is hidden using annot.m1.
* @return True if hidden, false otherwise.
*/","* Get the hidden flag.
     *
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isPrinted(),542,545,"/**
* Checks if a flag is printed based on COSName and FLAG_PRINTED.
*/","* Get the printed flag.
     *
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoZoom(),562,565,"/**
* Calls annot.m1 with COSName.F and FLAG_NO_ZOOM.
* Returns the result of the call.
*/
","* Get the noZoom flag.
     *
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoRotate(),582,585,"/**
* Checks if rotation flag is set using annot.m1.
* @return True if flag is set, false otherwise.
*/","* Get the noRotate flag.
     *
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoView(),602,605,"/**
* Calls annot.m1 with COSName.F and FLAG_NO_VIEW, returns result.
*/","* Get the noView flag.
     *
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isReadOnly(),622,625,"/**
* Checks a flag using annot.m1 with COSName.F and FLAG_READ_ONLY.
*/","* Get the readOnly flag.
     *
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLocked(),642,645,"/**
* Checks if a flag is locked using annot.m1.
* @return True if the flag is locked, false otherwise.
*/
","* Get the locked flag.
     *
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isToggleNoView(),662,665,"/**
* Checks a flag using annot.m1 with COSName.F and FLAG_TOGGLE_NO_VIEW.
*/","* Get the toggleNoView flag.
     *
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLockedContents(),682,685,"/**
* Checks if contents are locked using annotation.
* @return True if locked, false otherwise.
*/
","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isInvisible(),397,400,"/**
* Calls m1().m2 with COSName.F and FLAG_INVISIBLE.
*/","* Get the invisible flag.
     * 
     * @return The invisible flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isHidden(),417,420,"/**
* Delegates to m1().m2(), passing COSName.F and FLAG_HIDDEN.
*/","* Get the hidden flag.
     * 
     * @return The hidden flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isPrinted(),437,440,"/**
* Calls m1().m2 with COSName.F and FLAG_PRINTED.
*/","* Get the printed flag.
     * 
     * @return The printed flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoZoom(),457,460,"/**
* Calls m1().m2 with COSName.F and FLAG_NO_ZOOM.
*/","* Get the noZoom flag.
     * 
     * @return The noZoom flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoRotate(),477,480,"/**
* Calls m1().m2 with COSName.F and FLAG_NO_ROTATE.
*/","* Get the noRotate flag.
     * 
     * @return The noRotate flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoView(),497,500,"/**
* Calls m1().m2 with COSName.F and FLAG_NO_VIEW.
*/","* Get the noView flag.
     * 
     * @return The noView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isReadOnly(),517,520,"/**
* Delegates to m1().m2, passing COSName.F and FLAG_READ_ONLY.
*/","* Get the readOnly flag.
     * 
     * @return The readOnly flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLocked(),537,540,"/**
* Delegates to m1().m2() with COSName.F and FLAG_LOCKED.
*/","* Get the locked flag.
     * 
     * @return The locked flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isToggleNoView(),557,560,"/**
* Calls m1().m2 with COSName.F and FLAG_TOGGLE_NO_VIEW.
*/","* Get the toggleNoView flag.
     * 
     * @return The toggleNoView flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLockedContents(),578,581,"/**
* Delegates to m1().m2() with COSName.F and FLAG_LOCKED_CONTENTS.
*/","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.
     * @see #setLockedContents(boolean)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isFilterRequired(),116,119,"/**
* Calls m1().m2 with COSName.FF and FLAG_FILTER.
*/","*
     * @return true if the Filter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isSubFilterRequired(),135,138,"/**
* Calls m1().m2 with COSName.FF and FLAG_SUBFILTER.
*/","*
     * @return true if the SubFilter is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isDigestMethodRequired(),154,157,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_DIGEST_METHOD.
*/","*
    * @return true if the DigestMethod is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isVRequired(),173,176,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_V.
*/","*
    * @return true if the V entry is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isReasonRequired(),192,195,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_REASON.
*/","*
    * @return true if the Reason is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isLegalAttestationRequired(),211,214,"/**
* Calls m1().m2 with COSName.FF and FLAG_LEGAL_ATTESTATION.
*/","*
    * @return true if the LegalAttestation is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isAddRevInfoRequired(),230,233,"/**
* Calls m1().m2 with COSName.FF and FLAG_ADD_REV_INFO.
*/","*
    * @return true if the AddRevInfo is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectRequired(),104,107,"/**
* Checks if a specific flag is set in the dictionary.
*/","*
     * @return true if the Subject is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isIssuerRequired(),123,126,"/**
* Checks if the dictionary contains FF with the specified flag.
*/","*
     * @return true if the Issuer is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isOIDRequired(),142,145,"/**
* Checks if a flag exists in the dictionary.
* @return True if the flag is present, false otherwise.
*/
","*
     * @return true if the OID is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectDNRequired(),161,164,"/**
* Checks if a flag is set in the dictionary for COSName.FF.
* @return True if the flag is set, false otherwise.
*/
","*
     * @return true if the Subject DN is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isKeyUsageRequired(),180,183,"/**
* Checks if COSName.FF has the specified FLAG_KEY_USAGE.
* Returns true if present, false otherwise.
*/
","*
     * @return true if the KeyUsage is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isURLRequired(),199,202,"/**
* Checks if a URL flag exists in the dictionary.
* @return True if the flag exists, false otherwise.
*/","*
     * @return true if the URL is required",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isItalic(),364,367,"/**
* Delegates to m1().m2, passing COSName.F and ITALIC_FLAG.
*/","* A flag telling if the text should be italic.
     *
     * @return The italic flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isBold(),384,387,"/**
* Delegates to m1().m2, passing COSName.F and BOLD_FLAG.
*/","* A flag telling if the text should be bold.
     *
     * @return The bold flag.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isSignaturesExist(),632,635,"/**
* Checks if signature flags exist in the dictionary.
* Returns true if flags exist, false otherwise.
*/","* Determines if SignaturesExist is set.
     * 
     * @return true if the document contains at least one signature.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isAppendOnly(),652,655,"/**
* Checks if a flag is set in the dictionary.
* @return True if the flag is set, false otherwise.
*/
","* Determines if AppendOnly is set.
     * 
     * @return true if the document contains signatures that may be invalidated if the file is saved.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isPushButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isPushButton(),87,90,"/**
* Calls m1().m2 with COSName.FF and FLAG_PUSHBUTTON.
*/","* Determines if push button bit is set.
     * 
     * @return true if type of button field is a push button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isRadioButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isRadioButton(),97,100,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_RADIO.
*/","* Determines if radio button bit is set.
     * 
     * @return true if type of button field is a radio button.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isSort(),272,275,"/**
* Delegates to m1().m2(), passing COSName.FF and FLAG_SORT.
*/","* Determines if Sort is set.
     * 
     * <p>
     * If set, the field’s option items shall be sorted alphabetically.
     * The sorting has to be done when writing the PDF. PDF Readers are supposed to
     * display the options in the order in which they occur in the Opt array. 
     * </p>
     * 
     * @return true if the options are sorted.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isMultiSelect(),293,296,"/**
* Calls m1().m2 with COSName.FF and FLAG_MULTI_SELECT.
*/","* Determines if MultiSelect is set.
     * 
     * @return true if multi select is allowed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isDoNotSpellCheck(),313,316,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_DO_NOT_SPELL_CHECK.
*/","* Determines if DoNotSpellCheck is set.
     * 
     * @return true if spell checker is disabled.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCommitOnSelChange(),333,336,"/**
* Calls m1().m2 with COSName.FF and FLAG_COMMIT_ON_SEL_CHANGE.
*/","* Determines if CommitOnSelChange is set.
     * 
     * @return true if value shall be committed as soon as a selection is made.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCombo(),353,356,"/**
* Delegates to m1().m2() with COSName.FF and FLAG_COMBO.
*/","* Determines if Combo is set.
     * 
     * @return true if value the choice is a combo box..",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,isEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:isEdit(),63,66,"/**
* Delegates to m1().m2 with COSName.FF and FLAG_EDIT.
*/","* Determines if Edit is set.
     * 
     * @return true if the combo box shall include an editable text box as well as a drop-down list.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:isReadOnly(),157,160,"/**
* Checks if a flag is set in the dictionary.
* @return True if the flag is set, false otherwise.
*/
","* 
     * @return true if the field is readonly",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:isRequired(),177,180,"/**
* Checks if a specific flag exists in the dictionary.
* @return True if the flag is present, false otherwise.
*/
","* @return true if the field is required to have a value at the time it is exported by a
     * submit-form action.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:isNoExport(),196,199,"/**
* Checks if a feature is disabled, using the dictionary.
*/","* 
     * @return true if the field is not to be exported.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,isRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:isRadiosInUnison(),78,81,"/**
* Calls m1().m2 with COSName.FF and FLAG_RADIOS_IN_UNISON.
*/","*
     * @return true If the flag is set for radios in unison.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isMultiline(),65,68,"/**
* Calls m1().m2 with COSName.FF and FLAG_MULTILINE.
*/",* @return true if the field is multiline,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isPassword(),83,86,"/**
* Delegates to m1().m2() with COSName.FF and FLAG_PASSWORD.
*/",* @return true if the field is a password field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isFileSelect(),101,104,"/**
* Calls m1().m2 with COSName.FF and FLAG_FILE_SELECT.
*/",* @return true if the field is a file select field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotSpellCheck(),119,122,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_DO_NOT_SPELL_CHECK.
*/",* @return true if the field is not suppose to spell check.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotScroll(),137,140,"/**
* Calls m1().m2 with COSName.FF and FLAG_DO_NOT_SCROLL.
*/",* @return true if the field is not suppose to scroll.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isComb(),155,158,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_COMB.
*/",* @return true if the field is not suppose to comb the text display.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isRichText(),173,176,"/**
* Delegates to m1().m2, passing COSName.FF and FLAG_RICH_TEXT.
*/",* @return true if the field is a rich text field.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,org.apache.pdfbox.pdmodel.PDPageTree:get(int),261,269,"/**
 * Creates a PDPage object from a dictionary at the given index.
 * @param index Index of the page.
 * @return PDPage object.
 */
","* Returns the page at the given index.
     *
     * @param index zero-based index
     * @return the page at the given index
     * 
     * @throws IllegalStateException if the requested index isn't found or doesn't point to a valid page dictionary
     * @throws IndexOutOfBoundsException if the requested index is higher than the page count",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getNumberOfPages,org.apache.pdfbox.pdmodel.PDDocument:getNumberOfPages(),1256,1259,"/**
* Chains method calls m1(), m2(), and m3, returning the final result.
*/","* This will return the total page count of the PDF document.
     * 
     * @return The total number of pages in the PDF document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,next,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:next(),314,341,"/**
* Generates a formatted string based on label and style info.
* Throws NoSuchElementException if m1() returns false.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),234,256,"/**
* Updates a COS array with attributes and integer value.
* @param attributeObject The attribute object to add.
*/","* Adds an attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,attributeChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),296,321,"/**
* Updates COSArray based on attributeObject, or creates one if needed.
*/","* Updates the revision number for the given attribute object.
     * 
     * @param attributeObject the attribute object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addClassName(java.lang.String),401,426,"/**
* Updates COS array for a class, adding name & count.
* @param className Name of the class to add to the array.
*/","* Adds a class name.
     * 
     * @param className the class name",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,incrementRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:incrementRevisionNumber(),492,495,"/**
* Increments the result of m1(), then passes it to m2.
*/",* Increments th revision number.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",119,289,"/**
 * Decrypts the document using the provided decryption material.
 * @param encryption Encryption object containing decryption details.
 * @param documentIDArray COSArray representing document IDs.
 * @param decryptionMaterial Material used for decryption.
 * @throws IOException if decryption fails.
 */","* Prepares everything to decrypt the document.
     *
     * @param encryption encryption dictionary, can be retrieved via
     * {@link PDDocument#getEncryption()}
     * @param documentIDArray document id which is returned via
     * {@link org.apache.pdfbox.cos.COSDocument#getDocumentID()} (not used by
     * this handler)
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws IOException If there is an error accessing data. If verbose mode
     * is enabled, the exception message will provide more details why the
     * match wasn't successful.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerKey(),273,291,"/**
 * Retrieves and potentially pads the owner's data.
 * @return Byte array of owner data or null if not found.
 */","* This will get the O entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserKey(),312,330,"/**
 * Extracts user data from the dictionary.
 * @return User data as byte array or null if not found.
 */","* This will get the U entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user key.
     *
     * @throws IOException If there is an error accessing the data.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDFont:getDisplacement(int),250,253,"/**
 * Creates a Vector with a specified capacity, derived from code.
 * @param code Integer used to calculate Vector capacity.
 * @return A Vector object with calculated capacity.
 */
","* Returns the displacement vector (w0, w1) in text space, for the given character. For horizontal text only the x
     * component is used, for vertical text only the y component.
     *
     * @param code character code
     * @return displacement vector
     * @throws IOException if the data could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDFont:getStringWidth(java.lang.String),367,380,"/**
 * Calculates the width of a text string based on its byte representation.
 */","* Returns the width of the given Unicode string.
     *
     * @param text The text to get the width of.
     * @return The width of the string in 1/1000 units of text space.
     * @throws IOException If there is an error getting the width information.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFlagBitOn,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFlagBitOn(int),250,253,"/**
 * Checks if a bit is set within a masked value.
 * @param bit The bit to check.
 * @return True if the bit is set, false otherwise.
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlagBit,"org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlagBit(int,boolean)",255,267,"/**
 * Updates a flag based on the given value.
 * @param bit The flag to update.
 * @param value True to set, false to clear.
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPattern,org.apache.pdfbox.pdmodel.PDResources:getPattern(org.apache.pdfbox.cos.COSName),325,350,"/**
* Retrieves a pattern by name, caching if available.
* @param name Pattern name. Returns PDAbstractPattern or null.
*/","* Returns the pattern resource with the given name, or null if none exists.
     * 
     * @param name Name of the pattern resource.
     * @return the pattern with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStreamOperators,org.apache.pdfbox.contentstream.PDFStreamEngine:processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream),531,571,"/**
 * Parses content stream, handling operators and arguments.
 * @param contentStream Stream to parse; restores color operator flag.
 */","* Processes the operators of the given content stream.
     *
     * @param contentStream to content stream to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShading,org.apache.pdfbox.pdmodel.PDResources:getShading(org.apache.pdfbox.cos.COSName),290,315,"/**
 * Creates a PDShading object by name, caching if possible.
 * @param name Shading name; used to fetch and cache the shading.
 * @return PDShading object or null if shading not found.
 */","* Returns the shading resource with the given name, or null if none exists.
     *
     * @param name Name of the shading resource.
     * @return the shading state with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getShading(),90,101,"/**
 * Returns the shading object, creating it if it doesn't exist.
 * Returns the shading or null if no shading is found.
 */","* This will get the shading resources for this pattern.
     * @return The shading resources for this pattern.
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerComponent(),60,68,"/**
 * Returns the bits per color component, caching the value.
 */","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerComponent(),60,68,"/**
 * Returns the bits per color component.
 * Fetches from m1() if not already set.
 */","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerCoordinate(),87,95,"/**
 * Returns the bits per coordinate value, caching if necessary.
 */","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerCoordinate(),87,95,"/**
 * Returns the bits per coordinate, fetching if not already set.
 */","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveRotation,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveRotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),346,355,"/**
 * Gets the mask value from the widget's appearance characteristics.
 * @param widget The annotation widget to get the mask from.
 * @return The mask value, or 0 if characteristics are absent.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,isNodeOpen,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:isNodeOpen(),274,277,"/**
* Checks if m1() is greater than 0.
* @return True if m1() > 0, false otherwise.
*/
","* @return true if this node count is greater than zero, false otherwise.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createField,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",50,95,"/**
 * Determines field type and creates corresponding PDField object.
 * @param form  AcroForm object.
 * @param field COSDictionary representing the field.
 * @param parent NonTerminalField parent.
 * @return PDField or null if type is unknown.
 */","* Creates a COSField subclass from the given field.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created 
     * @return the corresponding PDField instance",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxSelectionHighlight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",772,811,"/**
 * Draws highlighted list box entries based on selected indices.
 * Uses appearance stream, font, and size to draw highlights.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldFlags(),71,85,"/**
 * Gets the FF value, either from m1() or m3().
 * Returns 0 if neither source provides a value.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean,org.apache.pdfbox.rendering.PDFRenderer)",139,148,"/**
 * Initializes a PDFPrintable object with provided parameters.
 * @param document The PDF document to print.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).
     * @param renderer the document renderer. Useful if {@link PDFRenderer} has been subclassed.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,<init>,org.apache.pdfbox.rendering.PDFRenderer:<init>(org.apache.pdfbox.pdmodel.PDDocument),71,75,"/**
 * Initializes the PDF renderer with a PDDocument.
 * @param document The PDF document to render.
 */
","* Creates a new PDFRenderer.
     * @param document the document to render",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.lang.String),59,62,"/**
 * Loads an FDF document from a file.
 * @param filename Path to the FDF file.
 * @return FDFDocument object.
 */","* This will load a document from a file.
     *
     * @param filename The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used
     * to read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",223,239,"/**
 * Parses PDF input, potentially with password/keystore.
 * @param input PDF byte array
 * @return Parsed PDDocument or null if parsing fails
 */","* Parses a PDF.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",474,481,"/**
 * Parses a PDF document using provided credentials and cache function.
 * @param randomAccessRead Input stream for PDF data
 * @return Parsed PDFDocument object
 */","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,initFromRandomAccessRead,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead),96,101,"/**
 * Parses PDF source, extracts visual signature.
 * @param rar RandomAccessRead object for PDF source
 * @throws IOException if an I/O error occurs
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
 * Processes operator with arguments, setting color space.
 * @param operator The operator to process.
 * @param arguments List of arguments for the operator.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Processes an operator with arguments, setting the CMYK color space.
 * @param operator The operator to process.
 * @param arguments Operator arguments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Processes an operator with arguments, setting the color space.
 * @param operator Operator to process.
 * @param arguments Arguments for the operator.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Processes an operator with arguments, setting the color space.
 * @param operator The operator to process.
 * @param arguments Operator arguments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
 * Processes operator with arguments, setting color space.
 * @param operator The operator to process.
 * @param arguments List of COSBase arguments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,52,"/**
 * Processes an operator with arguments, setting CMYK color space.
 * @param operator The operator to process.
 * @param arguments Operator arguments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Processes an operator with arguments, setting the color space.
 * @param operator The operator to process.
 * @param arguments Operator arguments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",49,60,"/**
 * Processes an operator with arguments, setting the color space.
 * @param operator The operator being processed.
 * @param arguments Operator arguments.
 */","* RG Set the stroking colour space to DeviceRGB and set the colour to
     * use for stroking operations.
     *
     * @param operator The operator that is being executed.
     * @param arguments List
     * @throws IOException If the color space cannot be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObject,org.apache.pdfbox.pdmodel.PDResources:getXObject(org.apache.pdfbox.cos.COSName),419,451,"/**
 * Retrieves a PDXObject by name, caching if available.
 * @param name COSName identifying the object
 * @return PDXObject or null if not found
 */","* Returns the XObject resource with the given name, or null if none exists.
     * 
     * @param name Name of the XObject resource.
     * @return the XObject with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size, handles stacking, subsetting, and GSUB.
* @param font The PDFont object to set.
* @param fontSize The font size to set.
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,getName,org.apache.pdfbox.pdmodel.PDAbstractContentStream:getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),637,649,"/**
 * Returns a COSName based on the color space type.
 * @param colorSpace The color space to evaluate.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies a graphics state and sets an operator.
* @param state The graphics state to apply.
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Fills a shading object, throwing exception if in text mode.
* @param shading The shading object to fill.
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Processes a property list, handling MCID or using resources.
 * @param tag COSName tag
 * @param propertyList Property list to process
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
 * Processes a tag and property list, marking content.
 * @param tag COSName tag to process.
 * @param propertyList Property list associated with the tag.
 */
","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image The image to draw.
 * @param x, y Position. width, height Dimensions.
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image using the provided matrix, throws exception if in text mode.
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object. Throws exception if in text mode.
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayXObject,"org.apache.pdfbox.multipdf.Overlay:createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.multipdf.PDFCloneUtility)",501,530,"/**
 * Creates a form XObject with overlay content and applies transformations.
 * @param page The PDF page.
 * @param layoutPage Overlay layout page.
 * @return COSName representing the created XObject.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",306,326,"/**
 * Creates an image form and adds it to the PDF structure.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev6,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",426,515,"/**
* Encrypts passwords and permissions, storing them in encryption dictionary.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev234(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",517,560,"/**
* Encrypts a document with owner/user passwords and permissions.
* @param ownerPassword Owner password for encryption.
* @param userPassword User password for encryption.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidth(int),155,182,"/**
* Gets character width based on code, using font dictionary or fallback.
* @param code The character code to look up.
* @return The width of the character, or a default value.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(java.lang.String),279,297,"/**
* Checks if a content group matches the given group name.
* @param groupName The name of the content group to match.
* @return True if a matching group is found, false otherwise.
*/","* Indicates whether <em>at least one</em> optional content group with this name is enabled.
     * There may be disabled optional content groups with this name even if this function returns
     * true.
     *
     * @param groupName the group name
     * @return true if at least one group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isGroupEnabled,org.apache.pdfbox.rendering.PDFRenderer:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),448,452,"/**
* Checks if content group is valid based on document properties.
* @param group The optional content group to validate.
* @return True if valid; false otherwise.
*/
","* Indicates whether an optional content group is enabled.
     * @param group the group
     * @return true if the group is enabled",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addFirst,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),93,98,"/**
* Adds a new child outline item, processing it via m1, m2, and m3.
*/","* Adds the given node to the top of the children list.
     * 
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addLast,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),79,84,"/**
 * Adds a new child to the outline, processing it via m1, m2, and m3.
 * @param newChild The PDOutlineItem to add and process.
 */
","* Adds the given node to the bottom of the children list.
     *
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,checkValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:checkValue(java.lang.String),378,387,"/**
 * Validates the input value against allowed options.
 * @param value The value to validate.
 * @throws IllegalArgumentException if value is invalid.
 */
","* Checks value.
     *
     * @param value Name of radio button to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByOption,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByOption(java.lang.String),412,439,"/**
* Processes a value, updating widgets based on options.
* Throws IllegalArgumentException if option/widget counts mismatch.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOpenAction,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOpenAction(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",849,892,"/**
* Copies OpenAction from srcCatalog to dstCatalog, handling errors.
* Clones the action and adds it to the destination catalog.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createDictionaryClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createDictionaryClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",413,533,"/**
* Processes a COSBase object, potentially cloning or mapping.
* @param src Source COSBase object.
* @return Processed COSBase object or null if processing fails.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,fixDestinations,org.apache.pdfbox.multipdf.Splitter:fixDestinations(org.apache.pdfbox.pdmodel.PDDocument),160,185,"/**
* Updates destinations in a document, replacing pages if found.
*/","* Replace the page destinations, if the source and destination pages are in the target
     * document. This must be called after all pages (and its annotations) are processed.
     *
     * @param destinationDocument",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,indexOfPageTree,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:indexOfPageTree(org.apache.pdfbox.cos.COSDictionary),138,158,"/**
* Finds the page tree and inserts the page.
* @param pageDict The page dictionary.
* @return Page index in the tree, or -1 if not found.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLabels(),620,624,"/**
 * Retrieves page labels dictionary. Returns null if not found.
 */","* Returns the page labels descriptor of the document.
     *
     * @return the page labels descriptor of the document.
     * @throws IOException If there is a problem retrieving the page labels.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",56,69,"/**
 * Creates a PaintContext for axial shading. Returns black on error.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a RadialShadingContext or a transparent black context.
 * @param cm ColorModel, deviceBounds, userBounds, xform, hints
 * @return PaintContext object
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",51,55,"/**
 * Constructs a GouraudShadingContext with given parameters.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a PaintContext for Type1 shading.
 * @param cm ColorModel, deviceBounds, userBounds, xform, hints
 * @return PaintContext or a transparent color on error.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:generateNormalAppearance(),54,145,"/**
* Draws annotation link appearance content stream.
* Handles null values and validates QuadPoints against rectangle.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:generateNormalAppearance(),50,198,"/**
 * Updates annotation rectangle and appearance stream.
 * Handles various styles and edge adjustments.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocumentIfNecessary,org.apache.pdfbox.multipdf.Splitter:createNewDocumentIfNecessary(),704,715,"/**
* Sets the current destination document if needed.
* Uses m1, m2, destinationDocuments, pageDictMaps, annotDictMaps.
*/","* Helper method for creating new documents at the appropriate pages.
     *
     * @throws IOException If there is an error creating the new document.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteHeader,org.apache.pdfbox.pdfwriter.COSWriter:doWriteHeader(org.apache.pdfbox.cos.COSDocument),644,668,"/**
* Writes PDF header and comments to the document.
* Writes PDF/A header if m1() returns true.
*/","* This will write the header to the PDF document.
     *
     * @param doc The document to get the data from.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties),653,662,"/**
 * Sets OC properties and updates document version if needed.
 * @param ocProperties Optional content properties to set.
 */","* Sets the optional content properties dictionary. The document version is incremented to 1.5
     * if lower.
     *
     * @param ocProperties the optional properties dictionary",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildToUnicodeCMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildToUnicodeCMap(java.util.Map),124,179,"/**
* Writes a TO_UNICODE cmap stream based on GID to CID mapping.
* @param newGIDToOldCID Maps new GID to old CID, or null.
* @throws IOException if an I/O error occurs.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRoleMap(),758,766,"/**
 * Retrieves data from the root PDStructureTreeRoot, or an empty map.
 */","* Returns the role map.
     * 
     * @return the role map",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromStream,org.apache.pdfbox.pdfwriter.COSWriter:visitFromStream(org.apache.pdfbox.cos.COSStream),1391,1423,"/**
* Processes a COSStream object, potentially encrypting it.
* Handles stream writing and ensures resource cleanup.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromString,org.apache.pdfbox.pdfwriter.COSWriter:visitFromString(org.apache.pdfbox.cos.COSString),1425,1441,"/**
 * Writes COSString to output stream, encrypts if willEncrypt is true.
 * @param obj COSString object to write
 * @throws IOException if writing fails
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,"org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",1480,1593,"/**
* Initializes PDF document settings, handles encryption, and IDs.
* @param doc The PDF document to process.
* @param signInterface Signature interface.
*/","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     * @param signInterface class to be used for signing; {@code null} if external signing would be performed
     *                      or there will be no signing at all
     *
     * @throws IOException If an error occurs while generating the data.
     * @throws IllegalStateException If the document has an encryption dictionary but no protection
     * policy.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addObjectToPool,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addObjectToPool(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",100,157,"/**
 * Masks COS objects based on key and base object.
 * Returns the current base object or a masked key.
 */","* Adds the given {@link COSBase} to this pool, using the given {@link COSObjectKey} as it's referencable ID. This
     * method shall determine an appropriate key, for yet unregistered objects, to register them. Depending on the type
     * of object, it shall either be appended as-is or shall be appended to a compressed {@link COSWriterObjectStream}.
     *
     * @param key The {@link COSObjectKey} that shall be used as the {@link COSBase}s ID, if possible.
     * @param base The {@link COSBase}, that shall be registered in this pool.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,protect,org.apache.pdfbox.pdmodel.PDDocument:protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),1323,1345,"/**
 * Applies protection policy, ensuring correct security state.
 * @param policy ProtectionPolicy to apply; throws IOException if handler missing.
 */","* Protects the document with a protection policy. The document content will be really
     * encrypted when it will be saved. This method only marks the document for encryption. It also
     * calls {@link #setAllSecurityToBeRemoved(boolean)} with a false argument if it was set to true
     * previously and logs a warning.
     * <p>
     * Do not use the document after saving, because the structures are encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @see org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy
     * @see org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy
     *
     * @param policy The protection policy.
     * @throws IOException if there isn't any suitable security handler.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),322,412,"/**
 * Masks a PDDocument with encryption, generating a security dictionary.
 * @param doc The PDDocument to encrypt.
 * @throws IOException if an I/O error occurs.
 */","* Prepare the document for encryption.
     *
     * @param doc The document that will be encrypted.
     *
     * @throws IOException If there is an error while encrypting.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getNormalizedPath(int),540,569,"/**
 * Creates a GeneralPath based on the given code, using OTF or fallback.
 * @param code input code for path generation
 * @return GeneralPath object or a default path if generation fails.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getGlyphName,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getGlyphName(int),306,314,"/**
 * Converts a code to a string representation using parent's method.
 * @param code Integer code to convert.
 * @return String representation or "".notdef"" if conversion fails.
 */
","* Returns the name of the glyph with the given character code. This is done by looking up the
     * code in the parent font's ToUnicode map and generating a glyph name from that.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToGID(int),249,333,"/**
 * Maps a character code to a glyph ID, handling embedded/non-embedded modes.
 */","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID
     * @throws IOException if the mapping could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacSubtype(),179,183,"/**
* Retrieves MAC subtype from params dictionary, or null if absent.
*/","* Get the mac subtype.
     *
     * @return The mac subtype.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacCreator(),209,213,"/**
* Retrieves the MAC creator from parameters, or null if absent.
*/","* Get the mac Creator.
     *
     * @return The mac Creator.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacResFork(),239,243,"/**
* Retrieves MAC value from parameters dictionary, or null.
*/","* Get the mac ResFork.
     *
     * @return The mac ResFork.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getCIDFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",494,544,"/**
 * Creates a CIDFontMapping based on font type and descriptors.
 * Returns a CIDFontMapping object, or uses a fallback font.
 */","* Finds a CFF CID-Keyed font with the given PostScript name, or a suitable substitute, or null.
     * This method can also map CJK fonts via their CIDSystemInfo (ROS).
     * 
     * @param fontDescriptor FontDescriptor
     * @param cidSystemInfo the CID system info, e.g. ""Adobe-Japan1"", if any.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(),164,167,"/**
* Calls m1 with default DecodeOptions.
* @return COSInputStream object
* @throws IOException if an I/O error occurs
*/
","* Returns a new InputStream which reads the decoded stream data.
     * 
     * @return InputStream containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),186,189,"/**
 * Delegates stream creation to the underlying stream.
 * @param options Decode options to use.
 * @return COSInputStream object.
 */
",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreams(java.util.Map),303,373,"/**
 * Processes object streams, updating offsets and handling security.
 * @param xrefTable Map of COSObjectKey to Long, updated with offsets.
 */","* Brute force search for all objects streams of a pdf.
     * 
     * @param xrefTable the cross reference table of the document
     * 
     * @throws IOException if something went wrong",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectStreamObject,"org.apache.pdfbox.pdfparser.COSParser:parseObjectStreamObject(long,org.apache.pdfbox.cos.COSObjectKey)",621,658,"/**
 * Retrieves a COSBase object from an object stream by key.
 * @param objstmObjNr Object stream number
 * @param key COSObjectKey to retrieve
 * @return COSBase object or null if not found
 */","* Parse the object with the given key from the object stream with the given number.
     * 
     * @param objstmObjNr the number of the offset stream
     * @param key the key of the object to be parsed
     * @return the parsed object
     * @throws IOException if something went wrong when parsing the object",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefObjStream,"org.apache.pdfbox.pdfparser.XrefParser:parseXrefObjStream(long,boolean)",265,286,"/**
* Parses a COSDictionary and resolves XRefStream, returns PREV.
* @param objByteOffset Offset of the object, used for resolution.
* @param isStandalone Whether the object is standalone.
* @return Long value of PREV from the COSDictionary.
*/","* Parses an xref object stream starting with indirect object id.
     * 
     * @return value of PREV item in dictionary or <code>-1</code> if no such item exists",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContents,org.apache.pdfbox.pdmodel.PDPage:getContents(),221,230,"/**
 * Returns an InputStream for reading content, or empty if null.
 */","* Returns the content stream(s) of this page as a single input stream.
     *
     * @return An InputStream, never null. Multiple content streams are concatenated and separated
     * with a newline. An empty stream is returned if the page doesn't have any content stream.
     * @throws IOException If the stream could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForStreamParsing,org.apache.pdfbox.pdmodel.PDPage:getContentsForStreamParsing(),232,257,"/**
* Reads content stream, decoding if Flate encoded.
* Returns a RandomAccessRead or a buffer if decoding fails.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",70,73,"/**
 * Constructs a PDCIDFontType2 with a parent font.
 * @param fontDictionary Font dictionary.
 * @param parent Parent PDType0Font.
 */
","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @throws IOException if the font could not be read",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getCIDFont(),673,676,"/**
* Creates a PDCIDFontType2 object using given parameters.
*/",* Returns the descendant CIDFont.,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadUnicodeCmap,org.apache.pdfbox.pdmodel.font.PDFont:loadUnicodeCmap(),134,172,"/**
 * Retrieves the CMap, falling back to identity if invalid.
 * Returns null if no ToUnicode exists or an error occurs.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontTypeFromFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontTypeFromFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",214,258,"/**
 * Determines FontType based on font descriptor and type.
 * @param fontDescriptor Font dictionary.
 * @param fontType Font type name.
 * @return FontType object or null if not recognized.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContents,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContents(),76,80,"/**
 * Returns an InputStream backed by the result of m1().
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContents,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContents(),157,161,"/**
 * Returns an InputStream based on the result of m1().
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContents,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContents(),174,180,"/**
 * Returns an InputStream for random access content, or null.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDType0Font:getPositionVector(int),491,496,"/**
 * Delegates to descendantFont.m1 and applies a scaling factor.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCMD,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary),2148,2185,"/**
 * Determines visibility based on content membership and policy.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenAndVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenAndVisibilityExpression(org.apache.pdfbox.cos.COSArray),2211,2238,"/**
* Checks if any element in the array hides a feature.
* Iterates through array elements, returning true if hidden.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenNotVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenNotVisibilityExpression(org.apache.pdfbox.cos.COSArray),2269,2288,"/**
 * Checks a COSArray based on its structure and contents.
 * Returns true if the array structure is valid.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,createAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:createAnnotation(org.apache.pdfbox.cos.COSBase),106,168,"/**
 * Creates a PDAnnotation based on the annotation dictionary.
 * @param base COSBase object representing the annotation.
 * @throws IOException if the annotation type is unknown.
 */","* Create the correct annotation from the base COS object.
     *
     * @param base The COS object that is the annotation.
     * @return The correctly typed annotation object, never null.
     *
     * @throws IOException If the annotation type is unknown.",,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)",1480,1496,"/**
 * Recursively clones sub-entries within a PDF tree structure.
 * @param cloner Utility for cloning PDF objects.
 * @param parentTreeEntry The current tree entry to process.
 * @param objMapping Mapping of COSDictionary to COSDictionary.
 */",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeViewerPreferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",894,936,"/**
* Copies viewer preferences from source to destination catalog.
* @param destCatalog Destination catalog to update preferences.
* @param srcCatalog Source catalog to copy preferences from.
*/",,,,True,13
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:generateNormalAppearance(),55,155,"/**
 * Updates annotation rectangle and appearance stream.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),86,96,"/**
 * Draws a rectangle with adjusted dimensions.
 * @param rd The rectangle to draw.
 */","* Creates a cloudy border for a rectangular annotation.
     * The rectangle is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     * <p>
     * This can be used for Square and FreeText annotations. However, this does
     * not produce the text and the callout line for FreeTexts.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyEllipseImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyEllipseImpl(double,double,double,double)",743,935,"/**
 * Adjusts polygon boundaries and generates a series of points.
 * @param leftOrig Original left boundary.
 * @param bottomOrig Original bottom boundary.
 * @param rightOrig Original right boundary.
 * @param topOrig Original top boundary.
 */",* Cloudy ellipse implementation.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveGlyphHeight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveGlyphHeight(org.apache.pdfbox.pdmodel.font.PDFont,int)",979,1019,"/**
 * Retrieves the glyph width for a given character code from a font.
 * @param font The PDFont object.
 * @param code The character code.
 * @return Glyph width or -1 if not found.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",79,83,"/**
 * Calls the multi-arg constructor with null for color and fill.
 * @param drawer The drawer to use.
 * @param pattern The tiling pattern.
 * @param xform The affine transform.
 */
","* Creates a new colored tiling Paint, i.e. one that has its own colors.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,create,"org.apache.pdfbox.rendering.TilingPaintFactory:create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",53,71,"/**
 * Retrieves a TilingPaint, caching it for reuse.
 * @param pattern Tiling pattern.
 * @param colorSpace Color space.
 * @param color Color.
 * @param xform Affine transform.
 * @return TilingPaint object.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearanceEntryAsContentStream,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry,boolean)",492,507,"/**
 * Creates a PDAppearanceContentStream from an appearance entry.
 * @param appearanceEntry The appearance entry.
 * @param compress Whether to compress the stream.
 * @return A PDAppearanceContentStream object.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawImage(),365,369,"/**
* Returns a buffered image by applying m3 to m1 via m2.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(),579,582,"/**
* Calls m1 with default parameters.
* Returns a BufferedImage or throws IOException.
*/","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(),347,351,"/**
* Delegates mask retrieval to SampledImageReader.
* Returns a BufferedImage or throws IOException.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",120,125,"/**
* Constructs a PDPageContentStream with default PDStream.
* @param document Document to add to.
* @param sourcePage Page to add content to.
*/
","* Create a new PDPage content stream.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @param resetContext Tell if the graphic context should be reset. This is only relevant when
     * the appendContent parameter is set to {@link AppendMode#APPEND}. You should use this when
     * appending to an existing stream, because the existing stream may have changed graphic
     * properties (e.g. scaling, rotation).
     * @throws IOException If there is an error writing to the page contents.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayStream,"org.apache.pdfbox.multipdf.Overlay:createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",532,564,"/**
 * Creates a COSStream for overlaying content onto a page.
 * @param page The page to overlay onto.
 * @param layoutPage Layout page data.
 * @param xObjectId COSName representing the overlay object.
 * @return COSStream containing the overlay instructions.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getCropBox,org.apache.pdfbox.pdmodel.PDPage:getCropBox(),442,453,"/**
 * Retrieves the crop rectangle from the page tree.
 * Returns a PDRectangle or a default rectangle.
 */","* A rectangle, expressed in default user space units, defining the visible region of default user space. When the
     * page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
     * 
     * @return the cropbox of the page",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeMarkInfo,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",950,966,"/**
* Merges mark information from srcCatalog to destCatalog.
* Copies mark flags from srcMark to destMark.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Calls m3 with inlineImage, x, y, and values from inlineImage.
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws a PDF inline image at specified coordinates.
 * @param inlineImage Inline image object.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified coordinates.
 * @param inlineImage Inline image object.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified coordinates with given dimensions.
 * @param inlineImage Inline image object.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified coordinates with given dimensions.
 * @param inlineImage Inline image object to draw.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.w3c.dom.Element),130,314,"/**
 * Creates a FDFAnnotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if required attributes are missing
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting data from the element.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",61,106,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream, parameters, options.
 * @return DecodeResult object.
 */",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,decode,"org.apache.pdfbox.filter.FlateFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",35,48,"/**
 * Decodes a Flate-encoded stream, applies predictor, returns DecodeResult.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,decode,"org.apache.pdfbox.filter.LZWFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",64,72,"/**
 * Decodes an input stream to an output stream with parameters.
 * @param encoded Input stream to decode.
 * @param decoded Output stream for decoded data.
 * @param parameters COSDictionary containing decoding parameters.
 * @param index Index for decoding.
 * @return DecodeResult object.
 */
",* {@inheritDoc},,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(int),454,458,"/**
* Recursively processes a COSDictionary node.
* @param index Index used for navigating the structure.
*/","* Removes the page with the given index from the page tree.
     * @param index zero-based page index",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.pdmodel.PDPage),465,468,"/**
* Calls m2 with the result of page.m1().
* @param page The page object to process.
*/
","* Removes the given page from the page tree.
     *
     * @param page The page to remove.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addPage,org.apache.pdfbox.pdmodel.PDDocument:addPage(org.apache.pdfbox.pdmodel.PDPage),240,244,"/**
 * Processes a PDF page by calling m1, m2, and m3.
 * @param page The PDF page to process.
 */
","* This will add a page to the document. This is a convenience method, that will add the page to the root of the
     * hierarchy and set the parent of the page to the root.
     * 
     * @param page The page to add to the document.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertBefore,"org.apache.pdfbox.pdmodel.PDPageTree:insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",530,552,"/**
* Inserts a page before an orphan page in a PDF page tree.
*/","* Insert a page before another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param nextPage the page that is to be after the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertAfter,"org.apache.pdfbox.pdmodel.PDPageTree:insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",562,584,"/**
* Inserts a new page before a specified previous page in the document.
*/","* Insert a page after another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param prevPage the page that is to be before the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:toString(),105,109,"/**
* Returns a masked string combining ""mcid="" and the result of m1().
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),635,647,"/**
* Processes a marked content object.
* @param markedContent The marked content to process.
* @throws IllegalArgumentException if MCID is invalid.
*/","* Appends a marked-content sequence kid.
     * 
     * @param markedContent the marked-content sequence with the MCID.
     * @throws IllegalArgumentException if the mcid is negative or doesn't exist.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:toString(),68,72,"/**
* Concatenates the results of m1, m2, and m3 with hyphens.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,fetchCMapUCS2,org.apache.pdfbox.pdmodel.font.PDType0Font:fetchCMapUCS2(),360,407,"/**
 * Retrieves and caches a CMap for the font, handling predefined/CJK.
 */",* Fetches the corresponding UCS2 CMap if the font's CMap is predefined.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",128,135,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document The document to add the image to.
 * @param byteArray Image data as bytes.
 * @param number Identifier for the image.
 * @return PDImageXObject created from the image data.
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)",190,197,"/**
 * Reads a mask image from a file.
 * @param document PDDocument, the document to add to.
 * @param file File, the file containing the mask image.
 * @param number int, the mask image number.
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the TIFF file which contains a suitable CCITT compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isVisibleAnnotation,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isVisibleAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),319,332,"/**
 * Checks if annotation has valid appearance stream and bbox.
 * @param annotation The annotation to check.
 * @return True if valid, false otherwise.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List),108,123,"/**
 * Processes display values; sorts if valid, updates COS.
 * @param displayValues List of strings to process.
 */","* This will set the display values - the 'Opt' key.
     * 
     * <p>
     * The Opt array specifies the list of options in the choice field either
     * as an array of text strings representing the display value 
     * or as an array of a two-element array where the
     * first element is the export value and the second the display value.
     * </p>
     * <p>
     * To set both the export and the display value use {@link #setOptions(List, List)}
     * </p> 
     *
     * @param displayValues List containing all possible options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List,java.util.List)",143,177,"/**
* Creates and sets options based on export/display values.
* @param exportValues List of export values.
* @param displayValues List of display values.
*/","* This will set the display and export values - the 'Opt' key.
     *
     * <p>
     * This will set both, the export value and the display value
     * of the choice field. If either one of the parameters is null or an 
     * empty list is supplied the options will
     * be removed.
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the
     * number of items in the list differ.
     * </p>
     *
     * @see #setOptions(List)
     * @param exportValues List containing all possible export values.
     * @param displayValues List containing all possible display values.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSelectedOptionsIndex(java.util.List),244,259,"/**
 * Sets the 'I' attribute of COS object based on input values.
 * @param values List of integers to set, or null/empty to clear.
 */","* This will set the indices of the selected options - the 'I' key.
     * <p>
     * This method is preferred over {@link #setValue(List)} for choice fields which
     * <ul>
     *  <li>do support multiple selections</li>
     *  <li>have export values with the same value</li>
     * </ul>
     * <p>
     * Setting the index will set the value too.
     *
     * @param values List containing the indices of all selected options.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isMultiLine,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isMultiLine(),681,684,"/**
* Checks if field is a PDTextField and its m1() method returns true.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,shallComb,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:shallComb(),698,706,"/**
 * Checks if a field meets specific criteria for processing.
 */","* Determine if the appearance shall provide a comb output.
     * 
     * <p>
     * May be set only if the MaxLen entry is present in the text field dictionary
     * and if the Multiline, Password, and FileSelect flags are clear.
     * If set, the field shall be automatically divided into as many equally spaced positions,
     * or combs, as the value of MaxLen, and the text is laid out into those combs.
     * </p>
     * 
     * @return the comb state",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPage,org.apache.pdfbox.pdmodel.PDDocument:getPage(int),1236,1239,"/**
 * Retrieves a page from the document.
 * @param pageIndex Index of the page to retrieve.
 * @return The requested PDPage object.
 */
","* Returns the page at the given 0-based index.
     * <p>
     * This method is too slow to get all the pages from a large PDF document
     * (1000 pages or more). For such documents, use the iterator of
     * {@link PDDocument#getPages()} instead.
     *
     * @param pageIndex the 0-based page index
     * @return the page at the given index.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument),42,46,"/**
 * Initializes the PageExtractor with a PDF document.
 * @param sourceDocument The PDF document to extract pages from.
 */
","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float,boolean)",106,115,"/**
 * Creates a PDFPageable with specified document, orientation, DPI, etc.
 */","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero, and optionally be centered.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,computeLabels,"org.apache.pdfbox.pdmodel.common.PDPageLabels:computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler,int)",257,287,"/**
 * Generates page labels using a handler, iterating through ranges.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,notifyChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:notifyChanged(),185,191,"/**
 * Calls m2 on m1 if m1 is not null, passing 'this' as argument.
 */","* Notifies the attribute object change listeners about a change in this
     * attribute object.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",145,297,"/**
 * Decrypts a PDF document using the provided encryption details.
 * @param encryption Encryption object containing decryption info.
 * @param documentIDArray Document ID array.
 * @param decryptionMaterial Decryption material to use.
 */","* Prepares everything to decrypt the document.
     *
     * Only if decryption of single objects is needed this should be called.
     *
     * @param encryption  encryption dictionary
     * @param documentIDArray  document id
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType0Font:getDisplacement(int),498,509,"/**
 * Calculates a scaled font size based on code.
 * Returns scaled value or delegates to super if m1() fails.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSpaceWidth,org.apache.pdfbox.pdmodel.font.PDFont:getSpaceWidth(),553,605,"/**
 * Determines the width of the space character for a font.
 * Returns the calculated width as a float.
 */","* Determines the width of the space character. This is very important for text extraction.
     *
     * @return the width of the space character",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,calculateWidth,"org.apache.pdfbox.pdmodel.interactive.PlainText$Line:calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",258,276,"/**
* Calculates the total width of words in a PDF font.
* @param font PDFont object
* @param fontSize font size
* @return Total width of words
*/
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedCombAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",717,770,"/**
* Renders text content for a PDF appearance stream.
* @param contents Stream to write content to
* @param appearanceStream Appearance stream data
*/","* Generate the appearance for comb fields.
     * 
     * @param contents the content stream to write to
     * @param appearanceStream the appearance stream used
     * @param font the font to be used
     * @param fontSize the font size to be used
     * @throws IOException",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",814,868,"/**
* Renders list box options with specified font, size, and justification.
* @param contents Content stream to write to.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFixedPitch(),75,78,"/**
 * Calls m1 with FLAG_FIXED_PITCH and returns the result.
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSerif(),95,98,"/**
 * Delegates to m1 with FLAG_SERIF. Returns the result of m1.
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSymbolic(),115,118,"/**
* Delegates to m1 with FLAG_SYMBOLIC.
* Returns the result of the delegation.
*/
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isScript(),135,138,"/**
* Delegates to m1 with FLAG_SCRIPT. Returns the result.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isNonSymbolic(),155,158,"/**
* Delegates to m1 with FLAG_NON_SYMBOLIC.
* Returns the result of the delegation.
*/
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isItalic(),175,178,"/**
* Delegates to m1 with FLAG_ITALIC.
* @return True if m1(FLAG_ITALIC) returns true.
*/
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isAllCap(),195,198,"/**
* Delegates to m1 with FLAG_ALL_CAP. Returns the result.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSmallCap(),215,218,"/**
* Delegates to m1 with FLAG_SMALL_CAP. Returns the result.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isForceBold(),235,238,"/**
* Calls m1 with FLAG_FORCE_BOLD and returns the result.
*/","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFixedPitch(boolean),85,88,"/**
* Calls m1 with FLAG_FIXED_PITCH and the provided flag.
* @param flag boolean value to pass to m1
*/
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSerif(boolean),105,108,"/**
* Calls m1 with FLAG_SERIF and the provided boolean flag.
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSymbolic(boolean),125,128,"/**
 * Calls m1 with FLAG_SYMBOLIC and the provided flag value.
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setScript(boolean),145,148,"/**
 * Calls m1 with FLAG_SCRIPT and the provided flag.
 * @param flag boolean value to pass to m1
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setNonSymbolic(boolean),165,168,"/**
* Calls m1 with FLAG_NON_SYMBOLIC and the provided flag.
* @param flag boolean value to pass to m1
*/
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalic(boolean),185,188,"/**
* Calls m1 with FLAG_ITALIC and the provided boolean flag.
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAllCap(boolean),205,208,"/**
 * Calls m1 with FLAG_ALL_CAP and the provided boolean flag.
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSmallCap(boolean),225,228,"/**
 * Calls m1 with FLAG_SMALL_CAP and the provided flag.
 * @param flag boolean value passed to m1
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setForceBold(boolean),245,248,"/**
 * Calls m1 with FLAG_FORCE_BOLD, passing the given flag.
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getPattern,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor),117,128,"/**
 * Retrieves a pattern by color.
 * @param color The color of the pattern to retrieve.
 * @return PDAbstractPattern object or throws IOException if not found.
 */
","* Returns the pattern for the given color.
     * 
     * @param color color containing a pattern name
     * @return pattern for the given color
     * @throws java.io.IOException if the pattern name was not found.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),227,269,"/**
 * Processes a transparency group, applying graphics state changes.
 * @param group The PDTransparencyGroup to process.
 * @throws IOException If an I/O error occurs.
 */","* Processes a transparency group stream.
     * 
     * @param group transparency group to be processed
     * @throws IOException if the transparency group cannot be processed",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processType3Stream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",278,310,"/**
* Renders a character process with the given matrix.
* @param charProc Character process object
* @param textRenderingMatrix Transformation matrix
*/","* Processes a Type 3 character stream.
     *
     * @param charProc Type 3 character procedure
     * @param textRenderingMatrix the Text Rendering Matrix
     * @throws IOException if there is an error reading or parsing the character content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processAnnotation,"org.apache.pdfbox.contentstream.PDFStreamEngine:processAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",319,370,"/**
 * Processes annotation appearance, adjusts matrix, and sets bbox.
 * @param annotation PDAnnotation object
 * @param appearance PDAppearanceStream object
 */","* Process the given annotation with the specified appearance stream.
     *
     * @param annotation The annotation containing the appearance stream to process.
     * @param appearance The appearance stream to process.
     * @throws IOException If there is an error reading or parsing the appearance content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",396,442,"/**
* Sets up tiling pattern graphics state, handling color and matrix.
*/","* Process the given tiling pattern. Allows the pattern matrix to be overridden for custom
     * rendering.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @param patternMatrix the pattern matrix, may be overridden for custom rendering.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStream,org.apache.pdfbox.contentstream.PDFStreamEngine:processStream(org.apache.pdfbox.contentstream.PDContentStream),496,523,"/**
 * Processes a PDF content stream, handling graphics state and bbox.
 */","* Process a content stream.
     *
     * @param contentStream the content stream
     * @throws IOException if there is an exception while processing the stream",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,prepareNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),315,337,"/**
 * Creates a PDAppearanceStream for a widget, applying rotation.
 * @param widget The annotation widget.
 * @return The generated PDAppearanceStream.
 */
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,updateParentOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:updateParentOpenCount(int),284,305,"/**
 * Adjusts the outline node's position based on delta.
 * Modifies parent node's m5 and m6 if it exists.
 */","* The count parameter needs to be updated when you add, remove, open or close outline items.
     *
     * @param delta The amount to update by.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveNonRootField,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveNonRootField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",196,219,"/**
* Retrieves a PDField, creating it if not already present.
* @param acroForm Form object, parent dictionary, field map
* @return PDField object or null if not found/creatable
*/
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,fromDictionary,"org.apache.pdfbox.pdmodel.interactive.form.PDField:fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Creates a PDField instance using PDFieldFactory.
* @param form The form.
* @param field The field dictionary.
* @param parent The parent non-terminal field.
*/
","* Creates a COSField subclass from the given COS field. This is for reading fields from PDFs.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created, or null if root.
     * @return a new PDField instance",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean)",121,125,"/**
 * Constructs a PDFPrintable with a default PDFRenderer.
 * @param document The PDF document to print.
 * @param scaling The scaling factor for printing.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String)",201,205,"/**
* Loads a PDF document with password, keystore, and alias.
* @param input PDF byte array
* @param password Password for encryption
* @return PDF document or null if loading fails
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",348,363,"/**
 * Creates a PDDocument from a file, password, keystore, alias.
 * @param file Input file.
 * @param password Password for decryption.
 * @return PDDocument object.
 * @throws IOException if an I/O error occurs.
 */
","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead),376,379,"/**
* Creates a PDDocument from a RandomAccessRead.
* @param randomAccessRead Input stream to read document from.
* @throws IOException if an I/O error occurs.
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF new streams.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",394,399,"/**
* Loads a PDF document.
* @param randomAccessRead Input stream for PDF data.
* @param streamCacheCreateFunction Cache creation function.
* @return PDF document object.
*/
","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",413,417,"/**
 * Loads a PDF document.
 * @param randomAccessRead Input stream for the PDF file.
 * @param password Password for encrypted PDF (optional).
 * @return PDF document or null if loading fails.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     *
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",432,437,"/**
* Loads a PDF document with optional password, keystore, and alias.
* @param randomAccessRead Input stream for PDF data.
* @param password Password for encrypted PDF.
* @param keyStore Keystore for decryption.
* @param alias Alias for keystore entry.
* @return PDDocument object.
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",453,457,"/**
 * Loads a PDF document.
 * @param read Input stream, password, cache function.
 * @return PDF document or null on failure.
 */
","* Parses a PDF.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.File),80,83,"/**
* Reads a file using a buffered reader and calls m1.
* @param file The file to be read.
* @throws IOException if an I/O error occurs.
*/
","* Reads the visual signature from the given file.
     *
     * @param file the file containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.InputStream),91,94,"/**
 * Reads from an InputStream using a buffer and calls m1.
 * @param is Input stream to read from.
 * @throws IOException if an I/O error occurs.
 */
","* Reads the visual signature from the given input stream.
     *
     * @param is the input stream containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.graphics.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,104,"/**
 * Processes an operator with operands, handling XObjects and forms.
 * @param operator The operator to process.
 * @param operands List of operands for the operator.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processResources,"org.apache.pdfbox.multipdf.Splitter:processResources(org.apache.pdfbox.pdmodel.PDResources,java.util.Map,java.util.Map,java.util.Set)",586,620,"/**
* Recursively processes resources, updating number trees and visited sets.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasTransparency,org.apache.pdfbox.rendering.PageDrawer:hasTransparency(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1611,1635,"/**
* Checks if a form contains a transparency group.
* Recursively checks nested forms.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasBlendMode,"org.apache.pdfbox.rendering.PageDrawer:hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",2025,2083,"/**
 * Checks if a transparency group requires a blend mode.
 * @param group The transparency group to check.
 * @param groupsDone Set of processed groups.
 * @return True if blend mode is required, false otherwise.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size, handles subsetting, and GSUB data.
* @param font The PDFont object to use.
* @param fontSize The font size to set.
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDFormContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Sets the font and size, handling font stacking and subsetting.
 */","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPageContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size, handles subsetting, and GSUB data.
* @param font The PDFont to set.
* @param fontSize The font size.
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size, handles subsetting and GSUB data.
* @param font The PDFont object to set.
* @param fontSize The font size.
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color space based on the provided color.
* @param color The color object containing color space info.
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color, handling color spaces and values.
* @param color The color object to process.
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies a graphics state and sets a graphics state operator.
* @param state The graphics state to apply.
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDFormContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
 * Applies a graphics state and sets an operator.
 * @param state The graphics state to apply.
 * @throws IOException if an I/O error occurs.
 */
","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPageContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies graphics state and sets an operator.
* @param state The graphics state to apply.
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPatternContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Applies graphics state and sets operator to SET_GRAPHICS_STATE_PARAMS.
* @param state The graphics state to apply.
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Adds a shading fill operation, throws exception in text mode.
* @param shading The shading object to add.
* @throws IOException if an I/O error occurs.
*/
","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDFormContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Adds a shading fill operation to the PDF content.
* @param shading The shading object to be added.
* @throws IOException if an I/O error occurs.
*/
","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPageContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Fills a PDF shading object. Throws exception if in text mode.
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPatternContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading fill operation, throwing exception if in text mode.
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Processes a property list, handling MCID or resources.
 * @param tag COSName tag associated with the property list
 * @param propertyList Property list to process
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Processes a property list, handling MCID or using resources.
 * @param tag COSName tag
 * @param propertyList Property list to process
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Processes a property list, handling MCID or using resources.
* @param tag COSName tag
* @param propertyList Property list to process
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Processes a property list, handling MCID or using resources.
 * @param tag COSName tag
 * @param propertyList Property list to process
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Processes a tag and property list, updating internal state.
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Processes a tag and property list, invoking internal methods.
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Processes a tag and property list, invoking internal methods.
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Processes a tag and property list, invoking internal methods.
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image The image to draw.
 * @param x, y Position. width, height Dimensions.
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image The image to draw.
 * @param x, y Position. width, height Dimensions.
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image The image to draw.
 * @param x, y Position. width, height Dimensions.
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image at specified coordinates with given dimensions.
* @param image The image to draw.
* @param x, y Position. width, height Dimensions.
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image using the provided matrix.
 * @param image The image to draw.
 * @param matrix Transformation matrix for the image.
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image using the provided matrix.
 * @param image The image to draw.
 * @param matrix Transformation matrix for the image.
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image onto the PDF canvas using the given matrix.
 * @param image The image to draw.
 * @param matrix Transformation matrix for the image.
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image onto the PDF canvas using the given matrix.
 * @param image The image to draw.
 * @param matrix Transformation matrix for the image.
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object. Throws exception if in text mode.
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDFormContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object. Throws exception if in text mode.
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPageContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object. Throws exception if in text mode.
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPatternContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object. Throws exception if in text mode.
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),365,424,"/**
 * Sets encryption details for the PDF document.
 * @param document The PDF document to encrypt.
 */","* Prepare document for encryption.
     *
     * @param document The document to encrypt.
     *
     * @throws IOException If there is an error accessing data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType3Font:getDisplacement(int),149,153,"/**
* Masks data based on the given code.
* @param code integer code for masking
* @return Vector object containing masked data
*/
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setDefaultValue(java.lang.String),217,221,"/**
* Calls m1 with the given value and updates COS data.
* @param value String value to be processed.
*/","* Sets the default value.
     *
     * @param value Name of option to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(java.lang.String),149,166,"/**
 * Processes a value: calls m1, then either m5 or m4, and finally m6.
 */","* Set the selected option given its name, and try to update the visual appearance.
     * 
     * @param value Name of option to select
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the value is not a valid option.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",374,388,"/**
* Processes COSBase objects, handling arrays and dictionaries.
* Returns processed object or original if neither array/dict.
*/","* Creates a clone of the source.
         *
         * @param src source dictionary or array.
         * @param dstParent for the /P entry; parameter needed because arrays don't keep a parent.
         * @param currentPageDict used to remember whether we have a page parent somewhere or not.
         * Starts with null.
         * @return a clone, or null if source is null or if there is no clone because it belongs to a
         * different page or to no page.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,retrievePageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:retrievePageNumber(),119,135,"/**
 * Extracts an integer value from an array element.
 * Returns -1 if the array is empty or invalid.
 */","* Returns the page number for this destination, regardless of whether this is a page number or
     * a reference to a page.
     *
     * @see org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem
     * @return the 0-based page number, or -1 if the destination type is unknown.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importOcProperties,org.apache.pdfbox.multipdf.LayerUtility:importOcProperties(org.apache.pdfbox.pdmodel.PDDocument),309,330,"/**
* Copies optional content properties from source to target document.
*/","* Imports OCProperties from source document to target document so hidden layers can still be
     * hidden after import.
     *
     * @param srcDoc The source PDF document that contains the /OCProperties to be copied.
     * @throws IOException If an I/O error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",101,122,"/**
* Processes TTF subset data, mapping GID to CID and performing transformations.
*/",* Rebuild a font subset.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStandardStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStandardStructureType(),603,612,"/**
 * Retrieves and potentially casts a value based on type.
 */","* Returns the standard structure type, the actual structure type is mapped
     * to in the role map.
     * 
     * @return the standard structure type",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument),1463,1466,"/**
 * Calls m1 with the provided document and a null options object.
 * @param doc The PDF document to process.
 */","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream),1105,1114,"/**
 * Writes PDF document to output stream, using COSWriter.
 * @param output The OutputStream to write the PDF to.
 * @throws IOException if an I/O error occurs.
 */
","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     * <p>
     * Other usages of this method are for experienced users only. You will usually never need it. It is useful only if
     * you are required to keep the current revision and append the changes. A typical use case is changing a signed
     * file without invalidating the signature.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Another problem with page-based modifications can occur if the page tree isn't flat: there
     * won't be an closed update path from the catalog to the page. To fix this, add code like this:
     * <pre>{@code
     * COSDictionary parent = page.getCOSObject().getCOSDictionary(COSName.PARENT);
     * while (parent != null)
     * {
     *     parent.setNeedToBeUpdated(true);
     *     parent = parent.getCOSDictionary(COSName.PARENT);
     * }
     * }</pre>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,"org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream,java.util.Set)",1142,1151,"/**
 * Writes COS objects to an OutputStream.
 * @param output Output stream to write to
 * @param objectsToWrite COS dictionaries to write
 * @throws IOException if an I/O error occurs
 */","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. This allows to include objects even if there is no path of objects
     * that have {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only dictionaries
     * are supported; if you need to update other objects classes, then add their parent dictionary.
     * <p>
     * This method is for experienced users only. You will usually never need it. It is useful only if you are required
     * to keep the current revision and append the changes. A typical use case is changing a signed file without
     * invalidating the signature. To know which objects are getting changed, you need to have some understanding of the
     * PDF specification, and look at the saved file with an editor to verify that you are updating the correct objects.
     * You should also inspect the page and document structures of the file with PDFDebugger.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addStructure,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addStructure(org.apache.pdfbox.cos.COSBase),165,191,"/**
* Processes a COSBase object, potentially recursing.
* Handles streams, dictionaries, arrays, and objects.
*/","* Attempts to find yet unregistered streams and dictionaries in the given structure.
     *
     * @param current The object to be added for compressing.
     * @throws IOException Shall be thrown, if compressing the object failed.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getPath(int),316,338,"/**
 * Creates a GeneralPath based on the given code.
 * @param code The code to use for path creation.
 * @return A GeneralPath object.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:hasGlyph(int),346,363,"/**
 * Checks a character's presence based on code, using different methods.
 * @param code The character code to check.
 * @return True if character is present, false otherwise.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getWidthFromFont(int),408,429,"/**
* Calculates glyph width based on font type, transforms, and returns.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getWidthFromFont(int),343,354,"/**
 * Calculates glyph width based on code.
 * @param code glyph code
 * @return glyph width in font units
 */
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPathFromOutlines(int),491,497,"/**
 * Retrieves a GeneralPath from a Type2CharString by glyph ID.
 * @param code glyph code; returns GeneralPath or null if not found.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:hasGlyph(int),499,503,"/**
 * Checks if m1 returns a non-zero value.
 * @param code Input code to pass to m1.
 * @return True if m1's result is non-zero, false otherwise.
 */
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,toTextString,org.apache.pdfbox.cos.COSStream:toTextString(),363,376,"/**
 * Reads a string from an input stream.
 * Returns the string or """" on exception.
 */","* Returns the contents of the stream as a PDF ""text string"".
     * 
     * @return the PDF string representation of the stream content",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",63,139,"/**
 * Decodes a JBIG2 image stream.
 * @param encoded Input stream, parameters, options.
 * @return DecodeResult object containing parameters.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createCombinedContentStream,org.apache.pdfbox.multipdf.Overlay:createCombinedContentStream(org.apache.pdfbox.cos.COSBase),340,357,"/**
* Concatenates content streams into a single COSStream.
* @param contents COSBase containing content streams
* @return COSStream containing concatenated content
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(),181,184,"/**
* Delegates to the wrapped COSInputStream's m1() method.
* @return COSInputStream object returned by the wrapped stream
*/
","* This will get a stream that can be read from.
     * 
     * @return An input stream that can be read from.
     * @throws IOException If an IO error occurs during reading.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFont:readCIDToGIDMap(),399,419,"/**
* Reads CID-to-GID mapping from COS stream.
* @return int[] CID-to-GID mapping or null if not found.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,collectPatches,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:collectPatches(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",61,155,"/**
 * Extracts patch data from a COS stream.
 * @param xform AffineTransform for coordinate transformation.
 * @param matrix Matrix for coordinate transformation.
 * @param controlPoints Control points for patch generation.
 * @return List of Patch objects or empty list on error.
 */","* Create a patch list from a data stream, the returned list contains all the patches contained in the data stream.
     *
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return the obtained patch list
     * @throws IOException when something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",90,209,"/**
 * Extracts shaded triangles from a COS stream.
 * @return List of ShadedTriangle objects.
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",86,155,"/**
* Extracts shaded triangles from a COS stream.
* @param xform AffineTransform for coordinate transformation.
* @param matrix Matrix for coordinate transformation.
* @return List of ShadedTriangle objects.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromStream,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromStream(org.apache.pdfbox.cos.COSStream),110,116,"/**
 * Reads all bytes from a COSStream into a byte array.
 * @param stream COSStream to read from
 * @return Byte array containing stream data
 */",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(org.apache.pdfbox.filter.DecodeOptions),919,923,"/**
* Delegates to the wrapped InputStream m1().m2(options).
* @param options DecodeOptions for the stream.
* @return InputStream or null on error.
*/
",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,rebuildTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:rebuildTrailer(java.util.Map),820,859,"/**
 * Extracts and configures the COSDictionary trailer from the xref table.
 * @param xrefTable Map of COSObjectKeys to Long values.
 * @return COSDictionary representing the trailer.
 */","* Rebuild the trailer dictionary if startxref can't be found.
     *
     * @param xrefTable the cross reference table of the pdf
     * 
     * @return the rebuild trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectDynamically,"org.apache.pdfbox.pdfparser.COSParser:parseObjectDynamically(org.apache.pdfbox.cos.COSObjectKey,boolean)",465,496,"/**
* Resolves a COSBase object, handling offsets/objstms.
* @param objKey COS object key
* @param requireExistingNotCompressedObj flag
* @return COSBase object or null if not found.
*/","* Parse the object for the given object key.
     * 
     * @param objKey key of object to be parsed
     * @param requireExistingNotCompressedObj if <code>true</code> the object to be parsed must be defined in xref
     * (comment: null objects may be missing from xref) and it must not be a compressed object within object stream
     * (this is used to circumvent being stuck in a loop in a malicious PDF)
     * 
     * @return the parsed object (which is also added to document object)
     * 
     * @throws IOException If an IO error occurs.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXref,"org.apache.pdfbox.pdfparser.XrefParser:parseXref(org.apache.pdfbox.cos.COSDocument,long)",90,198,"/**
* Resolves the trailer dictionary, handling XRefStm and Prev loops.
* @param document The document to update.
* @param startXRefOffset Starting offset for XRef resolution.
* @return The resolved COSDictionary trailer.
*/","* Parses cross reference tables.
     * 
     * @param document the corresponding COS document of the pdf.
     * @param startXRefOffset start offset of the first table
     * 
     * @return the trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createDescendantFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",368,386,"/**
 * Creates a PDCIDFont based on the dictionary's subtype.
 * @param dictionary COSDictionary containing font information.
 * @param parent Parent PDType0Font object.
 * @throws IOException if the font type is invalid.
 */","* Creates a new PDCIDFont instance with the appropriate subclass.
     *
     * @param dictionary descendant font dictionary
     * @return a PDCIDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCG,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),2123,2146,"/**
* Checks if a property list should be masked based on its type.
* @param propertyList The property list to check.
* @return True if the list should be masked, false otherwise.
*/",,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(org.apache.pdfbox.pdmodel.interactive.annotation.AnnotationFilter),766,789,"/**
* Filters annotations on a page based on the provided filter.
* @param annotationFilter Filter to apply to annotations
* @return List of filtered PDAnnotation objects
*/","* This will return a list of the annotations for this page.
     *
     * @param annotationFilter the annotation filter provided allowing to filter out specific annotations
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getReferencedObject(),92,128,"/**
 * Retrieves a COSObjectable from a dictionary, returning null if failed.
 */","* Gets a higher-level object for the referenced object.
     * Currently this method may return a {@link PDAnnotation},
     * a {@link PDXObject} or <code>null</code>.
     * 
     * @return a higher-level object for the referenced object",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getInReplyTo(),188,192,"/**
 * Creates a PDAnnotation from a COSDictionary, or null if absent.
 */","* This will retrieve the annotation to which this one is ""In Reply To"" the actual relationship
     * is specified by the RT entry.
     *
     * @return the other annotation or null if there is none.
     * @throws IOException if there is an error creating the other annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getParent(),94,114,"/**
 * Retrieves the parent PDAnnotationMarkup.
 * Returns null if the parent is not a PDAnnotationMarkup or error occurs.
 */","* This will retrieve the markup annotation which this popup relates to.
     *
     * @return The parent markup annotation.",,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",1398,1419,"/**
 * Recursively clones objects from the number tree.
 * @param cloner Utility for cloning PDF objects.
 * @param numberTreeAsMap Map of number tree objects.
 * @param objMapping Mapping of COSDictionaries.
 */",* Update the Pg and Obj references to the new (merged) page.,,,True,14
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:generateNormalAppearance(),55,96,"/**
 * Draws the annotation's border, handling cloudy effects or a rectangle.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyEllipse,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle),135,145,"/**
 * Processes a rectangle, extracts coordinates, and performs actions.
 */","* Creates a cloudy border for a Circle annotation.
     * The ellipse is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveCapHeight,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveCapHeight(org.apache.pdfbox.pdmodel.font.PDFont),965,967,"/**
* Gets a font's horizontal scaling factor.
* @param font The PDF font object.
* @return The horizontal scaling factor as a float.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveDescent,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveDescent(org.apache.pdfbox.pdmodel.font.PDFont),974,976,"/**
* Calculates the difference in font metrics for 'y' and 'a'.
* Uses m2 to get font metrics, returns a float value.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(boolean),157,161,"/**
 * Creates a PDAppearanceContentStream.
 * @param compress Whether to compress the stream.
 * @return PDAppearanceContentStream object.
 */
","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to.
     * 
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",80,87,"/**
 * Creates a content stream on a page, overwrites existing content.
 * @param document The document to add the content to.
 * @param sourcePage The page to add content to.
 */
","* Create a new PDPage content stream. This constructor overwrites all existing content streams
     * of this page.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",101,105,"/**
 * Creates a content stream, appending to a page in a PDF document.
 * @param document PDF document, source page, append mode, compress flag
 */
","* Create a new PDPage content stream. If the appendContent parameter is set to
     * {@link AppendMode#APPEND}, you may want to use
     * {@link #PDPageContentStream(PDDocument, PDPage, PDPageContentStream.AppendMode, boolean, boolean)}
     * instead, with the fifth parameter set to true.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @throws IOException If there is an error writing to the page contents.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayPage,"org.apache.pdfbox.multipdf.Overlay:overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.multipdf.PDFCloneUtility)",452,464,"/**
 * Adds a resource array to the PDF page.
 * @param page The PDF page to modify.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,initPage,org.apache.pdfbox.contentstream.PDFStreamEngine:initPage(org.apache.pdfbox.pdmodel.PDPage),120,131,"/**
 * Sets up graphics state for a PDF page.
 * @param page The PDF page to configure.
 */",* Initializes the stream engine for the given page.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBBox,org.apache.pdfbox.pdmodel.PDPage:getBBox(),381,385,"/**
 * Returns the PDRectangle calculated by m1().
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBleedBox,org.apache.pdfbox.pdmodel.PDPage:getBleedBox(),479,483,"/**
 * Gets the bleed box rectangle from the page, or a default.
 */","* A rectangle, expressed in default user space units, defining the region to which the contents
     * of the page should be clipped when output in a production environment. The default is the
     * CropBox.
     * 
     * @return The BleedBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTrimBox,org.apache.pdfbox.pdmodel.PDPage:getTrimBox(),508,512,"/**
 * Gets the trim box rectangle from the page, or a default.
 * @return PDRectangle representing the trim box.
 */","* A rectangle, expressed in default user space units, defining the intended dimensions of the
     * finished page after trimming. The default is the CropBox.
     * 
     * @return The TrimBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getArtBox,org.apache.pdfbox.pdmodel.PDPage:getArtBox(),538,542,"/**
* Gets the art box rectangle from the page.
* Returns default if art box is not present.
*/","* A rectangle, expressed in default user space units, defining the extent of the page's
     * meaningful content (including potential white space) as intended by the page's creator The
     * default is the CropBox.
     * 
     * @return The ArtBox attribute.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedCropBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage),327,340,"/**
 * Returns the crop box, rotated if the page rotation is 90 or 270.
 * @param page The page to get the crop box from.
 * @return The crop box rectangle.
 */
","* This will find the CropBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The CropBox at this level in the hierarchy.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,fillBeadRectangles,org.apache.pdfbox.text.PDFTextStripper:fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage),386,421,"/**
 * Extracts and adjusts rectangles from page beads.
 * @param page The PDF page containing the beads.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Delegates to overloaded method with additional parameters.
* @param inlineImage Image object
* @param x X coordinate
* @param y Y coordinate
*/
","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Delegates to overloaded method with additional parameters.
* @param inlineImage Image to process
* @param x X coordinate
* @param y Y coordinate
*/
","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Calls m3 with inline image and coordinates, using its default values.
 * @param inlineImage Image to process
 * @param x x coordinate
 * @param y y coordinate
 */
","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Calls m3 with inline image and coordinates, using its default values.
 * @param inlineImage The inline image object.
 * @param x The x coordinate.
 * @param y The y coordinate.
 */
","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.w3c.dom.Element),65,77,"/**
 * Constructs a FDFAnnotationCaret from an Element.
 * @param element The Element to initialize from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.w3c.dom.Element),66,79,"/**
 * Creates a FDF annotation circle from an Element.
 * Parses interior color if present.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDF annotation file attachment from a PDF element.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.w3c.dom.Element),71,100,"/**
 * Creates a FDF annotation free text object from an Element.
 * Parses attributes like justification, default appearance, etc.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.w3c.dom.Element),77,113,"/**
 * Parses ink gestures from an Element and sets the ink list.
 * @param element The Element containing the ink gestures.
 * @throws IOException if 'gesture' element is missing.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.w3c.dom.Element),68,155,"/**
 * Creates a FDFAnnotationLine from an Element, parsing attributes.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.w3c.dom.Element),74,101,"/**
 * Creates a FDF annotation link from an Element.
 * Extracts URI action from the element's XPath.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.w3c.dom.Element),73,85,"/**
 * Creates a FDF annotation polygon from an XML element.
 * Parses interior color from element attribute, if present.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.w3c.dom.Element),74,81,"/**
 * Creates a FDF annotation polyline from a PDF element.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDFAnnotationSound object from a PDF Element.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.w3c.dom.Element),67,80,"/**
 * Creates a FDF annotation square from a PDF element.
 * Parses interior color if present; initializes fringe.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.w3c.dom.Element),84,135,"/**
 * Creates a FDF annotation stamp from an Element, parsing appearance XML.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.w3c.dom.Element),65,84,"/**
 * Creates a FDF annotation text object from an Element.
 * Initializes subtype, icon, state, and state model attributes.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.w3c.dom.Element),57,77,"/**
 * Creates a FDFAnnotationTextMarkup from an Element.
 * Parses coords attribute and sets the coordinates.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,113,"/**
 * Decodes an input stream to an output stream with default options.
 * @param encoded Input stream to decode.
 * @param decoded Output stream for decoded data.
 * @param parameters COSDictionary for decoding parameters.
 * @param index Index of the stream.
 * @return DecodeResult object.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(int),668,671,"/**
 * Delegates page number to m1().m2() for processing.
 */","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     * 
     * @param pageNumber 0 based index to page number.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(org.apache.pdfbox.pdmodel.PDPage),656,659,"/**
* Applies a masked content to the given PDF page.
* @param page The PDF page to apply the mask to.
*/
","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     *
     * @param page The page to remove from the document.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,importPage,org.apache.pdfbox.pdmodel.PDDocument:importPage(org.apache.pdfbox.pdmodel.PDPage),698,716,"/**
* Creates a new page by importing the provided page.
* @param page The page to import.
* @return A new PDPage object.
*/","* This will import and copy the contents from another location. Currently the content stream is
     * stored in a scratch file. The scratch file is associated with the document. If you are adding
     * a page to this document from another document and want to copy the contents to this
     * document's scratch file then use this method otherwise just use the {@link #addPage addPage()}
     * method.
     * <p>
     * Unlike {@link #addPage addPage()}, this method creates a new PDPage object. If your page has
     * annotations, and if these link to pages not in the target document, then the target document
     * might become huge. What you need to do is to delete page references of such annotations. See
     * <a href=""http://stackoverflow.com/a/35477351/535646"">here</a> for how to do this.
     * <p>
     * Inherited (global) resources are ignored because these can contain resources not needed for
     * this page which could bloat your document, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-28"">PDFBOX-28</a> and related issues.
     * If you need them, call <code>importedPage.setResources(page.getResources());</code>
     * <p>
     * This method should only be used to import a page from a loaded document, not from a generated
     * document because these can contain unfinished parts, e.g. font subsetting information.
     *
     * @param page The page to import.
     * @return The page that was imported.
     *
     * @throws IOException If there is an error copying the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createTemplate(org.apache.pdfbox.pdmodel.PDPage),83,89,"/**
* Applies a page to a document and updates the PDF structure.
* @param page The PDPage to apply.
*/","* Creates a PDDocument and adds the page parameter to it and keeps this as a template in the PDF template
     * Structure.
     *
     * @param page the page to be added
     * @throws IOException if the document could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",107,111,"/**
 * Overloaded method to create PDImageXObject from byte array.
 * @param document PDDocument object
 * @param byteArray Image data as byte array
 * @return PDImageXObject created from the byte array
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",170,174,"/**
 * Loads an image from a file. Overloads m1 with default DPI.
 * @param document PDDocument object
 * @param file File containing the image
 * @return PDImageXObject representing the image
 */
","* Creates a new CCITT Fax compressed image XObject from the first image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage)}
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the  TIFF file which contains a suitable CCITT compressed image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.lang.String),374,383,"/**
* Sets a value associated with a COSName using internal methods.
* @param value The value to be set.
* @throws IOException if an I/O error occurs.
*/
","* Set the selected value of this field, and try to update the visual appearance.
     *
     * @param value The name of the selected item.
     * @throws IOException if the value could not be set",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,updateSelectedOptionsIndex,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:updateSelectedOptionsIndex(java.util.List,java.util.List)",474,486,"/**
* Collects indices of options matching values, sorts them, and processes.
*/",* Update the 'I' key based on values set.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSize,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",195,208,"/**
 * Retrieves PDF page dimensions and sets initial parameters.
 * @param document PDDocument object
 * @param page page number to extract dimensions from
 */","* Each page of document can be different sizes. This method calculates the page size based on
     * the page media box.
     * 
     * @param document
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IllegalArgumentException if the page argument is lower than 0.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,findDestinationPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument),228,274,"/**
 * Retrieves a PDPage based on a destination, or page number.
 * @param doc The PDF document.
 * @return The PDPage object, or null if not found.
 */","* This method will attempt to find the page in this PDF document that this outline points to.
     * If the outline does not point to anything then this method will return null. If the outline
     * is an action that is not a GoTo action then this method will also return null.
     *
     * @param doc The document to get the page from.
     *
     * @return The page that this outline will go to when activated or null if it does not point to
     * anything.
     * @throws IOException If there is an error when trying to find the page.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument),50,53,"/**
 * Creates a PDFPageable with auto orientation and other defaults.
 * @param document The PDFDocument to create the pageable from.
 */
","* Creates a new PDFPageable.
     *
     * @param document the document to print",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation)",61,64,"/**
 * Creates a PDFPageable with default settings.
 * @param document The PDF document.
 * @param orientation The page orientation.
 */
","* Creates a new PDFPageable with the given page orientation.
     *
     * @param document the document to print
     * @param orientation page orientation policy",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean)",74,77,"/**
 * Constructs a PDFPageable with default page count behavior.
 * @param document The PDF document.
 * @param orientation Page orientation.
 * @param showPageBorder Whether to show page border.
 */
","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)",89,93,"/**
 * Constructs a PDFPageable with default fit width.
 * @param document The PDF document.
 * @param orientation Page orientation.
 * @param showPageBorder Whether to show page border.
 * @param dpi Resolution in dots per inch.
 */
","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndicesByLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndicesByLabels(),208,214,"/**
 * Creates a map of labels to page indices from the document.
 * @return A map where keys are labels and values are page numbers.
 */
","* Returns a mapping with computed page labels as keys and corresponding
     * 0-based page indices as values. The returned map will contain at most as
     * much entries as the document has pages.
     * 
     * <p>
     * <strong>NOTE:</strong> If the document contains duplicate page labels,
     * the returned map will contain <em>less</em> entries than the document has
     * pages. The page index returned in this case is the <em>highest</em> index
     * among all pages sharing the same label.
     * </p>
     * 
     * @return a mapping from labels to 0-based page indices.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getLabelsByPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getLabelsByPageIndices(),223,235,"/**
 * Creates a string array mapping page indices to labels.
 * @return String array of page labels, size based on doc.m1()
 */","* Returns a mapping with 0-based page indices as keys and corresponding
     * page labels as values as an array. The array will have exactly as much
     * entries as the document has pages.
     * 
     * @return an array mapping from 0-based page indices to labels.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",156,162,"/**
* Updates based on old/new COS objects; calls m2 if m1 succeeds.
*/","* Notifies the attribute object change listeners if the attribute is changed.
     * 
     * @param oldBase old value
     * @param newBase new value",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,showGlyph,"org.apache.pdfbox.text.LegacyPDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",160,314,"/**
* Renders a character, adjusting for font and matrix transformations.
* @param textRenderingMatrix Matrix for text rendering
* @param font PDFont object
* @param code Character code
* @param displacement Vector representing displacement
*/","* Called when a glyph is to be processed. The heuristic calculations here were originally
     * written by Ben Litchfield for PDFStreamEngine.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getLines,"org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",159,237,"/**
* Breaks text into lines based on font, size, and width.
* @param font PDFont object
* @param fontSize font size
* @param width maximum line width
* @return List of Line objects representing text lines
*/","* Break the paragraph into individual lines.
         *
         * @param font the font used for rendering the text.
         * @param fontSize the fontSize used for rendering the text.
         * @param width the width of the box holding the content.
         * @return the individual lines.
         * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getSymbolicFlag,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getSymbolicFlag(),260,268,"/**
 * Returns the result of m1().m2() if m1() is not null; otherwise, null.
 */","* Returns the value of the symbolic flag, allowing for the fact that the result may be indeterminate.
     * 
     * @return the value of the isSymbolic flag form the font descriptor",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFallbackFontName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),231,307,"/**
 * Generates a font name based on the provided font descriptor.
 * @param fontDescriptor Font descriptor object.
 * @return String representing the derived font name.
 */",* Attempts to find a good fallback based on the font descriptor.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.type1.Type1Font),110,127,"/**
 * Creates a PDFontDescriptor from a Type1Font.
 * @param type1 The Type1Font to create the descriptor from.
 * @return The generated PDFontDescriptor.
 */
","* Returns a PDFontDescriptor for the given PFB.
     * 
     * @throws IOException if the font bounding box isn't available",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.afm.FontMetrics),134,153,"/**
 * Creates a PDFontDescriptor based on the provided FontMetrics.
 * @param metrics FontMetrics object containing font information
 * @return PDFontDescriptor object
 */
","* Returns a PDFontDescriptor for the given AFM. Used only for Standard 14 fonts.
     *
     * @param metrics AFM",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,createFontDescriptor,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont),182,279,"/**
 * Creates a PDFontDescriptor from a TrueTypeFont.
 * @param ttf The TrueTypeFont to process.
 * @return A PDFontDescriptor object.
 */",* Creates a new font descriptor dictionary for the given TTF.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getPaint,org.apache.pdfbox.rendering.PageDrawer:getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor),349,402,"/**
 * Creates a Paint object based on the provided PDColor.
 * @param color The PDColor to create a Paint from.
 * @return A Paint object or transparent color if an error occurs.
 */","* Returns an AWT paint for the given PDColor.
     * 
     * @param color The color to get a paint for. This can be an actual color or a pattern.
     * @return an AWT paint for the given PDColor
     * 
     * @throws IOException if the AWT paint could not be created",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,intersectShadingBBox,"org.apache.pdfbox.rendering.PageDrawer:intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",865,883,"/**
* Updates area with shading pattern's bounding box.
* @param color The PDColor object.
* @param area The Area object to update.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),169,172,"/**
* Processes a PDTransparencyGroup, calling m1 for handling.
*/","* Shows a transparency group from the content stream.
     *
     * @param form transparency group (form) XObject
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processSoftMask,org.apache.pdfbox.contentstream.PDFStreamEngine:processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),199,219,"/**
* Applies transparency settings to a PDTransparencyGroup.
* Sets matrix and device gray properties for rendering.
*/","* Processes a soft mask transparency group stream.
     * 
     * @param group transparency group used for the soft mask
     * @throws IOException if the transparency group cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showType3Glyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",867,875,"/**
 * Renders a character using the given matrix and font.
 * @param textRenderingMatrix Matrix for rendering.
 * @param font Font to use.
 * @param code Character code.
 * @param displacement Displacement vector.
 */
","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showAnnotation,org.apache.pdfbox.contentstream.PDFStreamEngine:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),450,457,"/**
 * Processes a PDF annotation by handling its appearance stream.
 * @param annotation The PDF annotation to process.
 */","* Shows the given annotation.
     *
     * @param annotation An annotation on the current page.
     * @throws IOException If an error occurred reading the annotation",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",380,384,"/**
* Calls m2 with tiling pattern's bounds.
* @param tilingPattern Pattern, color, and color space.
*/","* Process the given tiling pattern.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showForm,org.apache.pdfbox.contentstream.PDFStreamEngine:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),180,191,"/**
* Processes a form, potentially invoking m3 if form has content.
* @param form The PDFormXObject to process.
* @throws IOException if an I/O error occurs.
*/
","* Shows a form from the content stream.
     *
     * @param form form XObject
     * @throws IOException if the form cannot be processed",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,switchNodeCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:switchNodeCount(),264,269,"/**
* Adjusts state by negating the value returned from m1()
* and applying it to m2 and m3.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,handleAnnotations,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:handleAnnotations(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.PDResources,java.util.List,java.util.List,java.util.Map)",115,144,"/**
 * Processes annotations to extract and add fields to the list.
 * Annotations are widgets or fields.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFields(),381,402,"/**
* Extracts PDField objects from the document's fields array.
* Returns a list of PDField objects.
*/","* This will return all of the documents root fields.
     * 
     * A field might have children that are fields (non-terminal field) or does not
     * have children which are fields (terminal fields).
     * 
     * The fields within an AcroForm are organized in a tree structure. The documents root fields 
     * might either be terminal fields, non-terminal fields or a mixture of both. Non-terminal fields
     * mark branches which contents can be retrieved using {@link PDNonTerminalField#getChildren()}.
     * 
     * @return A list of the documents root fields, never null. If there are no fields then this
     * method returns an empty list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,findKid,"org.apache.pdfbox.pdmodel.interactive.form.PDField:findKid(java.lang.String[],int)",331,352,"/**
* Recursively finds a PDField by name within a field's kids.
* @param name Field name array, nameIndex current index
* @return Matching PDField or null if not found
*/","* This will find one of the child elements. The name array are the components of the name to search down the tree
     * of names. The nameIndex is where to start in that array. This method is called recursively until it finds the end
     * point based on the name array.
     * 
     * @param name An array that picks the path to the field.
     * @param nameIndex The index into the array.
     * @return The field at the endpoint or null if none is found.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getChildren(),125,153,"/**
* Retrieves child PDF fields from a COS array.
* Returns a list of PDField objects found.
*/","* Returns this field's children. These may be either terminal or non-terminal fields.
     *
     * @return the list of child fields. Be aware that this list is <i>not</i> backed by the
     * children of the field, so adding or deleting has no effect on the PDF document until you call
     * {@link #setChildren(java.util.List) setChildren()} with the modified list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPrintable,org.apache.pdfbox.printing.PDFPageable:getPrintable(int),235,246,"/**
 * Creates a PDFPrintable object for a given page index.
 * @param i page index; throws IndexOutOfBoundsException if invalid.
 * @return PDFPrintable object representing the specified page.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float)",105,108,"/**
 * Constructs a PDFPrintable with default landscape setting.
 * @param document The PDF document to print.
 * @param scaling The scaling factor.
 * @param showPageBorder Whether to show the page border.
 * @param dpi Dots per inch for printing.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String)",182,185,"/**
* Loads a PDF document from byte array with password.
* @param input PDF data as bytes
* @param password Password for the PDF document
* @return PDDocument object representing the PDF
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",270,274,"/**
 * Loads a PDF document from a file.
 * @param file The file to load.
 * @param streamCacheCreateFunction Cache creation function.
 * @return A PDDocument object.
 */","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String)",288,291,"/**
 * Loads a PDF document from a file, using the provided password.
 * @param file The PDF file to load.
 * @param password Password for the PDF document.
 * @return A PDDocument object representing the loaded PDF.
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",307,312,"/**
 * Loads a PDF document from a file.
 * @param file Input file.
 * @param password Password for encryption.
 * @return PDF document.
 */
","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",327,331,"/**
* Loads a PDF document with password and keystore.
* @param file PDF file, password, keystore, alias.
* @return PDDocument object.
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties),111,114,"/**
* Delegates to another method with the signature properties' value.
* @param visSignatureProperties Properties object to extract value from.
* @throws IOException if an I/O error occurs.
*/
","* Reads the visual signature from the given visual signature properties
     *
     * @param visSignatureProperties the <code>PDVisibleSigProperties</code> object containing the
     * visual signature
     *
     * @throws IOException when something went wrong during parsing",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:generateNormalAppearance(),51,326,"/**
 * Renders annotation appearance content stream.
 * Handles line drawing, font rendering, and line endings.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color space and values based on the provided color.
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color space based on the provided color.
* @param color The color to set the stroking color space to.
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color space based on the provided color.
* @param color The PDColor object defining the color.
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
 * Sets the stroking color and related operators based on the color.
 */","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color, handling color spaces and values.
* @param color The color object to process.
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a PDColor object, handling color space and values.
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color object, handling color spaces and values.
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Processes a color, handling color spaces and values.
* @param color The color object to process.
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setOpacity,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",271,281,"/**
 * Sets graphics state opacity if less than 1.
 * @param contentStream Content stream to modify.
 * @param opacity Opacity value (0.0 - 1.0).
 */
",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCircles,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCircles(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",219,261,"/**
 * Draws annotation content, including scaling, state, and circles.
 * @param annotation The PDAnnotationText object.
 * @param contentStream Content stream for drawing.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawRightArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawRightArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",458,497,"/**
 * Draws annotation content to the content stream.
 * @param annotation PDAnnotationText object
 * @param contentStream Content stream to draw to
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawComment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawComment(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",499,547,"/**
* Renders annotation content to the content stream.
* Applies graphics state and transforms for rendering.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createArrayClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createArrayClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",390,411,"/**
* Processes COSBase elements from src, applying m1 and returning a COSArray.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",165,228,"/**
* Creates a PDFormXObject from a page, applying transformations.
* @param sourceDoc Source document.
* @param page Page to create form from.
* @return PDFormXObject representing the form.
*/","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param page the page in the source PDF document to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.cos.COSDocument),1449,1453,"/**
 * Delegates processing to handle a PDF document.
 * @param doc The COSDocument to process.
 * @throws IOException if an I/O error occurs.
 */
","* This will write the pdf document.
     *
     * @throws IOException If an error occurs while generating the data.
     * @param doc The document to write.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1044,1060,"/**
 * Saves the document to the output stream with compression.
 * @param output Output stream to save to.
 * @param compressParameters Compression parameters.
 */","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,<init>,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",74,90,"/**
 * Initializes a COSWriterCompressionPool with a document and parameters.
 * @param document PDDocument to compress
 * @param parameters Compression parameters, or default if null
 */
","* <p>
     * Constructs an object that can be used to compress the contents of a given {@link PDDocument}. It provides the
     * means to:
     * </p>
     * <ul>
     * <li>Compress the COSStructure of the document, by streaming {@link COSBase}s to compressed
     * {@link COSWriterObjectStream}s</li>
     * </ul>
     *
     * @param document The document, that shall be compressed.
     * @param parameters The configuration of the compression operations, that shall be applied.
     * @throws IOException Shall be thrown if a compression operation failed.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addElements,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addElements(java.util.Iterator),193,224,"/**
 * Processes COSBase elements, handling arrays, dictionaries, and objects.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getNormalizedPath(int),340,344,"/**
 * Delegates to m1 to create a GeneralPath based on the code.
 * @param code Input code value.
 * @return A GeneralPath object.
 */
",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPath(int),438,453,"/**
 * Creates a GeneralPath based on code, using OTF or TTF glyph data.
 * @param code Glyph code to use for path generation.
 * @return GeneralPath object or an empty path if not found.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getStringOrStream,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getStringOrStream(org.apache.pdfbox.cos.COSBase),936,954,"/**
 * Extracts string value from COSBase, returns """" if null/unsupported.
 */","* Get a text or text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getValue(),234,261,"/**
* Extracts a value from a field based on its type.
* Returns the value or null if the field is null.
* Throws IOException for unknown field types.
*/","* This will get the value for the field. The return type will either be: <ul>
     * <li>String: for Checkboxes, Radio Button, Textfields</li>
     * <li>List&lt;String&gt;: for a Choice Field</li>
     * </ul>
     * @return The value of the field.
     * @throws IOException If there is an error getting the value.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:getRichText(),743,758,"/**
 * Retrieves a value from a COSBase object, handling different types.
 * Returns the value as a String or null if not found/invalid.
 */","* This will set the rich text that is associated with this field.
     *
     * @return The rich text XHTML stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getBefore(),75,90,"/**
 * Retrieves a string value from a COS object, or null if not found.
 */","* This will get the javascript that is executed before the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getAfter(),107,122,"/**
 * Extracts string value from COSBase, returns null if not string/stream.
 */","* This will get the javascript that is executed after the import.
     *
     * @return Some javascript code.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,getAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:getAction(),77,92,"/**
 * Extracts string data from a COS action.
 * Returns string or null if data type is unexpected.
 */",* @return The Javascript Code.,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getRichContents(),134,149,"/**
 * Extracts string value from COSBase, returns null if not string/stream.
 */","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getStringOrStream,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getStringOrStream(org.apache.pdfbox.cos.COSBase),258,269,"/**
 * Extracts string value from COSBase, returns """" if not string/stream.
 */","* Get a text as text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",141,146,"/**
 * Decodes an input stream to an output stream with default options.
 * @param encoded Input stream to decode.
 * @param decoded Output stream for decoded data.
 * @param parameters COSDictionary for decoding parameters.
 * @param index Index for the stream.
 * @return DecodeResult object.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createLayoutPage,org.apache.pdfbox.multipdf.Overlay:createLayoutPage(org.apache.pdfbox.pdmodel.PDPage),316,326,"/**
 * Creates a LayoutPage from a PDPage.
 * @param page The PDPage to create the LayoutPage from.
 * @return A new LayoutPage object.
 */","* Create a LayoutPage object from given PDPage object.
     *
     * @return
     * @throws IOException",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,toByteArray,org.apache.pdfbox.pdmodel.common.PDStream:toByteArray(),400,406,"/**
* Reads byte array from input stream.
* @return byte array or null if an error occurs.
*/","* This will copy the stream into a byte array.
     * 
     * @return The byte array of the filteredStream.
     * @throws IOException if an I/O error occurs.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSamples,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:getSamples(),379,418,"/**
 * Returns the samples array, initializing it if null.
 * Reads sample values from input stream and populates the array.
 */","* Get all sample values of this function.
         *
         * @return an array with all samples.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,loadICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:loadICCProfile(),164,224,"/**
 * Initializes color space and profile, handling alternate options.
 * Throws IOException if initialization fails.
 */","* Load the ICC profile, or init alternateColorSpace color space.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,initJPXValues,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:initJPXValues(),730,757,"/**
* Initializes JPX filter values if not already initialized.
* Reads stream data, decodes, and sets internal flags/values.
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(),913,917,"/**
* Delegates to the wrapped InputStream's m2() method.
* @return InputStream obtained from the wrapped InputStream.
* @throws IOException if an I/O error occurs.
*/
",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",247,266,"/**
* Calculates bounding rectangle of triangles.
* @param xform AffineTransform object
* @param matrix Matrix object
* @param controlPoints int
* @return Rectangle2D object or null if no triangles
*/",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",51,58,"/**
 * Constructs a PatchMeshesShadingContext.
 * @param shading Shading type, color model, transform, matrix, bounds, control points
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,58,"/**
 * Creates a Type4 shading context.
 * @param shading The Type4 shading object.
 * @param deviceBounds Rectangle defining device bounds.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,56,"/**
 * Creates a Type 5 shading context.
 * @param shading The Type 5 shading object.
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromPacket,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromPacket(org.apache.pdfbox.cos.COSArray),91,105,"/**
 * Extracts byte arrays from COS streams within a COS array.
 * @param cosArray Input COS array containing COS streams.
 * @return Byte array containing data from extracted streams.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,dereferenceCOSObject,org.apache.pdfbox.pdfparser.COSParser:dereferenceCOSObject(org.apache.pdfbox.cos.COSObject),428,444,"/**
 * Parses a COS object and associates it with a key.
 * @param obj COSObject to parse; returns parsed COSBase.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,retrieveTrailer,org.apache.pdfbox.pdfparser.COSParser:retrieveTrailer(),241,295,"/**
 * Retrieves the COSDictionary for the trailer, rebuilding if needed.
 * @return COSDictionary object or null if an error occurs.
 */","* Read the trailer information and provide a COSDictionary containing the trailer information.
     * 
     * @return a COSDictionary containing the trailer information
     * @throws IOException if something went wrong",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shouldSkipAnnotation,org.apache.pdfbox.rendering.PageDrawer:shouldSkipAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1587,1609,"/**
 * Determines if an annotation should be masked based on conditions.
 * @param annotation The annotation to evaluate.
 * @return True if the annotation should be masked, false otherwise.
 */",,,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showForm,org.apache.pdfbox.rendering.PageDrawer:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1640,1654,"/**
* Processes a form, potentially saving/restoring the linePath.
* Checks m2(form.m1()) first, then m3() before super call.
*/",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginMarkedContentSequence,"org.apache.pdfbox.rendering.PageDrawer:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",2088,2104,"/**
 * Handles nested hidden OCGs based on properties.
 * @param tag COSName tag
 * @param properties COSDictionary properties
 */
",* {@inheritDoc},,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(),752,755,"/**
 * Retrieves annotations matching the default filter.
 * @return List of annotations.
 * @throws IOException if an I/O error occurs.
 */
","* This will return a list of the annotations for this page.
     *
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True,15
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:generateNormalAppearance(),54,119,"/**
 * Renders the circle annotation with stroke or cloudy border.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(),141,144,"/**
* Calls m1(false). Provides a default implementation.
* @return PDAppearanceContentStream object.
*/
","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to. It will be
     * uncompressed.
     *
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,appendFormAsLayer,"org.apache.pdfbox.multipdf.LayerUtility:appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",248,287,"/**
 * Creates an optional content group (layer) on the page.
 * @param layerName Name of the new optional content group.
 * @return The created PDOptionalContentGroup object.
 */","* Places the given form over the existing content of the indicated page (like an overlay).
     * The form is enveloped in a marked content section to indicate that it's part of an
     * optional content group (OCG), here used as a layer. This optional group is returned and
     * can be enabled and disabled through methods on {@link PDOptionalContentProperties}.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before calling this method to make
     * sure that the graphics state is reset.
     *
     * @param targetPage the target page
     * @param form the form to place
     * @param transform the transformation matrix that controls the placement of your form. You'll
     * need this if your page has a crop box different than the media box, or if these have negative
     * coordinates, or if you want to scale or adjust your form.
     * @param layerName the name for the layer/OCG to produce
     * @return the optional content group that was generated for the form usage
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,processPages,org.apache.pdfbox.multipdf.Overlay:processPages(org.apache.pdfbox.pdmodel.PDDocument),390,429,"/**
 * Processes each page of a PDF document, adding content.
 * @param document The PDF document to process.
 * @throws IOException if an I/O error occurs.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processPage,org.apache.pdfbox.contentstream.PDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),152,161,"/**
 * Processes a PDF page.
 * Executes m1, then m3 if page.m2() returns true.
 */","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws IOException if there is an error accessing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processChildStream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)",478,488,"/**
* Processes a content stream for a page.
* Sets currentPage to null after processing.
*/","* Process a child stream of the given page. Cannot be used with {@link #processPage(PDPage)}.
     *
     * @param contentStream the child content stream
     * @param page the page to be used for processing
     * @throws IOException if there is an exception while processing the stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPageFormat,org.apache.pdfbox.printing.PDFPageable:getPageFormat(int),177,233,"/**
 * Creates a PageFormat object based on the given page index.
 * @param pageIndex index of the page
 * @return PageFormat object
 */","* {@inheritDoc}
     * 
     * Returns the actual physical size of the pages in the PDF file. May not fit the local printer.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a FDF annotation highlight from a PDF element.
 * @param element The PDF element to create the highlight from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDFAnnotationSquiggly from an Element.
 * @param element The Element to initialize from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDFAnnotationStrikeOut from a given Element.
 * Sets the subtype name to SUBTYPE.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs an FDFAnnotationUnderline from a COS element.
 * @param element The COS element representing the annotation.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.util.List),401,424,"/**
* Processes a list of values, updating COS objects or clearing them.
* @param values List of strings to process.
*/","* Sets the entry ""V"" to the given values. Requires {@link #isMultiSelect()} to be true.
     * 
     * @param values the list of values
     * @throws IOException if the appearance couldn't be generated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",101,105,"/**
 * Creates a PDVisibleSignDesigner with a document, image stream, and page.
 */","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param imageStream Image as a stream.
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException If we can't read, flush, or can't close stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",150,154,"/**
 * Constructs a PDVisibleSignDesigner with a document, image, and page.
 */","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromRandomAccessRead,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead,int)",177,185,"/**
 * Extracts a page from a PDF document.
 * @param documentSource Source for PDF data.
 * @param page Page number to extract.
 */
",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,format,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:format(),144,190,"/**
 * Processes text content paragraphs, wrapping lines or adjusting offsets.
 */","* Format the text block.
     * 
     * @throws IOException if there is an error writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateFontSize,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",890,958,"/**
 * Calculates appropriate font size based on content and rect.
 * @param font PDFont object
 * @param contentRect PDRectangle object
 * @return float font size
 */","* My ""not so great"" method for calculating the fontsize. It does not work superb, but it
     * handles ok.
     * 
     * @return the calculated font-size
     * @throws IOException If there is an error getting the font information.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDSimpleFont:readEncoding(),86,138,"/**
 * Determines and sets the encoding based on dictionary values.
 */","* Reads the Encoding from the Font dictionary or the embedded or substituted font file.
     * Must be called at the end of any subclass constructors.
     *
     * @throws IOException if the font file could not be read",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isFontSymbolic(),197,253,"/**
 * Determines if a font is symbol based on various conditions.
 * Returns Boolean indicating symbol status, null if undetermined.
 */","* Internal implementation of isSymbolic, allowing for the fact that the result may be indeterminate.
     * 
     * @return true if isSymbolic",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",314,335,"/**
 * Maps a base font or descriptor to a TrueTypeFont.
 * @param baseFont Base font name.
 * @param fontDescriptor Font descriptor object.
 * @return FontMapping object containing the TrueTypeFont.
 */","* Finds a TrueType font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param fontDescriptor FontDescriptor",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontBoxFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",343,364,"/**
 * Creates a FontMapping for the given base font and descriptor.
 * Uses fallback font if base font is not found.
 */","* Finds a font with the given PostScript name, or a suitable substitute, or null. This allows
     * any font to be substituted with a PFB, TTF or OTF.
     *
     * @param fontDescriptor the FontDescriptor of the font to find",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",56,103,"/**
 * Embeds a Type1 font into a PDF document using a PFB stream.
 * @param doc The PDF document.
 * @param dict The font dictionary.
 * @param pfbStream PFB stream for the font.
 * @param encoding Font encoding.
 */","* This will load a PFB to be embedded into a document.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param dict The Font dictionary to write to.
     * @param pfbStream The pfb input.
     * @throws IOException If there is an error loading the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),85,98,"/**
 * Creates a PDFont object from a base font.
 * @param baseFont The base font to use.
 */",* Constructor for Standard 14.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFont:loadFontDescriptor(),116,132,"/**
 * Retrieves the PDFontDescriptor from the dictionary or AFM.
 * @return PDFontDescriptor object or null if not found.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",70,114,"/**
 * Embeds a TrueType font into a PDF document, optionally as a subset.
 * @param document PDF document to embed into
 * @param dict COS dictionary for the font
 * @param ttf TrueType font to embed
 * @param embedSubset Whether to embed a subset of the font
 * @throws IOException if embedding is not permitted or unsupported
 */
",* Creates a new TrueType font for embedding.,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,buildFontFile2,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:buildFontFile2(java.io.InputStream),116,135,"/**
 * Parses a TTF stream, validates it, and prepares it for embedding.
 * @param ttfStream Input stream containing the TTF font data.
 * @throws IOException if an I/O error occurs or font is not embeddable.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showGlyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",828,839,"/**
 * Renders a character based on font type.
 * @param matrix Transformation matrix.
 * @param font PDFont object.
 * @param code Character code.
 * @param displacement Displacement vector.
 */","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,92,"/**
 * Processes an operator with arguments, handling form XObjects.
 * @param operator The operator to process.
 * @param arguments List of arguments for the operator.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,92,"/**
 * Processes an operator with arguments, extracting marked content.
 * @param operator The operator to process.
 * @param arguments List of arguments for the operator.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,openNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:openNode(),243,250,"/**
* Calls m2() if m1() returns false.
*/","* This will set this node to be open when it is shown in the viewer. By default, when a new node is created it will
     * be closed. This will do nothing if the node is already open.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,closeNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:closeNode(),256,262,"/**
 * Calls m2 if m1 returns true.
 */","* Close this node.
     *",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroFormDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",131,147,"/**
 * Processes an AcroForm and signature field.
 * Updates AcroForm state and dictionary.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:exportFDF(),151,172,"/**
 * Creates an FDF document. Populates it with fields from the PDF.
 * @return An FDFDocument object.
 * @throws IOException if an I/O error occurs.
 */","* This will export all FDF form data.
     *
     * @return An FDF document used to export the document.
     * @throws IOException If there is an error when exporting the document.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,xfaIsDynamic,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:xfaIsDynamic(),574,577,"/**
* Returns true if m1() is true and m2().m3() is true.
*/","* This will tell if the AcroForm is a dynamic XFA form.
     *
     * @return true if the AcroForm is a dynamic XFA form",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,enqueueKids,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField),108,129,"/**
 * Processes a field node and its children recursively.
 * Adds node to queue and set, processes child nodes if applicable.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:exportFDF(),100,116,"/**
 * Creates an FDFField object, populating it with data from other methods.
 * @return Populated FDFField object.
 */
",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean)",90,93,"/**
 * Constructs a PDFPrintable with default rasterization setting.
 * @param document The PDF document to print.
 * @param scaling The scaling factor.
 * @param showPageBorder Whether to show the page border.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(byte[]),165,168,"/**
* Loads a PDF document from input bytes.
* @param input byte array containing PDF data
* @return PDF document object
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,"org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File,java.lang.String)",230,234,"/**
 * Loads a PDF document from a file, optionally with a password.
 * @param file Input file
 * @param password Password, can be null
 * @return PDDocument object
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File, String)} instead",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(java.io.File),252,255,"/**
* Loads a PDF document from a file.
* @param file The file to load from.
* @return A PDDocument object representing the PDF.
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Converts a Color object to a PDF color and passes it on.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:generateNormalAppearance(),47,132,"/**
* Adjusts annotation rectangle and appearance stream based on ink.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:generateNormalAppearance(),46,143,"/**
* Adjusts annotation rectangle and content stream based on its data.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:generateNormalAppearance(),46,142,"/**
 * Adjusts underline rectangle and draws the annotation.
 * Handles null checks and adjusts rectangle coordinates.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Converts a Color object to a PDColor and passes it to m4.
* @param color The Color object to convert.
* @throws IOException if an I/O error occurs.
*/
","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
 * Converts a Color object to a PDColor and passes it to m4.
 * @param color The Color object to convert.
 * @throws IOException if an I/O error occurs.
 */
","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:generateNormalAppearance(),49,100,"/**
* Updates annotation appearance stream based on calculated bounds.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,initializeAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",369,434,"/**
* Renders appearance characteristics to the appearance stream.
* Handles background color, border color, and line width.
*/","* Initialize the content of the appearance stream.
     * 
     * Get settings like border style, border width and colors to be used to draw a rectangle and background color 
     * around the widget
     * 
     * @param widget the field widget
     * @param appearanceCharacteristics the appearance characteristics dictionary from the widget or
     * null
     * @param appearanceStream the appearance stream to be used
     * @throws IOException in case we can't write to the appearance stream",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,writeTo,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:writeTo(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",290,303,"/**
 * Sets content stream and font size.
 * Uses zeroFontSize if m1() returns 0.
 */","* Write font name, font size and color from the /DA string to the given content stream.
     *
     * @param contents The content stream.
     * @param zeroFontSize The calculated font size to use if the /DA string has a size 0
     * (autosize). Otherwise the size from the /DA string is used.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:generateNormalAppearance(),53,212,"/**
 * Adjusts annotation rectangle and appearance content stream.
 * Processes annotation data and updates its visual properties.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:generateNormalAppearance(),57,169,"/**
 * Processes a squiggly annotation, adjusting its appearance.
 * Handles potential errors during content stream creation.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",144,148,"/**
 * Extracts an XObject from a page in a PDF document.
 * @param sourceDoc PDF document
 * @param pageNumber Page number (1-based)
 * @return The extracted PDFormXObject
 */
","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param pageNumber the 0-based page number of the page to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,getVisualSignatureAsStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument),157,165,"/**
 * Writes COSDocument to an input stream.
 * @param visualSignature COSDocument to write.
 * @return Input stream containing the written document.
 */
",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream),975,978,"/**
 * Writes data to the output stream, using default compression.
 * @param output The output stream to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save the document to an output stream.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     *
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",994,1007,"/**
 * Compresses data to a file using provided parameters.
 * @param file The file to write compressed data to.
 * @param compressParameters Compression settings.
 */","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param file The file to save as.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBodyCompressed,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBodyCompressed(org.apache.pdfbox.cos.COSDocument),457,525,"/**
 * Processes compression pools and prepares objects for encryption.
 * @param document The COSDocument to process.
 */","* This will write the compressed body of the document.
     *
     * @param document The document to write the body for.
     * @throws IOException If there is an error writing the data.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getNormalizedPath(int),455,489,"/**
 * Creates a GeneralPath based on the code, using OTF or fallback.
 * Returns a default path if creation fails.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRichContents(),866,869,"/**
* Returns a string value derived from COSName.RC via m1 and m2.
*/","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:writeXML(java.io.Writer),117,158,"/**
* Writes field data to the output writer, handling string, list, and rich text values.
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getRichTextValue(),218,221,"/**
* Calls m1 with COSName.RV, then m2 on the result.
*/","* Get the fields rich text value.
     * 
     * @return the rich text value string",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,org.apache.pdfbox.multipdf.Overlay:getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument),305,308,"/**
* Creates a LayoutPage from a PDDocument.
* @param doc The PDDocument to extract the page from.
* @return The LayoutPage object.
*/
","* Create a LayoutPage object from the first page of the given document.
     *
     * @param doc
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPages,org.apache.pdfbox.multipdf.Overlay:getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument),328,338,"/**
 * Extracts LayoutPage objects from a PDDocument.
 * @param doc The PDF document to process.
 * @return A map of page index to LayoutPage object.
 */
",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<init>(org.apache.pdfbox.cos.COSBase),48,54,"/**
 * Parses a PDF function stream and builds instruction sequence.
 * @param functionStream COSBase object representing the function stream.
 */
","* Constructor.
     *
     * @param functionStream The function stream.
     * @throws IOException if an I/O error occurs while reading the function",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readLookupData,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readLookupData(),256,278,"/**
* Initializes lookupData based on the array's lookup table.
* Handles COSString, COSStream, and null lookup tables.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpol,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpol(int[],int)",299,343,"/**
 * Calculates a float array based on coordinate and step values.
 * @param coord coordinate array
 * @param step current step index
 * @return float array representing the calculated sample
 */","* Do a linear interpolation if the two coordinates can be known, or
         * call itself recursively twice.
         *
         * @param coord coord partially set coordinate (not set from step
         * upwards); gets fully filled in the last call (""leaf""), where it is
         * used to get the correct sample
         * @param step between 0 (first call) and dimension - 1
         * @return interpolated result sample",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.cos.COSArray),90,97,"/**
 * Initializes the PDICCBased object with an ICC profile array.
 * @param iccArray COSArray containing the ICC profile data.
 * @throws IOException if an I/O error occurs during processing.
 */
","* Creates a new ICC color space using the PDF array.
     *
     * @param iccArray the ICC stream object.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getBitsPerComponent(),848,860,"/**
* Returns a value based on m1(). If false, calls m2() and returns result of m3().m4().
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getColorSpace(),868,911,"/**
 * Retrieves the color space, creating it if necessary.
 * @return PDColorSpace object representing the color space.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getHeight(),945,950,"/**
* Calls m1(), then returns the result of m2().m3(HEIGHT).
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getWidth(),958,963,"/**
* Calls m1(), then returns a value from m2().m3() with WIDTH.
*/",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Constructs a Type6 shading context with given parameters.
* @param shading Shading object.
*/
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
 * Constructs a Type7ShadingContext with the given parameters.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a Type4ShadingContext or a transparent black context.
 * @param cm ColorModel, deviceBounds, userBounds, xform, hints
 * @return PaintContext object
 */
",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a PaintContext for Type5 shading. Returns black on error.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytes,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytes(),74,86,"/**
* Extracts byte array from COSArray or COSStream.
* Returns empty array if neither type is found.
*/","* Get the XFA content as byte array.
     * 
     * The XFA is either a stream containing the entire XFA resource or an array specifying individual packets that
     * together make up the XFA resource.
     * 
     * A packet is a pair of a string and stream. The string contains the name of the XML element and the stream
     * contains the complete text of this XML element. Each packet represents a complete XML element, with the exception
     * of the first and last packet, which specify begin and end tags for the xdp:xdp element. [IS0 32000-1:2008:
     * 12.7.8]
     * 
     * @return the XFA content
     * @throws IOException if the XFA content could not be created",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showAnnotation,org.apache.pdfbox.rendering.PageDrawer:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1543,1585,"/**
 * Renders an annotation, handling appearance and transformations.
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateStructParentEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",1504,1523,"/**
* Adjusts annotation struct parent offsets on a PDF page.
* @param page The PDF page to modify.
* @param structParentOffset Offset to add to parent pointers.
*/","* Update the StructParents and StructParent values in a PDPage.
     *
     * @param page the new page
     * @param structParentOffset the offset which should be applied",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneStructureTree,org.apache.pdfbox.multipdf.Splitter:cloneStructureTree(org.apache.pdfbox.pdmodel.PDDocument),194,250,"/**
* Copies structure tree from source to destination document.
* Copies structure tree elements, handling annotations and pages.
*/","* Clone the structure tree from the source to the current destination document. This must be
     * called after all pages are processed.
     *
     * @param destinationDocument
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processAnnotations,org.apache.pdfbox.multipdf.Splitter:processAnnotations(org.apache.pdfbox.pdmodel.PDPage),820,965,"/**
* Clones annotations from a PDF page, handling destinations & actions.
* @param imported The PDF page to clone annotations from.
*/","* Clone all annotations because of changes possibly made, and because the structure tree is
     * cloned.
     *
     * @param imported
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignature,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",114,129,"/**
 * Creates a PDSignature and associates it with a PDF page.
 * @param pdSignatureField Field containing signature widget
 * @param page The PDF page to add the signature to
 * @param signerName Signer's name (optional)
 */",,,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,buildPagesWidgetsMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:buildPagesWidgetsMap(java.util.List,org.apache.pdfbox.pdmodel.PDPageTree)",771,816,"/**
 * Extracts annotations, handling missing page references.
 * @param fields List of PDF fields
 * @param pages Page tree to process
 * @return Map of annotations grouped by page.
 */","* Build a map of page => set of widgets to be flattened
     *
     * @param fields a list of fields to be flattened
     * @param pages the page tree
     * @return
     * @throws IOException",,,True,16
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.LegacyPDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
 * Initializes page properties and translation matrix.
 * @param page The PDF page to process.
 */","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.w3c.dom.Element),74,230,"/**
 * Constructs a FDFDictionary from an FDF XML element.
 * @param fdfXML The XML element representing the FDF dictionary.
 */
","* This will create an FDF dictionary from an XFDF XML document.
     *
     * @param fdfXML The XML document that contains the XFDF data.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),236,305,"/**
 * Processes a FDF field, updating field values and flags.
 * @param fdfField The FDF field to process.
 */","* This will import a fdf field from a fdf document.
     * 
     * @param fdfField The fdf field to import.
     * @throws IOException If there is an error importing the data for this field.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.io.InputStream,int)",83,91,"/**
 * Creates a PDVisibleSignDesigner with image and document source.
 * @param documentSource RandomAccessRead for document.
 * @param imageStream InputStream for signature image.
 * @param page Page number.
 */
","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param imageStream Image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.awt.image.BufferedImage,int)",133,141,"/**
 * Constructs a PDVisibleSignDesigner with image and document source.
 * @param documentSource Source for document page size.
 * @param image Visible signature image.
 * @param page Page number.
 */
","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isSymbolic(),174,190,"/**
 * Returns the value of the isSymbolic flag, caching it if needed.
 */","* Returns true if the font is a symbolic (that is, it does not use the Adobe Standard Roman character set).
     * 
     * @return true if the font is a symbolic",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",170,180,"/**
 * Creates a PDType1Font object from a PFB input stream.
 * @param doc The document to embed in.
 * @param pfbIn Input stream for the PFB file.
 * @param encoding Font encoding to use.
 */
","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @param encoding encoding to be used for the font
     * @throws IOException if the font could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),64,68,"/**
 * Constructs a PDSimpleFont with the given base font.
 * @param baseFont The base font to use for this font.
 */
",* Constructor for Standard 14.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.cos.COSDictionary),105,114,"/**
 * Initializes a PDFont with a COSDictionary.
 * @param fontDictionary COSDictionary containing font data
 */
","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",71,96,"/**
 * Embeds a Type 2 font within a PDF document.
 * @param document PDF document, font dictionary, TrueType font.
 */","* Creates a new TrueType font embedder for the given TTF as a PDCIDFontType2.
     *
     * @param document parent document
     * @param dict font dictionary
     * @param ttf True Type Font
     * @param parent parent Type 0 font
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",54,71,"/**
 * Creates a PDTrueTypeFontEmbedder, embedding a TrueType font.
 * @param document The document to embed in.
 * @param dict The COSDictionary for the font.
 * @param ttf The TrueType font to embed.
 * @param encoding The font encoding.
 */","* Creates a new TrueType font embedder for the given TTF as a PDTrueTypeFont.
     *
     * @param document The parent document
     * @param dict Font dictionary
     * @param ttf TrueType font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @throws IOException if the TTF could not be read",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,isDynamicXfa,org.apache.pdfbox.multipdf.PDFMergerUtility:isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),1531,1534,"/**
 * Checks if the PDAcroForm is valid and calls its m1() method.
 */","* Test for dynamic XFA content.
     * 
     * @param acroForm the AcroForm
     * @return true if there is a dynamic XFA form.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),76,83,"/**
 * Initializes the iterator by enqueuing fields from the form.
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling)",78,81,"/**
 * Constructs a PDFPrintable with default page interaction.
 * @param document The PDF document to print.
 * @param scaling The scaling factor for the document.
 */
","* Creates a new PDFPrintable with the given page scaling.
     *
     * @param document the document to print
     * @param scaling page scaling policy",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDF,org.apache.pdfbox.multipdf.Overlay:loadPDF(java.lang.String),274,277,"/**
 * Loads a PDF document from the specified file.
 * @param pdfName Path to the PDF file.
 * @return PDDocument object representing the PDF.
 */
",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File),211,215,"/**
 * Loads a PDF document from the given file.
 * @param file The file to load the PDF from.
 * @return A PDDocument object representing the PDF.
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File)} instead",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromFile,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromFile(java.lang.String,int)",168,175,"/**
 * Extracts a specific page from a PDF document.
 * @param filename PDF file path
 * @param page Page number to extract (1-based)
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",487,640,"/**
* Writes appearance stream content for a PDF annotation widget.
* Writes content to the provided output stream.
*/",* Generate and insert text content and clipping around it.,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,buildPDF,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),76,155,"/**
 * Creates a PDF input stream with signature form data.
 * @param properties Holds signature design properties.
 * @return InputStream representing the PDF stream.
 */","* Build a PDF with a visible signature step by step, and return it as a stream.
     *
     * @param properties properties to be used for the creation
     * @return InputStream stream containing the pdf holding the visible signature
     * @throws IOException if the PDF could not be created",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File),955,958,"/**
* Calls m1 with default compression parameters.
* @param file The file to process.
* @throws IOException if an I/O error occurs.
*/
","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param file The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1024,1027,"/**
 * Calls m1 with a File object created from the given filename.
 * @param fileName File name to use.
 * @param compressParameters Compression parameters to apply.
 */","* Save the document to a file using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param fileName The file to save as.
     * @param compressParameters The parameters for the document's compression.
     *
     * @throws IOException if the output could not be written",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDocument,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDocument(org.apache.pdfbox.cos.COSDocument),1293,1348,"/**
 * Processes a COSDocument, handling incremental updates and signatures.
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:writeXML(java.io.Writer),239,264,"/**
* Writes file specification and field IDs to the output writer.
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,create,org.apache.pdfbox.pdmodel.common.function.PDFunction:create(org.apache.pdfbox.cos.COSBase),115,147,"/**
 * Creates a PDFunction based on the provided COSBase object.
 * @param function COSBase representing the function.
 * @throws IOException if function type is unknown or invalid.
 */","* Create the correct PD Model function based on the COS base function.
     *
     * @param function The COS function dictionary.
     *
     * @return The PDModel Function object, never null.
     *
     * @throws IOException If we are unable to create the PDFunction object.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readColorTable(),283,306,"/**
* Initializes the color table based on lookup data and color space.
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpolate,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpolate(),284,287,"/**
* Calls m1 with an int array and initial value of 0.
* @return float[] result of calling m1.
*/
","* Calculate the interpolation.
         *
         * @return interpolated result sample",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",108,132,"/**
 * Retrieves or creates a PDICCBased color space from an ICC array.
 * @param iccArray The ICC array.
 * @param resources Resources object.
 * @return A PDICCBased color space.
 */","* Creates a new ICC color space using the PDF array, optionally using a resource cache.
     *
     * @param iccArray the ICC stream object.
     * @param resources resources to use as cache, or null for no caching.
     * @return an ICC color space.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",79,116,"/**
 * Creates a PDImageXObject, using predictor encoding if applicable.
 * @param document PDF document
 * @param image BufferedImage to convert
 * @return PDImageXObject or null if creation fails
 */","* Creates a new lossless encoded image XObject from a BufferedImage.
     * <p>
     * <u>New for advanced users from 2.0.12 on:</u><br>
     * If you created your image with a non standard ICC colorspace, it will be
     * preserved. (If you load images in java using ImageIO then no need to read
     * this segment) However a new colorspace will be created for each image. So
     * if you create a PDF with several such images, consider replacing the
     * colorspace with a common object to save space. This is done with
     * {@link PDImageXObject#getColorSpace()} and
     * {@link PDImageXObject#setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) PDImageXObject.setColorSpace()}
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new image XObject
     * @throws IOException if something goes wrong",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawImage(),519,523,"/**
* Returns a buffered image by applying a mask.
* Uses internal methods m1(), m2(), and m3().
*/",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,extractMatte,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),538,556,"/**
 * Extracts matte data from a PDImageXObject.
 * @param softMask The image object containing the matte.
 * @return Float array representing the matte, or null if invalid.
 */","* Extract the matte color from a softmask.
     * 
     * @param softMask
     * @return the matte color.
     * @throws IOException if the color conversion fails.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with default height and width from the image.
* @param image The image to process.
* @param x The x coordinate.
* @param y The y coordinate.
*/
","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildTransparencyMaskFromIndexedData,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",257,302,"/**
 * Decodes a PNG image and applies transparency based on state.
 * @param doc PDDocument object
 * @param image PDImageXObject object
 * @param state PNGConverterState object
 * @return PDImageXObject with decoded image and transparency
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a PaintContext for Type6 shading. Returns black on error.
 * @param cm ColorModel
 * @param bounds Rectangle
 * @param xform AffineTransform
 * @param hints RenderingHints
 * @return PaintContext or black PaintContext on error
 */
",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a PaintContext for Type7 shading. Returns black on error.
 * @param cm ColorModel, deviceBounds, userBounds, xform, hints
 * @return PaintContext or black PaintContext on error.
 */",,,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getDocument,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getDocument(),128,132,"/**
* Converts byte array to a Document object using XMLUtil.
* @return Document object or null if conversion fails.
*/","* Get the XFA content as W3C document.
     * 
     * @see #getBytes()
     * 
     * @return the XFA content
     * 
     * @throws IOException if something went wrong when reading the XFA content.
     *",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawPage,"org.apache.pdfbox.rendering.PageDrawer:drawPage(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.common.PDRectangle)",268,294,"/**
* Initializes graphics context and processes annotations based on filter.
*/","* Draws the page to the requested context.
     * 
     * @param g The graphics context to draw onto.
     * @param pageSize The size of the page to draw.
     * @throws IOException If there is an IO error while drawing the page.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPage,org.apache.pdfbox.multipdf.Splitter:processPage(org.apache.pdfbox.pdmodel.PDPage),792,811,"/**
* Imports resources and removes beads from a page.
* @param page The PDPage to process.
* @throws IOException if an I/O error occurs.
*/","* Interface to start processing a new page.
     *
     * @param page The page that is about to get processed.
     *
     * @throws IOException If there is an error creating the new document.",,,True,17
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.PDFMarkedContentExtractor:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Initializes page rotation, size, and translation matrix.
* Sets translation matrix based on page size.
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPage,org.apache.pdfbox.text.PDFTextStripper:processPage(org.apache.pdfbox.pdmodel.PDPage),340,384,"/**
 * Processes a page if within specified range and applies formatting.
 */","* This will process the contents of a page.
     *
     * @param page The page to process.
     *
     * @throws IOException If there is an error processing the page.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.w3c.dom.Element),60,65,"/**
 * Constructs a FDFCatalog from an Element.
 * @param element The Element to create the catalog from.
 */
","* This will create an FDF catalog from an XFDF XML document.
     *
     * @param element The XML document that contains the XFDF data.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),75,98,"/**
* Processes FDF fields and associates children based on name matching.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),98,139,"/**
* Updates annotation widgets based on FDF field values.
* @param fdfField FDF field object containing update values.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",157,160,"/**
 * Creates a PDType1Font from a PFB InputStream.
 * @param doc The document this font belongs to.
 * @param pfbIn Input stream containing the PFB data.
 */
","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @throws IOException if the font could not be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),104,148,"/**
 * Creates a PDF Type 1 font based on a base font.
 * @param baseFont The base font to use for this font.
 */
","* Creates a Type 1 standard 14 font for embedding.
     *
     * @param baseFont One of the standard 14 PostScript names, e.g. {@link FontName#HELVETICA_BOLD}.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,78,"/**
 * Initializes a PDSimpleFont with the provided font dictionary.
 */","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.cos.COSDictionary),71,100,"/**
 * Creates a PDType0Font object from a COSDictionary.
 * @param fontDictionary COSDictionary representing the font
 * @throws IOException if font data is missing or invalid
 */
","* Constructor for reading a Type0 font from a PDF file.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @throws IOException if the descendant font is missing.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)",114,142,"/**
 * Creates a PDType0Font from a TrueTypeFont, embedding or closing it.
 * @param embedSubset Whether to embed a subset of the font.
 */","* Private. Creates a new PDType0Font font for embedding.
     *
     * @param document
     * @param ttf
     * @param embedSubset
     * @param closeTTF whether to close the ttf parameter after embedding. Must be true when the ttf
     * parameter was created in the load() method, false when the ttf parameter was passed to the
     * load() method.
     * @param vertical whether to enable vertical substitutions.
     * @throws IOException",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",156,175,"/**
 * Creates a PDTrueTypeFont instance, embedding the given TrueType font.
 * @param closeTTF Whether to close the TTF after embedding.
 */",* Creates a new TrueType font for embedding.,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,iterator,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:iterator(),58,62,"/**
* Returns an iterator for the form fields.
* Uses FieldIterator to iterate over acroForm fields.
*/","* Returns an iterator which walks all fields in the tree, in order.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,70,"/**
 * Constructs a PDFPrintable with default scaling.
 * @param document The PDF document to print.
 */
","* Creates a new PDFPrintable.
     *
     * @param document the document to print",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDFs,org.apache.pdfbox.multipdf.Overlay:loadPDFs(),205,272,"/**
 * Loads overlay documents based on filenames, initializes overlay pages.
 */",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.io.InputStream,int)",65,73,"/**
 * Constructs a PDVisibleSignDesigner with filename, image stream, and page.
 */","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param imageStream image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.awt.image.BufferedImage,int)",115,123,"/**
 * Constructs a PDVisibleSignDesigner with a filename, image, and page number.
 */","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,buildSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:buildSignature(),44,49,"/**
* Creates a PDF signature using a template and data from m1().
*/","* start building of visible signature
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String),936,939,"/**
 * Overloads m1 to accept a file name as a String.
 * @param fileName The name of the file to process.
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException if the output could not be written",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,optimizedMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:optimizedMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",375,433,"/**
* Creates a PDF document by cloning pages from sources.
* @param streamCacheFunc Function to create a stream cache.
* @param compressParameters Compression parameters for the output.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:writeXML(java.io.Writer),74,78,"/**
 * Writes FDF dictionary to the given output stream.
 * @param output Writer object to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:eval(float[]),61,126,"/**
 * Evaluates a PDFunction based on input value and precomputed functions.
 * @param input float array containing the input value
 * @return float array containing the function result
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",91,108,"/**
 * Creates a PDDeviceN object from a COSArray and resources.
 * @param deviceN COSArray representing the device N.
 * @param resources PDResources for color space creation.
 */","* Creates a new DeviceN color space from the given COS array.
     * 
     * @param deviceN an array containing the color space information
     * @param resources resources, can be null.
     * 
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getTintTransform(),563,570,"/**
 * Returns the tint transform function. Creates if it's null.
 */","* This will get the tint transform function.
     *
     * @return The tint transform function.
     *
     * @throws IOException if there is an error creating the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",85,98,"/**
 * Creates a PDSeparation object from a COSArray and resources.
 * @param separation COSArray containing separation data
 * @param resources PDResources object for color space creation
 */","* Creates a new Separation color space from a PDF color space array.
     * @param separation an array containing all separation information.
     * @param resources resources, can be null.
     * @throws IOException if the color space or the function could not be created.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunction(),337,348,"/**
* Returns the PDFunction object, creating it if it's null.
*/","* This will return the function used to convert the color values.
     *
     * @return the function
     * @throws java.io.IOException if we were not able to create the function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunctionsArray,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunctionsArray(),356,382,"/**
 * Retrieves the PDFunction array, creating it if necessary.
 * @return PDFunction array or null if no functions are defined.
 */","* Provide the function(s) of the shading dictionary as array.
     *
     * @return an array containing the function(s).
     * @throws IOException if we were unable to create a function.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getTransferFunction,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getTransferFunction(),187,198,"/**
 * Retrieves the transfer function. Creates if null.
 * @return PDFunction object representing the transfer function.
 */","* Returns the transfer function.
     * 
     * @return the transfer function
     * @throws IOException If we are unable to create the PDFunction object.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applyTransferFunction,"org.apache.pdfbox.rendering.PageDrawer:applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",1397,1484,"/**
* Applies a color transfer function to an image.
* @param image The input image.
* @param transfer Color transfer function.
* @return New image with applied color transfer.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",88,96,"/**
 * Creates a PDIndexed object from a COSArray and resources.
 * @param array COSArray containing indexed color data.
 * @param resources PDResources for color space creation.
 */
","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @param resources the resources, can be null. Allows to use its cache for the colorspace.
     * @throws IOException if the colorspace could not be created",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:eval(float[]),424,467,"/**
 * Processes input float array, applying transformations and returning results.
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildImageObject,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",329,407,"/**
 * Creates a PDImageXObject from a PNGConverterState.
 * @param document The document to add the image to.
 * @param state PNGConverterState containing image data.
 * @return PDImageXObject or null if creation fails.
 */",* Build the base image object from the IDATs and profile information,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByExtension,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",213,250,"/**
* Creates a PDImageXObject from a file, supporting JPG, PNG, GIF, BMP, TIFF.
* @param file input image file
* @param doc document to add image to
* @return PDImageXObject object
*/","* Create a PDImageXObject from an image file. The file format is determined by the file name
     * suffix. The following suffixes are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This is
     * a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByContent,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",273,317,"/**
* Creates a PDImageXObject from a file, handling various image types.
* @param file input file
* @param doc document to add image to
* @return PDImageXObject object
*/","* Create a PDImageXObject from an image file. The file format is determined by the file
     * content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This
     * is a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureImage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",185,190,"/**
* Creates and saves a visible signature image using the template and image.
*/",,,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(java.awt.Rectangle,int)",467,517,"/**
 * Creates a buffered image with a mask, using cached or generated data.
 * @param region Region to apply mask to.
 * @param subsampling Subsampling factor for image processing.
 * @return BufferedImage with mask applied.
 */",* {@inheritDoc},,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with default width and height from the image.
* @param image The image to process.
* @param x The x coordinate.
* @param y The y coordinate.
*/
","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with image, x, y, image.m1(), and image.m2().
* @param image The image to process.
* @param x The x coordinate.
* @param y The y coordinate.
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with default width and height from the image.
* @param image The image to process.
* @param x X coordinate.
* @param y Y coordinate.
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Calls m3 with default width and height from the image.
* @param image The image to process.
* @param x The x coordinate.
* @param y The y coordinate.
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",260,348,"/**
* Renders a PDF page to a BufferedImage.
* @param pageIndex Page index. @param scale Scale factor.
* @return BufferedImage of the rendered page.
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @param destination controlling visibility of optional content groups
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",423,441,"/**
* Renders a PDF page to a Graphics2D object.
* @param pageIndex Page index to render.
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Known problems:
     * <ul>
     * <li>rendering of PDF files with transparencies is not supported on Ubuntu, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4581"">PDFBOX-4581</a> and
     * <a href=""https://bugs.openjdk.java.net/browse/JDK-6689349"">JDK-6689349</a>. Rendering will
     * not abort, but the pages will be rendered incorrectly.</li>
     * <li>Clipping the Graphics2D will not work properly, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4583"">PDFBOX-4583</a>.</li>
     * </ul>
     * If you encounter these problems, then you should render into an image by using the
     * {@link #renderImage(int) renderImage} methods.
     * 
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @param destination controlling visibility of optional content groups
     * @throws IOException if the PDF cannot be read",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPages,org.apache.pdfbox.multipdf.Splitter:processPages(),676,697,"/**
 * Processes PDF pages within a specified range.
 * Iterates through pages, processing those between startPage and endPage.
 */","* Interface method to handle the start of the page processing.
     *
     * @throws IOException If an IO error occurs.",,,True,18
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPages,org.apache.pdfbox.text.PDFTextStripper:processPages(org.apache.pdfbox.pdmodel.PDPageTree),263,308,"/**
 * Processes pages, calculates bookmark page numbers, and handles edge cases.
 */","* This will process all of the pages and the text that is in them.
     *
     * @param pages The pages object in the document.
     *
     * @throws IOException If there is an error parsing the text.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.w3c.dom.Document),94,105,"/**
 * Creates an FDFDocument from a Document, validating the root element.
 * @param doc The Document containing the xFDF data.
 * @throws IOException if the root element is not 'xfdf'.
 */
","* This will create an FDF document from an XFDF XML document.
     *
     * @param doc The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getDefaultFont,org.apache.pdfbox.contentstream.PDFStreamEngine:getDefaultFont(),137,144,"/**
 * Returns the default PDF font (Helvetica). Lazily initialized.
 */","* Provide standard 14 Helvetica font as default if there isn't any font available.  
     * @return the default font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,verifyOrCreateDefaults,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:verifyOrCreateDefaults(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),70,114,"/**
 * Configures default appearance and fonts for the PDF form.
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFont,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFont(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),245,259,"/**
 * Retrieves a FontBoxFont, creating it if not already cached.
 * @param baseName The base name of the font.
 * @return FontBoxFont object.
 */
","* Returns the mapped font for the specified Standard 14 font. The mapped font is cached.
     *
     * @param baseName name of the standard 14 font
     * @return the mapped font",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDefaultFont,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDefaultFont(),82,89,"/**
 * Returns the default PDF font (Helvetica). Creates if null.
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.cos.COSDictionary),103,152,"/**
 * Creates a TrueType font from a COSDictionary, parsing or mapping.
 * @param fontDictionary COSDictionary containing font information.
 * @throws IOException if an I/O error occurs during parsing.
 */
","* Creates a new TrueType font from a Font dictionary.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,140,"/**
 * Creates a PDType1CFont from a COSDictionary, parsing embedded fonts.
 * @param fontDictionary Font dictionary containing font information.
 * @throws IOException if an I/O error occurs during font processing.
 */
","* Constructor.
     * 
     * @param fontDictionary the corresponding dictionary
     * @throws IOException it something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),189,282,"/**
 * Creates a Type1 font from a font dictionary, handling PFB/Type1C.
 * @param fontDictionary Font dictionary object.
 * @throws IOException If an I/O error occurs while reading the font.
 */
","* Creates a Type 1 font from a Font dictionary in a PDF.
     * 
     * @param fontDictionary font dictionary.
     * @throws IOException if there was an error initializing the font.
     * @throws IllegalArgumentException if /FontFile3 was used.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",82,87,"/**
 * Creates a PDType3Font object.
 * @param fontDictionary Font dictionary.
 * @param resourceCache Resource cache.
 */
","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param resourceCache Resource cache, can be null.
     * 
     * @throws IOException if the font could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,boolean,boolean)",199,204,"/**
 * Creates a PDType0Font from a RandomAccessRead, embedding subset if requested.
 */","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead source of a TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @param vertical whether to enable vertical substitutions.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",216,220,"/**
 * Creates a PDType0Font object.
 * @param doc Document object.
 * @param ttf TrueTypeFont object.
 * @param embedSubset Whether to embed a subset.
 * @return PDType0Font object.
 */
","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",272,276,"/**
 * Creates a PDType0Font object.
 * @param doc The document.
 * @param ttf The TrueType font.
 * @param embedSubset Whether to embed a subset.
 */
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",227,231,"/**
 * Creates a PDTrueTypeFont object.
 * @param doc The document.
 * @param ttf The TrueTypeFont.
 * @param encoding The font encoding.
 */
","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.
     * </p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A true type font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",247,251,"/**
 * Creates a PDTrueTypeFont from a RandomAccessRead and encoding.
 */","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.
     * </p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead the source of the TTF.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureFields,org.apache.pdfbox.pdmodel.PDDocument:getSignatureFields(),866,881,"/**
 * Retrieves a list of signature fields from the PDF form.
 * Returns an empty list if no form is found.
 */","* Retrieve all signature fields from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(),339,348,"/**
 * Processes terminal fields from a collection.
 * Iterates and calls m1() on each PDTerminalField.
 */","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of all fields.
     * 
     * @throws IOException if the appearance streams could not be refreshed",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldIterator,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldIterator(),419,422,"/**
* Returns an iterator for fields within the document.
*/","* Returns an iterator which walks all fields in the field tree, in order.
     * 
     * @return an iterator which walks all fields in the field tree",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCacheFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCacheFields(boolean),442,457,"/**
 * Initializes fieldCache with data from m3() if cache is true.
 * Otherwise, clears the fieldCache.
 */","* This will tell this form to cache the fields into a Map structure
     * for fast access via the getField method.  The default is false.  You would
     * want this to be false if you were changing the COSDictionary behind the scenes,
     * otherwise setting this to true is acceptable.
     *
     * @param cache A boolean telling if we should cache the fields.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getField(java.lang.String),475,493,"/**
* Retrieves a PDField by its fully qualified name.
* @param fullyQualifiedName The name of the field to retrieve.
* @return The PDField object or null if not found.
*/
","* This will get a field by name, possibly using the cache if setCache is true.
     *
     * @param fullyQualifiedName The name of the field to get.
     * @return The field with that name of null if one was not found.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlay,org.apache.pdfbox.multipdf.Overlay:overlay(java.util.Map),114,134,"/**
* Processes overlays for specific pages in a PDF document.
* @param specificPageOverlayMap Map of page number to overlay path.
* @return PDF document with overlays applied.
*/
","* This will add overlays to a document.
     *
     * @param specificPageOverlayMap Optional map of overlay files of which the first page will be
     * used for specific pages of the input document. The page numbers are 1-based. The map must be
     * empty (but not null) if no specific mappings are used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong.
     * @throws IllegalArgumentException if the input document is missing.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayDocuments,org.apache.pdfbox.multipdf.Overlay:overlayDocuments(java.util.Map),150,163,"/**
 * Applies overlay documents to pages.
 * @param overlayMap Map of page number to overlay document.
 * @return Modified input PDF document.
 */","* This will add overlays documents to a document. If you created the overlay documents with
     * subsetted fonts, you need to save them first so that the subsetting gets done.
     *
     * @param specificPageOverlayDocumentMap Optional map of overlay documents for specific pages. The
     * page numbers are 1-based. The map must be empty (but not null) if no specific mappings are
     * used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDocument:writeXML(java.io.Writer),114,122,"/**
 * Writes an XFDF document to the given Writer.
 * @param output Writer to write the XFDF document to.
 * @throws IOException if an I/O error occurs.
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",89,242,"/**
 * Resolves a color space, potentially using resources.
 * @param colorSpace The color space object.
 * @param resources  Resources to use, or null.
 * @param wasDefault True if this was a default colorspace.
 * @return A PDColorSpace object.
 */","* Creates a color space given a name or array. Abbreviated device color names are not supported
     * here, please replace them first. This method is for PDFBox internal use only, others should
     * use {@link #create(COSBase, PDResources)}.
     *
     * @param colorSpace the color space COS object
     * @param resources the current resources.
     * @param wasDefault if current color space was used by a default color space.
     * @return a new color space.
     * @throws MissingResourceException if the color space is missing in the resources dictionary
     * @throws IOException if the color space is unknown or cannot be created.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float[]),403,436,"/**
 * Processes input array using PDFunctions, clamps values to [0,1].
 */","* Convert the input values using the functions of the shading dictionary.
     *
     * @param input the input values
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applySoftMaskToPaint,"org.apache.pdfbox.rendering.PageDrawer:applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",604,653,"/**
 * Creates a soft mask paint based on the provided soft mask.
 * @param parentPaint The parent paint to apply the mask to.
 * @param softMask The soft mask object.
 * @return A SoftMask object or parentPaint if error.
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray),76,79,"/**
 * Constructs a PDIndexed object with a COSArray.
 * @param indexedArray COSArray containing index information.
 */
","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @throws IOException if the colorspace could not be created",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)",187,190,"/**
* Creates a PDImageXObject from an image file.
* @param imagePath Path to the image file.
* @param doc The document to associate the image with.
* @return A PDImageXObject.
*/
","* Create a PDImageXObject from an image file, see {@link #createFromFileByExtension(File, PDDocument)} for
     * more details.
     *
     * @param imagePath the image file path.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject, or if the image type is not supported.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(),458,462,"/**
* Calls m1 with default parameters.
* @return BufferedImage object.
*/","* {@inheritDoc}
     * The returned images are cached via a SoftReference.",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",244,249,"/**
* Renders an image page.
* @param pageIndex Page index to render.
* @param scale Scale factor for the image.
* @param imageType Image type to use.
*/
","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,print,"org.apache.pdfbox.printing.PDFPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int)",199,319,"/**
 * Draws a page on the specified graphics.
 * @param graphics Graphics object to draw on.
 * @param pageFormat Page format information.
 * @param pageIndex Index of the page to draw.
 * @return PAGE_EXISTS if successful, otherwise an error code.
 */",,,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float)",394,399,"/**
* Calls overloaded method with default RenderDestination.
* @param pageIndex Page index.
* @param graphics Graphics context.
* @param scaleX X scale factor.
* @param scaleY Y scale factor.
*/
","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,split,org.apache.pdfbox.multipdf.Splitter:split(org.apache.pdfbox.pdmodel.PDDocument),128,152,"/**
* Extracts and processes pages from a PDF document.
* @param document The input PDF document.
* @return List of processed PDF documents.
*/","* This will take a document and split into several other documents.
     *
     * @param document The document to split.
     *
     * @return A list of all the split documents. These should all be saved before closing any
     * documents, including the source document. Any further operations should be made after
     * reloading them, to avoid problems due to resource sharing. For the same reason, they should
     * not be saved with encryption.
     *
     * @throws IOException If there is an IOError",,,True,19
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeText,"org.apache.pdfbox.text.PDFTextStripper:writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)",239,254,"/**
 * Processes a PDDocument and writes content to an output stream.
 */","* This will take a PDDocument and write the text of that document to the print writer.
     *
     * @param doc The document to get the data from.
     * @param outputStream The location to put the text.
     *
     * @throws IOException If the doc is in an invalid state.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.InputStream),149,152,"/**
* Creates an FDFDocument from an InputStream.
* @param input Input stream containing FDF XML.
* @return An FDFDocument object.
*/
","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showText,org.apache.pdfbox.contentstream.PDFStreamEngine:showText(byte[]),735,816,"/**
 * Renders a byte array as text using PDF graphics state.
 * @param string byte array representing the text to render
 */","* Process text from the PDF Stream. You should override this method if you want to
     * perform an action when encoded text is being processed.
     *
     * @param string the encoded text
     * @throws IOException if there is an error processing the string",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:process(),46,60,"/**
 * Processes the PDF form if it exists.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphPath,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphPath(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName,java.lang.String)",271,307,"/**
* Returns a GeneralPath for the given glyph name, or a new one.
*/","* Returns the path for the character with the given name for the specified Standard 14 font. The mapped font is
     * cached. The path may differ in different environments as it depends on the mapped font.
     *
     * @param baseName name of the standard 14 font
     * @param glyphName name of glyph
     * @return the mapped font
     * 
     * @throws IOException if the data could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDMMType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDMMType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),37,40,"/**
 * Constructs a PDMMType1Font from a COSDictionary.
 * @param fontDictionary The COSDictionary representing the font.
 */
","* Creates an MMType1Font from a Font dictionary in a PDF.
     *
     * @param fontDictionary font dictionary
     * 
     * @throws IOException if the font could not be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Creates a PDType3Font instance from a COSDictionary.
 * @param fontDictionary The COSDictionary containing font data.
 * @throws IOException If an I/O error occurs.
 */
","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",153,156,"/**
 * Loads a PDF font from a file.
 * @param doc The PDF document.
 * @param file The file containing the font.
 * @return The loaded PDF font.
 */
","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",182,186,"/**
 * Loads a PDType0Font from an input stream.
 * @param doc The document.
 * @param input Input stream.
 * @param embedSubset Whether to embed subset.
 * @return PDType0Font object.
 */","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when
     * creating a font for AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",230,233,"/**
* Extracts a PDType0Font from a file.
* @param doc The PDDocument.
* @param file The input file.
* @return The extracted PDType0Font.
*/
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",243,246,"/**
* Extracts a PDType0Font from an input stream.
* @param doc The document. @param input Input stream.
* @return PDType0Font object.
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",257,261,"/**
* Reads a PDF font from an input stream.
* @param doc PDF document, input stream, embed flag
* @return PDType0Font object
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",189,193,"/**
* Delegates to overloaded method with RandomAccessReadBufferedFile.
* @param doc PDDocument, file File to read, encoding Encoding
* @return PDTrueTypeFont
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.</p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TTF file.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",207,211,"/**
* Delegates to overloaded method with RandomAccessReadBuffer.
* @param doc Document object. @param input Input stream. @param encoding Encoding.
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.</p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TTF file stream
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureDictionaries,org.apache.pdfbox.pdmodel.PDDocument:getSignatureDictionaries(),888,900,"/**
 * Extracts signatures from fields.
 * Iterates through fields and adds signatures to the list.
 * @return List of PDSignature objects.
 */
","* Retrieve all signature dictionaries from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:process(),36,61,"/**
 * Generates appearance streams for PDF form fields, if possible.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",317,474,"/**
* Adds a signature to a PDF document.
* @param sigObject Signature object to add.
* @param signatureInterface Signature interface.
* @param options Signature options.
*/","* This will add a signature to the document. If the 0-based page number in the options
     * parameter is smaller than 0 or larger than max, the nearest valid page number will be used
     * (i.e. 0 or max) and no exception will be thrown.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormLegacyMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1285,1337,"/**
 * Clones fields from srcAcroForm to destAcroForm, renaming as needed.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument),128,143,"/**
* Updates PDF fields based on FDF data.
* @param fdf The FDFDocument containing field data.
*/","* This method will import an entire FDF document into the PDF document
     * that this acroform is part of.
     *
     * @param fdf The FDF document to import.
     *
     * @throws IOException If there is an error doing the import.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.Writer),242,255,"/**
 * Writes to the output Writer, ensuring it's closed afterward.
 * @param output Writer object to write to and close.
 */","* This will save the document to an output stream and close the stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float),391,394,"/**
* Overloads m1 to accept a single float value.
* @param inputValue The float value to process.
* @return float[] Result of processing the input.
*/","* Convert the input value using the functions of the shading dictionary.
     *
     * @param inputValue the input value
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,evalFunctionAndConvertToRGB,org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:evalFunctionAndConvertToRGB(float[]),160,167,"/**
 * Processes float array, potentially modifying it, then returns a value.
 */","* Convert color to RGB color value, using function if required, then convert from the shading
     * color space to an RGB value, which is encoded into an integer.",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getStrokingPaint(),682,687,"/**
* Creates a Paint object using internal helper methods.
*/",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getNonStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getNonStrokingPaint(),697,702,"/**
* Creates a Paint object using internal graphics state data.
*/","* Returns the non-stroking AWT Paint. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.
     *
     * @return The non-stroking AWT Paint.
     * @throws IOException if the non-stroking AWT Paint could not be created",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawBufferedImage,"org.apache.pdfbox.rendering.PageDrawer:drawBufferedImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",1296,1395,"/**
 * Draws image with transformations and mask application.
 * @param pdImage PDF image object.
 * @param image BufferedImage to draw.
 * @param at AffineTransform to apply.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shadingFill,org.apache.pdfbox.rendering.PageDrawer:shadingFill(org.apache.pdfbox.cos.COSName),1486,1541,"/**
 * Applies a shading to the graphics context.
 * @param shadingName Name of the shading to apply.
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroupOnGraphics,"org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroupOnGraphics(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.awt.Graphics2D)",1669,1738,"/**
 * Renders a transparency group to the graphics context.
 * Applies scaling and soft mask if available.
 */","* For advanced users, to extract the transparency group into a separate graphics device.
     * 
     * @param form the transparency group to be extracted
     * @param graphics the target graphics device
     * @throws IOException if the transparency group could not be extracted",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,setupIndexedColorSpace,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",304,324,"/**
 * Sets indexed image data for PDF image.
 * @param doc PDF document, image, lookup table, highVal
 */",,,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float)",205,208,"/**
* Creates an image from a page, with specified scale and RGB type.
* @param pageIndex Index of the page.
* @param scale Scaling factor.
* @return BufferedImage object.
*/","* Returns the given page as an RGB image at the given scale.
     * A scale of 1 will render at 72 DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float)",217,220,"/**
 * Generates a buffered image for a page at a given DPI.
 * @param pageIndex Index of the page. @param dpi DPI value.
 * @return BufferedImage object.
 */","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)",230,234,"/**
 * Creates a buffered image from a page.
 * @param pageIndex Index of the page.
 * @param dpi Dots per inch.
 * @param imageType Image type.
 */
","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float)",376,380,"/**
* Calls overloaded m1 with equal horizontal and vertical scale.
* @param pageIndex Page index. @param graphics Graphics context. @param scale Scaling factor.
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scale the scaling factor, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,extract,org.apache.pdfbox.multipdf.PageExtractor:extract(),73,85,"/**
 * Splits the document into pages from startPage to endPage.
 * @return A PDDocument containing the split pages, or an empty doc.
 */","* This will take a document and extract the desired pages into a new 
     * document.  Both startPage and endPage are included in the extracted 
     * document.  If the endPage is greater than the number of pages in the 
     * source document, it will go to the end of the document.  If startPage is
     * less than 1, it'll start with page 1.  If startPage is greater than 
     * endPage or greater than the number of pages in the source document, a 
     * blank document will be returned.
     * 
     * @return The extracted document
     * @throws IOException If there is an IOError",,,True,20
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getText,org.apache.pdfbox.text.PDFTextStripper:getText(org.apache.pdfbox.pdmodel.PDDocument),216,221,"/**
 * Extracts text from a PDF document.
 * @param doc The PDF document to process.
 * @return The extracted text as a String.
 */","* This will return the text of a document. See writeText. <br>
     * NOTE: The document must not be encrypted when coming into this method.
     *
     * <p>IMPORTANT: By default, text extraction is done in the same sequence as the text in the PDF page content stream.
     * PDF is a graphic format, not a text format, and unlike HTML, it has no requirements that text one on page
     * be rendered in a certain order. The order is the one that was determined by the software that created the
     * PDF. To get text sorted from left to right and top to botton, use {@link #setSortByPosition(boolean)}.
     * 
     * @param doc The document to get the text from.
     * @return The text of the PDF document.
     * @throws IOException if the doc state is invalid or it is encrypted.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.lang.String),120,123,"/**
 * Loads an FDF document from a file.
 * @param filename Path to the FDF file.
 * @return FDFDocument object.
 */","* This will load a document from a file.
     *
     * @param filename The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.File),134,137,"/**
* Loads an FDF document from a file.
* @param file The file to load from.
* @return The loaded FDFDocument.
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextString,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextString(byte[]),654,657,"/**
 * Calls m1 with the given byte array.
 * @param string The byte array to pass to m1.
 * @throws IOException if m1 throws an IOException.
 */
","* Called when a string of text is to be shown.
     *
     * @param string the encoded text
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextStrings,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextStrings(org.apache.pdfbox.cos.COSArray),665,714,"/**
 * Processes a COS array for TJ operation, handling text positioning.
 */","* Called when a string of text with spacing adjustments is to be shown.
     *
     * @param array array of encoded text strings and adjustments
     * @throws IOException if there was an error showing the text",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawHelp,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawHelp(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",278,318,"/**
 * Draws content to a PDF appearance stream based on annotation data.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",320,360,"/**
 * Draws annotation content to the content stream.
 * Uses annotation bbox and sets graphics state/matrix.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNewParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",362,388,"/**
* Draws annotation content to the content stream.
* Sets various content stream properties and draws text.
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCrossHairs,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",390,414,"/**
 * Draws a symbol onto the appearance stream of a PDF annotation.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawZapf,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawZapf(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,int,int,java.lang.String)",592,615,"/**
* Draws a glyph from ZAPF_DINGBATS onto the appearance stream.
* @param annotation Annotation object
* @param contentStream Content stream to draw to
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",124,190,"/**
 * Creates a PDFont object based on the font dictionary type.
 * @param dictionary Font dictionary.
 * @param resourceCache Resource cache.
 * @return PDFont object.
 */","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @param resourceCache resource cache, only useful for type 3 fonts, can be null
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",167,170,"/**
* Calls m1 with default flag.
* @param doc PDDocument object
* @param input Input stream for font data
* @return PDType0Font object
*/
","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getLastSignatureDictionary,org.apache.pdfbox.pdmodel.PDDocument:getLastSignatureDictionary(),850,859,"/**
 * Retrieves the last PDSignature from a list.
 * Returns null if the list is empty.
 */","* This will return the last signature from the field tree. Note that this may not be the
     * last in time when empty signature fields are created first but signed after other fields.
     * 
     * @return the last signature as <code>PDSignatureField</code>.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncrementalForExternalSigning,org.apache.pdfbox.pdmodel.PDDocument:saveIncrementalForExternalSigning(java.io.OutputStream),1190,1224,"/**
 * Creates an ExternalSigningSupport object for signing the document.
 * @param output Output stream to write the signature data to.
 * @return SigningSupport object.
 */","* Save PDF incrementally without closing for external signature creation scenario. The general sequence is:
     * 
     * <pre>
     *    PDDocument pdDocument = ...;
     *    OutputStream outputStream = ...;
     *    SignatureOptions signatureOptions = ...; // options to specify fine tuned signature options or null for defaults
     *    PDSignature pdSignature = ...;
     *
     *    // add signature parameters to be used when creating signature dictionary
     *    pdDocument.addSignature(pdSignature, signatureOptions);
     *    // prepare PDF for signing and obtain helper class to be used
     *    ExternalSigningSupport externalSigningSupport = pdDocument.saveIncrementalForExternalSigning(outputStream);
     *    // get data to be signed
     *    InputStream dataToBeSigned = externalSigningSupport.getContent();
     *    // invoke signature service
     *    byte[] signature = sign(dataToBeSigned);
     *    // set resulted CMS signature
     *    externalSigningSupport.setSignature(signature);
     *
     *    // last step is to close the document
     *    pdDocument.close();
     * </pre>
     * <p>
     * Note that after calling this method, only {@code close()} method may invoked for {@code PDDocument} instance and
     * only AFTER {@link ExternalSigningSupport} instance is used.
     * </p>
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write the final PDF. It will be closed when the document is closed. It <i><b>must
     * never</b></i> point to the source file or that one will be harmed!
     * @return instance to be used for external signing and setting CMS signature
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream or signature options were
     * not set.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(java.util.List,boolean)",227,317,"/**
 * Processes PDF fields, potentially refreshing appearances.
 * @param fields List of fields to process.
 * @param refreshAppearances Flag to refresh appearances.
 */","* This will flatten the specified form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * @param fields a list of fields to be flattened
     * @param refreshAppearances if set to true the appearances for the form field widgets will be updated
     * @throws IOException if something went wrong flattening the fields",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",278,281,"/**
* Calls overloaded method with null signature object.
* @param sigObject Signature object
* @param options Signature options
*/","* Add parameters of signature to be created externally. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",296,299,"/**
* Calls m1 with default SignatureOptions.
* @param sigObject PDSignature object
* @param signatureInterface SignatureInterface implementation
*/
","* Add a signature to be created using the instance of given interface.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     * 
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormJoinFieldsMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1270,1274,"/**
* Copies form data from srcAcroForm to destAcroForm using cloner.
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.File),214,221,"/**
 * Writes to a file using a BufferedWriter, calls m1(writer).
 * @param fileName File to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,addLinePoints,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:addLinePoints(org.apache.pdfbox.pdmodel.graphics.shading.Line,int[][])",125,131,"/**
* Iterates through line points, calls m3 with calculated values.
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,strokePath,org.apache.pdfbox.rendering.PageDrawer:strokePath(),793,805,"/**
 * Draws a masked graphic based on conditions.
 * Uses internal methods for drawing and cleanup.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawGlyph,"org.apache.pdfbox.rendering.PageDrawer:drawGlyph(java.awt.geom.GeneralPath,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",525,575,"/**
* Renders a glyph based on the provided parameters and state.
*/","* Renders a glyph.
     * 
     * @param path the GeneralPath for the glyph
     * @param font the font
     * @param code character code
     * @param displacement the glyph's displacement (advance)
     * @param at the transformation
     * @throws IOException if something went wrong",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillPath,org.apache.pdfbox.rendering.PageDrawer:fillPath(int),807,860,"/**
 * Renders a line path with specified winding rule, handles antialiasing, and clipping.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawImage,org.apache.pdfbox.rendering.PageDrawer:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage),1074,1262,"/**
 * Draws a PDF image, handling subsampling and masks.
 * @param pdImage The image to draw.
 */",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroup,org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),1656,1660,"/**
* Processes a PDTransparencyGroup, calling m1 with the graphics.
*/",,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildIndexImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",211,255,"/**
 * Creates a PDImageXObject from a PNGConverterState, handling PLTE and tRNS chunks.
 * @param doc PDDocument object
 * @param state PNGConverterState object
 * @return PDImageXObject or null if an error occurs
 */",* Build a indexed image,,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,org.apache.pdfbox.rendering.PDFRenderer:renderImage(int),192,195,"/**
 * Creates an image from a page.
 * @param pageIndex Index of the page to capture (starts at 0)
 * @throws IOException if an I/O error occurs
 */
","* Returns the given page as an RGB image at 72 DPI
     * @param pageIndex the zero-based index of the page to be converted.
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D)",360,363,"/**
 * Calls m1 with a default quality setting.
 * @param pageIndex Page index.
 * @param graphics Graphics context.
 */
","* Renders a given page to an AWT Graphics2D instance at 72 DPI.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @throws IOException if the PDF cannot be read",,,True,21
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,64,"/**
* Processes arguments using an operator, handling COSString input.
* @param operator The operator to use.
* @param arguments List of COSBase arguments.
*/
",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,62,"/**
* Processes arguments for an operator, returning if invalid.
* @param operator The operator to process.
* @param arguments List of COSBase arguments.
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:generateNormalAppearance(),81,164,"/**
* Processes annotation based on its type, setting background color.
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFont,org.apache.pdfbox.pdmodel.PDResources:getFont(org.apache.pdfbox.cos.COSName),142,182,"/**
 * Retrieves a PDFont by name, using caches if available.
 * @param name Font name; returns a PDFont object.
 */","* Returns the font resource with the given name, or null if none exists.
     *
     * @param name Name of the font resource.
     * @return the font with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
* Retrieves a PDFont from a COSDictionary.
* @param dictionary COSDictionary containing font information
* @throws IOException if an I/O error occurs
*/
","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(),192,208,"/**
 * Processes fields, handles unsupported flattening, and calls m5.
 * Uses m1, m4, and m5; logs an error if m1 returns true.
 */","* This will flatten all form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * <p>
     * The appearances for the form fields widgets will <strong>not</strong> be generated
     * </p>
     * 
     * @throws IOException if something went wrong flattening the fields",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),259,262,"/**
* Calls m1 with default SignatureOptions.
* @param sigObject The signature object to process.
* @throws IOException If an I/O error occurs.
*/
","* Add parameters of signature to be created externally using default signature options. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeAcroForm,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",1222,1259,"/**
* Merges form data from srcCatalog to destCatalog, handling errors.
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.lang.String),230,233,"/**
 * Overloads m1 to accept a filename string.
 * @param fileName The name of the file to process.
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,calcPixelTable,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:calcPixelTable(java.util.List,int[][],java.awt.Rectangle)",80,123,"/**
 * Processes a list of shaded triangles, rendering or masking them.
 */","* Get the points from the triangles, calculate their color and add point-color mappings.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showFontGlyph,"org.apache.pdfbox.rendering.PageDrawer:showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",495,513,"/**
* Renders a glyph from a vector font to a PDF page.
* @param textRenderingMatrix Transformation matrix.
* @param font PDFont object.
*/",,,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillAndStrokePath,org.apache.pdfbox.rendering.PageDrawer:fillAndStrokePath(int),948,956,"/**
* Applies winding rule to the current path and updates linePath.
*/","* Fills and then strokes the path.
     *
     * @param windingRule The winding rule this path will use.
     * @throws IOException If there is an IO error while filling the path.",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPng,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",132,206,"/**
 * Creates a PDImageXObject from PNG data, validating parameters.
 * @param doc PDDocument to add image to.
 * @param state PNGConverterState containing PNG data.
 * @return PDImageXObject or null if invalid PNG format.
 */","* Convert the image using the state.
     *
     * @param doc   the document to put the image in
     * @param state the parser state containing the PNG chunks.
     * @return null or the converted image",,,True,22
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,process,"org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",50,78,"/**
 * Sets font size and font for PDF context based on arguments.
 * @param operator Operator object.
 * @param arguments List of COSBase arguments.
 */",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,ensureFontResources,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:ensureFontResources(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",231,265,"/**
* Handles font resources for a variable text field.
* Retrieves and adds missing fonts if needed.
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:generateNormalAppearance(),71,361,"/**
 * Draws a free text annotation. Handles border effects.
 */",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,validateAndEnsureAcroFormResources,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:validateAndEnsureAcroFormResources(),134,180,"/**
* Copies missing widget fonts to the AcroForm resources.
*/",,,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFont,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFont(java.util.List),146,176,"/**
* Sets font properties from operands. Throws IOException if operands are missing or font not found.
*/","* Process the set font and font size operator.
     * 
     * @param operands the font name and size
     * @throws IOException in case there are missing operators or the font is not within the resources",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,copyNeededResourcesTo,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),309,325,"/**
 * Adds a font to the appearance stream resources if it's missing.
 * @param appearanceStream The appearance stream to modify.
 */
","* Copies any needed resources from the document’s DR dictionary into the stream’s Resources
     * dictionary. Resources with the same name shall be left intact.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFont(),78,87,"/**
 * Retrieves a PDFont object from the font setting.
 * @return PDFont object or null if no font is found.
 */
","* This will get the font for this font setting.
     *
     * @return The font for this setting of null if one was not found.
     *
     * @throws IOException If there is an error getting the font.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,appendDocument,"org.apache.pdfbox.multipdf.PDFMergerUtility:appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",510,847,"/**
 * Merges a source PDF document into a destination PDF document.
 * Handles metadata, outlines, and other document properties.
 */","* append all pages from source to destination.
     *
     * @param destination the document to receive the pages
     * @param source the document originating the new pages
     *
     * @throws IOException If there is an error accessing data from either
     * document.",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPNGImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])",113,123,"/**
 * Creates a PDImageXObject from image data.
 * @param doc PDDocument object
 * @param imageData Image data as bytes
 * @return PDImageXObject or null if creation fails
 */
","* Try to convert a PNG into a PDImageXObject. If for any reason the PNG can not
     * be converted, null is returned.
     * <p>
     * This usually means the PNG structure is damaged (CRC error, etc.) or it uses
     * some features which can not be mapped to PDF.
     *
     * @param doc       the document to put the image in
     * @param imageData the byte data of the PNG
     * @return null or the PDImageXObject built from the png",,,True,23
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveFieldsFromWidgets,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveFieldsFromWidgets(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),78,113,"/**
 * Rebuilds form fields from widgets in the document.
 * Populates the acroForm with the extracted fields.
 */",,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processOperator,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",123,138,"/**
 * Processes operator based on its type, calling m1 or m2.
 * @param operator The operator to process.
 * @param operands Operands for the operator.
 */
","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",439,482,"/**
 * Processes annotation appearance stream and writes to output.
 * @param widget The annotation widget.
 * @param appearanceStream Appearance stream to process.
 */",* Constructs and sets new contents for given appearance stream.,,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,copyIntoGraphicsState,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState),82,190,"/**
* Applies graphics state settings from dictionary keys to the GS.
*/","* This will implement the gs operator.
     *
     * @param gs The state to copy this dictionaries values into.
     *
     * @throws IOException If there is an error copying font information.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,legacyMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:legacyMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",444,499,"/**
* Merges sources into a new PDF document with given parameters.
* @param streamCacheCreateFunction Function to create a PDF stream cache.
* @param compressParameters Compression parameters to apply.
*/","* Merge the list of source documents, saving the result in the destination file.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String,org.apache.pdfbox.pdmodel.graphics.image.CustomFactory)",362,410,"/**
* Creates a PDImageXObject from a byte array, supporting various image types.
* @param document PDDocument to add the image to
* @param byteArray Image data as bytes
* @param name Image name
* @param customFactory Custom image factory
* @return PDImageXObject or throws IllegalArgumentException
*/","* Create a PDImageXObject from an image byte array. This overloaded version allows providing 
     * a custom factory to handle specific image formats, such as BMP and GIF, or to act as a 
     * fallback strategy when the default converters (e.g., for PNG or TIFF) fail.
     *
     * @param document the document that shall use this PDImageXObject.
     * @param byteArray bytes from an image file.
     * @param name name of image file for exception messages, can be null.
     * @param customFactory optional factory used to handle BMP, GIF, or fallback cases 
     *                       (e.g., for PNG or TIFF). If {@code null}, this method delegates to
     *                       {@link #createFromByteArray(PDDocument, byte[], String)}.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,24
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:process(),60,76,"/**
 * Processes the PDF form if it exists.
 */",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processAppearanceStringOperators,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processAppearanceStringOperators(byte[]),96,114,"/**
 * Parses PDF stream content, extracting operators and arguments.
 * @param content byte array representing the PDF stream content
 * @throws IOException if an I/O error occurs during parsing
 */
","* Processes the operators of the given content stream.
     *
     * @param content the content to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,process,"org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,70,"/**
* Executes a graphics state operator with arguments.
* @param operator The operator to execute.
* @param arguments Arguments for the operator.
*/",,,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",362,373,"/**
 * Creates a stream cache based on merge mode.
 * @param streamCacheCreateFunction Function to create stream cache.
 * @param compressParameters Compression parameters to use.
 */","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * @param compressParameters defines if compressed object streams are enabled
     * 
     * @throws IOException If there is an error saving the document.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",341,344,"/**
 * Creates a PDImageXObject with a null properties object.
 * @param document The document to add the image to.
 * @param byteArray Image data.
 * @param name Image name.
 * @return The created PDImageXObject.
 */
","* Create a PDImageXObject from bytes of an image file. The file format is determined by the
     * file content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG.
     * This is a convenience method that calls {@link JPEGFactory#createFromByteArray},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param byteArray bytes from an image file.
     * @param document the document that shall use this PDImageXObject.
     * @param name name of image file for exception messages, can be null.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True,25
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,apply,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:apply(),32,58,"/**
 * Processes AcroForm defaults, orphan widgets, and generates appearances.
 */",,,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:<init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)",73,88,"/**
 * Initializes with default appearance and resources.
 * @param defaultAppearance COSString for appearance.
 * @param defaultResources PDResources for default resources.
 */
","* Constructor for reading an existing DA string.
     * 
     * @param defaultResources DR entry
     * @param defaultAppearance DA entry
     * @throws IOException If the DA could not be parsed",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),345,348,"/**
* Creates a stream cache using the provided function.
* @param streamCacheCreateFunction Function to create the cache.
* @throws IOException if an I/O error occurs.
*/
","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True,26
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getWidgetDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),339,344,"/**
 * Creates a PDDefaultAppearanceString from a widget's DA attribute.
 * @param widget Annotation widget
 * @return PDDefaultAppearanceString object
 */
",,,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearanceString(),96,106,"/**
* Creates a default appearance string from COS data.
* @return PDDefaultAppearanceString object.
*/","* Get the default appearance.
     *
     * This is an inheritable attribute.
     *
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     *
     * @return the DA element of the dictionary object",,,True,27
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceValue(java.lang.String),188,272,"/**
 * Processes annotation widgets within a form field, creating/updating appearance streams.
 */","* This is the public method for setting the appearance stream.
     *
     * @param apValue the String value which the appearance should represent
     * @throws IOException If there is an error creating the stream.",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText),113,128,"/**
 * Initializes the helper with a field, retrieves default appearance.
 * @param field The PDVariableText field to process.
 * @throws IOException if default appearance string processing fails.
 */
","* Constructs a COSAppearance from the given field.
     *
     * @param field the field which you wish to control the appearance of
     * @throws IOException",,,True,28
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:constructAppearances(),78,93,"/**
 * Generates appearance data; uses helper class.
 * Uses m1() result; sets helper's data based on it.
 */",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:constructAppearances(),81,87,"/**
 * Initializes and calls AppearanceGeneratorHelper with an empty string.
 */",,,,True,29
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:constructAppearances(),257,263,"/**
 * Delegates appearance generation using AppearanceGeneratorHelper.
 * Uses the result of m1() to configure the helper.
 */",,,,True,29
